<?php

declare(strict_types=1);

namespace Dew\Acs\PaiDsw;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createInstance(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstance(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result startInstance(array $arguments = [])
 * @method \Http\Promise\Promise startInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstance(array $arguments = [])
 * @method \Http\Promise\Promise stopInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result getInstance(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listInstances(array $arguments = [])
 * @method \Http\Promise\Promise listInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceEvents(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceEventsAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstanceLabels(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceLabelsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceLabels(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceLabelsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstances(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstances(array $arguments = [])
 * @method \Http\Promise\Promise stopInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getLifecycle(array $arguments = [])
 * @method \Http\Promise\Promise getLifecycleAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceMetrics(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result getResourceGroupStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getResourceGroupStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceStatistics(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceShutdownTimer(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceShutdownTimerAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceShutdownTimer(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceShutdownTimerAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceShutdownTimer(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceShutdownTimerAsync($arguments = [])
 * @method \Dew\Acs\Result createIdleInstanceCuller(array $arguments = [])
 * @method \Http\Promise\Promise createIdleInstanceCullerAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIdleInstanceCuller(array $arguments = [])
 * @method \Http\Promise\Promise deleteIdleInstanceCullerAsync($arguments = [])
 * @method \Dew\Acs\Result getIdleInstanceCuller(array $arguments = [])
 * @method \Http\Promise\Promise getIdleInstanceCullerAsync($arguments = [])
 * @method \Dew\Acs\Result listEcsSpecs(array $arguments = [])
 * @method \Http\Promise\Promise listEcsSpecsAsync($arguments = [])
 * @method \Dew\Acs\Result getUserConfig(array $arguments = [])
 * @method \Http\Promise\Promise getUserConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createDiagnosis(array $arguments = [])
 * @method \Http\Promise\Promise createDiagnosisAsync($arguments = [])
 * @method \Dew\Acs\Result getToken(array $arguments = [])
 * @method \Http\Promise\Promise getTokenAsync($arguments = [])
 * @method \Dew\Acs\Result getMetrics(array $arguments = [])
 * @method \Http\Promise\Promise getMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result getUserCommand(array $arguments = [])
 * @method \Http\Promise\Promise getUserCommandAsync($arguments = [])
 * @method \Dew\Acs\Result listSystemLogs(array $arguments = [])
 * @method \Http\Promise\Promise listSystemLogsAsync($arguments = [])
 */
final class PaiDswClient extends AcsClient
{
    //
}
