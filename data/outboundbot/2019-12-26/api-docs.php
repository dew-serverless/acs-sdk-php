<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'OutboundBot',
    'version' => '2019-12-26',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 66680,
      'title' => '实例管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateInstance',
        1 => 'DescribeInstance',
        2 => 'ListInstances',
        3 => 'ModifyInstance',
        4 => 'DeleteInstance',
      ),
    ),
    1 => 
    array (
      'id' => 66704,
      'title' => '话术管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateGlobalQuestion',
        1 => 'CreateIntent',
        2 => 'CreateScript',
        3 => 'DeleteGlobalQuestion',
        4 => 'DeleteScript',
        5 => 'ModifyGlobalQuestion',
        6 => 'ModifyScript',
        7 => 'ModifyScriptVoiceConfig',
        8 => 'ModifyTTSConfig',
        9 => 'DescribeGlobalQuestion',
        10 => 'DescribeScript',
        11 => 'DescribeScriptVoiceConfig',
        12 => 'ListScripts',
        13 => 'ListScriptVoiceConfigs',
        14 => 'ListTags',
        15 => 'QueryScriptsByStatus',
        16 => 'ListDialogueFlows',
        17 => 'PublishScript',
        18 => 'PublishScriptForDebug',
        19 => 'RollbackScript',
        20 => 'SubmitScriptReview',
        21 => 'WithdrawScriptReview',
        22 => 'ExportScript',
        23 => 'InflightTaskTimeout',
        24 => 'TaskPreparing',
        25 => 'DuplicateScript',
      ),
    ),
    2 => 
    array (
      'id' => 66652,
      'title' => '话术声音配置',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeTTSConfig',
        1 => 'DescribeTTSDemo',
      ),
    ),
    3 => 
    array (
      'id' => 191413,
      'title' => '任务组管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateJobGroup',
        1 => 'DescribeJobGroup',
        2 => 'ModifyJobGroup',
        3 => 'ListJobGroups',
        4 => 'ListJobGroupsAsync',
        5 => 'DeleteJobGroup',
      ),
    ),
    4 => 
    array (
      'id' => 66687,
      'title' => '任务管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateBatchJobs',
        1 => 'StartJob',
        2 => 'ModifyBatchJobs',
        3 => 'DescribeJob',
        4 => 'ListJobs',
        5 => 'QueryJobs',
        6 => 'ListJobsByGroup',
        7 => 'CancelJobs',
        8 => 'ResumeJobs',
        9 => 'SubmitBatchJobs',
        10 => 'SuspendJobs',
      ),
    ),
    5 => 
    array (
      'id' => 191414,
      'title' => '通话录音',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DownloadRecording',
      ),
    ),
    6 => 
    array (
      'id' => 66671,
      'title' => '资源标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTag',
        1 => 'ModifyTagGroups',
        2 => 'DescribeTagHitsSummary',
      ),
    ),
    7 => 
    array (
      'id' => 189116,
      'title' => '标注',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateAnnotationMission',
        1 => 'SaveAnnotationMissionTagInfoList',
        2 => 'SaveAnnotationMissionSessionList',
        3 => 'GetAnnotationMissionTagInfoList',
        4 => 'ModifyAnnotationMission',
        5 => 'ListAnnotationMissionSession',
        6 => 'ListAnnotationMission',
        7 => 'GetAnnotationMissionSummary',
      ),
    ),
    8 => 
    array (
      'id' => 66655,
      'title' => '对话外呼',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateDialogueFlow',
        1 => 'CreateOutboundCallNumber',
        2 => 'DeleteOutboundCallNumber',
        3 => 'DeleteDialogueFlow',
        4 => 'ModifyOutboundCallNumber',
        5 => 'ModifyDialogueFlow',
        6 => 'ListOutboundCallNumbers',
        7 => 'ListScriptPublishHistories',
        8 => 'ListGlobalQuestions',
        9 => 'AssignJobs',
        10 => 'SubmitRecording',
        11 => 'Dialogue',
        12 => 'RecordFailure',
      ),
    ),
    9 => 
    array (
      'id' => 66675,
      'title' => '意图',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteIntent',
        1 => 'ModifyIntent',
        2 => 'DescribeIntent',
        3 => 'ListIntents',
      ),
    ),
    10 => 
    array (
      'id' => 178376,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateBatchRepeatJob',
        1 => 'CreateJobDataParsingTask',
        2 => 'CreateJobGroupExportTask',
        3 => 'DeleteContactBlockList',
        4 => 'DeleteContactWhiteList',
        5 => 'DescribeDialogueNodeStatistics',
        6 => 'DescribeDsReports',
        7 => 'DescribeGroupExecutingInfo',
        8 => 'DescribeIntentStatistics',
        9 => 'DescribeJobDataParsingTaskProgress',
        10 => 'DescribeJobGroupExportTaskProgress',
        11 => 'GetAsrServerInfo',
        12 => 'GetAfterAnswerDelayPlayback',
        13 => 'GetEffectiveDays',
        14 => 'QueryJobsWithResult',
        15 => 'SaveAfterAnswerDelayPlayback',
        16 => 'SaveBaseStrategyPeriod',
        17 => 'SaveContactBlockList',
        18 => 'SaveContactWhiteList',
        19 => 'SaveEffectiveDays',
        20 => 'SaveMaxAttemptsPerDay',
        21 => 'SuspendCall',
        22 => 'SuspendCallWithFile',
        23 => 'ChangeResourceGroup',
        24 => 'GetTaskByUuid',
        25 => 'ListResourceTags',
        26 => 'ListTagResources',
        27 => 'TagResources',
        28 => 'UntagResources',
        29 => 'GetConcurrentConversationQuota',
        30 => 'GetCurrentConcurrency',
        31 => 'TerminateCall',
        32 => 'ListDownloadTasks',
        33 => 'CreateDownloadUrl',
        34 => 'SearchTask',
        35 => 'CreateNumberDistrictInfoParsingTask',
        36 => 'CreateNumberDistrictInfoDownloadUrl',
        37 => 'GetNumberDistrictInfoTemplateDownloadUrl',
        38 => 'ApplyNumberDistrictInfoParsingResult',
        39 => 'DismissNumberDistrictInfoParsingResult',
        40 => 'DeleteAllNumberDistrictInfo',
        41 => 'DescribeNumberDistrictInfoStatus',
        42 => 'ListChatbotInstances',
        43 => 'CreateInstanceBindNumber',
        44 => 'CreateTaskExportTask',
        45 => 'DescribeTenantBindNumber',
        46 => 'ListAllTenantBindNumberBinding',
        47 => 'GenerateUploadUrl',
        48 => 'UploadScriptRecording',
        49 => 'DownloadScriptRecording',
        50 => 'ListScriptRecording',
        51 => 'DeleteScriptRecording',
        52 => 'ListSchedulerInstances',
      ),
    ),
    11 => 
    array (
      'id' => 178471,
      'title' => '已作废',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryScriptWaveforms',
        1 => 'ImportScript',
        2 => 'DeleteScriptWaveform',
        3 => 'CreateScriptWaveform',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'CreateInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '第一个实例',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例描述',
            'type' => 'string',
            'required' => false,
            'example' => '这个是第一的实例',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxConcurrentConversation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例最大并发',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              14 => '14',
            ),
            'example' => '4',
          ),
        ),
        3 => 
        array (
          'name' => 'NluServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型

Managed:智能外呼产品默认智能语音交互产品服务（公共服务）

Authorized:公有云客户自己购买的智能语音交互产品服务（客户私有服务），通过场景管理-编辑-调用服务-自定义服务完成授权',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Authorized' => '授权',
              'Provided' => '私有',
            ),
            'example' => 'Provided',
            'enum' => 
            array (
              0 => 'Managed',
              1 => 'Authorized',
              2 => 'Provided',
              3 => 'Baseme',
              4 => 'Ant',
              5 => 'Notification',
              6 => 'MyBankJustice',
              7 => 'DialogStudio',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组id',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmwd4qr3z773y',
          ),
        ),
        5 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码',
              'type' => 'string',
              'required' => false,
              'example' => '["95187"]',
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Instance' => 
              array (
                'description' => '实例信息',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间，单位毫秒',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578469042851',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '创建者id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '435986',
                  ),
                  'OwnerName' => 
                  array (
                    'description' => '所有者名称',
                    'type' => 'string',
                    'example' => 'xxxx',
                  ),
                  'InstanceDescription' => 
                  array (
                    'description' => '实例描述',
                    'type' => 'string',
                    'example' => '这个是第一个实例',
                  ),
                  'InstanceName' => 
                  array (
                    'description' => '实例名字',
                    'type' => 'string',
                    'example' => '第一个实例',
                  ),
                  'CreatorName' => 
                  array (
                    'description' => '创建者名字',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'ResourceGroupId' => 
                  array (
                    'description' => '资源组id',
                    'type' => 'string',
                    'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                  ),
                  'MaxConcurrentConversation' => 
                  array (
                    'description' => '实例最大并发',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '4',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceName.Duplicated',
            'errorMessage' => 'The specified InstanceName already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'LimitExceeded.ConcurrentConversation',
            'errorMessage' => 'The maximum number of concurrent conversations is exceeded.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Instance\\": {\\n    \\"CreationTime\\": 1578469042851,\\n    \\"InstanceId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n    \\"CreatorId\\": 435986,\\n    \\"OwnerName\\": \\"xxxx\\",\\n    \\"InstanceDescription\\": \\"这个是第一个实例\\",\\n    \\"InstanceName\\": \\"第一个实例\\",\\n    \\"CreatorName\\": \\"xxx\\",\\n    \\"ResourceGroupId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n    \\"MaxConcurrentConversation\\": 4\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Instance>\\n    <InstanceDescription>这个是第一个的实例</InstanceDescription>\\n    <creationTime>1578469042851</creationTime>\\n    <InstanceId>90515b5-6115-4ccf-83e2-52d5bfaf2ddf</InstanceId>\\n    <InstanceName>第一个实例</InstanceName>\\n    <MaxConcurrentConversation>4</MaxConcurrentConversation>\\n</Instance>\\n<requestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</requestId>\\n<success>true</success>","errorExample":""}]',
      'title' => '创建业务实例',
      'summary' => '创建一个智能外呼业务实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Instance' => 
              array (
                'description' => '实例信息',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578469042851',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '创建者id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '435986',
                  ),
                  'OwnerName' => 
                  array (
                    'description' => '实例拥有者名字',
                    'type' => 'string',
                    'example' => 'xxxx',
                  ),
                  'InstanceDescription' => 
                  array (
                    'description' => '实例描述',
                    'type' => 'string',
                    'example' => '这个是第一个实例',
                  ),
                  'InstanceName' => 
                  array (
                    'description' => '实例名字',
                    'type' => 'string',
                    'example' => '第一个实例',
                  ),
                  'CreatorName' => 
                  array (
                    'description' => '创建者名字',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'ResourceGroupId' => 
                  array (
                    'description' => '资源组id',
                    'type' => 'string',
                    'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                  ),
                  'MaxConcurrentConversation' => 
                  array (
                    'description' => '实例最大并发',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '4',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Instance\\": {\\n    \\"CreationTime\\": 1578469042851,\\n    \\"InstanceId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n    \\"CreatorId\\": 435986,\\n    \\"OwnerName\\": \\"xxxx\\",\\n    \\"InstanceDescription\\": \\"这个是第一个实例\\",\\n    \\"InstanceName\\": \\"第一个实例\\",\\n    \\"CreatorName\\": \\"xxx\\",\\n    \\"ResourceGroupId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n    \\"MaxConcurrentConversation\\": 4\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeInstanceResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Instance>\\n        <CreationTime>1578469042851</CreationTime>\\n        <InstanceId>90515b5-6115-4ccf-83e2-52d5bfaf2ddf</InstanceId>\\n        <CreatorId>435986</CreatorId>\\n        <OwnerName>xxxx</OwnerName>\\n        <InstanceDescription>这个是第一个实例</InstanceDescription>\\n        <InstanceName>第一个实例</InstanceName>\\n        <CreatorName>xxx</CreatorName>\\n        <ResourceGroupId>90515b5-6115-4ccf-83e2-52d5bfaf2ddf</ResourceGroupId>\\n        <MaxConcurrentConversation>4</MaxConcurrentConversation>\\n    </Instance>\\n</DescribeInstanceResponse>","errorExample":""}]',
      'title' => '查询业务实例信息',
      'summary' => '查询智能外呼业务实例信息。',
    ),
    'ListInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组id',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm3iugit3uw7a',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例的标签列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源组标签key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'name',
                ),
                'Value' => 
                array (
                  'description' => '资源组标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'xxx',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Instances' => 
              array (
                'description' => '实例列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '	1578469042851',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                    ),
                    'OwnerName' => 
                    array (
                      'description' => '主账号名称',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'CreatorId' => 
                    array (
                      'description' => '创建者id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '34234',
                    ),
                    'InstanceDescription' => 
                    array (
                      'description' => '智能外呼实例描述',
                      'type' => 'string',
                      'example' => '这是一个实例',
                    ),
                    'InstanceName' => 
                    array (
                      'description' => '智能外呼实例名称',
                      'type' => 'string',
                      'example' => '回访',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '资源组id',
                      'type' => 'string',
                      'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                    ),
                    'CreatorName' => 
                    array (
                      'description' => '创建者姓名',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'MaxConcurrentConversation' => 
                    array (
                      'description' => '最大允许的外呼并发数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'ResourceTags' => 
                    array (
                      'description' => '标签信息',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签key',
                            'type' => 'string',
                            'example' => 'age',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值',
                            'type' => 'string',
                            'example' => '20',
                          ),
                        ),
                      ),
                      'example' => '[]',
                    ),
                    'IsPreset' => 
                    array (
                      'description' => '是否是预置实例',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Instances\\": [\\n    {\\n      \\"CreationTime\\": 1578469042851,\\n      \\"InstanceId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n      \\"OwnerName\\": \\"xxx\\",\\n      \\"CreatorId\\": 34234,\\n      \\"InstanceDescription\\": \\"这是一个实例\\",\\n      \\"InstanceName\\": \\"回访\\",\\n      \\"ResourceGroupId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n      \\"CreatorName\\": \\"xxx\\",\\n      \\"MaxConcurrentConversation\\": 10,\\n      \\"ResourceTags\\": [\\n        {\\n          \\"Key\\": \\"age\\",\\n          \\"Value\\": \\"20\\"\\n        }\\n      ],\\n      \\"IsPreset\\": false\\n    }\\n  ],\\n  \\"TotalCount\\": 0,\\n  \\"PageNumber\\": 0,\\n  \\"PageSize\\": 0\\n}","errorExample":""},{"type":"xml","example":"<ListInstancesResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Instances>\\n        <InstanceId>90515b5-6115-4ccf-83e2-52d5bfaf2ddf</InstanceId>\\n        <OwnerName>xxx</OwnerName>\\n        <CreatorId>34234</CreatorId>\\n        <InstanceDescription>这是一个实例</InstanceDescription>\\n        <InstanceName>回访</InstanceName>\\n        <ResourceGroupId>90515b5-6115-4ccf-83e2-52d5bfaf2ddf</ResourceGroupId>\\n        <CreatorName>xxx</CreatorName>\\n        <MaxConcurrentConversation>10</MaxConcurrentConversation>\\n        <ResourceTags>\\n            <Key>age</Key>\\n            <Value>20</Value>\\n        </ResourceTags>\\n        <IsPreset>false</IsPreset>\\n    </Instances>\\n</ListInstancesResponse>","errorExample":""}]',
      'title' => '查询业务实例列表',
      'summary' => '查询智能外呼业务实例列表。',
    ),
    'ModifyInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名字',
            'type' => 'string',
            'required' => false,
            'example' => '新实例',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例描述',
            'type' => 'string',
            'required' => false,
            'example' => '这是新的实例',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxConcurrentConversation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大并发',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码',
              'type' => 'string',
              'required' => false,
              'example' => '1**********',
            ),
            'required' => false,
            'example' => '["95187"]',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Instance' => 
              array (
                'description' => '实例信息',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578469042851',
                  ),
                  'InstanceName' => 
                  array (
                    'description' => '实例名字',
                    'type' => 'string',
                    'example' => '第一个实例',
                  ),
                  'CreatorName' => 
                  array (
                    'description' => '创建者名字',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'MaxConcurrentConversation' => 
                  array (
                    'description' => '最大并发',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'OwnerName' => 
                  array (
                    'description' => '所有者名字',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '创建者id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123123',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '90515b5-6115-4ccf-83e2-52d5bfaf2ddf',
                  ),
                  'InstanceDescription' => 
                  array (
                    'description' => '实例描述',
                    'type' => 'string',
                    'example' => '这是第一个实例',
                  ),
                ),
                'example' => '{\'InstanceId\': \'ob369xifpi2074\', \'AutoUpgradeObVersion\': False}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceName.Duplicated',
            'errorMessage' => 'The specified InstanceName already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'LimitExceeded.ConcurrentConversation',
            'errorMessage' => 'The maximum number of concurrent conversations is exceeded.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Instance\\": {\\n    \\"CreationTime\\": 1578469042851,\\n    \\"InstanceName\\": \\"第一个实例\\",\\n    \\"CreatorName\\": \\"xxx\\",\\n    \\"MaxConcurrentConversation\\": 5,\\n    \\"OwnerName\\": \\"xxx\\",\\n    \\"CreatorId\\": 123123,\\n    \\"InstanceId\\": \\"90515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n    \\"InstanceDescription\\": \\"这是第一个实例\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifyInstanceResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Instance>\\n        <CreationTime>1578469042851</CreationTime>\\n        <InstanceName>第一个实例</InstanceName>\\n        <CreatorName>xxx</CreatorName>\\n        <MaxConcurrentConversation>5</MaxConcurrentConversation>\\n        <OwnerName>xxx</OwnerName>\\n        <CreatorId>123123</CreatorId>\\n        <InstanceId>90515b5-6115-4ccf-83e2-52d5bfaf2ddf</InstanceId>\\n        <InstanceDescription>这是第一个实例</InstanceDescription>\\n    </Instance>\\n</ModifyInstanceResponse>","errorExample":""}]',
      'title' => '修改业务实例',
      'summary' => '修改智能外呼业务实例。',
    ),
    'DeleteInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被删除的实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Message>Success</Message>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除业务实例',
      'summary' => '删除一个智能外呼业务实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateGlobalQuestion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '36fea72b-d6fa-4974-ace7-19ffe3f622fb',
          ),
        ),
        2 => 
        array (
          'name' => 'GlobalQuestionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局话术名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '未识别全局问题',
          ),
        ),
        3 => 
        array (
          'name' => 'GlobalQuestionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术类型，一般设置为 COMMON',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'COMMON',
          ),
        ),
        4 => 
        array (
          'name' => 'Questions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户的触发话术',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["未识别的用户问题"]',
          ),
        ),
        5 => 
        array (
          'name' => 'Answers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回复话术列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["你好,您可以再说一遍吗","不好意思我刚才没有听清"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'GlobalQuestionId' => 
              array (
                'description' => '全局话术id',
                'type' => 'string',
                'example' => 'a546b616-724b-437f-bdb3-629a30c98567',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidGlobalQuestionName.Duplicated',
            'errorMessage' => 'The specified GlobalQuestionName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"GlobalQuestionId\\": \\"a546b616-724b-437f-bdb3-629a30c98567\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>\\n<GlobalQuestionId>F98C298D-4134-45A0-97DE-CF1BA7279A21</GlobalQuestionId>","errorExample":""}]',
      'title' => '创建全局引用话术',
      'summary' => '创建全局引用话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIntent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b06fad9a-cc74-4ab6-b3a5-8d062adebf2c',
          ),
        ),
        2 => 
        array (
          'name' => 'IntentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '是本人',
          ),
        ),
        3 => 
        array (
          'name' => 'IntentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图描述',
            'type' => 'string',
            'required' => false,
            'example' => '确定是本人的意图',
          ),
        ),
        4 => 
        array (
          'name' => 'Utterances',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户触发意图的回答文本列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["是","是的","是啊","嗯嗯","是我","是我，有事吗","对，是","对的","对是我",""]',
          ),
        ),
        5 => 
        array (
          'name' => 'Keywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图的关键字，在List接口可用于过滤查找的意图',
            'type' => 'string',
            'required' => false,
            'example' => '是',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'IntentId' => 
              array (
                'description' => '创建的意图id',
                'type' => 'string',
                'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIntentName.Duplicated',
            'errorMessage' => 'The specified IntentName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"IntentId\\": \\"390515b5-6115-4ccf-83e2-52d5bfaf2ddf\\"\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<IntentId>fa0e21e9-caab-4629-9121-1e341243d599</IntentId>\\n<RequestId>f7cdfae4-899b-4000-8d94-518f79cd5492</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '创建触发话术节点的意图',
      'summary' => '创建触发话术节点的意图。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c46001bc-3ead-4bfd-9a69-4b5b66a4a3f4',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '课程满意度回访',
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术描述',
            'type' => 'string',
            'required' => false,
            'example' => '课程回复话术',
          ),
        ),
        3 => 
        array (
          'name' => 'Industry',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术涉及的行业',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '教育',
          ),
        ),
        4 => 
        array (
          'name' => 'Scene',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术场景',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '回访',
          ),
        ),
        5 => 
        array (
          'name' => 'ChatbotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当Instance的NluServiceType为Authorized或Provided时，需要通过此字段指定话术需要绑定的对话机器人实例id',
            'type' => 'string',
            'required' => false,
            'example' => 'chatbot-cn-IfaUfqaUnb',
          ),
        ),
        6 => 
        array (
          'name' => 'AsrConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'asr配置，参数定义

- **appKey**：阿里云账号appKey。
- **maxEndSilence**：语音端点检测时长。
- **silenceTimeout**：静默超时，单位秒，用户静默N秒后超时。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"appKey\\":\\"kknxKIhTTUcpCzYX\\",\\"maxEndSilence\\":\\"400\\",\\"silenceTimeout\\":\\"5\\"}',
          ),
        ),
        7 => 
        array (
          'name' => 'TtsConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'tts配置，参数定义

- **voice**：发音人。
- **volume**：音量，取值范围：0～100。默认值：50。
- **speechRate**：语速，取值范围：-500～500，默认值：0。
- **pitchRate**：语调，取值范围：-500～500，默认值：0。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"voice\\":\\"aixia\\",\\"volume\\":\\"50\\",\\"speechRate\\":\\"-150\\",\\"pitchRate\\":\\"0\\"}',
          ),
        ),
        8 => 
        array (
          'name' => 'ScriptContent',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '通知类实例，传入话术列表。
已废弃。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '通知类实例，传入话术列表。
已废弃。',
              'type' => 'string',
              'required' => false,
              'example' => '您好，您昨晚在李佳琦直播间下单的娜薇诗椰子水二代精华2支装还未付款，超时未支付会自动关闭订单，活动错过不再有奥。',
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 100,
          ),
        ),
        9 => 
        array (
          'name' => 'ScriptWaveform',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '通知类实例，传入话术声音列表。
已废弃。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '通知类实例，传入话术声音列表。
已废弃。',
              'type' => 'string',
              'required' => false,
              'example' => '[]',
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'MiniPlaybackEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '承接语配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'NewBargeInEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '优雅打断配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'LongWaitEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能断句配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'EmotionEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '情绪识别配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'AgentKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        15 => 
        array (
          'name' => 'AgentLlm',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        16 => 
        array (
          'name' => 'AgentId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Script' => 
              array (
                'description' => '话术信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '任务状态。取值范围：

- **DRAFTED**：草稿态。
- **INITIALIZE_IN_PROGRESS**：正在初始化。
- **PUBLISHED**：已发布。
- **PUBLISH_IN_PROGRESS**：正在发布。
- **ROLLBACK_IN_PROGRESS**：正在回滚。
- **EXAMINE_IN_PROGRESS**：待审核。
- **PUBLISHED_AND_EXAMINE_IN_PROGRESS**：已发布待审核状态。
- **PUBLISH_FAILED**：发布失败。
- **ROLLBACK_FAILED**：回滚失败。
- **IMPORT_IN_PROGRESS**：正在导入。
- **IMPORT_FAILED**：导入失败。',
                    'type' => 'string',
                    'example' => 'DRAFTED',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '话术更新时间（单位：毫秒）',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578474045152',
                  ),
                  'Industry' => 
                  array (
                    'description' => '行业',
                    'type' => 'string',
                    'example' => '教育',
                  ),
                  'ScriptDescription' => 
                  array (
                    'description' => '话术描述',
                    'type' => 'string',
                    'example' => '课程满意度回访',
                  ),
                  'IsDrafted' => 
                  array (
                    'description' => '是否是草稿',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'DebugStatus' => 
                  array (
                    'description' => '话术调试状态',
                    'type' => 'string',
                    'example' => 'DRAFTED',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '8c58d3e0-bf27-4685-a5a5-65872ec5abc4',
                  ),
                  'IsDebugDrafted' => 
                  array (
                    'description' => '是否是调试的草稿',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术名字',
                    'type' => 'string',
                    'example' => '课程满意度回访',
                  ),
                  'Scene' => 
                  array (
                    'description' => '话术场景',
                    'type' => 'string',
                    'example' => '回访',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidScriptName.Duplicated',
            'errorMessage' => 'The specified ScriptName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Script\\": {\\n    \\"Status\\": \\"DRAFTED\\",\\n    \\"UpdateTime\\": 1578474045152,\\n    \\"Industry\\": \\"教育\\",\\n    \\"ScriptDescription\\": \\"课程满意度回访\\",\\n    \\"IsDrafted\\": true,\\n    \\"DebugStatus\\": \\"DRAFTED\\",\\n    \\"ScriptId\\": \\"8c58d3e0-bf27-4685-a5a5-65872ec5abc4\\",\\n    \\"IsDebugDrafted\\": true,\\n    \\"ScriptName\\": \\"课程满意度回访\\",\\n    \\"Scene\\": \\"回访\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateScriptResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <Script>\\n        <Status>DRAFTED</Status>\\n        <UpdateTime>1578474045152</UpdateTime>\\n        <Industry>教育</Industry>\\n        <ScriptDescription>课程满意度回访</ScriptDescription>\\n        <IsDrafted>true</IsDrafted>\\n        <DebugStatus>DRAFTED</DebugStatus>\\n        <ScriptId>8c58d3e0-bf27-4685-a5a5-65872ec5abc4</ScriptId>\\n        <IsDebugDrafted>true</IsDebugDrafted>\\n        <ScriptName>课程满意度回访</ScriptName>\\n        <Scene>回访</Scene>\\n    </Script>\\n</CreateScriptResponse>","errorExample":""}]',
      'title' => '创建话术',
      'summary' => '创建话术。',
    ),
    'DeleteGlobalQuestion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局话术所在的话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aa279896-64a6-4182-864c-4f2b04ec8d17',
          ),
        ),
        2 => 
        array (
          'name' => 'GlobalQuestionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局话术uuid',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '35f1361e-4377-494c-9f10-4274bda0317f',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除全局引用话术',
      'summary' => '删除全局引用话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b3d5ac22-9643-49c6-aa84-777f6656f9f5',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被删除的话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5c589560-6b9d-4415-a3e0-049c4ff05f56',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除一个话术',
      'summary' => '删除一个话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyGlobalQuestion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8fa1953f-4a84-46d8-b80c-8ce9cf684fb3',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '19ac2375-53e3-477f-abe9-6cd334227981',
          ),
        ),
        2 => 
        array (
          'name' => 'GlobalQuestionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局问题id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ad80de88-1661-445a-92ec-bf88dc45d581',
          ),
        ),
        3 => 
        array (
          'name' => 'GlobalQuestionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局问题名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '你是谁',
          ),
        ),
        4 => 
        array (
          'name' => 'GlobalQuestionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局问题类型',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'COMMON',
          ),
        ),
        5 => 
        array (
          'name' => 'Questions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '问题列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["你是谁","你叫什么"]',
          ),
        ),
        6 => 
        array (
          'name' => 'Answers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局问题的回复',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["你好,我是你的专属客服顾问."]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => '对话流程id',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'DialogueQuestionId' => 
              array (
                'description' => '全局问题id',
                'type' => 'string',
                'example' => 'ad80de88-1661-445a-92ec-bf88dc45d581',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidGlobalQuestionName.Duplicated',
            'errorMessage' => 'The specified GlobalQuestionName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"DialogueQuestionId\\": \\"ad80de88-1661-445a-92ec-bf88dc45d581\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>\\n<GlobalQuestionId>F98C298D-4134-45A0-97DE-CF1BA7279A21</GlobalQuestionId>","errorExample":""}]',
      'title' => '修改全局引用话术',
      'summary' => '修改全局引用话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c6320d3c-fa45-4011-b3b1-acdfabe3a8c6',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c153d0d8-ba04-41c0-8632-453944c9dd0b',
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '续费提醒',
          ),
        ),
        3 => 
        array (
          'name' => 'ScriptDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术描述',
            'type' => 'string',
            'required' => false,
            'example' => '返工回访话术',
          ),
        ),
        4 => 
        array (
          'name' => 'Industry',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '行业',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '电商',
          ),
        ),
        5 => 
        array (
          'name' => 'Scene',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景信息',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '回访',
          ),
        ),
        6 => 
        array (
          'name' => 'ChatbotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '机器人id',
            'type' => 'string',
            'required' => false,
            'example' => 'chatbot-cn-iFZfi7eq6e',
          ),
        ),
        7 => 
        array (
          'name' => 'AsrConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'asr配置',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"AppKey\\":\\"kknxKIhTTUcpCzYX\\"}',
          ),
        ),
        8 => 
        array (
          'name' => 'TtsConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'tts配置信息',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"voice\\":\\"siyue\\",\\"volume\\":\\"50\\",\\"speechRate\\":\\"-150\\",\\"pitchRate\\":\\"0\\"}',
          ),
        ),
        9 => 
        array (
          'name' => 'ScriptContent',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '通知类实例，传入话术列表。
已作废。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '通知类实例，传入话术列表。
已作废。',
              'type' => 'string',
              'required' => false,
              'example' => '您好，您昨晚在李佳琦直播间下单的娜薇诗椰子水二代精华2支装还未付款，超时未支付会自动关闭订单，活动错过不再有奥。',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'ScriptWaveform',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '通知类实例，传入话术声音列表。
已作废。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '通知类实例，传入话术声音列表。
已作废。',
              'type' => 'string',
              'required' => false,
              'example' => '无',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        11 => 
        array (
          'name' => 'NewBargeInEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '优雅打断配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'LongWaitEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能断句配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'MiniPlaybackEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '承接语配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'MiniPlaybackConfigListJsonString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语气承接配置，暂时不支持自定义，默认无需传递该参数。（已作废）',
            'type' => 'string',
            'required' => false,
            'example' => '无',
          ),
        ),
        15 => 
        array (
          'name' => 'NlsConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已作废',
            'type' => 'string',
            'required' => false,
            'example' => '无',
          ),
        ),
        16 => 
        array (
          'name' => 'EmotionEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '情绪识别配置开关',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        17 => 
        array (
          'name' => 'AgentKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        18 => 
        array (
          'name' => 'AgentLlm',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        19 => 
        array (
          'name' => 'AgentId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Script' => 
              array (
                'description' => '话术信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '话术状态',
                    'type' => 'string',
                    'example' => 'PUBLISHED',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578881227000',
                  ),
                  'Industry' => 
                  array (
                    'description' => '行业',
                    'type' => 'string',
                    'example' => '政务',
                  ),
                  'ScriptDescription' => 
                  array (
                    'description' => '话术描述',
                    'type' => 'string',
                    'example' => '返工回访话术',
                  ),
                  'IsDrafted' => 
                  array (
                    'description' => '是否是草稿',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'DebugStatus' => 
                  array (
                    'description' => '话术调试状态',
                    'type' => 'string',
                    'example' => 'DRAFTED',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => 'c153d0d8-ba04-41c0-8632-453944c9dd0b',
                  ),
                  'IsDebugDrafted' => 
                  array (
                    'description' => '是否是调试的草稿',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术名字',
                    'type' => 'string',
                    'example' => '回访话术',
                  ),
                  'Scene' => 
                  array (
                    'description' => '场景',
                    'type' => 'string',
                    'example' => '回访',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidScriptName.Duplicated',
            'errorMessage' => 'The specified ScriptName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Script\\": {\\n    \\"Status\\": \\"PUBLISHED\\",\\n    \\"UpdateTime\\": 1578881227000,\\n    \\"Industry\\": \\"政务\\",\\n    \\"ScriptDescription\\": \\"返工回访话术\\",\\n    \\"IsDrafted\\": true,\\n    \\"DebugStatus\\": \\"DRAFTED\\",\\n    \\"ScriptId\\": \\"c153d0d8-ba04-41c0-8632-453944c9dd0b\\",\\n    \\"IsDebugDrafted\\": true,\\n    \\"ScriptName\\": \\"回访话术\\",\\n    \\"Scene\\": \\"回访\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifyScriptResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <Script>\\n        <Status>PUBLISHED</Status>\\n        <UpdateTime>1578881227000</UpdateTime>\\n        <Industry>政务</Industry>\\n        <ScriptDescription>返工回访话术</ScriptDescription>\\n        <IsDrafted>true</IsDrafted>\\n        <DebugStatus>DRAFTED</DebugStatus>\\n        <ScriptId>c153d0d8-ba04-41c0-8632-453944c9dd0b</ScriptId>\\n        <IsDebugDrafted>true</IsDebugDrafted>\\n        <ScriptName>回访话术</ScriptName>\\n        <Scene>回访</Scene>\\n    </Script>\\n</ModifyScriptResponse>","errorExample":""}]',
      'title' => '修改话术信息',
      'summary' => '修改话术信息。',
    ),
    'ModifyScriptVoiceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bdd49242-114c-4045-b1d1-25ccc1756c75',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1d7a26e0-628b-4c3c-9918-7f2e23273f54',
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptVoiceConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音配置id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e15cc646-50e5-4bc0-87ec-e4f2d1063b90',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音类型，TTS 或者 WAVEFORM',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WAVEFORM',
          ),
        ),
        4 => 
        array (
          'name' => 'ScriptWaveformRelation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术文本和录音的对应关系',
            'type' => 'string',
            'required' => false,
            'example' => '[{"ScriptContent":"请问你是","ScriptWaveformId":"07db2f0a-acb2-4e68-b9f4-66397414f50c"},{"ScriptContent":"吗？","ScriptWaveformId":"c2a69440-03e3-406e-b0a9-a9791fccb31b"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ScriptVoiceConfig' => 
              array (
                'description' => '话术录音配置信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '播音类型',
                    'type' => 'string',
                    'example' => 'WAVEFORM',
                  ),
                  'ScriptVoiceConfigId' => 
                  array (
                    'description' => '录音配置id',
                    'type' => 'string',
                    'example' => '4ddea690-6534-4c88-9cbd-0b5882ec64c0',
                  ),
                  'ScriptContent' => 
                  array (
                    'description' => '语音对应文本',
                    'type' => 'string',
                    'example' => '你好',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => 'bdd49242-114c-4045-b1d1-25ccc1756c75',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '1d7a26e0-628b-4c3c-9918-7f2e23273f54',
                  ),
                  'ScriptWaveformRelation' => 
                  array (
                    'description' => '录音对应关系数据',
                    'type' => 'string',
                    'example' => '[{"ScriptContent":"你好","ScriptWaveformId":"6facc560-9f25-420f-bb0b-99f4299ad0d5"},{"ScriptContent":"吗","ScriptWaveformId":"76f48266-e253-4f44-ab4f-f64f7d38f1b4"}]',
                  ),
                  'Source' => 
                  array (
                    'description' => '话术源',
                    'type' => 'string',
                    'example' => 'DIALOGUE_FLOW',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"ScriptVoiceConfig\\": {\\n    \\"Type\\": \\"WAVEFORM\\",\\n    \\"ScriptVoiceConfigId\\": \\"4ddea690-6534-4c88-9cbd-0b5882ec64c0\\",\\n    \\"ScriptContent\\": \\"你好\\",\\n    \\"InstanceId\\": \\"bdd49242-114c-4045-b1d1-25ccc1756c75\\",\\n    \\"ScriptWaveformRelation\\": \\"[{\\\\\\"ScriptContent\\\\\\":\\\\\\"你好\\\\\\",\\\\\\"ScriptWaveformId\\\\\\":\\\\\\"6facc560-9f25-420f-bb0b-99f4299ad0d5\\\\\\"},{\\\\\\"ScriptContent\\\\\\":\\\\\\"吗\\\\\\",\\\\\\"ScriptWaveformId\\\\\\":\\\\\\"76f48266-e253-4f44-ab4f-f64f7d38f1b4\\\\\\"}]\\",\\n    \\"ScriptId\\": \\"1d7a26e0-628b-4c3c-9918-7f2e23273f54\\",\\n    \\"Source\\": \\"DIALOGUE_FLOW\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>f765d3ee-ec03-4765-b235-6877501d99d1</RequestId>\\n<ScriptVoiceConfig>\\n    <InstanceId>291cfc6a-8703-4bdd-a99d-9cba32d5288a</InstanceId>\\n    <ScriptContent>你的花呗欠款逾期了需要处理，你现在能处理一下吗？</ScriptContent>\\n    <ScriptId>947e0875-b5d4-4b33-b18c-7b2cf85bcb4f</ScriptId>\\n    <ScriptWaveformRelation>[{\\"ScriptContent\\":\\"你好\\",\\"ScriptWaveformId\\":\\"6facc560-9f25-420f-bb0b-99f4299ad0d5\\"},{\\"ScriptContent\\":\\"吗\\",\\"ScriptWaveformId\\":\\"76f48266-e253-4f44-ab4f-f64f7d38f1b4\\"}]</ScriptWaveformRelation>\\n    <Source>DIALOGUE_FLOW</Source>\\n    <Type>WAVEFORM</Type>\\n    <ScriptVoiceConfigId>4ddea690-6534-4c88-9cbd-0b5882ec64c0</ScriptVoiceConfigId>\\n</ScriptVoiceConfig>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '修改话术配置',
      'summary' => '修改话术配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyTTSConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '27244bae-e446-4811-bb1d-f8a07b525af0',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1f1a2ba0-b3e7-4ff9-baf1-6dc8aeac0791',
          ),
        ),
        2 => 
        array (
          'name' => 'Voice',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发音人信息，如：aixia / siyue / xiaoyun',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'aixia',
          ),
        ),
        3 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语速
[-500,500]之间整数。默认值为0。

大于0表示加快语速。

小于0表示减慢语速。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Volume',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '音量
[0,100]之间整数。默认值为50。

大于50表示增大音量。

小于50表示减小音量。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'NlsServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型
Managed:智能外呼产品默认智能语音交互产品服务（公共服务）
Authorized:公有云客户自己购买的智能语音交互产品服务（客户私有服务），通过场景管理-编辑-调用服务-自定义服务完成授权',
            'type' => 'string',
            'required' => false,
            'example' => 'Managed',
          ),
        ),
        6 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语音服务类型 nlsServiceType = Authorized时，此字段用来保存智能语音交互产品项目的appKey',
            'type' => 'string',
            'required' => false,
            'example' => '99****Aw',
          ),
        ),
        7 => 
        array (
          'name' => 'PitchRate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '语调 [-500,500]之间整数。默认值为0。

大于0表示升高音高。

小于0表示降低音高。',
            'description' => '语调 [-500,500]之间整数。默认值为0。

大于0表示升高音高。

小于0表示降低音高。',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'f765d3ee-ec03-4765-b235-6877501d99d1',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TTSConfig' => 
              array (
                'description' => 'tts 配置信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Voice' => 
                  array (
                    'description' => '播音模型',
                    'type' => 'string',
                    'example' => 'xiaoyun',
                  ),
                  'TTSConfigId' => 
                  array (
                    'description' => '配置id',
                    'type' => 'string',
                    'example' => '2a07b634-e15d-445f-bbcb-fc4ea2df7b87',
                  ),
                  'SpeechRate' => 
                  array (
                    'description' => '语速',
                    'type' => 'string',
                    'example' => '50',
                  ),
                  'Volume' => 
                  array (
                    'description' => '音量',
                    'type' => 'string',
                    'example' => '100',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '291cfc6a-8703-4bdd-a99d-9cba32d5288a',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '947e0875-b5d4-4b33-b18c-7b2cf85bcb4f',
                  ),
                  'PitchRate' => 
                  array (
                    'title' => '语调
[-500,500]之间整数。默认值为0。

大于0表示升高音高。

小于0表示降低音高。',
                    'description' => '语调
[-500,500]之间整数。默认值为0。

大于0表示升高音高。

小于0表示降低音高。',
                    'type' => 'string',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"f765d3ee-ec03-4765-b235-6877501d99d1\\",\\n  \\"Success\\": true,\\n  \\"TTSConfig\\": {\\n    \\"Voice\\": \\"xiaoyun\\",\\n    \\"TTSConfigId\\": \\"2a07b634-e15d-445f-bbcb-fc4ea2df7b87\\",\\n    \\"SpeechRate\\": \\"50\\",\\n    \\"Volume\\": \\"100\\",\\n    \\"InstanceId\\": \\"291cfc6a-8703-4bdd-a99d-9cba32d5288a\\",\\n    \\"ScriptId\\": \\"947e0875-b5d4-4b33-b18c-7b2cf85bcb4f\\",\\n    \\"PitchRate\\": \\"0\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifyTTSConfigResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>f765d3ee-ec03-4765-b235-6877501d99d1</RequestId>\\n    <Success>true</Success>\\n    <TTSConfig>\\n        <Voice>xiaoyun</Voice>\\n        <TTSConfigId>2a07b634-e15d-445f-bbcb-fc4ea2df7b87</TTSConfigId>\\n        <SpeechRate>50</SpeechRate>\\n        <Volume>100</Volume>\\n        <InstanceId>291cfc6a-8703-4bdd-a99d-9cba32d5288a</InstanceId>\\n        <ScriptId>947e0875-b5d4-4b33-b18c-7b2cf85bcb4f</ScriptId>\\n        <PitchRate>0</PitchRate>\\n    </TTSConfig>\\n</ModifyTTSConfigResponse>","errorExample":""}]',
      'title' => 'ModifyTTSConfig',
      'summary' => '修改话术的tts配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGlobalQuestion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '7cefbff0-8d50-4d6f-b93c-73cee23c1555',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局话术所在的话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b7ee988b-2837-4bc1-9d56-f76e7c831f60',
          ),
        ),
        2 => 
        array (
          'name' => 'GlobalQuestionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的全局话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e851e242-ad67-4507-96a2-d4114564dcec',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'GlobalQuestion' => 
              array (
                'description' => '全局话术信息',
                'type' => 'object',
                'properties' => 
                array (
                  'GlobalQuestionId' => 
                  array (
                    'description' => '全局话术id',
                    'type' => 'string',
                    'example' => 'f160ec2e-94f2-4c03-87be-ece5b52d5dd9',
                  ),
                  'Answers' => 
                  array (
                    'description' => '回复数组',
                    'type' => 'string',
                    'example' => '["你好,我是你的专属客服顾问."]',
                  ),
                  'GlobalQuestionType' => 
                  array (
                    'description' => '全局话术类型',
                    'type' => 'string',
                    'example' => 'COMMON',
                  ),
                  'GlobalQuestionName' => 
                  array (
                    'description' => '全局话术名字',
                    'type' => 'string',
                    'example' => '你是谁-全局问题',
                  ),
                  'Questions' => 
                  array (
                    'description' => '问题数组',
                    'type' => 'string',
                    'example' => ' ["你是谁","你叫什么"]',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '290e06a5-6de2-4cc8-8a9c-72b7c152256c',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"GlobalQuestion\\": {\\n    \\"GlobalQuestionId\\": \\"f160ec2e-94f2-4c03-87be-ece5b52d5dd9\\",\\n    \\"Answers\\": \\"[\\\\\\"你好,我是你的专属客服顾问.\\\\\\"]\\",\\n    \\"GlobalQuestionType\\": \\"COMMON\\",\\n    \\"GlobalQuestionName\\": \\"你是谁-全局问题\\",\\n    \\"ScriptId\\": \\"290e06a5-6de2-4cc8-8a9c-72b7c152256c\\",\\n    \\"Questions\\": \\" [\\\\\\"你是谁\\\\\\",\\\\\\"你叫什么\\\\\\"]\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<GlobalQuestion>\\n    <Answers>你好,我是你的专属客服顾问.</Answers>\\n    <GlobalQuestionId>f160ec2e-94f2-4c03-87be-ece5b52d5dd9</GlobalQuestionId>\\n    <GlobalQuestionType>COMMON</GlobalQuestionType>\\n    <GlobalQuestionName>你是谁-全局问题</GlobalQuestionName>\\n    <Questions>你是谁</Questions>\\n    <Questions>你叫什么</Questions>\\n    <ScriptId>290e06a5-6de2-4cc8-8a9c-72b7c152256c</ScriptId>\\n</GlobalQuestion>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>8858cdee-bb81-4fa5-84ea-sdjnv</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '返回一个全局的话术的数据',
      'summary' => '返回一个全局的话术的数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '38d2e8ed-04e9-4dac-83b5-a8e57642ef13',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bee7e5b1-5d9a-4389-aa7e-bbbee5353a16',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Script' => 
              array (
                'description' => '话术',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '话术状态',
                    'type' => 'string',
                    'example' => 'DRAFTED',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578881227000',
                  ),
                  'ChatbotId' => 
                  array (
                    'description' => '对话机器人id',
                    'type' => 'string',
                    'example' => 'chatbot-cn-EJfqqa***',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '810b5872-57f0-4b27-80ab-7b3f4d8a6374',
                  ),
                  'IsDebugDrafted' => 
                  array (
                    'description' => '调试版本是否为草稿态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Industry' => 
                  array (
                    'description' => '行业',
                    'type' => 'string',
                    'example' => '金融',
                  ),
                  'ScriptDescription' => 
                  array (
                    'description' => '话术描述',
                    'type' => 'string',
                    'example' => '催收话术',
                  ),
                  'MiniPlaybackEnable' => 
                  array (
                    'description' => '语气承接配置开关',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'IsDrafted' => 
                  array (
                    'description' => '是否是草稿状态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TtsConfig' => 
                  array (
                    'description' => '话术的tts配置',
                    'type' => 'string',
                    'example' => '{\\"voice\\":\\"xiaobei\\",\\"volume\\":\\"50\\",\\"speechRate\\":\\"-150\\",\\"pitchRate\\":\\"0\\"}',
                  ),
                  'DebugStatus' => 
                  array (
                    'description' => '调试话术的状态',
                    'type' => 'string',
                    'example' => 'DRAFTED',
                  ),
                  'AsrConfig' => 
                  array (
                    'description' => 'asr配置',
                    'type' => 'string',
                    'example' => '{\\"AppKey\\":\\"3GHttnsvir1FeWWb\\"}',
                  ),
                  'Scene' => 
                  array (
                    'description' => '场景',
                    'type' => 'string',
                    'example' => '催收',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术名字',
                    'type' => 'string',
                    'example' => '催收话术',
                  ),
                  'NewBargeInEnable' => 
                  array (
                    'description' => '优雅打断配置开关',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'LongWaitEnable' => 
                  array (
                    'description' => '智能断句配置开关',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'EmotionEnable' => 
                  array (
                    'description' => '情绪识别配置开关',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'AgentId' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'AgentKey' => 
                  array (
                    'type' => 'string',
                  ),
                  'AgentLlm' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
                'example' => '{}',
              ),
              'NlsConfig' => 
              array (
                'description' => '已作废',
                'type' => 'string',
                'example' => 'none',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Script\\": {\\n    \\"Status\\": \\"DRAFTED\\",\\n    \\"UpdateTime\\": 1578881227000,\\n    \\"ChatbotId\\": \\"chatbot-cn-EJfqqa***\\",\\n    \\"ScriptId\\": \\"810b5872-57f0-4b27-80ab-7b3f4d8a6374\\",\\n    \\"IsDebugDrafted\\": true,\\n    \\"Industry\\": \\"金融\\",\\n    \\"ScriptDescription\\": \\"催收话术\\",\\n    \\"MiniPlaybackEnable\\": true,\\n    \\"IsDrafted\\": true,\\n    \\"TtsConfig\\": \\"{\\\\\\\\\\\\\\"voice\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"xiaobei\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"volume\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"50\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"speechRate\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"-150\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"pitchRate\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\"}\\",\\n    \\"DebugStatus\\": \\"DRAFTED\\",\\n    \\"AsrConfig\\": \\"{\\\\\\\\\\\\\\"AppKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"3GHttnsvir1FeWWb\\\\\\\\\\\\\\"}\\",\\n    \\"Scene\\": \\"催收\\",\\n    \\"ScriptName\\": \\"催收话术\\",\\n    \\"NewBargeInEnable\\": true,\\n    \\"LongWaitEnable\\": true,\\n    \\"EmotionEnable\\": true,\\n    \\"AgentId\\": 0,\\n    \\"AgentKey\\": \\"\\",\\n    \\"AgentLlm\\": true\\n  },\\n  \\"NlsConfig\\": \\"none\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeScriptResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <Script>\\n        <Status>DRAFTED</Status>\\n        <UpdateTime>1578881227000</UpdateTime>\\n        <ChatbotId>chatbot-cn-EJfqqa***</ChatbotId>\\n        <ScriptId>810b5872-57f0-4b27-80ab-7b3f4d8a6374</ScriptId>\\n        <IsDebugDrafted>true</IsDebugDrafted>\\n        <Industry>金融</Industry>\\n        <ScriptDescription>催收话术</ScriptDescription>\\n        <MiniPlaybackEnable>true</MiniPlaybackEnable>\\n        <IsDrafted>true</IsDrafted>\\n        <TtsConfig>{\\\\\\"voice\\\\\\":\\\\\\"xiaobei\\\\\\",\\\\\\"volume\\\\\\":\\\\\\"50\\\\\\",\\\\\\"speechRate\\\\\\":\\\\\\"-150\\\\\\",\\\\\\"pitchRate\\\\\\":\\\\\\"0\\\\\\"}</TtsConfig>\\n        <DebugStatus>DRAFTED</DebugStatus>\\n        <AsrConfig>{\\\\\\"AppKey\\\\\\":\\\\\\"3GHttnsvir1FeWWb\\\\\\"}</AsrConfig>\\n        <Scene>催收</Scene>\\n        <ScriptName>催收话术</ScriptName>\\n        <NewBargeInEnable>true</NewBargeInEnable>\\n        <LongWaitEnable>true</LongWaitEnable>\\n        <EmotionEnable>true</EmotionEnable>\\n    </Script>\\n    <NlsConfig>none</NlsConfig>\\n</DescribeScriptResponse>","errorExample":""}]',
      'title' => '返回一个话术的信息',
      'summary' => '返回一个话术的信息。',
    ),
    'DescribeScriptVoiceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8fa1953f-4a84-46d8-b80c-8ce9cf684fb3',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '28c4bcaf-5ab1-495e-8966-3206bf9ee733',
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptVoiceConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术配置id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2a07b634-e15d-445f-bbcb-fc4ea2df7b87',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ScriptVoiceConfig' => 
              array (
                'description' => '录音信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '语音类型',
                    'type' => 'string',
                    'example' => 'WAVEFORM',
                  ),
                  'ScriptVoiceConfigId' => 
                  array (
                    'description' => '话术语音配置id',
                    'type' => 'string',
                    'example' => '2a07b634-e15d-445f-bbcb-fc4ea2df7b87',
                  ),
                  'ScriptContent' => 
                  array (
                    'description' => '话术内容',
                    'type' => 'string',
                    'example' => '你的花呗欠款逾期了需要处理，你现在能处理一下吗？',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '291cfc6a-8703-4bdd-a99d-9cba32d5288a',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '947e0875-b5d4-4b33-b18c-7b2cf85bcb4f',
                  ),
                  'ScriptWaveformRelation' => 
                  array (
                    'description' => '话术录音对应关系数据',
                    'type' => 'string',
                    'example' => '"[{\\"ScriptContent\\":\\"你好\\",\\"ScriptWaveformId\\":\\"6facc560-9f25-420f-bb0b-99f4299ad0d5\\"},{\\"ScriptContent\\":\\"吗\\",\\"ScriptWaveformId\\":\\"76f48266-e253-4f44-ab4f-f64f7d38f1b4\\"}]"',
                  ),
                  'Source' => 
                  array (
                    'description' => '话术源',
                    'type' => 'string',
                    'example' => 'DIALOGUE_FLOW',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"ScriptVoiceConfig\\": {\\n    \\"Type\\": \\"WAVEFORM\\",\\n    \\"ScriptVoiceConfigId\\": \\"2a07b634-e15d-445f-bbcb-fc4ea2df7b87\\",\\n    \\"ScriptContent\\": \\"你的花呗欠款逾期了需要处理，你现在能处理一下吗？\\",\\n    \\"InstanceId\\": \\"291cfc6a-8703-4bdd-a99d-9cba32d5288a\\",\\n    \\"ScriptWaveformRelation\\": \\"\\\\\\"[{\\\\\\\\\\\\\\"ScriptContent\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"你好\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ScriptWaveformId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"6facc560-9f25-420f-bb0b-99f4299ad0d5\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"ScriptContent\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"吗\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ScriptWaveformId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"76f48266-e253-4f44-ab4f-f64f7d38f1b4\\\\\\\\\\\\\\"}]\\\\\\"\\",\\n    \\"ScriptId\\": \\"947e0875-b5d4-4b33-b18c-7b2cf85bcb4f\\",\\n    \\"Source\\": \\"DIALOGUE_FLOW\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>f765d3ee-ec03-4765-b235-6877501d99d1</RequestId>\\n<ScriptVoiceConfig>\\n    <InstanceId>291cfc6a-8703-4bdd-a99d-9cba32d5288a</InstanceId>\\n    <ScriptContent>你的花呗欠款逾期了需要处理，你现在能处理一下吗？</ScriptContent>\\n    <ScriptId>947e0875-b5d4-4b33-b18c-7b2cf85bcb4f</ScriptId>\\n    <ScriptWaveformRelation>[{\\"ScriptContent\\":\\"你好\\",\\"ScriptWaveformId\\":\\"6facc560-9f25-420f-bb0b-99f4299ad0d5\\"},{\\"ScriptContent\\":\\"吗\\",\\"ScriptWaveformId\\":\\"76f48266-e253-4f44-ab4f-f64f7d38f1b4\\"}]</ScriptWaveformRelation>\\n    <Source>DIALOGUE_FLOW</Source>\\n    <Type>WAVEFORM</Type>\\n    <ScriptVoiceConfigId>2a07b634-e15d-445f-bbcb-fc4ea2df7b87</ScriptVoiceConfigId>\\n</ScriptVoiceConfig>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '返回一个话术片段的声音配置',
      'summary' => '返回一个话术片段的声音配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListScripts' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bdd49242-114c-4045-b1d1-25ccc1756c75',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的条数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Scripts' => 
              array (
                'description' => '话术列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'List' => 
                  array (
                    'description' => '话术数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '话术数组',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '话术状态',
                          'type' => 'string',
                          'example' => 'DRAFTED',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1578965079000',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术id',
                          'type' => 'string',
                          'example' => '8d6a6e41-8093-49af-a9d1-0281878758ac',
                        ),
                        'IsDebugDrafted' => 
                        array (
                          'description' => '调试版本是否为草稿态',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Industry' => 
                        array (
                          'description' => '行业',
                          'type' => 'string',
                          'example' => '金融',
                        ),
                        'ScriptDescription' => 
                        array (
                          'description' => '话术描述',
                          'type' => 'string',
                          'example' => '电话销售话术',
                        ),
                        'IsDrafted' => 
                        array (
                          'description' => '是否是草稿',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DebugStatus' => 
                        array (
                          'description' => '调试状态',
                          'type' => 'string',
                          'example' => 'DRAFTED',
                        ),
                        'MiniPlaybackEnable' => 
                        array (
                          'description' => '承接语配置开关',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'RejectReason' => 
                        array (
                          'description' => '审核失败理由',
                          'type' => 'string',
                          'example' => '话术用语不合规',
                        ),
                        'Scene' => 
                        array (
                          'description' => '场景',
                          'type' => 'string',
                          'example' => '电销',
                        ),
                        'ScriptName' => 
                        array (
                          'description' => '话术名字',
                          'type' => 'string',
                          'example' => '电话销售话术',
                        ),
                        'NewBargeInEnable' => 
                        array (
                          'description' => '优雅打断配置开关',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'LongWaitEnable' => 
                        array (
                          'description' => '长时停顿配置开关',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'EmotionEnable' => 
                        array (
                          'description' => '情绪识别配置开关',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'IsPreset' => 
                        array (
                          'description' => '是否是预置场景',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'AgentKey' => 
                        array (
                          'type' => 'string',
                        ),
                        'AgentLlm' => 
                        array (
                          'type' => 'boolean',
                        ),
                        'agentId' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Scripts\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 15,\\n    \\"List\\": [\\n      {\\n        \\"Status\\": \\"DRAFTED\\",\\n        \\"UpdateTime\\": 1578965079000,\\n        \\"ScriptId\\": \\"8d6a6e41-8093-49af-a9d1-0281878758ac\\",\\n        \\"IsDebugDrafted\\": true,\\n        \\"Industry\\": \\"金融\\",\\n        \\"ScriptDescription\\": \\"电话销售话术\\",\\n        \\"IsDrafted\\": true,\\n        \\"DebugStatus\\": \\"DRAFTED\\",\\n        \\"MiniPlaybackEnable\\": false,\\n        \\"RejectReason\\": \\"话术用语不合规\\",\\n        \\"Scene\\": \\"电销\\",\\n        \\"ScriptName\\": \\"电话销售话术\\",\\n        \\"NewBargeInEnable\\": false,\\n        \\"LongWaitEnable\\": false,\\n        \\"EmotionEnable\\": false,\\n        \\"IsPreset\\": false,\\n        \\"AgentKey\\": \\"\\",\\n        \\"AgentLlm\\": true,\\n        \\"agentId\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListScriptsResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Scripts>\\n        <PageNumber>1</PageNumber>\\n        <PageSize>10</PageSize>\\n        <TotalCount>15</TotalCount>\\n        <List>\\n            <Status>DRAFTED</Status>\\n            <UpdateTime>1578965079000</UpdateTime>\\n            <ScriptId>8d6a6e41-8093-49af-a9d1-0281878758ac</ScriptId>\\n            <IsDebugDrafted>true</IsDebugDrafted>\\n            <Industry>金融</Industry>\\n            <ScriptDescription>电话销售话术</ScriptDescription>\\n            <IsDrafted>true</IsDrafted>\\n            <DebugStatus>DRAFTED</DebugStatus>\\n            <MiniPlaybackEnable>false</MiniPlaybackEnable>\\n            <RejectReason>话术用语不合规</RejectReason>\\n            <Scene>电销</Scene>\\n            <ScriptName>电话销售话术</ScriptName>\\n            <NewBargeInEnable>false</NewBargeInEnable>\\n            <LongWaitEnable>false</LongWaitEnable>\\n            <EmotionEnable>false</EmotionEnable>\\n            <IsPreset>false</IsPreset>\\n        </List>\\n    </Scripts>\\n</ListScriptsResponse>","errorExample":""}]',
      'title' => '查询话术列表',
      'summary' => '查询话术列表。',
    ),
    'ListScriptVoiceConfigs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'f95c7ca6-872c-4765-8493-165a8dfc682d',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ScriptVoiceConfigs' => 
              array (
                'description' => '话术录音列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'List' => 
                  array (
                    'description' => '话术录音数据数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '语音类型',
                          'type' => 'string',
                          'example' => 'TTS',
                        ),
                        'ScriptVoiceConfigId' => 
                        array (
                          'description' => '语音配置id',
                          'type' => 'string',
                          'example' => '2c8fa91f-9856-4145-90f2-08252f09bc18',
                        ),
                        'ScriptContent' => 
                        array (
                          'description' => '话术文本内容',
                          'type' => 'string',
                          'example' => '请问你是 @name 吗',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => 'bdd49242-114c-4045-b1d1-25ccc1756c75',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术id',
                          'type' => 'string',
                          'example' => 'a7441a05-43bb-4a2d-acb0-365f245d7a5b',
                        ),
                        'ScriptWaveformRelation' => 
                        array (
                          'description' => '话录音配置关系数据',
                          'type' => 'string',
                          'example' => '""',
                        ),
                        'Source' => 
                        array (
                          'description' => '话术源',
                          'type' => 'string',
                          'example' => 'DIALOGUE_FLOW',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"ScriptVoiceConfigs\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 100,\\n    \\"List\\": [\\n      {\\n        \\"Type\\": \\"TTS\\",\\n        \\"ScriptVoiceConfigId\\": \\"2c8fa91f-9856-4145-90f2-08252f09bc18\\",\\n        \\"ScriptContent\\": \\"请问你是 @name 吗\\",\\n        \\"InstanceId\\": \\"bdd49242-114c-4045-b1d1-25ccc1756c75\\",\\n        \\"ScriptWaveformRelation\\": \\"\\\\\\"\\\\\\"\\",\\n        \\"ScriptId\\": \\"a7441a05-43bb-4a2d-acb0-365f245d7a5b\\",\\n        \\"Source\\": \\"DIALOGUE_FLOW\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<ScriptVoiceConfigs>\\n    <List>\\n        <InstanceId>fa0e21e9-caab-4629-9121-1e341243d599</InstanceId>\\n        <ScriptContent>请问你是 @name 吗</ScriptContent>\\n        <ScriptId>a7441a05-43bb-4a2d-acb0-365f245d7a5b</ScriptId>\\n        <ScriptVoiceConfigId>100</ScriptVoiceConfigId>\\n        <ScriptWaveformRelation/>\\n        <Type>TTS</Type>\\n        <Source>DIALOGUE_FLOW</Source>\\n    </List>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>20</TotalCount>\\n</ScriptVoiceConfigs>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询话术录音列表',
      'summary' => '查询话术录音列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8fa1953f-4a84-46d8-b80c-8ce9cf684fb3',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8a4c6d3d-5ed6-44ca-b779-16c20f8862be',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口消息提示',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagGroups' => 
              array (
                'description' => '标签组列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TagGroupId' => 
                    array (
                      'description' => '标签组id',
                      'type' => 'string',
                      'example' => '38c03261-9fe8-4b9b-8c3b-983a60319012',
                    ),
                    'TagGroupIndex' => 
                    array (
                      'description' => '标签组位置',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TagGroup' => 
                    array (
                      'description' => '标签组名字',
                      'type' => 'string',
                      'example' => '测试组1',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术id',
                      'type' => 'string',
                      'example' => '8a4c6d3d-5ed6-44ca-b779-16c20f8862be',
                    ),
                  ),
                ),
              ),
              'Tags' => 
              array (
                'description' => '标签列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TagGroup' => 
                    array (
                      'description' => '标签组名字',
                      'type' => 'string',
                      'example' => '测试组1',
                    ),
                    'TagName' => 
                    array (
                      'description' => '标签名字',
                      'type' => 'string',
                      'example' => '是否查看',
                    ),
                    'TagIndex' => 
                    array (
                      'description' => '标签位置',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术id',
                      'type' => 'string',
                      'example' => '8a4c6d3d-5ed6-44ca-b779-16c20f8862be',
                    ),
                    'TagId' => 
                    array (
                      'description' => '标签id',
                      'type' => 'string',
                      'example' => 'd62be647-6202-4b1f-9708-0baeec552635',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Tags\\": [\\n    {\\n      \\"TagGroup\\": \\"测试组1\\",\\n      \\"ScriptId\\": \\"8a4c6d3d-5ed6-44ca-b779-16c20f8862be\\",\\n      \\"TagIndex\\": 1,\\n      \\"TagName\\": \\"是否查看\\",\\n      \\"TagId\\": \\"d62be647-6202-4b1f-9708-0baeec552635\\"\\n    }\\n  ],\\n  \\"TagGroups\\": [\\n    {\\n      \\"TagGroupId\\": \\"38c03261-9fe8-4b9b-8c3b-983a60319012\\",\\n      \\"TagGroup\\": \\"测试组1\\",\\n      \\"TagGroupIndex\\": 1,\\n      \\"ScriptId\\": \\"8a4c6d3d-5ed6-44ca-b779-16c20f8862be\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5a865b03-d2b9-4ef9-be98-f21fa0d93744</RequestId>\\n<TagGroups>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagGroupId>54629be9-0746-464a-ab59-4830242cf644</TagGroupId>\\n</TagGroups>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>\\n<Tags>\\n    <TagName>本科</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>19b23e92-4ee3-4129-8c2e-e1968670d887</TagId>\\n</Tags>\\n<Tags>\\n    <TagName>在职</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>6ebb9fb9-cc51-4bae-b256-64d5ec4c75ef</TagId>\\n</Tags>\\n<Tags>\\n    <TagName>高中</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>ce442140-299b-4971-b26b-a3e277d5c1de</TagId>\\n</Tags>\\n<Tags>\\n    <TagName>研究生</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>c8987ff8-4475-4a75-b994-e4f6411c6968</TagId>\\n</Tags>","errorExample":""}]',
      'title' => '查询话术下的标签',
      'summary' => '查询话术下的标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryScriptsByStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'StatusList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '状态列表，取值范围
- **DRAFTED**：草稿态
- **INITIALIZE_IN_PROGRESS**：正在初始化
- **PUBLISHED**：已发布
- **PUBLISH_IN_PROGRESS**：正在发布
- **ROLLBACK_IN_PROGRESS**：正在回滚
- **EXAMINE_IN_PROGRESS**：待审核
- **PUBLISHED_AND_EXAMINE_IN_PROGRESS**：已发布待审核状态
- **PUBLISH_FAILED**：已发布待审核状态
- **ROLLBACK_FAILED**：回滚失败
- **IMPORT_IN_PROGRESS**：正在导入
- **IMPORT_FAILED**：导入失败',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'PUBLISHED',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Scripts' => 
              array (
                'description' => '话术列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '分页序号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '对象总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'description' => '话术信息数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '应用版本的状态，取值范围
- **DRAFTED**：草稿态
- **INITIALIZE_IN_PROGRESS**：正在初始化
- **PUBLISHED**：已发布
- **PUBLISH_IN_PROGRESS**：正在发布
- **ROLLBACK_IN_PROGRESS**：正在回滚
- **EXAMINE_IN_PROGRESS**：待审核
- **PUBLISHED_AND_EXAMINE_IN_PROGRESS**：已发布待审核状态
- **PUBLISH_FAILED**：已发布待审核状态
- **ROLLBACK_FAILED**：回滚失败
- **IMPORT_IN_PROGRESS**：正在导入
- **IMPORT_FAILED**：导入失败',
                          'type' => 'string',
                          'example' => 'PUBLISHED',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1579055782000',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术唯一ID',
                          'type' => 'string',
                          'example' => 'fa0e21e9-caab-4629-9121-1e341243d599',
                        ),
                        'AppliedVersion' => 
                        array (
                          'description' => '应用版本',
                          'type' => 'string',
                          'example' => '1579055782000',
                        ),
                        'IsDebugDrafted' => 
                        array (
                          'description' => '调试版本是否为草稿态',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Industry' => 
                        array (
                          'description' => '行业',
                          'type' => 'string',
                          'example' => '金融',
                        ),
                        'ScriptDescription' => 
                        array (
                          'description' => '话术描述',
                          'type' => 'string',
                          'example' => '销售话术',
                        ),
                        'IsDrafted' => 
                        array (
                          'description' => '应用版本是否为草稿态',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'DebugStatus' => 
                        array (
                          'description' => '调试状态',
                          'type' => 'string',
                          'example' => 'PUBLISHED',
                        ),
                        'DebugVersion' => 
                        array (
                          'description' => '调试版本',
                          'type' => 'string',
                          'example' => '1579055782000',
                        ),
                        'Scene' => 
                        array (
                          'description' => '场景',
                          'type' => 'string',
                          'example' => '电销',
                        ),
                        'ScriptName' => 
                        array (
                          'description' => '话术名称',
                          'type' => 'string',
                          'example' => '销售话术',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Scripts\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 1,\\n    \\"List\\": [\\n      {\\n        \\"Status\\": \\"PUBLISHED\\",\\n        \\"UpdateTime\\": 1579055782000,\\n        \\"ScriptId\\": \\"fa0e21e9-caab-4629-9121-1e341243d599\\",\\n        \\"AppliedVersion\\": \\"1579055782000\\",\\n        \\"IsDebugDrafted\\": false,\\n        \\"Industry\\": \\"金融\\",\\n        \\"ScriptDescription\\": \\"销售话术\\",\\n        \\"IsDrafted\\": false,\\n        \\"DebugStatus\\": \\"PUBLISHED\\",\\n        \\"DebugVersion\\": \\"1579055782000\\",\\n        \\"Scene\\": \\"电销\\",\\n        \\"ScriptName\\": \\"销售话术\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Message>Success</Message>\\n<Scripts>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <List>\\n        <Status>PUBLISHED</Status>\\n        <Industry>金融</Industry>\\n        <DebugVersion>1579055782000</DebugVersion>\\n        <AppliedVersion>1579055782000</AppliedVersion>\\n        <IsDrafted>false</IsDrafted>\\n        <ScriptName>销售话术</ScriptName>\\n        <UpdateTime>1579055782000</UpdateTime>\\n        <ScriptDescription>销售话术</ScriptDescription>\\n        <ScriptId>fa0e21e9-caab-4629-9121-1e341243d599</ScriptId>\\n        <Scene>电销</Scene>\\n        <DebugStatus>PUBLISHED</DebugStatus>\\n        <IsDebugDrafted>false</IsDebugDrafted>\\n    </List>\\n</Scripts>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '根据话术状态查询话术',
      'summary' => '根据话术状态查询话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDialogueFlows' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id，对话流程数据来自这个话术',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd7c28efb-47f7-4a85-a522-5038e30a0b98',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DialogueFlows' => 
              array (
                'description' => '对话流程数据列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DialogueFlowDefinition' => 
                    array (
                      'description' => '对话流程定义数据',
                      'type' => 'string',
                      'example' => '{"transitions":[{"source":"cc31e02b","sourceAnchor":0,"target":"345700de","targetAnchor":0,"id":"16d37c6e","index":1}],"nodes":[{"shape":"start-html","type":"start","size":"170*34","x":180,"y":134,"id":"cc31e02b","index":0,"nodeIndex":0,"content":{"branches":[{"branchName":"发起对话","branchId":"3c50a880-a7bc-11e9-80fc-5917e4f31864"}]},"coordinates":{"x":180,"y":134}},{"shape":"function-html","type":"transfer","size":"170*34","x":606,"y":134,"id":"345700de","nodeIndex":1,"name":"功能节点","script":"你是 @name ma","content":{"action":"Hangup","actionParams":"","label":["test1","test2","test3","test4","test5"]},"coordinates":{"x":606,"y":134},"index":2,"questions":["你是 @联系人姓名 ma"]}]}',
                    ),
                    'DialogueFlowType' => 
                    array (
                      'description' => '对话流程类型',
                      'type' => 'string',
                      'example' => 'MainFlow',
                    ),
                    'DialogueFlowId' => 
                    array (
                      'description' => '对话流程id',
                      'type' => 'string',
                      'example' => 'dae01529-3c3e-458e-b07a-97643d09ebb9',
                    ),
                    'DialogueFlowName' => 
                    array (
                      'description' => '对话流程名字',
                      'type' => 'string',
                      'example' => '主流程',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术id',
                      'type' => 'string',
                      'example' => '2d5aa451-661f-4f08-b0c4-28eec78decc4',
                    ),
                    'ScriptVersion' => 
                    array (
                      'description' => '话术版本',
                      'type' => 'string',
                      'example' => '1569220563549',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"DialogueFlows\\": [\\n    {\\n      \\"DialogueFlowType\\": \\"MainFlow\\",\\n      \\"DialogueFlowDefinition\\": \\"{\\\\\\"transitions\\\\\\":[{\\\\\\"source\\\\\\":\\\\\\"cc31e02b\\\\\\",\\\\\\"sourceAnchor\\\\\\":0,\\\\\\"target\\\\\\":\\\\\\"345700de\\\\\\",\\\\\\"targetAnchor\\\\\\":0,\\\\\\"id\\\\\\":\\\\\\"16d37c6e\\\\\\",\\\\\\"index\\\\\\":1}],\\\\\\"nodes\\\\\\":[{\\\\\\"shape\\\\\\":\\\\\\"start-html\\\\\\",\\\\\\"type\\\\\\":\\\\\\"start\\\\\\",\\\\\\"size\\\\\\":\\\\\\"170*34\\\\\\",\\\\\\"x\\\\\\":180,\\\\\\"y\\\\\\":134,\\\\\\"id\\\\\\":\\\\\\"cc31e02b\\\\\\",\\\\\\"index\\\\\\":0,\\\\\\"nodeIndex\\\\\\":0,\\\\\\"content\\\\\\":{\\\\\\"branches\\\\\\":[{\\\\\\"branchName\\\\\\":\\\\\\"发起对话\\\\\\",\\\\\\"branchId\\\\\\":\\\\\\"3c50a880-a7bc-11e9-80fc-5917e4f31864\\\\\\"}]},\\\\\\"coordinates\\\\\\":{\\\\\\"x\\\\\\":180,\\\\\\"y\\\\\\":134}},{\\\\\\"shape\\\\\\":\\\\\\"function-html\\\\\\",\\\\\\"type\\\\\\":\\\\\\"transfer\\\\\\",\\\\\\"size\\\\\\":\\\\\\"170*34\\\\\\",\\\\\\"x\\\\\\":606,\\\\\\"y\\\\\\":134,\\\\\\"id\\\\\\":\\\\\\"345700de\\\\\\",\\\\\\"nodeIndex\\\\\\":1,\\\\\\"name\\\\\\":\\\\\\"功能节点\\\\\\",\\\\\\"script\\\\\\":\\\\\\"你是 @name ma\\\\\\",\\\\\\"content\\\\\\":{\\\\\\"action\\\\\\":\\\\\\"Hangup\\\\\\",\\\\\\"actionParams\\\\\\":\\\\\\"\\\\\\",\\\\\\"label\\\\\\":[\\\\\\"test1\\\\\\",\\\\\\"test2\\\\\\",\\\\\\"test3\\\\\\",\\\\\\"test4\\\\\\",\\\\\\"test5\\\\\\"]},\\\\\\"coordinates\\\\\\":{\\\\\\"x\\\\\\":606,\\\\\\"y\\\\\\":134},\\\\\\"index\\\\\\":2,\\\\\\"questions\\\\\\":[\\\\\\"你是 @联系人姓名 ma\\\\\\"]}]}\\",\\n      \\"DialogueFlowId\\": \\"dae01529-3c3e-458e-b07a-97643d09ebb9\\",\\n      \\"DialogueFlowName\\": \\"主流程\\",\\n      \\"ScriptId\\": \\"2d5aa451-661f-4f08-b0c4-28eec78decc4\\",\\n      \\"ScriptVersion\\": \\"1569220563549\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>46fe92f4-cbe3-4f6b-bbe0-4ef22ff013f5</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>\\n<DialogueFlows>\\n    <ScriptId>e6aa76f5-d55d-42a3-90ff-f22c284b3b94</ScriptId>\\n    <FlowType>MainFlow</FlowType>\\n    <Id>01331d8d-f2bf-49a8-bbb7-daa9db0f024c</Id>\\n    <FlowDefinition>{\\"nodes\\":[{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"7a76a1c0-b363-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"是本人\\",\\"id\\":\\"bb05f457-11ee-47b6-9e1d-400a2722fcf0\\"}],\\"branchName\\":\\"本人\\"},{\\"branchId\\":\\"7e49f0e0-b363-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"关系人\\",\\"id\\":\\"55280cca-401c-4297-afcb-6cf21ead3b65\\"}],\\"branchName\\":\\"关系人\\"},{\\"branchId\\":\\"810da4c0-b363-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"非本人\\",\\"id\\":\\"eb464145-88ae-407c-8f5d-ceaf2bad4a75\\"}],\\"branchName\\":\\"非本人\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":-106.0,\\"y\\":223.0},\\"id\\":\\"d65188eb\\",\\"index\\":2,\\"interruptible\\":false,\\"name\\":\\"身份确认\\",\\"nodeIndex\\":1,\\"questions\\":[\\"诶你好，我这边是蚂蚁花呗，请问你是 @联系人姓名 吗？\\",\\"诶你好，我这边是蚂蚁花呗，请问你是 @联系人姓名 吗？\\"],\\"script\\":\\"诶你好，我这边是蚂蚁花呗，请问你是 @name 吗？\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"诶你好，我这边是蚂蚁花呗，请问你是 @name 吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":-106,\\"y\\":223},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"branches\\":[{\\"branchId\\":\\"b8c32d00-b35d-11e9-a287-e59394e73583\\",\\"branchName\\":\\"发起对话\\"}]},\\"coordinates\\":{\\"x\\":180.0,\\"y\\":134.0},\\"id\\":\\"cc31e02b\\",\\"index\\":3,\\"interruptible\\":false,\\"nodeIndex\\":0,\\"shape\\":\\"start-html\\",\\"size\\":\\"170*34\\",\\"type\\":\\"Start\\",\\"x\\":-387,\\"y\\":159},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"actionParams\\":\\"\\",\\"action\\":\\"Hangup\\",\\"label\\":[]},\\"coordinates\\":{\\"x\\":992.5,\\"y\\":-396.0},\\"id\\":\\"1a2dae2f\\",\\"index\\":6,\\"interruptible\\":false,\\"name\\":\\"同意还款并挂机\\",\\"nodeIndex\\":4,\\"questions\\":[\\"好的，那我这边后续也会关注你的还款情况，再见。\\"],\\"script\\":\\"好的，那我这边后续也会关注你的还款情况，再见。\\",\\"shape\\":\\"function-html\\",\\"size\\":\\"170*34\\",\\"type\\":\\"Transfer\\",\\"x\\":992,\\"y\\":-396},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"4e3d0910-b371-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"2d6c20b0-b374-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"继续拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":993.0,\\"y\\":-170.25},\\"id\\":\\"68a88b42\\",\\"index\\":8,\\"interruptible\\":false,\\"name\\":\\"二催\\",\\"nodeIndex\\":5,\\"questions\\":[\\"是这样的，你的这个欠款已经逾期了，无法再拖延了。\\",\\"抱歉，我刚才没听清楚你说的，你这个逾期欠款呢没有办法再拖延了，这两天想想办法还进来可以吗？\\"],\\"script\\":\\"是这样的，你的这个欠款已经逾期了，无法再拖延了。\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"抱歉，我刚才没听清楚你说的，你这个逾期欠款呢没有办法再拖延了，这两天想想办法还进来可以吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":993,\\"y\\":-170},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"822521b0-b383-11e9-8cbb-cfb31979d865\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"89b4dc90-b383-11e9-8cbb-cfb31979d865\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"继续拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":993.5,\\"y\\":104.0},\\"id\\":\\"fe521b01\\",\\"index\\":16,\\"interruptible\\":false,\\"name\\":\\"有困难\\",\\"nodeIndex\\":11,\\"questions\\":[\\"你说的情况呢我也理解，但也请你想办法克服一下，毕竟欠款已经逾期了对吧，所以想想办法这两天还进来吧。\\",\\"不好意思，你说什么我没听清楚，欠款无法拖延了想想办法今天还进来可以吗？\\"],\\"script\\":\\"你说的情况呢我也理解，但也请你想办法克服一下，毕竟欠款已经逾期了对吧，所以想想办法这两天还进来吧。\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"不好意思，你说什么我没听清楚，欠款无法拖延了想想办法今天还进来可以吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":993,\\"y\\":104},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"aa2f7a80-b373-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"d4e27ff0-b375-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"继续拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":992.0,\\"y\\":351.75},\\"id\\":\\"a33a0e45\\",\\"index\\":19,\\"interruptible\\":false,\\"name\\":\\"强硬不还\\",\\"nodeIndex\\":6,\\"questions\\":[\\"是这样的，钱欠着总是要还的，如果拖欠严重的话呢后面会回收全款，那你的压力就更大了，并且对你的信用也不好，对吧。\\",\\"你的欠款已经逾期了总是要处理的，你看看这一两天能不能还进来呢？\\"],\\"script\\":\\"是这样的，钱欠着总是要还的，如果拖欠严重的话呢后面会回收全款，那你的压力就更大了，并且对你的信用也不好，对吧。\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"你的欠款已经逾期了总是要处理的，你看看这一两天能不能还进来呢？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":992,\\"y\\":351},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"1de3a690-b38d-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"73462bd0-b38d-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":994.5,\\"y\\":1331.75},\\"id\\":\\"327a4706\\",\\"index\\":33,\\"interruptible\\":false,\\"name\\":\\"怎么还款\\",\\"nodeIndex\\":15,\\"questions\\":[\\"还款问题呢你可以找身边懂的人帮你处理一下，或者是问一下客服，那今天可以还进来吗？\\",\\"抱歉，我刚才没听清你说的，操作还款呢可以问问朋友或者是找我们的客服，那今天可以处理吗？\\"],\\"script\\":\\"还款问题呢你可以找身边懂的人帮你处理一下，或者是问一下客服，那今天可以还进来吗？\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"抱歉，我刚才没听清你说的，操作还款呢可以问问朋友或者是找我们的客服，那今天可以处理吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":994,\\"y\\":1331},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"edbe5d20-b38c-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"375a5ba0-b38d-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":990.5000000000001,\\"y\\":839.4999999999999},\\"id\\":\\"6745d546\\",\\"index\\":34,\\"interruptible\\":false,\\"name\\":\\"欠款金额\\",\\"nodeIndex\\":13,\\"questions\\":[\\"金额的话呢你可以进支付宝查看一下，上面会有显示的，没问题的话这两天把钱还进来好吗？\\",\\"不好意思，我没听清楚你说的，金额的话呢你自己在支付宝后台可以查看，还款呢也可以在上面还，那今天可以还进来吗？\\"],\\"script\\":\\"金额的话呢你可以进支付宝查看一下，上面会有显示的，没问题的话这两天把钱还进来好吗？\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"不好意思，我没听清楚你说的，金额的话呢你自己在支付宝后台可以查看，还款呢也可以在上面还，那今天可以还进来吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":990,\\"y\\":839},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"04e3a820-b38d-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"5da9a3b0-b38d-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":990.0,\\"y\\":1085.125},\\"id\\":\\"892c244f\\",\\"index\\":35,\\"interruptible\\":false,\\"name\\":\\"没使用过\\",\\"nodeIndex\\":14,\\"questions\\":[\\"是这样的，我这边看见你名下有逾期花呗欠款需要处理，你这边呢这两天尽快核实处理一下这个问题吧。\\",\\"不好意思，你说的我没有听见，你这边呢有花呗逾期欠款需要处理一下，今天能处理吗？\\"],\\"script\\":\\"是这样的，我这边看见你名下有逾期花呗欠款需要处理，你这边呢这两天尽快核实处理一下这个问题吧。\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"不好意思，你说的我没有听见，你这边呢有花呗逾期欠款需要处理一下，今天能处理吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":990,\\"y\\":1085},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"actionParams\\":\\"\\",\\"action\\":\\"Hangup\\",\\"label\\":[{\\"tagGroup\\":\\"是否愿意还款\\",\\"scriptId\\":\\"e6aa76f5-d55d-42a3-90ff-f22c284b3b94\\",\\"id\\":\\"04dc164c-0086-4aa7-b46e-1328c91333b1\\",\\"tagName\\":\\"愿意还款\\"}]},\\"coordinates\\":{\\"x\\":993.5,\\"y\\":1620.4999999999995},\\"id\\":\\"158e9cb2\\",\\"index\\":36,\\"interruptible\\":false,\\"name\\":\\"同意还款\\",\\"nodeIndex\\":8,\\"questions\\":[\\"好，那我去核实一下，再见。\\"],\\"script\\":\\"好，那我去核实一下，再见。\\",\\"shape\\":\\"function-html\\",\\"size\\":\\"170*34\\",\\"type\\":\\"Transfer\\",\\"x\\":993,\\"y\\":1620},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"actionParams\\":\\"\\",\\"action\\":\\"Hangup\\",\\"label\\":[{\\"tagGroup\\":\\"是否愿意还款\\",\\"scriptId\\":\\"e6aa76f5-d55d-42a3-90ff-f22c284b3b94\\",\\"id\\":\\"04dc164c-0086-4aa7-b46e-1328c91333b1\\",\\"tagName\\":\\"愿意还款\\"}]},\\"coordinates\\":{\\"x\\":1833.7261904761901,\\"y\\":-470.5},\\"id\\":\\"b80ee10e\\",\\"index\\":37,\\"interruptible\\":false,\\"name\\":\\"最终同意还款并挂机\\",\\"nodeIndex\\":7,\\"questions\\":[\\"好的，那我这边等着查到账，你今明两天记得还进来好吧，再见。\\"],\\"script\\":\\"好的，那我这边等着查到账，你今明两天记得还进来好吧，再见。\\",\\"shape\\":\\"function-html\\",\\"size\\":\\"170*34\\",\\"type\\":\\"Transfer\\",\\"x\\":1833,\\"y\\":-470},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"System\\",\\"threshold\\":1,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"3e7441b0-b376-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"System\\",\\"threshold\\":1,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":1853.25,\\"y\\":104.0},\\"id\\":\\"1782ee98\\",\\"index\\":38,\\"interruptible\\":false,\\"name\\":\\"三催\\",\\"nodeIndex\\":9,\\"questions\\":[\\"是这样的，我也理解你说的，但是你再不处理这个逾期欠款，后面回收全款的话你的还款压力更大，所以想想办法今明两天还进来吧\\"],\\"script\\":\\"是这样的，我也理解你说的，但是你再不处理这个逾期欠款，后面回收全款的话你的还款压力更大，所以想想办法今明两天还进来吧\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":1853,\\"y\\":104},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"actionParams\\":\\"\\",\\"action\\":\\"Hangup\\",\\"label\\":[{\\"tagGroup\\":\\"是否愿意还款\\",\\"scriptId\\":\\"e6aa76f5-d55d-42a3-90ff-f22c284b3b94\\",\\"id\\":\\"ba5d5577-f793-402c-8600-a6a133b7ddff\\",\\"tagName\\":\\"不愿意还款\\"}]},\\"coordinates\\":{\\"x\\":2512.0456349206356,\\"y\\":108.0},\\"id\\":\\"415e7d17\\",\\"index\\":39,\\"interruptible\\":false,\\"name\\":\\"三催拖延挂机\\",\\"nodeIndex\\":10,\\"questions\\":[\\"为了你的逾期影响考虑，再次提醒你这两天务必还款，我们后续呢也会核实还款情况，再见。\\"],\\"script\\":\\"为了你的逾期影响考虑，再次提醒你这两天务必还款，我们后续呢也会核实还款情况，再见。\\",\\"shape\\":\\"function-html\\",\\"size\\":\\"170*34\\",\\"type\\":\\"Transfer\\",\\"x\\":2512,\\"y\\":108},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"actionParams\\":\\"\\",\\"action\\":\\"Hangup\\",\\"label\\":[{\\"tagGroup\\":\\"是否是本人\\",\\"scriptId\\":\\"e6aa76f5-d55d-42a3-90ff-f22c284b3b94\\",\\"id\\":\\"2f88b7c5-d7a7-41d5-8b26-423e7f7d9e0a\\",\\"tagName\\":\\"找错人了\\"}]},\\"coordinates\\":{\\"x\\":350.3897072689387,\\"y\\":1188.0714285714284},\\"id\\":\\"0f538b47\\",\\"index\\":40,\\"interruptible\\":false,\\"name\\":\\"非本人挂机\\",\\"nodeIndex\\":2,\\"questions\\":[\\"哦，那打扰了再见。\\"],\\"script\\":\\"哦，那打扰了再见。\\",\\"shape\\":\\"function-html\\",\\"size\\":\\"170*34\\",\\"type\\":\\"Transfer\\",\\"x\\":350,\\"y\\":1188},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"5daa6d30-b370-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"03e3d510-b371-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"}],\\"branchName\\":\\"拖延还款\\"},{\\"branchId\\":\\"f1c88f00-b371-11e9-a287-e59394e73583\\",\\"intents\\":[{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"有困难\\"},{\\"branchId\\":\\"38b663d0-b37a-11e9-bebd-87c20cdf155f\\",\\"intents\\":[{\\"name\\":\\"强硬不还\\",\\"id\\":\\"c97fc5f1-e48e-4fe6-a6aa-0520519d000f\\"}],\\"branchName\\":\\"强硬不还\\"},{\\"branchId\\":\\"1605bac0-b384-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"欠款信息\\",\\"id\\":\\"95a8ea25-6471-4cfd-bbe5-50d5109873a0\\"}],\\"branchName\\":\\"欠款信息\\"},{\\"branchId\\":\\"ca7dae40-b384-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"欠款金额\\",\\"id\\":\\"bbc6dc7d-f068-4b23-a4b4-fa7a073df23f\\"}],\\"branchName\\":\\"欠款金额\\"},{\\"branchId\\":\\"16207940-b385-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"没使用过\\",\\"id\\":\\"594222c9-305d-4154-b1a4-d01fd59b0aba\\"}],\\"branchName\\":\\"没使用过\\"},{\\"branchId\\":\\"4b356f90-b38b-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"怎么还款\\",\\"id\\":\\"f69305ab-c88a-4a3c-812d-310c68d7e06e\\"}],\\"branchName\\":\\"怎么还款\\"},{\\"branchId\\":\\"4f1e4280-b38b-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"已经还款\\",\\"id\\":\\"256608ba-1ed9-4260-8b5a-6dc80466178d\\"}],\\"branchName\\":\\"已经还款\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":1,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":381.81827869751015,\\"y\\":60.0},\\"id\\":\\"a3bbec02\\",\\"index\\":41,\\"interruptible\\":false,\\"name\\":\\"一催\\",\\"nodeIndex\\":3,\\"questions\\":[\\"诶你好，我这边是蚂蚁花呗，你的花呗欠款已经逾期了，你现在能处理一下吗？\\",\\"我这边是蚂蚁花呗，你的花呗欠款逾期了需要处理，你现在能处理一下吗？\\"],\\"script\\":\\"诶你好，我这边是蚂蚁花呗，你的花呗欠款已经逾期了，你现在能处理一下吗？\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"我这边是蚂蚁花呗，你的花呗欠款逾期了需要处理，你现在能处理一下吗？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":381,\\"y\\":60},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"System\\",\\"threshold\\":1,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"4c5a9f50-b433-11e9-918c-7beffc0e7989\\",\\"intents\\":[{\\"name\\":\\"同意转告\\",\\"id\\":\\"2706ab05-bd7d-45e9-b083-5ce3986be861\\"}],\\"branchName\\":\\"同意转告\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"System\\",\\"threshold\\":1,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"timeout\\":1,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":361.7728174603179,\\"y\\":871.9999999999999},\\"id\\":\\"7ac136d5\\",\\"index\\":42,\\"interruptible\\":false,\\"name\\":\\"转告\\",\\"nodeIndex\\":16,\\"questions\\":[\\"是这样的，我是来提醒处理花呗欠款的，麻烦转告处理一下。\\"],\\"script\\":\\"是这样的，我是来提醒处理花呗欠款的，麻烦转告处理一下。\\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":361,\\"y\\":871},{\\"collectedNumberEnabled\\":false,\\"content\\":{\\"unrecognizingConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"finalPromptType\\":\\"System\\"},\\"branches\\":[{\\"branchId\\":\\"a8092f60-b384-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"同意还款\\",\\"id\\":\\"5694fd00-d0ce-4977-b99c-77bfdd5dc7ee\\"}],\\"branchName\\":\\"同意还款\\"},{\\"branchId\\":\\"c7f50df0-b38c-11e9-89c3-81abc20fb867\\",\\"intents\\":[{\\"name\\":\\"拖延还款\\",\\"id\\":\\"d0af71ad-4f34-4ae2-aa71-84759e911818\\"},{\\"name\\":\\"有困难\\",\\"id\\":\\"d770ecbd-be65-44e9-8dfa-9b0f9011a83e\\"}],\\"branchName\\":\\"拖延\\"}],\\"silenceTimeoutConfig\\":{\\"promptType\\":\\"SimiliarScript\\",\\"threshold\\":2,\\"finalPrompt\\":\\"9577fea1-2b72-4c78-8f33-5bc02541ce18\\",\\"prompt\\":\\"SimiliarScript\\",\\"timeout\\":60,\\"finalPromptType\\":\\"System\\"}},\\"coordinates\\":{\\"x\\":994.0,\\"y\\":589.5},\\"id\\":\\"a51f12d9\\",\\"index\\":45,\\"interruptible\\":false,\\"name\\":\\"欠款信息\\",\\"nodeIndex\\":12,\\"questions\\":[\\"嗯，具体欠款信息呢你可以在支付宝查看或打给我们的客服同学询问，那你今天能否还上呢？毕竟现在已经逾期了   \\",\\"不好意思，你说什么我没听清，你的花呗逾期欠款今天可以处理一下吧？\\"],\\"script\\":\\"嗯，具体欠款信息呢你可以在支付宝查看或打给我们的客服同学询问，那你今天能否还上呢？毕竟现在已经逾期了   \\",\\"shape\\":\\"branch-html\\",\\"similarScripts\\":[\\"不好意思，你说什么我没听清，你的花呗逾期欠款今天可以处理一下吧？\\"],\\"size\\":\\"170*34\\",\\"type\\":\\"Switch\\",\\"x\\":995,\\"y\\":558}],\\"transitions\\":[{\\"id\\":\\"6dab4610\\",\\"index\\":0,\\"source\\":\\"cc31e02b\\",\\"sourceAnchor\\":0,\\"target\\":\\"d65188eb\\",\\"targetAnchor\\":0},{\\"id\\":\\"c0db378d\\",\\"index\\":1,\\"source\\":\\"810da4c0-b363-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":3,\\"sourceBranchNode\\":\\"d65188eb\\",\\"target\\":\\"0f538b47\\",\\"targetAnchor\\":0},{\\"id\\":\\"f65dcd56\\",\\"index\\":4,\\"source\\":\\"7a76a1c0-b363-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"d65188eb\\",\\"target\\":\\"a3bbec02\\",\\"targetAnchor\\":0},{\\"id\\":\\"b1d24f49\\",\\"index\\":5,\\"source\\":\\"5daa6d30-b370-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"1a2dae2f\\",\\"targetAnchor\\":0},{\\"id\\":\\"da6de38a\\",\\"index\\":7,\\"source\\":\\"03e3d510-b371-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"68a88b42\\",\\"targetAnchor\\":0},{\\"id\\":\\"60121a30\\",\\"index\\":9,\\"source\\":\\"4e3d0910-b371-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"68a88b42\\",\\"target\\":\\"b80ee10e\\",\\"targetAnchor\\":0},{\\"id\\":\\"4cc9a793\\",\\"index\\":10,\\"source\\":\\"aa2f7a80-b373-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"a33a0e45\\",\\"target\\":\\"158e9cb2\\",\\"targetAnchor\\":0},{\\"id\\":\\"c24380fe\\",\\"index\\":11,\\"source\\":\\"3e7441b0-b376-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"1782ee98\\",\\"target\\":\\"415e7d17\\",\\"targetAnchor\\":0},{\\"id\\":\\"8daf969d\\",\\"index\\":12,\\"source\\":\\"2d6c20b0-b374-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"68a88b42\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"b474995d\\",\\"index\\":13,\\"source\\":\\"38b663d0-b37a-11e9-bebd-87c20cdf155f\\",\\"sourceAnchor\\":4,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"a33a0e45\\",\\"targetAnchor\\":0},{\\"id\\":\\"3aba0cc1\\",\\"index\\":14,\\"source\\":\\"d4e27ff0-b375-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"a33a0e45\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"27a7b67e\\",\\"index\\":15,\\"source\\":\\"f1c88f00-b371-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":3,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"fe521b01\\",\\"targetAnchor\\":0},{\\"id\\":\\"768f3c26\\",\\"index\\":17,\\"source\\":\\"822521b0-b383-11e9-8cbb-cfb31979d865\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"fe521b01\\",\\"target\\":\\"b80ee10e\\",\\"targetAnchor\\":0},{\\"id\\":\\"f0de2a22\\",\\"index\\":18,\\"source\\":\\"89b4dc90-b383-11e9-8cbb-cfb31979d865\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"fe521b01\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"2eae651e\\",\\"index\\":20,\\"source\\":\\"1605bac0-b384-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":5,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"a51f12d9\\",\\"targetAnchor\\":0},{\\"id\\":\\"19c6509f\\",\\"index\\":21,\\"source\\":\\"ca7dae40-b384-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":6,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"6745d546\\",\\"targetAnchor\\":0},{\\"id\\":\\"99bb56bb\\",\\"index\\":22,\\"source\\":\\"16207940-b385-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":7,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"892c244f\\",\\"targetAnchor\\":0},{\\"id\\":\\"bca9e8de\\",\\"index\\":23,\\"source\\":\\"4f1e4280-b38b-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":9,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"158e9cb2\\",\\"targetAnchor\\":0},{\\"id\\":\\"7b045ce6\\",\\"index\\":24,\\"source\\":\\"4b356f90-b38b-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":8,\\"sourceBranchNode\\":\\"a3bbec02\\",\\"target\\":\\"327a4706\\",\\"targetAnchor\\":0},{\\"id\\":\\"5299f9c3\\",\\"index\\":25,\\"source\\":\\"a8092f60-b384-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"a51f12d9\\",\\"target\\":\\"b80ee10e\\",\\"targetAnchor\\":0},{\\"id\\":\\"95d74188\\",\\"index\\":26,\\"source\\":\\"c7f50df0-b38c-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"a51f12d9\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"87bd69f1\\",\\"index\\":27,\\"source\\":\\"edbe5d20-b38c-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"6745d546\\",\\"target\\":\\"b80ee10e\\",\\"targetAnchor\\":0},{\\"id\\":\\"14d65e18\\",\\"index\\":28,\\"source\\":\\"375a5ba0-b38d-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"6745d546\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"dfb5bd54\\",\\"index\\":29,\\"source\\":\\"04e3a820-b38d-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"892c244f\\",\\"target\\":\\"b80ee10e\\",\\"targetAnchor\\":0},{\\"id\\":\\"3a3c73d9\\",\\"index\\":30,\\"source\\":\\"5da9a3b0-b38d-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"892c244f\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"c4b70906\\",\\"index\\":31,\\"source\\":\\"1de3a690-b38d-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"327a4706\\",\\"target\\":\\"b80ee10e\\",\\"targetAnchor\\":0},{\\"id\\":\\"a71ae03c\\",\\"index\\":32,\\"source\\":\\"73462bd0-b38d-11e9-89c3-81abc20fb867\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"327a4706\\",\\"target\\":\\"1782ee98\\",\\"targetAnchor\\":0},{\\"id\\":\\"67fbf86a\\",\\"index\\":43,\\"source\\":\\"7e49f0e0-b363-11e9-a287-e59394e73583\\",\\"sourceAnchor\\":2,\\"sourceBranchNode\\":\\"d65188eb\\",\\"target\\":\\"7ac136d5\\",\\"targetAnchor\\":0},{\\"id\\":\\"a0b8644d\\",\\"index\\":44,\\"source\\":\\"4c5a9f50-b433-11e9-918c-7beffc0e7989\\",\\"sourceAnchor\\":1,\\"sourceBranchNode\\":\\"7ac136d5\\",\\"target\\":\\"0f538b47\\",\\"targetAnchor\\":0}]}</FlowDefinition>\\n    <Name>主流程</Name>\\n</DialogueFlows>","errorExample":""}]',
      'title' => '查询一个话术下的对话流程列表',
      'summary' => '查询一个话术下的对话流程列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发布的话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3677fe8b-276f-4541-babf-b9d3082a31ba',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对这次发布话术的描述',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '第一次发布',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5a865b03-d2b9-4ef9-be98-f21fa0d93744</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '发布话术',
      'summary' => '发布话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishScriptForDebug' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0bfe34e5-a7fa-4aac-91d4-bd798518dffc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '5a865b03-d2b9-4ef9-be98-f21fa0d93744',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"5a865b03-d2b9-4ef9-be98-f21fa0d93744\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5a865b03-d2b9-4ef9-be98-f21fa0d93744</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '发布话术到调试环境',
      'summary' => '发布话术（调试的版本）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RollbackScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '303523b1-0094-4ebe-b9ed-c23d11c91d61',
          ),
        ),
        2 => 
        array (
          'name' => 'RollbackVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回滚的版本',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1579055782000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '回滚发布的话术',
      'summary' => '回滚发布的话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SubmitScriptReview' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b0f35dd1-0337-402e-9c4f-3a6c2426950a',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '第一版本提交审核',
          ),
        ),
        3 => 
        array (
          'name' => 'From',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '提交话术审核',
      'summary' => '提交话术审核。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'WithdrawScriptReview' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '38d2e8ed-04e9-4dac-83b5-a8e57642ef13',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e4e2a770-b97b-465a-80d8-06dca008c503',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Script' => 
              array (
                'description' => '话术信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '应用版本的状态',
                    'type' => 'string',
                    'example' => 'PUBLISHED',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578881227000',
                  ),
                  'Industry' => 
                  array (
                    'description' => '行业',
                    'type' => 'string',
                    'example' => '金融',
                  ),
                  'ScriptDescription' => 
                  array (
                    'description' => '话术描述',
                    'type' => 'string',
                    'example' => '销售话术',
                  ),
                  'IsDrafted' => 
                  array (
                    'description' => '应用版本是否为草稿态',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'DebugStatus' => 
                  array (
                    'description' => '调试状态',
                    'type' => 'string',
                    'example' => 'PUBLISHED',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术ID',
                    'type' => 'string',
                    'example' => 'e4e2a770-b97b-465a-80d8-06dca008c503',
                  ),
                  'IsDebugDrafted' => 
                  array (
                    'description' => '调试版本是否为草稿态',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术名称',
                    'type' => 'string',
                    'example' => '销售话术',
                  ),
                  'Scene' => 
                  array (
                    'description' => '场景',
                    'type' => 'string',
                    'example' => '电销',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidScriptName.Duplicated',
            'errorMessage' => 'The specified ScriptName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Script\\": {\\n    \\"Status\\": \\"PUBLISHED\\",\\n    \\"UpdateTime\\": 1578881227000,\\n    \\"Industry\\": \\"金融\\",\\n    \\"ScriptDescription\\": \\"销售话术\\",\\n    \\"IsDrafted\\": false,\\n    \\"DebugStatus\\": \\"PUBLISHED\\",\\n    \\"ScriptId\\": \\"e4e2a770-b97b-465a-80d8-06dca008c503\\",\\n    \\"IsDebugDrafted\\": false,\\n    \\"ScriptName\\": \\"销售话术\\",\\n    \\"Scene\\": \\"电销\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>f765d3ee-ec03-4765-b235-6877501d99d1</RequestId>\\n<Script>\\n    <DebugStatus>DRAFTED</DebugStatus>\\n    <Industry>教育</Industry>\\n    <IsDebugDrafted>true</IsDebugDrafted>\\n    <IsDrafted>true</IsDrafted>\\n    <ScriptName>课程满意度回访</ScriptName>\\n    <Scene>回访</Scene>\\n    <ScriptId>8c58d3e0-bf27-4685-a5a5-65872ec5abc4</ScriptId>\\n    <Status>DRAFTED</Status>\\n    <UpdateTime>1578474045152</UpdateTime>\\n</Script>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '撤销话术审核',
      'summary' => '撤销话术审核。',
      'description' => '****',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ExportScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12f3dd08-0c55-44ce-9b64-e69d35ed3a76',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd004cfd2-6a81-491c-83c6-cbe186620c95',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DownloadParams' => 
              array (
                'description' => '下载话术的签名url信息',
                'type' => 'object',
                'properties' => 
                array (
                  'SignatureUrl' => 
                  array (
                    'description' => '下载地址',
                    'type' => 'string',
                    'example' => 'http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&OSSAccessKeyId=LTAI****cqw&Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"DownloadParams\\": {\\n    \\"SignatureUrl\\": \\"http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&OSSAccessKeyId=LTAI****cqw&Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Success</Message>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<DownloadParams>\\n    <SignatureUrl>http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&amp;OSSAccessKeyId=LTAI****cqw&amp;Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D</SignatureUrl>\\n</DownloadParams>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '导出一个话术',
      'summary' => '导出一个话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InflightTaskTimeout' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2d350e38-f561-49b0-85d3-b90d9fc7e052',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6bc0585c-0a8a-46d8-b042-23570bbb4855',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属的阿里云账号id',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1864632921948620',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '任务超时',
    ),
    'TaskPreparing' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '33040b9a-b04b-452f-b554-cd6f3a15f850',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c9e42cd7-ba99-4872-9802-e05719ab051c',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属账号id',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1971226538081821',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Succes',
              ),
              'TaskId' => 
              array (
                'description' => '任务id',
                'type' => 'string',
                'example' => 'e4e2a770-b97b-465a-80d8-06dca008c503',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Succes\\",\\n  \\"TaskId\\": \\"e4e2a770-b97b-465a-80d8-06dca008c503\\"\\n}","type":"json"}]',
      'title' => '准备执行任务',
      'summary' => '准备执行任务。',
    ),
    'DuplicateScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'SourceScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6114e7e8-4140-48d9-b46d-65ea29f13fe8',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新话术名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '复制的催收话术',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ScriptId' => 
              array (
                'description' => '话术id',
                'type' => 'string',
                'example' => '6114e7e8-4140-48d9-b46d-65ea29f13fe8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"ScriptId\\": \\"6114e7e8-4140-48d9-b46d-65ea29f13fe8\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<SourceScriptId>6114e7e8-4140-48d9-b46d-65ea29f13fe8</SourceScriptId>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '复制话术',
      'summary' => '从原有的话术复制一个新的话术。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTTSConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0ec0c897-b92c-40e4-9ad7-e6e4f5ce13bb',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd7fbd0a0-27bc-49c4-a456-ecb75e79122b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'f765d3ee-ec03-4765-b235-6877501d99d1',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TTSConfig' => 
              array (
                'description' => 'tts 配置',
                'type' => 'object',
                'properties' => 
                array (
                  'Voice' => 
                  array (
                    'description' => 'tts 模型',
                    'type' => 'string',
                    'example' => 'xiaoyun',
                  ),
                  'SpeechRate' => 
                  array (
                    'description' => '语速',
                    'type' => 'string',
                    'example' => '-150',
                  ),
                  'Volume' => 
                  array (
                    'description' => '音量',
                    'type' => 'string',
                    'example' => '100',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '947e0875-b5d4-4b33-b18c-7b2cf85bcb4f',
                  ),
                  'NlsServiceType' => 
                  array (
                    'description' => '服务类型',
                    'type' => 'string',
                    'example' => 'Managed',
                  ),
                  'AppKey' => 
                  array (
                    'description' => '调用Tts的AppKey',
                    'type' => 'string',
                    'example' => 'p2SjSj4zxxxxxxxx',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"f765d3ee-ec03-4765-b235-6877501d99d1\\",\\n  \\"Success\\": true,\\n  \\"TTSConfig\\": {\\n    \\"Voice\\": \\"xiaoyun\\",\\n    \\"SpeechRate\\": \\"-150\\",\\n    \\"Volume\\": \\"100\\",\\n    \\"InstanceId\\": \\"947e0875-b5d4-4b33-b18c-7b2cf85bcb4f\\",\\n    \\"NlsServiceType\\": \\"Managed\\",\\n    \\"AppKey\\": \\"p2SjSj4zxxxxxxxx\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTTSConfigResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>f765d3ee-ec03-4765-b235-6877501d99d1</RequestId>\\n    <Success>true</Success>\\n    <TTSConfig>\\n        <Voice>xiaoyun</Voice>\\n        <SpeechRate>-150</SpeechRate>\\n        <Volume>100</Volume>\\n        <InstanceId>947e0875-b5d4-4b33-b18c-7b2cf85bcb4f</InstanceId>\\n        <NlsServiceType>Managed</NlsServiceType>\\n        <AppKey>p2SjSj4zxxxxxxxx</AppKey>\\n    </TTSConfig>\\n</DescribeTTSConfigResponse>","errorExample":""}]',
      'title' => 'DescribeTTSConfig',
      'summary' => '查询tts配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTTSDemo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a8eccb3c-2b26-4b6d-a54f-696b953e33a6',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '5ab2d935-306c-478a-88bf-d08e4e25c1b7',
          ),
        ),
        2 => 
        array (
          'name' => 'Voice',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发音人信息，如：aixia / siyue / xiaoyun，完整发音人信息参考
https://ai.aliyun.com/nls/tts',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aixia',
          ),
        ),
        3 => 
        array (
          'name' => 'Text',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文本内容',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '测试',
          ),
        ),
        4 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语速
[-500,500]之间整数。默认值为0。

大于0表示加快语速。

小于0表示减慢语速。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '500',
            'minimum' => '-500',
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'Volume',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '音量
[0,100]之间整数。默认值为50。

大于50表示增大音量。

小于50表示减小音量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '50',
          ),
        ),
        6 => 
        array (
          'name' => 'PitchRate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语调
[-500,500]之间整数。默认值为0。

大于0表示升高音高。

小于0表示降低音高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'SecretKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'AccessKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        10 => 
        array (
          'name' => 'Engine',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'AuditionUrl' => 
              array (
                'description' => '试听文件地址',
                'type' => 'string',
                'example' => 'http://XXX/XXX',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"AuditionUrl\\": \\"http://XXX/XXX\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeTTSDemoResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <AuditionUrl>http://XXX/XXX</AuditionUrl>\\n</DescribeTTSDemoResponse>","errorExample":""}]',
      'title' => 'TTS 试听',
      'summary' => 'TTS试听。',
    ),
    'CreateJobGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名字。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '第一个任务',
          ),
        ),
        2 => 
        array (
          'name' => 'JobGroupDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务描述。',
            'type' => 'string',
            'required' => false,
            'example' => '任务描述',
          ),
        ),
        3 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景。旧版画布参数，公共云客户场景使用ScriptId即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'b9ff4e88-65f9-4eb3-987c-11ba51f3f24d
',
          ),
        ),
        4 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术场景ID。该参数不能和ScenarioId同时为空。',
            'type' => 'string',
            'required' => false,
            'example' => 'b9ff4e88-65f9-4eb3-987c-11ba51f3f24d',
          ),
        ),
        5 => 
        array (
          'name' => 'StrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务执行策略。  
- RepeatBy 重复类型。Once(不重复),Day(按天重复),Week(按周重复),Month(按月重复);  
- StartTime 策略开始时间。
- EndTime 策略结束时间。  
- WorkingTime 可外呼时间段。
- MaxAttemptsPerDay 每天该任务下号码最大可尝试呼叫次数。
- MinAttemptInterval 号码重试呼叫时间间隔，单位分钟。
- RoutingStrategy 号码策略，None(不指定)，LocalFirst(本市号码优先), LocalProvinceFirst(本省号码优先)。
- RepeatDays 对应重复类型下的执行日期。若重复类型RepeatBy为周，0表示周日，1-6分别表示周一至周六；若重复周期RepeatBy为月，1-31分别表示1至31日，没有该指定日期的月份不执行，如：若选定30日，二月份不执行。',
            'type' => 'string',
            'required' => false,
            'example' => '{"maxAttemptsPerDay":"3","minAttemptInterval":"10","routingStrategy":"LocalProvinceFirst","repeatDays":["1","2","3"],"workingTime":[{"beginTime":"10:00:00","endTime":"11:00:00"},{"beginTime":"14:00:00","endTime":"15:00:00"}],"repeatable":true,"endTime":1707494400000,"startTime":1706976000000,"repeatBy":"Week"}',
          ),
        ),
        6 => 
        array (
          'name' => 'RecallStrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '重拨策略，json格式。

- **emptyNumberIgnore**：空号不外呼。
- **inArrearsIgnore**：欠费不外呼。
- **outOfServiceIgnore**：停机不外呼。',
            'type' => 'string',
            'required' => false,
            'example' => '{"emptyNumberIgnore":true,"inArrearsIgnore":true,"outOfServiceIgnore":true}',
          ),
        ),
        7 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码',
              'type' => 'string',
              'required' => false,
              'example' => '["95187"]',
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
        8 => 
        array (
          'name' => 'RingingDuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最优振铃时长',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '25',
          ),
        ),
        9 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组优先级，取值范围如下
- **Urgent**：紧急任务。
- **Daily**：日常任务。',
            'type' => 'string',
            'required' => false,
            'example' => 'Daily',
            'enum' => 
            array (
              0 => 'Daily',
              1 => 'Urgent',
            ),
          ),
        ),
        10 => 
        array (
          'name' => 'MinConcurrency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '并发保障值。  
- 任务启动时，最低保障N个并发。
- 同一优先级的任务并发保障值加和不能大于实例并发。  
- 若配置并发保障值为0，则依赖系统内空闲并发进行智能分配。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'FlashSmsExtras',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '闪信推送的配置参数，JSON格式，包含第三方闪信的配置信息。  
- templateId: 闪信模板ID。  
- configId: 闪信配置ID。',
            'type' => 'string',
            'required' => false,
            'example' => '{"templateId":"10471","configId":"8037f524-6ff2-4dbe-bb28-f59234ea7a64"}',
          ),
        ),
        12 => 
        array (
          'name' => 'RecallCallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '提示信息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobGroup' => 
              array (
                'description' => '任务信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '任务状态。',
                    'type' => 'string',
                    'example' => 'Scheduling',
                  ),
                  'ScenarioId' => 
                  array (
                    'description' => '场景ID。',
                    'type' => 'string',
                    'example' => '6cea9bed-63e6-439e-ae4c-b3333efff53d',
                  ),
                  'JobGroupId' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'string',
                    'example' => 'c62e6789-28a8-41db-941e-171a01d3b3b9',
                  ),
                  'CreationTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578550074361',
                  ),
                  'JobGroupName' => 
                  array (
                    'description' => '任务名称。',
                    'type' => 'string',
                    'example' => '第一个作业组',
                  ),
                  'JobFilePath' => 
                  array (
                    'description' => '任务文件OSS路径。',
                    'type' => 'string',
                    'example' => 'UPLOADED/JOB/b3865dc3-40fa-4afd-9fe4-dc7cda305a24/229eac13-379d-4abe-96e0-8cf026b56c0b_template (1).xlsx',
                  ),
                  'JobGroupDescription' => 
                  array (
                    'description' => '任务描述。',
                    'type' => 'string',
                    'example' => '第一个的作业组',
                  ),
                  'JobDataParsingTaskId' => 
                  array (
                    'description' => '上传的任务文件对应后台异步解析操作的ID.',
                    'type' => 'string',
                    'example' => '744ff448-2b4c-40d4-94ca-51f246905b0f',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术场景名称。',
                    'type' => 'string',
                    'example' => '话术',
                  ),
                  'ScriptVersion' => 
                  array (
                    'description' => '话术场景版本。',
                    'type' => 'string',
                    'example' => '1628425608429',
                  ),
                  'ModifyTime' => 
                  array (
                    'description' => '修改时间。',
                    'type' => 'string',
                    'example' => '1628425608429',
                  ),
                  'CallingNumbers' => 
                  array (
                    'description' => '主叫号码列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主叫号码。',
                      'type' => 'string',
                      'example' => '["95187"]',
                    ),
                  ),
                  'ExportProgress' => 
                  array (
                    'description' => '导出进度。(该字段在当前接口已删除)',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '任务导出状态。',
                        'type' => 'string',
                        'example' => 'FINISHED',
                      ),
                      'FileHttpUrl' => 
                      array (
                        'description' => '文件地址。',
                        'type' => 'string',
                        'example' => 'https://***.oss-cn-shanghai.aliyuncs.com/sample',
                      ),
                      'Progress' => 
                      array (
                        'description' => '进度。',
                        'type' => 'string',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'Strategy' => 
                  array (
                    'description' => '任务调度策略。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '策略类型。',
                        'type' => 'string',
                        'example' => 'Repeatable',
                      ),
                      'StrategyName' => 
                      array (
                        'description' => '策略名字。',
                        'type' => 'string',
                        'example' => '催收策略',
                      ),
                      'MaxAttemptsPerDay' => 
                      array (
                        'description' => '任务中电话未能接通时每天的最多尝试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'FollowUpStrategy' => 
                      array (
                        'description' => '执行周期结束后的后续处理方式（该字段不再使用）。',
                        'type' => 'string',
                        'example' => 'CONTINUE',
                      ),
                      'EndTime' => 
                      array (
                        'description' => '结束时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2209702074000',
                      ),
                      'Customized' => 
                      array (
                        'description' => '策略自定义数据',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                      'IsTemplate' => 
                      array (
                        'description' => '是否是模板',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '开始时间。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578550074000',
                      ),
                      'StrategyId' => 
                      array (
                        'description' => '策略ID。',
                        'type' => 'string',
                        'example' => 'cc9a436e-03b0-4ada-8364-77ec2290aa39',
                      ),
                      'RoutingStrategy' => 
                      array (
                        'description' => '号码策略。
- None, 无特殊规则
- LocalFirst, 本市号码优先
- LocalProvinceFirst, 本省号码优先',
                        'type' => 'string',
                        'example' => 'LocalFirst',
                      ),
                      'MinAttemptInterval' => 
                      array (
                        'description' => '拨打间隔时间',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'StrategyDescription' => 
                      array (
                        'description' => '策略描述',
                        'type' => 'string',
                        'example' => '催收策略',
                      ),
                      'RepeatBy' => 
                      array (
                        'description' => '重复执行方式，once不重复，day每天重复，week每周重复，month每月重复',
                        'type' => 'string',
                        'example' => 'Once',
                      ),
                      'WorkingTime' => 
                      array (
                        'description' => '策略执行时间窗口',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '策略执行时间窗口',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '窗口开始时间',
                              'type' => 'string',
                              'example' => '12:00:00',
                            ),
                            'BeginTime' => 
                            array (
                              'description' => '窗口结束时间',
                              'type' => 'string',
                              'example' => '09:00:00',
                            ),
                          ),
                        ),
                      ),
                      'RepeatDays' => 
                      array (
                        'description' => '重复的执行天。
- 若重复周期**RepeatBy**为**周**，0表示周日，1-6分别表示周一至周六
- 若重复周期**RepeatBy**为**月**，1-31分别表示1至31日，没有该指定日期的月份不执行，如：若选定30日，二月份不执行',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重复的执行天',
                          'type' => 'string',
                          'example' => '[1,2,3,4,5]',
                        ),
                      ),
                    ),
                  ),
                  'RecallStrategy' => 
                  array (
                    'description' => '重拨策略。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EmptyNumberIgnore' => 
                      array (
                        'description' => '空号不再外呼',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'InArrearsIgnore' => 
                      array (
                        'description' => '欠费不再外呼',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'OutOfServiceIgnore' => 
                      array (
                        'description' => '停机不再外呼',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                    ),
                  ),
                  'RingingDuration' => 
                  array (
                    'description' => '振铃时长',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '30',
                  ),
                  'Priority' => 
                  array (
                    'description' => '作业组优先级，取值范围
- **Urgent**：紧急任务。
- **Daily**：日常任务。',
                    'type' => 'string',
                    'example' => 'Daily',
                  ),
                  'MinConcurrency' => 
                  array (
                    'description' => '并发保障值
任务启动时，最低保障N个并发；
同一优先级的任务并发保障值加和不能大于实例并发；
若配置并发保障值为0，则依赖系统内空闲并发进行智能分配。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'RecallCallingNumbers' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"JobGroup\\": {\\n    \\"Status\\": \\"Scheduling\\",\\n    \\"ScenarioId\\": \\"6cea9bed-63e6-439e-ae4c-b3333efff53d\\",\\n    \\"JobGroupId\\": \\"c62e6789-28a8-41db-941e-171a01d3b3b9\\",\\n    \\"CreationTime\\": 1578550074361,\\n    \\"JobGroupName\\": \\"第一个作业组\\",\\n    \\"JobFilePath\\": \\"UPLOADED/JOB/b3865dc3-40fa-4afd-9fe4-dc7cda305a24/229eac13-379d-4abe-96e0-8cf026b56c0b_template (1).xlsx\\",\\n    \\"JobGroupDescription\\": \\"第一个的作业组\\",\\n    \\"JobDataParsingTaskId\\": \\"744ff448-2b4c-40d4-94ca-51f246905b0f\\",\\n    \\"ScriptName\\": \\"话术\\",\\n    \\"ScriptVersion\\": \\"1628425608429\\",\\n    \\"ModifyTime\\": \\"1628425608429\\",\\n    \\"CallingNumbers\\": [\\n      \\"[\\\\\\"95187\\\\\\"]\\"\\n    ],\\n    \\"ExportProgress\\": {\\n      \\"Status\\": \\"FINISHED\\",\\n      \\"FileHttpUrl\\": \\"https://***.oss-cn-shanghai.aliyuncs.com/sample\\",\\n      \\"Progress\\": \\"1\\"\\n    },\\n    \\"Strategy\\": {\\n      \\"Type\\": \\"Repeatable\\",\\n      \\"StrategyName\\": \\"催收策略\\",\\n      \\"MaxAttemptsPerDay\\": 3,\\n      \\"FollowUpStrategy\\": \\"CONTINUE\\",\\n      \\"EndTime\\": 2209702074000,\\n      \\"Customized\\": \\"{}\\",\\n      \\"IsTemplate\\": false,\\n      \\"StartTime\\": 1578550074000,\\n      \\"StrategyId\\": \\"cc9a436e-03b0-4ada-8364-77ec2290aa39\\",\\n      \\"RoutingStrategy\\": \\"LocalFirst\\",\\n      \\"MinAttemptInterval\\": 3,\\n      \\"StrategyDescription\\": \\"催收策略\\",\\n      \\"RepeatBy\\": \\"Once\\",\\n      \\"WorkingTime\\": [\\n        {\\n          \\"EndTime\\": \\"12:00:00\\",\\n          \\"BeginTime\\": \\"09:00:00\\"\\n        }\\n      ],\\n      \\"RepeatDays\\": [\\n        \\"[1,2,3,4,5]\\"\\n      ]\\n    },\\n    \\"RecallStrategy\\": {\\n      \\"EmptyNumberIgnore\\": true,\\n      \\"InArrearsIgnore\\": true,\\n      \\"OutOfServiceIgnore\\": true\\n    },\\n    \\"RingingDuration\\": 30,\\n    \\"Priority\\": \\"Daily\\",\\n    \\"MinConcurrency\\": 1,\\n    \\"RecallCallingNumbers\\": [\\n      \\"\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateJobGroupResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <JobGroup>\\n        <Status>Scheduling</Status>\\n        <ScenarioId>6cea9bed-63e6-439e-ae4c-b3333efff53d</ScenarioId>\\n        <JobGroupId>c62e6789-28a8-41db-941e-171a01d3b3b9</JobGroupId>\\n        <CreationTime>1578550074361</CreationTime>\\n        <JobGroupName>第一个作业组</JobGroupName>\\n        <JobFilePath>UPLOADED/JOB/b3865dc3-40fa-4afd-9fe4-dc7cda305a24/229eac13-379d-4abe-96e0-8cf026b56c0b_template (1).xlsx</JobFilePath>\\n        <JobGroupDescription>第一个的作业组</JobGroupDescription>\\n        <JobDataParsingTaskId>744ff448-2b4c-40d4-94ca-51f246905b0f</JobDataParsingTaskId>\\n        <ScriptName>话术</ScriptName>\\n        <ScriptVersion>1628425608429</ScriptVersion>\\n        <ModifyTime>1628425608429</ModifyTime>\\n        <CallingNumbers>[\\"95187\\"]</CallingNumbers>\\n        <ExportProgress>\\n            <Status>FINISHED</Status>\\n            <FileHttpUrl>https://***.oss-cn-shanghai.aliyuncs.com/sample</FileHttpUrl>\\n            <Progress>1</Progress>\\n        </ExportProgress>\\n        <Strategy>\\n            <Type>Repeatable</Type>\\n            <StrategyName>催收策略</StrategyName>\\n            <MaxAttemptsPerDay>3</MaxAttemptsPerDay>\\n            <FollowUpStrategy>CONTINUE</FollowUpStrategy>\\n            <EndTime>2209702074000</EndTime>\\n            <Customized>{}</Customized>\\n            <IsTemplate>false</IsTemplate>\\n            <StartTime>1578550074000</StartTime>\\n            <StrategyId>cc9a436e-03b0-4ada-8364-77ec2290aa39</StrategyId>\\n            <RoutingStrategy>LocalFirst</RoutingStrategy>\\n            <MinAttemptInterval>3</MinAttemptInterval>\\n            <StrategyDescription>催收策略</StrategyDescription>\\n            <RepeatBy>Once</RepeatBy>\\n            <WorkingTime>\\n                <EndTime>12:00:00</EndTime>\\n                <BeginTime>09:00:00</BeginTime>\\n            </WorkingTime>\\n            <RepeatDays>[1,2,3,4,5]</RepeatDays>\\n        </Strategy>\\n        <RecallStrategy>\\n            <EmptyNumberIgnore>true</EmptyNumberIgnore>\\n            <InArrearsIgnore>true</InArrearsIgnore>\\n            <OutOfServiceIgnore>true</OutOfServiceIgnore>\\n        </RecallStrategy>\\n        <RingingDuration>30</RingingDuration>\\n        <Priority>Daily</Priority>\\n        <MinConcurrency>1</MinConcurrency>\\n    </JobGroup>\\n</CreateJobGroupResponse>","errorExample":""}]',
      'title' => '创建外呼任务',
      'summary' => '创建作业组。',
    ),
    'DescribeJobGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '46a9ad0c-3e11-44da-a9a7-2c21bf5ce185',
          ),
        ),
        2 => 
        array (
          'name' => 'BriefTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤条件，业务结果',
              'type' => 'string',
              'required' => false,
              'example' => '回访成功',
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobGroup' => 
              array (
                'description' => '返回的作业组信息',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578881227404',
                  ),
                  'Status' => 
                  array (
                    'description' => '作业组状态',
                    'type' => 'string',
                    'example' => 'Completed',
                  ),
                  'JobGroupName' => 
                  array (
                    'description' => '作业组名称',
                    'type' => 'string',
                    'example' => '催收作业组',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '49f00b0d-78ac-4d51-91de-a9e8e92b8470',
                  ),
                  'JobGroupId' => 
                  array (
                    'description' => '作业组id',
                    'type' => 'string',
                    'example' => '46a9ad0c-3e11-44da-a9a7-2c21bf5ce185',
                  ),
                  'ScenarioId' => 
                  array (
                    'description' => '场景id',
                    'type' => 'string',
                    'example' => 'fce6c599-8ede-40e3-9f78-0928eda7b4e8',
                  ),
                  'JobFilePath' => 
                  array (
                    'description' => '作业文件上传后的文件key',
                    'type' => 'string',
                    'example' => 'da37319b-6c83-4268-9f19-814aed62e401/a5a9a310-b902-4674-a6e1-29975cbaa312_100.xlsx',
                  ),
                  'JobGroupDescription' => 
                  array (
                    'description' => '作业组描述',
                    'type' => 'string',
                    'example' => '催收作业组',
                  ),
                  'JobDataParsingTaskId' => 
                  array (
                    'description' => '解析外呼数据任务id',
                    'type' => 'string',
                    'example' => 'da37319b-6c83-4268-9f19-814aed62e401/a5a9a310-b902-4674-a6e1-29975cbaa312_100.xlsx',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术名字',
                    'type' => 'string',
                    'example' => '催收话术',
                  ),
                  'ModifyTime' => 
                  array (
                    'description' => '修改时间',
                    'type' => 'string',
                    'example' => '1578881227404',
                  ),
                  'ScriptVersion' => 
                  array (
                    'description' => '话术版本',
                    'type' => 'string',
                    'example' => '49f00b0d-78ac-4d51-91de-a9e8e92b8470',
                  ),
                  'CallingNumbers' => 
                  array (
                    'description' => '主叫号码列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主叫号码列表',
                      'type' => 'string',
                      'example' => '["1****6"]',
                    ),
                  ),
                  'ExportProgress' => 
                  array (
                    'description' => '导出进度',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '导出状态',
                        'type' => 'string',
                        'example' => 'FINISHED',
                      ),
                      'FileHttpUrl' => 
                      array (
                        'description' => '文件地址',
                        'type' => 'string',
                        'example' => 'https://oss-cn-shanghai.aliyuncs.com/xx.zip',
                      ),
                      'Progress' => 
                      array (
                        'description' => '导出进度',
                        'type' => 'string',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'Progress' => 
                  array (
                    'description' => '作业组的统计信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TotalNotAnswered' => 
                      array (
                        'description' => '总计未接通的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'Status' => 
                      array (
                        'description' => '作业组状态',
                        'type' => 'string',
                        'example' => 'Executing',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '开始执行的时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578881227404',
                      ),
                      'Failed' => 
                      array (
                        'description' => '失败的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'Executing' => 
                      array (
                        'description' => '执行中的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'TotalJobs' => 
                      array (
                        'description' => '总作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'TotalCompleted' => 
                      array (
                        'description' => '总计完成的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'Duration' => 
                      array (
                        'description' => '作业组执行时间',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1000',
                      ),
                      'Scheduling' => 
                      array (
                        'description' => '调度中的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'Paused' => 
                      array (
                        'description' => '暂停的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'Cancelled' => 
                      array (
                        'description' => '取消的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'Briefs' => 
                      array (
                        'description' => '业务结果信息',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '业务结果名字',
                              'type' => 'string',
                              'example' => 'score',
                            ),
                            'Value' => 
                            array (
                              'description' => '业务结果值',
                              'type' => 'string',
                              'example' => '5',
                            ),
                          ),
                        ),
                      ),
                      'Categories' => 
                      array (
                        'description' => 'key vaule 形式的统计信息',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '自定义的统计信息字段名字',
                              'type' => 'string',
                              'example' => 'success',
                            ),
                            'Value' => 
                            array (
                              'description' => '自定义的统计信息值',
                              'type' => 'string',
                              'example' => '10',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Strategy' => 
                  array (
                    'description' => '作业的执行策略',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '策略类型',
                        'type' => 'string',
                        'example' => 'Repeatable',
                      ),
                      'StrategyName' => 
                      array (
                        'description' => '策略名字',
                        'type' => 'string',
                        'example' => '催收策略名字',
                      ),
                      'MaxAttemptsPerDay' => 
                      array (
                        'description' => '未接通情况下每日最大呼叫次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'FollowUpStrategy' => 
                      array (
                        'description' => '执行周期结束后的处理方式',
                        'type' => 'string',
                        'example' => 'NONE',
                      ),
                      'EndTime' => 
                      array (
                        'description' => '调度策略的总结束时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1579881227404',
                      ),
                      'Customized' => 
                      array (
                        'description' => '策略的自定义数据',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                      'IsTemplate' => 
                      array (
                        'description' => '是否是模版',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '策略总的开始时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578881227404',
                      ),
                      'StrategyId' => 
                      array (
                        'description' => '策略id',
                        'type' => 'string',
                        'example' => 'a2bff22c-2604-4df2-83d6-5952e2438c5a',
                      ),
                      'RoutingStrategy' => 
                      array (
                        'description' => '号码路由策略',
                        'type' => 'string',
                        'example' => 'LocalFirst',
                      ),
                      'MinAttemptInterval' => 
                      array (
                        'description' => '重新拨打的间隔时间',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'StrategyDescription' => 
                      array (
                        'description' => '策略描述',
                        'type' => 'string',
                        'example' => '催收策略',
                      ),
                      'RepeatBy' => 
                      array (
                        'description' => '作业重复方式',
                        'type' => 'string',
                        'example' => 'Once',
                      ),
                      'WorkingTime' => 
                      array (
                        'description' => '工作时间段',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '开始时间',
                              'type' => 'string',
                              'example' => '12:00:00',
                            ),
                            'BeginTime' => 
                            array (
                              'description' => '结束时间',
                              'type' => 'string',
                              'example' => '09:00:00',
                            ),
                          ),
                        ),
                      ),
                      'RepeatDays' => 
                      array (
                        'description' => '重复执行的天',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重复执行的天',
                          'type' => 'string',
                          'example' => '[1,2,3,4,5]',
                        ),
                      ),
                    ),
                  ),
                  'RecallStrategy' => 
                  array (
                    'description' => '重呼策略',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EmptyNumberIgnore' => 
                      array (
                        'description' => '空号不再外呼',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'InArrearsIgnore' => 
                      array (
                        'description' => '欠费不再外呼',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'OutOfServiceIgnore' => 
                      array (
                        'description' => '停机不再外呼',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                    ),
                  ),
                  'Result' => 
                  array (
                    'description' => '统计信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TimeoutHangupNum' => 
                      array (
                        'description' => '超时挂机数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'FinishedNum' => 
                      array (
                        'description' => '完成数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'NoInteractNum' => 
                      array (
                        'description' => '没有交互数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'ClientHangupNum' => 
                      array (
                        'description' => '客户挂机数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'UnrecognizedNum' => 
                      array (
                        'description' => '拒识数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'RingingDuration' => 
                  array (
                    'description' => '振铃时长',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '30',
                  ),
                  'Priority' => 
                  array (
                    'description' => '优先级',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'MinConcurrency' => 
                  array (
                    'description' => '最小并发',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'FlashSmsExtras' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ConfigId' => 
                      array (
                        'type' => 'string',
                      ),
                      'TemplateId' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                  ),
                  'RecallCallingNumbers' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.JobGroup',
            'errorMessage' => 'The specified JobGroup does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"JobGroup\\": {\\n    \\"CreationTime\\": 1578881227404,\\n    \\"Status\\": \\"Completed\\",\\n    \\"JobGroupName\\": \\"催收作业组\\",\\n    \\"ScriptId\\": \\"49f00b0d-78ac-4d51-91de-a9e8e92b8470\\",\\n    \\"JobGroupId\\": \\"46a9ad0c-3e11-44da-a9a7-2c21bf5ce185\\",\\n    \\"ScenarioId\\": \\"fce6c599-8ede-40e3-9f78-0928eda7b4e8\\",\\n    \\"JobFilePath\\": \\"da37319b-6c83-4268-9f19-814aed62e401/a5a9a310-b902-4674-a6e1-29975cbaa312_100.xlsx\\",\\n    \\"JobGroupDescription\\": \\"催收作业组\\",\\n    \\"JobDataParsingTaskId\\": \\"da37319b-6c83-4268-9f19-814aed62e401/a5a9a310-b902-4674-a6e1-29975cbaa312_100.xlsx\\",\\n    \\"ScriptName\\": \\"催收话术\\",\\n    \\"ModifyTime\\": \\"1578881227404\\",\\n    \\"ScriptVersion\\": \\"49f00b0d-78ac-4d51-91de-a9e8e92b8470\\",\\n    \\"CallingNumbers\\": [\\n      \\"[\\\\\\"1****6\\\\\\"]\\"\\n    ],\\n    \\"ExportProgress\\": {\\n      \\"Status\\": \\"FINISHED\\",\\n      \\"FileHttpUrl\\": \\"https://oss-cn-shanghai.aliyuncs.com/xx.zip\\",\\n      \\"Progress\\": \\"1\\"\\n    },\\n    \\"Progress\\": {\\n      \\"TotalNotAnswered\\": 1,\\n      \\"Status\\": \\"Executing\\",\\n      \\"StartTime\\": 1578881227404,\\n      \\"Failed\\": 0,\\n      \\"Executing\\": 2,\\n      \\"TotalJobs\\": 10,\\n      \\"TotalCompleted\\": 2,\\n      \\"Duration\\": 1000,\\n      \\"Scheduling\\": 5,\\n      \\"Paused\\": 0,\\n      \\"Cancelled\\": 0,\\n      \\"Briefs\\": [\\n        {\\n          \\"Key\\": \\"score\\",\\n          \\"Value\\": \\"5\\"\\n        }\\n      ],\\n      \\"Categories\\": [\\n        {\\n          \\"Key\\": \\"success\\",\\n          \\"Value\\": \\"10\\"\\n        }\\n      ]\\n    },\\n    \\"Strategy\\": {\\n      \\"Type\\": \\"Repeatable\\",\\n      \\"StrategyName\\": \\"催收策略名字\\",\\n      \\"MaxAttemptsPerDay\\": 2,\\n      \\"FollowUpStrategy\\": \\"NONE\\",\\n      \\"EndTime\\": 1579881227404,\\n      \\"Customized\\": \\"{}\\",\\n      \\"IsTemplate\\": false,\\n      \\"StartTime\\": 1578881227404,\\n      \\"StrategyId\\": \\"a2bff22c-2604-4df2-83d6-5952e2438c5a\\",\\n      \\"RoutingStrategy\\": \\"LocalFirst\\",\\n      \\"MinAttemptInterval\\": 10,\\n      \\"StrategyDescription\\": \\"催收策略\\",\\n      \\"RepeatBy\\": \\"Once\\",\\n      \\"WorkingTime\\": [\\n        {\\n          \\"EndTime\\": \\"12:00:00\\",\\n          \\"BeginTime\\": \\"09:00:00\\"\\n        }\\n      ],\\n      \\"RepeatDays\\": [\\n        \\"[1,2,3,4,5]\\"\\n      ]\\n    },\\n    \\"RecallStrategy\\": {\\n      \\"EmptyNumberIgnore\\": false,\\n      \\"InArrearsIgnore\\": false,\\n      \\"OutOfServiceIgnore\\": false\\n    },\\n    \\"Result\\": {\\n      \\"TimeoutHangupNum\\": 1,\\n      \\"FinishedNum\\": 1,\\n      \\"NoInteractNum\\": 1,\\n      \\"ClientHangupNum\\": 1,\\n      \\"UnrecognizedNum\\": 1\\n    },\\n    \\"RingingDuration\\": 30,\\n    \\"Priority\\": \\"1\\",\\n    \\"MinConcurrency\\": 1,\\n    \\"FlashSmsExtras\\": {\\n      \\"ConfigId\\": \\"\\",\\n      \\"TemplateId\\": \\"\\"\\n    },\\n    \\"RecallCallingNumbers\\": [\\n      \\"\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeJobGroupResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <JobGroup>\\n        <CreationTime>1578881227404</CreationTime>\\n        <Status>Completed</Status>\\n        <JobGroupName>催收作业组</JobGroupName>\\n        <ScriptId>49f00b0d-78ac-4d51-91de-a9e8e92b8470</ScriptId>\\n        <JobGroupId>46a9ad0c-3e11-44da-a9a7-2c21bf5ce185</JobGroupId>\\n        <ScenarioId>fce6c599-8ede-40e3-9f78-0928eda7b4e8</ScenarioId>\\n        <JobFilePath>da37319b-6c83-4268-9f19-814aed62e401/a5a9a310-b902-4674-a6e1-29975cbaa312_100.xlsx</JobFilePath>\\n        <JobGroupDescription>催收作业组</JobGroupDescription>\\n        <JobDataParsingTaskId>da37319b-6c83-4268-9f19-814aed62e401/a5a9a310-b902-4674-a6e1-29975cbaa312_100.xlsx</JobDataParsingTaskId>\\n        <ScriptName>催收话术</ScriptName>\\n        <ModifyTime>1578881227404</ModifyTime>\\n        <ScriptVersion>49f00b0d-78ac-4d51-91de-a9e8e92b8470</ScriptVersion>\\n        <CallingNumbers>[\\"1****6\\"]</CallingNumbers>\\n        <ExportProgress>\\n            <Status>FINISHED</Status>\\n            <FileHttpUrl>https://oss-cn-shanghai.aliyuncs.com/xx.zip</FileHttpUrl>\\n            <Progress>1</Progress>\\n        </ExportProgress>\\n        <Progress>\\n            <TotalNotAnswered>1</TotalNotAnswered>\\n            <Status>Executing</Status>\\n            <StartTime>1578881227404</StartTime>\\n            <Failed>0</Failed>\\n            <Executing>2</Executing>\\n            <TotalJobs>10</TotalJobs>\\n            <TotalCompleted>2</TotalCompleted>\\n            <Duration>1000</Duration>\\n            <Scheduling>5</Scheduling>\\n            <Paused>0</Paused>\\n            <Cancelled>0</Cancelled>\\n            <Briefs>\\n                <Key>score</Key>\\n                <Value>5</Value>\\n            </Briefs>\\n            <Categories>\\n                <Key>success</Key>\\n                <Value>10</Value>\\n            </Categories>\\n        </Progress>\\n        <Strategy>\\n            <Type>Repeatable</Type>\\n            <StrategyName>催收策略名字</StrategyName>\\n            <MaxAttemptsPerDay>2</MaxAttemptsPerDay>\\n            <FollowUpStrategy>NONE</FollowUpStrategy>\\n            <EndTime>1579881227404</EndTime>\\n            <Customized>{}</Customized>\\n            <IsTemplate>false</IsTemplate>\\n            <StartTime>1578881227404</StartTime>\\n            <StrategyId>a2bff22c-2604-4df2-83d6-5952e2438c5a</StrategyId>\\n            <RoutingStrategy>LocalFirst</RoutingStrategy>\\n            <MinAttemptInterval>10</MinAttemptInterval>\\n            <StrategyDescription>催收策略</StrategyDescription>\\n            <RepeatBy>Once</RepeatBy>\\n            <WorkingTime>\\n                <EndTime>12:00:00</EndTime>\\n                <BeginTime>09:00:00</BeginTime>\\n            </WorkingTime>\\n            <RepeatDays>[1,2,3,4,5]</RepeatDays>\\n        </Strategy>\\n        <RecallStrategy/>\\n        <Result>\\n            <TimeoutHangupNum>1</TimeoutHangupNum>\\n            <FinishedNum>1</FinishedNum>\\n            <NoInteractNum>1</NoInteractNum>\\n            <ClientHangupNum>1</ClientHangupNum>\\n            <UnrecognizedNum>1</UnrecognizedNum>\\n        </Result>\\n        <RingingDuration>30</RingingDuration>\\n    </JobGroup>\\n</DescribeJobGroupResponse>","errorExample":""}]',
      'title' => '查询任务数据',
      'summary' => '查询智能外呼任务数据。',
    ),
    'ModifyJobGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3edc0260-6f7c-4de4-8535-09372240618b',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名字。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '修改后的作业组',
          ),
        ),
        3 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景ID。(历史参数，后续使用ScriptId)',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'c6a668d1-3145-4048-9101-cb3678bb8884',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务描述。',
            'type' => 'string',
            'required' => false,
            'example' => '修改后的作业组',
          ),
        ),
        5 => 
        array (
          'name' => 'StrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组执行策略
name：策略名称
maxAttemptsPerDay：号码每天最大呼叫次数
minAttemptInterval：未接通情况下的重试时间间隔，单位为分钟
startTime：开始时间戳
endTime：结束时间戳
workingTime：可呼出的时间窗口，24小时制
id：策略id，对于该接口为必填',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"maxAttemptsPerDay\\":\\"0\\",\\"minAttemptInterval\\":\\"5\\",\\"Id\\":\\"689fc584-7f9f-4dc2-933d-8711beef7b15\\"}',
          ),
        ),
        6 => 
        array (
          'name' => 'RecallStrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '重拨策略json',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"emptyNumberIgnore\\":false,\\"inArrearsIgnore\\":false,\\"outOfServiceIgnore\\":false}',
          ),
        ),
        7 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景话术ID。',
            'type' => 'string',
            'required' => false,
            'example' => '5a3940ce-a12f-4222-9f0f-605a9b89ea7c',
          ),
        ),
        8 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码。',
              'type' => 'string',
              'required' => false,
              'example' => '["95187"]',
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
        9 => 
        array (
          'name' => 'JobGroupStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态，取值范围：

- **Draft**：草稿。
- **Scheduling**：调度中。
- **Executing**：执行中。
- **Completed**：已完成。
- **Paused**：挂起。
- **Failed**：失败。
- **Cancelled**：已取消。
- **Initializing**：初始化。',
            'type' => 'string',
            'required' => false,
            'example' => 'Draft',
          ),
        ),
        10 => 
        array (
          'name' => 'RingingDuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最优振铃时长。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '25',
          ),
        ),
        11 => 
        array (
          'name' => 'MinConcurrency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '并发保障值
任务启动时，最低保障N个并发；
同一优先级的任务并发保障值加和不能大于实例并发；
若配置并发保障值为0，则依赖系统内空闲并发进行智能分配。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组优先级，取值范围
- **Urgent**：紧急任务。
- **Daily**：日常任务。',
            'type' => 'string',
            'required' => false,
            'example' => 'Daily',
          ),
        ),
        13 => 
        array (
          'name' => 'FlashSmsExtras',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '闪信推送的配置参数，JSON格式，包含第三方闪信的配置信息。

templateId: 闪信模板ID。  
configId: 闪信配置ID。',
            'type' => 'string',
            'required' => false,
            'example' => '{"templateId":"10471","configId":"8037f524-6ff2-4dbe-bb28-f59234ea7a64"}
',
          ),
        ),
        14 => 
        array (
          'name' => 'RecallCallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobGroup' => 
              array (
                'description' => '任务信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '状态。',
                    'type' => 'string',
                    'example' => 'Scheduling',
                  ),
                  'ScenarioId' => 
                  array (
                    'description' => '场景ID。',
                    'type' => 'string',
                    'example' => '6cea9bed-63e6-439e-ae4c-b3333efff53d',
                  ),
                  'JobGroupId' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'string',
                    'example' => 'c62e6789-28a8-41db-941e-171a01d3b3b9',
                  ),
                  'CreationTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578550074361',
                  ),
                  'JobGroupName' => 
                  array (
                    'description' => '任务名字。',
                    'type' => 'string',
                    'example' => '第一个催收',
                  ),
                  'JobFilePath' => 
                  array (
                    'description' => '任务文件OSS存储路径。',
                    'type' => 'string',
                    'example' => 'UPLOADED/JOB/d481cebe-0bb6-4d13-9649-42ce5074fb75/6c7d9132-98e1-4f08-8a76-8a266c7532fd_job_template - 副本.xlsx',
                  ),
                  'JobGroupDescription' => 
                  array (
                    'description' => '任务描述。',
                    'type' => 'string',
                    'example' => '催收的作业组',
                  ),
                  'JobDataParsingTaskId' => 
                  array (
                    'description' => '解析外呼任务文件对应的解析任务ID。',
                    'type' => 'string',
                    'example' => 'e37d28cb-0413-4816-85ed-fd354d025ea3',
                  ),
                  'ScriptName' => 
                  array (
                    'description' => '话术名称。',
                    'type' => 'string',
                    'example' => '话术',
                  ),
                  'ScriptVersion' => 
                  array (
                    'description' => '话术版本。',
                    'type' => 'string',
                    'example' => '1628425608429',
                  ),
                  'ModifyTime' => 
                  array (
                    'description' => '修改时间。',
                    'type' => 'string',
                    'example' => '1628425608429',
                  ),
                  'CallingNumbers' => 
                  array (
                    'description' => '主叫号码列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主叫号码列表',
                      'type' => 'string',
                      'example' => '["95187"]',
                    ),
                  ),
                  'ExportProgress' => 
                  array (
                    'description' => '导出信息(历史参数，不再使用)',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '状态',
                        'type' => 'string',
                        'example' => 'FINISHED',
                      ),
                      'FileHttpUrl' => 
                      array (
                        'description' => '文件地址',
                        'type' => 'string',
                        'example' => 'https://***.oss-cn-shanghai.aliyuncs.com/sample',
                      ),
                      'Progress' => 
                      array (
                        'description' => '进度',
                        'type' => 'string',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'Strategy' => 
                  array (
                    'description' => '外呼策略。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '策略类型。',
                        'type' => 'string',
                        'example' => 'Repeatable',
                      ),
                      'StrategyName' => 
                      array (
                        'description' => '策略名称。',
                        'type' => 'string',
                        'example' => '催收策略',
                      ),
                      'MaxAttemptsPerDay' => 
                      array (
                        'description' => '最大尝试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'FollowUpStrategy' => 
                      array (
                        'description' => '执行周期结束后的处理方式(历史参数，不再使用);',
                        'type' => 'string',
                        'example' => 'CONTINUE',
                      ),
                      'EndTime' => 
                      array (
                        'description' => '结束时间。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2209702074000',
                      ),
                      'Customized' => 
                      array (
                        'description' => '自定义策略数据(历史参数，不再使用)。',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                      'IsTemplate' => 
                      array (
                        'description' => '是否是模板(历史参数，不再使用)。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '开始时间。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578550074000',
                      ),
                      'StrategyId' => 
                      array (
                        'description' => '策略ID。',
                        'type' => 'string',
                        'example' => 'f718798d-96be-40e4-bef6-317b54855708',
                      ),
                      'RoutingStrategy' => 
                      array (
                        'description' => '号码路由策略。',
                        'type' => 'string',
                        'example' => 'LocalFirst',
                      ),
                      'MinAttemptInterval' => 
                      array (
                        'description' => '失败后重复拨打的间隔时间。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'StrategyDescription' => 
                      array (
                        'description' => '策略描述。',
                        'type' => 'string',
                        'example' => '催收作业执行策略',
                      ),
                      'RepeatBy' => 
                      array (
                        'description' => '重复执行方式，Once 不重复，Day 每天重复，Week 每周重复，Month 每月重复。',
                        'type' => 'string',
                        'example' => 'Once',
                      ),
                      'WorkingTime' => 
                      array (
                        'description' => '允许外呼的时间段。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '工作时间段。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '结束时间。',
                              'type' => 'string',
                              'example' => '12:00:00',
                            ),
                            'BeginTime' => 
                            array (
                              'description' => '开始时间。',
                              'type' => 'string',
                              'example' => '09:00:00',
                            ),
                          ),
                        ),
                      ),
                      'RepeatDays' => 
                      array (
                        'description' => '重复的执行天。

若重复周期RepeatBy为周，0表示周日，1-6分别表示周一至周六
若重复周期RepeatBy为月，1-31分别表示1至31日，没有该指定日期的月份不执行，如：若选定30日，二月份不执行',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重复执行的天。',
                          'type' => 'string',
                          'example' => '[1,2,3,4,5]',
                        ),
                      ),
                    ),
                  ),
                  'RecallStrategy' => 
                  array (
                    'description' => '重呼策略',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EmptyNumberIgnore' => 
                      array (
                        'description' => '空号不再外呼。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'InArrearsIgnore' => 
                      array (
                        'description' => '欠费不再外呼。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'OutOfServiceIgnore' => 
                      array (
                        'description' => '停机不再外呼。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                    ),
                  ),
                  'RingingDuration' => 
                  array (
                    'description' => '振铃时长。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '25',
                  ),
                  'Priority' => 
                  array (
                    'description' => '作业组优先级，取值范围

Urgent：紧急任务。
Daily：日常任务。',
                    'type' => 'string',
                    'example' => 'Daily',
                  ),
                  'MinConcurrency' => 
                  array (
                    'description' => '并发保障值
任务启动时，最低保障N个并发；
同一优先级的任务并发保障值加和不能大于实例并发；
若配置并发保障值为0，则依赖系统内空闲并发进行智能分配。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'FlashSmsExtras' => 
                  array (
                    'description' => '闪信推送的配置参数，JSON格式，包含第三方闪信的配置信息。

templateId: 闪信模板ID。
configId: 闪信配置ID。',
                    'type' => 'string',
                    'example' => '{"configId":"3157b3c8-3a3e-4ea9-894b-9c8a6", "templateId":"1234"}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"JobGroup\\": {\\n    \\"Status\\": \\"Scheduling\\",\\n    \\"ScenarioId\\": \\"6cea9bed-63e6-439e-ae4c-b3333efff53d\\",\\n    \\"JobGroupId\\": \\"c62e6789-28a8-41db-941e-171a01d3b3b9\\",\\n    \\"CreationTime\\": 1578550074361,\\n    \\"JobGroupName\\": \\"第一个催收\\",\\n    \\"JobFilePath\\": \\"UPLOADED/JOB/d481cebe-0bb6-4d13-9649-42ce5074fb75/6c7d9132-98e1-4f08-8a76-8a266c7532fd_job_template - 副本.xlsx\\",\\n    \\"JobGroupDescription\\": \\"催收的作业组\\",\\n    \\"JobDataParsingTaskId\\": \\"e37d28cb-0413-4816-85ed-fd354d025ea3\\",\\n    \\"ScriptName\\": \\"话术\\",\\n    \\"ScriptVersion\\": \\"1628425608429\\",\\n    \\"ModifyTime\\": \\"1628425608429\\",\\n    \\"CallingNumbers\\": [\\n      \\"[\\\\\\"95187\\\\\\"]\\"\\n    ],\\n    \\"ExportProgress\\": {\\n      \\"Status\\": \\"FINISHED\\",\\n      \\"FileHttpUrl\\": \\"https://***.oss-cn-shanghai.aliyuncs.com/sample\\",\\n      \\"Progress\\": \\"1\\"\\n    },\\n    \\"Strategy\\": {\\n      \\"Type\\": \\"Repeatable\\",\\n      \\"StrategyName\\": \\"催收策略\\",\\n      \\"MaxAttemptsPerDay\\": 3,\\n      \\"FollowUpStrategy\\": \\"CONTINUE\\",\\n      \\"EndTime\\": 2209702074000,\\n      \\"Customized\\": \\"{}\\",\\n      \\"IsTemplate\\": false,\\n      \\"StartTime\\": 1578550074000,\\n      \\"StrategyId\\": \\"f718798d-96be-40e4-bef6-317b54855708\\",\\n      \\"RoutingStrategy\\": \\"LocalFirst\\",\\n      \\"MinAttemptInterval\\": 10,\\n      \\"StrategyDescription\\": \\"催收作业执行策略\\",\\n      \\"RepeatBy\\": \\"Once\\",\\n      \\"WorkingTime\\": [\\n        {\\n          \\"EndTime\\": \\"12:00:00\\",\\n          \\"BeginTime\\": \\"09:00:00\\"\\n        }\\n      ],\\n      \\"RepeatDays\\": [\\n        \\"[1,2,3,4,5]\\"\\n      ]\\n    },\\n    \\"RecallStrategy\\": {\\n      \\"EmptyNumberIgnore\\": false,\\n      \\"InArrearsIgnore\\": false,\\n      \\"OutOfServiceIgnore\\": false\\n    },\\n    \\"RingingDuration\\": 25,\\n    \\"Priority\\": \\"Daily\\",\\n    \\"MinConcurrency\\": 1,\\n    \\"FlashSmsExtras\\": \\"{\\\\\\"configId\\\\\\":\\\\\\"3157b3c8-3a3e-4ea9-894b-9c8a6\\\\\\", \\\\\\"templateId\\\\\\":\\\\\\"1234\\\\\\"}\\"\\n  }\\n}","type":"json"}]',
      'title' => '修改任务数据',
      'summary' => '修改智能外呼任务。',
    ),
    'ListJobGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务开始时间。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1578965079000',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务结束时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1579965079000',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '1000',
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'AsyncQuery',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否异步获取查询结果',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchText',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字',
            'type' => 'string',
            'required' => false,
            'example' => '面试',
          ),
        ),
        7 => 
        array (
          'name' => 'JobGroupStatusFilter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件：按照任务状态过滤，可以同时选择多个状态过滤，各个状态之间用逗号分隔，逻辑或关系。
取值范围：
- **Draft**：草稿。
- **Scheduling**：调度中。
- **Executing**：执行中。
- **Completed**：已完成。
- **Paused**：挂起。
- **Failed**：失败。
- **Cancelled**：已取消。
- **Initializing**：初始化。',
            'type' => 'string',
            'required' => false,
            'example' => 'Draft,Scheduling',
          ),
        ),
        8 => 
        array (
          'name' => 'OnlyMinConcurrencyEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。true：调用成功。                                 false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'AsyncTaskId' => 
              array (
                'description' => '异步查询ID，若为异步查询，可以根据此ID获取查询结果。',
                'type' => 'string',
                'example' => '2bb0cf15-2126-4c9b-bc30-bb5301b96284',
              ),
              'JobGroups' => 
              array (
                'description' => '任务列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '分页页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页数据数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '记录总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'List' => 
                  array (
                    'description' => '数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '执行状态，取值范围：

- **Draft**：草稿。
- **Scheduling**：调度中。
- **Executing**：执行中。
- **Completed**：已完成。
- **Paused**：挂起。
- **Failed**：失败。
- **Cancelled**：已取消。
- **Initializing**：初始化。',
                          'type' => 'string',
                          'example' => 'Draft',
                        ),
                        'JobGroupId' => 
                        array (
                          'description' => '任务ID。',
                          'type' => 'string',
                          'example' => 'c62e6789-28a8-41db-941e-171a01d3b3b9',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1578550074361',
                        ),
                        'JobGroupName' => 
                        array (
                          'description' => '任务名字。',
                          'type' => 'string',
                          'example' => '催收作业组',
                        ),
                        'TotalCallNum' => 
                        array (
                          'description' => '总呼叫次数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术ID。',
                          'type' => 'string',
                          'example' => 'c62e6789-28a8-41db-941e-171a01d3b3b9',
                        ),
                        'JobGroupDescription' => 
                        array (
                          'description' => '任务描述。',
                          'type' => 'string',
                          'example' => '催收的作业组',
                        ),
                        'JobDataParsingTaskId' => 
                        array (
                          'description' => 'jobFile解析任务的ID。',
                          'type' => 'string',
                          'example' => 'c62e6789-28a8-41db-941e-171a01d3b3b9',
                        ),
                        'ScriptName' => 
                        array (
                          'description' => '话术名称。',
                          'type' => 'string',
                          'example' => '话术名称',
                        ),
                        'ScriptVersion' => 
                        array (
                          'description' => '话术版本。',
                          'type' => 'string',
                          'example' => 'd9e828ac-744b-4dd3-848a-17a3da9167b8',
                        ),
                        'ModifyTime' => 
                        array (
                          'description' => '修改时间，单位毫秒。',
                          'type' => 'string',
                          'example' => '1578550074361',
                        ),
                        'Progress' => 
                        array (
                          'description' => '任务统计信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TotalNotAnswered' => 
                            array (
                              'description' => '作业未接通数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Status' => 
                            array (
                              'description' => '执行状态，取值范围：

- **Draft**：草稿。
- **Scheduling**：调度中。
- **Executing**：执行中。
- **Completed**：已完成。
- **Paused**：挂起。
- **Failed**：失败。
- **Cancelled**：已取消。
- **Initializing**：初始化。',
                              'type' => 'string',
                              'example' => 'Scheduling',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '开始时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1578550074361',
                            ),
                            'FailedNum' => 
                            array (
                              'description' => '已作废',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'PausedNum' => 
                            array (
                              'description' => '已作废',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'CancelledNum' => 
                            array (
                              'description' => '已作废',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'TotalJobs' => 
                            array (
                              'description' => '作业总数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '20',
                            ),
                            'TotalCompleted' => 
                            array (
                              'description' => '到当前时间为止作业完成数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                            'Duration' => 
                            array (
                              'description' => '到目前为止执行总时长。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1578550074361',
                            ),
                            'ExecutingNum' => 
                            array (
                              'description' => '已作废',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '10',
                            ),
                            'Scheduling' => 
                            array (
                              'description' => '调度中的作业数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '10',
                            ),
                          ),
                          'example' => '{}',
                        ),
                        'ExportProgress' => 
                        array (
                          'description' => '导出进度。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '导出任务状态，取值范围：

- **PENDING**：等待中。
- **IN_PROGRESS**：处理中。
- **FINISHED**：完成。
- **FAILED**：失败。',
                              'type' => 'string',
                              'example' => 'PENDING',
                            ),
                            'FileHttpUrl' => 
                            array (
                              'description' => '下载地址。',
                              'type' => 'string',
                              'example' => 'http://www.xxx.com/xxx',
                            ),
                            'Progress' => 
                            array (
                              'description' => '进度。',
                              'type' => 'string',
                              'example' => '50',
                            ),
                          ),
                          'example' => '{}',
                        ),
                        'Strategy' => 
                        array (
                          'description' => '策略。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '策略结束时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '2209702074000',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '策略开始时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1578550074000',
                            ),
                          ),
                          'example' => '{}',
                        ),
                        'MinConcurrency' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"AsyncTaskId\\": \\"2bb0cf15-2126-4c9b-bc30-bb5301b96284\\",\\n  \\"JobGroups\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 100,\\n    \\"List\\": [\\n      {\\n        \\"Status\\": \\"Draft\\",\\n        \\"JobGroupId\\": \\"c62e6789-28a8-41db-941e-171a01d3b3b9\\",\\n        \\"CreationTime\\": 1578550074361,\\n        \\"JobGroupName\\": \\"催收作业组\\",\\n        \\"TotalCallNum\\": 10,\\n        \\"ScriptId\\": \\"c62e6789-28a8-41db-941e-171a01d3b3b9\\",\\n        \\"JobGroupDescription\\": \\"催收的作业组\\",\\n        \\"JobDataParsingTaskId\\": \\"c62e6789-28a8-41db-941e-171a01d3b3b9\\",\\n        \\"ScriptName\\": \\"话术名称\\",\\n        \\"ScriptVersion\\": \\"d9e828ac-744b-4dd3-848a-17a3da9167b8\\",\\n        \\"ModifyTime\\": \\"1578550074361\\",\\n        \\"Progress\\": {\\n          \\"TotalNotAnswered\\": 1,\\n          \\"Status\\": \\"Scheduling\\",\\n          \\"StartTime\\": 1578550074361,\\n          \\"FailedNum\\": 5,\\n          \\"PausedNum\\": 5,\\n          \\"CancelledNum\\": 5,\\n          \\"TotalJobs\\": 20,\\n          \\"TotalCompleted\\": 3,\\n          \\"Duration\\": 1578550074361,\\n          \\"ExecutingNum\\": 10,\\n          \\"Scheduling\\": 10\\n        },\\n        \\"ExportProgress\\": {\\n          \\"Status\\": \\"PENDING\\",\\n          \\"FileHttpUrl\\": \\"http://www.xxx.com/xxx\\",\\n          \\"Progress\\": \\"50\\"\\n        },\\n        \\"Strategy\\": {\\n          \\"EndTime\\": 2209702074000,\\n          \\"StartTime\\": 1578550074000\\n        },\\n        \\"MinConcurrency\\": 0\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询任务列表',
      'summary' => '查询外呼任务列表。',
    ),
    'ListJobGroupsAsync' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AsyncTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当调用ListJobGroup时采用Async模式时，ListJobGroup返回的AsyncTaskId的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6243d904-939d-42ce-a8e4-886a139e77a3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Timeout' => 
              array (
                'description' => '是否超时',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Vaild' => 
              array (
                'description' => '是否有效',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页号',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总计个数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'JobGroups' => 
              array (
                'description' => '作业组列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '作业分组状态',
                      'type' => 'string',
                      'example' => 'Scheduling',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1640316786259',
                    ),
                    'JobGroupId' => 
                    array (
                      'description' => '任务组id',
                      'type' => 'string',
                      'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                    ),
                    'JobGroupName' => 
                    array (
                      'description' => '作业分组的名字',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'TotalCallNum' => 
                    array (
                      'description' => '总呼叫次数',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术流程id',
                      'type' => 'string',
                      'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                    ),
                    'JobGroupDescription' => 
                    array (
                      'description' => '作业分组描述',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'JobDataParsingTaskId' => 
                    array (
                      'description' => 'jobFile解析任务的id',
                      'type' => 'string',
                      'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                    ),
                    'ScriptName' => 
                    array (
                      'description' => '作业组使用的场景的名字',
                      'type' => 'string',
                      'example' => 'xxxx',
                    ),
                    'ScriptVersion' => 
                    array (
                      'description' => '话术版本',
                      'type' => 'string',
                      'example' => '111',
                    ),
                    'ModifyTime' => 
                    array (
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '1640316786259',
                    ),
                    'Strategy' => 
                    array (
                      'description' => '策略',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '结束时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1640316786259',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1640316786259',
                        ),
                      ),
                      'example' => '{}',
                    ),
                    'Progress' => 
                    array (
                      'description' => '作业进展状况',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TotalNotAnswered' => 
                        array (
                          'description' => '到当前时间为止未接通作业数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Status' => 
                        array (
                          'description' => '该作业分组的作业整体执行状况',
                          'type' => 'string',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1640316786259',
                        ),
                        'FailedNum' => 
                        array (
                          'description' => '失败的job数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'PausedNum' => 
                        array (
                          'description' => '暂停的job数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'CancelledNum' => 
                        array (
                          'description' => '取消的job数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'TotalCompleted' => 
                        array (
                          'description' => '到当前时间为止作业完成数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'TotalJobs' => 
                        array (
                          'description' => '作业总数',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'Duration' => 
                        array (
                          'description' => '到目前为止执行总时长',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1000',
                        ),
                        'Scheduling' => 
                        array (
                          'description' => '调度中的job数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'ExecutingNum' => 
                        array (
                          'description' => '执行中的job数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                      ),
                      'example' => '{}',
                    ),
                    'ExportProgress' => 
                    array (
                      'description' => '导出进度',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '任务状态',
                          'type' => 'string',
                          'example' => 'PENDING',
                        ),
                        'FileHttpUrl' => 
                        array (
                          'description' => '下载地址',
                          'type' => 'string',
                          'example' => 'http://',
                        ),
                        'Progress' => 
                        array (
                          'description' => '进度',
                          'type' => 'string',
                          'example' => '50',
                        ),
                      ),
                      'example' => '{}',
                    ),
                    'MinConcurrency' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Timeout\\": true,\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Vaild\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 100,\\n  \\"JobGroups\\": [\\n    {\\n      \\"Status\\": \\"Scheduling\\",\\n      \\"CreationTime\\": 1640316786259,\\n      \\"JobGroupId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n      \\"JobGroupName\\": \\"xxx\\",\\n      \\"TotalCallNum\\": 100,\\n      \\"ScriptId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n      \\"JobGroupDescription\\": \\"xxx\\",\\n      \\"JobDataParsingTaskId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n      \\"ScriptName\\": \\"xxxx\\",\\n      \\"ScriptVersion\\": \\"111\\",\\n      \\"ModifyTime\\": \\"1640316786259\\",\\n      \\"Strategy\\": {\\n        \\"EndTime\\": 1640316786259,\\n        \\"StartTime\\": 1640316786259\\n      },\\n      \\"Progress\\": {\\n        \\"TotalNotAnswered\\": 1,\\n        \\"Status\\": \\"\\",\\n        \\"StartTime\\": 1640316786259,\\n        \\"FailedNum\\": 10,\\n        \\"PausedNum\\": 10,\\n        \\"CancelledNum\\": 10,\\n        \\"TotalCompleted\\": 10,\\n        \\"TotalJobs\\": 100,\\n        \\"Duration\\": 1000,\\n        \\"Scheduling\\": 20,\\n        \\"ExecutingNum\\": 20\\n      },\\n      \\"ExportProgress\\": {\\n        \\"Status\\": \\"PENDING\\",\\n        \\"FileHttpUrl\\": \\"http://\\",\\n        \\"Progress\\": \\"50\\"\\n      },\\n      \\"MinConcurrency\\": 0\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '异步查询任务列表',
      'summary' => '异步获取外呼任务列表。当在调用ListJobGroup接口时指定了Async时，使用此接口获取异步ListJobGroup的结果。',
    ),
    'DeleteJobGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8fa1953f-4a84-46d8-b80c-8ce9cf684fb3',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fc1fb484-4fe8-4031-b662-5b87ea88590b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => '无',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"无\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除一个任务',
      'summary' => '删除一个任务。',
    ),
    'CreateBatchJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'BatchJobName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量作业名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '第一个作业组',
          ),
        ),
        2 => 
        array (
          'name' => 'BatchJobDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量作业名字',
            'type' => 'string',
            'required' => false,
            'example' => '描述',
          ),
        ),
        3 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景id',
            'type' => 'string',
            'required' => false,
            'example' => 'c6a668d1-3145-4048-9101-cb3678bb8884',
          ),
        ),
        4 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => false,
            'example' => 'b9ff4e88-65f9-4eb3-987c-11ba51f3f24d',
          ),
        ),
        5 => 
        array (
          'name' => 'StrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业执行策略json',
            'type' => 'string',
            'required' => false,
            'example' => '{"maxAttemptsPerDay":2,"name":"策略名字","workingTime":[{"beginTime":"09:00:00","endTime":"12:00:00"},{"beginTime":"13:00:00","endTime":"18:30:00"}],"minAttemptInterval":60}',
          ),
        ),
        6 => 
        array (
          'name' => 'JobFilePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下载批量作业excel的地址',
            'type' => 'string',
            'required' => false,
            'example' => '52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx',
          ),
        ),
        7 => 
        array (
          'name' => 'Submitted',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否提交，false 提交，true 草稿状态',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码。',
              'type' => 'string',
              'required' => false,
              'example' => '95187',
            ),
            'required' => false,
            'example' => '["95187"]',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '一下请求的id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BatchJob' => 
              array (
                'description' => '作业组信息',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '作业组创建时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1579068424000',
                  ),
                  'ScenarioId' => 
                  array (
                    'description' => '作业组场景id',
                    'type' => 'string',
                    'example' => '6cea9bed-63e6-439e-ae4c-b3333efff53d',
                  ),
                  'JobGroupName' => 
                  array (
                    'description' => '作业组名字',
                    'type' => 'string',
                    'example' => '批量作业01',
                  ),
                  'BatchJobId' => 
                  array (
                    'description' => '作业组id',
                    'type' => 'string',
                    'example' => '5a7e8b09-baf9-4cab-b540-c971f47a7146',
                  ),
                  'JobFilePath' => 
                  array (
                    'description' => '上传的excel 文件key',
                    'type' => 'string',
                    'example' => '52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx',
                  ),
                  'JobGroupDescription' => 
                  array (
                    'description' => '作业组描述',
                    'type' => 'string',
                    'example' => '第一个批量作业',
                  ),
                  'CallingNumbers' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主叫号码列表',
                      'type' => 'string',
                      'example' => '["95187"]',
                    ),
                  ),
                  'Strategy' => 
                  array (
                    'description' => '作业执行策略',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '策略类型',
                        'type' => 'string',
                        'example' => 'Repeatable',
                      ),
                      'StrategyName' => 
                      array (
                        'description' => '策略名字',
                        'type' => 'string',
                        'example' => '策略',
                      ),
                      'MaxAttemptsPerDay' => 
                      array (
                        'description' => '拨打失败后最多重新拨打次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'FollowUpStrategy' => 
                      array (
                        'description' => '前周期未完成外呼业务的后续处理方案。',
                        'type' => 'string',
                        'example' => 'CONTINUE',
                      ),
                      'EndTime' => 
                      array (
                        'description' => '调度策略总的结束时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2209702074000',
                      ),
                      'Customized' => 
                      array (
                        'description' => '策略自定义信息',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                      'IsTemplate' => 
                      array (
                        'description' => '是否是模板',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '作业组开始执行时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578550074000',
                      ),
                      'StrategyId' => 
                      array (
                        'description' => '策略id',
                        'type' => 'string',
                        'example' => 'f718798d-96be-40e4-bef6-317b54855708',
                      ),
                      'RoutingStrategy' => 
                      array (
                        'description' => '主叫号码录音策略',
                        'type' => 'string',
                        'example' => 'LocalFirst',
                      ),
                      'MinAttemptInterval' => 
                      array (
                        'description' => '重新拨打间隔时间',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'StrategyDescription' => 
                      array (
                        'description' => '策略描述',
                        'type' => 'string',
                        'example' => '作业执行策略',
                      ),
                      'RepeatBy' => 
                      array (
                        'description' => '重复执行方式，Once 不重复， Day 没人重复， Week 每周重复，Month 每月重复',
                        'type' => 'string',
                        'example' => 'Once',
                      ),
                      'WorkingTime' => 
                      array (
                        'description' => '作业一天中的执行时间段',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '结束时间',
                              'type' => 'string',
                              'example' => '12:00:00',
                            ),
                            'BeginTime' => 
                            array (
                              'description' => '开始时间',
                              'type' => 'string',
                              'example' => '09:00:00',
                            ),
                          ),
                        ),
                      ),
                      'RepeatDays' => 
                      array (
                        'description' => '重复执行的天列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重复执行天',
                          'type' => 'string',
                          'example' => '[1,2,3,4,5]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"BatchJob\\": {\\n    \\"CreationTime\\": 1579068424000,\\n    \\"ScenarioId\\": \\"6cea9bed-63e6-439e-ae4c-b3333efff53d\\",\\n    \\"JobGroupName\\": \\"批量作业01\\",\\n    \\"BatchJobId\\": \\"5a7e8b09-baf9-4cab-b540-c971f47a7146\\",\\n    \\"JobFilePath\\": \\"52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx\\",\\n    \\"JobGroupDescription\\": \\"第一个批量作业\\",\\n    \\"CallingNumbers\\": [\\n      \\"[\\\\\\"95187\\\\\\"]\\"\\n    ],\\n    \\"Strategy\\": {\\n      \\"Type\\": \\"Repeatable\\",\\n      \\"StrategyName\\": \\"策略\\",\\n      \\"MaxAttemptsPerDay\\": 3,\\n      \\"FollowUpStrategy\\": \\"CONTINUE\\",\\n      \\"EndTime\\": 2209702074000,\\n      \\"Customized\\": \\"{}\\",\\n      \\"IsTemplate\\": false,\\n      \\"StartTime\\": 1578550074000,\\n      \\"StrategyId\\": \\"f718798d-96be-40e4-bef6-317b54855708\\",\\n      \\"RoutingStrategy\\": \\"LocalFirst\\",\\n      \\"MinAttemptInterval\\": 10,\\n      \\"StrategyDescription\\": \\"作业执行策略\\",\\n      \\"RepeatBy\\": \\"Once\\",\\n      \\"WorkingTime\\": [\\n        {\\n          \\"EndTime\\": \\"12:00:00\\",\\n          \\"BeginTime\\": \\"09:00:00\\"\\n        }\\n      ],\\n      \\"RepeatDays\\": [\\n        \\"[1,2,3,4,5]\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<BatchJob>\\n    <CallingNumbers>95187</CallingNumbers>\\n    <BatchJobName>第一个作业组</BatchJobName>\\n    <ScriptId>63cc3b45-feb2-4676-a7d7-f717001fa1e1</ScriptId>\\n    <Strategy>\\n        <MaxAttemptsPerDay>2</MaxAttemptsPerDay>\\n        <MinAttemptInterval>60</MinAttemptInterval>\\n        <StrategyName>策略名字</StrategyName>\\n        <WorkingTime>\\n            <BeginTime>09:00:00</BeginTime>\\n            <EndTime>12:00:00</EndTime>\\n        </WorkingTime>\\n        <WorkingTime>\\n            <BeginTime>13:00:00</BeginTime>\\n            <EndTime>18:30:00</EndTime>\\n        </WorkingTime>\\n    </Strategy>\\n</BatchJob>\\n<Success>true</Success>","errorExample":""}]',
      'title' => 'CreateBatchJobs',
      'summary' => '批量创建外呼作业。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'da37319b-6c83-4268-9f19-814aed62e401',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => false,
            'example' => '4f21446e-324e-46f2-bf62-7f341fb004ea',
          ),
        ),
        2 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景id，为了兼容旧版外呼功能。可不填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        3 => 
        array (
          'name' => 'JobJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业数据',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"extras":[{"value":"2019-08-21 09:49:59.0","key":"djrq"}],"contacts":[{"phonenumber":"1816*******","name":"张三","referenceId":"2c9a9a7c6caedab6016cb1ddd13325ed","honorific":"张先生"}]}',
          ),
        ),
        4 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id，2020年2月份后创建的话术，该字段必填',
            'type' => 'string',
            'required' => false,
            'example' => 'b9ff4e88-65f9-4eb3-987c-11ba51f3f24d',
          ),
        ),
        5 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => '10086',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '8a621aa1-d2e7-43f3-b54d-8830af73c468',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TaskIds' => 
              array (
                'description' => '联系人第三方id和外呼系统任务id的映射',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '联系人第三方id',
                      'type' => 'string',
                      'example' => 'c93cdd1c-f9b5-4758-be43-7a237a7eaa1d',
                    ),
                    'Value' => 
                    array (
                      'description' => '外呼系统任务id',
                      'type' => 'string',
                      'example' => '62229628-45d8-41bd-a80f-6e4c0a39f79b',
                    ),
                  ),
                ),
              ),
              'CallIds' => 
              array (
                'description' => '通话ID列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '联系人第三方id，referenceId。',
                      'type' => 'string',
                      'example' => 'c93cdd1c-f9b5-4758-be43-7a237a7eaa1d',
                    ),
                    'Value' => 
                    array (
                      'description' => '通话ID',
                      'type' => 'string',
                      'example' => '62229628-45d8-41bd-a80f-6e4c0a39f79b',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.JobGroup',
            'errorMessage' => 'The specified JobGroup does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"8a621aa1-d2e7-43f3-b54d-8830af73c468\\",\\n  \\"Success\\": true,\\n  \\"TaskIds\\": [\\n    {\\n      \\"Key\\": \\"c93cdd1c-f9b5-4758-be43-7a237a7eaa1d\\",\\n      \\"Value\\": \\"62229628-45d8-41bd-a80f-6e4c0a39f79b\\"\\n    }\\n  ],\\n  \\"CallIds\\": [\\n    {\\n      \\"Key\\": \\"c93cdd1c-f9b5-4758-be43-7a237a7eaa1d\\",\\n      \\"Value\\": \\"62229628-45d8-41bd-a80f-6e4c0a39f79b\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CallIds>\\n    <Value>62229628-45d8-41bd-a80f-6e4c0a39f79b</Value>\\n    <Key>c93cdd1c-f9b5-4758-be43-7a237a7eaa1d</Key>\\n</CallIds>\\n<RequestId>8a621aa1-d2e7-43f3-b54d-8830af73c468</RequestId>\\n<Message>Success</Message>\\n<TaskIds>\\n    <Value>62229628-45d8-41bd-a80f-6e4c0a39f79b</Value>\\n    <Key>c93cdd1c-f9b5-4758-be43-7a237a7eaa1d</Key>\\n</TaskIds>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '创建一个作业',
      'summary' => '不经过外呼调度系统直接发起呼叫。该接口只针对白名单用户开放。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyBatchJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c6a668d1-3145-4048-9101-cb3678bb8884',
          ),
        ),
        2 => 
        array (
          'name' => 'BatchJobName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '催收作业组',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组描述',
            'type' => 'string',
            'required' => false,
            'example' => '这是催收作业组-01',
          ),
        ),
        4 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景id',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'c6a668d1-3145-4048-9101-cb3678bb8884',
          ),
        ),
        5 => 
        array (
          'name' => 'StrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略json',
            'type' => 'string',
            'required' => false,
            'example' => '{"maxAttemptsPerDay":2,"name":"策略名字","workingTime":[{"beginTime":"09:00:00","endTime":"12:00:00"},{"beginTime":"13:00:00","endTime":"18:30:00"}],"minAttemptInterval":60}',
          ),
        ),
        6 => 
        array (
          'name' => 'JobFilePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业excel文件下载地址',
            'type' => 'string',
            'required' => false,
            'example' => '52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx',
          ),
        ),
        7 => 
        array (
          'name' => 'Submitted',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否提交，false 提交，true保存为草稿状态',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术ID',
            'type' => 'string',
            'required' => false,
            'example' => '7d820242-f4f0-4d2e-ae35-b424c41cbc5b',
          ),
        ),
        9 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => '["95187"]',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => ' 请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobGroup' => 
              array (
                'description' => '作业组信息',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1579068424000',
                  ),
                  'JobGroupId' => 
                  array (
                    'description' => '作业组id',
                    'type' => 'string',
                    'example' => '5a7e8b09-baf9-4cab-b540-c971f47a7146',
                  ),
                  'ScenarioId' => 
                  array (
                    'description' => '场景id',
                    'type' => 'string',
                    'example' => '6cea9bed-63e6-439e-ae4c-b3333efff53d',
                  ),
                  'JobGroupName' => 
                  array (
                    'description' => '作业组名字',
                    'type' => 'string',
                    'example' => '第一个催收作业组',
                  ),
                  'JobFilePath' => 
                  array (
                    'description' => '作业文件上传后的文件key',
                    'type' => 'string',
                    'example' => '52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx',
                  ),
                  'JobGroupDescription' => 
                  array (
                    'description' => '作业组描述',
                    'type' => 'string',
                    'example' => '第一个催收作业组',
                  ),
                  'CallingNumbers' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主叫号码列表',
                      'type' => 'string',
                      'example' => '["95187"]',
                    ),
                  ),
                  'Strategy' => 
                  array (
                    'description' => '执行策略',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '策略类型',
                        'type' => 'string',
                        'example' => 'Repeatable',
                      ),
                      'StrategyName' => 
                      array (
                        'description' => '策略名字',
                        'type' => 'string',
                        'example' => '催收策略',
                      ),
                      'MaxAttemptsPerDay' => 
                      array (
                        'description' => '拨打失败后最大重复拨打次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'FollowUpStrategy' => 
                      array (
                        'description' => '执行周期结束后的后续处理方式',
                        'type' => 'string',
                        'example' => 'CONTINUE',
                      ),
                      'EndTime' => 
                      array (
                        'description' => '结束时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2209702074000',
                      ),
                      'Customized' => 
                      array (
                        'description' => '策略自定义数据',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                      'IsTemplate' => 
                      array (
                        'description' => '是否是模板',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '开始时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578550074000',
                      ),
                      'StrategyId' => 
                      array (
                        'description' => '策略id',
                        'type' => 'string',
                        'example' => 'f718798d-96be-40e4-bef6-317b54855708',
                      ),
                      'RoutingStrategy' => 
                      array (
                        'description' => '号码路由策略',
                        'type' => 'string',
                        'example' => 'LocalFirst',
                      ),
                      'MinAttemptInterval' => 
                      array (
                        'description' => '重复拨打的间隔时间',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'StrategyDescription' => 
                      array (
                        'description' => '策略描述',
                        'type' => 'string',
                        'example' => '催收作业执行策略',
                      ),
                      'RepeatBy' => 
                      array (
                        'description' => '重复执行方式，',
                        'type' => 'string',
                        'example' => 'Once',
                      ),
                      'WorkingTime' => 
                      array (
                        'description' => '策略执行时间段',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '结束时间',
                              'type' => 'string',
                              'example' => '1581997093000',
                            ),
                            'BeginTime' => 
                            array (
                              'description' => '开始时间',
                              'type' => 'string',
                              'example' => '1581937093000',
                            ),
                          ),
                        ),
                      ),
                      'RepeatDays' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重复执行的天',
                          'type' => 'string',
                          'example' => '[1,2,3,4,5]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"JobGroup\\": {\\n    \\"JobGroupId\\": \\"5a7e8b09-baf9-4cab-b540-c971f47a7146\\",\\n    \\"ScenarioId\\": \\"6cea9bed-63e6-439e-ae4c-b3333efff53d\\",\\n    \\"CreationTime\\": 1579068424000,\\n    \\"JobGroupName\\": \\"第一个催收作业组\\",\\n    \\"JobFilePath\\": \\"52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx\\",\\n    \\"JobGroupDescription\\": \\"第一个催收作业组\\",\\n    \\"CallingNumbers\\": [\\n      \\"[\\\\\\"95187\\\\\\"]\\"\\n    ],\\n    \\"Strategy\\": {\\n      \\"Type\\": \\"Repeatable\\",\\n      \\"StrategyName\\": \\"催收策略\\",\\n      \\"MaxAttemptsPerDay\\": 3,\\n      \\"FollowUpStrategy\\": \\"CONTINUE\\",\\n      \\"EndTime\\": 2209702074000,\\n      \\"IsTemplate\\": false,\\n      \\"StartTime\\": 1578550074000,\\n      \\"Customized\\": \\"{}\\",\\n      \\"StrategyId\\": \\"f718798d-96be-40e4-bef6-317b54855708\\",\\n      \\"RoutingStrategy\\": \\"LocalFirst\\",\\n      \\"StrategyDescription\\": \\"催收作业执行策略\\",\\n      \\"MinAttemptInterval\\": 10,\\n      \\"RepeatBy\\": \\"Once\\",\\n      \\"WorkingTime\\": [\\n        {\\n          \\"EndTime\\": \\"1581997093000\\",\\n          \\"BeginTime\\": \\"1581937093000\\"\\n        }\\n      ],\\n      \\"RepeatDays\\": [\\n        \\"[1,2,3,4,5]\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<BatchJob>\\n    <CallingNumbers>95187</CallingNumbers>\\n    <BatchJobName>第一个催收作业组</BatchJobName>\\n    <ScriptId>63cc3b45-feb2-4676-a7d7-f717001fa1e1</ScriptId>\\n    <Strategy>\\n        <MaxAttemptsPerDay>2</MaxAttemptsPerDay>\\n        <MinAttemptInterval>60</MinAttemptInterval>\\n        <StrategyName>策略名字</StrategyName>\\n        <WorkingTime>\\n            <BeginTime>09:00:00</BeginTime>\\n            <EndTime>12:00:00</EndTime>\\n        </WorkingTime>\\n        <WorkingTime>\\n            <BeginTime>13:00:00</BeginTime>\\n            <EndTime>18:30:00</EndTime>\\n        </WorkingTime>\\n    </Strategy>\\n</BatchJob>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '修改作业组（包括作业）',
      'summary' => '修改作业做（包括作业）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c8a2b7f2-ad1a-4865-b872-d0080d9802d9',
          ),
        ),
        2 => 
        array (
          'name' => 'WithScript',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回任务场景信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Job' => 
              array (
                'description' => '作业信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '作业状态。
- Scheduling(调度中),
- Executing(执行中),
- Succeeded(成功),
- Paused(暂停),
- Failed(失败),
- Cancelled(已取消),
- Drafted(草稿态,文件导入时的临时状态);',
                    'type' => 'string',
                    'example' => 'Succeeded',
                  ),
                  'ActualTime' => 
                  array (
                    'description' => '作业实际执行时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640068026385',
                  ),
                  'Priority' => 
                  array (
                    'description' => '作业优先级。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'DsReport' => 
                  array (
                    'description' => '任务命中标签情况。',
                    'type' => 'string',
                    'example' => '-',
                  ),
                  'NextExecutionTime' => 
                  array (
                    'description' => '任务下次执行的时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640068026385',
                  ),
                  'FailureReason' => 
                  array (
                    'description' => '作业失败原因。',
                    'type' => 'string',
                    'example' => 'NoAnswer',
                  ),
                  'SystemPriority' => 
                  array (
                    'description' => '作业系统优先级。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'd5971d98-7312-4f0e-a918-a17d67133e28',
                  ),
                  'CalledNumber' => 
                  array (
                    'description' => '被叫号码。',
                    'type' => 'string',
                    'example' => '137****7777',
                  ),
                  'ReferenceId' => 
                  array (
                    'description' => '作业的业务ID，有业务方自定义。',
                    'type' => 'string',
                    'example' => 'd5971d98-7312-4f0e-a918-a17d67133e28',
                  ),
                  'JobGroupId' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'string',
                    'example' => 'fce6c599-8ede-40e3-9f78-0928eda7b4e8',
                  ),
                  'ScenarioId' => 
                  array (
                    'description' => '场景ID。',
                    'type' => 'string',
                    'example' => 'ade80092-03d9-4f4d-ad4f-ab8a247d3150',
                  ),
                  'StrategyId' => 
                  array (
                    'description' => '策略ID。',
                    'type' => 'string',
                    'example' => 'c8a2b7f2-ad1a-4865-b872-d0080d9802d9',
                  ),
                  'EndReason' => 
                  array (
                    'description' => '通话完结原因。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'JobId' => 
                  array (
                    'description' => '作业ID。',
                    'type' => 'string',
                    'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                  ),
                  'Contacts' => 
                  array (
                    'description' => '联系人信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PhoneNumber' => 
                        array (
                          'description' => '电话号码。',
                          'type' => 'string',
                          'example' => '1358****8888',
                        ),
                        'State' => 
                        array (
                          'description' => '联系人状态。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'ContactId' => 
                        array (
                          'description' => '联系人ID。',
                          'type' => 'string',
                          'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                        ),
                        'Honorific' => 
                        array (
                          'description' => '联系人尊称。',
                          'type' => 'string',
                          'example' => '张先生',
                        ),
                        'JobId' => 
                        array (
                          'description' => '作业ID。',
                          'type' => 'string',
                          'example' => '72dcd26b-f12d-4c27-b3af-18f6aed5b160',
                        ),
                        'ContactName' => 
                        array (
                          'description' => '联系人名字。',
                          'type' => 'string',
                          'example' => '张三',
                        ),
                        'Role' => 
                        array (
                          'description' => '联系人角色。',
                          'type' => 'string',
                          'example' => '*',
                        ),
                        'ReferenceId' => 
                        array (
                          'description' => '联系人的业务ID。',
                          'type' => 'string',
                          'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                        ),
                      ),
                    ),
                    'example' => '[]',
                  ),
                  'Extras' => 
                  array (
                    'description' => '业务参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '业务参数名字。',
                          'type' => 'string',
                          'example' => 'djrq',
                        ),
                        'Value' => 
                        array (
                          'description' => '业务参数值。',
                          'type' => 'string',
                          'example' => '2019-08-21 09:49:59.0',
                        ),
                      ),
                    ),
                    'example' => '[]',
                  ),
                  'Summary' => 
                  array (
                    'description' => '对话摘要数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SummaryName' => 
                        array (
                          'description' => '摘要名字。',
                          'type' => 'string',
                          'example' => 'score',
                        ),
                        'Category' => 
                        array (
                          'description' => '对话摘要类别（历史字段，不再使用）。',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'Content' => 
                        array (
                          'description' => '摘要内容。',
                          'type' => 'string',
                          'example' => '5',
                        ),
                      ),
                    ),
                    'example' => '[]',
                  ),
                  'Tasks' => 
                  array (
                    'description' => '通话列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '通话状态。',
                          'type' => 'string',
                          'example' => 'Succeeded',
                        ),
                        'PlanedTime' => 
                        array (
                          'description' => '计划拨打时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1579068424883',
                        ),
                        'ChatbotId' => 
                        array (
                          'description' => '对话的机器人ID。',
                          'type' => 'string',
                          'example' => '1234',
                        ),
                        'ActualTime' => 
                        array (
                          'description' => '实际执行时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1579068424883',
                        ),
                        'CalledNumber' => 
                        array (
                          'description' => '被叫号码。',
                          'type' => 'string',
                          'example' => '135****8888',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '实际结束的时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1579068424883',
                        ),
                        'ScenarioId' => 
                        array (
                          'description' => '场景ID。',
                          'type' => 'string',
                          'example' => 'ade80092-03d9-4f4d-ad4f-ab8a247d3150',
                        ),
                        'EndReason' => 
                        array (
                          'description' => '完结原因。',
                          'type' => 'string',
                          'example' => 'FINISHED',
                        ),
                        'JobId' => 
                        array (
                          'description' => '作业ID。',
                          'type' => 'string',
                          'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                        ),
                        'CallId' => 
                        array (
                          'description' => 'SIP call id。',
                          'type' => 'string',
                          'example' => '1528189846043',
                        ),
                        'CallingNumber' => 
                        array (
                          'description' => '主叫号码。',
                          'type' => 'string',
                          'example' => '0571****3106',
                        ),
                        'Brief' => 
                        array (
                          'description' => '业务结果。(历史字段，不再使用)',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Duration' => 
                        array (
                          'description' => '对话持续时间。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '120',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '通话ID。',
                          'type' => 'string',
                          'example' => 'ff44709e-39a6-43ba-959b-20fcabe3e496',
                        ),
                        'Conversation' => 
                        array (
                          'description' => '任务的对话文本列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'ActionParams' => 
                              array (
                                'description' => '指令参数。',
                                'type' => 'string',
                                'example' => '{}',
                              ),
                              'Action' => 
                              array (
                                'description' => '指令。',
                                'type' => 'string',
                                'example' => 'Broadcast',
                              ),
                              'Timestamp' => 
                              array (
                                'description' => '摘要创建时间。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1579068424883',
                              ),
                              'Speaker' => 
                              array (
                                'description' => '对话是谁说的，Robot 机器人 ，Contact 联系人。',
                                'type' => 'string',
                                'example' => 'Robot',
                              ),
                              'Script' => 
                              array (
                                'description' => '对话文本。',
                                'type' => 'string',
                                'example' => '你好，我是**客服',
                              ),
                              'Summary' => 
                              array (
                                'description' => '对话摘要数据(历史数据，不再使用)',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'SummaryName' => 
                                    array (
                                      'description' => '摘要名字。',
                                      'type' => 'string',
                                      'example' => 'score',
                                    ),
                                    'Category' => 
                                    array (
                                      'description' => '对话摘要类别(历史字段，不再使用)',
                                      'type' => 'string',
                                      'example' => '{}',
                                    ),
                                    'Content' => 
                                    array (
                                      'description' => '摘要内容。',
                                      'type' => 'string',
                                      'example' => '5',
                                    ),
                                  ),
                                ),
                                'example' => '[]',
                              ),
                              'SequenceId' => 
                              array (
                                'description' => '会话ID。',
                                'type' => 'string',
                                'example' => 'fd279983-93b9-b13b-9a34-64e5df473225',
                              ),
                            ),
                          ),
                          'example' => '[]',
                        ),
                        'Contact' => 
                        array (
                          'description' => '联系人信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PhoneNumber' => 
                            array (
                              'description' => '电话号码。',
                              'type' => 'string',
                              'example' => '1351****8888',
                            ),
                            'State' => 
                            array (
                              'description' => '联系人状态。',
                              'type' => 'string',
                              'example' => 'Available',
                            ),
                            'ContactId' => 
                            array (
                              'description' => '联系人ID。',
                              'type' => 'string',
                              'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                            ),
                            'Honorific' => 
                            array (
                              'description' => '联系人尊称。',
                              'type' => 'string',
                              'example' => '张先生',
                            ),
                            'JobId' => 
                            array (
                              'description' => '作业id',
                              'type' => 'string',
                              'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                            ),
                            'ContactName' => 
                            array (
                              'description' => '联系人名字',
                              'type' => 'string',
                              'example' => '张三',
                            ),
                            'Role' => 
                            array (
                              'description' => '联系人角色',
                              'type' => 'string',
                              'example' => '*',
                            ),
                            'ReferenceId' => 
                            array (
                              'description' => '联系人业务系统ID。',
                              'type' => 'string',
                              'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                            ),
                          ),
                          'example' => '{}',
                        ),
                        'HangUpDirection' => 
                        array (
                          'description' => '挂断方。',
                          'type' => 'string',
                          'example' => 'client',
                        ),
                        'RingingDuration' => 
                        array (
                          'description' => '响铃持续时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '25',
                        ),
                        'SipCode' => 
                        array (
                          'description' => '呼叫任务的SIP状态码。',
                          'type' => 'string',
                          'example' => '200',
                        ),
                      ),
                    ),
                    'example' => '[]',
                  ),
                  'CallingNumbers' => 
                  array (
                    'description' => '主叫号码列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主叫号码。',
                      'type' => 'string',
                      'example' => '["0571****3106"]',
                    ),
                    'example' => '["057126883106"]',
                  ),
                  'Script' => 
                  array (
                    'description' => '话术场景。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'DRAFTED',
                      ),
                      'UpdateTime' => 
                      array (
                        'description' => '更新时间。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1578881227000',
                      ),
                      'ChatbotId' => 
                      array (
                        'description' => '对话机器人ID。',
                        'type' => 'string',
                        'example' => 'chatbot-cn-EJfqqa***',
                      ),
                      'ScriptId' => 
                      array (
                        'description' => '话术ID。',
                        'type' => 'string',
                        'example' => '810b5872-57f0-4b27-80ab-7b3f4d8a6374',
                      ),
                      'IsDebugDrafted' => 
                      array (
                        'description' => '调试版本是否为草稿态。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'Industry' => 
                      array (
                        'description' => '行业。',
                        'type' => 'string',
                        'example' => '金融',
                      ),
                      'ScriptDescription' => 
                      array (
                        'description' => '话术描述。',
                        'type' => 'string',
                        'example' => '催收话术',
                      ),
                      'MiniPlaybackConfigEnabled' => 
                      array (
                        'description' => '语气承接功能开关。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'IsDrafted' => 
                      array (
                        'description' => '是否是草稿状态。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'TtsConfig' => 
                      array (
                        'description' => '话术的TTS配置。',
                        'type' => 'string',
                        'example' => '{\\"voice\\":\\"xiaobei\\",\\"volume\\":\\"50\\",\\"speechRate\\":\\"-150\\",\\"pitchRate\\":\\"0\\"}',
                      ),
                      'DebugStatus' => 
                      array (
                        'description' => '调试状态。',
                        'type' => 'string',
                        'example' => 'DRAFTED',
                      ),
                      'AsrConfig' => 
                      array (
                        'description' => '话术的ASR配置。',
                        'type' => 'string',
                        'example' => '{\\"AppKey\\":\\"3GHttnsvir1FeWWb\\"}',
                      ),
                      'Scene' => 
                      array (
                        'description' => '场景。',
                        'type' => 'string',
                        'example' => '催收',
                      ),
                      'Name' => 
                      array (
                        'description' => '话术名字。',
                        'type' => 'string',
                        'example' => '催收话术',
                      ),
                    ),
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Job',
            'errorMessage' => 'The specified Job does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Job\\": {\\n    \\"Status\\": \\"Succeeded\\",\\n    \\"ActualTime\\": 1640068026385,\\n    \\"Priority\\": 5,\\n    \\"DsReport\\": \\"-\\",\\n    \\"NextExecutionTime\\": 1640068026385,\\n    \\"FailureReason\\": \\"NoAnswer\\",\\n    \\"SystemPriority\\": 1,\\n    \\"InstanceId\\": \\"d5971d98-7312-4f0e-a918-a17d67133e28\\",\\n    \\"CalledNumber\\": \\"137****7777\\",\\n    \\"ReferenceId\\": \\"d5971d98-7312-4f0e-a918-a17d67133e28\\",\\n    \\"JobGroupId\\": \\"fce6c599-8ede-40e3-9f78-0928eda7b4e8\\",\\n    \\"ScenarioId\\": \\"ade80092-03d9-4f4d-ad4f-ab8a247d3150\\",\\n    \\"StrategyId\\": \\"c8a2b7f2-ad1a-4865-b872-d0080d9802d9\\",\\n    \\"EndReason\\": 1,\\n    \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n    \\"Contacts\\": [\\n      {\\n        \\"PhoneNumber\\": \\"1358****8888\\",\\n        \\"State\\": \\"Available\\",\\n        \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n        \\"Honorific\\": \\"张先生\\",\\n        \\"JobId\\": \\"72dcd26b-f12d-4c27-b3af-18f6aed5b160\\",\\n        \\"ContactName\\": \\"张三\\",\\n        \\"Role\\": \\"*\\",\\n        \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n      }\\n    ],\\n    \\"Extras\\": [\\n      {\\n        \\"Key\\": \\"djrq\\",\\n        \\"Value\\": \\"2019-08-21 09:49:59.0\\"\\n      }\\n    ],\\n    \\"Summary\\": [\\n      {\\n        \\"SummaryName\\": \\"score\\",\\n        \\"Category\\": \\"{}\\",\\n        \\"Content\\": \\"5\\"\\n      }\\n    ],\\n    \\"Tasks\\": [\\n      {\\n        \\"Status\\": \\"Succeeded\\",\\n        \\"PlanedTime\\": 1579068424883,\\n        \\"ChatbotId\\": \\"1234\\",\\n        \\"ActualTime\\": 1579068424883,\\n        \\"CalledNumber\\": \\"135****8888\\",\\n        \\"EndTime\\": 1579068424883,\\n        \\"ScenarioId\\": \\"ade80092-03d9-4f4d-ad4f-ab8a247d3150\\",\\n        \\"EndReason\\": \\"FINISHED\\",\\n        \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n        \\"CallId\\": \\"1528189846043\\",\\n        \\"CallingNumber\\": \\"0571****3106\\",\\n        \\"Brief\\": \\"1\\",\\n        \\"Duration\\": 120,\\n        \\"TaskId\\": \\"ff44709e-39a6-43ba-959b-20fcabe3e496\\",\\n        \\"Conversation\\": [\\n          {\\n            \\"ActionParams\\": \\"{}\\",\\n            \\"Action\\": \\"Broadcast\\",\\n            \\"Timestamp\\": 1579068424883,\\n            \\"Speaker\\": \\"Robot\\",\\n            \\"Script\\": \\"你好，我是**客服\\",\\n            \\"Summary\\": [\\n              {\\n                \\"SummaryName\\": \\"score\\",\\n                \\"Category\\": \\"{}\\",\\n                \\"Content\\": \\"5\\"\\n              }\\n            ],\\n            \\"SequenceId\\": \\"fd279983-93b9-b13b-9a34-64e5df473225\\"\\n          }\\n        ],\\n        \\"Contact\\": {\\n          \\"PhoneNumber\\": \\"1351****8888\\",\\n          \\"State\\": \\"Available\\",\\n          \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n          \\"Honorific\\": \\"张先生\\",\\n          \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n          \\"ContactName\\": \\"张三\\",\\n          \\"Role\\": \\"*\\",\\n          \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n        },\\n        \\"HangUpDirection\\": \\"client\\",\\n        \\"RingingDuration\\": 25,\\n        \\"SipCode\\": \\"200\\"\\n      }\\n    ],\\n    \\"CallingNumbers\\": [\\n      \\"[\\\\\\"0571****3106\\\\\\"]\\"\\n    ],\\n    \\"Script\\": {\\n      \\"Status\\": \\"DRAFTED\\",\\n      \\"UpdateTime\\": 1578881227000,\\n      \\"ChatbotId\\": \\"chatbot-cn-EJfqqa***\\",\\n      \\"ScriptId\\": \\"810b5872-57f0-4b27-80ab-7b3f4d8a6374\\",\\n      \\"IsDebugDrafted\\": true,\\n      \\"Industry\\": \\"金融\\",\\n      \\"ScriptDescription\\": \\"催收话术\\",\\n      \\"MiniPlaybackConfigEnabled\\": true,\\n      \\"IsDrafted\\": true,\\n      \\"TtsConfig\\": \\"{\\\\\\\\\\\\\\"voice\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"xiaobei\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"volume\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"50\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"speechRate\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"-150\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"pitchRate\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\"}\\",\\n      \\"DebugStatus\\": \\"DRAFTED\\",\\n      \\"AsrConfig\\": \\"{\\\\\\\\\\\\\\"AppKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"3GHttnsvir1FeWWb\\\\\\\\\\\\\\"}\\",\\n      \\"Scene\\": \\"催收\\",\\n      \\"Name\\": \\"催收话术\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeJobResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Job>\\n        <Status>Succeeded</Status>\\n        <ActualTime>1640068026385</ActualTime>\\n        <Priority>5</Priority>\\n        <DsReport>-</DsReport>\\n        <NextExecutionTime>1640068026385</NextExecutionTime>\\n        <FailureReason>NoAnswer</FailureReason>\\n        <SystemPriority>1</SystemPriority>\\n        <InstanceId>d5971d98-7312-4f0e-a918-a17d67133e28</InstanceId>\\n        <CalledNumber>137****7777</CalledNumber>\\n        <ReferenceId>d5971d98-7312-4f0e-a918-a17d67133e28</ReferenceId>\\n        <JobGroupId>fce6c599-8ede-40e3-9f78-0928eda7b4e8</JobGroupId>\\n        <ScenarioId>ade80092-03d9-4f4d-ad4f-ab8a247d3150</ScenarioId>\\n        <StrategyId>c8a2b7f2-ad1a-4865-b872-d0080d9802d9</StrategyId>\\n        <EndReason>1</EndReason>\\n        <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n        <Contacts>\\n            <PhoneNumber>1358****8888</PhoneNumber>\\n            <State>Available</State>\\n            <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n            <Honorific>张先生</Honorific>\\n            <JobId>72dcd26b-f12d-4c27-b3af-18f6aed5b160</JobId>\\n            <ContactName>张三</ContactName>\\n            <Role>*</Role>\\n            <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n        </Contacts>\\n        <Extras>\\n            <Key>djrq</Key>\\n            <Value>2019-08-21 09:49:59.0</Value>\\n        </Extras>\\n        <Summary>\\n            <SummaryName>score</SummaryName>\\n            <Category>{}</Category>\\n            <Content>5</Content>\\n        </Summary>\\n        <Tasks>\\n            <Status>Succeeded</Status>\\n            <PlanedTime>1579068424883</PlanedTime>\\n            <ChatbotId>1234</ChatbotId>\\n            <ActualTime>1579068424883</ActualTime>\\n            <CalledNumber>135****8888</CalledNumber>\\n            <EndTime>1579068424883</EndTime>\\n            <ScenarioId>ade80092-03d9-4f4d-ad4f-ab8a247d3150</ScenarioId>\\n            <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n            <CallId>1528189846043</CallId>\\n            <CallingNumber>0571****3106</CallingNumber>\\n            <Brief>1</Brief>\\n            <Duration>120</Duration>\\n            <TaskId>ff44709e-39a6-43ba-959b-20fcabe3e496</TaskId>\\n            <Conversation>\\n                <Timestamp>1579068424883</Timestamp>\\n                <Speaker>Robot</Speaker>\\n                <Script>你好，我是**客服</Script>\\n                <Summary>\\n                    <SummaryName>score</SummaryName>\\n                    <Category>{}</Category>\\n                    <Content>5</Content>\\n                </Summary>\\n            </Conversation>\\n            <Contact>\\n                <PhoneNumber>1351****8888</PhoneNumber>\\n                <State>Available</State>\\n                <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n                <Honorific>张先生</Honorific>\\n                <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n                <ContactName>张三</ContactName>\\n                <Role>*</Role>\\n                <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n            </Contact>\\n            <HangUpDirection>client</HangUpDirection>\\n        </Tasks>\\n        <CallingNumbers>[\\"0571****3106\\"]</CallingNumbers>\\n    </Job>\\n</DescribeJobResponse>","errorExample":""}]',
      'title' => '返回一个作业的对话数据',
      'summary' => '返回一个作业的对话数据。',
    ),
    'ListJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '作业id',
            'type' => 'array',
            'items' => 
            array (
              'description' => '作业id',
              'type' => 'string',
              'required' => false,
              'example' => '24fb9a8d-f20e-4ee2-a11c-094dda68c5cc',
            ),
            'required' => true,
            'example' => '24fb9a8d-f20e-4ee2-a11c-094dda68c5cc',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Jobs' => 
              array (
                'description' => '作业数组',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '作业状态，取值范围

- **Scheduling**：调度中。
- **Executing**：执行中。
- **Succeeded**：成功。
- **Paused**：挂起。
- **Failed**：失败。
- **Cancelled**：已取消。
- **Drafted**：草稿态。',
                      'type' => 'string',
                      'example' => 'Succeeded',
                    ),
                    'ScenarioId' => 
                    array (
                      'description' => '业务id',
                      'type' => 'string',
                      'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                    ),
                    'JobGroupId' => 
                    array (
                      'description' => '作业组id',
                      'type' => 'string',
                      'example' => 'fce6c599-8ede-40e3-9f78-0928eda7b4e8',
                    ),
                    'StrategyId' => 
                    array (
                      'description' => '策略id',
                      'type' => 'string',
                      'example' => 'c8a2b7f2-ad1a-4865-b872-d0080d9802d9',
                    ),
                    'JobId' => 
                    array (
                      'description' => '作业id',
                      'type' => 'string',
                      'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                    ),
                    'Priority' => 
                    array (
                      'description' => '	
作业优先级',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '	5',
                    ),
                    'SystemPriority' => 
                    array (
                      'description' => '	
系统优先级',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'FailureReason' => 
                    array (
                      'description' => '作业失败原因',
                      'type' => 'string',
                      'example' => 'NoAnswer',
                    ),
                    'ReferenceId' => 
                    array (
                      'description' => '	
作业第三方系统id',
                      'type' => 'string',
                      'example' => 'd5971d98-7312-4f0e-a918-a17d67133e28',
                    ),
                    'Contacts' => 
                    array (
                      'description' => '联系人列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'PhoneNumber' => 
                          array (
                            'description' => '电话号码',
                            'type' => 'string',
                            'example' => '135****8888',
                          ),
                          'State' => 
                          array (
                            'description' => '状态',
                            'type' => 'string',
                            'example' => 'Available',
                          ),
                          'ContactId' => 
                          array (
                            'description' => '	
联系人id',
                            'type' => 'string',
                            'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                          ),
                          'Honorific' => 
                          array (
                            'description' => '尊称',
                            'type' => 'string',
                            'example' => '张先生',
                          ),
                          'JobId' => 
                          array (
                            'description' => '作业id',
                            'type' => 'string',
                            'example' => '72dcd26b-f12d-4c27-b3af-18f6aed5b160',
                          ),
                          'ContactName' => 
                          array (
                            'description' => '联系人名字',
                            'type' => 'string',
                            'example' => '张三',
                          ),
                          'Role' => 
                          array (
                            'description' => '联系人角色',
                            'type' => 'string',
                            'example' => '*',
                          ),
                          'ReferenceId' => 
                          array (
                            'description' => '	
联系人第三方系统id',
                            'type' => 'string',
                            'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                          ),
                        ),
                      ),
                    ),
                    'Extras' => 
                    array (
                      'description' => '业务参数列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '业务参数Key',
                            'type' => 'string',
                            'example' => 'name',
                          ),
                          'Value' => 
                          array (
                            'description' => '业务参数value',
                            'type' => 'string',
                            'example' => '张三',
                          ),
                        ),
                      ),
                    ),
                    'Summary' => 
                    array (
                      'description' => '对话摘要信息',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'SummaryName' => 
                          array (
                            'description' => '对话摘要名字',
                            'type' => 'string',
                            'example' => 'score',
                          ),
                          'Category' => 
                          array (
                            'description' => '	
对话摘要类别',
                            'type' => 'string',
                            'example' => '	{}',
                          ),
                          'Content' => 
                          array (
                            'description' => '对话摘要内容

',
                            'type' => 'string',
                            'example' => '5',
                          ),
                        ),
                      ),
                    ),
                    'Tasks' => 
                    array (
                      'description' => '任务列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Status' => 
                          array (
                            'description' => '任务状态，取值范围

- **Executing**：正在拨打。
- **Succeeded**：已接通。
- **NoAnswer**：未接通-无人接听。
- **NotExist**：未接通-空号。
- **Busy**：未接通-占线。
- **Cancelled**：未呼出-任务停止。
- **Failed**：失败。
- **NotConnected**：未接通-无法接通。
- **PoweredOff**：未接通-关机。
- **OutOfService**：未接通-被叫停机。
- **InArrears**：未接通-被叫欠费。
- **EmptyNumber**：未呼出-空号不外呼。
- **PerDayCallCountLimit**：未呼出-超出每日上限。
- **ContactBlockList**：未呼出-黑名单。
- **CallerNotRegistered**：未呼出-主叫号码未注册。
- **Terminated**：未呼出-被终止。
- **VerificationCancelled**：未呼出-呼叫前验证不通过取消。
- **OutOfServiceNoCall**：未呼出-被叫停机不外呼。
- **InArrearsNoCall**：未呼出-被叫欠费不外呼。
- **CallingNumberNotExist**：未呼出-主叫号码不存在。
',
                            'type' => 'string',
                            'example' => 'Succeeded',
                          ),
                          'PlanedTime' => 
                          array (
                            'description' => '任务计划执行时间',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '1579068424883',
                          ),
                          'ChatbotId' => 
                          array (
                            'description' => '对话机器人id',
                            'type' => 'string',
                            'example' => '	1234',
                          ),
                          'ActualTime' => 
                          array (
                            'description' => '实际执行时间',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '1579068424883',
                          ),
                          'CalledNumber' => 
                          array (
                            'description' => '被叫号码',
                            'type' => 'string',
                            'example' => '135****8888',
                          ),
                          'ScenarioId' => 
                          array (
                            'description' => '场景id',
                            'type' => 'string',
                            'example' => 'ade80092-03d9-4f4d-ad4f-ab8a247d3150',
                          ),
                          'JobId' => 
                          array (
                            'description' => '作业id',
                            'type' => 'string',
                            'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                          ),
                          'CallId' => 
                          array (
                            'description' => '呼叫id',
                            'type' => 'string',
                            'example' => '1528189846043',
                          ),
                          'CallingNumber' => 
                          array (
                            'description' => '主叫号码',
                            'type' => 'string',
                            'example' => '0571****3106',
                          ),
                          'Brief' => 
                          array (
                            'description' => '业务结果',
                            'type' => 'string',
                            'example' => '1',
                          ),
                          'Duration' => 
                          array (
                            'description' => '持续时间',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '	120',
                          ),
                          'TaskId' => 
                          array (
                            'description' => '任务id',
                            'type' => 'string',
                            'example' => 'ff44709e-39a6-43ba-959b-20fcabe3e496',
                          ),
                          'Conversation' => 
                          array (
                            'description' => '对话列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Speaker' => 
                                array (
                                  'description' => '是谁说的话，Robot 机器人， Contact 联系人',
                                  'type' => 'string',
                                  'example' => 'Robot',
                                ),
                                'Timestamp' => 
                                array (
                                  'description' => '对话文本入库时间戳',
                                  'type' => 'integer',
                                  'format' => 'int64',
                                  'example' => '1579068424883',
                                ),
                                'Script' => 
                                array (
                                  'description' => '	
对话文本',
                                  'type' => 'string',
                                  'example' => '你好，我是**客服',
                                ),
                                'Summary' => 
                                array (
                                  'description' => '摘要信息',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'SummaryName' => 
                                      array (
                                        'description' => '摘要名称',
                                        'type' => 'string',
                                        'example' => '是本人',
                                      ),
                                      'Category' => 
                                      array (
                                        'description' => '类目',
                                        'type' => 'string',
                                        'example' => '标签',
                                      ),
                                      'Content' => 
                                      array (
                                        'description' => '摘要内容',
                                        'type' => 'string',
                                        'example' => '是',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                          'Contact' => 
                          array (
                            'description' => '	
任务的联系人',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'PhoneNumber' => 
                              array (
                                'description' => '电话号码',
                                'type' => 'string',
                                'example' => '135****8888',
                              ),
                              'State' => 
                              array (
                                'description' => '状态',
                                'type' => 'string',
                                'example' => 'Available',
                              ),
                              'ContactId' => 
                              array (
                                'description' => '联系人id',
                                'type' => 'string',
                                'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                              ),
                              'Honorific' => 
                              array (
                                'description' => '	
联系人尊称',
                                'type' => 'string',
                                'example' => '张先生',
                              ),
                              'JobId' => 
                              array (
                                'description' => '	
作业id',
                                'type' => 'string',
                                'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                              ),
                              'ContactName' => 
                              array (
                                'description' => '联系人名字',
                                'type' => 'string',
                                'example' => '张三',
                              ),
                              'Role' => 
                              array (
                                'description' => '角色',
                                'type' => 'string',
                                'example' => '*',
                              ),
                              'ReferenceId' => 
                              array (
                                'description' => '联系人第三方系统id',
                                'type' => 'string',
                                'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'CallingNumbers' => 
                    array (
                      'description' => '主叫号码列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '主叫号码列表',
                        'type' => 'string',
                        'example' => '["0571****3106"]',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Jobs\\": [\\n    {\\n      \\"Status\\": \\"Succeeded\\",\\n      \\"ScenarioId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n      \\"JobGroupId\\": \\"fce6c599-8ede-40e3-9f78-0928eda7b4e8\\",\\n      \\"StrategyId\\": \\"c8a2b7f2-ad1a-4865-b872-d0080d9802d9\\",\\n      \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n      \\"Priority\\": 5,\\n      \\"SystemPriority\\": 1,\\n      \\"FailureReason\\": \\"NoAnswer\\",\\n      \\"ReferenceId\\": \\"d5971d98-7312-4f0e-a918-a17d67133e28\\",\\n      \\"Contacts\\": [\\n        {\\n          \\"PhoneNumber\\": \\"135****8888\\",\\n          \\"State\\": \\"Available\\",\\n          \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n          \\"Honorific\\": \\"张先生\\",\\n          \\"JobId\\": \\"72dcd26b-f12d-4c27-b3af-18f6aed5b160\\",\\n          \\"ContactName\\": \\"张三\\",\\n          \\"Role\\": \\"*\\",\\n          \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n        }\\n      ],\\n      \\"Extras\\": [\\n        {\\n          \\"Key\\": \\"name\\",\\n          \\"Value\\": \\"张三\\"\\n        }\\n      ],\\n      \\"Summary\\": [\\n        {\\n          \\"SummaryName\\": \\"score\\",\\n          \\"Category\\": \\"\\\\t{}\\",\\n          \\"Content\\": \\"5\\"\\n        }\\n      ],\\n      \\"Tasks\\": [\\n        {\\n          \\"Status\\": \\"Succeeded\\",\\n          \\"PlanedTime\\": 1579068424883,\\n          \\"ChatbotId\\": \\"\\\\t1234\\",\\n          \\"ActualTime\\": 1579068424883,\\n          \\"CalledNumber\\": \\"135****8888\\",\\n          \\"ScenarioId\\": \\"ade80092-03d9-4f4d-ad4f-ab8a247d3150\\",\\n          \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n          \\"CallId\\": \\"1528189846043\\",\\n          \\"CallingNumber\\": \\"0571****3106\\",\\n          \\"Brief\\": \\"1\\",\\n          \\"Duration\\": 120,\\n          \\"TaskId\\": \\"ff44709e-39a6-43ba-959b-20fcabe3e496\\",\\n          \\"Conversation\\": [\\n            {\\n              \\"Speaker\\": \\"Robot\\",\\n              \\"Timestamp\\": 1579068424883,\\n              \\"Script\\": \\"你好，我是**客服\\",\\n              \\"Summary\\": [\\n                {\\n                  \\"SummaryName\\": \\"是本人\\",\\n                  \\"Category\\": \\"标签\\",\\n                  \\"Content\\": \\"是\\"\\n                }\\n              ]\\n            }\\n          ],\\n          \\"Contact\\": {\\n            \\"PhoneNumber\\": \\"135****8888\\",\\n            \\"State\\": \\"Available\\",\\n            \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n            \\"Honorific\\": \\"张先生\\",\\n            \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n            \\"ContactName\\": \\"张三\\",\\n            \\"Role\\": \\"*\\",\\n            \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n          }\\n        }\\n      ],\\n      \\"CallingNumbers\\": [\\n        \\"[\\\\\\"0571****3106\\\\\\"]\\"\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListJobsResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Jobs>\\n        <Status>Succeeded</Status>\\n        <ScenarioId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</ScenarioId>\\n        <JobGroupId>fce6c599-8ede-40e3-9f78-0928eda7b4e8</JobGroupId>\\n        <StrategyId>c8a2b7f2-ad1a-4865-b872-d0080d9802d9</StrategyId>\\n        <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n        <SystemPriority>1</SystemPriority>\\n        <FailureReason>NoAnswer</FailureReason>\\n        <ReferenceId>d5971d98-7312-4f0e-a918-a17d67133e28</ReferenceId>\\n        <Contacts>\\n            <PhoneNumber>135****8888</PhoneNumber>\\n            <State>Available</State>\\n            <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n            <Honorific>张先生</Honorific>\\n            <JobId>72dcd26b-f12d-4c27-b3af-18f6aed5b160</JobId>\\n            <ContactName>张三</ContactName>\\n            <Role>*</Role>\\n            <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n        </Contacts>\\n        <Extras>\\n            <Key>name</Key>\\n            <Value>张三</Value>\\n        </Extras>\\n        <Summary>\\n            <SummaryName>score</SummaryName>\\n            <Category>\\t{}</Category>\\n            <Content>5</Content>\\n        </Summary>\\n        <Tasks>\\n            <Status>Succeeded</Status>\\n            <PlanedTime>1579068424883</PlanedTime>\\n            <ChatbotId>\\t1234</ChatbotId>\\n            <ActualTime>1579068424883</ActualTime>\\n            <CalledNumber>135****8888</CalledNumber>\\n            <ScenarioId>ade80092-03d9-4f4d-ad4f-ab8a247d3150</ScenarioId>\\n            <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n            <CallId>1528189846043</CallId>\\n            <CallingNumber>0571****3106</CallingNumber>\\n            <Brief>1</Brief>\\n            <TaskId>ff44709e-39a6-43ba-959b-20fcabe3e496</TaskId>\\n            <Conversation>\\n                <Speaker>Robot</Speaker>\\n                <Timestamp>1579068424883</Timestamp>\\n                <Script>你好，我是**客服</Script>\\n                <Summary>\\n                    <SummaryName>是本人</SummaryName>\\n                    <Category>标签</Category>\\n                    <Content>是</Content>\\n                </Summary>\\n            </Conversation>\\n            <Contact>\\n                <PhoneNumber>135****8888</PhoneNumber>\\n                <State>Available</State>\\n                <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n                <Honorific>张先生</Honorific>\\n                <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n                <ContactName>张三</ContactName>\\n                <Role>*</Role>\\n                <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n            </Contact>\\n        </Tasks>\\n        <CallingNumbers>[\\"0571****3106\\"]</CallingNumbers>\\n    </Jobs>\\n</ListJobsResponse>","errorExample":""}]',
      'title' => '查询多个作业',
      'summary' => '查询多个作业。',
    ),
    'QueryJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'b0f35dd1-0337-402e-9c4f-3a6c2426950a',
          ),
        ),
        2 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => '994b8baf-7ef8-480c-b141-b7b6db77c4df',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，开始时间，缺省为0， 代表从今天0时开始。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1579068424883',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，截止时间，缺省为0，代表截止到当前时间。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1579077794665',
          ),
        ),
        5 => 
        array (
          'name' => 'TimeAlignment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时间条件按照开始时间还是结束时间查询，有效值为：start、end、job_create。',
            'type' => 'string',
            'required' => false,
            'example' => 'start',
          ),
        ),
        6 => 
        array (
          'name' => 'ContactName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，联系人名字。',
            'type' => 'string',
            'required' => false,
            'example' => '张三',
          ),
        ),
        7 => 
        array (
          'name' => 'PhoneNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，联系人电话号码。',
            'type' => 'string',
            'required' => false,
            'example' => '135****8888',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页序号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Jobs' => 
              array (
                'description' => '作业数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '分页序号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '数据总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'description' => '作业数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '状态。',
                          'type' => 'string',
                          'example' => 'Succeeded',
                        ),
                        'JobGroupId' => 
                        array (
                          'description' => '任务ID。',
                          'type' => 'string',
                          'example' => 'fce6c599-8ede-40e3-9f78-0928eda7b4e8',
                        ),
                        'ScenarioId' => 
                        array (
                          'description' => '场景ID。',
                          'type' => 'string',
                          'example' => 'ade80092-03d9-4f4d-ad4f-ab8a247d3150',
                        ),
                        'StrategyId' => 
                        array (
                          'description' => '策略ID。',
                          'type' => 'string',
                          'example' => 'c8a2b7f2-ad1a-4865-b872-d0080d9802d9',
                        ),
                        'JobId' => 
                        array (
                          'description' => '作业ID。',
                          'type' => 'string',
                          'example' => 'fce6c599-8ede-40e3-9f78-0928eda7b4e8',
                        ),
                        'Priority' => 
                        array (
                          'description' => '优先级。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'FailureReason' => 
                        array (
                          'description' => '失败原因。
- Unknown(未知错误),  
- NoAnswer(无人接听),
- InvalidStrategy(无效的策略，策略配置不正确),
- TimeUp(调度时发现超时),
- NoStrategy(策略为空或没有找到),
- CallFailed(呼叫失败),
- PerDayCallCountLimit(号码每日呼叫次数限制),
- ContactBlockList(禁止外呼名单),
- EmptyNumber(空号不再外呼),
- JobPerDayCallCountLimit(号码每日呼叫次数限制),
- VerificationCancelled(呼叫前验证不通过取消),
- ContactSuspended(止呼),
- InArrears(欠费),
- OutOfService(停机);',
                          'type' => 'string',
                          'example' => 'NoAnswer',
                        ),
                        'ReferenceId' => 
                        array (
                          'description' => '关联业务ID。',
                          'type' => 'string',
                          'example' => 'd5971d98-7312-4f0e-a918-a17d67133e28',
                        ),
                        'Contacts' => 
                        array (
                          'description' => '联系人信息。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'PhoneNumber' => 
                              array (
                                'description' => '电话号码。',
                                'type' => 'string',
                                'example' => '135****8888',
                              ),
                              'State' => 
                              array (
                                'description' => '状态。
- Available(正常),
- WrongNumber(号码错误),
- DoesNotExist(空号),
- Suspended(止呼);',
                                'type' => 'string',
                                'example' => 'Available',
                              ),
                              'ContactId' => 
                              array (
                                'description' => '联系人ID。',
                                'type' => 'string',
                                'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                              ),
                              'Honorific' => 
                              array (
                                'description' => '尊称。',
                                'type' => 'string',
                                'example' => '张先生',
                              ),
                              'JobId' => 
                              array (
                                'description' => '作业ID。',
                                'type' => 'string',
                                'example' => '72dcd26b-f12d-4c27-b3af-18f6aed5b160',
                              ),
                              'ContactName' => 
                              array (
                                'description' => '联系人姓名。',
                                'type' => 'string',
                                'example' => '张三',
                              ),
                              'Role' => 
                              array (
                                'description' => '角色。',
                                'type' => 'string',
                                'example' => '*',
                              ),
                              'ReferenceId' => 
                              array (
                                'description' => '关联业务ID。',
                                'type' => 'string',
                                'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                              ),
                            ),
                          ),
                        ),
                        'Extras' => 
                        array (
                          'description' => '业务数据',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Key' => 
                              array (
                                'description' => '业务数据key',
                                'type' => 'string',
                                'example' => 'djrq',
                              ),
                              'Value' => 
                              array (
                                'description' => '业务数据value',
                                'type' => 'string',
                                'example' => '2019-08-21 09:49:59.0',
                              ),
                            ),
                          ),
                        ),
                        'Summary' => 
                        array (
                          'description' => '对话小结。(历史字段，不再使用)',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SummaryName' => 
                              array (
                                'description' => '小结名称。',
                                'type' => 'string',
                                'example' => 'score',
                              ),
                              'GroupId' => 
                              array (
                                'description' => '任务ID。',
                                'type' => 'string',
                                'example' => 'ba1ba502-d044-48c0-b710-0f1f840a7c53',
                              ),
                              'JobId' => 
                              array (
                                'description' => '作业ID。',
                                'type' => 'string',
                                'example' => '994b8baf-7ef8-480c-b141-b7b6db77c4df',
                              ),
                              'Category' => 
                              array (
                                'description' => '类别',
                                'type' => 'string',
                                'example' => '{}',
                              ),
                              'TaskId' => 
                              array (
                                'description' => '通话ID。',
                                'type' => 'string',
                                'example' => '9fdf7a81-6781-4ab8-92fb-1d4231ef365e',
                              ),
                              'Content' => 
                              array (
                                'description' => '内容',
                                'type' => 'string',
                                'example' => '5',
                              ),
                              'ConversationDetailId' => 
                              array (
                                'description' => '通话记录id',
                                'type' => 'string',
                                'example' => '098b9b09-9223-4a8b-a422-99726f0457f3',
                              ),
                              'SummaryId' => 
                              array (
                                'description' => '摘要id',
                                'type' => 'string',
                                'example' => 'dc67d544-df06-4625-ae48-13e3c9f72d8a',
                              ),
                            ),
                          ),
                        ),
                        'Tasks' => 
                        array (
                          'description' => '通话列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Status' => 
                              array (
                                'description' => '通话状态。
- Executing(0正在拨打),
- Succeeded(已接通),
- NoAnswer(未接通-无人接听),
- NotExist(未接通-空号),
- Busy(未接通-占线),
- Failed(失败),
- NotConnected(未接通-无法接通),
- PoweredOff(未接通-关机),
- OutOfService(未接通-被叫停机),
- InArrears(未接通-被叫欠费),
- EmptyNumber(未呼出-空号不外呼),
- PerDayCallCountLimit(未呼出-超出每日上限),
- ContactBlockList(未呼出-黑名单),
- OutOfServiceNoCall(未呼出-被叫停机不外呼),
- InArrearsNoCall(未呼出-被叫欠费不外呼),
- CallingNumberNotExist(未呼出-主叫号码不存在)',
                                'type' => 'string',
                                'example' => 'Succeeded',
                              ),
                              'PlanedTime' => 
                              array (
                                'description' => '计划呼出时间。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1579068424883',
                              ),
                              'ChatbotId' => 
                              array (
                                'description' => '机器人ID。',
                                'type' => 'string',
                                'example' => '1234',
                              ),
                              'ActualTime' => 
                              array (
                                'description' => '实际呼出时间。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1579068424883',
                              ),
                              'CalledNumber' => 
                              array (
                                'description' => '被叫号码。',
                                'type' => 'string',
                                'example' => '135****8888',
                              ),
                              'ScenarioId' => 
                              array (
                                'description' => '场景ID。',
                                'type' => 'string',
                                'example' => 'ade80092-03d9-4f4d-ad4f-ab8a247d3150',
                              ),
                              'JobId' => 
                              array (
                                'description' => '作业ID。',
                                'type' => 'string',
                                'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                              ),
                              'CallId' => 
                              array (
                                'description' => 'SIP call id。',
                                'type' => 'string',
                                'example' => '1528189846043',
                              ),
                              'CallingNumber' => 
                              array (
                                'description' => '主叫号码。',
                                'type' => 'string',
                                'example' => '0571****3106',
                              ),
                              'Brief' => 
                              array (
                                'description' => '总结(历史字段，不再使用)',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'Duration' => 
                              array (
                                'description' => '通话时长。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '120',
                              ),
                              'TaskId' => 
                              array (
                                'description' => '通话ID。',
                                'type' => 'string',
                                'example' => 'ff44709e-39a6-43ba-959b-20fcabe3e496',
                              ),
                              'Contact' => 
                              array (
                                'description' => '联系人信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'PhoneNumber' => 
                                  array (
                                    'description' => '联系人电话号码。',
                                    'type' => 'string',
                                    'example' => '135****8888',
                                  ),
                                  'State' => 
                                  array (
                                    'description' => '状态。',
                                    'type' => 'string',
                                    'example' => 'Available',
                                  ),
                                  'ContactId' => 
                                  array (
                                    'description' => '联系人ID。',
                                    'type' => 'string',
                                    'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                                  ),
                                  'Honorific' => 
                                  array (
                                    'description' => '尊称。',
                                    'type' => 'string',
                                    'example' => '张先生',
                                  ),
                                  'JobId' => 
                                  array (
                                    'description' => '作业ID。',
                                    'type' => 'string',
                                    'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                                  ),
                                  'ContactName' => 
                                  array (
                                    'description' => '联系人名称。',
                                    'type' => 'string',
                                    'example' => '张三',
                                  ),
                                  'Role' => 
                                  array (
                                    'description' => '角色。',
                                    'type' => 'string',
                                    'example' => '*',
                                  ),
                                  'ReferenceId' => 
                                  array (
                                    'description' => '业务关联ID。',
                                    'type' => 'string',
                                    'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'CallingNumbers' => 
                        array (
                          'description' => '主叫号码列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '主叫号码列表。',
                            'type' => 'string',
                            'example' => '["0571****3106"]',
                          ),
                        ),
                        'TagHits' => 
                        array (
                          'description' => '命中标签信息。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'TagName' => 
                              array (
                                'description' => '标签名称。',
                                'type' => 'string',
                                'example' => '有意向',
                              ),
                              'TagGroup' => 
                              array (
                                'description' => '标签组名称。',
                                'type' => 'string',
                                'example' => '意向收集',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.JobGroup',
            'errorMessage' => 'The specified JobGroup does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Jobs\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 1,\\n    \\"List\\": [\\n      {\\n        \\"Status\\": \\"Succeeded\\",\\n        \\"JobGroupId\\": \\"fce6c599-8ede-40e3-9f78-0928eda7b4e8\\",\\n        \\"ScenarioId\\": \\"ade80092-03d9-4f4d-ad4f-ab8a247d3150\\",\\n        \\"StrategyId\\": \\"c8a2b7f2-ad1a-4865-b872-d0080d9802d9\\",\\n        \\"JobId\\": \\"fce6c599-8ede-40e3-9f78-0928eda7b4e8\\",\\n        \\"Priority\\": 1,\\n        \\"FailureReason\\": \\"NoAnswer\\",\\n        \\"ReferenceId\\": \\"d5971d98-7312-4f0e-a918-a17d67133e28\\",\\n        \\"Contacts\\": [\\n          {\\n            \\"PhoneNumber\\": \\"135****8888\\",\\n            \\"State\\": \\"Available\\",\\n            \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n            \\"Honorific\\": \\"张先生\\",\\n            \\"JobId\\": \\"72dcd26b-f12d-4c27-b3af-18f6aed5b160\\",\\n            \\"ContactName\\": \\"张三\\",\\n            \\"Role\\": \\"*\\",\\n            \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n          }\\n        ],\\n        \\"Extras\\": [\\n          {\\n            \\"Key\\": \\"djrq\\",\\n            \\"Value\\": \\"2019-08-21 09:49:59.0\\"\\n          }\\n        ],\\n        \\"Summary\\": [\\n          {\\n            \\"SummaryName\\": \\"score\\",\\n            \\"GroupId\\": \\"ba1ba502-d044-48c0-b710-0f1f840a7c53\\",\\n            \\"JobId\\": \\"994b8baf-7ef8-480c-b141-b7b6db77c4df\\",\\n            \\"Category\\": \\"{}\\",\\n            \\"TaskId\\": \\"9fdf7a81-6781-4ab8-92fb-1d4231ef365e\\",\\n            \\"Content\\": \\"5\\",\\n            \\"ConversationDetailId\\": \\"098b9b09-9223-4a8b-a422-99726f0457f3\\",\\n            \\"SummaryId\\": \\"dc67d544-df06-4625-ae48-13e3c9f72d8a\\"\\n          }\\n        ],\\n        \\"Tasks\\": [\\n          {\\n            \\"Status\\": \\"Succeeded\\",\\n            \\"PlanedTime\\": 1579068424883,\\n            \\"ChatbotId\\": \\"1234\\",\\n            \\"ActualTime\\": 1579068424883,\\n            \\"CalledNumber\\": \\"135****8888\\",\\n            \\"ScenarioId\\": \\"ade80092-03d9-4f4d-ad4f-ab8a247d3150\\",\\n            \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n            \\"CallId\\": \\"1528189846043\\",\\n            \\"CallingNumber\\": \\"0571****3106\\",\\n            \\"Brief\\": \\"1\\",\\n            \\"Duration\\": 120,\\n            \\"TaskId\\": \\"ff44709e-39a6-43ba-959b-20fcabe3e496\\",\\n            \\"Contact\\": {\\n              \\"PhoneNumber\\": \\"135****8888\\",\\n              \\"State\\": \\"Available\\",\\n              \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n              \\"Honorific\\": \\"张先生\\",\\n              \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n              \\"ContactName\\": \\"张三\\",\\n              \\"Role\\": \\"*\\",\\n              \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n            }\\n          }\\n        ],\\n        \\"CallingNumbers\\": [\\n          \\"[\\\\\\"0571****3106\\\\\\"]\\"\\n        ],\\n        \\"TagHits\\": [\\n          {\\n            \\"TagName\\": \\"有意向\\",\\n            \\"TagGroup\\": \\"意向收集\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryJobsResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Jobs>\\n        <PageNumber>1</PageNumber>\\n        <PageSize>10</PageSize>\\n        <TotalCount>1</TotalCount>\\n        <List>\\n            <Status>Succeeded</Status>\\n            <JobGroupId>fce6c599-8ede-40e3-9f78-0928eda7b4e8</JobGroupId>\\n            <ScenarioId>ade80092-03d9-4f4d-ad4f-ab8a247d3150</ScenarioId>\\n            <StrategyId>c8a2b7f2-ad1a-4865-b872-d0080d9802d9</StrategyId>\\n            <JobId>fce6c599-8ede-40e3-9f78-0928eda7b4e8</JobId>\\n            <Priority>1</Priority>\\n            <FailureReason>NoAnswer</FailureReason>\\n            <ReferenceId>d5971d98-7312-4f0e-a918-a17d67133e28</ReferenceId>\\n            <Contacts>\\n                <PhoneNumber>135****8888</PhoneNumber>\\n                <State>Available</State>\\n                <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n                <Honorific>张先生</Honorific>\\n                <JobId>72dcd26b-f12d-4c27-b3af-18f6aed5b160</JobId>\\n                <ContactName>张三</ContactName>\\n                <Role>*</Role>\\n                <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n            </Contacts>\\n            <Extras>\\n                <Key>djrq</Key>\\n                <Value>2019-08-21 09:49:59.0</Value>\\n            </Extras>\\n            <Summary>\\n                <SummaryName>score</SummaryName>\\n                <GroupId>ba1ba502-d044-48c0-b710-0f1f840a7c53</GroupId>\\n                <JobId>994b8baf-7ef8-480c-b141-b7b6db77c4df</JobId>\\n                <Category>{}</Category>\\n                <TaskId>9fdf7a81-6781-4ab8-92fb-1d4231ef365e</TaskId>\\n                <Content>5</Content>\\n                <ConversationDetailId>098b9b09-9223-4a8b-a422-99726f0457f3</ConversationDetailId>\\n                <SummaryId>dc67d544-df06-4625-ae48-13e3c9f72d8a</SummaryId>\\n            </Summary>\\n            <Tasks>\\n                <Status>Succeeded</Status>\\n                <PlanedTime>1579068424883</PlanedTime>\\n                <ChatbotId>1234</ChatbotId>\\n                <ActualTime>1579068424883</ActualTime>\\n                <CalledNumber>135****8888</CalledNumber>\\n                <ScenarioId>ade80092-03d9-4f4d-ad4f-ab8a247d3150</ScenarioId>\\n                <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n                <CallId>1528189846043</CallId>\\n                <CallingNumber>0571****3106</CallingNumber>\\n                <Brief>1</Brief>\\n                <Duration>120</Duration>\\n                <TaskId>ff44709e-39a6-43ba-959b-20fcabe3e496</TaskId>\\n                <Contact>\\n                    <PhoneNumber>135****8888</PhoneNumber>\\n                    <State>Available</State>\\n                    <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n                    <Honorific>张先生</Honorific>\\n                    <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n                    <ContactName>张三</ContactName>\\n                    <Role>*</Role>\\n                    <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n                </Contact>\\n            </Tasks>\\n            <CallingNumbers>[\\"0571****3106\\"]</CallingNumbers>\\n        </List>\\n    </Jobs>\\n</QueryJobsResponse>","errorExample":""}]',
      'title' => '查询作业列表',
      'summary' => '查询作业列表。',
    ),
    'ListJobsByGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'de48407d-309e-451a-81ec-6fb11f8fdbf3',
          ),
        ),
        2 => 
        array (
          'name' => 'JobStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业状态',
            'type' => 'string',
            'required' => false,
            'example' => 'Succeeded',
          ),
        ),
        3 => 
        array (
          'name' => 'JobFailureReason',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业失败原因',
            'type' => 'string',
            'required' => false,
            'example' => 'NoAnswer',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Jobs' => 
              array (
                'description' => '作业数据',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'description' => '作业数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '作业状态',
                          'type' => 'string',
                          'example' => 'Succeeded',
                        ),
                        'ScenarioId' => 
                        array (
                          'description' => '场景id',
                          'type' => 'string',
                          'example' => 'ade80092-03d9-4f4d-ad4f-ab8a247d3150',
                        ),
                        'JobGroupId' => 
                        array (
                          'description' => '作业组id',
                          'type' => 'string',
                          'example' => 'fce6c599-8ede-40e3-9f78-0928eda7b4e8',
                        ),
                        'StrategyId' => 
                        array (
                          'description' => '策略id',
                          'type' => 'string',
                          'example' => 'c8a2b7f2-ad1a-4865-b872-d0080d9802d9',
                        ),
                        'JobId' => 
                        array (
                          'description' => '作业id',
                          'type' => 'string',
                          'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
                        ),
                        'Priority' => 
                        array (
                          'description' => '优先级',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'SystemPriority' => 
                        array (
                          'description' => '系统优先级',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'FailureReason' => 
                        array (
                          'description' => '失败原因',
                          'type' => 'string',
                          'example' => 'NoAnswer',
                        ),
                        'ReferenceId' => 
                        array (
                          'description' => '第三方系统id',
                          'type' => 'string',
                          'example' => 'd5971d98-7312-4f0e-a918-a17d67133e28',
                        ),
                        'Contacts' => 
                        array (
                          'description' => '联系人列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'PhoneNumber' => 
                              array (
                                'description' => '号码',
                                'type' => 'string',
                                'example' => '135****8888',
                              ),
                              'State' => 
                              array (
                                'description' => '状态',
                                'type' => 'string',
                                'example' => 'Available',
                              ),
                              'ContactId' => 
                              array (
                                'description' => '联系人id',
                                'type' => 'string',
                                'example' => 'db3db762-e421-44c9-9a01-cb423470757c',
                              ),
                              'Honorific' => 
                              array (
                                'description' => '联系人尊称',
                                'type' => 'string',
                                'example' => '张先生',
                              ),
                              'JobId' => 
                              array (
                                'description' => '作业id',
                                'type' => 'string',
                                'example' => '72dcd26b-f12d-4c27-b3af-18f6aed5b160',
                              ),
                              'ContactName' => 
                              array (
                                'description' => '联系人名字',
                                'type' => 'string',
                                'example' => '张三',
                              ),
                              'Role' => 
                              array (
                                'description' => '角色',
                                'type' => 'string',
                                'example' => '*',
                              ),
                              'ReferenceId' => 
                              array (
                                'description' => '联系人第三方系统id',
                                'type' => 'string',
                                'example' => '2fa6bac3-06da-4315-82ab-72d6fd3a6f34',
                              ),
                            ),
                          ),
                        ),
                        'Extras' => 
                        array (
                          'description' => '业务数据',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Key' => 
                              array (
                                'description' => '业务参数名字',
                                'type' => 'string',
                                'example' => 'djrq',
                              ),
                              'Value' => 
                              array (
                                'description' => '业务参数值',
                                'type' => 'string',
                                'example' => '2019-08-21 09:49:59.0',
                              ),
                            ),
                          ),
                        ),
                        'Summary' => 
                        array (
                          'description' => '对话摘要',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SummaryName' => 
                              array (
                                'description' => '对话摘要名字',
                                'type' => 'string',
                                'example' => 'score',
                              ),
                              'JobGroupId' => 
                              array (
                                'description' => '作业组id',
                                'type' => 'string',
                                'example' => '88e56cfb-33f8-477a-907c-0fe83292d924',
                              ),
                              'JobId' => 
                              array (
                                'description' => '作业id',
                                'type' => 'string',
                                'example' => 'f102a853-5f5a-47fb-8869-b31ea74a9620',
                              ),
                              'Category' => 
                              array (
                                'description' => '对话摘要类别',
                                'type' => 'string',
                                'example' => '{}',
                              ),
                              'TaskId' => 
                              array (
                                'description' => '任务id',
                                'type' => 'string',
                                'example' => 'b0f35dd1-0337-402e-9c4f-3a6c2426950a',
                              ),
                              'Content' => 
                              array (
                                'description' => '对话摘要内容',
                                'type' => 'string',
                                'example' => '5',
                              ),
                              'ConversationDetailId' => 
                              array (
                                'description' => '对话文本id',
                                'type' => 'string',
                                'example' => '62a860f5-a8b3-4b75-9512-c7e04bb7c8bc',
                              ),
                              'SummaryId' => 
                              array (
                                'description' => '摘要id',
                                'type' => 'string',
                                'example' => '680f1905-81ae-4aab-99dd-2964dfb767fa',
                              ),
                            ),
                          ),
                        ),
                        'CallingNumbers' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '主叫号码列表',
                            'type' => 'string',
                            'example' => '["0571****3106"]',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Jobs\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 1,\\n    \\"List\\": [\\n      {\\n        \\"Status\\": \\"Succeeded\\",\\n        \\"ScenarioId\\": \\"ade80092-03d9-4f4d-ad4f-ab8a247d3150\\",\\n        \\"JobGroupId\\": \\"fce6c599-8ede-40e3-9f78-0928eda7b4e8\\",\\n        \\"StrategyId\\": \\"c8a2b7f2-ad1a-4865-b872-d0080d9802d9\\",\\n        \\"JobId\\": \\"b72425bd-7871-4050-838e-033d80d754b7\\",\\n        \\"Priority\\": 5,\\n        \\"FailureReason\\": \\"NoAnswer\\",\\n        \\"SystemPriority\\": 1,\\n        \\"ReferenceId\\": \\"d5971d98-7312-4f0e-a918-a17d67133e28\\",\\n        \\"Contacts\\": [\\n          {\\n            \\"PhoneNumber\\": \\"135****8888\\",\\n            \\"ContactId\\": \\"db3db762-e421-44c9-9a01-cb423470757c\\",\\n            \\"State\\": \\"Available\\",\\n            \\"JobId\\": \\"72dcd26b-f12d-4c27-b3af-18f6aed5b160\\",\\n            \\"Honorific\\": \\"张先生\\",\\n            \\"ContactName\\": \\"张三\\",\\n            \\"Role\\": \\"*\\",\\n            \\"ReferenceId\\": \\"2fa6bac3-06da-4315-82ab-72d6fd3a6f34\\"\\n          }\\n        ],\\n        \\"Extras\\": [\\n          {\\n            \\"Key\\": \\"djrq\\",\\n            \\"Value\\": \\"2019-08-21 09:49:59.0\\"\\n          }\\n        ],\\n        \\"Summary\\": [\\n          {\\n            \\"SummaryName\\": \\"score\\",\\n            \\"JobGroupId\\": \\"88e56cfb-33f8-477a-907c-0fe83292d924\\",\\n            \\"JobId\\": \\"f102a853-5f5a-47fb-8869-b31ea74a9620\\",\\n            \\"Category\\": \\"{}\\",\\n            \\"Content\\": \\"5\\",\\n            \\"SummaryId\\": \\"680f1905-81ae-4aab-99dd-2964dfb767fa\\",\\n            \\"TaskId\\": \\"b0f35dd1-0337-402e-9c4f-3a6c2426950a\\",\\n            \\"ConversationDetailId\\": \\"62a860f5-a8b3-4b75-9512-c7e04bb7c8bc\\"\\n          }\\n        ],\\n        \\"CallingNumbers\\": [\\n          \\"[\\\\\\"0571****3106\\\\\\"]\\"\\n        ]\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Success</Message>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Jobs>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <List>\\n        <Status>Succeeded</Status>\\n        <JobGroupId>fce6c599-8ede-40e3-9f78-0928eda7b4e8</JobGroupId>\\n        <ScenarioId>ade80092-03d9-4f4d-ad4f-ab8a247d3150</ScenarioId>\\n        <ReferenceId>d5971d98-7312-4f0e-a918-a17d67133e28</ReferenceId>\\n        <Priority>5</Priority>\\n        <FailureReason>NoAnswer</FailureReason>\\n        <SystemPriority>1</SystemPriority>\\n        <StrategyId>c8a2b7f2-ad1a-4865-b872-d0080d9802d9</StrategyId>\\n        <JobId>b72425bd-7871-4050-838e-033d80d754b7</JobId>\\n        <Contacts>\\n            <Role>*</Role>\\n            <Honorific>张先生</Honorific>\\n            <ReferenceId>2fa6bac3-06da-4315-82ab-72d6fd3a6f34</ReferenceId>\\n            <State>Available</State>\\n            <PhoneNumber>135****8888</PhoneNumber>\\n            <ContactId>db3db762-e421-44c9-9a01-cb423470757c</ContactId>\\n            <ContactName>张三</ContactName>\\n            <JobId>72dcd26b-f12d-4c27-b3af-18f6aed5b160</JobId>\\n        </Contacts>\\n        <Extras>\\n            <Value>2019-08-21 09:49:59.0</Value>\\n            <Key>djrq</Key>\\n        </Extras>\\n        <Summary>\\n            <JobGroupId>88e56cfb-33f8-477a-907c-0fe83292d924</JobGroupId>\\n            <Category>{}</Category>\\n            <TaskId>b0f35dd1-0337-402e-9c4f-3a6c2426950a</TaskId>\\n            <ConversationDetailId>62a860f5-a8b3-4b75-9512-c7e04bb7c8bc</ConversationDetailId>\\n            <Content>5</Content>\\n            <SummaryId>680f1905-81ae-4aab-99dd-2964dfb767fa</SummaryId>\\n            <SummaryName>score</SummaryName>\\n            <JobId>f102a853-5f5a-47fb-8869-b31ea74a9620</JobId>\\n        </Summary>\\n        <CallingNumbers>[\\"0571****3106\\"]</CallingNumbers>\\n    </List>\\n</Jobs>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '根据作业组查询作业',
      'summary' => '根据作业组查询作业。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否取消全部',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，作业使用的场景id',
            'type' => 'string',
            'required' => false,
            'example' => '9cef0dd3-b9d6-4748-9a6f-77a8c3402bb1',
          ),
        ),
        3 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，作业归属的作业组id',
            'type' => 'string',
            'required' => false,
            'example' => '9f84892d-721a-4069-9975-668c8164d64e',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件，作业id',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'edf45790-7200-4cbc-b157-8c0a5f400b75',
            'maxItems' => 99,
          ),
        ),
        5 => 
        array (
          'name' => 'JobReferenceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件，作业的引用id',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => '4a875676-b136-4087-88b4-de67c61fed69',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '取消即将执行或执行中的作业',
      'summary' => '取消创建后即将执行的作业或者执行中的作业（已经在通话中的作业取消无效）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResumeJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，是否重启所有',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，场景id',
            'type' => 'string',
            'required' => false,
            'example' => 'b016fbdb-b81c-4c06-8870-cb36b8783b6d',
          ),
        ),
        3 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，作业组id',
            'type' => 'string',
            'required' => false,
            'example' => 'de48407d-309e-451a-81ec-6fb11f8fdbf3',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '作业id',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'b72425bd-7871-4050-838e-033d80d754b7',
            'maxItems' => 99,
          ),
        ),
        5 => 
        array (
          'name' => 'JobReferenceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '作业的第三方id',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'd5971d98-7312-4f0e-a918-a17d67133e28',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '重启暂停的作业',
      'summary' => '重启暂停的作业。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SubmitBatchJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6b3ea2a1-32b3-4041-842b-9bde5de9dda0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.JobGroup',
            'errorMessage' => 'The specified JobGroup does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '将草稿状态的作业组提交执行',
      'summary' => '将草稿状态的作业组提交执行。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SuspendJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，是否暂停所有',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，场景id',
            'type' => 'string',
            'required' => false,
            'example' => '4b6dd926-3cc3-4111-a333-15d9b006fe81',
          ),
        ),
        3 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，作业组id',
            'type' => 'string',
            'required' => false,
            'example' => '6b3ea2a1-32b3-4041-842b-9bde5de9dda0',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '作业id',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => '11994321-e6bc-47bb-8b1c-8eef8f2f768b',
            'maxItems' => 99,
          ),
        ),
        5 => 
        array (
          'name' => 'JobReferenceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '作业的第三方id',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'de3ab269-6746-477c-b13d-bd49f13202c2',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.JobGroup',
            'errorMessage' => 'The specified JobGroup does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '暂停作业',
      'summary' => '暂停作业。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DownloadRecording' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'da37319b-6c83-4268-9f19-814aed62e401',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id，通话来自这个任务',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '744b27f3-437f-4a8c-a181-f668e492fd24',
          ),
        ),
        2 => 
        array (
          'name' => 'NeedVoiceSliceRecording',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询分段录音',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DownloadParams' => 
              array (
                'description' => '文档下载地址',
                'type' => 'object',
                'properties' => 
                array (
                  'SignatureUrl' => 
                  array (
                    'description' => '一个指向录音文件的url，使用http下载',
                    'type' => 'string',
                    'example' => 'http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&OSSAccessKeyId=LTAI****cqw&Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D',
                  ),
                  'FileName' => 
                  array (
                    'description' => '录音文件名，通常为一个uuid',
                    'type' => 'string',
                    'example' => '281eb174-3865-41c1-9274-7b6813edadab.wav',
                  ),
                  'VoiceSliceRecordingListJson' => 
                  array (
                    'description' => '分段录音列表，包含文件名和文件url',
                    'type' => 'string',
                    'example' => '[{"fileName":"10a17c447415424c99491884abe27d8a-1.wav","filePath":"https://ssml-test.oss-cn-shanghai.aliyuncs.com/7253/voiceSlice/10a17c447415424c99491884abe27d8a/10a17c447415424c99491884abe27d8a-1.wav?Expires=1686645470&OSSAccessKeyId=LTA*********kr8M9&Signature=V23OhiV5yIOoouriu6SiWkO9h8E%3D"}]',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"DownloadParams\\": {\\n    \\"SignatureUrl\\": \\"http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&OSSAccessKeyId=LTAI****cqw&Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D\\",\\n    \\"FileName\\": \\"281eb174-3865-41c1-9274-7b6813edadab.wav\\",\\n    \\"VoiceSliceRecordingListJson\\": \\"[{\\\\\\"fileName\\\\\\":\\\\\\"10a17c447415424c99491884abe27d8a-1.wav\\\\\\",\\\\\\"filePath\\\\\\":\\\\\\"https://ssml-test.oss-cn-shanghai.aliyuncs.com/7253/voiceSlice/10a17c447415424c99491884abe27d8a/10a17c447415424c99491884abe27d8a-1.wav?Expires=1686645470&OSSAccessKeyId=LTA*********kr8M9&Signature=V23OhiV5yIOoouriu6SiWkO9h8E%3D\\\\\\"}]\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DownloadRecordingResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <DownloadParams>\\n        <SignatureUrl>http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&amp;OSSAccessKeyId=LTAI****cqw&amp;Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D</SignatureUrl>\\n        <FileName>281eb174-3865-41c1-9274-7b6813edadab.wav</FileName>\\n        <VoiceSliceRecordingListJson>[{\\"fileName\\":\\"10a17c447415424c99491884abe27d8a-1.wav\\",\\"filePath\\":\\"https://ssml-test.oss-cn-shanghai.aliyuncs.com/7253/voiceSlice/10a17c447415424c99491884abe27d8a/10a17c447415424c99491884abe27d8a-1.wav?Expires=1686645470&amp;OSSAccessKeyId=LTA*********kr8M9&amp;Signature=V23OhiV5yIOoouriu6SiWkO9h8E%3D\\"}]</VoiceSliceRecordingListJson>\\n    </DownloadParams>\\n</DownloadRecordingResponse>","errorExample":""}]',
      'title' => '下载通话录音',
      'summary' => '下载通话录音。',
    ),
    'CreateTag' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '797203ac-3874-422f-838f-d4cd63c72681',
          ),
        ),
        2 => 
        array (
          'name' => 'TagName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '研究生',
          ),
        ),
        3 => 
        array (
          'name' => 'TagGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签组，标签所在的组，如果明知指定的标签组不存在，系统会自动创建一个名字参数指定的标签组',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '目标学历',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'TagId' => 
              array (
                'description' => '标签id',
                'type' => 'string',
                'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"Success\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"TagId\\": \\"390515b5-6115-4ccf-83e2-52d5bfaf2ddf\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>\\n<TagId>F98C298D-4134-45A0-97DE-CF1BA7279A21</TagId>","errorExample":""}]',
      'title' => '创建标签',
      'summary' => '创建标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyTagGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cd560e89-0459-4c8a-ad98-47d713e4abd6',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '365b955d-6f4d-4ab5-a6e1-9a301307f4b1',
          ),
        ),
        2 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"Id":"19b23e92-4ee3-4129-8c2e-e1968670d887","ScriptId":"365b955d-6f4d-4ab5-a6e1-9a301307f4b1","TagGroup":"当前学历","TagName":"本科"},{"Id":"6ebb9fb9-cc51-4bae-b256-64d5ec4c75ef","ScriptId":"365b955d-6f4d-4ab5-a6e1-9a301307f4b1","TagGroup":"当前学历","TagName":"在职"},{"Id":"ce442140-299b-4971-b26b-a3e277d5c1de","ScriptId":"365b955d-6f4d-4ab5-a6e1-9a301307f4b1","TagGroup":"当前学历","TagName":"高中"},{"Id":"c8987ff8-4475-4a75-b994-e4f6411c6968","ScriptId":"365b955d-6f4d-4ab5-a6e1-9a301307f4b1","TagGroup":"当前学历","TagName":"研究生"}]',
          ),
        ),
        3 => 
        array (
          'name' => 'TagGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签组列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"Id":"54629be9-0746-464a-ab59-4830242cf644","ScriptId":"365b955d-6f4d-4ab5-a6e1-9a301307f4b1","TagGroup":"当前学历","TagGroupIndex":0}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '5a865b03-d2b9-4ef9-be98-f21fa0d93744',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagGroups' => 
              array (
                'description' => '标签组列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TagGroupId' => 
                    array (
                      'description' => '标签组ID',
                      'type' => 'string',
                      'example' => '54629be9-0746-464a-ab59-4830242cf644',
                    ),
                    'TagGroupIndex' => 
                    array (
                      'description' => '标签组索引',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TagGroup' => 
                    array (
                      'description' => '标签组名称',
                      'type' => 'string',
                      'example' => '当前学历',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术唯一ID',
                      'type' => 'string',
                      'example' => '365b955d-6f4d-4ab5-a6e1-9a301307f4b1',
                    ),
                  ),
                ),
              ),
              'Tags' => 
              array (
                'description' => '标签列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TagGroup' => 
                    array (
                      'description' => '标签组名称',
                      'type' => 'string',
                      'example' => '当前学历',
                    ),
                    'TagName' => 
                    array (
                      'description' => '标签名称',
                      'type' => 'string',
                      'example' => '本科',
                    ),
                    'TagIndex' => 
                    array (
                      'description' => '标签索引',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术唯一ID',
                      'type' => 'string',
                      'example' => '365b955d-6f4d-4ab5-a6e1-9a301307f4b1',
                    ),
                    'TagId' => 
                    array (
                      'description' => '标签唯一ID',
                      'type' => 'string',
                      'example' => '19b23e92-4ee3-4129-8c2e-e1968670d887',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"5a865b03-d2b9-4ef9-be98-f21fa0d93744\\",\\n  \\"Success\\": true,\\n  \\"Tags\\": [\\n    {\\n      \\"TagGroup\\": \\"当前学历\\",\\n      \\"ScriptId\\": \\"365b955d-6f4d-4ab5-a6e1-9a301307f4b1\\",\\n      \\"TagIndex\\": 1,\\n      \\"TagName\\": \\"本科\\",\\n      \\"TagId\\": \\"19b23e92-4ee3-4129-8c2e-e1968670d887\\"\\n    }\\n  ],\\n  \\"TagGroups\\": [\\n    {\\n      \\"TagGroupId\\": \\"54629be9-0746-464a-ab59-4830242cf644\\",\\n      \\"TagGroup\\": \\"当前学历\\",\\n      \\"TagGroupIndex\\": 1,\\n      \\"ScriptId\\": \\"365b955d-6f4d-4ab5-a6e1-9a301307f4b1\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5a865b03-d2b9-4ef9-be98-f21fa0d93744</RequestId>\\n<TagGroups>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagGroupId>54629be9-0746-464a-ab59-4830242cf644</TagGroupId>\\n</TagGroups>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>\\n<Tags>\\n    <TagName>本科</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>19b23e92-4ee3-4129-8c2e-e1968670d887</TagId>\\n</Tags>\\n<Tags>\\n    <TagName>在职</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>6ebb9fb9-cc51-4bae-b256-64d5ec4c75ef</TagId>\\n</Tags>\\n<Tags>\\n    <TagName>高中</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>ce442140-299b-4971-b26b-a3e277d5c1de</TagId>\\n</Tags>\\n<Tags>\\n    <TagName>研究生</TagName>\\n    <TagGroup>当前学历</TagGroup>\\n    <ScriptId>365b955d-6f4d-4ab5-a6e1-9a301307f4b1</ScriptId>\\n    <TagId>c8987ff8-4475-4a75-b994-e4f6411c6968</TagId>\\n</Tags>","errorExample":""}]',
      'title' => '修改标签组',
      'summary' => '修改标签组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTagHitsSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8fa1953f-4a84-46d8-b80c-8ce9cf684fb3',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务组ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8a4c6d3d-5ed6-44ca-b779-16c20f8862be',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '5391EB13-A0E7-402D-A407-B99D4ABAF22A',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagGroups' => 
              array (
                'description' => '标签组信息',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TagGroupIndex' => 
                    array (
                      'description' => '标签组位置',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'TagGroup' => 
                    array (
                      'description' => '标签组名称',
                      'type' => 'string',
                      'example' => '标签组',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '话术ID',
                      'type' => 'string',
                      'example' => '84fc7c41-f918-4a47-b742-a439b35a8567',
                    ),
                    'Id' => 
                    array (
                      'description' => 'ID',
                      'type' => 'string',
                      'example' => '8bb6f8ca-85a3-49f8-86a5-3127902a2156',
                    ),
                  ),
                ),
              ),
              'TagHitsList' => 
              array (
                'description' => '命中标签信息',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'HitCount' => 
                    array (
                      'description' => '命中数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TagGroup' => 
                    array (
                      'description' => '标签组名称',
                      'type' => 'string',
                      'example' => '标签组',
                    ),
                    'TagName' => 
                    array (
                      'description' => '标签名称',
                      'type' => 'string',
                      'example' => '标签',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.JobGroup',
            'errorMessage' => 'The specified JobGroup does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"5391EB13-A0E7-402D-A407-B99D4ABAF22A\\",\\n  \\"Success\\": true,\\n  \\"TagGroups\\": [\\n    {\\n      \\"TagGroupIndex\\": 0,\\n      \\"TagGroup\\": \\"标签组\\",\\n      \\"ScriptId\\": \\"84fc7c41-f918-4a47-b742-a439b35a8567\\",\\n      \\"Id\\": \\"8bb6f8ca-85a3-49f8-86a5-3127902a2156\\"\\n    }\\n  ],\\n  \\"TagHitsList\\": [\\n    {\\n      \\"HitCount\\": 1,\\n      \\"TagGroup\\": \\"标签组\\",\\n      \\"TagName\\": \\"标签\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5391EB13-A0E7-402D-A407-B99D4ABAF22A</RequestId>\\n<TagGroups>\\n    <TagGroupIndex>1</TagGroupIndex>\\n    <TagGroup>标签组</TagGroup>\\n    <ScriptId>84fc7c41-f918-4a47-b742-a439b35a8567</ScriptId>\\n    <Id>8bb6f8ca-85a3-49f8-86a5-3127902a2156</Id>\\n</TagGroups>\\n<HttpStatusCode>200</HttpStatusCode>\\n<TagHitsList>\\n    <TagName>标签</TagName>\\n    <HitCount>1</HitCount>\\n    <TagGroup>标签组</TagGroup>\\n</TagHitsList>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询标签统计数据',
      'summary' => '查询标签统计数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateAnnotationMission' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionDataSourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '1：外呼',
            'description' => '1：外呼',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '外呼场景ID',
            'description' => '外呼场景ID',
            'type' => 'string',
            'required' => false,
            'example' => '6236f21e-2e04-4dad-a47b-ae77e6a48325',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => false,
            'example' => 'bf3b51a5-e88a-4636-98b0-1a34725a085b',
          ),
        ),
        3 => 
        array (
          'name' => 'Finished',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务是否结束。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'True',
          ),
        ),
        4 => 
        array (
          'name' => 'SessionEndReasonFilterList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '通话结果状态过滤条件',
            'description' => '通话结果状态过滤条件',
            'type' => 'array',
            'items' => 
            array (
              'description' => '关键词过滤规则',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        5 => 
        array (
          'name' => 'SessionEndReasonFilterListJsonString',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '通话结果状态过滤条件',
            'description' => '通话结果状态过滤条件',
            'type' => 'string',
            'required' => false,
            'example' => '[1]',
          ),
        ),
        6 => 
        array (
          'name' => 'ExcludeOtherSession',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否排除其他任务已标注的通话记录',
            'description' => '是否排除其他任务已标注的通话记录',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'ConversationTimeStartFilter',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '通话时间过滤开始时间',
            'description' => '通话时间过滤开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1683302400000',
          ),
        ),
        8 => 
        array (
          'name' => 'ConversationTimeEndFilter',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '通话时间过滤结束时间',
            'description' => '通话时间过滤结束时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1682956800000',
          ),
        ),
        9 => 
        array (
          'name' => 'SamplingType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '抽样类型',
            'description' => '抽样类型',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'SamplingRate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '抽样比例',
            'description' => '抽样比例',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'SamplingCount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '抽样数量自定义量',
            'description' => '抽样数量自定义量',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'AnnotationMissionName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务名称',
            'description' => '标注任务名称',
            'type' => 'string',
            'required' => false,
            'example' => '询问卖车-标注任务-20230506-112934',
          ),
        ),
        13 => 
        array (
          'name' => 'AnnotationMissionDebugDataSourceList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '业务数据列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '业务数据列表',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
          ),
        ),
        14 => 
        array (
          'name' => 'AnnotationMissionDebugDataSourceListJsonString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调试数据JSON',
            'type' => 'string',
            'required' => false,
            'example' => '[1]',
          ),
        ),
        15 => 
        array (
          'name' => 'ChatbotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '机器人id',
            'type' => 'string',
            'required' => false,
            'example' => 'chatbot-cn-fqEnFZBYnb',
          ),
        ),
        16 => 
        array (
          'name' => 'AgentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '坐席ID',
            'type' => 'string',
            'required' => false,
            'example' => '1168702',
          ),
        ),
        17 => 
        array (
          'name' => 'AgentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务空间key,不设置则访问默认业务空间，key值在主账号业务管理页面获取',
            'type' => 'string',
            'required' => false,
            'example' => '9137ab9c27044921860030adf8590ec4_p_outbound_public',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<CreateAnnotationMissionResponse>',
            'description' => 'BaseResponse<CreateAnnotationMissionResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：调用成功。                                 false：调用失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                'type' => 'string',
                'example' => '执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Success' => 
                  array (
                    'description' => '是否成功',
                    'type' => 'boolean',
                    'example' => 'True',
                  ),
                  'Message' => 
                  array (
                    'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                    'type' => 'string',
                    'example' => '执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821\\",\\n  \\"Data\\": {\\n    \\"Success\\": true,\\n    \\"Message\\": \\"执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821\\"\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '创建标注任务',
    ),
    'SaveAnnotationMissionTagInfoList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionTagInfoListJsonString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tag JSON数据',
            'type' => 'string',
            'required' => false,
            'example' => '[]',
          ),
        ),
        1 => 
        array (
          'name' => 'AnnotationMissionTagInfoList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表',
              'type' => 'object',
              'properties' => 
              array (
                'AnnotationMissionTagInfoId' => 
                array (
                  'description' => 'tag id',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'bdbff6a5-1f68-4b41-8d37-6ff805ce165a
',
                ),
                'InstanceId' => 
                array (
                  'description' => '实例id',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'bdbff6a5-1f68-4b41-8d37-6ff805ce165a',
                ),
                'TenantId' => 
                array (
                  'description' => '租户ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'bdbff6a5-1f68-4b41-8d37-6ff805ce165a
',
                ),
                'AnnotationMissionTagInfoName' => 
                array (
                  'description' => 'tag名称',
                  'type' => 'string',
                  'required' => false,
                  'example' => '标签',
                ),
                'AnnotationMissionTagInfoDescription' => 
                array (
                  'description' => '标签描述',
                  'type' => 'string',
                  'required' => false,
                  'example' => '标签描述',
                ),
                'Delete' => 
                array (
                  'description' => '删除',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'Reset',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否重置',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例编号。',
            'type' => 'string',
            'required' => false,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<SaveAnnotationMissionTagInfoListResponse>',
            'description' => 'BaseResponse<SaveAnnotationMissionTagInfoListResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：表示调用成功。false：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => '执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'Success' => 
                  array (
                    'description' => '是否成功',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ExecCount' => 
                  array (
                    'description' => '执行成功的数量',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Message' => 
                  array (
                    'description' => '接口提示信息',
                    'type' => 'string',
                    'example' => '执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '1B356EDC-F69A-53B0-B4AF-2AC42200684E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821\\",\\n  \\"Data\\": {\\n    \\"Success\\": true,\\n    \\"ExecCount\\": 1,\\n    \\"Message\\": \\"执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-uax33hol2uu,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821\\"\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"1B356EDC-F69A-53B0-B4AF-2AC42200684E\\"\\n}","type":"json"}]',
      'title' => '保存标注标签映射关系',
    ),
    'SaveAnnotationMissionSessionList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionSessionListJsonString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '会话列表JSON',
            'type' => 'string',
            'required' => false,
            'example' => '[]',
          ),
        ),
        1 => 
        array (
          'name' => 'UserNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户昵称',
            'type' => 'string',
            'required' => false,
            'example' => '用户',
          ),
        ),
        2 => 
        array (
          'name' => 'AnnotationMissionSessionList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '会话列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '会话',
              'type' => 'object',
              'properties' => 
              array (
                'AnnotationMissionSessionId' => 
                array (
                  'description' => '会话id',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'c88cc004-de69-4eee-aa5f-2efed533a54e
',
                ),
                'CreateTime' => 
                array (
                  'description' => '创建时间',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '2023-04-14T02:01:23Z',
                ),
                'ModifiedTime' => 
                array (
                  'description' => '修改时间',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1683858248778',
                ),
                'AnnotationMissionId' => 
                array (
                  'description' => '标注任务id',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'c88cc004-de69-4eee-aa5f-2efed533a54e',
                ),
                'InstanceId' => 
                array (
                  'description' => '实例id',
                  'type' => 'string',
                  'required' => false,
                  'example' => '77343553-cbc2-4487-a35c-869f1e86c573',
                ),
                'ScriptId' => 
                array (
                  'description' => '场景id',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'e4f32632-2e56-4399-9fec-47bdbaeefdf6',
                ),
                'JobGroupId' => 
                array (
                  'description' => '任务组ID',
                  'type' => 'string',
                  'required' => false,
                  'example' => '29e669bd-a9d1-4529-98cd-c2b0549bcf53',
                ),
                'JobId' => 
                array (
                  'description' => '任务ID',
                  'type' => 'string',
                  'required' => false,
                  'example' => '593aaf5e-1275-4add-9990-22696385dc6e',
                ),
                'SessionId' => 
                array (
                  'description' => '外呼系统为taskId，导航为conversationId',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'e6271044-b4b2-4ad8-ade4-c720be023538',
                ),
                'AnnotationStatus' => 
                array (
                  'description' => '标注状态',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'AnnotationMissionChatList' => 
                array (
                  'description' => 'chat列表',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => 'chat列表',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AnnotationMissionChatId' => 
                      array (
                        'description' => 'chat id',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                      ),
                      'CreateTime' => 
                      array (
                        'description' => '创建时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'required' => false,
                        'example' => '1679629770336',
                      ),
                      'ModifiedTime' => 
                      array (
                        'description' => '修改时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'required' => false,
                        'example' => '1629360780000',
                      ),
                      'AnnotationMissionId' => 
                      array (
                        'description' => '标注任务id',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9',
                      ),
                      'AnnotationMissionSessionId' => 
                      array (
                        'description' => '会话id',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'c88cc004-de69-4eee-aa5f-2efed533a54e
',
                      ),
                      'InstanceId' => 
                      array (
                        'description' => '实例id',
                        'type' => 'string',
                        'required' => false,
                        'example' => '5ec263fa-c8de-46f4-b844-6fb8275bb645',
                      ),
                      'SequenceId' => 
                      array (
                        'description' => '本轮次会话交互的序列号',
                        'type' => 'string',
                        'required' => false,
                        'example' => '1475140522',
                      ),
                      'OccurTime' => 
                      array (
                        'description' => '触发时间',
                        'type' => 'integer',
                        'format' => 'int64',
                        'required' => false,
                        'example' => '1682493047418',
                      ),
                      'Answer' => 
                      array (
                        'description' => '机器人答复内容',
                        'type' => 'string',
                        'required' => false,
                        'example' => '{\'Answer\': u\'\\u53c2\\u8003\\u6587\\u6863\\uff1ahttps://help.aliyun.com/document_detail/181325.html\', \'QuestionId\': 372858, \'Uuid\': \'ac14000516762684770197536d0044\'}',
                      ),
                      'AnnotationStatus' => 
                      array (
                        'description' => '标注状态',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '1',
                      ),
                      'IntentAnnotationStatus' => 
                      array (
                        'title' => '语义标注状态',
                        'description' => '语义标注状态',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '1',
                      ),
                      'AsrAnnotationStatus' => 
                      array (
                        'title' => 'ASR标注状态',
                        'description' => 'ASR标注状态',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '1',
                      ),
                      'TagAnnotationStatus' => 
                      array (
                        'title' => '标签标注状态',
                        'description' => '标签标注状态',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '1',
                      ),
                      'SubStatus' => 
                      array (
                        'title' => '标注动作：1正确、20匹配错误未优化 21匹配错误已优化、3未覆盖、4无效',
                        'description' => '标注动作：1正确、20匹配错误未优化 21匹配错误已优化、3未覆盖、4无效',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '1',
                      ),
                      'TranslationError' => 
                      array (
                        'description' => '转译错误标识',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '1',
                      ),
                      'AnnotationAsrResult' => 
                      array (
                        'description' => 'ASR人工标注文本结果，用于字准率的计算',
                        'type' => 'string',
                        'required' => false,
                        'example' => '[]',
                      ),
                      'OriginalAsrResult' => 
                      array (
                        'description' => 'ASR识别结果',
                        'type' => 'string',
                        'required' => false,
                        'example' => '[]',
                      ),
                      'AnnotationMissionChatIntentUserSayInfoList' => 
                      array (
                        'description' => '列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AnnotationMissionChatIntentUserSayInfoId' => 
                            array (
                              'description' => 'Id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1683858248778',
                            ),
                            'ModifiedTime' => 
                            array (
                              'description' => '修改时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1683858248778',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'AnnotationMissionId' => 
                            array (
                              'description' => '标注任务id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'AnnotationMissionSessionId' => 
                            array (
                              'description' => '会话id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'AnnotationMissionChatId' => 
                            array (
                              'description' => 'chat id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'Content' => 
                            array (
                              'description' => '内容',
                              'type' => 'string',
                              'required' => false,
                              'example' => '[]',
                            ),
                            'IntentId' => 
                            array (
                              'description' => '意图id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'DialogId' => 
                            array (
                              'description' => '对话id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'BotId' => 
                            array (
                              'description' => '机器人id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9
',
                            ),
                            'Delete' => 
                            array (
                              'description' => '删除',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'false',
                            ),
                            'Create' => 
                            array (
                              'description' => '创建',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'false',
                            ),
                          ),
                          'required' => false,
                        ),
                        'required' => false,
                        'maxItems' => 10,
                      ),
                      'AnnotationMissionChatVocabularyInfoList' => 
                      array (
                        'description' => '标注任务chat热词标注信息表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '标注任务chat热词标注信息表',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AnnotationMissionChatVocabularyInfoId' => 
                            array (
                              'description' => 'id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1677552860720',
                            ),
                            'ModifiedTime' => 
                            array (
                              'description' => '修改时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1679283408230',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '77343553-cbc2-4487-a35c-869f1e86c573',
                            ),
                            'AnnotationMissionId' => 
                            array (
                              'description' => '标注任务id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada',
                            ),
                            'AnnotationMissionSessionId' => 
                            array (
                              'description' => '会话id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                            ),
                            'AnnotationMissionChatId' => 
                            array (
                              'description' => 'chat id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                            ),
                            'VocabularyId' => 
                            array (
                              'description' => '热词id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                            ),
                            'Vocabulary' => 
                            array (
                              'description' => '热词标注内容',
                              'type' => 'string',
                              'required' => false,
                              'example' => '[]',
                            ),
                            'VocabularyName' => 
                            array (
                              'description' => '处理场景名称',
                              'type' => 'string',
                              'required' => false,
                              'example' => '咨询',
                            ),
                            'VocabularyDescription' => 
                            array (
                              'description' => '描述',
                              'type' => 'string',
                              'required' => false,
                              'example' => '售后咨询',
                            ),
                            'VocabularyWeight' => 
                            array (
                              'description' => '热词权重[-6,5]',
                              'type' => 'integer',
                              'format' => 'int32',
                              'required' => false,
                              'example' => '0',
                            ),
                            'Delete' => 
                            array (
                              'description' => '删除',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'true',
                            ),
                            'Create' => 
                            array (
                              'description' => '创建',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'false',
                            ),
                          ),
                          'required' => false,
                        ),
                        'required' => false,
                        'maxItems' => 10,
                      ),
                      'AnnotationMissionChatCustomizationDataInfoList' => 
                      array (
                        'description' => '标注任务chat语言模型标注信息表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '标注任务chat语言模型标注信息表',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AnnotationMissionChatCustomizationDataInfoId' => 
                            array (
                              'description' => 'id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'b598a47a-7c03-45fb-af6b-343950dd9512
',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1682316909210',
                            ),
                            'ModifiedTime' => 
                            array (
                              'description' => '修改时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1673438100000',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'b598a47a-7c03-45fb-af6b-343950dd9512',
                            ),
                            'AnnotationMissionId' => 
                            array (
                              'description' => '标注任务id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '03f56192-fa8a-40dc-9558-39b357f0618f',
                            ),
                            'AnnotationMissionSessionId' => 
                            array (
                              'description' => '会话id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada
',
                            ),
                            'AnnotationMissionChatId' => 
                            array (
                              'description' => 'chat id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada
',
                            ),
                            'CustomizationDataId' => 
                            array (
                              'description' => 'id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada
',
                            ),
                            'Content' => 
                            array (
                              'description' => '内容',
                              'type' => 'string',
                              'required' => false,
                              'example' => '现在呢主动邀请到您，机会非常难得，而且额度放着不用，也是不收费的，可以当作咱们的备用金，最快5分钟就能到账，建议您可以先把额度免费领取下来呢。   ',
                            ),
                            'CustomizationDataName' => 
                            array (
                              'description' => '名称',
                              'type' => 'string',
                              'required' => false,
                              'example' => '默认数据',
                            ),
                            'CustomizationDataDescription' => 
                            array (
                              'description' => '描述',
                              'type' => 'string',
                              'required' => false,
                              'example' => '默认数据描述',
                            ),
                            'CustomizationDataWeight' => 
                            array (
                              'description' => '语言模型数据权重',
                              'type' => 'integer',
                              'format' => 'int32',
                              'required' => false,
                              'example' => '1',
                            ),
                            'Delete' => 
                            array (
                              'description' => '删除',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'true',
                            ),
                            'Create' => 
                            array (
                              'description' => '创建',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'true',
                            ),
                          ),
                          'required' => false,
                        ),
                        'required' => false,
                        'maxItems' => 10,
                      ),
                      'AnnotationMissionChatTagInfoList' => 
                      array (
                        'description' => '标注信息chat绑定标签映射关系列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '标注信息chat绑定标签映射关系列表',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AnnotationMissionChatTagInfoId' => 
                            array (
                              'description' => 'id',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'id',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => 'annotationmissiongroup结束时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1679710866060',
                            ),
                            'ModifiedTime' => 
                            array (
                              'description' => '修改时间',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '1679710866060',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '32be9d94-1346-4c4a-a4d0-ccd379f87013',
                            ),
                            'AnnotationMissionId' => 
                            array (
                              'description' => '任务ID',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada',
                            ),
                            'AnnotationMissionSessionId' => 
                            array (
                              'description' => '会话id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada
',
                            ),
                            'AnnotationMissionChatId' => 
                            array (
                              'description' => 'chat id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada
',
                            ),
                            'AnnotationMissionTagInfoId' => 
                            array (
                              'description' => 'tag id',
                              'type' => 'string',
                              'required' => false,
                              'example' => '977a45dc-b636-4407-9e98-9f572c709ada
',
                            ),
                            'AnnotationMissionTagInfoName' => 
                            array (
                              'description' => 'tag名称',
                              'type' => 'string',
                              'required' => false,
                              'example' => '-',
                            ),
                            'Delete' => 
                            array (
                              'description' => '删除',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'false',
                            ),
                            'Create' => 
                            array (
                              'description' => '创建',
                              'type' => 'boolean',
                              'required' => false,
                              'example' => 'true',
                            ),
                          ),
                          'required' => false,
                        ),
                        'required' => false,
                        'maxItems' => 10,
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                  'maxItems' => 10,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        3 => 
        array (
          'name' => 'Environment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'AnnotationMissionDataSourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标注数据来源，1:外呼、2：导航',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'AgentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '坐席ID。',
            'type' => 'string',
            'required' => false,
            'example' => '1198938',
          ),
        ),
        6 => 
        array (
          'name' => 'AgentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务空间key，不传时访问默认业务空间，key值在主账号业务管理页面获取',
            'type' => 'string',
            'required' => false,
            'example' => '9137ab9c27044921860030adf8590ec4_p_outbound_public',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<SaveAnnotationMissionSessionListResponse>',
            'description' => 'BaseResponse<SaveAnnotationMissionSessionListResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：表示调用成功。                                 false：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                'type' => 'string',
                'example' => '执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-zz4310rp1lb,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'Success' => 
                  array (
                    'description' => '是否成功',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Message' => 
                  array (
                    'description' => '接口提示信息',
                    'type' => 'string',
                    'example' => '执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-zz4310rp1lb,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821',
                  ),
                  'SaveAnnotationMissionSessionListRequest' => 
                  array (
                    'description' => '请求结果',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AnnotationMissionSessionListJsonString' => 
                      array (
                        'description' => '审批申请的脚本内容',
                        'type' => 'string',
                        'example' => '[]',
                      ),
                    ),
                  ),
                  'MessageList' => 
                  array (
                    'description' => '信息列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '信息列表',
                      'type' => 'string',
                      'example' => '[]',
                    ),
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '76E93048-F90F-57B7-BD46-6097611A706D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-zz4310rp1lb,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821\\",\\n  \\"Data\\": {\\n    \\"Success\\": true,\\n    \\"Message\\": \\"执行失败:查找元素或操作超时,outTaskId:trademark_regnew_public_cn-zz4310rp1lb,flowId:null,nodeUUID:541b6c71-8cce-4ab0-af84-713ca9741821\\",\\n    \\"SaveAnnotationMissionSessionListRequest\\": {\\n      \\"AnnotationMissionSessionListJsonString\\": \\"[]\\"\\n    },\\n    \\"MessageList\\": [\\n      \\"[]\\"\\n    ]\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"76E93048-F90F-57B7-BD46-6097611A706D\\"\\n}","type":"json"}]',
      'title' => '保存标注chat实例列表',
    ),
    'GetAnnotationMissionTagInfoList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => false,
            'example' => '4eee9bf8-1319-468f-ac82-83c50ae389f8',
          ),
        ),
        1 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<GetAnnotationMissionTagInfoListResponse>',
            'description' => 'BaseResponse<GetAnnotationMissionTagInfoListResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：表示调用成功。                                 false：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'CDR \'job-efbaeefc-4d45-4e79-83f7-b33b0769c969\' doesn\'t exists.',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AnnotationMissionTagInfoList' => 
                  array (
                    'description' => '标签列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AnnotationMissionTagInfoId' => 
                        array (
                          'description' => '标签ID',
                          'type' => 'string',
                          'example' => 'e1ee87ea-ebad-4079-aebb-1c56a4ef0c06',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => '3c3b8d1d-deff-48d9-9318-addc80ae5b1e',
                        ),
                        'TenantId' => 
                        array (
                          'description' => '租户 ID。',
                          'type' => 'string',
                          'example' => 'DING_ORG_dingbd9daecdb7aaed3bffe93478753d9884',
                        ),
                        'AnnotationMissionTagInfoName' => 
                        array (
                          'description' => '标签名称',
                          'type' => 'string',
                          'example' => '用户投诉',
                        ),
                        'AnnotationMissionTagInfoDescription' => 
                        array (
                          'description' => '标签描述',
                          'type' => 'string',
                          'example' => '用户投诉',
                        ),
                        'Delete' => 
                        array (
                          'description' => '是否已删除',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                  'Success' => 
                  array (
                    'description' => '是否调用成功。true：表示调用成功。                                 false：表示调用失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Message' => 
                  array (
                    'description' => '接口提示信息',
                    'type' => 'string',
                    'example' => 'CDR \'job-efbaeefc-4d45-4e79-83f7-b33b0769c969\' doesn\'t exists.',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"CDR \'job-efbaeefc-4d45-4e79-83f7-b33b0769c969\' doesn\'t exists.\\",\\n  \\"Data\\": {\\n    \\"AnnotationMissionTagInfoList\\": [\\n      {\\n        \\"AnnotationMissionTagInfoId\\": \\"e1ee87ea-ebad-4079-aebb-1c56a4ef0c06\\",\\n        \\"InstanceId\\": \\"3c3b8d1d-deff-48d9-9318-addc80ae5b1e\\",\\n        \\"TenantId\\": \\"DING_ORG_dingbd9daecdb7aaed3bffe93478753d9884\\",\\n        \\"AnnotationMissionTagInfoName\\": \\"用户投诉\\",\\n        \\"AnnotationMissionTagInfoDescription\\": \\"用户投诉\\",\\n        \\"Delete\\": false\\n      }\\n    ],\\n    \\"Success\\": true,\\n    \\"Message\\": \\"CDR \'job-efbaeefc-4d45-4e79-83f7-b33b0769c969\' doesn\'t exists.\\"\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '获取标注标签列表',
    ),
    'ModifyAnnotationMission' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务ID',
            'description' => '标注任务ID',
            'type' => 'string',
            'required' => false,
            'example' => 'c88cc004-de69-4eee-aa5f-2efed533a54e',
          ),
        ),
        1 => 
        array (
          'name' => 'AnnotationMissionName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注状态',
            'description' => '标注状态',
            'type' => 'string',
            'required' => false,
            'example' => '询问卖车-标注任务-20230506-112934',
          ),
        ),
        2 => 
        array (
          'name' => 'AnnotationStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务名称',
            'description' => '标注任务名称',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        3 => 
        array (
          'name' => 'Delete',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '删除任务',
            'description' => '删除任务',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<ModifyAnnotationMissionResponse>',
            'description' => 'BaseResponse<ModifyAnnotationMissionResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '表示是否调用成功。true：调用成功。                                 false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The operation is not allowed. User state (DIALING) does not meet expectations (READY).',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'Success' => 
                  array (
                    'description' => '是否成功',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Message' => 
                  array (
                    'description' => '错误信息。',
                    'type' => 'string',
                    'example' => 'The operation is not allowed. User state (DIALING) does not meet expectations (READY).',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"The operation is not allowed. User state (DIALING) does not meet expectations (READY).\\",\\n  \\"Data\\": {\\n    \\"Success\\": true,\\n    \\"Message\\": \\"The operation is not allowed. User state (DIALING) does not meet expectations (READY).\\"\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '修改标注任务',
    ),
    'ListAnnotationMissionSession' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => false,
            'example' => '8434a4b0-41fc-41b1-aa75-bbd1f2ab0c8d',
          ),
        ),
        1 => 
        array (
          'name' => 'AnnotationMissionSessionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标注任务chat实例ID',
            'type' => 'string',
            'required' => false,
            'example' => '8434a4b0-41fc-41b1-aa75-bbd1f2ab0c8d
',
          ),
        ),
        2 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
            'default' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Environment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'IncludeStatusListJsonString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包含的状态列表',
            'type' => 'string',
            'required' => false,
            'example' => '[1]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<GetAnnotationMissionSessionListResponse>',
            'description' => 'BaseResponse<GetAnnotationMissionSessionListResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：表示调用成功。false：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                'type' => 'string',
                'example' => 'bp.java.nopowerContact',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AnnotationMissionId' => 
                  array (
                    'description' => '任务ID',
                    'type' => 'string',
                    'example' => 'b3f2c931-5180-43ca-b4aa-2baee2d73c8b',
                  ),
                  'AnnotationMissionSessionList' => 
                  array (
                    'description' => '会话列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '会话',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AnnotationMissionSessionId' => 
                        array (
                          'description' => 'ID',
                          'type' => 'string',
                          'example' => '64ba5ac9-a4e1-4333-b03c-9d4a588c9f6c
',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1691117009000',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '修改时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1677987898384',
                        ),
                        'AnnotationMissionId' => 
                        array (
                          'description' => '任务id',
                          'type' => 'string',
                          'example' => '64ba5ac9-a4e1-4333-b03c-9d4a588c9f6c',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '场景ID',
                          'type' => 'string',
                          'example' => '408d6c4d-23e2-41f6-bbdd-f919a8297aa4',
                        ),
                        'JobGroupId' => 
                        array (
                          'description' => '任务组ID',
                          'type' => 'string',
                          'example' => '2f642da1-b00b-4dd6-ac7d-dcbeefd13ff3',
                        ),
                        'JobId' => 
                        array (
                          'description' => '任务ID',
                          'type' => 'string',
                          'example' => '42da7cde-a5e8-45cc-b9d2-828711d95b30',
                        ),
                        'SessionId' => 
                        array (
                          'description' => '外呼系统为taskId，导航为conversationId',
                          'type' => 'string',
                          'example' => '40669e52-c1c8-487f-9593-29749086bdc9',
                        ),
                        'AnnotationStatus' => 
                        array (
                          'description' => '标注状态',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'AnnotationMissionChatList' => 
                        array (
                          'description' => 'chat列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'chat对象',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'AnnotationMissionChatId' => 
                              array (
                                'description' => 'chat id',
                                'type' => 'string',
                                'example' => '40669e52-c1c8-487f-9593-29749086bdc9
',
                              ),
                              'CreateTime' => 
                              array (
                                'description' => '创建时间',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1682216045619',
                              ),
                              'ModifiedTime' => 
                              array (
                                'description' => '修改时间',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1571649300000',
                              ),
                              'AnnotationMissionId' => 
                              array (
                                'description' => '任务id',
                                'type' => 'string',
                                'example' => '03f56192-fa8a-40dc-9558-39b357f0618f',
                              ),
                              'AnnotationMissionSessionId' => 
                              array (
                                'description' => '会话id',
                                'type' => 'string',
                                'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                              ),
                              'InstanceId' => 
                              array (
                                'description' => '实例id',
                                'type' => 'string',
                                'example' => '77343553-cbc2-4487-a35c-869f1e86c573',
                              ),
                              'SequenceId' => 
                              array (
                                'description' => '序列id',
                                'type' => 'string',
                                'example' => '380578077',
                              ),
                              'OccurTime' => 
                              array (
                                'description' => '触发时间',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1682390676403',
                              ),
                              'Answer' => 
                              array (
                                'description' => '机器人答复内容',
                                'type' => 'string',
                                'example' => '{\'Answer\': u\'\\u53c2\\u8003\\u6587\\u6863\\uff1ahttps://help.aliyun.com/document_detail/215402.html\', \'QuestionId\': 371159, \'Uuid\': \'ac14000116781568127896224d0044\'}',
                              ),
                              'AnnotationStatus' => 
                              array (
                                'description' => 'chat标注状态',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'IntentAnnotationStatus' => 
                              array (
                                'title' => '语义标注状态',
                                'description' => '语义标注状态',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'AsrAnnotationStatus' => 
                              array (
                                'title' => 'ASR标注状态',
                                'description' => 'ASR标注状态',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'TagAnnotationStatus' => 
                              array (
                                'title' => '标签标注状态',
                                'description' => '标签标注状态',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'SubStatus' => 
                              array (
                                'title' => '标注动作：1正确、20匹配错误未优化 21匹配错误已优化、3未覆盖、4无效',
                                'description' => '标注动作：1正确、20匹配错误未优化 21匹配错误已优化、3未覆盖、4无效',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'TranslationError' => 
                              array (
                                'description' => '转译错误标识',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'AnnotationAsrResult' => 
                              array (
                                'description' => 'ASR人工标注文本结果，用于字准率的计算',
                                'type' => 'string',
                                'example' => '[]',
                              ),
                              'OriginalAsrResult' => 
                              array (
                                'description' => 'ASR识别结果',
                                'type' => 'string',
                                'example' => '[]',
                              ),
                              'AnnotationMissionChatIntentUserSayInfoList' => 
                              array (
                                'description' => 'chat意图列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => 'chat意图',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'AnnotationMissionChatIntentUserSayInfoId' => 
                                    array (
                                      'description' => 'id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'CreateTime' => 
                                    array (
                                      'description' => '创建时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1682216045619',
                                    ),
                                    'ModifiedTime' => 
                                    array (
                                      'description' => '修改时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1682216045619',
                                    ),
                                    'InstanceId' => 
                                    array (
                                      'description' => '实例id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'AnnotationMissionId' => 
                                    array (
                                      'description' => '标注任务id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'AnnotationMissionSessionId' => 
                                    array (
                                      'description' => '会话id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'AnnotationMissionChatId' => 
                                    array (
                                      'description' => 'chat id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'Content' => 
                                    array (
                                      'description' => '修改后问法',
                                      'type' => 'string',
                                      'example' => '[]',
                                    ),
                                    'IntentId' => 
                                    array (
                                      'description' => '意图id',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'DialogId' => 
                                    array (
                                      'description' => '对话ID',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'BotId' => 
                                    array (
                                      'description' => '机器人ID',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'Delete' => 
                                    array (
                                      'description' => '已删除',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                    'Create' => 
                                    array (
                                      'description' => '已创建',
                                      'type' => 'boolean',
                                      'example' => 'false',
                                    ),
                                  ),
                                ),
                              ),
                              'AnnotationMissionChatVocabularyInfoList' => 
                              array (
                                'description' => '标注任务chat热词标注信息表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '标注任务chat热词标注信息',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'AnnotationMissionChatVocabularyInfoId' => 
                                    array (
                                      'description' => 'id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'CreateTime' => 
                                    array (
                                      'description' => '创建时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1675218421941',
                                    ),
                                    'ModifiedTime' => 
                                    array (
                                      'description' => '修改时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1676272557653',
                                    ),
                                    'InstanceId' => 
                                    array (
                                      'description' => '实例id',
                                      'type' => 'string',
                                      'example' => '818961ce-d9ba-4f88-89ca-2a04b24bdf01',
                                    ),
                                    'AnnotationMissionId' => 
                                    array (
                                      'description' => '任务id',
                                      'type' => 'string',
                                      'example' => 'b3f2c931-5180-43ca-b4aa-2baee2d73c8b',
                                    ),
                                    'AnnotationMissionSessionId' => 
                                    array (
                                      'description' => '会话id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'AnnotationMissionChatId' => 
                                    array (
                                      'description' => 'chat id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'VocabularyId' => 
                                    array (
                                      'description' => '热词id',
                                      'type' => 'string',
                                      'example' => '77343553-cbc2-4487-a35c-869f1e86c573
',
                                    ),
                                    'Vocabulary' => 
                                    array (
                                      'description' => '热词标注内容',
                                      'type' => 'string',
                                      'example' => '[]',
                                    ),
                                    'VocabularyName' => 
                                    array (
                                      'description' => 'vocabulary名称',
                                      'type' => 'string',
                                      'example' => '名称',
                                    ),
                                    'VocabularyDescription' => 
                                    array (
                                      'description' => '描述',
                                      'type' => 'string',
                                      'example' => '描述',
                                    ),
                                    'VocabularyWeight' => 
                                    array (
                                      'description' => '热词权重[-6,5]',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '0',
                                    ),
                                    'Delete' => 
                                    array (
                                      'description' => '已删除',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                    'Create' => 
                                    array (
                                      'description' => '已创建',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                  ),
                                ),
                              ),
                              'AnnotationMissionChatCustomizationDataInfoList' => 
                              array (
                                'description' => '标注任务chat语言模型标注信息表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '标注任务chat语言模型标注信息',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'AnnotationMissionChatCustomizationDataInfoId' => 
                                    array (
                                      'description' => 'id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'CreateTime' => 
                                    array (
                                      'description' => '创建时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1682216045619',
                                    ),
                                    'ModifiedTime' => 
                                    array (
                                      'description' => '修改时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1679552585384',
                                    ),
                                    'InstanceId' => 
                                    array (
                                      'description' => '实例id',
                                      'type' => 'string',
                                      'example' => 'd3fbfca8-4208-4d4b-a53a-c4dba5e43a66',
                                    ),
                                    'AnnotationMissionId' => 
                                    array (
                                      'description' => '任务id',
                                      'type' => 'string',
                                      'example' => '2f03b24a-fda2-4501-90ba-0a9a59f8dd9d',
                                    ),
                                    'AnnotationMissionSessionId' => 
                                    array (
                                      'description' => '会话id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'AnnotationMissionChatId' => 
                                    array (
                                      'description' => 'chat id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'CustomizationDataId' => 
                                    array (
                                      'description' => 'id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'Content' => 
                                    array (
                                      'description' => '语音标注文本',
                                      'type' => 'string',
                                      'example' => '抱歉哈，可能给您造成困扰了，这边先不打扰您，祝您生活愉快，再见',
                                    ),
                                    'CustomizationDataName' => 
                                    array (
                                      'description' => '名称',
                                      'type' => 'string',
                                      'example' => '默认数据',
                                    ),
                                    'CustomizationDataDescription' => 
                                    array (
                                      'description' => '描述',
                                      'type' => 'string',
                                      'example' => '默认数据',
                                    ),
                                    'CustomizationDataWeight' => 
                                    array (
                                      'description' => '语言模型数据权重',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '1',
                                    ),
                                    'Delete' => 
                                    array (
                                      'description' => '是否已删除。',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                    'Create' => 
                                    array (
                                      'description' => '是否创建',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                  ),
                                ),
                              ),
                              'AnnotationMissionChatTagInfoList' => 
                              array (
                                'description' => '标注信息chat绑定标签映射关系列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '标注信息chat绑定标签映射关系',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'AnnotationMissionChatTagInfoId' => 
                                    array (
                                      'description' => 'id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'CreateTime' => 
                                    array (
                                      'description' => '创建时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1686797050000',
                                    ),
                                    'ModifiedTime' => 
                                    array (
                                      'description' => '修改时间',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '1679019660000',
                                    ),
                                    'InstanceId' => 
                                    array (
                                      'description' => '实例id',
                                      'type' => 'string',
                                      'example' => '32be9d94-1346-4c4a-a4d0-ccd379f87013',
                                    ),
                                    'AnnotationMissionId' => 
                                    array (
                                      'description' => '任务id',
                                      'type' => 'string',
                                      'example' => 'e7272cbb-a60d-4b41-b5c4-8863edc0b8f7',
                                    ),
                                    'AnnotationMissionSessionId' => 
                                    array (
                                      'description' => '会话id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'AnnotationMissionChatId' => 
                                    array (
                                      'description' => 'chat id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'AnnotationMissionTagInfoId' => 
                                    array (
                                      'description' => 'tag id',
                                      'type' => 'string',
                                      'example' => '03f56192-fa8a-40dc-9558-39b357f0618f
',
                                    ),
                                    'AnnotationMissionTagInfoName' => 
                                    array (
                                      'description' => 'tag名称',
                                      'type' => 'string',
                                      'example' => '标签',
                                    ),
                                    'Delete' => 
                                    array (
                                      'description' => '删除',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                    'Create' => 
                                    array (
                                      'description' => '创建',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Version' => 
                        array (
                          'description' => '版本号',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'DebugConversation' => 
                        array (
                          'description' => '调试对话',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                  'Success' => 
                  array (
                    'description' => '是否调用成功。true：表示调用成功。false：表示调用失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Message' => 
                  array (
                    'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                    'type' => 'string',
                    'example' => 'bp.java.nopowerContact',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '30',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"bp.java.nopowerContact\\",\\n  \\"Data\\": {\\n    \\"AnnotationMissionId\\": \\"b3f2c931-5180-43ca-b4aa-2baee2d73c8b\\",\\n    \\"AnnotationMissionSessionList\\": [\\n      {\\n        \\"AnnotationMissionSessionId\\": \\"64ba5ac9-a4e1-4333-b03c-9d4a588c9f6c\\\\n\\",\\n        \\"CreateTime\\": 1691117009000,\\n        \\"ModifiedTime\\": 1677987898384,\\n        \\"AnnotationMissionId\\": \\"64ba5ac9-a4e1-4333-b03c-9d4a588c9f6c\\",\\n        \\"InstanceId\\": \\"a4274627-265f-4e14-b2d6-4ee7d4f8593e\\",\\n        \\"ScriptId\\": \\"408d6c4d-23e2-41f6-bbdd-f919a8297aa4\\",\\n        \\"JobGroupId\\": \\"2f642da1-b00b-4dd6-ac7d-dcbeefd13ff3\\",\\n        \\"JobId\\": \\"42da7cde-a5e8-45cc-b9d2-828711d95b30\\",\\n        \\"SessionId\\": \\"40669e52-c1c8-487f-9593-29749086bdc9\\",\\n        \\"AnnotationStatus\\": 1,\\n        \\"AnnotationMissionChatList\\": [\\n          {\\n            \\"AnnotationMissionChatId\\": \\"40669e52-c1c8-487f-9593-29749086bdc9\\\\n\\",\\n            \\"CreateTime\\": 1682216045619,\\n            \\"ModifiedTime\\": 1571649300000,\\n            \\"AnnotationMissionId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\",\\n            \\"AnnotationMissionSessionId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n            \\"InstanceId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\",\\n            \\"SequenceId\\": \\"380578077\\",\\n            \\"OccurTime\\": 1682390676403,\\n            \\"Answer\\": \\"{\'Answer\': u\'\\\\\\\\u53c2\\\\\\\\u8003\\\\\\\\u6587\\\\\\\\u6863\\\\\\\\uff1ahttps://help.aliyun.com/document_detail/215402.html\', \'QuestionId\': 371159, \'Uuid\': \'ac14000116781568127896224d0044\'}\\",\\n            \\"AnnotationStatus\\": 1,\\n            \\"IntentAnnotationStatus\\": 1,\\n            \\"AsrAnnotationStatus\\": 1,\\n            \\"TagAnnotationStatus\\": 1,\\n            \\"SubStatus\\": 1,\\n            \\"TranslationError\\": 1,\\n            \\"AnnotationAsrResult\\": \\"[]\\",\\n            \\"OriginalAsrResult\\": \\"[]\\",\\n            \\"AnnotationMissionChatIntentUserSayInfoList\\": [\\n              {\\n                \\"AnnotationMissionChatIntentUserSayInfoId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"CreateTime\\": 1682216045619,\\n                \\"ModifiedTime\\": 1682216045619,\\n                \\"InstanceId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"AnnotationMissionId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"AnnotationMissionSessionId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"AnnotationMissionChatId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"Content\\": \\"[]\\",\\n                \\"IntentId\\": 0,\\n                \\"DialogId\\": 0,\\n                \\"BotId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"Delete\\": true,\\n                \\"Create\\": false\\n              }\\n            ],\\n            \\"AnnotationMissionChatVocabularyInfoList\\": [\\n              {\\n                \\"AnnotationMissionChatVocabularyInfoId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"CreateTime\\": 1675218421941,\\n                \\"ModifiedTime\\": 1676272557653,\\n                \\"InstanceId\\": \\"818961ce-d9ba-4f88-89ca-2a04b24bdf01\\",\\n                \\"AnnotationMissionId\\": \\"b3f2c931-5180-43ca-b4aa-2baee2d73c8b\\",\\n                \\"AnnotationMissionSessionId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"AnnotationMissionChatId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"VocabularyId\\": \\"77343553-cbc2-4487-a35c-869f1e86c573\\\\n\\",\\n                \\"Vocabulary\\": \\"[]\\",\\n                \\"VocabularyName\\": \\"名称\\",\\n                \\"VocabularyDescription\\": \\"描述\\",\\n                \\"VocabularyWeight\\": 0,\\n                \\"Delete\\": true,\\n                \\"Create\\": true\\n              }\\n            ],\\n            \\"AnnotationMissionChatCustomizationDataInfoList\\": [\\n              {\\n                \\"AnnotationMissionChatCustomizationDataInfoId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"CreateTime\\": 1682216045619,\\n                \\"ModifiedTime\\": 1679552585384,\\n                \\"InstanceId\\": \\"d3fbfca8-4208-4d4b-a53a-c4dba5e43a66\\",\\n                \\"AnnotationMissionId\\": \\"2f03b24a-fda2-4501-90ba-0a9a59f8dd9d\\",\\n                \\"AnnotationMissionSessionId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"AnnotationMissionChatId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"CustomizationDataId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"Content\\": \\"抱歉哈，可能给您造成困扰了，这边先不打扰您，祝您生活愉快，再见\\",\\n                \\"CustomizationDataName\\": \\"默认数据\\",\\n                \\"CustomizationDataDescription\\": \\"默认数据\\",\\n                \\"CustomizationDataWeight\\": 1,\\n                \\"Delete\\": true,\\n                \\"Create\\": true\\n              }\\n            ],\\n            \\"AnnotationMissionChatTagInfoList\\": [\\n              {\\n                \\"AnnotationMissionChatTagInfoId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"CreateTime\\": 1686797050000,\\n                \\"ModifiedTime\\": 1679019660000,\\n                \\"InstanceId\\": \\"32be9d94-1346-4c4a-a4d0-ccd379f87013\\",\\n                \\"AnnotationMissionId\\": \\"e7272cbb-a60d-4b41-b5c4-8863edc0b8f7\\",\\n                \\"AnnotationMissionSessionId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"AnnotationMissionChatId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"AnnotationMissionTagInfoId\\": \\"03f56192-fa8a-40dc-9558-39b357f0618f\\\\n\\",\\n                \\"AnnotationMissionTagInfoName\\": \\"标签\\",\\n                \\"Delete\\": true,\\n                \\"Create\\": true\\n              }\\n            ]\\n          }\\n        ],\\n        \\"Version\\": 1,\\n        \\"DebugConversation\\": true\\n      }\\n    ],\\n    \\"Success\\": true,\\n    \\"Message\\": \\"bp.java.nopowerContact\\",\\n    \\"TotalCount\\": 30\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '获取标注任务chat实例列表',
    ),
    'ListAnnotationMission' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务ID',
            'description' => '标注任务ID',
            'type' => 'string',
            'required' => false,
            'example' => '0943abcb-bd7d-4ace-8cf7-97d39d4dd0b9',
          ),
        ),
        1 => 
        array (
          'name' => 'AnnotationMissionName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务名称',
            'description' => '标注任务名称',
            'type' => 'string',
            'required' => false,
            'example' => '全景服务场景-标注任务-20230316-103253',
          ),
        ),
        2 => 
        array (
          'name' => 'AnnotationStatusListFilter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '标注状态过滤条件',
            'description' => '标注状态过滤条件',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤条件',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '[1]',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        3 => 
        array (
          'name' => 'AnnotationStatusListStringFilter',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注状态过滤条件',
            'description' => '标注状态过滤条件',
            'type' => 'string',
            'required' => false,
            'example' => '[1]',
          ),
        ),
        4 => 
        array (
          'name' => 'CreateTimeStartFilter',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务创建过滤开始时间',
            'description' => '标注任务创建过滤开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1661961600000',
          ),
        ),
        5 => 
        array (
          'name' => 'CreateTimeEndFilter',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务创建过滤截止时间',
            'description' => '标注任务创建过滤截止时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1673280000000',
          ),
        ),
        6 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的条数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => false,
            'example' => '191ef468-75a2-4004-9441-a5c31bf5cd9d',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<GetAnnotationMissionListResponse>',
            'description' => 'BaseResponse<GetAnnotationMissionListResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：表示调用成功。false：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                'type' => 'string',
                'example' => 'CDR \'job-c7b8a817-b8e8-40f3-b7ad-f28dcea218ff\' doesn\'t exists.',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AnnotationMissionList' => 
                  array (
                    'description' => '标注任务列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标注任务',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AnnotationMissionDataSourceType' => 
                        array (
                          'description' => '标注数据来源，1:外呼、2：导航',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => '32be9d94-1346-4c4a-a4d0-ccd379f87013',
                        ),
                        'AnnotationMissionId' => 
                        array (
                          'description' => '任务id',
                          'type' => 'string',
                          'example' => 'ddce607f-f537-4ebd-9914-cf45671defb9',
                        ),
                        'AnnotationMissionName' => 
                        array (
                          'description' => '任务名称',
                          'type' => 'string',
                          'example' => '体验场景--移车-标注任务-20230220-141347',
                        ),
                        'AnnotationStatus' => 
                        array (
                          'description' => '标注状态',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1676170339515',
                        ),
                        'SessionTotalCount' => 
                        array (
                          'description' => '标注任务总数',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SessionFinishCount' => 
                        array (
                          'description' => '标注任务完成数',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'FinishTime' => 
                        array (
                          'description' => '标注任务完成时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1683443903785',
                        ),
                        'ExcludeOtherMissionSession' => 
                        array (
                          'description' => '排除session',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'SessionEndReasonFilterList' => 
                        array (
                          'description' => '创建任务使用的通话结束类型列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '创建任务使用的通话结束类型',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '[1]',
                          ),
                        ),
                        'ConversationTimeStartFilter' => 
                        array (
                          'description' => '标注任务通话时间查询条件开始时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1683216000000',
                        ),
                        'ConversationTimeEndFilter' => 
                        array (
                          'description' => '标注任务通话时间查询条件结束时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1684511999000',
                        ),
                        'SamplingType' => 
                        array (
                          'description' => '抽样类型',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SamplingRate' => 
                        array (
                          'description' => '抽样比例',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SamplingCount' => 
                        array (
                          'description' => '抽样数量最大值限制',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SamplingDescription' => 
                        array (
                          'description' => '抽样描述',
                          'type' => 'string',
                          'example' => '标注',
                        ),
                        'AnnotationMissionDebugDataSourceList' => 
                        array (
                          'description' => '标注调试数据源列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '标注调试数据源',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '[1]',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'PageIndex' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的条数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '30',
                  ),
                  'TotalPageCount' => 
                  array (
                    'description' => '总页数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '4',
                  ),
                  'Success' => 
                  array (
                    'description' => '是否调用成功。true：表示调用成功。false：表示调用失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Message' => 
                  array (
                    'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                    'type' => 'string',
                    'example' => 'CDR \'job-c7b8a817-b8e8-40f3-b7ad-f28dcea218ff\' doesn\'t exists.',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"CDR \'job-c7b8a817-b8e8-40f3-b7ad-f28dcea218ff\' doesn\'t exists.\\",\\n  \\"Data\\": {\\n    \\"AnnotationMissionList\\": [\\n      {\\n        \\"AnnotationMissionDataSourceType\\": 1,\\n        \\"InstanceId\\": \\"32be9d94-1346-4c4a-a4d0-ccd379f87013\\",\\n        \\"AnnotationMissionId\\": \\"ddce607f-f537-4ebd-9914-cf45671defb9\\",\\n        \\"AnnotationMissionName\\": \\"体验场景--移车-标注任务-20230220-141347\\",\\n        \\"AnnotationStatus\\": 1,\\n        \\"CreateTime\\": 1676170339515,\\n        \\"SessionTotalCount\\": 1,\\n        \\"SessionFinishCount\\": 1,\\n        \\"FinishTime\\": 1683443903785,\\n        \\"ExcludeOtherMissionSession\\": false,\\n        \\"SessionEndReasonFilterList\\": [\\n          0\\n        ],\\n        \\"ConversationTimeStartFilter\\": 1683216000000,\\n        \\"ConversationTimeEndFilter\\": 1684511999000,\\n        \\"SamplingType\\": 1,\\n        \\"SamplingRate\\": 1,\\n        \\"SamplingCount\\": 1,\\n        \\"SamplingDescription\\": \\"标注\\",\\n        \\"AnnotationMissionDebugDataSourceList\\": [\\n          0\\n        ]\\n      }\\n    ],\\n    \\"PageIndex\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 30,\\n    \\"TotalPageCount\\": 4,\\n    \\"Success\\": true,\\n    \\"Message\\": \\"CDR \'job-c7b8a817-b8e8-40f3-b7ad-f28dcea218ff\' doesn\'t exists.\\"\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '获取标注任务列表',
    ),
    'GetAnnotationMissionSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AnnotationMissionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标注任务ID',
            'description' => '标注任务ID',
            'type' => 'string',
            'required' => false,
            'example' => '50e53ac8-24a4-46d5-b174-ee88867f4780',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<GetAnnotationMissionSummaryResponse>',
            'description' => 'BaseResponse<GetAnnotationMissionSummaryResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。true：调用成功。                                 false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this action. CDR:View privileges are required.',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AnnotationMissionId' => 
                  array (
                    'title' => '标注任务ID',
                    'description' => '标注任务ID',
                    'type' => 'string',
                    'example' => 'b3f2c931-5180-43ca-b4aa-2baee2d73c8b',
                  ),
                  'IntentSummaryInfo' => 
                  array (
                    'title' => '语义标注统计信息',
                    'description' => '语义标注统计信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'IntentUserSayCount' => 
                      array (
                        'description' => '对话次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'AnnotationCorrectCount' => 
                      array (
                        'description' => '正确chat数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MatchErrorCount' => 
                      array (
                        'description' => '识别错误数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'AnnotationInvalid' => 
                      array (
                        'description' => '无效数据',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'NoAnnotation' => 
                      array (
                        'description' => '未标注',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'ChatTotalCount' => 
                      array (
                        'description' => 'chat总数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'TranslationUnrecognizedCount' => 
                      array (
                        'description' => '转译未识别次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'IntentionNotCoveredCount' => 
                      array (
                        'description' => '未覆盖意图',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'AsrSummaryInfo' => 
                  array (
                    'title' => '语音标注统计信息',
                    'description' => '语音标注统计信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'WordErrorRate' => 
                      array (
                        'description' => '词错率，单位0.01%，一般用于英文',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'CharacterErrorRate' => 
                      array (
                        'description' => '字错率，单位0.01%',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'SentenceErrorRate' => 
                      array (
                        'description' => '句子错率，单位0.01%',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'AnnotationInvalid' => 
                      array (
                        'description' => '无效数据',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'NoAnnotation' => 
                      array (
                        'description' => '未标注',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'ChatTotalCount' => 
                      array (
                        'description' => 'chat总数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'AddVocabularyDataCount' => 
                      array (
                        'description' => '添加热词次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'AddCustomizationDataCount' => 
                      array (
                        'description' => '添加语言模型数据次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'CharacterCorrectRate' => 
                      array (
                        'description' => '字准率，单位0.01%',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'TagSummaryInfo' => 
                  array (
                    'title' => '自定义标签及数量',
                    'description' => '自定义标签及数量',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TagSummaryInfoDetailList' => 
                      array (
                        'description' => '标签列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '标签列表',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Name' => 
                            array (
                              'description' => '标签名字',
                              'type' => 'string',
                              'example' => '知晓率1_复制',
                            ),
                            'Count' => 
                            array (
                              'description' => '标签数量',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Success' => 
                  array (
                    'description' => '是否调用成功。true：调用成功。                                 false：调用失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Message' => 
                  array (
                    'description' => '附加信息。取值说明如下：请求正常，返回success。请求异常，返回具体异常错误码。',
                    'type' => 'string',
                    'example' => 'You are not authorized to perform this action. CDR:View privileges are required.',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"You are not authorized to perform this action. CDR:View privileges are required.\\",\\n  \\"Data\\": {\\n    \\"AnnotationMissionId\\": \\"b3f2c931-5180-43ca-b4aa-2baee2d73c8b\\",\\n    \\"IntentSummaryInfo\\": {\\n      \\"IntentUserSayCount\\": 1,\\n      \\"AnnotationCorrectCount\\": 1,\\n      \\"MatchErrorCount\\": 1,\\n      \\"AnnotationInvalid\\": 1,\\n      \\"NoAnnotation\\": 1,\\n      \\"ChatTotalCount\\": 1,\\n      \\"TranslationUnrecognizedCount\\": 1,\\n      \\"IntentionNotCoveredCount\\": 1\\n    },\\n    \\"AsrSummaryInfo\\": {\\n      \\"WordErrorRate\\": 1,\\n      \\"CharacterErrorRate\\": 1,\\n      \\"SentenceErrorRate\\": 1,\\n      \\"AnnotationInvalid\\": 1,\\n      \\"NoAnnotation\\": 1,\\n      \\"ChatTotalCount\\": 1,\\n      \\"AddVocabularyDataCount\\": 1,\\n      \\"AddCustomizationDataCount\\": 1,\\n      \\"CharacterCorrectRate\\": 1\\n    },\\n    \\"TagSummaryInfo\\": {\\n      \\"TagSummaryInfoDetailList\\": [\\n        {\\n          \\"Name\\": \\"知晓率1_复制\\",\\n          \\"Count\\": 3\\n        }\\n      ]\\n    },\\n    \\"Success\\": true,\\n    \\"Message\\": \\"You are not authorized to perform this action. CDR:View privileges are required.\\"\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '获取标注任务',
    ),
    'CreateDialogueFlow' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'DialogueName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对话流程名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '主流程',
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd0bf93dd-1a54-4f00-819e-c75502d38681',
          ),
        ),
        3 => 
        array (
          'name' => 'DialogueFlowType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流程类型，子流程类型 SubFlow， 主流程类型 MainFlow',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MainFlow',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'DialogueFlowId' => 
              array (
                'description' => '对话流id',
                'type' => 'string',
                'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDialogueFlowName.Duplicated',
            'errorMessage' => 'The specified DialogueFlowName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"DialogueFlowId\\": \\"390515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateDialogueFlowResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <DialogueFlowId>390515b5-6115-4ccf-83e2-52d5bfaf2ddf</DialogueFlowId>\\n    <Success>true</Success>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n</CreateDialogueFlowResponse>","errorExample":""}]',
      'title' => '创建对话流程',
      'summary' => '创建对话流程。',
    ),
    'CreateOutboundCallNumber' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'Number',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外呼号码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '95187',
          ),
        ),
        2 => 
        array (
          'name' => 'RateLimitPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限流时间范围，单位为秒',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '120',
          ),
        ),
        3 => 
        array (
          'name' => 'RateLimitCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限流时间范围时间内可以呼出的次数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'OutboundCallNumberId' => 
              array (
                'description' => '号码id',
                'type' => 'string',
                'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"OutboundCallNumberId\\": \\"390515b5-6115-4ccf-83e2-52d5bfaf2ddf\\"\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<OutboundCallNumberId>fa0e21e9-caab-4629-9121-1e341243d599</OutboundCallNumberId>\\n<RequestId>f7cdfae4-899b-4000-8d94-518f79cd5492</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '创建外呼号码',
      'summary' => '创建外呼号码。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteOutboundCallNumber' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '33014787-cc13-49d3-ab2f-a98aa8f15fbb',
          ),
        ),
        1 => 
        array (
          'name' => 'OutboundCallNumberId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被删除的号码id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ffa367e0-58f3-43b6-9615-c63db99c5add',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除外呼号码',
      'summary' => '删除外呼号码。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDialogueFlow' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对话流程所在的话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd7c28efb-47f7-4a85-a522-5038e30a0b98',
          ),
        ),
        2 => 
        array (
          'name' => 'DialogueFlowId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对话流程的uuid',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '40a1457a-d2f3-43cf-ac81-c9e14cf07d88',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除对话流程',
      'summary' => '删除对话流程。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyOutboundCallNumber' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '52e80b02-0126-4556-a1e6-ef5b3747ed53/a9a3ddc7-d7d7-48cd-82b5-b31bb5510e71_2a66f8ad-dfbb-4980-9b84-439171295a11.xlsx',
          ),
        ),
        1 => 
        array (
          'name' => 'Number',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改的号码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10088',
          ),
        ),
        2 => 
        array (
          'name' => 'RateLimitPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限流时间范围，单位为秒',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        3 => 
        array (
          'name' => 'RateLimitCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限流时间范围时间内可以呼出的次数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'OutboundCallNumberId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '号码id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fa0e21e9-caab-4629-9121-1e341243d599',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OutboundCallNumber' => 
              array (
                'description' => '号码信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Number' => 
                  array (
                    'description' => '号码',
                    'type' => 'string',
                    'example' => '10088',
                  ),
                  'OutboundCallNumberId' => 
                  array (
                    'description' => '号码id',
                    'type' => 'string',
                    'example' => 'fa0e21e9-caab-4629-9121-1e341243d599',
                  ),
                  'RateLimitCount' => 
                  array (
                    'description' => '限流周期',
                    'type' => 'string',
                    'example' => '10',
                  ),
                  'RateLimitPeriod' => 
                  array (
                    'description' => '限流次数',
                    'type' => 'string',
                    'example' => '100',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"OutboundCallNumber\\": {\\n    \\"Number\\": \\"10088\\",\\n    \\"RateLimitCount\\": \\"10\\",\\n    \\"OutboundCallNumberId\\": \\"fa0e21e9-caab-4629-9121-1e341243d599\\",\\n    \\"RateLimitPeriod\\": \\"100\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<OutboundCallNumber>\\n    <OutboundCallNumberId>fa0e21e9-caab-4629-9121-1e341243d599</OutboundCallNumberId>\\n    <Number>10088</Number>\\n    <RateLimitCount>10</RateLimitCount>\\n    <RateLimitPeriod>100</RateLimitPeriod>\\n</OutboundCallNumber>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '修改外呼号码',
      'summary' => '修改外呼号码。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyDialogueFlow' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'da37319b-6c83-4268-9f19-814aed62e401',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b0f35dd1-0337-402e-9c4f-3a6c2426950a',
          ),
        ),
        2 => 
        array (
          'name' => 'DialogueFlowId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对话流id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
          ),
        ),
        3 => 
        array (
          'name' => 'DialogueFlowDefinition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对话流程数据',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"transitions":[{"id":"a91c4023","index":1,"source":"cc31e02b","sourceAnchor":0,"target":"946045be","targetAnchor":0}],"nodes":[{"collectedNumberEnabled":false,"content":{"branches":[{"branchId":"f5450420-09ab-11ea-b107-e9059c6a79d8","branchName":"发起对话"}]},"coordinates":{"x":180,"y":134},"id":"cc31e02b","index":0,"interruptible":false,"nodeIndex":0,"shape":"start-html","size":"170*34","type":"start","x":180,"y":134},{"collectedNumberEnabled":false,"content":{"actionParams":"","action":"Hangup"},"coordinates":{"x":487.65625,"y":155},"id":"946045be","index":2,"interruptible":false,"labels":[],"name":"功能节点","nodeIndex":1,"questions":["好的同学，您的情况已了解了，稍后我们会安排资深顾问老师给您做更详细的留学评估以及升学指导，请留意电话接听"],"script":"好的同学，您的情况已了解了，稍后我们会安排资深顾问老师给您做更详细的留学评估以及升学指导，请留意电话接听","shape":"function-html","size":"170*34","type":"transfer","x":500,"y":182}]}',
          ),
        ),
        4 => 
        array (
          'name' => 'IsDrafted',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否草稿态',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'DialogueFlowDefinition' => 
              array (
                'description' => '对话流程数据',
                'type' => 'string',
                'example' => '{"transitions":[{"id":"a91c4023","index":1,"source":"cc31e02b","sourceAnchor":0,"target":"946045be","targetAnchor":0}],"nodes":[{"collectedNumberEnabled":false,"content":{"branches":[{"branchId":"f5450420-09ab-11ea-b107-e9059c6a79d8","branchName":"发起对话"}]},"coordinates":{"x":180,"y":134},"id":"cc31e02b","index":0,"interruptible":false,"nodeIndex":0,"shape":"start-html","size":"170*34","type":"start","x":180,"y":134},{"collectedNumberEnabled":false,"content":{"actionParams":"","action":"Hangup"},"coordinates":{"x":487.65625,"y":155},"id":"946045be","index":2,"interruptible":false,"labels":[],"name":"功能节点","nodeIndex":1,"questions":["好的同学，您的情况已了解了，稍后我们会安排资深顾问老师给您做更详细的留学评估以及升学指导，请留意电话接听"],"script":"好的同学，您的情况已了解了，稍后我们会安排资深顾问老师给您做更详细的留学评估以及升学指导，请留意电话接听","shape":"function-html","size":"170*34","type":"transfer","x":500,"y":182}]}',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DialogueFlowId' => 
              array (
                'description' => '对话流id',
                'type' => 'string',
                'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Succcess',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDialogueFlowName.Duplicated',
            'errorMessage' => 'The specified DialogueFlowName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"DialogueFlowDefinition\\": \\"{\\\\\\"transitions\\\\\\":[{\\\\\\"id\\\\\\":\\\\\\"a91c4023\\\\\\",\\\\\\"index\\\\\\":1,\\\\\\"source\\\\\\":\\\\\\"cc31e02b\\\\\\",\\\\\\"sourceAnchor\\\\\\":0,\\\\\\"target\\\\\\":\\\\\\"946045be\\\\\\",\\\\\\"targetAnchor\\\\\\":0}],\\\\\\"nodes\\\\\\":[{\\\\\\"collectedNumberEnabled\\\\\\":false,\\\\\\"content\\\\\\":{\\\\\\"branches\\\\\\":[{\\\\\\"branchId\\\\\\":\\\\\\"f5450420-09ab-11ea-b107-e9059c6a79d8\\\\\\",\\\\\\"branchName\\\\\\":\\\\\\"发起对话\\\\\\"}]},\\\\\\"coordinates\\\\\\":{\\\\\\"x\\\\\\":180,\\\\\\"y\\\\\\":134},\\\\\\"id\\\\\\":\\\\\\"cc31e02b\\\\\\",\\\\\\"index\\\\\\":0,\\\\\\"interruptible\\\\\\":false,\\\\\\"nodeIndex\\\\\\":0,\\\\\\"shape\\\\\\":\\\\\\"start-html\\\\\\",\\\\\\"size\\\\\\":\\\\\\"170*34\\\\\\",\\\\\\"type\\\\\\":\\\\\\"start\\\\\\",\\\\\\"x\\\\\\":180,\\\\\\"y\\\\\\":134},{\\\\\\"collectedNumberEnabled\\\\\\":false,\\\\\\"content\\\\\\":{\\\\\\"actionParams\\\\\\":\\\\\\"\\\\\\",\\\\\\"action\\\\\\":\\\\\\"Hangup\\\\\\"},\\\\\\"coordinates\\\\\\":{\\\\\\"x\\\\\\":487.65625,\\\\\\"y\\\\\\":155},\\\\\\"id\\\\\\":\\\\\\"946045be\\\\\\",\\\\\\"index\\\\\\":2,\\\\\\"interruptible\\\\\\":false,\\\\\\"labels\\\\\\":[],\\\\\\"name\\\\\\":\\\\\\"功能节点\\\\\\",\\\\\\"nodeIndex\\\\\\":1,\\\\\\"questions\\\\\\":[\\\\\\"好的同学，您的情况已了解了，稍后我们会安排资深顾问老师给您做更详细的留学评估以及升学指导，请留意电话接听\\\\\\"],\\\\\\"script\\\\\\":\\\\\\"好的同学，您的情况已了解了，稍后我们会安排资深顾问老师给您做更详细的留学评估以及升学指导，请留意电话接听\\\\\\",\\\\\\"shape\\\\\\":\\\\\\"function-html\\\\\\",\\\\\\"size\\\\\\":\\\\\\"170*34\\\\\\",\\\\\\"type\\\\\\":\\\\\\"transfer\\\\\\",\\\\\\"x\\\\\\":500,\\\\\\"y\\\\\\":182}]}\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"DialogueFlowId\\": \\"390515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Succcess\\"\\n}","type":"json"}]',
      'title' => '修改对话流程',
      'summary' => '修改对话流程。',
    ),
    'ListOutboundCallNumbers' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OutboundCallNumbers' => 
              array (
                'description' => '号码列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'List' => 
                  array (
                    'description' => '号码数据列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Number' => 
                        array (
                          'description' => '号码',
                          'type' => 'string',
                          'example' => '10088',
                        ),
                        'OutboundCallNumberId' => 
                        array (
                          'description' => '号码id',
                          'type' => 'string',
                          'example' => '	fa0e21e9-caab-4629-9121-1e341243d599',
                        ),
                        'RateLimitCount' => 
                        array (
                          'description' => '限流时间范围，单位为秒',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'RateLimitPeriod' => 
                        array (
                          'description' => '	
限流次数',
                          'type' => 'string',
                          'example' => '100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"OutboundCallNumbers\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 10,\\n    \\"List\\": [\\n      {\\n        \\"Number\\": \\"10088\\",\\n        \\"OutboundCallNumberId\\": \\"\\\\tfa0e21e9-caab-4629-9121-1e341243d599\\",\\n        \\"RateLimitCount\\": \\"10\\",\\n        \\"RateLimitPeriod\\": \\"100\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询外呼主叫号码列表',
      'summary' => '查询外呼主叫号码列表。',
    ),
    'ListScriptPublishHistories' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脚本id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b0f35dd1-0337-402e-9c4f-3a6c2426950a',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示多少条',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ScriptPublishHistories' => 
              array (
                'description' => '历史列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'List' => 
                  array (
                    'description' => '数据数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PublishTime' => 
                        array (
                          'description' => '发布时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1578965079000',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术id',
                          'type' => 'string',
                          'example' => '29420f65-8f1f-4009-b2f8-f4f7b5d59090',
                        ),
                        'Description' => 
                        array (
                          'description' => '发布描述',
                          'type' => 'string',
                          'example' => '第一次发布',
                        ),
                        'ScriptVersion' => 
                        array (
                          'description' => '话术版本',
                          'type' => 'string',
                          'example' => '1578965079000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"ScriptPublishHistories\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 100,\\n    \\"List\\": [\\n      {\\n        \\"PublishTime\\": 1578965079000,\\n        \\"InstanceId\\": \\"af81a389-91f0-4157-8d82-720edd02b66a\\",\\n        \\"ScriptId\\": \\"29420f65-8f1f-4009-b2f8-f4f7b5d59090\\",\\n        \\"Description\\": \\"第一次发布\\",\\n        \\"ScriptVersion\\": \\"1578965079000\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询外呼发布历史列表',
      'summary' => '查询外呼发布历史列表。',
    ),
    'ListGlobalQuestions' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aa279896-64a6-4182-864c-4f2b04ec8d17',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'GlobalQuestions' => 
              array (
                'description' => '全局话术数据',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '12',
                  ),
                  'List' => 
                  array (
                    'description' => '全局话术数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GlobalQuestionId' => 
                        array (
                          'description' => '全局话术id',
                          'type' => 'string',
                          'example' => '53c27755-d41e-46a6-bb3c-4f66f257d50c',
                        ),
                        'Answers' => 
                        array (
                          'description' => '回复列表',
                          'type' => 'string',
                          'example' => '["你好,您可以再说一遍吗","不好意思我刚才没有听清"]',
                        ),
                        'GlobalQuestionType' => 
                        array (
                          'description' => '全局话术类型',
                          'type' => 'string',
                          'example' => 'SYSTEM',
                        ),
                        'GlobalQuestionName' => 
                        array (
                          'description' => '全局话术id',
                          'type' => 'string',
                          'example' => '未识别',
                        ),
                        'Questions' => 
                        array (
                          'description' => '话术问题列表',
                          'type' => 'string',
                          'example' => '["未识别的用户问题"]',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术id',
                          'type' => 'string',
                          'example' => 'aa279896-64a6-4182-864c-4f2b04ec8d17',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"GlobalQuestions\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 12,\\n    \\"List\\": [\\n      {\\n        \\"GlobalQuestionId\\": \\"53c27755-d41e-46a6-bb3c-4f66f257d50c\\",\\n        \\"Answers\\": \\"[\\\\\\"你好,您可以再说一遍吗\\\\\\",\\\\\\"不好意思我刚才没有听清\\\\\\"]\\",\\n        \\"GlobalQuestionType\\": \\"SYSTEM\\",\\n        \\"GlobalQuestionName\\": \\"未识别\\",\\n        \\"ScriptId\\": \\"aa279896-64a6-4182-864c-4f2b04ec8d17\\",\\n        \\"Questions\\": \\"[\\\\\\"未识别的用户问题\\\\\\"]\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>f3aeb68d-ae6d-4b4c-8dfb-68650a6f0c6c</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<GlobalQuestions>\\n    <TotalCount>3</TotalCount>\\n    <PageSize>100</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <List>\\n        <GlobalQuestionType>SYSTEM</GlobalQuestionType>\\n        <Answers>[\\"你好,您可以再说一遍吗\\",\\"不好意思我刚才没有听清\\"]</Answers>\\n        <ScriptId>e6aa76f5-d55d-42a3-90ff-f22c284b3b94</ScriptId>\\n        <Questions>[\\"未识别的用户问题\\"]</Questions>\\n        <GlobalQuestionId>5d0ffabe-cb0c-480e-8981-80dbf4a21dc0</GlobalQuestionId>\\n        <GlobalQuestionName>未识别</GlobalQuestionName>\\n    </List>\\n</GlobalQuestions>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询关键问题列表',
      'summary' => '查询关键问题列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssignJobs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12f3dd08-0c55-44ce-9b64-e69d35ed3a76',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd004cfd2-6a81-491c-83c6-cbe186620c95',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组执行策略

name：策略名称。

maxAttemptsPerDay：作业每天最大执行次数。

minAttemptInterval：未接通情况下的重试时间间隔，单位为分钟。

startTime：开始时间戳。

endTime：结束时间戳。

workingTime：可呼出的时间窗口，24小时制。

Strategy优先级为: AssignJobs > CreateJobGroup。',
            'type' => 'string',
            'required' => false,
            'example' => '{"maxAttemptsPerDay":1,"name":"策略名字","startTime":1631503815256,"workingTime":[{"beginTime":"09:00:00","endTime":"12:00:00"},{"beginTime":"14:00:00","endTime":"16:00:00"}],"endTime":1631521815256,"minAttemptInterval":1}',
          ),
        ),
        3 => 
        array (
          'name' => 'RosterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '名单类型。

接口对接方式下发外呼任务默认json，可不填。',
            'type' => 'string',
            'required' => false,
            'example' => 'json',
          ),
        ),
        4 => 
        array (
          'name' => 'JobDataParsingTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析外呼任务数据的任务ID。

接口对接方式下发外呼任务可不填。',
            'type' => 'string',
            'required' => false,
            'example' => 'd004cfd2-6a81-491c-83c6-cbe186620c95',
          ),
        ),
        5 => 
        array (
          'name' => 'IsAsynchrony',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否异步。

接口对接方式下发外呼任务可不填，默认为false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码列表（给客户拨打电话时候的显示号码）。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码。',
              'type' => 'string',
              'required' => false,
              'example' => '95187',
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
        7 => 
        array (
          'name' => 'JobsJson',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '作业数据，格式是一个json数组，具体格式参考示例值。

JobsJson.N是个List，每个JobJson对应一个联系人(contact)。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '被叫联系人信息',
              'type' => 'string',
              'required' => false,
              'example' => '{     "extras":[         {             "value":"2019-08-21 09:49:59.0",             "key":"businessParamOne"         },         {             "value":"办理事件",             "key":"businessParamTwo"         }     ],     "contacts":[         {             "phoneNumber":"1851*******",             "name":"张三",             "referenceId":"2c9a9a7c6caedab6016cb1ddd13325ed",             "honorific":"张先生"         }     ] }',
            ),
            'required' => false,
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'JobGroupId' => 
              array (
                'description' => '作业组ID。',
                'type' => 'string',
                'example' => '390515b5-6115-4ccf-83e2-52d5bfaf2ddf',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'JobsId' => 
              array (
                'description' => '作业ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '作业ID。',
                  'type' => 'string',
                  'example' => '12f3dd08-0c55-44ce-9b64-e69d35ed3a76',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"JobGroupId\\": \\"390515b5-6115-4ccf-83e2-52d5bfaf2ddf\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"JobsId\\": [\\n    \\"12f3dd08-0c55-44ce-9b64-e69d35ed3a76\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<AssignJobsResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <JobGroupId>390515b5-6115-4ccf-83e2-52d5bfaf2ddf</JobGroupId>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <JobsId>12f3dd08-0c55-44ce-9b64-e69d35ed3a76</JobsId>\\n</AssignJobsResponse>","errorExample":""}]',
      'title' => '批量创建外呼任务',
      'summary' => '批量创建外呼任务。',
    ),
    'SubmitRecording' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e4e2a770-b97b-465a-80d8-06dca008c503',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceRecording',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术录音数据',
            'type' => 'string',
            'required' => false,
            'example' => '{"contactId":"3d35c0487cc041abb7ad0ce61752601f","duration":27,"fileName":"ce2659e5-a20b-4f8e-91b5-5cd909c6b96e_3d35c0487cc041abb7ad0ce61752601f.wav","filePath":"oss://ForCompatibility/waveforms/","startTime":1579057583670,"type":"Source"}',
          ),
        ),
        3 => 
        array (
          'name' => 'MergedRecording',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术录音数据',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"contactId":"3d35c0487cc041abb7ad0ce61752601f","duration":27,"fileName":"ce2659e5-a20b-4f8e-91b5-5cd909c6b96e_3d35c0487cc041abb7ad0ce61752601f.wav","filePath":"oss://ForCompatibility/waveforms/","startTime":1579057583670,"type":"Merged"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '向外呼提交通话录音',
      'summary' => '向外呼提交通话录音。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'Dialogue' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'CallId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '呼叫id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1528189846043',
          ),
        ),
        2 => 
        array (
          'name' => 'CallType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '呼叫类型，一般Outbound',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Outbound',
          ),
        ),
        3 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景id',
            'type' => 'string',
            'required' => false,
            'example' => '6cea9bed-63e6-439e-ae4c-b3333efff53d',
          ),
        ),
        4 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => false,
            'example' => 'ff44709e-39a6-43ba-959b-20fcabe3e496',
          ),
        ),
        5 => 
        array (
          'name' => 'Utterance',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户表述',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '是的',
          ),
        ),
        6 => 
        array (
          'name' => 'ActionKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外呼需要执行的动作，Hangup 挂机',
            'type' => 'string',
            'required' => false,
            'example' => 'broadcast',
          ),
        ),
        7 => 
        array (
          'name' => 'ActionParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行动作需要的参数（已废弃）',
            'type' => 'string',
            'required' => false,
            'example' => '""',
          ),
        ),
        8 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主叫号码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1***6',
          ),
        ),
        9 => 
        array (
          'name' => 'CalledNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被叫号码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '135****4353',
          ),
        ),
        10 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景id',
            'type' => 'string',
            'required' => false,
            'example' => 'c5c5d8c0-c0f1-48a7-be2b-dc46006d888a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Feedback' => 
              array (
                'description' => '返回对话信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Action' => 
                  array (
                    'description' => '给ivr 的指令',
                    'type' => 'string',
                    'example' => 'broadcast',
                  ),
                  'ActionParams' => 
                  array (
                    'description' => '指令参数',
                    'type' => 'string',
                    'example' => '""',
                  ),
                  'Content' => 
                  array (
                    'description' => '对话文本',
                    'type' => 'string',
                    'example' => '你好，我是**客服',
                  ),
                  'Interruptible' => 
                  array (
                    'description' => '是否可以打断播报',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ContentParams' => 
                  array (
                    'description' => '已废弃',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Feedback\\": {\\n    \\"Action\\": \\"broadcast\\",\\n    \\"ActionParams\\": \\"\\\\\\"\\\\\\"\\",\\n    \\"Content\\": \\"你好，我是**客服\\",\\n    \\"Interruptible\\": true,\\n    \\"ContentParams\\": \\"“”\\"\\n  }\\n}","type":"json"}]',
      'title' => '和机器人对话',
      'summary' => 'CC回调外呼的机器人对话接口。（已废弃）',
    ),
    'RecordFailure' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9ab43460-c0b9-40e2-8447-48d82c97fc67',
          ),
        ),
        1 => 
        array (
          'name' => 'CallId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '4f21446e-324e-46f2-bf62-7f341fb004ea',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd2295c0e-3bc3-48a5-9f56-b185db2be909',
          ),
        ),
        3 => 
        array (
          'name' => 'ActualTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1579055782000',
          ),
        ),
        4 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主叫号码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10086',
          ),
        ),
        5 => 
        array (
          'name' => 'CalledNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被叫号码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '135815****',
          ),
        ),
        6 => 
        array (
          'name' => 'DispositionCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '失败原因。空号(NotExists)，忙（Busy), 无人接听(NotAnswered)',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'OutOfService',
          ),
        ),
        7 => 
        array (
          'name' => 'ExceptionCodes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外呼未成功时发生的错误编码',
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => 'ivr记录通话失败',
      'summary' => 'CC提交通话失败原因到外呼业务系统。',
    ),
    'DeleteIntent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图所在的话术id
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aa279896-64a6-4182-864c-4f2b04ec8d17',
          ),
        ),
        2 => 
        array (
          'name' => 'IntentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 被删除的意图id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c21fb0ec-fb5e-476f-a6bf-81a892739c8d',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Succes',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Succes\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Code>OK</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除意图',
      'summary' => '删除意图。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIntent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8fa1953f-4a84-46d8-b80c-8ce9cf684fb3',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9b70486f-b1c2-429c-8a24-62798015ab1b',
          ),
        ),
        2 => 
        array (
          'name' => 'IntentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3b9a2b33-50d4-4576-8c68-22498f4bf731',
          ),
        ),
        3 => 
        array (
          'name' => 'IntentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图名字',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '车险如何办理',
          ),
        ),
        4 => 
        array (
          'name' => 'IntentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图描述',
            'type' => 'string',
            'required' => false,
            'example' => '询问车险意图',
          ),
        ),
        5 => 
        array (
          'name' => 'Utterances',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户表述列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["车险如何办理"]',
          ),
        ),
        6 => 
        array (
          'name' => 'Keywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字',
            'type' => 'string',
            'required' => false,
            'example' => '[]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'IntentId' => 
              array (
                'description' => '意图id',
                'type' => 'string',
                'example' => '3b9a2b33-50d4-4576-8c68-22498f4bf731',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIntentName.Duplicated',
            'errorMessage' => 'The specified IntentName already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Intent',
            'errorMessage' => 'The specified Intent does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"IntentId\\": \\"3b9a2b33-50d4-4576-8c68-22498f4bf731\\"\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<IntentId>3b9a2b33-50d4-4576-8c68-22498f4bf731</IntentId>\\n<RequestId>f7cdfae4-899b-4000-8d94-518f79cd5492</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '修改意图',
      'summary' => '修改意图。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIntent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '意图所在的话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b9ff4e88-65f9-4eb3-987c-11ba51f3f24d',
          ),
        ),
        2 => 
        array (
          'name' => 'IntentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的意图id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0f8a0059-dc9c-4151-8378-4734bbadf3cc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Intent' => 
              array (
                'description' => '意图信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Utterances' => 
                  array (
                    'description' => '触发意图的用户表述列表',
                    'type' => 'string',
                    'example' => '["ok","好的","好吧","好嘞","可以","行啊","行吧","那行","知道了","我看一下","能的","等会吧","等一下","马上还","等一会","过两天","我会想办法处理"]',
                  ),
                  'IntentDescription' => 
                  array (
                    'description' => '意图描述',
                    'type' => 'string',
                    'example' => '同意还款意图',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578469042851',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1578469042851',
                  ),
                  'Keywords' => 
                  array (
                    'description' => '意图关键字，',
                    'type' => 'string',
                    'example' => '["还款"]',
                  ),
                  'ScriptId' => 
                  array (
                    'description' => '话术id',
                    'type' => 'string',
                    'example' => '6ef95fd5-558f-4ee8-af34-b2ede087a87c',
                  ),
                  'IntentId' => 
                  array (
                    'description' => '意图id',
                    'type' => 'string',
                    'example' => 'a8494b35-eefb-4c8a-887b-b60d2f0fa57a',
                  ),
                  'IntentName' => 
                  array (
                    'description' => '意图名字',
                    'type' => 'string',
                    'example' => '统一还款',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Intent\\": {\\n    \\"IntentDescription\\": \\"同意还款意图\\",\\n    \\"Utterances\\": \\"[\\\\\\"ok\\\\\\",\\\\\\"好的\\\\\\",\\\\\\"好吧\\\\\\",\\\\\\"好嘞\\\\\\",\\\\\\"可以\\\\\\",\\\\\\"行啊\\\\\\",\\\\\\"行吧\\\\\\",\\\\\\"那行\\\\\\",\\\\\\"知道了\\\\\\",\\\\\\"我看一下\\\\\\",\\\\\\"能的\\\\\\",\\\\\\"等会吧\\\\\\",\\\\\\"等一下\\\\\\",\\\\\\"马上还\\\\\\",\\\\\\"等一会\\\\\\",\\\\\\"过两天\\\\\\",\\\\\\"我会想办法处理\\\\\\"]\\",\\n    \\"UpdateTime\\": 1578469042851,\\n    \\"CreateTime\\": 1578469042851,\\n    \\"Keywords\\": \\"[\\\\\\"还款\\\\\\"]\\",\\n    \\"ScriptId\\": \\"6ef95fd5-558f-4ee8-af34-b2ede087a87c\\",\\n    \\"IntentId\\": \\"a8494b35-eefb-4c8a-887b-b60d2f0fa57a\\",\\n    \\"IntentName\\": \\"统一还款\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<code>OK</code>\\n<httpStatusCode>200</httpStatusCode>\\n<intent>\\n    <createTime>0</createTime>\\n    <description/>\\n    <id/>\\n    <keywords/>\\n    <name/>\\n    <scriptId/>\\n    <updateTime>0</updateTime>\\n    <utterances/>\\n</intent>\\n<message/>\\n<requestId/>\\n<success>true</success>","errorExample":""}]',
      'title' => '获取一个意图',
      'summary' => '返回一个意图。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListIntents' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b9ff4e88-65f9-4eb3-987c-11ba51f3f24d',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，意图关键字',
            'type' => 'string',
            'required' => false,
            'example' => '""',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Intents' => 
              array (
                'description' => '意图列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页面个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'List' => 
                  array (
                    'description' => '意图数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Utterances' => 
                        array (
                          'description' => '触发意图的用户表述',
                          'type' => 'string',
                          'example' => '["ok","好的","好吧","好嘞","可以","行啊","行吧","那行","知道了","我看一下","能的","等会吧","等一下","马上还","等一会","过两天","我会想办法处理"]',
                        ),
                        'IntentDescription' => 
                        array (
                          'description' => '实例描述',
                          'type' => 'string',
                          'example' => '同意还款意图',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '意图更新时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1578469042851',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1578469042851',
                        ),
                        'Keywords' => 
                        array (
                          'description' => '意图关键字',
                          'type' => 'string',
                          'example' => '["还款"]',
                        ),
                        'ScriptId' => 
                        array (
                          'description' => '话术id',
                          'type' => 'string',
                          'example' => '6ef95fd5-558f-4ee8-af34-b2ede087a87c',
                        ),
                        'IntentId' => 
                        array (
                          'description' => '意图id',
                          'type' => 'string',
                          'example' => 'a8494b35-eefb-4c8a-887b-b60d2f0fa57a',
                        ),
                        'IntentName' => 
                        array (
                          'description' => '意图名字',
                          'type' => 'string',
                          'example' => '统一还款',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Intents\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 20,\\n    \\"List\\": [\\n      {\\n        \\"IntentDescription\\": \\"同意还款意图\\",\\n        \\"Utterances\\": \\"[\\\\\\"ok\\\\\\",\\\\\\"好的\\\\\\",\\\\\\"好吧\\\\\\",\\\\\\"好嘞\\\\\\",\\\\\\"可以\\\\\\",\\\\\\"行啊\\\\\\",\\\\\\"行吧\\\\\\",\\\\\\"那行\\\\\\",\\\\\\"知道了\\\\\\",\\\\\\"我看一下\\\\\\",\\\\\\"能的\\\\\\",\\\\\\"等会吧\\\\\\",\\\\\\"等一下\\\\\\",\\\\\\"马上还\\\\\\",\\\\\\"等一会\\\\\\",\\\\\\"过两天\\\\\\",\\\\\\"我会想办法处理\\\\\\"]\\",\\n        \\"UpdateTime\\": 1578469042851,\\n        \\"CreateTime\\": 1578469042851,\\n        \\"Keywords\\": \\"[\\\\\\"还款\\\\\\"]\\",\\n        \\"ScriptId\\": \\"6ef95fd5-558f-4ee8-af34-b2ede087a87c\\",\\n        \\"IntentId\\": \\"a8494b35-eefb-4c8a-887b-b60d2f0fa57a\\",\\n        \\"IntentName\\": \\"统一还款\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Code>OK</Code>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Intents>\\n    <CreateTime>1578469042851</CreateTime>\\n    <IntentDescription>同意还款意图</IntentDescription>\\n    <IntentId>a8494b35-eefb-4c8a-887b-b60d2f0fa57a</IntentId>\\n    <Keywords>还款</Keywords>\\n    <IntentName>同意还款</IntentName>\\n    <ScriptId>6ef95fd5-558f-4ee8-af34-b2ede087a87c</ScriptId>\\n    <UpdateTime>1578469042851</UpdateTime>\\n    <Utterances>ok</Utterances>\\n    <Utterances>好的</Utterances>\\n    <Utterances>好吧</Utterances>\\n    <Utterances>好嘞</Utterances>\\n    <Utterances>可以</Utterances>\\n    <Utterances>行啊</Utterances>\\n    <Utterances>行吧</Utterances>\\n    <Utterances>那行</Utterances>\\n    <Utterances>知道了</Utterances>\\n    <Utterances>我看一下</Utterances>\\n    <Utterances>能的</Utterances>\\n    <Utterances>等会吧</Utterances>\\n    <Utterances>等一下</Utterances>\\n    <Utterances>马上还</Utterances>\\n    <Utterances>等一会</Utterances>\\n    <Utterances>过两天</Utterances>\\n    <Utterances>我会想办法处理</Utterances>\\n</Intents>\\n<RequestId/>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询意图列表',
      'summary' => '查询意图列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateBatchRepeatJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2bfa5ae4-7185-4227-a3b8-328f26f11be1',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '24',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组描述',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '测试3',
          ),
        ),
        3 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0fe7f71c-8771-42ef-9bb1-19aa16ae7120',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c4f8a3d3-2e94-4bd4-aef8-e35f663d4847',
          ),
        ),
        5 => 
        array (
          'name' => 'FilterStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组状态',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Succeeded,NoInteraction,Failed,Cancelled',
          ),
        ),
        6 => 
        array (
          'name' => 'StrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业执行策略',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"maxAttemptsPerDay\\":1,\\"minAttemptInterval\\":1,\\"routingStrategy\\":\\"LocalFirst\\"}',
          ),
        ),
        7 => 
        array (
          'name' => 'RecallStrategyJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '重拨策略json',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"emptyNumberIgnore\\":false,\\"inArrearsIgnore\\":false,\\"outOfServiceIgnore\\":false}',
          ),
        ),
        8 => 
        array (
          'name' => 'CallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主叫号码',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主叫号码',
              'type' => 'string',
              'required' => false,
              'example' => '03737075611',
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 100,
          ),
        ),
        9 => 
        array (
          'name' => 'RingingDuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '振铃时长',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '25',
          ),
        ),
        10 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业优先级',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        11 => 
        array (
          'name' => 'MinConcurrency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小并发数',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2',
          ),
        ),
        12 => 
        array (
          'name' => 'FlashSmsExtras',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        13 => 
        array (
          'name' => 'RecallCallingNumber',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobGroup' => 
              array (
                'description' => '作业组信息',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '作业组id',
                    'type' => 'string',
                    'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                  ),
                  'RingingDuration' => 
                  array (
                    'description' => '振铃时长',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '30',
                  ),
                  'Priority' => 
                  array (
                    'description' => '作业优先级',
                    'type' => 'string',
                    'example' => '3',
                  ),
                  'MinConcurrency' => 
                  array (
                    'description' => '最小并发',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"JobGroup\\": {\\n    \\"Id\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n    \\"RingingDuration\\": 30,\\n    \\"Priority\\": \\"3\\",\\n    \\"MinConcurrency\\": 1\\n  }\\n}","type":"json"}]',
      'title' => '创建作业分组以及批处理作业',
    ),
    'CreateJobDataParsingTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobFilePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务所在文件路径',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'UPLOADED/JOB/024f8cf0-c842-4c01-b74b-c8667e4579c7/e5897675-91f0-4e53-8af8-7e1ce4f2c089_KDC HR- 外呼话术2- 外呼名单模板 - Copy.xlsx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b3865dc3-40fa-4afd-9fe4-dc7cda305a24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'JobDataParsingTaskId' => 
              array (
                'description' => '上传的任务id',
                'type' => 'string',
                'example' => 'd004cfd2-6a81-491c-83c6-cbe186620c95',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"JobDataParsingTaskId\\": \\"d004cfd2-6a81-491c-83c6-cbe186620c95\\"\\n}","type":"json"}]',
      'title' => '创建任务数据解析任务',
    ),
    'CreateJobGroupExportTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务组ID',
            'type' => 'string',
            'required' => false,
            'example' => 'baf6dfdc-eb79-4c63-ab19-c56388b1fbdd',
          ),
        ),
        2 => 
        array (
          'name' => 'Option',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '导入任务执行参数',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'TaskId' => 
              array (
                'description' => '任务id',
                'type' => 'string',
                'example' => '744b27f3-437f-4a8c-a181-f668e492fd24',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"TaskId\\": \\"744b27f3-437f-4a8c-a181-f668e492fd24\\"\\n}","type":"json"}]',
      'title' => '创建外呼作业组导出任务',
    ),
    'DeleteContactBlockList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactBlockListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '联系人列表id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c6320d3c-fa45-4011-b3b1-acdfabe3a8c6',
          ),
        ),
        1 => 
        array (
          'name' => 'Operator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作人信息',
            'type' => 'string',
            'required' => false,
            'example' => '160131',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c6320d3c-fa45-4011-b3b1-acdfabe3a8c6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'AffectedRows' => 
              array (
                'description' => '影响行数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"AffectedRows\\": 5,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '删除禁止外呼名单',
    ),
    'DeleteContactWhiteList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactWhiteListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '联系人白名单id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '111111',
          ),
        ),
        1 => 
        array (
          'name' => 'Operator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作人信息',
            'type' => 'string',
            'required' => false,
            'example' => '160131',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af81a389-91f0-4157-8d82-720edd02b66a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'AffectedRows' => 
              array (
                'description' => '影响行数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"AffectedRows\\": 5,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '删除外呼白名单',
    ),
    'DescribeDialogueNodeStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aeff669b-388f-4619-82af-81e177df5628',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a3c670d1-01bf-491d-b9aa-759b1a82f47c',
          ),
        ),
        2 => 
        array (
          'name' => 'Limit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限制',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '999',
            'minimum' => '0',
            'example' => '30',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'GroupId' => 
              array (
                'description' => '分组ID。',
                'type' => 'string',
                'example' => 'f06f7c9f-2895-4b30-a8c2-6ecccb9c9f89',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TotalCompleted' => 
              array (
                'description' => '总计个数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '13',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'InstanceId' => 
              array (
                'description' => '实例id',
                'type' => 'string',
                'example' => 'e5035654-1745-484a-8c5b-165f7c7bcd79',
              ),
              'NoAnswerDialogueNodes' => 
              array (
                'description' => '无应答节点',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NoAnswerNum' => 
                    array (
                      'description' => '无应答数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '分组ID。',
                      'type' => 'string',
                      'example' => 'f06f7c9f-2895-4b30-a8c2-6ecccb9c9f89',
                    ),
                    'NodeName' => 
                    array (
                      'description' => '节点名称',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'HangUpNum' => 
                    array (
                      'description' => '挂机数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'e5035654-1745-484a-8c5b-165f7c7bcd79',
                    ),
                    'HitNum' => 
                    array (
                      'description' => '命中数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '12',
                    ),
                    'Id' => 
                    array (
                      'description' => 'id',
                      'type' => 'string',
                      'example' => '123',
                    ),
                    'NodeId' => 
                    array (
                      'description' => '节点id',
                      'type' => 'string',
                      'example' => 'e5035654-1745-484a-8c5b-165f7c7bcd79',
                    ),
                  ),
                ),
                'example' => '[]',
              ),
              'HangUpDialogueNodes' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'HangUpNum' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'NodeId' => 
                    array (
                      'type' => 'string',
                    ),
                    'NodeName' => 
                    array (
                      'type' => 'string',
                    ),
                    'RateDisplay' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"GroupId\\": \\"f06f7c9f-2895-4b30-a8c2-6ecccb9c9f89\\",\\n  \\"Success\\": true,\\n  \\"TotalCompleted\\": 13,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"InstanceId\\": \\"e5035654-1745-484a-8c5b-165f7c7bcd79\\",\\n  \\"NoAnswerDialogueNodes\\": [\\n    {\\n      \\"NoAnswerNum\\": 2,\\n      \\"GroupId\\": \\"f06f7c9f-2895-4b30-a8c2-6ecccb9c9f89\\",\\n      \\"NodeName\\": \\"xxx\\",\\n      \\"HangUpNum\\": 2,\\n      \\"InstanceId\\": \\"e5035654-1745-484a-8c5b-165f7c7bcd79\\",\\n      \\"HitNum\\": 12,\\n      \\"Id\\": \\"123\\",\\n      \\"NodeId\\": \\"e5035654-1745-484a-8c5b-165f7c7bcd79\\"\\n    }\\n  ],\\n  \\"HangUpDialogueNodes\\": [\\n    {\\n      \\"HangUpNum\\": 0,\\n      \\"NodeId\\": \\"\\",\\n      \\"NodeName\\": \\"\\",\\n      \\"RateDisplay\\": \\"\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询对话节点数据统计',
    ),
    'DescribeDsReports' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9eb8fe4f-b286-4834-9688-2c9b171e223e',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '1364f208-982d-4d0c-89aa-d56e22b47589',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'DsReports' => 
              array (
                'description' => '对话流信息',
                'type' => 'string',
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"1364f208-982d-4d0c-89aa-d56e22b47589\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"DsReports\\": \\"{}\\"\\n}","type":"json"}]',
      'title' => '获取作业组命中标签统计',
    ),
    'DescribeGroupExecutingInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c46001bc-3ead-4bfd-9a69-4b5b66a4a3f4',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3640dda7-e5b1-4b3e-9ccf-da4fc5402e11',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'GroupId' => 
              array (
                'description' => '执行组id',
                'type' => 'string',
                'example' => 'b24d321a-2a74-4dd1-a0ba-4ab09cef6652',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'InstanceId' => 
              array (
                'description' => '实例id',
                'type' => 'string',
                'example' => 'c46001bc-3ead-4bfd-9a69-4b5b66a4a3f4',
              ),
              'ExecutingInfo' => 
              array (
                'description' => '执行信息',
                'type' => 'object',
                'properties' => 
                array (
                  'EndTime' => 
                  array (
                    'description' => '结束时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640087774563',
                  ),
                  'StartTime' => 
                  array (
                    'description' => '开始时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640087774563',
                  ),
                  'HangUpByClientNum' => 
                  array (
                    'description' => '客户主动挂断次数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'CreatorName' => 
                  array (
                    'description' => '创建者名字',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'TransferByNoAnswer' => 
                  array (
                    'description' => '无应答',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'FinishedNum' => 
                  array (
                    'description' => '已执行完成的个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'TransferByIntentNum' => 
                  array (
                    'description' => '意图识别',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'CallNum' => 
                  array (
                    'description' => '外呼量',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'CallFailedNum' => 
                  array (
                    'description' => '呼叫失败次数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'JobsProgress' => 
                  array (
                    'description' => '执行进度',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'SchedulingNum' => 
                      array (
                        'description' => '调度中的任务数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'TotalCompletedNum' => 
                      array (
                        'description' => '总计完成的数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'FailedNum' => 
                      array (
                        'description' => '失败个数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'PausedNum' => 
                      array (
                        'description' => '暂停的次数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'CancelledNum' => 
                      array (
                        'description' => '取消的个数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'TotalJobs' => 
                      array (
                        'description' => '总计作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'TotalNotAnsweredNum' => 
                      array (
                        'description' => '无应答的数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'ExecutingNum' => 
                      array (
                        'description' => '执行中的作业数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                    'example' => '{}',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"GroupId\\": \\"b24d321a-2a74-4dd1-a0ba-4ab09cef6652\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"InstanceId\\": \\"c46001bc-3ead-4bfd-9a69-4b5b66a4a3f4\\",\\n  \\"ExecutingInfo\\": {\\n    \\"EndTime\\": 1640087774563,\\n    \\"StartTime\\": 1640087774563,\\n    \\"HangUpByClientNum\\": 5,\\n    \\"CreatorName\\": \\"xxx\\",\\n    \\"TransferByNoAnswer\\": 5,\\n    \\"FinishedNum\\": 5,\\n    \\"TransferByIntentNum\\": 5,\\n    \\"CallNum\\": 5,\\n    \\"CallFailedNum\\": 5,\\n    \\"JobsProgress\\": {\\n      \\"SchedulingNum\\": 5,\\n      \\"TotalCompletedNum\\": 5,\\n      \\"FailedNum\\": 5,\\n      \\"PausedNum\\": 5,\\n      \\"CancelledNum\\": 5,\\n      \\"TotalJobs\\": 5,\\n      \\"TotalNotAnsweredNum\\": 5,\\n      \\"ExecutingNum\\": 5\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '返回任务执行情况',
    ),
    'DescribeIntentStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c3c92de8-e4bd-4db4-a962-50f8acce40bc',
          ),
        ),
        1 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '040355a9-e80c-4308-b85c-aa5b9fd25246',
          ),
        ),
        2 => 
        array (
          'name' => 'Limit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'GroupId' => 
              array (
                'description' => '实例所属分组ID。',
                'type' => 'string',
                'example' => '0c3f352f-d045-491d-9ce7-11f2d2b7775d',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ProcessIntentNum' => 
              array (
                'description' => '总计的实例数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '123',
              ),
              'InstanceId' => 
              array (
                'description' => '实例id',
                'type' => 'string',
                'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
              ),
              'GlobalIntentNum' => 
              array (
                'description' => '总计个数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'ProcessIntents' => 
              array (
                'description' => '意图信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'description' => '类型',
                      'type' => 'string',
                      'example' => 'ProcessIntent',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '实例所属分组ID。',
                      'type' => 'string',
                      'example' => '0c3f352f-d045-491d-9ce7-11f2d2b7775d',
                    ),
                    'HitAfterNoAnswer' => 
                    array (
                      'description' => '命中后无应答',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
                    ),
                    'HitNum' => 
                    array (
                      'description' => '命中数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'IntentId' => 
                    array (
                      'description' => '意图id',
                      'type' => 'string',
                      'example' => '12343',
                    ),
                    'IntentName' => 
                    array (
                      'description' => '意图名称',
                      'type' => 'string',
                      'example' => '请假意图',
                    ),
                    'RateDisplay' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
                'example' => '[]',
              ),
              'GlobalIntents' => 
              array (
                'description' => '全局事件数组',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'description' => '类型
',
                      'type' => 'string',
                      'example' => 'GlobalIntent',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '实例所属分组ID。',
                      'type' => 'string',
                      'example' => '0c3f352f-d045-491d-9ce7-11f2d2b7775d',
                    ),
                    'HitAfterNoAnswer' => 
                    array (
                      'description' => '命中后无应答',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
                    ),
                    'HitNum' => 
                    array (
                      'description' => '命中数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '11',
                    ),
                    'IntentId' => 
                    array (
                      'description' => '意图id',
                      'type' => 'string',
                      'example' => '21343425',
                    ),
                    'IntentName' => 
                    array (
                      'description' => '意图名称',
                      'type' => 'string',
                      'example' => '请假意图',
                    ),
                  ),
                ),
                'example' => '[]',
              ),
              'IntentsAfterNoAnswer' => 
              array (
                'description' => '意图信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
                    ),
                    'GroupId' => 
                    array (
                      'type' => 'string',
                    ),
                    'HitAfterNoAnswer' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'IntentId' => 
                    array (
                      'type' => 'string',
                    ),
                    'IntentName' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"GroupId\\": \\"0c3f352f-d045-491d-9ce7-11f2d2b7775d\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"ProcessIntentNum\\": 123,\\n  \\"InstanceId\\": \\"a4274627-265f-4e14-b2d6-4ee7d4f8593e\\",\\n  \\"GlobalIntentNum\\": 100,\\n  \\"ProcessIntents\\": [\\n    {\\n      \\"Type\\": \\"ProcessIntent\\",\\n      \\"GroupId\\": \\"0c3f352f-d045-491d-9ce7-11f2d2b7775d\\",\\n      \\"HitAfterNoAnswer\\": 1,\\n      \\"InstanceId\\": \\"a4274627-265f-4e14-b2d6-4ee7d4f8593e\\",\\n      \\"HitNum\\": 10,\\n      \\"IntentId\\": \\"12343\\",\\n      \\"IntentName\\": \\"请假意图\\",\\n      \\"RateDisplay\\": \\"\\"\\n    }\\n  ],\\n  \\"GlobalIntents\\": [\\n    {\\n      \\"Type\\": \\"GlobalIntent\\",\\n      \\"GroupId\\": \\"0c3f352f-d045-491d-9ce7-11f2d2b7775d\\",\\n      \\"HitAfterNoAnswer\\": 1,\\n      \\"InstanceId\\": \\"a4274627-265f-4e14-b2d6-4ee7d4f8593e\\",\\n      \\"HitNum\\": 11,\\n      \\"IntentId\\": \\"21343425\\",\\n      \\"IntentName\\": \\"请假意图\\"\\n    }\\n  ],\\n  \\"IntentsAfterNoAnswer\\": [\\n    {\\n      \\"InstanceId\\": \\"a4274627-265f-4e14-b2d6-4ee7d4f8593e\\",\\n      \\"GroupId\\": \\"\\",\\n      \\"HitAfterNoAnswer\\": 0,\\n      \\"IntentId\\": \\"\\",\\n      \\"IntentName\\": \\"\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询意图统计信息',
    ),
    'DescribeJobDataParsingTaskProgress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobDataParsingTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '50d5e164-9365-4261-980e-3d979c2c948c',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c209abb3-6804-4a75-b2c7-dd55c8c61b6a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Progress' => 
              array (
                'description' => '进度',
                'type' => 'object',
                'properties' => 
                array (
                  'FailErrorCode' => 
                  array (
                    'description' => '失败错误码',
                    'type' => 'string',
                    'example' => 'Permission.JobStatus',
                  ),
                  'Status' => 
                  array (
                    'description' => '作业状态',
                    'type' => 'string',
                    'example' => 'Pending',
                  ),
                  'HandledJobCount' => 
                  array (
                    'description' => '处理处理中作业数量',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'TotalJobCount' => 
                  array (
                    'description' => '总计作业数量',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'FailReason' => 
                  array (
                    'description' => '失败原因',
                    'type' => 'string',
                    'example' => 'CreateCorpus',
                  ),
                  'FeedbackUrl' => 
                  array (
                    'type' => 'string',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Progress\\": {\\n    \\"FailErrorCode\\": \\"Permission.JobStatus\\",\\n    \\"Status\\": \\"Pending\\",\\n    \\"HandledJobCount\\": 2,\\n    \\"TotalJobCount\\": 3,\\n    \\"FailReason\\": \\"CreateCorpus\\",\\n    \\"FeedbackUrl\\": \\"\\"\\n  }\\n}","type":"json"}]',
      'title' => '返回一个作业的进度信息',
    ),
    'DescribeJobGroupExportTaskProgress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => false,
            'example' => 'b3dbfb82-1ae6-4e73-b717-f494727d2af3',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => false,
            'example' => 'e4e2a770-b97b-465a-80d8-06dca008c503',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'FileHttpUrl' => 
              array (
                'description' => '文件地址',
                'type' => 'string',
                'example' => 'http://xxx.xx.com/xx',
              ),
              'Progress' => 
              array (
                'description' => '导出进度',
                'type' => 'number',
                'format' => 'float',
                'example' => '45.0',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"FileHttpUrl\\": \\"http://xxx.xx.com/xx\\",\\n  \\"Progress\\": 45,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '获取任务组导出任务进度',
    ),
    'GetAsrServerInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => false,
            'example' => '024f8cf0-c842-4c01-b74b-c8667e4579c7',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取asr模型列表、热词列表等信息',
    ),
    'GetAfterAnswerDelayPlayback' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c46001bc-3ead-4bfd-9a69-4b5b66a4a3f4',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'AfterAnswerDelayPlayback' => 
              array (
                'description' => '回复的延迟时间',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '500',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"AfterAnswerDelayPlayback\\": 500\\n}","type":"json"}]',
      'title' => '查询接听后延迟播报时间',
    ),
    'GetEffectiveDays' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e90b5b8e-c8b4-4182-b28d-a5aa81685e49',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'Success',
              ),
              'EffectiveDays' => 
              array (
                'description' => '生效时间',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"Success\\",\\n  \\"EffectiveDays\\": 7,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '查询基础策略有效期',
    ),
    'QueryJobsWithResult' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'QueryText',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'JobStatusFilter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'HasAnsweredFilter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'HasHangUpByRejectionFilter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'HasReachedEndOfFlowFilter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        9 => 
        array (
          'name' => 'TaskStatusFilter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        10 => 
        array (
          'name' => 'JobFailureReasonsFilter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'VariableNames' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'string',
                ),
              ),
              'Jobs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'PageSize' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'PageCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'RowCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'List' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'type' => 'string',
                        ),
                        'StatusName' => 
                        array (
                          'type' => 'string',
                        ),
                        'JobFailureReason' => 
                        array (
                          'type' => 'string',
                        ),
                        'Id' => 
                        array (
                          'type' => 'string',
                        ),
                        'LatestTask' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'type' => 'string',
                            ),
                            'TaskEndReason' => 
                            array (
                              'type' => 'string',
                            ),
                            'HasAnswered' => 
                            array (
                              'type' => 'boolean',
                            ),
                            'CallDuration' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int32',
                            ),
                            'HasReachedEndOfFlow' => 
                            array (
                              'type' => 'boolean',
                            ),
                            'StatusName' => 
                            array (
                              'type' => 'string',
                            ),
                            'CallTime' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int64',
                            ),
                            'CallDurationDisplay' => 
                            array (
                              'type' => 'string',
                            ),
                            'HasHangUpByRejection' => 
                            array (
                              'type' => 'boolean',
                            ),
                            'Extras' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                  'Value' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                ),
                              ),
                            ),
                            'TagHits' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TagName' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                  'TagGroup' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                ),
                              ),
                            ),
                            'Contact' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Round' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                ),
                                'JobUuid' => 
                                array (
                                  'type' => 'string',
                                ),
                                'PreferredPhoneNumber' => 
                                array (
                                  'type' => 'string',
                                ),
                                'PhoneNumber' => 
                                array (
                                  'type' => 'string',
                                ),
                                'State' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Honorific' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Name' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Role' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Id' => 
                                array (
                                  'type' => 'string',
                                ),
                                'ReferenceId' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                            'HasLastPlaybackCompleted' => 
                            array (
                              'type' => 'boolean',
                            ),
                            'DialExceptionCodes' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Code' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                  'Hint' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'SaveAfterAnswerDelayPlayback' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '980116ec-2d3d-4747-8059-dc25e7af8501',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'AfterAnswerDelayPlayback',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '延迟播报的播放时间',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '保存接听后延迟播报时间',
    ),
    'SaveBaseStrategyPeriod' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fe51eca2-a904-4b4d-b3ff-31be334b9500',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'OnlyWeekdays',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为周末',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'WorkingTimeFramesJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行时间',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"beginTime\\":\\"09:00:00\\",\\"beginTimeMillis\\":324000000000,\\"endTime\\":\\"21:00:00\\",\\"endTimeMillis\\":756000000000}]',
          ),
        ),
        4 => 
        array (
          'name' => 'WorkingTime',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '运行时间',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 99,
          ),
        ),
        5 => 
        array (
          'name' => 'OnlyWorkdays',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '编辑基础策略有效时间窗口',
    ),
    'SaveContactBlockList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactBlockListsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'json格式的字符串',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => false,
            'example' => 'c3c92de8-e4bd-4db4-a962-50f8acce40bc',
          ),
        ),
        2 => 
        array (
          'name' => 'ContactBlockListList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '联系人信息列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'AffectedRows' => 
              array (
                'description' => '影响行数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"AffectedRows\\": 5,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '保存禁止外呼名单',
    ),
    'SaveContactWhiteList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c415bb6c-2e6f-46aa-afd9-3b65b6dbe2bc',
          ),
        ),
        1 => 
        array (
          'name' => 'ContactWhiteListsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '白名单列表',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        2 => 
        array (
          'name' => 'ContactWhiteListList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '联系人白名单列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '{}',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'AffectedRows' => 
              array (
                'description' => '影响行数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"AffectedRows\\": 10,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '保存外呼白名单',
      'summary' => '保存外呼白名单。',
    ),
    'SaveEffectiveDays' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e90b5b8e-c8b4-4182-b28d-a5aa81685e49',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'EffectiveDays',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生效时间',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '30',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '保存基础策略有效期',
    ),
    'SaveMaxAttemptsPerDay' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c8bf820a-6a8a-47bc-99bf-97593df8faa8',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略级别',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxAttemptsPerDay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每日最大重拨次数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '保存被叫号码每日拨打上限',
    ),
    'SuspendCall' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a5fc6490-ef1e-4666-870a-07a4e586c414',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务组id',
            'type' => 'string',
            'required' => false,
            'example' => 'f745881b-343d-43e4-9c51-31b7b063031c',
          ),
        ),
        2 => 
        array (
          'name' => 'CalledNumbers',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '被叫号码列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '[]',
            'maxItems' => 99,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '根据列表数据止呼',
    ),
    'SuspendCallWithFile' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => false,
            'example' => 'a4274627-265f-4e14-b2d6-4ee7d4f8593e',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务组id',
            'type' => 'string',
            'required' => false,
            'example' => '0197261b-30e6-467b-83d6-7f72af868b03',
          ),
        ),
        2 => 
        array (
          'name' => 'FilePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件路径',
            'type' => 'string',
            'required' => false,
            'example' => 'xxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '根据文件数据止呼',
    ),
    'ChangeResourceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ResourceId.1=b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
          ),
        ),
        1 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新资源组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rg-aeky6wvb7yzabqy',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更改资源组',
    ),
    'GetTaskByUuid' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '024f8cf0-c842-4c01-b74b-c8667e4579c7',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '15160071061',
          ),
        ),
        2 => 
        array (
          'name' => 'WithConversations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要对话信息',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Task' => 
              array (
                'description' => '任务信息',
                'type' => 'object',
                'properties' => 
                array (
                  'JobGroupId' => 
                  array (
                    'description' => '作业组id',
                    'type' => 'string',
                    'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                  ),
                  'EndTime' => 
                  array (
                    'description' => '结束时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640090211434',
                  ),
                  'EndReason' => 
                  array (
                    'description' => '结束原因',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1640090211434',
                  ),
                  'PlannedTime' => 
                  array (
                    'description' => '任务计划执行时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640090211434',
                  ),
                  'JobId' => 
                  array (
                    'description' => '作业id',
                    'type' => 'string',
                    'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                  ),
                  'CallId' => 
                  array (
                    'description' => '呼叫id',
                    'type' => 'string',
                    'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                  ),
                  'CallingNumber' => 
                  array (
                    'description' => '主叫号码',
                    'type' => 'string',
                    'example' => '057190294',
                  ),
                  'ActualTime' => 
                  array (
                    'description' => '实际执行时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1640090211434',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                  ),
                  'CalledNumber' => 
                  array (
                    'description' => '被叫号码',
                    'type' => 'string',
                    'example' => '13777777777',
                  ),
                  'Id' => 
                  array (
                    'description' => '任务id',
                    'type' => 'string',
                    'example' => '2',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Task\\": {\\n    \\"JobGroupId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n    \\"EndTime\\": 1640090211434,\\n    \\"EndReason\\": 1640090211434,\\n    \\"PlannedTime\\": 1640090211434,\\n    \\"JobId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n    \\"CallId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n    \\"CallingNumber\\": \\"057190294\\",\\n    \\"ActualTime\\": 1640090211434,\\n    \\"InstanceId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n    \\"CalledNumber\\": \\"13777777777\\",\\n    \\"Id\\": \\"2\\"\\n  }\\n}","type":"json"}]',
      'title' => '根据UUID获取任务',
    ),
    'ListResourceTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口消息提示',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ResourceTags' => 
              array (
                'description' => '资源标签信息',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'List' => 
                  array (
                    'description' => '资源标签列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '资源标签key',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'Value' => 
                        array (
                          'description' => '资源标签值',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                      ),
                    ),
                    'example' => '[]',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"ResourceTags\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 100,\\n    \\"List\\": [\\n      {\\n        \\"Key\\": \\"name\\",\\n        \\"Value\\": \\"xxx\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询资源标签关系',
    ),
    'ListTagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一个查询开始Token',
            'type' => 'string',
            'required' => false,
            'example' => 'b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID，n 的取值范围为 [1, 50]',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID',
              'type' => 'string',
              'required' => false,
              'example' => 'af651b72-4a64-4340-ae7f-2cf0054d32f9',
            ),
            'required' => false,
            'example' => 'ResourceId.1=b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
            'maxItems' => 51,
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键，n 的取值范围为 [1, 20]。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Tag.1.Key=key1',
                ),
                'Value' => 
                array (
                  'description' => '标签值，n 的取值范围为 [1, 20]',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Tag.1.Value=value1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'NextToken' => 
              array (
                'description' => '下一个查询开始Token',
                'type' => 'string',
                'example' => 'b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'TagResources' => 
              array (
                'description' => '资源列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ResourceType' => 
                    array (
                      'description' => '资源类型',
                      'type' => 'string',
                      'example' => 'instance',
                    ),
                    'TagValue' => 
                    array (
                      'description' => '标签值',
                      'type' => 'string',
                      'example' => 'value1',
                    ),
                    'ResourceId' => 
                    array (
                      'description' => '资源ID',
                      'type' => 'string',
                      'example' => 'b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
                    ),
                    'TagKey' => 
                    array (
                      'description' => '标签键',
                      'type' => 'string',
                      'example' => 'key1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"NextToken\\": \\"b949ae1f-01dc-4191-ae5a-70fbe6772fd8\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"TagResources\\": [\\n    {\\n      \\"ResourceType\\": \\"instance\\",\\n      \\"TagValue\\": \\"value1\\",\\n      \\"ResourceId\\": \\"b949ae1f-01dc-4191-ae5a-70fbe6772fd8\\",\\n      \\"TagKey\\": \\"key1\\"\\n    }\\n  ]\\n}","errorExample":""}]',
      'title' => '查询资源标签关系',
      'summary' => '查询资源标签关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID，n 的取值范围为 [1, 50]',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID',
              'type' => 'string',
              'required' => false,
              'example' => '1',
            ),
            'required' => true,
            'example' => 'ResourceId.1=b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
            'maxItems' => 51,
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键，n 的取值范围为 [1, 20]。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Tag.1.Key=key1',
                ),
                'Value' => 
                array (
                  'description' => '标签值，n 的取值范围为 [1, 20]。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Tag.1.Value=value1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""}]',
      'title' => '给资源打标签',
      'summary' => '给资源打标签。',
      'description' => '**',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UntagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
        2 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否全部删除，只针对TagKey.N为空时有效。取值范围：

true

false

默认是 false',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID，n 的取值范围为 1, 50',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID',
              'type' => 'string',
              'required' => false,
              'example' => 'ResourceId.1=b949ae1f-01dc-4191-ae5a-70fbe6772fd8',
            ),
            'required' => true,
            'maxItems' => 51,
          ),
        ),
        4 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键，n 的取值范围为 1, 20。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签键',
              'type' => 'string',
              'required' => false,
              'example' => 'TagKey.1=key1',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UntagResourcesResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Code>OK</Code>\\n    <Message>Success</Message>\\n    <RequestId>254EB995-DEDF-48A4-9101-9CA5B72FFBCC</RequestId>\\n    <Success>true</Success>\\n</UntagResourcesResponse>","errorExample":""}]',
      'title' => '删除资源标签',
      'summary' => '删除资源标签。',
    ),
    'GetConcurrentConversationQuota' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RemainingConcurrent' => 
              array (
                'description' => '剩余的并发',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'MaxConcurrent' => 
              array (
                'description' => 'maxConcurrent',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RemainingConcurrent\\": 2,\\n  \\"MaxConcurrent\\": 10\\n}","type":"json"}]',
      'title' => '获取调用者账号下剩余的并发数',
    ),
    'GetCurrentConcurrency' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '361c8a53-0e29-42f3-8aa7-c7752d010399',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'CurrentConcurrency' => 
              array (
                'description' => '当前的并发',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'MaxConcurrentConversation' => 
              array (
                'description' => '最大并发',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'InstanceId' => 
              array (
                'description' => '实例id',
                'type' => 'string',
                'example' => '12f3dd08-0c55-44ce-9b64-e69d35ed3a76',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"CurrentConcurrency\\": 12,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"MaxConcurrentConversation\\": 5,\\n  \\"InstanceId\\": \\"12f3dd08-0c55-44ce-9b64-e69d35ed3a76\\"\\n}","type":"json"}]',
      'title' => '获取实例瞬时的并发',
    ),
    'TerminateCall' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174952ab-9825-4cc9-a5e2-de82d7fa4cdd',
          ),
        ),
        1 => 
        array (
          'name' => 'CallId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1528189846043',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '终止外呼',
    ),
    'ListDownloadTasks' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '1000',
            'minimum' => '1',
            'enumValueTitles' => 
            array (
              1 => '1',
            ),
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '50',
            'minimum' => '1',
            'enumValueTitles' => 
            array (
              5 => '5',
            ),
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '904CFA7B-8AD9-50FF-9B3E-404B20B9EE31',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'DownloadTasks' => 
              array (
                'description' => '下载任务列表',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总计个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'List' => 
                  array (
                    'description' => '下载任务数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '下载任务数组',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '导出状态',
                          'type' => 'string',
                          'example' => 'Empty',
                        ),
                        'Title' => 
                        array (
                          'description' => '标题',
                          'type' => 'string',
                          'example' => 'GUI-TEST-新建风险',
                        ),
                        'ExpireTime' => 
                        array (
                          'description' => '过期时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1646792941',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '任务id',
                          'type' => 'string',
                          'example' => '6b0e547e-501c-480a-812f-d27e28e74f9a',
                        ),
                        'DownloadTaskFiles' => 
                        array (
                          'description' => '下载任务文件列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '下载任务文件列表',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Status' => 
                              array (
                                'description' => '文件状态',
                                'type' => 'string',
                                'example' => 'Empty',
                              ),
                              'Title' => 
                              array (
                                'description' => '标题',
                                'type' => 'string',
                                'example' => 'GUI-TEST-新建风险',
                              ),
                              'Progress' => 
                              array (
                                'description' => '完成进度',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '10',
                              ),
                              'FileId' => 
                              array (
                                'description' => '文件id',
                                'type' => 'string',
                                'example' => 'UPLOADED/RECORDING/d5c651b3-3c0f-44b8-aafd-40526f2fb43d/dd33377f-abad-471b-84dd-04aed572ce60_2.wav',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"904CFA7B-8AD9-50FF-9B3E-404B20B9EE31\\",\\n  \\"Success\\": true,\\n  \\"DownloadTasks\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 2,\\n    \\"List\\": [\\n      {\\n        \\"Status\\": \\"Empty\\",\\n        \\"Title\\": \\"GUI-TEST-新建风险\\",\\n        \\"ExpireTime\\": 1646792941,\\n        \\"TaskId\\": \\"6b0e547e-501c-480a-812f-d27e28e74f9a\\",\\n        \\"DownloadTaskFiles\\": [\\n          {\\n            \\"Status\\": \\"Empty\\",\\n            \\"Title\\": \\"GUI-TEST-新建风险\\",\\n            \\"Progress\\": 10,\\n            \\"FileId\\": \\"UPLOADED/RECORDING/d5c651b3-3c0f-44b8-aafd-40526f2fb43d/dd33377f-abad-471b-84dd-04aed572ce60_2.wav\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '任务下载列表',
    ),
    'CreateDownloadUrl' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DownloadTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id，通话来自这个任务',
            'type' => 'string',
            'required' => true,
            'example' => '137da36b41304bcd999a0a7895dc6881',
          ),
        ),
        1 => 
        array (
          'name' => 'FileId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件ID，文件的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => '6f91885fa24b4c408d8f4eb392fd8ae6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'FileHttpUrl' => 
              array (
                'description' => '文件url',
                'type' => 'string',
                'example' => 'http://www.xxx.com/xxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'EC08CC41-6870-5594-939A-F758F057898F',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"FileHttpUrl\\": \\"http://www.xxx.com/xxx\\",\\n  \\"RequestId\\": \\"EC08CC41-6870-5594-939A-F758F057898F\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '创建下载文件url',
    ),
    'SearchTask' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'd481cebe-0bb6-4d13-9649-42ce5074fb75',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskCreateTimeGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间lta',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646792941',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskCreateTimeLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646792941',
          ),
        ),
        3 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务组id',
            'type' => 'string',
            'required' => false,
            'example' => '3a30ae7c-27b2-4305-9444-7185ced9d51f',
          ),
        ),
        4 => 
        array (
          'name' => 'JobGroupNameQuery',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业组名字',
            'type' => 'string',
            'required' => false,
            'example' => '国寿财住院保续保_20220301_134130',
          ),
        ),
        5 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业id',
            'type' => 'string',
            'required' => false,
            'example' => '11994321-e6bc-47bb-8b1c-8eef8f2f768b',
          ),
        ),
        6 => 
        array (
          'name' => 'CalledNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被叫号码',
            'type' => 'string',
            'required' => false,
            'example' => '15126426342',
          ),
        ),
        7 => 
        array (
          'name' => 'UserIdMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID',
            'type' => 'string',
            'required' => false,
            'example' => '12341155',
          ),
        ),
        8 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务id',
            'type' => 'string',
            'required' => false,
            'example' => '744b27f3-437f-4a8c-a181-f668e492fd24',
          ),
        ),
        9 => 
        array (
          'name' => 'ActualTimeGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646582400000',
          ),
        ),
        10 => 
        array (
          'name' => 'ActualTimeLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1643126399000',
          ),
        ),
        11 => 
        array (
          'name' => 'RecordingDurationGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音总时长',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        12 => 
        array (
          'name' => 'RecordingDurationLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音总时长',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '60',
          ),
        ),
        13 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        14 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        15 => 
        array (
          'name' => 'OtherId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '其他id',
            'type' => 'string',
            'required' => false,
            'example' => 'AVD-2021-39685',
          ),
        ),
        16 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序方式',
            'type' => 'string',
            'required' => false,
            'example' => 'actualTime',
          ),
        ),
        17 => 
        array (
          'name' => 'SortOrder',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序顺序。取值范围：

- Ascending（升序）

- Descending（默认值）：降序',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        18 => 
        array (
          'name' => 'CallDurationGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话时长搜索最小时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12341155',
          ),
        ),
        19 => 
        array (
          'name' => 'CallDurationLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话时长搜索最大时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12341155',
          ),
        ),
        20 => 
        array (
          'name' => 'JobStatusStringList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业状态，多个以英文逗号分隔，当该字段不为空时，会将jobStatusList覆盖',
            'type' => 'string',
            'required' => false,
            'example' => 'Succeeded',
          ),
        ),
        21 => 
        array (
          'name' => 'TaskStatusStringList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话状态，多个以英文逗号分隔，当该字段不为空时，会将taskStatusList覆盖',
            'type' => 'string',
            'required' => false,
            'example' => 'Succeeded',
          ),
        ),
        22 => 
        array (
          'name' => 'ScriptNameQuery',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景名称',
            'type' => 'string',
            'required' => false,
            'example' => '国寿财',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'PageIndex' => 
              array (
                'description' => '页号',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '请求状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'PageSize' => 
              array (
                'description' => '个数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '总计个数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'SearchTaskInfoList' => 
              array (
                'description' => '任务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '任务列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobGroupName' => 
                    array (
                      'description' => '作业组名字',
                      'type' => 'string',
                      'example' => '85成新（有笔记划线）2021_11_14_18_00_51',
                    ),
                    'UserId' => 
                    array (
                      'description' => '用户id',
                      'type' => 'string',
                      'example' => '12334134',
                    ),
                    'ActualTime' => 
                    array (
                      'description' => '实际执行时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1643436089677',
                    ),
                    'CalledNumber' => 
                    array (
                      'description' => '被叫号码',
                      'type' => 'string',
                      'example' => '15205879599',
                    ),
                    'TaskStatusString' => 
                    array (
                      'description' => '任务状态',
                      'type' => 'string',
                      'example' => 'Executing',
                    ),
                    'TaskStatusName' => 
                    array (
                      'description' => '通话状态展示内容',
                      'type' => 'string',
                      'example' => 'xxxx',
                    ),
                    'JobStatus' => 
                    array (
                      'description' => '任务状态',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => 'Succeeded',
                    ),
                    'DialException' => 
                    array (
                      'description' => '异常情况',
                      'type' => 'string',
                      'example' => '[{"code":"OutboundCallError.SipCodeError", "params":[{"key":"SipCode","value":"500"}]}]',
                    ),
                    'UserName' => 
                    array (
                      'description' => '用户名',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'CallDurationDisplay' => 
                    array (
                      'description' => '通话时长展示字段',
                      'type' => 'string',
                      'example' => 'ActualTime',
                    ),
                    'HasAnswered' => 
                    array (
                      'description' => '有无应答',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'JobStatusName' => 
                    array (
                      'description' => '作业状态展示内容',
                      'type' => 'string',
                      'example' => 'xxx',
                    ),
                    'CallDuration' => 
                    array (
                      'description' => '通话时长，单位秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1646792941',
                    ),
                    'TaskCreateTime' => 
                    array (
                      'description' => '任务创建时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1646792941',
                    ),
                    'JobStatusString' => 
                    array (
                      'description' => '任务状态',
                      'type' => 'string',
                      'example' => 'Scheduling',
                    ),
                    'HasReachedEndOfFlow' => 
                    array (
                      'description' => '对话完成',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => '73df6283-26b2-402d-bad0-ffa489923ea1',
                    ),
                    'HasHangUpByRejection' => 
                    array (
                      'description' => '拒识挂机',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'TaskEndReason' => 
                    array (
                      'description' => '任务结束原因',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => 'OutOfService',
                    ),
                    'JobGroupId' => 
                    array (
                      'description' => '作业组id',
                      'type' => 'string',
                      'example' => '37db3113-ad34-4ba3-b930-468f016bbf95',
                    ),
                    'TaskStatus' => 
                    array (
                      'description' => '任务状态',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => 'Success',
                    ),
                    'JobId' => 
                    array (
                      'description' => '作业id',
                      'type' => 'string',
                      'example' => '6203248e-e652-4ef8-a1eb-586ed7b54dc2',
                    ),
                    'RecordingDuration' => 
                    array (
                      'description' => '录音时长，单位秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'TaskId' => 
                    array (
                      'description' => '任务id',
                      'type' => 'string',
                      'example' => '479aea04-3a92-4ac3-935d-c8798c667850',
                    ),
                    'DialExceptionOld' => 
                    array (
                      'description' => '异常情况',
                      'type' => 'string',
                      'example' => '["OutboundCallError.SipTrunkError"]',
                    ),
                    'DialExceptionCodes' => 
                    array (
                      'description' => '备注信息页面展示使用字段',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '接口异常码列表',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                    ),
                    'HasLastPlaybackCompleted' => 
                    array (
                      'description' => '挂断时最后一句是否播报完成',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'ScriptName' => 
                    array (
                      'description' => '话术名字',
                      'type' => 'string',
                      'example' => '慢病线索',
                    ),
                  ),
                ),
                'example' => '[]',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"PageIndex\\": 0,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 2,\\n  \\"SearchTaskInfoList\\": [\\n    {\\n      \\"JobGroupName\\": \\"85成新（有笔记划线）2021_11_14_18_00_51\\",\\n      \\"UserId\\": \\"12334134\\",\\n      \\"ActualTime\\": 1643436089677,\\n      \\"CalledNumber\\": \\"15205879599\\",\\n      \\"TaskStatusString\\": \\"Executing\\",\\n      \\"TaskStatusName\\": \\"xxxx\\",\\n      \\"JobStatus\\": 0,\\n      \\"DialException\\": \\"[{\\\\\\"code\\\\\\":\\\\\\"OutboundCallError.SipCodeError\\\\\\", \\\\\\"params\\\\\\":[{\\\\\\"key\\\\\\":\\\\\\"SipCode\\\\\\",\\\\\\"value\\\\\\":\\\\\\"500\\\\\\"}]}]\\",\\n      \\"UserName\\": \\"xxx\\",\\n      \\"CallDurationDisplay\\": \\"ActualTime\\",\\n      \\"HasAnswered\\": true,\\n      \\"JobStatusName\\": \\"xxx\\",\\n      \\"CallDuration\\": 1646792941,\\n      \\"TaskCreateTime\\": 1646792941,\\n      \\"JobStatusString\\": \\"Scheduling\\",\\n      \\"HasReachedEndOfFlow\\": true,\\n      \\"InstanceId\\": \\"73df6283-26b2-402d-bad0-ffa489923ea1\\",\\n      \\"HasHangUpByRejection\\": true,\\n      \\"TaskEndReason\\": 0,\\n      \\"JobGroupId\\": \\"37db3113-ad34-4ba3-b930-468f016bbf95\\",\\n      \\"TaskStatus\\": 0,\\n      \\"JobId\\": \\"6203248e-e652-4ef8-a1eb-586ed7b54dc2\\",\\n      \\"RecordingDuration\\": 10,\\n      \\"TaskId\\": \\"479aea04-3a92-4ac3-935d-c8798c667850\\",\\n      \\"DialExceptionOld\\": \\"[\\\\\\"OutboundCallError.SipTrunkError\\\\\\"]\\",\\n      \\"DialExceptionCodes\\": [\\n        \\"{}\\"\\n      ],\\n      \\"HasLastPlaybackCompleted\\": true,\\n      \\"ScriptName\\": \\"慢病线索\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '搜索任务',
    ),
    'CreateNumberDistrictInfoParsingTask' => 
    array (
      'summary' => '创建号码库解析任务',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FilePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件路径',
            'type' => 'string',
            'required' => false,
            'example' => 'UPLOADED/JOB/a4274627-265f-4e14-b2d6-4ee7d4f8593e/16371db9-0abb-4ee4-afbd-c909e982e97e_止呼号码.xlsx',
          ),
        ),
        1 => 
        array (
          'name' => 'FileSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件大小',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '190464',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'The operation is not allowed. User state (DIALING) does not meet expectations (READY).',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"The operation is not allowed. User state (DIALING) does not meet expectations (READY).\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建号码归属地信息解析任务',
    ),
    'CreateNumberDistrictInfoDownloadUrl' => 
    array (
      'summary' => '创建号码库下载链接',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VersionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '版本id',
            'type' => 'string',
            'required' => false,
            'example' => 'KZpaNWMgXEfneopGBMGN9fH35b62NJjN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '1364f208-982d-4d0c-89aa-d56e22b47589',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FileHttpUrl' => 
              array (
                'description' => '下载地址',
                'type' => 'string',
                'example' => 'http://www.xxx.com/xxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"1364f208-982d-4d0c-89aa-d56e22b47589\\",\\n  \\"Success\\": true,\\n  \\"FileHttpUrl\\": \\"http://www.xxx.com/xxx\\"\\n}","type":"json"}]',
      'title' => '号码归属地信息下载地址',
    ),
    'GetNumberDistrictInfoTemplateDownloadUrl' => 
    array (
      'summary' => '获取号码库模板下载链接',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FileHttpUrl' => 
              array (
                'description' => '文件url',
                'type' => 'string',
                'example' => 'http://xxx.xx.com/xx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"FileHttpUrl\\": \\"http://xxx.xx.com/xx\\"\\n}","type":"json"}]',
      'title' => '获取号码归属地模板下载链接',
    ),
    'ApplyNumberDistrictInfoParsingResult' => 
    array (
      'summary' => '生效号码库解析结果',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VersionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '版本id',
            'type' => 'string',
            'required' => false,
            'example' => 'ffaaa8f0-2de1-438c-ba66-5ac30d83a304',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '响应',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '91102861-AEB9-56C5-8F3A-A023A0E8B5F3',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"91102861-AEB9-56C5-8F3A-A023A0E8B5F3\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '完成号码归属地解析',
    ),
    'DismissNumberDistrictInfoParsingResult' => 
    array (
      'summary' => '取消号码库解析结果',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VersionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '版本id',
            'type' => 'string',
            'required' => false,
            'example' => 'KZpaNWMgXEfneopGBMGN9fH35b62NJjN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '结果',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '结果描述',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '清除号码库解析任务',
    ),
    'DeleteAllNumberDistrictInfo' => 
    array (
      'summary' => '清空归属地号码库',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除所有号码归属地信息',
    ),
    'DescribeNumberDistrictInfoStatus' => 
    array (
      'summary' => '查询号码库状态',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '消息。',
                'type' => 'string',
                'example' => 'successful.',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '66165274-82CC-5E7D-96D7-89143BAEA138',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Status' => 
              array (
                'title' => '号码库状态',
                'description' => '号码库状态',
                'type' => 'string',
                'example' => 'Empty',
              ),
              'AppliedVersion' => 
              array (
                'title' => '已生效的号码库版本信息',
                'description' => '已生效的号码库版本信息',
                'type' => 'object',
                'properties' => 
                array (
                  'VersionId' => 
                  array (
                    'title' => '版本ID',
                    'description' => '版本ID',
                    'type' => 'string',
                    'example' => '402681645884289024',
                  ),
                  'FileName' => 
                  array (
                    'title' => '号码库文件名',
                    'description' => '号码库文件名',
                    'type' => 'string',
                    'example' => '3.mkv',
                  ),
                  'FileSize' => 
                  array (
                    'title' => '号码库文件大小',
                    'description' => '号码库文件大小',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '93',
                  ),
                ),
              ),
              'ParsingVersion' => 
              array (
                'title' => '正在解析的号码库',
                'description' => '正在解析的号码库',
                'type' => 'object',
                'properties' => 
                array (
                  'VersionId' => 
                  array (
                    'title' => '版本ID',
                    'description' => '版本ID',
                    'type' => 'string',
                    'example' => '64615',
                  ),
                  'FileName' => 
                  array (
                    'title' => '号码库文件名',
                    'description' => '号码库文件名',
                    'type' => 'string',
                    'example' => 'template (3).xlsx',
                  ),
                  'FileSize' => 
                  array (
                    'title' => '号码库文件大小',
                    'description' => '号码库文件大小',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '659968',
                  ),
                  'ParseProgress' => 
                  array (
                    'title' => '号码库解析进度',
                    'description' => '号码库解析进度',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"successful.\\",\\n  \\"RequestId\\": \\"66165274-82CC-5E7D-96D7-89143BAEA138\\",\\n  \\"Success\\": true,\\n  \\"Status\\": \\"Empty\\",\\n  \\"AppliedVersion\\": {\\n    \\"VersionId\\": \\"402681645884289024\\",\\n    \\"FileName\\": \\"3.mkv\\",\\n    \\"FileSize\\": 93\\n  },\\n  \\"ParsingVersion\\": {\\n    \\"VersionId\\": \\"64615\\",\\n    \\"FileName\\": \\"template (3).xlsx\\",\\n    \\"FileSize\\": 659968,\\n    \\"ParseProgress\\": 10\\n  }\\n}","type":"json"}]',
      'title' => '号码库解析进度状态',
    ),
    'ListChatbotInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'AgentKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Bots' => 
              array (
                'description' => '机器⼈列表信息',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '机器⼈列表信息',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Introduction' => 
                    array (
                      'description' => '机器⼈备注',
                      'type' => 'string',
                      'example' => '这是直播的描述',
                    ),
                    'Avatar' => 
                    array (
                      'description' => '头像url',
                      'type' => 'string',
                      'example' => 'https://ccrm.wengine.cn/ccrm/system/common/fileDownload/noToken?fileId=975cdeaa064846e3b6004abd9ba1d7c8',
                    ),
                    'TimeZone' => 
                    array (
                      'description' => '机器⼈的时区，参考《公共-时区码》',
                      'type' => 'string',
                      'example' => 'Asia/Shanghai',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2022-01-18T02:36:00Z',
                    ),
                    'LanguageCode' => 
                    array (
                      'description' => '机器⼈服务的语⾔，如zh-cn、 en-us',
                      'type' => 'string',
                      'example' => 'zh-cn',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => 'e874fcf0-d2f4-4e62-9377-b6f35fe55210',
                    ),
                    'Name' => 
                    array (
                      'description' => '机器人名字',
                      'type' => 'string',
                      'example' => '智能回访2',
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '个数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页号',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'TotalCount' => 
              array (
                'description' => '总计个数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Bots\\": [\\n    {\\n      \\"Introduction\\": \\"这是直播的描述\\",\\n      \\"Avatar\\": \\"https://ccrm.wengine.cn/ccrm/system/common/fileDownload/noToken?fileId=975cdeaa064846e3b6004abd9ba1d7c8\\",\\n      \\"TimeZone\\": \\"Asia/Shanghai\\",\\n      \\"CreateTime\\": \\"2022-01-18T02:36:00Z\\",\\n      \\"LanguageCode\\": \\"zh-cn\\",\\n      \\"InstanceId\\": \\"e874fcf0-d2f4-4e62-9377-b6f35fe55210\\",\\n      \\"Name\\": \\"智能回访2\\"\\n    }\\n  ],\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 5,\\n  \\"TotalCount\\": 100\\n}","type":"json"}]',
      'title' => '查询外呼实例列表',
    ),
    'CreateInstanceBindNumber' => 
    array (
      'summary' => '创建实例绑定号码',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Number',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的号码',
            'type' => 'string',
            'required' => false,
            'example' => '10088',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceList',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '智能外呼实例ID。',
            'description' => '智能外呼实例ID列表',
            'type' => 'string',
            'required' => false,
            'example' => '1,2,4,5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<CreateInstanceBindNumberResponse>',
            'description' => 'BaseResponse<CreateInstanceBindNumberResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'List' => 
                  array (
                    'description' => '号码数据列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '号码数据列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => '96b847ad-2683-4794-b7b4-7ef094fb81f6',
                        ),
                        'Success' => 
                        array (
                          'description' => '是否绑定成功',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Data\\": {\\n    \\"List\\": [\\n      {\\n        \\"InstanceId\\": \\"96b847ad-2683-4794-b7b4-7ef094fb81f6\\",\\n        \\"Success\\": true\\n      }\\n    ]\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\"\\n}","type":"json"}]',
      'title' => '实例绑定号码',
    ),
    'CreateTaskExportTask' => 
    array (
      'summary' => '创建外呼历史导出异步任务。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'example' => '1dcb09c5-d5db-4397-bf65-db854463beea',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskCreateTimeGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间搜索开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646496000000',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskCreateTimeLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间搜索截止时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646582400000',
          ),
        ),
        3 => 
        array (
          'name' => 'JobGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务组ID',
            'type' => 'string',
            'required' => false,
            'example' => 'cb731aee-0a5b-4c2b-924c-d9e82eb1d8d7',
          ),
        ),
        4 => 
        array (
          'name' => 'HasAnswered',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '有无应答',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'HasHangUpByRejection',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拒识挂机',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'HasReachedEndOfFlow',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对话完结',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'JobGroupNameQuery',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称',
            'type' => 'string',
            'required' => false,
            'example' => '测试_20220217_160147',
          ),
        ),
        8 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业ID',
            'type' => 'string',
            'required' => false,
            'example' => '82097dd5-54df-475f-beba-eec8f4b7a3e1',
          ),
        ),
        9 => 
        array (
          'name' => 'CalledNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被叫号码',
            'type' => 'string',
            'required' => false,
            'example' => '11111111111',
          ),
        ),
        10 => 
        array (
          'name' => 'UserIdMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID',
            'type' => 'string',
            'required' => false,
            'example' => '82097dd5-54df-475f-beba-eec8f4b7a3e1',
          ),
        ),
        11 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID',
            'type' => 'string',
            'required' => false,
            'example' => '64ebe700-91b4-49cb-b457-0b7c0b598a86',
          ),
        ),
        12 => 
        array (
          'name' => 'ActualTimeGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨打时间搜索开始时间(包含)',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646496000000',
          ),
        ),
        13 => 
        array (
          'name' => 'ActualTimeLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨打时间搜索截止时间(包含)',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1646582400000',
          ),
        ),
        14 => 
        array (
          'name' => 'RecordingDurationGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '振铃时长搜索开始时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        15 => 
        array (
          'name' => 'RecordingDurationLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '振铃时长搜索截止时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        16 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码（从0开始）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        17 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        18 => 
        array (
          'name' => 'OtherId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '其他ID',
            'type' => 'string',
            'required' => false,
            'example' => '64ebe700-91b4-49cb-b457-0b7c0b598a86',
          ),
        ),
        19 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序字段',
            'type' => 'string',
            'required' => false,
            'example' => 'actualTime',
          ),
        ),
        20 => 
        array (
          'name' => 'SortOrder',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序类型 asr:升序,desc:降序',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        21 => 
        array (
          'name' => 'CallDurationGte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话时长搜索最小时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        22 => 
        array (
          'name' => 'CallDurationLte',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话时长搜索最大时间',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        23 => 
        array (
          'name' => 'JobStatusStringList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '作业状态',
            'type' => 'string',
            'required' => false,
            'example' => 'Succeeded',
          ),
        ),
        24 => 
        array (
          'name' => 'TaskStatusStringList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通话状态',
            'type' => 'string',
            'required' => false,
            'example' => 'Succeeded,Failed',
          ),
        ),
        25 => 
        array (
          'name' => 'ScriptNameQuery',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景名称',
            'type' => 'string',
            'required' => false,
            'example' => '测试',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C377C5FF-4F94-1B23-89D0-50C560623EE4',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => '[]',
              ),
              'TaskId' => 
              array (
                'description' => '导出任务ID',
                'type' => 'string',
                'example' => 'a7d6dcff1b8b40f4a8b769a9c24e7852',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"C377C5FF-4F94-1B23-89D0-50C560623EE4\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"[]\\",\\n  \\"TaskId\\": \\"a7d6dcff1b8b40f4a8b769a9c24e7852\\"\\n}","type":"json"}]',
      'title' => '外呼历史导出',
    ),
    'DescribeTenantBindNumber' => 
    array (
      'summary' => '号码绑定实例列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Number',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的号码',
            'type' => 'string',
            'required' => false,
            'example' => '95187',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<TenantBindNumberResponse>',
            'description' => 'BaseResponse<TenantBindNumberResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'List' => 
                  array (
                    'description' => '作业组描述',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => 'e2d7a184-7d6c-45d4-ac24-34ab48f54669',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名字',
                          'type' => 'string',
                          'example' => 'xxxx',
                        ),
                        'IsBinding' => 
                        array (
                          'title' => '是否是绑定状态',
                          'description' => '是否是绑定状态',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '1364f208-982d-4d0c-89aa-d56e22b47589',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Data\\": {\\n    \\"List\\": [\\n      {\\n        \\"InstanceId\\": \\"e2d7a184-7d6c-45d4-ac24-34ab48f54669\\",\\n        \\"InstanceName\\": \\"xxxx\\",\\n        \\"IsBinding\\": true\\n      }\\n    ]\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"1364f208-982d-4d0c-89aa-d56e22b47589\\"\\n}","type":"json"}]',
      'title' => '租户下的实力绑定号码情况',
    ),
    'ListAllTenantBindNumberBinding' => 
    array (
      'summary' => '租户绑定号码列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<ListAllTenantBindNumberBindingResponse>',
            'description' => 'BaseResponse<ListAllTenantBindNumberBindingResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'List' => 
                  array (
                    'description' => '数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回对象',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BindingId' => 
                        array (
                          'description' => '绑定id',
                          'type' => 'string',
                          'example' => 'b5bfb844-ce85-4779-bc8f-161fba46aa07',
                        ),
                        'Number' => 
                        array (
                          'description' => '号码',
                          'type' => 'string',
                          'example' => '15005059355',
                        ),
                        'TrunkName' => 
                        array (
                          'description' => 'trunk名称',
                          'type' => 'string',
                          'example' => '小码-公共',
                        ),
                        'SerializedParams' => 
                        array (
                          'description' => '策略',
                          'type' => 'string',
                          'example' => '{\\"rateLimitPeriod\\":\\"1\\",\\"rateLimitCount\\":\\"1\\"}',
                        ),
                        'InstanceNameList' => 
                        array (
                          'description' => '实例名字列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '实例名字列表',
                            'type' => 'string',
                            'example' => 'discover',
                          ),
                        ),
                        'BillingType' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'A4BEAB4B-C810-5386-B72A-1A35FF1E6B15',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Data\\": {\\n    \\"List\\": [\\n      {\\n        \\"BindingId\\": \\"b5bfb844-ce85-4779-bc8f-161fba46aa07\\",\\n        \\"Number\\": \\"15005059355\\",\\n        \\"TrunkName\\": \\"小码-公共\\",\\n        \\"SerializedParams\\": \\"{\\\\\\\\\\\\\\"rateLimitPeriod\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"rateLimitCount\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\"}\\",\\n        \\"InstanceNameList\\": [\\n          \\"discover\\"\\n        ],\\n        \\"BillingType\\": \\"\\"\\n      }\\n    ]\\n  },\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"A4BEAB4B-C810-5386-B72A-1A35FF1E6B15\\"\\n}","type":"json"}]',
      'title' => '租户绑定的号码列表',
    ),
    'GenerateUploadUrl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Key',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse<OssUploadParams>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AccessId' => 
                  array (
                    'type' => 'string',
                  ),
                  'Policy' => 
                  array (
                    'type' => 'string',
                  ),
                  'Signature' => 
                  array (
                    'type' => 'string',
                  ),
                  'Folder' => 
                  array (
                    'type' => 'string',
                  ),
                  'Host' => 
                  array (
                    'type' => 'string',
                  ),
                  'Expire' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'Success' => 
                  array (
                    'type' => 'boolean',
                  ),
                  'Message' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
    ),
    'UploadScriptRecording' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'c209abb3-6804-4a75-b2c7-dd55c8c61b6a',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '话术id',
            'type' => 'string',
            'required' => true,
            'example' => 'd004cfd2-6a81-491c-83c6-cbe186620c95',
          ),
        ),
        2 => 
        array (
          'name' => 'FileId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件在oss上面的key',
            'type' => 'string',
            'required' => true,
            'example' => 'cab_script_recording/upload/88a56c18-3dc8-4338-9116-911deb169780/hello.wav',
          ),
        ),
        3 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件名称',
            'type' => 'string',
            'required' => true,
            'example' => 'hello.wav',
          ),
        ),
        4 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音文件的文本内容',
            'type' => 'string',
            'required' => true,
            'example' => '您好',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Uuid' => 
              array (
                'description' => '录音唯一ID',
                'type' => 'string',
                'example' => '5feaab8a-97fd-4720-8108-79e017f2d3ac',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Uuid\\": \\"5feaab8a-97fd-4720-8108-79e017f2d3ac\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '【废弃】上传话术录音',
      'summary' => '上传录音文件',
    ),
    'DownloadScriptRecording' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'b3865dc3-40fa-4afd-9fe4-dc7cda305a24',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音所在场景id',
            'type' => 'string',
            'required' => true,
            'example' => 'aa279896-64a6-4182-864c-4f2b04ec8d17',
          ),
        ),
        2 => 
        array (
          'name' => 'Uuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音唯一ID',
            'type' => 'string',
            'required' => true,
            'example' => '5feaab8a-97fd-4720-8108-79e017f2d3ac',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DownloadParams' => 
              array (
                'description' => '参数',
                'type' => 'object',
                'properties' => 
                array (
                  'SignatureUrl' => 
                  array (
                    'description' => '一个指向录音文件的url，可使用该地址播放或下载。',
                    'type' => 'string',
                    'example' => 'http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&OSSAccessKeyId=LTAI****cqw&Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D',
                  ),
                  'FileName' => 
                  array (
                    'description' => '录音文件名称',
                    'type' => 'string',
                    'example' => '281eb174-3865-41c1-9274-7b6813edadab.wav',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"DownloadParams\\": {\\n    \\"SignatureUrl\\": \\"http://tiangong-staging.oss-cn-shanghai.aliyuncs.com/record/281eb174-3865-41c1-9274-7b6813edadab.wav?Expires=1578624046&OSSAccessKeyId=LTAI****cqw&Signature=dL2dxWS6VcdZrvG9xOMOBMSP3Fg%3D\\",\\n    \\"FileName\\": \\"281eb174-3865-41c1-9274-7b6813edadab.wav\\"\\n  }\\n}","type":"json"}]',
      'title' => '下载录音(获取录音地址)',
      'summary' => '下载录音(获取录音地址)',
    ),
    'ListScriptRecording' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音所属实例id',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'c209abb3-6804-4a75-b2c7-dd55c8c61b6a
',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音所属场景id',
            'type' => 'string',
            'required' => true,
            'example' => 'd004cfd2-6a81-491c-83c6-cbe186620c95
',
          ),
        ),
        2 => 
        array (
          'name' => 'UuidsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音id列表(JSON格式)',
            'type' => 'string',
            'required' => false,
            'example' => '["d17d5bfa-4972-4389-9718-f9602edabe48"]',
          ),
        ),
        3 => 
        array (
          'name' => 'StatesJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音状态',
            'type' => 'string',
            'required' => false,
            'example' => '[
     "8"
]',
          ),
        ),
        4 => 
        array (
          'name' => 'Search',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索条件：可根据录音名称、录音内容查询',
            'type' => 'string',
            'required' => false,
            'example' => '您好',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的条数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'RefIdsJson',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC
',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '接口状态',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页号',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总计个数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '99',
              ),
              'ScriptRecordings' => 
              array (
                'description' => '录音列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RecordingContent' => 
                    array (
                      'description' => '录音内容',
                      'type' => 'string',
                      'example' => '您好！',
                    ),
                    'State' => 
                    array (
                      'description' => '录音状态',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '8',
                    ),
                    'StorageUuid' => 
                    array (
                      'description' => '存储UUID',
                      'type' => 'string',
                      'example' => '393674ed-3b5d-db44-0fda-615d05210178
',
                    ),
                    'StateExtend' => 
                    array (
                      'description' => '状态扩展',
                      'type' => 'string',
                      'example' => '无',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '所属实例id',
                      'type' => 'string',
                      'example' => 'ff0fb845-9f90-46d3-9716-d36b8a1e753a',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '更新时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1654601332000',
                    ),
                    'ScriptId' => 
                    array (
                      'description' => '录音所属场景id',
                      'type' => 'string',
                      'example' => '6019b692-fd9e-4adb-8877-cef6a297b234',
                    ),
                    'Uuid' => 
                    array (
                      'description' => '录音唯一id',
                      'type' => 'string',
                      'example' => '0a77386e-6402-8d23-4adf-6ec13b3f404d
',
                    ),
                    'GmtUpload' => 
                    array (
                      'description' => '录音上传时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1654601332000',
                    ),
                    'RecordingDuration' => 
                    array (
                      'description' => '录音时长，单位秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'RecordingName' => 
                    array (
                      'description' => '录音名称',
                      'type' => 'string',
                      'example' => 'hello.wav',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2022-07-11T07:51:49.000+0000',
                    ),
                    'InnerId' => 
                    array (
                      'description' => '录音文件在实例下的id。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'RefId' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\\\n\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 99,\\n  \\"ScriptRecordings\\": [\\n    {\\n      \\"RecordingContent\\": \\"您好！\\",\\n      \\"State\\": 8,\\n      \\"StorageUuid\\": \\"393674ed-3b5d-db44-0fda-615d05210178\\\\n\\",\\n      \\"StateExtend\\": \\"无\\",\\n      \\"InstanceId\\": \\"ff0fb845-9f90-46d3-9716-d36b8a1e753a\\",\\n      \\"GmtModified\\": 1654601332000,\\n      \\"ScriptId\\": \\"6019b692-fd9e-4adb-8877-cef6a297b234\\",\\n      \\"Uuid\\": \\"0a77386e-6402-8d23-4adf-6ec13b3f404d\\\\n\\",\\n      \\"GmtUpload\\": 1654601332000,\\n      \\"RecordingDuration\\": 10,\\n      \\"RecordingName\\": \\"hello.wav\\",\\n      \\"GmtCreate\\": 0,\\n      \\"InnerId\\": \\"1\\",\\n      \\"RefId\\": \\"\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '【废弃】查询录音文件列表',
      'summary' => '查询录音文件列表',
    ),
    'DeleteScriptRecording' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音所属实例id',
            'type' => 'string',
            'required' => true,
            'example' => '1eefcb81-cd58-4143-8180-6a962d79d708',
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音所属场景id',
            'type' => 'string',
            'required' => true,
            'example' => 'dcc42f0d-cfd8-4866-9bbf-002042503745',
          ),
        ),
        2 => 
        array (
          'name' => 'UuidsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音id列表(JSON格式)',
            'type' => 'string',
            'required' => false,
            'example' => '[
      "d17d5bfa-4972-4389-9718-f9602edabe48"
]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http 状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示信息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '56666881-887A-530A-B679-C3B6B6B142C0',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"56666881-887A-530A-B679-C3B6B6B142C0\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '【废弃】删除录音',
      'summary' => '删除录音',
    ),
    'ListSchedulerInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被查询的实例的',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1092143545442862',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Message' => 
              array (
                'description' => '接口提示消息',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SchedulerInstances' => 
              array (
                'description' => '调度器实例列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '调度器实例列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Business' => 
                    array (
                      'description' => '业务线名称',
                      'type' => 'string',
                      'example' => 'CLOUD_CODE_PUBLISHER',
                    ),
                    'MaxConcurrency' => 
                    array (
                      'description' => '最大并发',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '5',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id',
                      'type' => 'string',
                      'example' => '254EB995-DEDF-48A4-9101-9CA5B72FFBCC',
                    ),
                    'BaseStrategy' => 
                    array (
                      'description' => '基础策略',
                      'type' => 'string',
                      'example' => '{}',
                    ),
                    'OwnerId' => 
                    array (
                      'description' => '拥有者id',
                      'type' => 'string',
                      'example' => '234852938',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Code\\": \\"OK\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n  \\"Success\\": true,\\n  \\"SchedulerInstances\\": [\\n    {\\n      \\"Business\\": \\"CLOUD_CODE_PUBLISHER\\",\\n      \\"MaxConcurrency\\": 5,\\n      \\"InstanceId\\": \\"254EB995-DEDF-48A4-9101-9CA5B72FFBCC\\",\\n      \\"BaseStrategy\\": \\"{}\\",\\n      \\"OwnerId\\": \\"234852938\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '列出计划任务实例',
    ),
    'QueryScriptWaveforms' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptContent',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'ScriptWaveforms' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ScriptContent' => 
                    array (
                      'type' => 'string',
                    ),
                    'ScriptWaveformId' => 
                    array (
                      'type' => 'string',
                    ),
                    'FileName' => 
                    array (
                      'type' => 'string',
                    ),
                    'ScriptId' => 
                    array (
                      'type' => 'string',
                    ),
                    'FileId' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 0,\\n  \\"Code\\": \\"\\",\\n  \\"Message\\": \\"\\",\\n  \\"RequestId\\": \\"\\",\\n  \\"Success\\": true,\\n  \\"ScriptWaveforms\\": [\\n    {\\n      \\"ScriptContent\\": \\"\\",\\n      \\"ScriptWaveformId\\": \\"\\",\\n      \\"FileName\\": \\"\\",\\n      \\"ScriptId\\": \\"\\",\\n      \\"FileId\\": \\"\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询话术录音文件列表（已作废）',
      'summary' => '查询话术文本的录音列表。',
    ),
    'ImportScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'SignatureUrl',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'ScriptId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 0,\\n  \\"RequestId\\": \\"\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"\\",\\n  \\"Message\\": \\"\\",\\n  \\"ScriptId\\": \\"\\"\\n}","type":"json"}]',
      'title' => '导入话术（已废弃）',
      'summary' => '导入话术。',
    ),
    'DeleteScriptWaveform' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptWaveformId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 0,\\n  \\"Code\\": \\"\\",\\n  \\"Message\\": \\"\\",\\n  \\"RequestId\\": \\"\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除话术录音（已作废）',
      'summary' => '删除话术录音。',
    ),
    'CreateScriptWaveform' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ScriptId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptContent',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'FileId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'ScriptWaveformId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotExist.Instance',
            'errorMessage' => 'The specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NotExist.Script',
            'errorMessage' => 'The specified Script does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request. Please try again later. Submit a ticket if the error still exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 0,\\n  \\"RequestId\\": \\"\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"\\",\\n  \\"Message\\": \\"\\",\\n  \\"ScriptWaveformId\\": \\"\\"\\n}","type":"json"}]',
      'title' => '创建播报话术的录音（已作废）',
      'summary' => '创建播报话术的录音。',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'outboundbot.cn-shanghai.aliyuncs.com',
    ),
  ),
);