<?php

declare(strict_types=1);

namespace Dew\Acs\Idrsservice;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createSignature(array $arguments = [])
 * @method \Http\Promise\Promise createSignatureAsync($arguments = [])
 * @method \Dew\Acs\Result getWatermark(array $arguments = [])
 * @method \Http\Promise\Promise getWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result getDetectProcess(array $arguments = [])
 * @method \Http\Promise\Promise getDetectProcessAsync($arguments = [])
 * @method \Dew\Acs\Result getDetectProcessJsonFile(array $arguments = [])
 * @method \Http\Promise\Promise getDetectProcessJsonFileAsync($arguments = [])
 * @method \Dew\Acs\Result getRecordResult(array $arguments = [])
 * @method \Http\Promise\Promise getRecordResultAsync($arguments = [])
 * @method \Dew\Acs\Result associateRoom(array $arguments = [])
 * @method \Http\Promise\Promise associateRoomAsync($arguments = [])
 * @method \Dew\Acs\Result createApp(array $arguments = [])
 * @method \Http\Promise\Promise createAppAsync($arguments = [])
 * @method \Dew\Acs\Result createDepartment(array $arguments = [])
 * @method \Http\Promise\Promise createDepartmentAsync($arguments = [])
 * @method \Dew\Acs\Result createDetectProcess(array $arguments = [])
 * @method \Http\Promise\Promise createDetectProcessAsync($arguments = [])
 * @method \Dew\Acs\Result createRule(array $arguments = [])
 * @method \Http\Promise\Promise createRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createTaskGroup(array $arguments = [])
 * @method \Http\Promise\Promise createTaskGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createUserDepartments(array $arguments = [])
 * @method \Http\Promise\Promise createUserDepartmentsAsync($arguments = [])
 * @method \Dew\Acs\Result createWatermark(array $arguments = [])
 * @method \Http\Promise\Promise createWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result deleteApp(array $arguments = [])
 * @method \Http\Promise\Promise deleteAppAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDepartment(array $arguments = [])
 * @method \Http\Promise\Promise deleteDepartmentAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDetectProcess(array $arguments = [])
 * @method \Http\Promise\Promise deleteDetectProcessAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUser(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUserDepartments(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserDepartmentsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteWatermark(array $arguments = [])
 * @method \Http\Promise\Promise deleteWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result getApp(array $arguments = [])
 * @method \Http\Promise\Promise getAppAsync($arguments = [])
 * @method \Dew\Acs\Result getDepartment(array $arguments = [])
 * @method \Http\Promise\Promise getDepartmentAsync($arguments = [])
 * @method \Dew\Acs\Result getDetection(array $arguments = [])
 * @method \Http\Promise\Promise getDetectionAsync($arguments = [])
 * @method \Dew\Acs\Result getPreSignedUrl(array $arguments = [])
 * @method \Http\Promise\Promise getPreSignedUrlAsync($arguments = [])
 * @method \Dew\Acs\Result getRule(array $arguments = [])
 * @method \Http\Promise\Promise getRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getTask(array $arguments = [])
 * @method \Http\Promise\Promise getTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskGroup(array $arguments = [])
 * @method \Http\Promise\Promise getTaskGroupAsync($arguments = [])
 * @method \Dew\Acs\Result getUser(array $arguments = [])
 * @method \Http\Promise\Promise getUserAsync($arguments = [])
 * @method \Dew\Acs\Result getVideoMergeTask(array $arguments = [])
 * @method \Http\Promise\Promise getVideoMergeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listApps(array $arguments = [])
 * @method \Http\Promise\Promise listAppsAsync($arguments = [])
 * @method \Dew\Acs\Result listDepartments(array $arguments = [])
 * @method \Http\Promise\Promise listDepartmentsAsync($arguments = [])
 * @method \Dew\Acs\Result listDetections(array $arguments = [])
 * @method \Http\Promise\Promise listDetectionsAsync($arguments = [])
 * @method \Dew\Acs\Result listDetectProcesses(array $arguments = [])
 * @method \Http\Promise\Promise listDetectProcessesAsync($arguments = [])
 * @method \Dew\Acs\Result listFiles(array $arguments = [])
 * @method \Http\Promise\Promise listFilesAsync($arguments = [])
 * @method \Dew\Acs\Result listRecordResults(array $arguments = [])
 * @method \Http\Promise\Promise listRecordResultsAsync($arguments = [])
 * @method \Dew\Acs\Result listRules(array $arguments = [])
 * @method \Http\Promise\Promise listRulesAsync($arguments = [])
 * @method \Dew\Acs\Result listTaskGroups(array $arguments = [])
 * @method \Http\Promise\Promise listTaskGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result listTaskItems(array $arguments = [])
 * @method \Http\Promise\Promise listTaskItemsAsync($arguments = [])
 * @method \Dew\Acs\Result listTasks(array $arguments = [])
 * @method \Http\Promise\Promise listTasksAsync($arguments = [])
 * @method \Dew\Acs\Result listUsers(array $arguments = [])
 * @method \Http\Promise\Promise listUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listWatermarks(array $arguments = [])
 * @method \Http\Promise\Promise listWatermarksAsync($arguments = [])
 * @method \Dew\Acs\Result renameDetectProcess(array $arguments = [])
 * @method \Http\Promise\Promise renameDetectProcessAsync($arguments = [])
 * @method \Dew\Acs\Result updateApp(array $arguments = [])
 * @method \Http\Promise\Promise updateAppAsync($arguments = [])
 * @method \Dew\Acs\Result updateDepartment(array $arguments = [])
 * @method \Http\Promise\Promise updateDepartmentAsync($arguments = [])
 * @method \Dew\Acs\Result updateDetectProcess(array $arguments = [])
 * @method \Http\Promise\Promise updateDetectProcessAsync($arguments = [])
 * @method \Dew\Acs\Result updateRule(array $arguments = [])
 * @method \Http\Promise\Promise updateRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateUser(array $arguments = [])
 * @method \Http\Promise\Promise updateUserAsync($arguments = [])
 * @method \Dew\Acs\Result updateWatermark(array $arguments = [])
 * @method \Http\Promise\Promise updateWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result uploadReport(array $arguments = [])
 * @method \Http\Promise\Promise uploadReportAsync($arguments = [])
 * @method \Dew\Acs\Result getRecordsByFeeId(array $arguments = [])
 * @method \Http\Promise\Promise getRecordsByFeeIdAsync($arguments = [])
 * @method \Dew\Acs\Result getStatisticsRecordsByFeeId(array $arguments = [])
 * @method \Http\Promise\Promise getStatisticsRecordsByFeeIdAsync($arguments = [])
 * @method \Dew\Acs\Result asrSentence(array $arguments = [])
 * @method \Http\Promise\Promise asrSentenceAsync($arguments = [])
 * @method \Dew\Acs\Result faceCompare(array $arguments = [])
 * @method \Http\Promise\Promise faceCompareAsync($arguments = [])
 * @method \Dew\Acs\Result ttsCommon(array $arguments = [])
 * @method \Http\Promise\Promise ttsCommonAsync($arguments = [])
 * @method \Dew\Acs\Result ttsTask(array $arguments = [])
 * @method \Http\Promise\Promise ttsTaskAsync($arguments = [])
 * @method \Dew\Acs\Result leaveRoom(array $arguments = [])
 * @method \Http\Promise\Promise leaveRoomAsync($arguments = [])
 * @method \Dew\Acs\Result faceRecognize(array $arguments = [])
 * @method \Http\Promise\Promise faceRecognizeAsync($arguments = [])
 * @method \Dew\Acs\Result faceLiveness(array $arguments = [])
 * @method \Http\Promise\Promise faceLivenessAsync($arguments = [])
 * @method \Dew\Acs\Result createTtsQuestionGroup(array $arguments = [])
 * @method \Http\Promise\Promise createTtsQuestionGroupAsync($arguments = [])
 * @method \Dew\Acs\Result getAsrResult(array $arguments = [])
 * @method \Http\Promise\Promise getAsrResultAsync($arguments = [])
 * @method \Dew\Acs\Result joinRoom(array $arguments = [])
 * @method \Http\Promise\Promise joinRoomAsync($arguments = [])
 * @method \Dew\Acs\Result createTtsQuestion(array $arguments = [])
 * @method \Http\Promise\Promise createTtsQuestionAsync($arguments = [])
 * @method \Dew\Acs\Result asrTask(array $arguments = [])
 * @method \Http\Promise\Promise asrTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getTtsQuestionByGroupId(array $arguments = [])
 * @method \Http\Promise\Promise getTtsQuestionByGroupIdAsync($arguments = [])
 * @method \Dew\Acs\Result getRecordsByOuterBusinessId(array $arguments = [])
 * @method \Http\Promise\Promise getRecordsByOuterBusinessIdAsync($arguments = [])
 */
final class IdrsserviceClient extends AcsClient
{
    //
}
