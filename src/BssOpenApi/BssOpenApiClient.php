<?php

declare(strict_types=1);

namespace Dew\Acs\BssOpenApi;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result queryAccountBalance(array $arguments = [])
 * @method \Http\Promise\Promise queryAccountBalanceAsync($arguments = [])
 * @method \Dew\Acs\Result queryAccountTransactionDetails(array $arguments = [])
 * @method \Http\Promise\Promise queryAccountTransactionDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result queryAccountTransactions(array $arguments = [])
 * @method \Http\Promise\Promise queryAccountTransactionsAsync($arguments = [])
 * @method \Dew\Acs\Result queryRelationList(array $arguments = [])
 * @method \Http\Promise\Promise queryRelationListAsync($arguments = [])
 * @method \Dew\Acs\Result queryPermissionList(array $arguments = [])
 * @method \Http\Promise\Promise queryPermissionListAsync($arguments = [])
 * @method \Dew\Acs\Result getAccountRelation(array $arguments = [])
 * @method \Http\Promise\Promise getAccountRelationAsync($arguments = [])
 * @method \Dew\Acs\Result addAccountRelation(array $arguments = [])
 * @method \Http\Promise\Promise addAccountRelationAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountRelation(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountRelationAsync($arguments = [])
 * @method \Dew\Acs\Result confirmRelation(array $arguments = [])
 * @method \Http\Promise\Promise confirmRelationAsync($arguments = [])
 * @method \Dew\Acs\Result relieveAccountRelation(array $arguments = [])
 * @method \Http\Promise\Promise relieveAccountRelationAsync($arguments = [])
 * @method \Dew\Acs\Result queryInstanceByTag(array $arguments = [])
 * @method \Http\Promise\Promise queryInstanceByTagAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result queryPrepaidCards(array $arguments = [])
 * @method \Http\Promise\Promise queryPrepaidCardsAsync($arguments = [])
 * @method \Dew\Acs\Result queryRedeem(array $arguments = [])
 * @method \Http\Promise\Promise queryRedeemAsync($arguments = [])
 * @method \Dew\Acs\Result queryCashCoupons(array $arguments = [])
 * @method \Http\Promise\Promise queryCashCouponsAsync($arguments = [])
 * @method \Dew\Acs\Result createSavingsPlansInstance(array $arguments = [])
 * @method \Http\Promise\Promise createSavingsPlansInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result querySavingsPlansInstance(array $arguments = [])
 * @method \Http\Promise\Promise querySavingsPlansInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result querySavingsPlansDeductLog(array $arguments = [])
 * @method \Http\Promise\Promise querySavingsPlansDeductLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeSavingsPlansUsageTotal(array $arguments = [])
 * @method \Http\Promise\Promise describeSavingsPlansUsageTotalAsync($arguments = [])
 * @method \Dew\Acs\Result describeSavingsPlansUsageDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSavingsPlansUsageDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSavingsPlansCoverageTotal(array $arguments = [])
 * @method \Http\Promise\Promise describeSavingsPlansCoverageTotalAsync($arguments = [])
 * @method \Dew\Acs\Result describeSavingsPlansCoverageDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSavingsPlansCoverageDetailAsync($arguments = [])
 * @method \Dew\Acs\Result querySavingsPlansDiscount(array $arguments = [])
 * @method \Http\Promise\Promise querySavingsPlansDiscountAsync($arguments = [])
 * @method \Dew\Acs\Result createResellerUserQuota(array $arguments = [])
 * @method \Http\Promise\Promise createResellerUserQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result setResellerUserQuota(array $arguments = [])
 * @method \Http\Promise\Promise setResellerUserQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result changeResellerConsumeAmount(array $arguments = [])
 * @method \Http\Promise\Promise changeResellerConsumeAmountAsync($arguments = [])
 * @method \Dew\Acs\Result queryResellerAvailableQuota(array $arguments = [])
 * @method \Http\Promise\Promise queryResellerAvailableQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result setResellerUserAlarmThreshold(array $arguments = [])
 * @method \Http\Promise\Promise setResellerUserAlarmThresholdAsync($arguments = [])
 * @method \Dew\Acs\Result queryResellerUserAlarmThreshold(array $arguments = [])
 * @method \Http\Promise\Promise queryResellerUserAlarmThresholdAsync($arguments = [])
 * @method \Dew\Acs\Result setResellerUserStatus(array $arguments = [])
 * @method \Http\Promise\Promise setResellerUserStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createAgAccount(array $arguments = [])
 * @method \Http\Promise\Promise createAgAccountAsync($arguments = [])
 * @method \Dew\Acs\Result getCustomerAccountInfo(array $arguments = [])
 * @method \Http\Promise\Promise getCustomerAccountInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getCustomerList(array $arguments = [])
 * @method \Http\Promise\Promise getCustomerListAsync($arguments = [])
 * @method \Dew\Acs\Result queryResourcePackageInstances(array $arguments = [])
 * @method \Http\Promise\Promise queryResourcePackageInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result queryDPUtilizationDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryDPUtilizationDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryRIUtilizationDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryRIUtilizationDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourceUsageTotal(array $arguments = [])
 * @method \Http\Promise\Promise describeResourceUsageTotalAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourceUsageDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeResourceUsageDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourceCoverageTotal(array $arguments = [])
 * @method \Http\Promise\Promise describeResourceCoverageTotalAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourceCoverageDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeResourceCoverageDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourcePackageProduct(array $arguments = [])
 * @method \Http\Promise\Promise describeResourcePackageProductAsync($arguments = [])
 * @method \Dew\Acs\Result getResourcePackagePrice(array $arguments = [])
 * @method \Http\Promise\Promise getResourcePackagePriceAsync($arguments = [])
 * @method \Dew\Acs\Result createResourcePackage(array $arguments = [])
 * @method \Http\Promise\Promise createResourcePackageAsync($arguments = [])
 * @method \Dew\Acs\Result renewResourcePackage(array $arguments = [])
 * @method \Http\Promise\Promise renewResourcePackageAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeResourcePackage(array $arguments = [])
 * @method \Http\Promise\Promise upgradeResourcePackageAsync($arguments = [])
 * @method \Dew\Acs\Result subscribeBillToOSS(array $arguments = [])
 * @method \Http\Promise\Promise subscribeBillToOSSAsync($arguments = [])
 * @method \Dew\Acs\Result unsubscribeBillToOSS(array $arguments = [])
 * @method \Http\Promise\Promise unsubscribeBillToOSSAsync($arguments = [])
 * @method \Dew\Acs\Result queryBillToOSSSubscription(array $arguments = [])
 * @method \Http\Promise\Promise queryBillToOSSSubscriptionAsync($arguments = [])
 * @method \Dew\Acs\Result queryBillOverview(array $arguments = [])
 * @method \Http\Promise\Promise queryBillOverviewAsync($arguments = [])
 * @method \Dew\Acs\Result queryBill(array $arguments = [])
 * @method \Http\Promise\Promise queryBillAsync($arguments = [])
 * @method \Dew\Acs\Result queryAccountBill(array $arguments = [])
 * @method \Http\Promise\Promise queryAccountBillAsync($arguments = [])
 * @method \Dew\Acs\Result querySettleBill(array $arguments = [])
 * @method \Http\Promise\Promise querySettleBillAsync($arguments = [])
 * @method \Dew\Acs\Result queryInstanceBill(array $arguments = [])
 * @method \Http\Promise\Promise queryInstanceBillAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceBill(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceBillAsync($arguments = [])
 * @method \Dew\Acs\Result queryInstanceGaapCost(array $arguments = [])
 * @method \Http\Promise\Promise queryInstanceGaapCostAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAmortizedCostByAmortizationPeriod(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAmortizedCostByAmortizationPeriodAsync($arguments = [])
 * @method \Dew\Acs\Result describeProductAmortizedCostByAmortizationPeriod(array $arguments = [])
 * @method \Http\Promise\Promise describeProductAmortizedCostByAmortizationPeriodAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAmortizedCostByConsumePeriod(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAmortizedCostByConsumePeriodAsync($arguments = [])
 * @method \Dew\Acs\Result describeProductAmortizedCostByConsumePeriod(array $arguments = [])
 * @method \Http\Promise\Promise describeProductAmortizedCostByConsumePeriodAsync($arguments = [])
 * @method \Dew\Acs\Result describeSplitItemBill(array $arguments = [])
 * @method \Http\Promise\Promise describeSplitItemBillAsync($arguments = [])
 * @method \Dew\Acs\Result querySplitItemBill(array $arguments = [])
 * @method \Http\Promise\Promise querySplitItemBillAsync($arguments = [])
 * @method \Dew\Acs\Result inquiryPriceRefundInstance(array $arguments = [])
 * @method \Http\Promise\Promise inquiryPriceRefundInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result getPayAsYouGoPrice(array $arguments = [])
 * @method \Http\Promise\Promise getPayAsYouGoPriceAsync($arguments = [])
 * @method \Dew\Acs\Result getSubscriptionPrice(array $arguments = [])
 * @method \Http\Promise\Promise getSubscriptionPriceAsync($arguments = [])
 * @method \Dew\Acs\Result queryAvailableInstances(array $arguments = [])
 * @method \Http\Promise\Promise queryAvailableInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result releaseInstance(array $arguments = [])
 * @method \Http\Promise\Promise releaseInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createInstance(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstance(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result setRenewal(array $arguments = [])
 * @method \Http\Promise\Promise setRenewalAsync($arguments = [])
 * @method \Dew\Acs\Result convertChargeType(array $arguments = [])
 * @method \Http\Promise\Promise convertChargeTypeAsync($arguments = [])
 * @method \Dew\Acs\Result renewInstance(array $arguments = [])
 * @method \Http\Promise\Promise renewInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result refundInstance(array $arguments = [])
 * @method \Http\Promise\Promise refundInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result getOrderDetail(array $arguments = [])
 * @method \Http\Promise\Promise getOrderDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryOrders(array $arguments = [])
 * @method \Http\Promise\Promise queryOrdersAsync($arguments = [])
 * @method \Dew\Acs\Result cancelOrder(array $arguments = [])
 * @method \Http\Promise\Promise cancelOrderAsync($arguments = [])
 * @method \Dew\Acs\Result createCostUnit(array $arguments = [])
 * @method \Http\Promise\Promise createCostUnitAsync($arguments = [])
 * @method \Dew\Acs\Result allocateCostUnitResource(array $arguments = [])
 * @method \Http\Promise\Promise allocateCostUnitResourceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCostUnit(array $arguments = [])
 * @method \Http\Promise\Promise deleteCostUnitAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCostUnit(array $arguments = [])
 * @method \Http\Promise\Promise modifyCostUnitAsync($arguments = [])
 * @method \Dew\Acs\Result queryCostUnit(array $arguments = [])
 * @method \Http\Promise\Promise queryCostUnitAsync($arguments = [])
 * @method \Dew\Acs\Result queryCostUnitResource(array $arguments = [])
 * @method \Http\Promise\Promise queryCostUnitResourceAsync($arguments = [])
 * @method \Dew\Acs\Result queryFinancialAccountInfo(array $arguments = [])
 * @method \Http\Promise\Promise queryFinancialAccountInfoAsync($arguments = [])
 * @method \Dew\Acs\Result queryEvaluateList(array $arguments = [])
 * @method \Http\Promise\Promise queryEvaluateListAsync($arguments = [])
 * @method \Dew\Acs\Result queryCustomerAddressList(array $arguments = [])
 * @method \Http\Promise\Promise queryCustomerAddressListAsync($arguments = [])
 * @method \Dew\Acs\Result queryInvoicingCustomerList(array $arguments = [])
 * @method \Http\Promise\Promise queryInvoicingCustomerListAsync($arguments = [])
 * @method \Dew\Acs\Result applyInvoice(array $arguments = [])
 * @method \Http\Promise\Promise applyInvoiceAsync($arguments = [])
 * @method \Dew\Acs\Result querySkuPriceList(array $arguments = [])
 * @method \Http\Promise\Promise querySkuPriceListAsync($arguments = [])
 * @method \Dew\Acs\Result queryCommodityList(array $arguments = [])
 * @method \Http\Promise\Promise queryCommodityListAsync($arguments = [])
 * @method \Dew\Acs\Result queryPriceEntityList(array $arguments = [])
 * @method \Http\Promise\Promise queryPriceEntityListAsync($arguments = [])
 * @method \Dew\Acs\Result describePricingModule(array $arguments = [])
 * @method \Http\Promise\Promise describePricingModuleAsync($arguments = [])
 * @method \Dew\Acs\Result queryProductList(array $arguments = [])
 * @method \Http\Promise\Promise queryProductListAsync($arguments = [])
 * @method \Dew\Acs\Result queryUserOmsData(array $arguments = [])
 * @method \Http\Promise\Promise queryUserOmsDataAsync($arguments = [])
 * @method \Dew\Acs\Result setAllExpirationDay(array $arguments = [])
 * @method \Http\Promise\Promise setAllExpirationDayAsync($arguments = [])
 * @method \Dew\Acs\Result describeCostBudgetsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeCostBudgetsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result renewChangeInstance(array $arguments = [])
 * @method \Http\Promise\Promise renewChangeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result getOrders(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getOrdersAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result listInvoiceTitle(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise listInvoiceTitleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result listInvoiceCandidate(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise listInvoiceCandidateAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result createInvoice(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise createInvoiceAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result createFundAccountPayRelation(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise createFundAccountPayRelationAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result setFundAccountLowAvailableAmountAlarm(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise setFundAccountLowAvailableAmountAlarmAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountCanWithdrawAmount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountCanWithdrawAmountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountAvailableAmount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountAvailableAmountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountLowAvailableAmountAlarm(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountLowAvailableAmountAlarmAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result listFundAccount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise listFundAccountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result cancelFundAccountLowAvailableAmountAlarm(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise cancelFundAccountLowAvailableAmountAlarmAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountCanAllocateCreditAmount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountCanAllocateCreditAmountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result listFundAccountPayRelation(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise listFundAccountPayRelationAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountCanRecycleAmount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountCanRecycleAmountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result createFundAccountTransfer(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise createFundAccountTransferAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountTransactionDetails(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountTransactionDetailsAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result setFundAccountCreditAmount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise setFundAccountCreditAmountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result getFundAccountCanTransferAmount(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise getFundAccountCanTransferAmountAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result describeCoupon(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise describeCouponAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result describeCouponItemList(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise describeCouponItemListAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result createReportDefinition(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise createReportDefinitionAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result listReportDefinitions(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise listReportDefinitionsAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result deleteReportDefinition(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise deleteReportDefinitionAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result saveCostCenterShareRule(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise saveCostCenterShareRuleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result queryCostCenterShareRule(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise queryCostCenterShareRuleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result createCostCenter(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise createCostCenterAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result modifyCostCenter(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise modifyCostCenterAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result deleteCostCenter(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise deleteCostCenterAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result queryCostCenter(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise queryCostCenterAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result queryCostCenterResource(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise queryCostCenterResourceAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result createCostCenterRule(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise createCostCenterRuleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result modifyCostCenterRule(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise modifyCostCenterRuleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result deleteCostCenterRule(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise deleteCostCenterRuleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result queryCostCenterRule(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise queryCostCenterRuleAsync($arguments = []) {@since 2023-09-30}
 * @method \Dew\Acs\Result allocateCostCenterResource(array $arguments = []) {@since 2023-09-30}
 * @method \Http\Promise\Promise allocateCostCenterResourceAsync($arguments = []) {@since 2023-09-30}
 */
final class BssOpenApiClient extends AcsClient
{
    //
}
