<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'CloudAPI',
    'version' => '2016-07-14',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 141706,
      'title' => '实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateInstance',
        1 => 'DeleteInstance',
        2 => 'ModifyInstanceAttribute',
        3 => 'ModifyInstanceSpec',
        4 => 'EnableInstanceAccessControl',
        5 => 'DisableInstanceAccessControl',
        6 => 'DescribeInstances',
      ),
    ),
    1 => 
    array (
      'id' => 141711,
      'title' => '分组',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ModifyIntranetDomainPolicy',
        1 => 'CreateApiGroup',
        2 => 'DeleteApiGroup',
        3 => 'ModifyApiGroup',
        4 => 'DescribeApiGroup',
        5 => 'DescribeApiGroups',
        6 => 'DescribePurchasedApiGroup',
        7 => 'DescribePurchasedApiGroups',
      ),
    ),
    2 => 
    array (
      'id' => 141719,
      'title' => '域名',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteDomain',
        1 => 'DeleteDomainCertificate',
        2 => 'SetDomain',
        3 => 'SetDomainCertificate',
        4 => 'SetDomainWebSocketStatus',
        5 => 'SetWildcardDomainPatterns',
        6 => 'DescribeDomain',
        7 => 'ReactivateDomain',
      ),
    ),
    3 => 
    array (
      'id' => 141728,
      'title' => '监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateMonitorGroup',
        1 => 'DeleteMonitorGroup',
        2 => 'DescribeApiLatencyData',
        3 => 'DescribeApiQpsData',
        4 => 'DescribeApiTrafficControls',
        5 => 'DescribeApiTrafficData',
        6 => 'DescribeInstanceDropPacket',
        7 => 'DescribeInstanceDropConnections',
        8 => 'DescribeInstanceHttpCode',
        9 => 'DescribeInstanceLatency',
        10 => 'DescribeInstanceNewConnections',
        11 => 'DescribeInstancePackets',
        12 => 'DescribeInstanceQps',
        13 => 'DescribeInstanceSlbConnect',
        14 => 'DescribeInstanceTraffic',
        15 => 'DescribeGroupQps',
      ),
    ),
    4 => 
    array (
      'id' => 141735,
      'title' => 'API管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateApi',
        1 => 'CreateApiStageVariable',
        2 => 'ImportOAS',
        3 => 'ImportSwagger',
        4 => 'DeleteApi',
        5 => 'DeleteApiStageVariable',
        6 => 'ModifyApiConfiguration',
        7 => 'ModifyApi',
        8 => 'DescribeApisByBackend',
        9 => 'DescribeApi',
        10 => 'DescribeApiMarketAttributes',
        11 => 'DescribeApis',
        12 => 'DescribeApiHistory',
        13 => 'DescribeApisByApp',
        14 => 'DescribeAuthorizedApis',
        15 => 'DescribeApiDoc',
        16 => 'DescribeDeployedApi',
        17 => 'DescribeHistoryApis',
        18 => 'DescribeImportOASTask',
        19 => 'DescribePurchasedApis',
        20 => 'DescribeApiHistories',
        21 => 'DescribeDeployedApis',
        22 => 'DescribeMarketRemainsQuota',
        23 => 'DescribeDeployApiTask',
        24 => 'DescribeAbolishApiTask',
        25 => 'AbolishApi',
        26 => 'DeployApi',
        27 => 'BatchDeployApis',
        28 => 'BatchAbolishApis',
        29 => 'SwitchApi',
        30 => 'DryRunSwagger',
      ),
    ),
    5 => 
    array (
      'id' => 141764,
      'title' => '应用',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateApp',
        1 => 'DeleteApp',
        2 => 'ModifyApp',
        3 => 'DescribeApps',
        4 => 'DescribeAppAttributes',
        5 => 'DescribeAuthorizedApps',
        6 => 'DescribeApp',
        7 => 'DescribeAppSecurity',
        8 => 'ResetAppCode',
      ),
    ),
    6 => 
    array (
      'id' => 141774,
      'title' => '专有网络',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'RemoveVpcAccess',
        1 => 'RemoveVpcAccessAndAbolishApis',
        2 => 'ModifyVpcAccessAndUpdateApis',
        3 => 'ModifyApiGroupVpcWhitelist',
        4 => 'SetVpcAccess',
        5 => 'DescribeApiGroupVpcWhitelist',
        6 => 'DescribeVpcAccesses',
        7 => 'DescribeUpdateVpcInfoTask',
        8 => 'ValidateVpcConnectivity',
      ),
    ),
    7 => 
    array (
      'id' => 168793,
      'title' => '访问控制策略',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateAccessControlList',
        1 => 'DeleteAccessControlList',
        2 => 'SetAccessControlListAttribute',
        3 => 'AddAccessControlListEntry',
        4 => 'RemoveAccessControlListEntry',
        5 => 'DescribeAccessControlListAttribute',
        6 => 'DescribeAccessControlLists',
      ),
    ),
    8 => 
    array (
      'id' => 141782,
      'title' => '插件',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreatePlugin',
        1 => 'DeletePlugin',
        2 => 'AttachPlugin',
        3 => 'ModifyPlugin',
        4 => 'DetachPlugin',
        5 => 'DescribePluginApis',
        6 => 'DescribePluginsByApi',
        7 => 'DescribePluginSchemas',
        8 => 'DescribePluginTemplates',
        9 => 'DescribePlugins',
      ),
    ),
    9 => 
    array (
      'id' => 172506,
      'title' => '自定义数据集',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateDataset',
        1 => 'CreateDatasetItem',
        2 => 'DeleteDataset',
        3 => 'DeleteDatasetItem',
        4 => 'ModifyDataset',
        5 => 'ModifyDatasetItem',
        6 => 'DescribeDatasetInfo',
        7 => 'DescribeDatasetList',
        8 => 'DescribeDatasetItemInfo',
        9 => 'DescribeDatasetItemList',
      ),
    ),
    10 => 
    array (
      'id' => 141804,
      'title' => '模型',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateModel',
        1 => 'DeleteModel',
        2 => 'ModifyModel',
        3 => 'DescribeModels',
      ),
    ),
    11 => 
    array (
      'id' => 141809,
      'title' => '权限',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SetApisAuthorities',
        1 => 'SetAppsAuthorities',
        2 => 'RemoveApisAuthorities',
        3 => 'RemoveAppsAuthorities',
        4 => 'ResetAppSecret',
      ),
    ),
    12 => 
    array (
      'id' => 141815,
      'title' => '标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListTagResources',
        1 => 'TagResources',
        2 => 'UntagResources',
      ),
    ),
    13 => 
    array (
      'id' => 141819,
      'title' => '服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeSummaryData',
        1 => 'DescribeRegions',
        2 => 'DescribeSystemParameters',
        3 => 'DescribeZones',
        4 => 'OpenApiGatewayService',
      ),
    ),
    14 => 
    array (
      'id' => 141824,
      'title' => '日志',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateLogConfig',
        1 => 'DeleteLogConfig',
        2 => 'ModifyLogConfig',
        3 => 'QueryRequestLogs',
        4 => 'DescribeLogConfig',
      ),
    ),
    15 => 
    array (
      'id' => 141841,
      'title' => 'SDK',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SdkGenerateByAppForRegion',
        1 => 'SdkGenerateByApp',
        2 => 'SdkGenerateByGroup',
      ),
    ),
    16 => 
    array (
      'id' => 141854,
      'title' => '后端',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateBackend',
        1 => 'DeleteBackend',
        2 => 'ModifyBackend',
        3 => 'DescribeBackendList',
        4 => 'DescribeBackendInfo',
        5 => 'DescribeUpdateBackendTask',
      ),
    ),
    17 => 
    array (
      'id' => 141861,
      'title' => '后端模型',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateBackendModel',
        1 => 'DeleteBackendModel',
        2 => 'ModifyBackendModel',
      ),
    ),
    18 => 
    array (
      'id' => 141844,
      'title' => '签名插件（经典网络实例）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSignature',
        1 => 'DeleteSignature',
        2 => 'ModifySignature',
        3 => 'SetSignatureApis',
        4 => 'DescribeSignatures',
        5 => 'DescribeApisBySignature',
        6 => 'DescribeApiSignatures',
        7 => 'DescribeSignaturesByApi',
        8 => 'RemoveSignatureApis',
      ),
    ),
    19 => 
    array (
      'id' => 141829,
      'title' => '流控插件（经典网络实例）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddTrafficSpecialControl',
        1 => 'CreateTrafficControl',
        2 => 'DeleteAllTrafficSpecialControl',
        3 => 'DeleteTrafficControl',
        4 => 'DeleteTrafficSpecialControl',
        5 => 'ModifyTrafficControl',
        6 => 'SetTrafficControlApis',
        7 => 'DescribeTrafficControls',
        8 => 'DescribeTrafficControlsByApi',
        9 => 'DescribeApisByTrafficControl',
        10 => 'RemoveTrafficControlApis',
      ),
    ),
    20 => 
    array (
      'id' => 141791,
      'title' => '访问控制插件（经典网络实例）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddIpControlPolicyItem',
        1 => 'CreateIpControl',
        2 => 'DeleteIpControl',
        3 => 'ModifyIpControl',
        4 => 'ModifyIpControlPolicyItem',
        5 => 'SetIpControlApis',
        6 => 'DescribeApiIpControls',
        7 => 'DescribeIpControlPolicyItems',
        8 => 'DescribeIpControls',
        9 => 'DescribeApisByIpControl',
        10 => 'RemoveIpControlApis',
        11 => 'RemoveIpControlPolicyItem',
      ),
    ),
    21 => 
    array (
      'id' => 186390,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeApisWithStageNameIntegratedByApp',
        1 => 'DescribeGroupLatency',
        2 => 'DescribeGroupTraffic',
        3 => 'ModifyApiGroupInstance',
        4 => 'ModifyApiGroupNetworkPolicy',
        5 => 'DetachApiProduct',
        6 => 'SetApiProductsAuthorities',
        7 => 'DescribeApiProductsByApp',
        8 => 'DescribeApiProductApis',
        9 => 'DescribeAppsByApiProduct',
        10 => 'AttachApiProduct',
        11 => 'DeleteApiProduct',
        12 => 'RemoveApiProductsAuthorities',
        13 => 'SetAppsAuthToApiProduct',
        14 => 'DescribeApisByVpcAccess',
        15 => 'DeleteAppCode',
        16 => 'DeleteAppKey',
        17 => 'CreateAppCode',
        18 => 'CreateAppKey',
        19 => 'DescribeInstanceClusterInfo',
        20 => 'DescribeInstanceClusterList',
        21 => 'DescribeAppSecurities',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'CreateInstance' => 
    array (
      'summary' => '创建API网关实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '付费类型。',
            'type' => 'string',
            'required' => true,
            'example' => 'PostPaid 后付费
PrePaid  预付费
',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称',
            'type' => 'string',
            'required' => true,
            'example' => 'ApigatewayInstance',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例规格',
            'type' => 'string',
            'required' => true,
            'example' => 'api.s1.small',
          ),
        ),
        3 => 
        array (
          'name' => 'ZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用区，专享实例类型为传统类型专享实例为必填项，VPC融合类型专享实例可以不填',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing-MAZ3(c,e)',
          ),
        ),
        4 => 
        array (
          'name' => 'HttpsPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'https的策略',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'HTTPS2_TLS1_2',
          ),
        ),
        5 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例包年包月的时间，取值：

- PricingCycle为**Month**，表示按月付费，取值范围为**1**~**9**。
- PricingCycle为**Year**，表示按年付费，取值范围为**1**~**3**。

> ChargeType取值为**PrePaid**时，本参数可用且必须传入。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定预付费实例为包年或包月类型，取值范围如下：

- **year**：年
- **month**：月

> 若付费类型为PrePaid，该参数为必传参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
            'default' => 'month',
          ),
        ),
        7 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '续费时是否自动付费。取值：
* **True**：自动付费。请确保账号有足够的余额。
* **False**：控制台手动付费。具体操作为：登录控制台，在右上角选择**费用>进入费用中心**，在**订单管理**找到目标订单进行支付。

默认值：**False**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '口令，是用来做防止重复提交请求的，请勿重复使用。',
            'type' => 'string',
            'required' => true,
            'example' => 'c20d86c4-1eb3-4d0b-afe9-c586df1e2136',
          ),
        ),
        9 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test1',
                ),
                'Value' => 
                array (
                  'description' => '标签的值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'v1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 500,
          ),
        ),
        10 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专享实例类型
- vpc_connect：VPC融合类型专享实例
- normal：传统类型专享实例

><notice>说明该参数正在邀测中，暂未开放使用。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc_connect',
          ),
        ),
        11 => 
        array (
          'name' => 'InstanceCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专享实例类型为VPC融合专享实例时，实例所在网段
- 192.168.0.0/16
- 172.16.0.0/12

><warning>VPC融合专享实例会连接您指定的网段，请尽量避开冲突，以防出现云产品的私网ip和您指定网段下云服务ip冲突的情况></warning>
><notice>说明该参数正在邀测中，暂未开放使用。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.0/12',
          ),
        ),
        12 => 
        array (
          'name' => 'UserVpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专享实例类型为VPC融合专享实例时，需要连通的用户VPC ID
><notice>说明该参数正在邀测中，暂未开放使用。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-m5eo7khlb4h4f8y9egsdg
',
          ),
        ),
        13 => 
        array (
          'name' => 'ZoneVSwitchSecurityGroup',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '专享实例类型为VPC融合专享实例时，需要连通网络所需要的可用区，虚拟交换机以及安全组信息
><notice>说明该参数正在邀测中，暂未开放使用。></notice>',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ZoneId' => 
                array (
                  'description' => '可用区ID',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-beijing-c',
                ),
                'VSwitchId' => 
                array (
                  'description' => '虚拟交换机ID',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'vsw-0xi349n11cxogmvm866tb',
                ),
                'CidrBlock' => 
                array (
                  'description' => '交换机的IPv4网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.9.0/24',
                ),
                'SecurityGroupId' => 
                array (
                  'description' => '安全组的ID，同一个安全组内的服务可以互相访问。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'sg-2ze2ql9nozv8q7kmlt6e',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 3,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TagStatus' => 
              array (
                'description' => '标签是否存在，取值为：-**true**：存在-**false**：不存在',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID',
                'type' => 'string',
                'example' => 'apigateway-hz-b3c5dadd5***',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEB6EC62-B6C7-5082-A45A-45A204724AC2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TagStatus\\": true,\\n  \\"InstanceId\\": \\"apigateway-hz-b3c5dadd5***\\",\\n  \\"RequestId\\": \\"CEB6EC62-B6C7-5082-A45A-45A204724AC2\\"\\n}","type":"json"}]',
      'title' => '创建实例',
    ),
    'DeleteInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apigateway-sh-ae502ee79ef8',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CA4B3261-F14A-5E33-8608-F75A1DF27AD4',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CA4B3261-F14A-5E33-8608-F75A1DF27AD4\\"\\n}","type":"json"}]',
      'title' => '删除实例',
      'summary' => '删除API网关实例。',
    ),
    'ModifyInstanceAttribute' => 
    array (
      'summary' => '修改API网关实例属性。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apigateway-ht-8xxxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称',
            'type' => 'string',
            'required' => false,
            'example' => 'apigatewayInstance',
          ),
        ),
        2 => 
        array (
          'name' => 'HttpsPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTPS安全策略',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS2_TLS1_0',
          ),
        ),
        3 => 
        array (
          'name' => 'IPV6Enabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启IPv6',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'EgressIpv6Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否支持IPv6出访能力',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcSlbIntranetEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启API网关自调用域名',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性',
            'type' => 'string',
            'required' => false,
            'example' => 'c20d86c4-1eb3-4d0b-afe9-c586df1e2136',
          ),
        ),
        7 => 
        array (
          'name' => 'IntranetSegments',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义网段，所配置的网段将被视为私网地址',
            'type' => 'string',
            'required' => false,
            'example' => '172.0.0.1/24',
          ),
        ),
        8 => 
        array (
          'name' => 'MaintainStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可运维开始时间，格式为<i>HH:mmZ</i>（UTC时间）',
            'type' => 'string',
            'required' => false,
            'example' => '18:00Z',
          ),
        ),
        9 => 
        array (
          'name' => 'MaintainEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可运维结束时间，格式为<i>HH:mmZ</i>（UTC时间）',
            'type' => 'string',
            'required' => false,
            'example' => '23:00Z',
          ),
        ),
        10 => 
        array (
          'name' => 'ToConnectVpcIpBlock',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'API网关可访问的网段信息',
            'type' => 'object',
            'properties' => 
            array (
              'VswitchId' => 
              array (
                'description' => '虚拟交换机ID',
                'type' => 'string',
                'required' => false,
                'example' => 'vsw-wz94cqvaoe1ipxxxxxx',
              ),
              'ZoneId' => 
              array (
                'description' => '可用区ID',
                'type' => 'string',
                'required' => false,
                'example' => 'cn-hangzhou-a',
              ),
              'CidrBlock' => 
              array (
                'description' => '虚拟交换机的网段',
                'type' => 'string',
                'required' => false,
                'example' => '172.16.0.0/16',
              ),
              'Customized' => 
              array (
                'description' => '是否为自定义网段',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
              ),
            ),
            'required' => false,
          ),
        ),
        11 => 
        array (
          'name' => 'DeleteVpcIpBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除VPC可访问网段',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'F3186326-2C57-58E1-B6E9-XXXXXXXXXXXX',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F3186326-2C57-58E1-B6E9-XXXXXXXXXXXX\\"\\n}","type":"json"}]',
      'title' => '修改指定实例的信息',
    ),
    'ModifyInstanceSpec' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-v6419k43xxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例规格',
            'type' => 'string',
            'required' => true,
            'example' => 'api.s1.small',
          ),
        ),
        2 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '续费时是否自动付费。取值：
* **True**：自动付费。请确保账号有足够的余额。
* **False**：控制台手动付费。具体操作为：登录控制台，在右上角选择**费用>进入费用中心**，在**订单管理**找到目标订单进行支付。

默认值：**False**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '口令',
            'type' => 'string',
            'required' => true,
            'example' => 'b5845042-2f2f-4e96-bd5c-36c6e5c2a68c',
          ),
        ),
        4 => 
        array (
          'name' => 'ModifyAction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变配参数，取值：
- 升配：**UPGRADE**。
- 降配：**DOWNGRADE**。

默认值：**UPGRADE**。',
            'type' => 'string',
            'required' => false,
            'example' => 'UPGRADE',
          ),
        ),
        5 => 
        array (
          'name' => 'SkipWaitSwitch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否跳过"待切流"状态。变配过程中API网关实例可能会增加新的出口IP，"待切流"状态是为了提醒用户将新的出口IP添加到IP白名单，将SkipWaitSwitch参数置为true后，实例不会再进入到"待切流"状态，若有新的出口IP，系统会发送站内信通知用户。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '36BBBAD4-1CFB-489F-841A-8CA52EEA787E',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"36BBBAD4-1CFB-489F-841A-8CA52EEA787E\\"\\n}","type":"json"}]',
      'title' => '网关实例变配',
      'summary' => 'API网关实例升降配置变更接口。',
    ),
    'EnableInstanceAccessControl' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
设置实例上的访问控制。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-bp11escro2et2tioscy52',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apigateway-cn-v6419k43xxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'AclType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制的类型：
- black：黑名单                                 
- white：白名单',
            'type' => 'string',
            'required' => true,
            'example' => 'black',
          ),
        ),
        3 => 
        array (
          'name' => 'AddressIPVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP版本，可以设置为**ipv4**或者**ipv6**。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\"\\n}","type":"json"}]',
      'title' => '设置实例上的访问控制',
    ),
    'DisableInstanceAccessControl' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
关闭实例上的访问控制。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-grgqc0mnuhkqciwtam',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apigateway-cn-v6419k43xxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressIPVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP版本，可以设置为**ipv4**或者**ipv6**。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ016',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ016\\"\\n}","type":"json"}]',
      'title' => '关闭实例上的访问控制',
    ),
    'DescribeInstances' => 
    array (
      'summary' => '查询region下的共享实例/专享实例详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id
不填写默认查询所有实例',
            'type' => 'string',
            'required' => false,
            'example' => 'api-shared-vpc-001',
          ),
        ),
        1 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言类型。系统权限策略的描述将以此语言返回。

- en：英文。
- zh：中文。
- ja：日文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
        2 => 
        array (
          'name' => 'EnableTagAuthorization',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启了Tag授权',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例所绑定的标签',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例所绑定的标签',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '标签的值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '当前页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEB6EC62-B6C7-5082-A45A-45A204724AC2',
              ),
              'PageSize' => 
              array (
                'description' => '每页数目。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Instances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceAttribute' => 
                  array (
                    'description' => '实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '实例状态',
                          'type' => 'string',
                          'example' => 'RUNNING',
                        ),
                        'VpcSlbIntranetEnable' => 
                        array (
                          'description' => '是否开启内网VPC SLB',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ClassicEgressAddress' => 
                        array (
                          'description' => '出口地址',
                          'type' => 'string',
                          'example' => '10.0.0.1',
                        ),
                        'ZoneLocalName' => 
                        array (
                          'description' => '可用区域',
                          'type' => 'string',
                          'example' => '多可用区 2',
                        ),
                        'UserVpcId' => 
                        array (
                          'description' => '用户VPC Id',
                          'type' => 'string',
                          'example' => 'vpc-t***hx****yu9****t0g4',
                        ),
                        'VpcIntranetEnable' => 
                        array (
                          'description' => '是否开启内网VPC',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'VpcOwnerId' => 
                        array (
                          'description' => 'VPC实例所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1408453217640291****',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => 'api-shared-vpc-020',
                        ),
                        'InstanceRpsLimit' => 
                        array (
                          'description' => '实例rps限制',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '500',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '实例类型
- VPC_SHARED：共享实例(VPC)
- VPC_DEDICATED：专享实例(VPC)',
                          'type' => 'string',
                          'example' => 'VPC_SHARED',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '实例规格',
                          'type' => 'string',
                          'example' => 'api.s1.small',
                        ),
                        'InstanceChargeType' => 
                        array (
                          'description' => '实例的计费方式。可能值：

- PrePaid：包年包月。
- PayAsYouGo：按量付费。',
                          'type' => 'string',
                          'example' => 'PrePaid',
                        ),
                        'HttpsPolicies' => 
                        array (
                          'description' => 'https安全策略',
                          'type' => 'string',
                          'example' => 'HTTPS2_TLS1_2',
                        ),
                        'VpcEgressAddress' => 
                        array (
                          'description' => '内网VPC出口网段',
                          'type' => 'string',
                          'example' => '100.104.254.0/26',
                        ),
                        'EgressIpv6Enable' => 
                        array (
                          'description' => 'IPV6出访能力是否支持',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => '实例过期时间。',
                          'type' => 'string',
                          'example' => '1659801600000',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => '可用区ID',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-MAZ5(g,h)',
                        ),
                        'SupportIpv6' => 
                        array (
                          'description' => '是否支持ipv6',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'InternetEgressAddress' => 
                        array (
                          'description' => '公网出口地址',
                          'type' => 'string',
                          'example' => '47.241.89.244',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '实例创建时间',
                          'type' => 'string',
                          'example' => '2021-10-22 15:36:53.0',
                        ),
                        'InstanceSpecAttributes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SpecAttribute' => 
                            array (
                              'description' => '实例规格',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例规格',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Value' => 
                                  array (
                                    'description' => '变量值',
                                    'type' => 'string',
                                    'example' => '2500',
                                  ),
                                  'LocalName' => 
                                  array (
                                    'description' => '变量名',
                                    'type' => 'string',
                                    'example' => '最大每秒请求数',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'UserVswitchId' => 
                        array (
                          'description' => '用户交互机Id',
                          'type' => 'string',
                          'example' => 'vsw-t4***eh****d7q****i2f',
                        ),
                        'AclName' => 
                        array (
                          'description' => '访问控制策略名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AclType' => 
                        array (
                          'description' => '访问控制的类型：
- black：黑名单                                 
- white：白名单',
                          'type' => 'string',
                          'example' => 'white',
                        ),
                        'AclStatus' => 
                        array (
                          'description' => '是否开启访问控制功能。取值：

- **on**：开启访问控制。

- **off**：关闭访问控制。
',
                          'type' => 'string',
                          'example' => 'on',
                        ),
                        'AclId' => 
                        array (
                          'description' => '访问控制策略ID。',
                          'type' => 'string',
                          'example' => 'acl-uf6f9zfxfxtp5j9ng3yv4',
                        ),
                        'IntranetSegments' => 
                        array (
                          'description' => '可访问API网关实例的内网网段',
                          'type' => 'string',
                          'example' => '[\\"172.36.0.0/16\\",\\"172.31.16.0/20\\"]',
                        ),
                        'IPV6AclName' => 
                        array (
                          'description' => 'IPV6访问控制策略名称',
                          'type' => 'string',
                          'example' => 'testIPV6',
                        ),
                        'IPV6AclId' => 
                        array (
                          'description' => 'IPV6访问控制策略ID',
                          'type' => 'string',
                          'example' => 'acl-124resFfs235',
                        ),
                        'IPV6AclType' => 
                        array (
                          'description' => 'IPV6访问控制策略类型
- black：黑名单                                 
- white：白名单',
                          'type' => 'string',
                          'example' => 'black',
                        ),
                        'IPV6AclStatus' => 
                        array (
                          'description' => '是否开启IPV6访问控制功能。取值：

- **on**：开启访问控制。

- **off**：关闭访问控制。',
                          'type' => 'string',
                          'example' => 'off',
                        ),
                        'DedicatedInstanceType' => 
                        array (
                          'description' => '专享实例类型
- vpc_connect：VPC融合类型专享实例
- normal：传统类型专享实例',
                          'type' => 'string',
                          'example' => 'vpc_connect',
                        ),
                        'InstanceCidrBlock' => 
                        array (
                          'description' => '专享实例所在网段
- 172.16.0.0/12
- 192.168.0.0/16',
                          'type' => 'string',
                          'example' => '192.168.0.0/16',
                        ),
                        'ConnectVpcId' => 
                        array (
                          'description' => 'VPC融合类型专享实例联通的用户VPC ID',
                          'type' => 'string',
                          'example' => 'vpc-m5eo7khlb4h4f8y9egsdg',
                        ),
                        'NetworkInterfaceAttributes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NetworkInterfaceAttribute' => 
                            array (
                              'description' => 'VPC融合类型专享实例连通的用户VPC内的网络信息',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'VPC融合类型专享实例连通的用户VPC内的网络信息',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'VswitchId' => 
                                  array (
                                    'description' => '虚拟交换机ID',
                                    'type' => 'string',
                                    'example' => 'vsw-2zeqals6rbj51bhjn8b89',
                                  ),
                                  'SecurityGroupId' => 
                                  array (
                                    'description' => '安全组的ID，同一个安全组内的服务可以互相访问。',
                                    'type' => 'string',
                                    'example' => 'sg-2zeehz13zcyj1kfk3o85',
                                  ),
                                  'CidrBlock' => 
                                  array (
                                    'description' => 'vSwitch的网段。',
                                    'type' => 'string',
                                    'example' => '192.168.17.0/24',
                                  ),
                                  'ZoneId' => 
                                  array (
                                    'description' => '可用区ID',
                                    'type' => 'string',
                                    'example' => 'cn-shenzhen-d',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'InstanceClusterId' => 
                        array (
                          'description' => '纳管该专享实例的专享实例集群的ID',
                          'type' => 'string',
                          'example' => 'apigateway-cluster-sh-1523cafbgffd',
                        ),
                        'MaintainStartTime' => 
                        array (
                          'description' => '可运维开始时间，格式为<i>HH:mmZ</i>（UTC时间）。',
                          'type' => 'string',
                          'example' => '22:00Z',
                        ),
                        'MaintainEndTime' => 
                        array (
                          'description' => '可运维结束时间，格式为<i>HH:mmZ</i>（UTC时间）。',
                          'type' => 'string',
                          'example' => '01:00Z',
                        ),
                        'ConnectCidrBlocks' => 
                        array (
                          'description' => 'VPC融合类型专享实例，可以访问到的用户VPC的内网网段。',
                          'type' => 'string',
                          'example' => '[\\"172.16.0.0/24\\",\\"172.16.1.0/24\\"]',
                        ),
                        'PrivateDnsList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PrivateDns' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'string',
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                  'Value' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEB6EC62-B6C7-5082-A45A-45A204724AC2\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"Instances\\": {\\n    \\"InstanceAttribute\\": [\\n      {\\n        \\"Status\\": \\"RUNNING\\",\\n        \\"VpcSlbIntranetEnable\\": true,\\n        \\"ClassicEgressAddress\\": \\"10.0.0.1\\",\\n        \\"ZoneLocalName\\": \\"多可用区 2\\",\\n        \\"UserVpcId\\": \\"vpc-t***hx****yu9****t0g4\\",\\n        \\"VpcIntranetEnable\\": true,\\n        \\"VpcOwnerId\\": 0,\\n        \\"InstanceId\\": \\"api-shared-vpc-020\\",\\n        \\"InstanceRpsLimit\\": 500,\\n        \\"InstanceType\\": \\"VPC_SHARED\\",\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"InstanceSpec\\": \\"api.s1.small\\",\\n        \\"InstanceChargeType\\": \\"PrePaid\\",\\n        \\"HttpsPolicies\\": \\"HTTPS2_TLS1_2\\",\\n        \\"VpcEgressAddress\\": \\"100.104.254.0/26\\",\\n        \\"EgressIpv6Enable\\": true,\\n        \\"ExpiredTime\\": \\"1659801600000\\",\\n        \\"InstanceName\\": \\"test\\",\\n        \\"ZoneId\\": \\"cn-hangzhou-MAZ5(g,h)\\",\\n        \\"SupportIpv6\\": true,\\n        \\"InternetEgressAddress\\": \\"47.241.89.244\\",\\n        \\"CreatedTime\\": \\"2021-10-22 15:36:53.0\\",\\n        \\"InstanceSpecAttributes\\": {\\n          \\"SpecAttribute\\": [\\n            {\\n              \\"Value\\": \\"2500\\",\\n              \\"LocalName\\": \\"最大每秒请求数\\"\\n            }\\n          ]\\n        },\\n        \\"UserVswitchId\\": \\"vsw-t4***eh****d7q****i2f\\",\\n        \\"AclName\\": \\"test\\",\\n        \\"AclType\\": \\"white\\",\\n        \\"AclStatus\\": \\"on\\",\\n        \\"AclId\\": \\"acl-uf6f9zfxfxtp5j9ng3yv4\\",\\n        \\"IntranetSegments\\": \\"[\\\\\\\\\\\\\\"172.36.0.0/16\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"172.31.16.0/20\\\\\\\\\\\\\\"]\\",\\n        \\"IPV6AclName\\": \\"testIPV6\\",\\n        \\"IPV6AclId\\": \\"acl-124resFfs235\\",\\n        \\"IPV6AclType\\": \\"black\\",\\n        \\"IPV6AclStatus\\": \\"off\\",\\n        \\"DedicatedInstanceType\\": \\"vpc_connect\\",\\n        \\"InstanceCidrBlock\\": \\"192.168.0.0/16\\",\\n        \\"ConnectVpcId\\": \\"vpc-m5eo7khlb4h4f8y9egsdg\\",\\n        \\"NetworkInterfaceAttributes\\": {\\n          \\"NetworkInterfaceAttribute\\": [\\n            {\\n              \\"VswitchId\\": \\"vsw-2zeqals6rbj51bhjn8b89\\",\\n              \\"SecurityGroupId\\": \\"sg-2zeehz13zcyj1kfk3o85\\",\\n              \\"CidrBlock\\": \\"192.168.17.0/24\\",\\n              \\"ZoneId\\": \\"cn-shenzhen-d\\"\\n            }\\n          ]\\n        },\\n        \\"InstanceClusterId\\": \\"apigateway-cluster-sh-1523cafbgffd\\",\\n        \\"MaintainStartTime\\": \\"22:00Z\\",\\n        \\"MaintainEndTime\\": \\"01:00Z\\",\\n        \\"ConnectCidrBlocks\\": \\"[\\\\\\\\\\\\\\"172.16.0.0/24\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"172.16.1.0/24\\\\\\\\\\\\\\"]\\",\\n        \\"PrivateDnsList\\": {\\n          \\"PrivateDns\\": [\\n            \\"\\"\\n          ]\\n        },\\n        \\"Tags\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"\\",\\n              \\"Value\\": \\"\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询实例列表',
    ),
    'ModifyIntranetDomainPolicy' => 
    array (
      'summary' => '修改分组的内网VPC域名策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcIntranetEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启内网VPC域名

- TRUE：开通内网VPC域名

- FALSE：关闭内网VPC域名',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","type":"json"}]',
      'title' => '修改分组内网VPC域名策略',
    ),
    'CreateApiGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称，必须唯一，支持汉字、英文字母、数字、英文格式的下划线，必须以英文字母或汉字开头，4~50个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Weather',
          ),
        ),
        1 => 
        array (
          'name' => 'BasePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api根路径',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '/qqq',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组描述，不超过180个字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'The weather informations.',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => false,
            'example' => 'apigateway-cn-v6419k43xxxxx',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的value',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TagStatus' => 
              array (
                'description' => '标签是否存在，取值：-**true**：存在-**false**：不存在',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'BasePath' => 
              array (
                'description' => 'api根路径',
                'type' => 'string',
                'example' => '/qqq',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => 'FF3B7D81-66AE-47E0-BF69-157DCF187514',
              ),
              'Description' => 
              array (
                'description' => 'API分组描述',
                'type' => 'string',
                'example' => 'The weather informations',
              ),
              'GroupName' => 
              array (
                'description' => 'API分组名称',
                'type' => 'string',
                'example' => 'Weather',
              ),
              'GroupId' => 
              array (
                'description' => 'API分组ID，系统生成，全局唯一',
                'type' => 'string',
                'example' => '523e8dc7bbe04613b5b1d726c2a7xx',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID',
                'type' => 'string',
                'example' => 'apigateway-cn-v6419k43xxxxx',
              ),
              'SubDomain' => 
              array (
                'description' => '系统给分组绑定的二级域名，用于测试API调用',
                'type' => 'string',
                'example' => '523e8dc7bbe04613b5b1d726xxxxxxxx-cn-hangzhou.alicloudapi.com',
              ),
              'InstanceType' => 
              array (
                'description' => '实例类型
- CLASSIC_SHARED：共享实例经典网络
- VPC_SHARED：共享实例(VPC)
- VPC_DEDICATED：专享实例(VPC)',
                'type' => 'string',
                'example' => 'VPC_SHARED',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TagStatus\\": true,\\n  \\"BasePath\\": \\"/qqq\\",\\n  \\"RequestId\\": \\"FF3B7D81-66AE-47E0-BF69-157DCF187514\\",\\n  \\"Description\\": \\"The weather informations\\",\\n  \\"GroupName\\": \\"Weather\\",\\n  \\"GroupId\\": \\"523e8dc7bbe04613b5b1d726c2a7xx\\",\\n  \\"InstanceId\\": \\"apigateway-cn-v6419k43xxxxx\\",\\n  \\"SubDomain\\": \\"523e8dc7bbe04613b5b1d726xxxxxxxx-cn-hangzhou.alicloudapi.com\\",\\n  \\"InstanceType\\": \\"VPC_SHARED\\"\\n}","errorExample":""},{"type":"xml","example":"<SubDomain>523e8dc7bbe04613b5b1d726c2a7889d-cn-hangzhou.alicloudapi.com</SubDomain>\\n<GroupName>Weather</GroupName>\\n<Description>The weather informations</Description>\\n<RequestId>FF3B7D81-66AE-47E0-BF69-157DCF187514</RequestId>\\n<InstanceId>apigateway-cn-v6419k43xxxxx</InstanceId>\\n<InstanceType>VPC_SHARED</InstanceType>\\n<GroupId>523e8dc7bbe04613b5b1d726c2a7889d</GroupId>","errorExample":""}]',
      'title' => '创建API分组',
      'summary' => '创建API分组。',
      'description' => '创建API需要先创建分组，所属分组是API的一个基本属性信息。

- 此功能面向API提供者。
- 每个用户每个区域下最多可创建100个分组。
- 系统自动给分组分配二级域名，用于测试API。
- 分组带有区域属性，后续创建API选择分组后就选择了区域，为减少网络延时，建议选择与后端服务相同的区域。
- 创建分组后，可为分组绑定已备案的自定义域名。
- 该接口调用的QPS限制为：单用户QPS不超过50。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteApiGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的键',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的值',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteApiGroupResponse>\\r\\n    <RequestId>E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99</RequestId>\\r\\n</DeleteApiGroupResponse>","errorExample":""}]',
      'title' => '删除 API 分组',
      'summary' => '删除指定的API分组。',
      'description' => '- 此功能面向API提供者
- 分组下存在API时，分组不可删除，须先删除分组下的API
- 删除分组后，系统分配给此分组的二级域名自动生效
- 删除不存在的分组时，会返回删除成功
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyApiGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称，必须唯一，支持汉字、英文字母、数字、英文格式的下划线，必须以英文字母或汉字开头，4~50个字符，不传递表示不修改',
            'type' => 'string',
            'required' => false,
            'example' => 'NewWeather',
          ),
        ),
        2 => 
        array (
          'name' => 'BasePath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api根路径',
            'type' => 'string',
            'required' => false,
            'example' => '/eeee',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组描述，不超过180个字符，不传递表示不修改',
            'type' => 'string',
            'required' => false,
            'example' => 'New weather informations.',
          ),
        ),
        4 => 
        array (
          'name' => 'UserLogConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户日志配置',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"requestBody\\":false,\\"responseBody\\":false,\\"queryString\\":\\"\\",\\"requestHeaders\\":\\"\\",\\"responseHeaders\\":\\"\\",\\"jwtClaims\\":\\"\\"}',
          ),
        ),
        5 => 
        array (
          'name' => 'CustomTraceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义trace配置',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"parameterLocation\\":\\"HEADER\\",\\"parameterName\\":\\"traceId\\"}',
          ),
        ),
        6 => 
        array (
          'name' => 'CompatibleFlags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的标签列表，多个用逗号（,）分隔',
            'type' => 'string',
            'required' => false,
            'example' => 'depart:dep1',
          ),
        ),
        7 => 
        array (
          'name' => 'CustomerConfigs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义的配置项数据',
            'type' => 'string',
            'required' => false,
            'example' => 'removeResponseServerHeader',
          ),
        ),
        8 => 
        array (
          'name' => 'PassthroughHeaders',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '透传 Headers',
            'type' => 'string',
            'required' => false,
            'example' => 'eagleeye-rpcid,x-b3-traceid,host',
          ),
        ),
        9 => 
        array (
          'name' => 'DefaultDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '默认域名',
            'type' => 'string',
            'required' => false,
            'example' => 'mkt.api.gaore.com',
          ),
        ),
        10 => 
        array (
          'name' => 'RpcPattern',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'rpc模式',
            'type' => 'string',
            'required' => false,
          ),
        ),
        11 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'uat',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
        12 => 
        array (
          'name' => 'SupportSSE',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '4CF287C6-CE5B-477B-BE27-C48F99EADBC8',
              ),
              'BasePath' => 
              array (
                'description' => 'api根路径',
                'type' => 'string',
                'example' => '/test',
              ),
              'GroupId' => 
              array (
                'description' => 'API分组ID，系统生成，全局唯一',
                'type' => 'string',
                'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
              ),
              'GroupName' => 
              array (
                'description' => 'API分组名称',
                'type' => 'string',
                'example' => 'NewWeather',
              ),
              'Description' => 
              array (
                'description' => 'API分组描述',
                'type' => 'string',
                'example' => 'New weather informations.',
              ),
              'SubDomain' => 
              array (
                'description' => '系统为API分组分配的二级域名',
                'type' => 'string',
                'example' => '523e8dc7bbe04613b5b1d726c2a7889d-cn-hangzhou.alicloudapi.com',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4CF287C6-CE5B-477B-BE27-C48F99EADBC8\\",\\n  \\"BasePath\\": \\"/test\\",\\n  \\"GroupId\\": \\"523e8dc7bbe04613b5b1d726c2a7889d\\",\\n  \\"GroupName\\": \\"NewWeather\\",\\n  \\"Description\\": \\"New weather informations.\\",\\n  \\"SubDomain\\": \\"523e8dc7bbe04613b5b1d726c2a7889d-cn-hangzhou.alicloudapi.com\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyApiGroupResponse>\\r\\n    <RequestId>4CF287C6-CE5B-477B-BE27-C48F99EADBC8</RequestId>\\r\\n    <GroupId>523e8dc7bbe04613b5b1d726c2a7889d</GroupId>\\r\\n    <GroupName>NewWeather</GroupName>\\r\\n    <SubDomain>523e8dc7bbe04613b5b1d726c2a7889d-cn-hangzhou.alicloudapi.com</SubDomain>\\r\\n    <Description>New weather informations.</Description>\\r\\n</ModifyApiGroupResponse>","errorExample":""}]',
      'title' => '修改API分组的信息',
      'summary' => '修改已经存在的API分组的名称，描述，或者basepath。',
      'description' => '- 此功能面向API提供者
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiGroup' => 
    array (
      'summary' => '查询API分组的详情信息，包含分组系统自动生成的二级域名、自定义域名及SSL证书信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'appname',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test_app',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '分组状态

- **NORMAL**：正常
- **DELETE**：删除',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'CompatibleFlags' => 
              array (
                'description' => '关联的标签列表，多个用逗号（,）分隔',
                'type' => 'string',
                'example' => 'depart:dep1',
              ),
              'BasePath' => 
              array (
                'description' => 'api根路径',
                'type' => 'string',
                'example' => '/qqq',
              ),
              'Ipv6Status' => 
              array (
                'description' => 'ipv6状态',
                'type' => 'string',
                'example' => 'UNBIND',
              ),
              'UserLogConfig' => 
              array (
                'description' => '用户日志设置',
                'type' => 'string',
                'example' => '{\\"requestBody\\":true,\\"responseBody\\":true,\\"queryString\\":\\"test\\",\\"requestHeaders\\":\\"test\\",\\"responseHeaders\\":\\"test\\",\\"jwtClaims\\":\\"test\\"}',
              ),
              'CustomerConfigs' => 
              array (
                'description' => '自定义配置项列表',
                'type' => 'string',
                'example' => 'removeResponseServerHeader',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '03442A3D-3B7D-434C-8A95-A5FEB989B519',
              ),
              'Description' => 
              array (
                'description' => 'API分组描述',
                'type' => 'string',
                'example' => 'New weather informations.',
              ),
              'HttpsPolicy' => 
              array (
                'description' => 'https策略',
                'type' => 'string',
                'example' => 'HTTPS2_TLS1_0',
              ),
              'SubDomain' => 
              array (
                'description' => '系统为分组分配的二级域名',
                'type' => 'string',
                'example' => '27d50c0f2e54b359919923d908bb015-cn-hangzhou.alicloudapi.com',
              ),
              'CreatedTime' => 
              array (
                'description' => '创建时间，格林威治时间',
                'type' => 'string',
                'example' => '2016-08-01T06:53:02Z',
              ),
              'DefaultDomain' => 
              array (
                'description' => '默认域名',
                'type' => 'string',
                'example' => 'mkt.api.gaore.com',
              ),
              'CmsMonitorGroup' => 
              array (
                'description' => '云监控应用分组',
                'type' => 'string',
                'example' => '217008423',
              ),
              'BillingStatus' => 
              array (
                'description' => '计费状态

- **NORMAL**：正常
- **LOCKED**：欠费锁定',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'TrafficLimit' => 
              array (
                'description' => '分组最高QPS限制，默认500，可申请提高',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '500',
              ),
              'PassthroughHeaders' => 
              array (
                'description' => '透传 Headers',
                'type' => 'string',
                'example' => 'eagleeye-rpcid,x-b3-traceid',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID',
                'type' => 'string',
                'example' => 'apigateway-cn-v6419k43xxxxx',
              ),
              'VpcDomain' => 
              array (
                'description' => 'vpc域名',
                'type' => 'string',
                'example' => 'e4****7151954***acbd9f7****1058a-ap-southeast-1-vpc.alicloudapi.com',
              ),
              'InstanceType' => 
              array (
                'description' => '实例类型
- CLASSIC_SHARED：共享实例经典网络
- VPC_SHARED：共享实例(VPC)
- VPC_DEDICATED：专享实例(VPC)',
                'type' => 'string',
                'example' => 'VPC_SHARED',
              ),
              'CustomTraceConfig' => 
              array (
                'description' => '自定义trace配置',
                'type' => 'string',
                'example' => '{\\"parameterLocation\\":\\"HEADER\\",\\"parameterName\\":\\"traceId\\"}',
              ),
              'RegionId' => 
              array (
                'description' => '分组所在区域',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'ModifiedTime' => 
              array (
                'description' => '最后修改时间，格林威治时间',
                'type' => 'string',
                'example' => '2016-08-01T06:54:32Z',
              ),
              'GroupId' => 
              array (
                'description' => 'API分组 ID，系统生成，全局唯一',
                'type' => 'string',
                'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
              ),
              'GroupName' => 
              array (
                'description' => 'API分组名称',
                'type' => 'string',
                'example' => 'NewWeather',
              ),
              'IllegalStatus' => 
              array (
                'description' => '违法锁定

- **NORMAL**：正常
- **LOCKED**：违法锁定',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'VpcSlbIntranetDomain' => 
              array (
                'description' => '内网VPC SLB域名',
                'type' => 'string',
                'example' => '257e9d450e924d00b976b0ecfb7184c2-cn-beijing-intranet.alicloudapi.com',
              ),
              'CustomDomains' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainItem' => 
                  array (
                    'description' => '自定义域名信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '自定义域名信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BindStageName' => 
                        array (
                          'description' => '绑定的运行环境名称
',
                          'type' => 'string',
                          'example' => 'TEST',
                        ),
                        'DomainLegalStatus' => 
                        array (
                          'description' => '域名合法状态，取值：

- **NORMAL**：正常
- **ABNORMAL**：异常，该状态会影响API调用，需尽快解决',
                          'type' => 'string',
                          'example' => 'ABNORMAL',
                        ),
                        'CertificateName' => 
                        array (
                          'description' => 'SSL证书名称',
                          'type' => 'string',
                          'example' => 'myCertificate',
                        ),
                        'CustomDomainType' => 
                        array (
                          'description' => '自定义域名类型',
                          'type' => 'string',
                          'example' => 'intranet',
                        ),
                        'DomainCNAMEStatus' => 
                        array (
                          'description' => '域名解析情况，取值：

- **RESOLVED**：已解析
- **UNRESOLVED**：未解析',
                          'type' => 'string',
                          'example' => 'RESOLVED',
                        ),
                        'WildcardDomainPatterns' => 
                        array (
                          'description' => '通配域名模式',
                          'type' => 'string',
                          'example' => '[\\"{test}.test.com\\"]',
                        ),
                        'DomainBindingStatus' => 
                        array (
                          'description' => '自定义域名绑定状态，取值：

- **BINDING**：正常
- **BOUND**：未生效',
                          'type' => 'string',
                          'example' => 'BINDING',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名名称',
                          'type' => 'string',
                          'example' => 'api.demo.com',
                        ),
                        'DomainRemark' => 
                        array (
                          'description' => '域名相关备注，如描述域名异常状态原因',
                          'type' => 'string',
                          'example' => '该域名未备案',
                        ),
                        'DomainWebSocketStatus' => 
                        array (
                          'description' => '使用WebSocket功能的域名状态',
                          'type' => 'string',
                          'example' => 'CLOSE',
                        ),
                        'CertificateId' => 
                        array (
                          'description' => 'SSL证书ID，系统自动生成唯一编号',
                          'type' => 'string',
                          'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
                        ),
                        'IsHttpRedirectToHttps' => 
                        array (
                          'description' => '是否将http重定向到https',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'CertificateValidStart' => 
                        array (
                          'description' => '证书生效时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1689043476000',
                        ),
                        'CertificateValidEnd' => 
                        array (
                          'description' => '证书失效时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2635123476000',
                        ),
                        'BindStageAlias' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'StageItems' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'StageInfo' => 
                  array (
                    'description' => '运行环境信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '运行环境信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StageId' => 
                        array (
                          'description' => '运行环境编号',
                          'type' => 'string',
                          'example' => '123e8dc7bbe01613b5b1d726c2a7888e',
                        ),
                        'StageName' => 
                        array (
                          'description' => '运行环境名称',
                          'type' => 'string',
                          'example' => 'TEST',
                        ),
                        'Description' => 
                        array (
                          'description' => '运行环境描述',
                          'type' => 'string',
                          'example' => 'MYTEST',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CloudMarketCommodity' => 
              array (
                'description' => '云市场商品',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'DedicatedInstanceType' => 
              array (
                'description' => '分组所在专享实例的类型
  - VPC融合类型专享实例：vpc_connect
  - 传统类型专享实例：normal',
                'type' => 'string',
                'example' => 'normal',
              ),
              'MigrationStatus' => 
              array (
                'description' => '分组迁移实例任务状态
  - 运行中：Running
  - 成功：Success
  - 失败：Fail',
                'type' => 'string',
                'example' => 'Fail',
              ),
              'MigrationError' => 
              array (
                'description' => '分组迁移实例任务失败时，失败的原因。
当MigrationStatus参数值为Fail时，不为空。',
                'type' => 'string',
                'example' => 'The current instance conflicts with the target instance.',
              ),
              'DisableInnerDomain' => 
              array (
                'description' => '是否禁止公网二级域名的访问
- true：禁止公网二级域名访问
- false：允许公网二级域名访问',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"NORMAL\\",\\n  \\"CompatibleFlags\\": \\"depart:dep1\\",\\n  \\"BasePath\\": \\"/qqq\\",\\n  \\"Ipv6Status\\": \\"UNBIND\\",\\n  \\"UserLogConfig\\": \\"{\\\\\\\\\\\\\\"requestBody\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"responseBody\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"queryString\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"requestHeaders\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"responseHeaders\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"jwtClaims\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\"}\\",\\n  \\"CustomerConfigs\\": \\"removeResponseServerHeader\\",\\n  \\"RequestId\\": \\"03442A3D-3B7D-434C-8A95-A5FEB989B519\\",\\n  \\"Description\\": \\"New weather informations.\\",\\n  \\"HttpsPolicy\\": \\"HTTPS2_TLS1_0\\",\\n  \\"SubDomain\\": \\"27d50c0f2e54b359919923d908bb015-cn-hangzhou.alicloudapi.com\\",\\n  \\"CreatedTime\\": \\"2016-08-01T06:53:02Z\\",\\n  \\"DefaultDomain\\": \\"mkt.api.gaore.com\\",\\n  \\"CmsMonitorGroup\\": \\"217008423\\",\\n  \\"BillingStatus\\": \\"NORMAL\\",\\n  \\"TrafficLimit\\": 500,\\n  \\"PassthroughHeaders\\": \\"eagleeye-rpcid,x-b3-traceid\\",\\n  \\"InstanceId\\": \\"apigateway-cn-v6419k43xxxxx\\",\\n  \\"VpcDomain\\": \\"e4****7151954***acbd9f7****1058a-ap-southeast-1-vpc.alicloudapi.com\\",\\n  \\"InstanceType\\": \\"VPC_SHARED\\",\\n  \\"CustomTraceConfig\\": \\"{\\\\\\\\\\\\\\"parameterLocation\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"HEADER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"parameterName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"traceId\\\\\\\\\\\\\\"}\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"ModifiedTime\\": \\"2016-08-01T06:54:32Z\\",\\n  \\"GroupId\\": \\"523e8dc7bbe04613b5b1d726c2a7889d\\",\\n  \\"GroupName\\": \\"NewWeather\\",\\n  \\"IllegalStatus\\": \\"NORMAL\\",\\n  \\"VpcSlbIntranetDomain\\": \\"257e9d450e924d00b976b0ecfb7184c2-cn-beijing-intranet.alicloudapi.com\\",\\n  \\"CustomDomains\\": {\\n    \\"DomainItem\\": [\\n      {\\n        \\"BindStageName\\": \\"TEST\\",\\n        \\"DomainLegalStatus\\": \\"ABNORMAL\\",\\n        \\"CertificateName\\": \\"myCertificate\\",\\n        \\"CustomDomainType\\": \\"intranet\\",\\n        \\"DomainCNAMEStatus\\": \\"RESOLVED\\",\\n        \\"WildcardDomainPatterns\\": \\"[\\\\\\\\\\\\\\"{test}.test.com\\\\\\\\\\\\\\"]\\",\\n        \\"DomainBindingStatus\\": \\"BINDING\\",\\n        \\"DomainName\\": \\"api.demo.com\\",\\n        \\"DomainRemark\\": \\"该域名未备案\\",\\n        \\"DomainWebSocketStatus\\": \\"CLOSE\\",\\n        \\"CertificateId\\": \\"6EF60BEC-0242-43AF-BB20-270359FB54A7\\",\\n        \\"IsHttpRedirectToHttps\\": false,\\n        \\"CertificateValidStart\\": 1689043476000,\\n        \\"CertificateValidEnd\\": 2635123476000,\\n        \\"BindStageAlias\\": \\"\\"\\n      }\\n    ]\\n  },\\n  \\"StageItems\\": {\\n    \\"StageInfo\\": [\\n      {\\n        \\"StageId\\": \\"123e8dc7bbe01613b5b1d726c2a7888e\\",\\n        \\"StageName\\": \\"TEST\\",\\n        \\"Description\\": \\"MYTEST\\"\\n      }\\n    ]\\n  },\\n  \\"CloudMarketCommodity\\": false,\\n  \\"DedicatedInstanceType\\": \\"normal\\",\\n  \\"MigrationStatus\\": \\"Fail\\",\\n  \\"MigrationError\\": \\"The current instance conflicts with the target instance.\\",\\n  \\"DisableInnerDomain\\": false\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiGroupResponse>\\r\\n    <RequestId>03442A3D-3B7D-434C-8A95-A5FEB989B519</RequestId>\\r\\n    <GroupId>523e8dc7bbe04613b5b1d726c2a7889d</GroupId>\\r\\n    <GroupName>NewWeather</GroupName>\\r\\n    <SubDomain>927d50c0f2e54b359919923d908bb015-cn-hangzhou.alicloudapi.com</SubDomain>\\r\\n    <Description>New weather informations.</Description>\\r\\n    <CreatedTime>2016-08-01T06:53:02Z</CreatedTime>\\r\\n    <ModifiedTime>2016-08-01T06:54:32Z</ModifiedTime>\\r\\n    <RegionId>cn-hangzhou</RegionId>\\r\\n    <Status>NORMAL</Status>\\r\\n    <BillingStatus>NORMAL</BillingStatus>\\r\\n    <IllegalStatus>NORMAL</IllegalStatus>\\r\\n    <TrafficLimit>500</TrafficLimit>\\r\\n    <CustomDomains>\\r\\n        <CustomDomain>\\r\\n            <DomainName>api.demo.com</DomainName>\\r\\n            <CertificateId>6EF60BEC-0242-43AF-BB20-270359FB54A7</CertificateId>\\r\\n            <CertificateName>myCertificate</CertificateName>\\r\\n            <DomainNameResolution>RESOLVED</DomainNameResolution>\\r\\n            <DomainStatus>BINDING</DomainStatus>\\r\\n            <DomainLegalStatus>ABNORMAL</DomainLegalStatus>\\r\\n            <DomainRemark>该域名未备案</DomainRemark>\\r\\n        </CustomDomain>\\r\\n    </CustomDomains>\\r\\n    <StageItems>\\r\\n        <StageInfo>\\r\\n            <StageId>123e8dc7bbe01613b5b1d726c2a7887e</StageId>\\r\\n            <StageName>RELEASE</StageName>\\r\\n            <Description>MYRELEASE</Description>\\r\\n        </StageInfo>\\r\\n        <StageInfo>\\r\\n            <StageId>123e8dc7bbe01613b5b1d726c2a7888e</StageId>\\r\\n            <StageName>TEST</StageName>\\r\\n            <Description>MYTEST</Description>\\r\\n        </StageInfo>\\r\\n    </StageItems>\\r\\n</DescribeApiGroupResponse>","errorExample":""}]',
      'title' => '查询 API 分组详情',
      'description' => '- 此功能面向API提供者',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'example' => 'be6d2abcc0dd4f749fc2d2edd6567164',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API组名称中，可指定的关键字',
            'type' => 'string',
            'required' => false,
            'example' => 'Traffic',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值50，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'EnableTagAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用标签验证',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => false,
            'example' => 'apigateway-cn-v6419k43245xx',
          ),
        ),
        6 => 
        array (
          'name' => 'Sort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序，默认值是desc，可选asc，desc
- asc：按修改时间升序排列；
- desc：按修改时间降序排列',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的value
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'ApiGroupAttributes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiGroupAttribute' => 
                  array (
                    'description' => '返回分组集合',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BasePath' => 
                        array (
                          'description' => '基准路径',
                          'type' => 'string',
                          'example' => '/v2/',
                        ),
                        'BillingStatus' => 
                        array (
                          'description' => '计费状态，取值：

- **NORMAL**：正常
- **LOCKED**：欠费锁定',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'TrafficLimit' => 
                        array (
                          'description' => '分组最高QPS限制，默认500，可申请提高',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '500',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID',
                          'type' => 'string',
                          'example' => 'apigateway-cn-v6419k43245xx',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '实例类型',
                          'type' => 'string',
                          'example' => 'VPC_SHARED',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '分组所在区域',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '最后修改时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2016-08-01T08:45:15Z',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组 ID，系统生成，全局唯一',
                          'type' => 'string',
                          'example' => 'be6d2abcc0dd4f749fc2d2edd6567164',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API组名称',
                          'type' => 'string',
                          'example' => 'Traffic',
                        ),
                        'Description' => 
                        array (
                          'description' => '分组描述',
                          'type' => 'string',
                          'example' => 'TrafficInformations.',
                        ),
                        'IllegalStatus' => 
                        array (
                          'description' => '违法锁定，取值：

- **NORMAL**：正常
- **LOCKED**：违法锁定',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'HttpsPolicy' => 
                        array (
                          'description' => 'HTTPS安全策略',
                          'type' => 'string',
                          'example' => 'HTTPS2_TLS1_0',
                        ),
                        'SubDomain' => 
                        array (
                          'description' => 'API组对应的二级域名，自定义域名cname所用',
                          'type' => 'string',
                          'example' => 'be6d2abcc0dd4f749fc2d2edd6567164-cn-hangzhou.alicloudapi.com',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2016-08-01T08:45:15Z',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'description' => '标签列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签的key',
                                    'type' => 'string',
                                    'example' => 'key',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签的value',
                                    'type' => 'string',
                                    'example' => 'value',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"ApiGroupAttributes\\": {\\n    \\"ApiGroupAttribute\\": [\\n      {\\n        \\"BasePath\\": \\"/v2/\\",\\n        \\"BillingStatus\\": \\"NORMAL\\",\\n        \\"TrafficLimit\\": 500,\\n        \\"InstanceId\\": \\"apigateway-cn-v6419k43245xx\\",\\n        \\"InstanceType\\": \\"VPC_SHARED\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"ModifiedTime\\": \\"2016-08-01T08:45:15Z\\",\\n        \\"GroupId\\": \\"be6d2abcc0dd4f749fc2d2edd6567164\\",\\n        \\"GroupName\\": \\"Traffic\\",\\n        \\"Description\\": \\"TrafficInformations.\\",\\n        \\"IllegalStatus\\": \\"NORMAL\\",\\n        \\"HttpsPolicy\\": \\"HTTPS2_TLS1_0\\",\\n        \\"SubDomain\\": \\"be6d2abcc0dd4f749fc2d2edd6567164-cn-hangzhou.alicloudapi.com\\",\\n        \\"CreatedTime\\": \\"2016-08-01T08:45:15Z\\",\\n        \\"Tags\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"key\\",\\n              \\"Value\\": \\"value\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiGroupsResponse>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n    <TotalCount>2</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n        <ApiGroupAttributes>\\r\\n            <ApiGroupAttribute>\\r\\n                <GroupId>be6d2abcc0dd4f749fc2d2edd6567164</GroupId>\\r\\n                <GroupName>Traffic</GroupName>\\r\\n                <SubDomain>be6d2abcc0dd4f749fc2d2edd6567164-cn-hangzhou.alicloudapi.com</SubDomain>\\r\\n                <Description>TrafficInformations.</Description>\\r\\n                  <CreatedTime>2016-08-01T08:45:15Z</CreatedTime>\\r\\n                  <ModifiedTime>2016-08-01T08:45:15Z</ModifiedTime>\\r\\n                  <RegionId>cn-hangzhou</RegionId>\\r\\n                  <TrafficLimit>500</TrafficLimit>\\r\\n                  <BillingStatus>NORMAL</BillingStatus>\\r\\n                  <IllegalStatus>NORMAL</IllegalStatus>\\r\\n            </ApiGroupAttribute>\\r\\n            <ApiGroupAttribute>\\r\\n                <GroupId>927d50c0f2e54b359919923d908bb015</GroupId>\\r\\n                <GroupName>NewWeather</GroupName>\\r\\n                  <SubDomain>927d50c0f2e54b359919923d908bb015-cn-hangzhou.alicloudapi.com</SubDomain>\\r\\n                  <Description>NewWeatherInformations.</Description>\\r\\n                  <CreatedTime>2016-08-01T06:54:32Z</CreatedTime>\\r\\n                  <ModifiedTime>2016-08-01T06:54:32Z</ModifiedTime>\\r\\n                  <RegionId>cn-hangzhou</RegionId>\\r\\n                  <TrafficLimit>500</TrafficLimit>\\r\\n                  <BillingStatus>NORMAL</BillingStatus>\\r\\n                  <IllegalStatus>NORMAL</IllegalStatus>\\r\\n            </ApiGroupAttribute>\\r\\n        </ApiGroupAttributes>\\r\\n</DescribeApiGroupsResponse>","errorExample":""}]',
      'title' => '查询 API 分组列表',
      'summary' => '查询当前存在的API分组列表及基本信息。',
      'description' => '- 此功能面向API提供者
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePurchasedApiGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'example' => '102b631ae1094e33a77c45312226184e',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '分组状态

- **NORMAL**：正常
- **DELETE**：删除',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'PurchasedTime' => 
              array (
                'description' => '购买时间',
                'type' => 'string',
                'example' => '2021-12-19T00:00:00',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '61A16D46-EC04-5288-8A18-811B0F536CC2',
              ),
              'GroupId' => 
              array (
                'description' => 'api分组id',
                'type' => 'string',
                'example' => '48977d7b96074966a7c9c2a8872d7e06',
              ),
              'GroupName' => 
              array (
                'description' => 'API分组名称',
                'type' => 'string',
                'example' => 'Weather',
              ),
              'Description' => 
              array (
                'description' => 'api分组描述',
                'type' => 'string',
                'example' => 'api group description',
              ),
              'RegionId' => 
              array (
                'description' => 'api分组所在区域',
                'type' => 'string',
                'example' => 'cn-qingdao',
              ),
              'Domains' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainItem' => 
                  array (
                    'description' => '域名列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DomainName' => 
                        array (
                          'description' => '域名',
                          'type' => 'string',
                          'example' => 'test_domain.com',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Status\\": \\"NORMAL\\",\\n  \\"PurchasedTime\\": \\"2021-12-19T00:00:00\\",\\n  \\"RequestId\\": \\"61A16D46-EC04-5288-8A18-811B0F536CC2\\",\\n  \\"GroupId\\": \\"48977d7b96074966a7c9c2a8872d7e06\\",\\n  \\"GroupName\\": \\"Weather\\",\\n  \\"Description\\": \\"api group description\\",\\n  \\"RegionId\\": \\"cn-qingdao\\",\\n  \\"Domains\\": {\\n    \\"DomainItem\\": [\\n      {\\n        \\"DomainName\\": \\"test_domain.com\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取购买的 API 组',
      'summary' => '获取云市场购买的 API 分组详情。',
    ),
    'DescribePurchasedApiGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '36BBBAD4-1CFB-489F-841A-8CA52EEA787E',
              ),
              'PageSize' => 
              array (
                'description' => '每页数目。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalCount' => 
              array (
                'description' => '数据总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PurchasedApiGroupAttributes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PurchasedApiGroupAttribute' => 
                  array (
                    'description' => '采购的API分组属性',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '采购的API分组属性',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '分组状态

- **NORMAL**：正常
- **DELETE**：删除',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'PurchasedTime' => 
                        array (
                          'description' => '购买时间',
                          'type' => 'string',
                          'example' => '2021-12-19T00:00:00',
                        ),
                        'ExpireTime' => 
                        array (
                          'description' => '失效时间',
                          'type' => 'string',
                          'example' => '2021-12-19T00:00:00',
                        ),
                        'Description' => 
                        array (
                          'description' => '分组描述',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'group1',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组 ID',
                          'type' => 'string',
                          'example' => '8e91f23f88f94348855b82c9a73209f3',
                        ),
                        'InvokeTimesMax' => 
                        array (
                          'description' => '最大调用次数',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'InvokeTimesNow' => 
                        array (
                          'description' => '当前调用次数',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'BillingType' => 
                        array (
                          'description' => '计费方式',
                          'type' => 'string',
                          'example' => 'POSTPAID',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"36BBBAD4-1CFB-489F-841A-8CA52EEA787E\\",\\n  \\"PageSize\\": 20,\\n  \\"TotalCount\\": 2,\\n  \\"PurchasedApiGroupAttributes\\": {\\n    \\"PurchasedApiGroupAttribute\\": [\\n      {\\n        \\"Status\\": \\"NORMAL\\",\\n        \\"PurchasedTime\\": \\"2021-12-19T00:00:00\\",\\n        \\"ExpireTime\\": \\"2021-12-19T00:00:00\\",\\n        \\"Description\\": \\"1\\",\\n        \\"GroupName\\": \\"group1\\",\\n        \\"GroupId\\": \\"8e91f23f88f94348855b82c9a73209f3\\",\\n        \\"InvokeTimesMax\\": 10,\\n        \\"InvokeTimesNow\\": 10,\\n        \\"BillingType\\": \\"POSTPAID\\",\\n        \\"RegionId\\": \\"cn-shanghai\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取购买的API分组列表',
      'summary' => '获取云市场购买的 API 分组列表。',
    ),
    'DeleteDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'api.demo.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6EF60BEC-0242-43AF-BB20-270359FB54A7\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteDomainResponse>\\r\\n    <RequestId>6EF60BEC-0242-43AF-BB20-270359FB54A7</RequestId>\\r\\n</DeleteDomainResponse>","errorExample":""}]',
      'title' => '删除域名',
      'summary' => '解除绑定在分组的自定义域名。',
      'description' => '- 此功能面向API提供者。
- 删除不存在的域名，会返回成功。
- 删除域名将会影响API的访问，删除前请确认影响，谨慎操作。',
    ),
    'DeleteDomainCertificate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'api.demo.com',
          ),
        ),
        2 => 
        array (
          'name' => 'CertificateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL证书ID，系统自动生成的SSL证书的唯一标识',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c621720d1eb34843822b7fb5148e6926',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\"\\n}","type":"json"}]',
      'title' => '删除域名的SSL证书',
      'summary' => '删除指定域名的SSL证书。

此功能面向API提供者。
删除不存在的SSL证书，会返回成功。
指定的分组不存在，会报错：InvalidGroupId.NotFound。
删除SSL证书后，将不能支持HTTPS访问，请谨慎操作。',
    ),
    'SetDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'api.demo.com',
          ),
        ),
        2 => 
        array (
          'name' => 'BindStageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名要指定环境访问。不设置该值，则表示该域名能访问所有环境。

如果指定了某个具体的环境，则该域名只能访问这个环境。
可选值：
- TEST
- PRE
- RELEASE

当要修改为全部环境都可访问时，则将该值设置为空串（“”）即可。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'CustomDomainType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定域名要绑定的类型：公网或者内网。默认为INTERNET。可选值：

- INTERNET：公网类型
- INTRANET：内网类型, 当指定了内网类型后，就不允许该域名从公网请求过来。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'INTERNET',
          ),
        ),
        4 => 
        array (
          'name' => 'IsForce',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该字段用于当域名冲突时，是否强制绑定该域名。如果选择true，则会强制在该分组绑定此域名，另外冲突的分组上的域名会自动解绑。该操作有一定风险，请谨慎操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'IsHttpRedirectToHttps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将http重定向到https',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '0AA90E87-3506-5AA6-AFFB-A4D53B4F6231',
              ),
              'DomainLegalStatus' => 
              array (
                'description' => '域名合法状态，取值：

- **NORMAL**：正常
- **ABNORMAL**：异常，该状态会影响API调用，需尽快解决',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'GroupId' => 
              array (
                'description' => 'API分组 ID，系统生成，全局唯一',
                'type' => 'string',
                'example' => '927d50c0f2e54b359919923d908bb015',
              ),
              'SubDomain' => 
              array (
                'description' => '系统给分组绑定的二级域名，用于测试API调用',
                'type' => 'string',
                'example' => 'xxx-cn-hangzhou.alicloudapi.com',
              ),
              'DomainName' => 
              array (
                'description' => '自定义域名',
                'type' => 'string',
                'example' => 'api.demo.com',
              ),
              'DomainBindingStatus' => 
              array (
                'description' => '自定义域名绑定状态

- **BINDING**：正常
- **BOUND**：未生效',
                'type' => 'string',
                'example' => 'BINDING',
              ),
              'DomainRemark' => 
              array (
                'description' => '域名相关备注，如描述域名异常状态原因',
                'type' => 'string',
                'example' => '无',
              ),
              'DomainWebSocketStatus' => 
              array (
                'description' => '使用WebSocket功能的域名状态',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0AA90E87-3506-5AA6-AFFB-A4D53B4F6231\\",\\n  \\"DomainLegalStatus\\": \\"NORMAL\\",\\n  \\"GroupId\\": \\"927d50c0f2e54b359919923d908bb015\\",\\n  \\"SubDomain\\": \\"xxx-cn-hangzhou.alicloudapi.com\\",\\n  \\"DomainName\\": \\"api.demo.com\\",\\n  \\"DomainBindingStatus\\": \\"BINDING\\",\\n  \\"DomainRemark\\": \\"无\\",\\n  \\"DomainWebSocketStatus\\": \\"NORMAL\\"\\n}","type":"json"}]',
      'title' => '给指定分组绑定自定义域名',
      'summary' => '给指定API分组绑定自定义域名。',
    ),
    'SetDomainCertificate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'api.demo.com',
          ),
        ),
        2 => 
        array (
          'name' => 'CertificateName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL证书名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test_cert',
          ),
        ),
        3 => 
        array (
          'name' => 'CertificateBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书内容',
            'type' => 'string',
            'required' => false,
            'example' => '请参见如下请求示例
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA8GjIleJ7rlo86mtbwcDnUfqzTQAm4b3zZEo1aKsfAuwcvCud
....
-----END RSA PRIVATE KEY-----',
          ),
        ),
        4 => 
        array (
          'name' => 'CertificatePrivateKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书私钥',
            'type' => 'string',
            'required' => false,
            'example' => '请参见如下请求示例
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA8GjIleJ7rlo86mtbwcDnUfqzTQAm4b3zZEo1aKsfAuwcvCud
....
-----END RSA PRIVATE KEY-----',
          ),
        ),
        5 => 
        array (
          'name' => 'CaCertificateBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CA 证书内容',
            'type' => 'string',
            'required' => false,
            'example' => 'CA证书的编码内容',
          ),
        ),
        6 => 
        array (
          'name' => 'SslVerifyDepth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书验证深度',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6EF60BEC-0242-43AF-BB20-270359FB54A7\\"\\n}","errorExample":""},{"type":"xml","example":"<SetDomainCertificateResponse>\\r\\n    <RequestId>6EF60BEC-0242-43AF-BB20-270359FB54A7</RequestId>\\r\\n</SetDomainCertificateResponse>","errorExample":""}]',
      'title' => '为自定义域名添加SSL证书',
      'summary' => '为指定自定义域名上传SSL证书。',
      'description' => '- 此功能面向API提供者。
- SSL证书必须与域名匹配。
- 绑定SSL证书后，可提供基于HTTPS的API服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDomainWebSocketStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cf976e63b70c4993807e7bb9345d4695',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ac.fluvet.cn',
          ),
        ),
        2 => 
        array (
          'name' => 'ActionValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作参数值',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'OPEN',
          ),
        ),
        3 => 
        array (
          'name' => 'WSSEnable',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '61A16D46-EC04-5288-8A18-811B0F536CC2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"61A16D46-EC04-5288-8A18-811B0F536CC2\\"\\n}","type":"json"}]',
      'title' => '设置域名WebSocket状态',
      'summary' => '开通或关闭自定义域名的WebSocket。',
    ),
    'SetWildcardDomainPatterns' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'example' => '*.prd.e-eir.com',
          ),
        ),
        2 => 
        array (
          'name' => 'WildcardDomainPatterns',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通配域名模式。',
            'type' => 'string',
            'required' => false,
            'example' => '[\\"{svc}.prd.e-eir.com\\"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'D0075BDA-8AED-5073-A70A-FE44E86AB20F',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D0075BDA-8AED-5073-A70A-FE44E86AB20F\\"\\n}","type":"json"}]',
      'title' => '设置通配符域名模式',
      'summary' => '为绑定的自定义域名设置泛域名模板。',
    ),
    'DescribeDomain' => 
    array (
      'summary' => '查询绑定的自定义域名详情信息，包含系统自动分配的二级域名、自定义域名和SSL证书信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'api.demo.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CertificatePrivateKey' => 
              array (
                'description' => '证书私钥',
                'type' => 'string',
                'example' => 'xxx',
              ),
              'DomainName' => 
              array (
                'description' => '自定义域名',
                'type' => 'string',
                'example' => 'api.demo.com',
              ),
              'DomainBindingStatus' => 
              array (
                'description' => '自定义域名绑定状态，取值：

- BINDING：正常
- BOUND：未生效',
                'type' => 'string',
                'example' => 'BINDING',
              ),
              'DomainRemark' => 
              array (
                'description' => '域名相关备注，如描述域名异常状态原因',
                'type' => 'string',
                'example' => '该域名未备案',
              ),
              'CertificateId' => 
              array (
                'description' => 'SSL证书ID，系统自动生成唯一编号',
                'type' => 'string',
                'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
              ),
              'DomainWebSocketStatus' => 
              array (
                'description' => '使用WebSocket的域名的状态',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
              ),
              'CertificateName' => 
              array (
                'description' => 'SSL证书名称',
                'type' => 'string',
                'example' => 'myCertificate',
              ),
              'DomainLegalStatus' => 
              array (
                'description' => '域名合法状态，取值：

- NORMAL：正常
- ABNORMAL：异常，该状态会影响API调用，需尽快解决',
                'type' => 'string',
                'example' => 'NORMAL',
              ),
              'GroupId' => 
              array (
                'description' => 'API分组 ID，系统生成，全局唯一',
                'type' => 'string',
                'example' => '927d50c0f2e54b359919923d908bb015',
              ),
              'CertificateBody' => 
              array (
                'description' => '证书内容',
                'type' => 'string',
                'example' => 'xxx',
              ),
              'SubDomain' => 
              array (
                'description' => '系统为分组分配的二级域名',
                'type' => 'string',
                'example' => 'xxx-cn-hangzhou.alicloudapi.com',
              ),
              'DomainCNAMEStatus' => 
              array (
                'description' => '域名解析情况，取值：

- RESOLVED：已解析
- UNRESOLVED：未解析',
                'type' => 'string',
                'example' => 'RESOLVED',
              ),
              'CertificateValidStart' => 
              array (
                'description' => '证书生效时间戳（毫秒）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1672502400000',
              ),
              'CertificateValidEnd' => 
              array (
                'description' => '证书失效时间戳（毫秒）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1704038400000',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"CertificatePrivateKey\\": \\"xxx\\",\\n  \\"DomainName\\": \\"api.demo.com\\",\\n  \\"DomainBindingStatus\\": \\"BINDING\\",\\n  \\"DomainRemark\\": \\"该域名未备案\\",\\n  \\"CertificateId\\": \\"6EF60BEC-0242-43AF-BB20-270359FB54A7\\",\\n  \\"DomainWebSocketStatus\\": \\"NORMAL\\",\\n  \\"RequestId\\": \\"6EF60BEC-0242-43AF-BB20-270359FB54A7\\",\\n  \\"CertificateName\\": \\"myCertificate\\",\\n  \\"DomainLegalStatus\\": \\"NORMAL\\",\\n  \\"GroupId\\": \\"927d50c0f2e54b359919923d908bb015\\",\\n  \\"CertificateBody\\": \\"xxx\\",\\n  \\"SubDomain\\": \\"xxx-cn-hangzhou.alicloudapi.com\\",\\n  \\"DomainCNAMEStatus\\": \\"RESOLVED\\",\\n  \\"CertificateValidStart\\": 1672502400000,\\n  \\"CertificateValidEnd\\": 1704038400000\\n}","type":"json"}]',
      'title' => '查询自定义域名详情信息',
    ),
    'ReactivateDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'api.demo.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6EF60BEC-0242-43AF-BB20-270359FB54A7\\"\\n}","errorExample":""},{"type":"xml","example":"<ReactivateDomainResponse>\\r\\n    <RequestId>6EF60BEC-0242-43AF-BB20-270359FB54A7</RequestId>\\r\\n</ReactivateDomainResponse>","errorExample":""}]',
      'title' => '更新域名绑定状态',
      'summary' => '重新激活合法状态为异常的自定义域名。',
      'description' => '- 此功能面向API提供者
- 需要先解决域名异常提示里的问题后，再执行激活操作
- 当自定义域名合法状态为异常时（一般是域名未备案或者域名被管局列入黑名单），将不能通过该域名访问API
- 域名通过该接口被重新激活后，通过该域名就可正常访问API',
    ),
    'CreateMonitorGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的分组',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6735211ab9094c818f32f27bc545b6c8',
          ),
        ),
        1 => 
        array (
          'name' => 'RawMonitorGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控组id',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '166636221',
          ),
        ),
        2 => 
        array (
          'name' => 'Auth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api的认证状态，取值：-**ok**：成功。-**mismatch**：重定向。-**servicenotfound**：请求错误。-**unknown**：未知错误。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'MonitorGroupId' => 
              array (
                'description' => 'api分组id，系统生成，全局唯一',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '187421794',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '5D7136F7-9D67-5D4D-8418-6A512CCEE3A2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"MonitorGroupId\\": 187421794,\\n  \\"RequestId\\": \\"5D7136F7-9D67-5D4D-8418-6A512CCEE3A2\\"\\n}","type":"json"}]',
      'title' => '创建监控报警分组',
      'summary' => '为指定API分组开启云监控报警。',
    ),
    'DeleteMonitorGroup' => 
    array (
      'summary' => '删除API分组对应的云监控的应用分组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '42925e7f5209438186d5560239af5286',
          ),
        ),
        1 => 
        array (
          'name' => 'RawMonitorGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '166636221',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C7E2CBAA-47FF-569F-AF12-B14B80E25422',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C7E2CBAA-47FF-569F-AF12-B14B80E25422\\"\\n}","type":"json"}]',
      'title' => '删除监控分组',
    ),
    'DescribeApiLatencyData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd6f679aeb3be4b91b3688e887ca1fe16    ',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => false,
            'example' => '63be9002440b4778a61122f14c2b2bbb',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2016-07-23T08:28:48Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2016-07-23T09:28:48Z',
          ),
        ),
        4 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ001',
              ),
              'CallLatencys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '由 MonitorItem 组成的格式，返回API调用延迟监控信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '15',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2016-07-28T08:20:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ001\\",\\n  \\"CallLatencys\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"15\\",\\n        \\"ItemTime\\": \\"2016-07-28T08:20:00Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiLatencyDataResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ001</RequestId>\\r\\n    <CallLatencys>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:20:00Z</ItemTime>\\r\\n            <ItemValue>15</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:22:00Z</ItemTime>\\r\\n            <ItemValue>30</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:24:00Z</ItemTime>\\r\\n            <ItemValue>24</ItemValue>\\r\\n        </MonitorItem>\\r\\n    </CallLatencys>\\r\\n</DescribeApiLatencyDataResponse>","errorExample":""}]',
      'title' => '查询API监控数据中对响应时间统计数据',
      'summary' => '查询指定API监控数据中对响应时间的统计数据。',
      'description' => '查询指定API的监控信息：Latency(ms)
- 此功能面向开放API的用户
- 监控功能默认对线上环境的API做统计，不包括测试环境的API调用',
    ),
    'DescribeApiQpsData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd6f679aeb3be4b91b3688e887ca1fe16    ',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => false,
            'example' => '63be9002440b4778a61122f14c2b2bbb',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2016-07-23T08:28:48Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2016-07-23T09:28:48Z',
          ),
        ),
        4 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ001',
              ),
              'CallSuccesses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '由 MonitorItem 组成的格式，返回API调用成功监控信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '650',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2016-07-28T08:24:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CallFails' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '由 MonitorItem 组成的格式，返回API调用失败监控信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2016-07-28T08:20:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ001\\",\\n  \\"CallSuccesses\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"650\\",\\n        \\"ItemTime\\": \\"2016-07-28T08:24:00Z\\"\\n      }\\n    ]\\n  },\\n  \\"CallFails\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"0\\",\\n        \\"ItemTime\\": \\"2016-07-28T08:20:00Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiQpsDataResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ001</RequestId>\\r\\n    <CallSuccesses>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:20:00Z</ItemTime>\\r\\n            <ItemValue>670</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:22:00Z</ItemTime>\\r\\n            <ItemValue>770</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:24:00Z</ItemTime>\\r\\n            <ItemValue>650</ItemValue>\\r\\n        </MonitorItem>\\r\\n    </CallSuccesses>\\r\\n    <CallFails>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:20:00Z</ItemTime>\\r\\n            <ItemValue>0</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:22:00Z</ItemTime>\\r\\n            <ItemValue>0</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:24:00Z</ItemTime>\\r\\n            <ItemValue>1</ItemValue>\\r\\n        </MonitorItem>\\r\\n    </CallFails>\\r\\n</DescribeApiQpsDataResponse>","errorExample":""}]',
      'title' => '查询API监控数据中对QPS的统计数据',
      'summary' => '查询指定API监控数据中对QPS的统计数据。',
      'description' => '- 此功能面向开放API的用户
- 监控功能默认对线上环境的API做统计，不包括测试环境的API调用
',
    ),
    'DescribeApiTrafficControls' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的分组',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'example' => '123,234',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ApiTrafficControls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiTrafficControlItem' => 
                  array (
                    'description' => '由 ApiTrafficControlItem 组成的数组格式，返回流控策略的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '流控策略绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '46fbb52840d146f186e38e8e70fc8c90',
                        ),
                        'TrafficControlId' => 
                        array (
                          'description' => '流控策略ID',
                          'type' => 'string',
                          'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
                        ),
                        'TrafficControlName' => 
                        array (
                          'description' => '流控策略名称',
                          'type' => 'string',
                          'example' => 'backendsignature',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testapi',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"ApiTrafficControls\\": {\\n    \\"ApiTrafficControlItem\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"ApiId\\": \\"46fbb52840d146f186e38e8e70fc8c90\\",\\n        \\"TrafficControlId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n        \\"TrafficControlName\\": \\"backendsignature\\",\\n        \\"ApiName\\": \\"testapi\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiTrafficControlsResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <ApiTrafficControls>\\r\\n        <ApiTrafficControlItem>\\r\\n            <ApiId>46fbb52840d146f186e38e8e70fc8c90</ApiId>\\r\\n            <ApiName>testapi</ApiName>        \\r\\n            <TrafficControlId>dd05f1c54d6749eda95f9fa6d491449a</TrafficControlId>\\r\\n            <TrafficControlName>backendsignature</TrafficControlName>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </ApiTrafficControlItem>\\r\\n    </ApiTrafficControls>\\r\\n</DescribeApiTrafficControlsResponse>","errorExample":""}]',
      'title' => '查询API流控策略绑定概况',
      'summary' => '查询指定分组指定环境下所有API的流控策略绑定概况。',
      'description' => '- 此功能面向开放API的用户
- 非必填的参数，不传入则默认返回所有，分页返回',
    ),
    'DescribeApiTrafficData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd6f679aeb3be4b91b3688e887ca1fe16',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => false,
            'example' => '63be9002440b4778a61122f14c2b2bbb',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2016-07-23T08:28:48Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2016-07-23T09:28:48Z',
          ),
        ),
        4 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，取值为：

- **RELEASE**：线上
- **TEST**：测试

- PRE：预发',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ001',
              ),
              'CallUploads' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '由 MonitorItem 组成的格式，返回API调用上行数据流量监控信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '670',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2016-07-28T08:20:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CallDownloads' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '由 MonitorItem 组成的格式，返回API调用下行数据流量监控信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2016-07-28T08:20:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ001\\",\\n  \\"CallUploads\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"670\\",\\n        \\"ItemTime\\": \\"2016-07-28T08:20:00Z\\"\\n      }\\n    ]\\n  },\\n  \\"CallDownloads\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"0\\",\\n        \\"ItemTime\\": \\"2016-07-28T08:20:00Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiTrafficDataResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ001</RequestId>\\r\\n    <CallUploads>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:20:00Z</ItemTime>\\r\\n            <ItemValue>670</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:22:00Z</ItemTime>\\r\\n            <ItemValue>770</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:24:00Z</ItemTime>\\r\\n            <ItemValue>650</ItemValue>\\r\\n        </MonitorItem>\\r\\n    </CallUploads>\\r\\n    <CallDownloads>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:20:00Z</ItemTime>\\r\\n            <ItemValue>0</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:22:00Z</ItemTime>\\r\\n            <ItemValue>0</ItemValue>\\r\\n        </MonitorItem>\\r\\n        <MonitorItem>\\r\\n            <ItemTime>2016-07-28T08:24:00Z</ItemTime>\\r\\n            <ItemValue>1</ItemValue>\\r\\n        </MonitorItem>\\r\\n    </CallDownloads>\\r\\n</DescribeApiTrafficDataResponse>","errorExample":""}]',
      'title' => '查询API监控数据中流量统计数据',
      'summary' => '查询指定API监控数据中对流量的统计数据。',
      'description' => '- 此功能面向开放API的用户
- 监控功能默认对线上环境的API做统计，不包括测试环境的API调用
',
    ),
    'DescribeInstanceDropPacket' => 
    array (
      'summary' => '查看专享实例一定时间内丢弃数据包数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-09-06T04:00:36Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-12-16T02:04:36Z',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-v641b9dxc00p',
          ),
        ),
        3 => 
        array (
          'name' => 'SbcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计指标
- Maximum 最大
- Minimum 最小
- Average 平均',
            'type' => 'string',
            'required' => true,
            'example' => 'Maximum',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ001',
              ),
              'InstanceDropPacket' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '实例丢包信息列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '0.0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '时间坐标，按照ISO8601标准表示。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-09-06T04:00:36Z
',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- InstanceDropPacketRX 实例每秒丢弃入包数
- InstanceDropPacketTX 实例每秒丢弃出包数',
                          'type' => 'string',
                          'example' => 'InstanceDropPacketRX',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ001\\",\\n  \\"InstanceDropPacket\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"0.0\\",\\n        \\"ItemTime\\": \\"2022-09-06T04:00:36Z\\\\n\\",\\n        \\"Item\\": \\"InstanceDropPacketRX\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例丢弃的数据数',
    ),
    'DescribeInstanceDropConnections' => 
    array (
      'summary' => '查看专享实例一定时间内丢失的连接数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2023-01-31T06:00:09Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2023-01-31T07:00:09Z',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专享实例ID',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-n6w1v1234501',
          ),
        ),
        3 => 
        array (
          'name' => 'SbcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计指标
- Maximum 最大
- Minimum 最小
- Average 平均',
            'type' => 'string',
            'required' => true,
            'example' => 'Maximum',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'InstanceDropConnections' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '丢失的连接',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '0.0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '时间坐标，按照ISO8601标准表示。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2023-01-31T01:11:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"InstanceDropConnections\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"0.0\\",\\n        \\"ItemTime\\": \\"2023-01-31T01:11:00Z\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例的丢失链接',
    ),
    'DescribeInstanceHttpCode' => 
    array (
      'summary' => '查看专享实例一定时间内请求的HTTP状态码分布。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-04-14T02:12:10Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-07-21T06:05:52Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-m7r227yy2004',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'AD00F8C0-311B-54A9-ADE2-2436771012DA',
              ),
              'InstanceHttpCode' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '返回的HTTP返回码列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => 'HTTP状态码',
                          'type' => 'string',
                          'example' => '404',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AD00F8C0-311B-54A9-ADE2-2436771012DA\\",\\n  \\"InstanceHttpCode\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"1\\",\\n        \\"ItemTime\\": \\"404\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例HTTP代码',
    ),
    'DescribeInstanceLatency' => 
    array (
      'summary' => '查看专享实例一定时间内平均延时。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-09-15T11:07:05Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-09-06T02:05:13Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-v641jf5tt01v',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'InstanceLatency' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '实例平均延时列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-09-06T02:05:13Z
',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- gatewayLatency API网关处理产生的延时
- latency 后端服务处理产生的延时',
                          'type' => 'string',
                          'example' => 'latency',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"InstanceLatency\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"10\\",\\n        \\"ItemTime\\": \\"2022-09-06T02:05:13Z\\\\n\\",\\n        \\"Item\\": \\"latency\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例时延',
    ),
    'DescribeInstanceNewConnections' => 
    array (
      'summary' => '查看专享实例一定时间内新建连接数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-10-01T02:08:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-10-08T02:08:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-2r426lavr001',
          ),
        ),
        3 => 
        array (
          'name' => 'SbcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计指标
- Maximum 最大
- Minimum 最小
- Average 平均',
            'type' => 'string',
            'required' => true,
            'example' => 'Maximum',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'InstanceNewConnections' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '实例新连接列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '16',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-10-08T02:08:00Z
',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"InstanceNewConnections\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"16\\",\\n        \\"ItemTime\\": \\"2022-10-08T02:08:00Z\\\\n\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询实例的新连接数',
    ),
    'DescribeInstancePackets' => 
    array (
      'summary' => '查看专享实例一定时间内流入流出数据包数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-05-18T01:14:26Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-05-24T10:14:53Z',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-2r426lavr001',
          ),
        ),
        3 => 
        array (
          'name' => 'SbcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计指标
- Maximum 最大
- Minimum 最小
- Average 平均',
            'type' => 'string',
            'required' => true,
            'example' => 'Maximum',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'InstancePackets' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '实例流入/流出的数据包',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-05-24T10:14:53Z
',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- InstancePacketRX 流入数据包
- InstancePacketTX 流出数据包',
                          'type' => 'string',
                          'example' => 'InstancePacketRX',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"InstancePackets\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"0\\",\\n        \\"ItemTime\\": \\"2022-05-24T10:14:53Z\\\\n\\",\\n        \\"Item\\": \\"InstancePacketRX\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例的数据包数',
    ),
    'DescribeInstanceQps' => 
    array (
      'summary' => '查看专享实例一定时间内请求次数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-02-10T06:03:47Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-03-29T06:25:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-bj-6c219f1fd5d4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'InstanceQps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '按实例统计API请求次数',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '500',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '时间坐标，按照ISO8601标准表示。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-03-29T06:25:00Z
',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"InstanceQps\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"500\\",\\n        \\"ItemTime\\": \\"2022-03-29T06:25:00Z\\\\n\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询实例的QPS数据',
    ),
    'DescribeInstanceSlbConnect' => 
    array (
      'summary' => '查看专享实例一定时间内并发连接数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-09-01T02:09:33Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-09-15T15:07:06Z',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-sz-1574cc7c5a31',
          ),
        ),
        3 => 
        array (
          'name' => 'SbcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计指标
- Maximum 最大
- Minimum 最小
- Average 平均',
            'type' => 'string',
            'required' => true,
            'example' => 'Maximum',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'E7FE7172-AA75-5880-B6F7-C00893E9BC06',
              ),
              'InstanceSlbConnect' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '实例并发连接数',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '12',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-09-15T15:07:06Z
',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- InstanceMaxConnection 最大并发连接数
- InstanceInactiveConnection 非活跃连接数
- InstanceActiveConnection 活跃连接数',
                          'type' => 'string',
                          'example' => 'InstanceActiveConnection',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E7FE7172-AA75-5880-B6F7-C00893E9BC06\\",\\n  \\"InstanceSlbConnect\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"12\\",\\n        \\"ItemTime\\": \\"2022-09-15T15:07:06Z\\\\n\\",\\n        \\"Item\\": \\"InstanceActiveConnection\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例的Slb链接',
    ),
    'DescribeInstanceTraffic' => 
    array (
      'summary' => '查看专享实例一定时间内请求和应答流量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-03-31T03:42:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-04-01T06:34:03Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-cn-2r426lavr001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'InstanceTraffic' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '实例的请求流量和应答流量',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2022-04-01T06:34:03Z
',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- inbound 请求流量
- outbound 应答流量',
                          'type' => 'string',
                          'example' => 'inbound',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"InstanceTraffic\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"10\\",\\n        \\"ItemTime\\": \\"2022-04-01T06:34:03Z\\\\n\\",\\n        \\"Item\\": \\"inbound\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询指定实例流量信息',
    ),
    'DescribeGroupQps' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-08-12T06:09:52Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-08-23T07:27:44Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => true,
            'example' => '264c60db9f764345a13ac5c825b229b9',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
              'GroupQps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '返回指定的分组的请求量',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应时间节点的请求数量',
                          'type' => 'string',
                          'example' => '17',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '时间节点',
                          'type' => 'string',
                          'example' => '2023-08-02T09:15:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\",\\n  \\"GroupQps\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"17\\",\\n        \\"ItemTime\\": \\"2023-08-02T09:15:00Z\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询指定分组的 QPS 数据',
      'summary' => '查询指定的分组在一段时间内请求量的统计信息。',
    ),
    'CreateApi' => 
    array (
      'summary' => '新建一个 API。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '08ae4aa0f95e4321849ee57f4e0b3077',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置API的名称，组内不允许重复。支持汉字，英文，数字，下划线，且只能以英文和汉字开头，4~50个字符',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ApiName',
          ),
        ),
        2 => 
        array (
          'name' => 'Visibility',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API是否公开，可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境定义，会在所有用户的控制台“发现API”页面可见。
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PUBLIC',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API描述信息，最多180个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'Api description',
          ),
        ),
        4 => 
        array (
          'name' => 'AuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
  任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制。',
            'type' => 'string',
            'required' => false,
            'example' => 'APP',
          ),
        ),
        5 => 
        array (
          'name' => 'RequestConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送API请求的相关配置项。

更多信息，请参见[RequestConfig](~~43985~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"RequestProtocol":"HTTP","RequestHttpMethod":"GET","RequestPath":"/v3/getUserTest/[userId]","BodyFormat":"FORM","PostBodyDescription":""}',
          ),
        ),
        6 => 
        array (
          'name' => 'ServiceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关向后端服务发送API请求的相关配置项。

更多信息，请参见[ServiceConfig](~~43987~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"ServiceProtocol":"HTTP","ServiceHttpMethod":"GET","ServiceAddress":"http://www.customerdomain.com","ServiceTimeout":"1000","ServicePath":"/v3/getUserTest/[userId]"}',
          ),
        ),
        7 => 
        array (
          'name' => 'RequestParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送API请求的参数描述。

更多信息，请参见[RequestParameter](~~43986~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "ParameterLocation": {
                  "name": "Head",
                  "orderNumber": 2
            },
            "ParameterType": "String",
            "Required": "OPTIONAL",
            "isHide": false,
            "ApiParameterName": "header1",
            "DefaultValue": "123124",
            "Location": "Head"
      },
      {
            "ParameterLocation": {
                  "name": "Head",
                  "orderNumber": 2
            },
            "ParameterType": "String",
            "Required": "REQUIRED",
            "isHide": false,
            "ApiParameterName": "header2",
            "DefaultValue": "",
            "Location": "Head"
      },
      {
            "ParameterLocation": {
                  "name": "Query",
                  "orderNumber": 3
            },
            "ParameterType": "String",
            "Required": "OPTIONAL",
            "isHide": false,
            "ApiParameterName": "query1",
            "DefaultValue": "1245",
            "Location": "Query"
      },
      {
            "ApiParameterName": "CaClientIp",
            "ParameterLocation": {
                  "name": "Query",
                  "orderNumber": 0
            },
            "Location": "Query",
            "ParameterType": "String",
            "Required": "REQUIRED",
            "Description": "ClientIP"
      },
      {
            "ApiParameterName": "testConstant",
            "ParameterLocation": {
                  "name": "Head",
                  "orderNumber": 0
            },
            "Location": "Head",
            "ParameterType": "String",
            "Required": "REQUIRED",
            "DefaultValue": "111"
      }
]',
          ),
        ),
        8 => 
        array (
          'name' => 'SystemParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '网关发送给后端服务的系统参数',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"location\\":\\"HEAD\\",\\"parameterName\\":\\"CaDomain\\",\\"serviceParameterName\\":\\"host\\"}]',
          ),
        ),
        9 => 
        array (
          'name' => 'ConstantParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '网关发送给后端服务的常量参数',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"ConstantValue\\":\\"123\\",\\"Description\\":\\"常量参数\\",\\"Location\\":\\"HEAD\\",\\"ServiceParameterName\\":\\"test\\"}]',
          ),
        ),
        10 => 
        array (
          'name' => 'ServiceParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '网关向后端服务发送API请求的参数描述。

更多信息，请参见[ServiceParameter](~~43988~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "ServiceParameterName": "header1",
            "Location": "Head",
            "Type": "String",
            "ParameterCatalog": "REQUEST"
      },
      {
            "ServiceParameterName": "header2",
            "Location": "Query",
            "Type": "String",
            "ParameterCatalog": "REQUEST"
      },
      {
            "ServiceParameterName": "query1",
            "Location": "Head",
            "Type": "String",
            "ParameterCatalog": "REQUEST"
      },
      {
            "ServiceParameterName": "ipp",
            "Location": "Query",
            "Type": "String",
            "ParameterCatalog": "SYSTEM"
      },
      {
            "ServiceParameterName": "testConstant",
            "Location": "Head",
            "Type": "String",
            "ParameterCatalog": "CONSTANT"
      }
]',
          ),
        ),
        11 => 
        array (
          'name' => 'ServiceParametersMap',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送请求的参数和网关向后端服务发送的请求的参数的映射关系。

更多信息，请参见[ServiceParameterMap](~~43989~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "ServiceParameterName": "header1",
            "RequestParameterName": "header1"
      },
      {
            "ServiceParameterName": "header2",
            "RequestParameterName": "header2"
      },
      {
            "ServiceParameterName": "query1",
            "RequestParameterName": "query1"
      },
      {
            "ServiceParameterName": "ipp",
            "RequestParameterName": "CaClientIp"
      },
      {
            "ServiceParameterName": "testConstant",
            "RequestParameterName": "testConstant"
      }
]',
          ),
        ),
        12 => 
        array (
          'name' => 'ResultType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务返回应答的格式，目前可以设置为：JSON、TEXT、BINARY、XML、HTML。默认为JSON。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'HTML',
          ),
        ),
        13 => 
        array (
          'name' => 'ResultSample',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '后端服务返回应答的示例，该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{}',
          ),
        ),
        14 => 
        array (
          'name' => 'FailResultSample',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '后端服务失败返回应答的示例
该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"requestId\\":\\"3b9b8b31-93c3-489e-8ebb-cab35a1aee51\\",\\"errCode\\":500,\\"errMsg\\":\\"connection refused\\"}',
          ),
        ),
        15 => 
        array (
          'name' => 'ErrorCodeSamples',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '后端服务返回的错误码示例。

更多信息，请参见[ErrorCodeSample](~~44392~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"Code\\":\\"400\\",\\"Message\\":\\"Login failed\\",\\"Description\\":\\"Invalid user name or password\\"}]',
          ),
        ),
        16 => 
        array (
          'name' => 'ResultDescriptions',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'api的返回说明',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        17 => 
        array (
          'name' => 'OpenIdConnectConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ip访问控制的开关状态，取值：-**on**：打开-**off**：关闭',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"openIdApiType\\":null,\\"idTokenParamName\\":null,\\"publicKeyId\\":null,\\"publicKey\\":null}',
          ),
        ),
        18 => 
        array (
          'name' => 'AllowSignatureMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当**AuthType**为**APP**认证时，需要传该值明确签名算法。可选值如下，不传默认是HmacSHA256：

- HmacSHA256
- HmacSHA1,HmacSHA256',
            'type' => 'string',
            'required' => false,
            'example' => 'HmacSHA256',
          ),
        ),
        19 => 
        array (
          'name' => 'WebSocketApiType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '双向通信API类型：

- **COMMON**：普通API
- **REGISTER**：注册API
- **UNREGISTER**：注销API
- **NOTIFY**：下行通知',
            'type' => 'string',
            'required' => false,
            'example' => 'COMMON',
          ),
        ),
        20 => 
        array (
          'name' => 'ResultBodyModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api的返回结果',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        21 => 
        array (
          'name' => 'ForceNonceCheck',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 设置**ForceNonceCheck**为**true**, 请求时强制检查X-Ca-Nonce，这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后会校验这个参数的有效性，同样的值，15分内只能被使用一次。可以有效防止API的重放攻击。

- 设置**ForceNonceCheck**为**false**，则不检查。创建API时默认为false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        22 => 
        array (
          'name' => 'DisableInternet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 设置**DisableInternet**为**true**, 仅支持内网调用API。
- 设置**DisableInternet**为**false**, 则不限制调用。创建API时默认为false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        23 => 
        array (
          'name' => 'AppCodeAuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当**AuthType**为**APP**认证时，可选值如下：

- **DEFAULT**：不传默认是DEFAULT（随分组设置）
- **DISABLE**：不允许
- **HEADER**：允许AppCode的Header认证
- **HEADER_QUERY**：允许AppCode的Header及Query认证',
            'type' => 'string',
            'required' => false,
            'example' => 'HEADER',
          ),
        ),
        24 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务ID',
            'type' => 'string',
            'required' => false,
            'example' => 'a0305308908c4740aba9cbfd63ba99b7',
          ),
        ),
        25 => 
        array (
          'name' => 'BackendEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用后端服务',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        26 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签的value
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ApiId' => 
              array (
                'description' => '本次创建API的ID',
                'type' => 'string',
                'example' => '8afff6c8c4c6447abb035812e4d66b65',
              ),
              'RequestId' => 
              array (
                'description' => '本次创建API的请求ID',
                'type' => 'string',
                'example' => '6C87A26A-6A18-4B8E-8099-705278381A2C',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ApiId\\": \\"8afff6c8c4c6447abb035812e4d66b65\\",\\n  \\"RequestId\\": \\"6C87A26A-6A18-4B8E-8099-705278381A2C\\"\\n}","type":"json"}]',
      'title' => '创建 API',
      'description' => '- 此接口面向开放API的用户。
- 同一个分组内API不允许重名。
- 同一个分组内Path不允许重复。
- 该接口调用的QPS限制为：单用户QPS不超过50。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateApiStageVariable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'StageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
          ),
        ),
        2 => 
        array (
          'name' => 'VariableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变量名，区分大小写',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'serverName',
          ),
        ),
        3 => 
        array (
          'name' => 'SupportRoute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否支持路由',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'VariableValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变量值',
            'type' => 'string',
            'required' => false,
            'example' => 'api.domain.com',
          ),
        ),
        5 => 
        array (
          'name' => 'StageRouteModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境路由模型',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => '{
    "location": "HEAD",
    "parameterCatalog": "CUSTOM",
    "parameterType": "String",
    "serviceParameterName": "TestConstant",
    "routeMatchSymbol": "IN",
    "routeRules": [
        {
            "conditionValue": "aaa,bbb",
            "resultValue": "apigateway-test.com"
        }
    ]
}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '03442A3D-3B7D-434C-8A95-A5FEB999B529',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"03442A3D-3B7D-434C-8A95-A5FEB999B529\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateApiStageVariableResponse>\\r\\n    <RequestId>03442A3D-3B7D-434C-8A95-A5FEB999B529</RequestId>\\r\\n</CreateApiStageVariableResponse>","errorExample":""}]',
      'title' => '创建环境变量',
      'summary' => '在某运行环境下增加变量。',
      'description' => '- 此功能面向API提供者
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ImportOAS' => 
    array (
      'summary' => '使用标准OAS定义导入API。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组的ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '08ae4aa0f95e4321849ee57f4e0b3077',
          ),
        ),
        1 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'OAS文本内容，或OSS链接',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Petstore 2.0"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /pet/findByStatus:
    get:
      tags:
      - "pet"
      summary: "Finds Pets by status"
      operationId: "findPetsByStatus"
      parameters:
      - name: "status"
        in: "query"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "available"
          - "pending"
          - "sold"
          default: "available"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pet"
        "400":
          description: "Invalid status value"
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        items:
          type: "string"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"',
          ),
        ),
        2 => 
        array (
          'name' => 'Overwrite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否覆盖现有API。

覆盖检测条件为：API的HTTP请求类型+后端请求路径相同。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'IgnoreWarning',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '忽略警告信息',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'SkipDryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳过预检查，进行导入',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'OASVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OAS版本信息',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'OAS2',
          ),
        ),
        6 => 
        array (
          'name' => 'BackendName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务名称',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'testBackendService',
          ),
        ),
        7 => 
        array (
          'name' => 'AuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
     - 任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'APP',
          ),
        ),
        8 => 
        array (
          'name' => 'RequestMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '入参请求的模式，取值为：

- MAPPING：入参映射（过滤未知参数）

- PASSTHROUGH：入参透传',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'PASSTHROUGH',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OperationId' => 
              array (
                'description' => '进行导入操作时生成的异步任务ID，用来查询导入任务的执行情况',
                'type' => 'string',
                'example' => 'c16a1880f5164d779f6a54f64d997cd9',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'E7FE7172-AA75-5880-B6F7-C00893E9BC06',
              ),
              'ErrorMessages' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ErrorMessage' => 
                  array (
                    'description' => 'OAS定义中不支持的错误内容',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'OAS定义中不支持的错误内容',
                      'type' => 'string',
                      'example' => 'Invalid extensions:x-aliyun-apigateway-auth-type. Option value [ANONYMOUS, APP].',
                    ),
                  ),
                ),
              ),
              'WarningMessages' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'WarningMessage' => 
                  array (
                    'description' => 'OAS定义中不支持的警告信息，可以忽略',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'OAS定义中不支持的警告信息，可以忽略',
                      'type' => 'string',
                      'example' => 'There is no valid api definition in your file.',
                    ),
                  ),
                ),
              ),
              'SuccessApis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SuccessApi' => 
                  array (
                    'description' => '预检成功的API信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预检成功的API信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Path' => 
                        array (
                          'description' => '创建API时配置的请求路径',
                          'type' => 'string',
                          'example' => '/st1',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '创建API时配置的HTTP方法',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API的ID。
',
                          'type' => 'string',
                          'example' => '92af1abffc2443eaa2b815fdbd9c13f1',
                        ),
                        'ApiOperation' => 
                        array (
                          'description' => '该API是创建（CREATE）或修改（MODIFY）',
                          'type' => 'string',
                          'example' => 'CREATE',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'FailedApis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FailedApi' => 
                  array (
                    'description' => '预检失败的API信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预检失败的API信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Path' => 
                        array (
                          'description' => '创建API时配置的请求路径',
                          'type' => 'string',
                          'example' => '/st1',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '创建API时配置的HTTP方法',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'Invalid Api Definition.',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'FailedModels' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FailedModel' => 
                  array (
                    'description' => '预检失败的模型信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预检失败的模型信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'Invalid Model Definition.',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型名称',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API 分组 ID',
                          'type' => 'string',
                          'example' => '2c1bc62e19614cc68c6b0b484bc9c5db',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SuccessModels' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SuccessModel' => 
                  array (
                    'description' => '预检成功的模型信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预检成功的模型信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModelUid' => 
                        array (
                          'description' => '模型uid',
                          'type' => 'string',
                          'example' => '1r4efwee19614cc68c6b0b484bc9c5dbs',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型名称',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API 分组 ID',
                          'type' => 'string',
                          'example' => 'feaccf67040643bcbdedb253e59eb527',
                        ),
                        'ModelOperation' => 
                        array (
                          'description' => '模型操作，创建（CREATE）或修改（MODIFY）',
                          'type' => 'string',
                          'example' => 'CREATE',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OperationId\\": \\"c16a1880f5164d779f6a54f64d997cd9\\",\\n  \\"RequestId\\": \\"E7FE7172-AA75-5880-B6F7-C00893E9BC06\\",\\n  \\"ErrorMessages\\": {\\n    \\"ErrorMessage\\": [\\n      \\"Invalid extensions:x-aliyun-apigateway-auth-type. Option value [ANONYMOUS, APP].\\"\\n    ]\\n  },\\n  \\"WarningMessages\\": {\\n    \\"WarningMessage\\": [\\n      \\"There is no valid api definition in your file.\\"\\n    ]\\n  },\\n  \\"SuccessApis\\": {\\n    \\"SuccessApi\\": [\\n      {\\n        \\"Path\\": \\"/st1\\",\\n        \\"HttpMethod\\": \\"POST\\",\\n        \\"ApiId\\": \\"92af1abffc2443eaa2b815fdbd9c13f1\\",\\n        \\"ApiOperation\\": \\"CREATE\\"\\n      }\\n    ]\\n  },\\n  \\"FailedApis\\": {\\n    \\"FailedApi\\": [\\n      {\\n        \\"Path\\": \\"/st1\\",\\n        \\"HttpMethod\\": \\"POST\\",\\n        \\"ErrorMsg\\": \\"Invalid Api Definition.\\"\\n      }\\n    ]\\n  },\\n  \\"FailedModels\\": {\\n    \\"FailedModel\\": [\\n      {\\n        \\"ErrorMsg\\": \\"Invalid Model Definition.\\",\\n        \\"ModelName\\": \\"test\\",\\n        \\"GroupId\\": \\"2c1bc62e19614cc68c6b0b484bc9c5db\\"\\n      }\\n    ]\\n  },\\n  \\"SuccessModels\\": {\\n    \\"SuccessModel\\": [\\n      {\\n        \\"ModelUid\\": \\"1r4efwee19614cc68c6b0b484bc9c5dbs\\",\\n        \\"ModelName\\": \\"test\\",\\n        \\"GroupId\\": \\"feaccf67040643bcbdedb253e59eb527\\",\\n        \\"ModelOperation\\": \\"CREATE\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '通过OAS导入API',
    ),
    'ImportSwagger' => 
    array (
      'summary' => '通过导入符合阿里云 Swagger 规范的文本内容创建 API。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Overwrite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否覆盖现有API。

覆盖检测条件为：API的HTTP请求类型+后端请求路径相同。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalCondition',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '全局条件。',
            'type' => 'object',
            'required' => false,
            'docRequired' => false,
            'example' => '{}',
          ),
        ),
        2 => 
        array (
          'name' => 'DataFormat',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Swagger文本格式：

- json
- yaml',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'yaml',
          ),
        ),
        3 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Swagger文本内容。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '"A Swagger API definition in YAML"',
          ),
        ),
        4 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Swagger将被导入的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0009db9c828549768a200320714b****',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预检验',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求ID',
                'type' => 'string',
                'example' => '647CEF05-404C-4125-B3D7-44792EB77392',
              ),
              'Success' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportSwaggerSuccess' => 
                  array (
                    'description' => '本次所有通过swagger导入成功的API信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本次所有通过swagger导入成功的API信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Path' => 
                        array (
                          'description' => '创建API时配置的请求路径',
                          'type' => 'string',
                          'example' => '/http/get/mapping',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '创建API时配置的http方法',
                          'type' => 'string',
                          'example' => 'get',
                        ),
                        'ApiOperation' => 
                        array (
                          'description' => '该API是创建（CREATE）或修改（MODIFY）',
                          'type' => 'string',
                          'example' => 'CREATE',
                        ),
                        'ApiUid' => 
                        array (
                          'description' => '导入成功的API的UID',
                          'type' => 'string',
                          'example' => '8e274ec61cf6468e83b683719568****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Failed' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportSwaggerFailed' => 
                  array (
                    'description' => '本次所有通过swagger导入失败的API信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本次所有通过swagger导入失败的API信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Path' => 
                        array (
                          'description' => '创建API时配置的请求路径',
                          'type' => 'string',
                          'example' => '/http/get/mapping',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '创建API时配置的http方法',
                          'type' => 'string',
                          'example' => 'post',
                        ),
                        'ErrorMsg' => 
                        array (
                          'description' => '创建API时返回的错误信息',
                          'type' => 'string',
                          'example' => 'api already exists : apiUid ===> 8e274ec61cf6468e83b683719568****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ModelFailed' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportModelFailed' => 
                  array (
                    'description' => '本次所有通过 swagger 导入失败的 Model 信息。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本次所有通过 swagger 导入失败的 Model 信息。
',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'error msg',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型名称',
                          'type' => 'string',
                          'example' => 'Region',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API 分组 ID',
                          'type' => 'string',
                          'example' => '36d4bcfaec1946e1870d90b2d751****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ModelSuccess' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportModelSuccess' => 
                  array (
                    'description' => '本次所有通过 swagger 导入成功的 Model 信息。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本次所有通过 swagger 导入成功的 Model 信息。

',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModelUid' => 
                        array (
                          'description' => '模型uid',
                          'type' => 'string',
                          'example' => 'd4bcfaec1946e1870d',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型名称',
                          'type' => 'string',
                          'example' => 'NewInstance',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'api分组id',
                          'type' => 'string',
                          'example' => 'b2d552ed90ca435b86f7bf8d4541****',
                        ),
                        'ModelOperation' => 
                        array (
                          'description' => '模型操作',
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"647CEF05-404C-4125-B3D7-44792EB77392\\",\\n  \\"Success\\": {\\n    \\"ApiImportSwaggerSuccess\\": [\\n      {\\n        \\"Path\\": \\"/http/get/mapping\\",\\n        \\"HttpMethod\\": \\"get\\",\\n        \\"ApiOperation\\": \\"CREATE\\",\\n        \\"ApiUid\\": \\"8e274ec61cf6468e83b683719568****\\"\\n      }\\n    ]\\n  },\\n  \\"Failed\\": {\\n    \\"ApiImportSwaggerFailed\\": [\\n      {\\n        \\"Path\\": \\"/http/get/mapping\\",\\n        \\"HttpMethod\\": \\"post\\",\\n        \\"ErrorMsg\\": \\"api already exists : apiUid ===> 8e274ec61cf6468e83b683719568****\\"\\n      }\\n    ]\\n  },\\n  \\"ModelFailed\\": {\\n    \\"ApiImportModelFailed\\": [\\n      {\\n        \\"ErrorMsg\\": \\"error msg\\",\\n        \\"ModelName\\": \\"Region\\",\\n        \\"GroupId\\": \\"36d4bcfaec1946e1870d90b2d751****\\"\\n      }\\n    ]\\n  },\\n  \\"ModelSuccess\\": {\\n    \\"ApiImportModelSuccess\\": [\\n      {\\n        \\"ModelUid\\": \\"d4bcfaec1946e1870d\\",\\n        \\"ModelName\\": \\"NewInstance\\",\\n        \\"GroupId\\": \\"b2d552ed90ca435b86f7bf8d4541****\\",\\n        \\"ModelOperation\\": \\"\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ImportSwaggerResponse>\\r\\n    <RequestId>647CEF05-404C-4125-B3D7-44792EB77392</RequestId>\\r\\n    <Failed>\\r\\n        <ApiImportSwaggerFailed>\\r\\n            <ErrorMsg>api already exists : apiUid ===&gt; 8e274ec61cf6468e83b68371956831cb</ErrorMsg>\\r\\n            <HttpMethod>post</HttpMethod>\\r\\n            <Path>/http/get/mapping</Path>\\r\\n        </ApiImportSwaggerFailed>\\r\\n    </Failed>\\r\\n    <Success>\\r\\n        <ApiImportSwaggerSuccess>\\r\\n            <ApiOperation>CREATE</ApiOperation>\\r\\n            <ApiUid>8e274ec61cf6468e83b68371956831cb</ApiUid>\\r\\n            <HttpMethod>get</HttpMethod>\\r\\n            <Path>/http/get/mapping</Path>\\r\\n        </ApiImportSwaggerSuccess>\\r\\n    </Success>\\r\\n</ImportSwaggerResponse>","errorExample":""}]',
      'title' => '通过 Swagger 创建 API',
      'description' => '- 阿里云目前支持基于Swagger 2.0的扩展
- 只支持json/yaml格式的Swagger配置文件',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteApi' => 
    array (
      'summary' => '删除指定的API定义。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '08ae4aa0f95e4321849ee57f4e0b3077',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd6f679aeb3be4b91b3688e887ca1fe16    ',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ017',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ017\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteApiResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ017</RequestId>        \\r\\n</DeleteApiResponse>","errorExample":""}]',
      'title' => '删除 API 定义',
      'description' => '- 此功能面向开放API的用户，此操作不可逆
- API在运行环境中运行，则不允许删除，需要先调用**AbolishApi**操作下线
- 该接口调用的QPS限制为：单用户QPS不超过50',
    ),
    'DeleteApiStageVariable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'StageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6EF60BEC-0242-43AF-BB20-270359FB54A7',
          ),
        ),
        2 => 
        array (
          'name' => 'VariableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变量名，区分大小写',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'serverName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => '03442A3D-3B7D-434C-8A95-A5FEB969B529',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"03442A3D-3B7D-434C-8A95-A5FEB969B529\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteApiStageVariableResponse>\\r\\n    <RequestId>03442A3D-3B7D-434C-8A95-A5FEB969B529</RequestId>\\r\\n</DeleteApiStageVariableResponse>","errorExample":""}]',
      'title' => '删除环境的指定变量',
      'summary' => '删除指定环境的指定变量。',
      'description' => '- 此功能面向API提供者
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyApiConfiguration' => 
    array (
      'summary' => '本API用于修改API的草稿定义信息，区别于接口ModifyApi，不需要填充所有的API信息才能操作，只需指定要修改的参数进行修改。例如，当需要修改API的认证方式从匿名变为APP认证，只需要传入AuthType的值APP即可。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的ID标识',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'baacc592e63a4cb6a41920d9d3f91f38',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'testModifyApiName',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api描述',
            'type' => 'string',
            'required' => false,
            'example' => '测试修改描述',
          ),
        ),
        3 => 
        array (
          'name' => 'Visibility',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API是否公开，可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境定义，会在所有用户的控制台“发现API”页面可见。
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'PUBLIC',
          ),
        ),
        4 => 
        array (
          'name' => 'ForceNonceCheck',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 设置**ForceNonceCheck**为**true**, 请求时强制检查X-Ca-Nonce，这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后会校验这个参数的有效性，同样的值，15分内只能被使用一次。可以有效防止API的重放攻击。
- 设置**ForceNonceCheck**为**false**, 则不检查。修改时，不设置则不修改原来的取值。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'DisableInternet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 设置**DisableInternet**为**true**, 仅支持内网调用API。
- 设置**DisableInternet**为**false**, 则不限制调用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'AppCodeAuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当**AuthType**为**APP**认证时，可选值如下：

- **DEFAULT**：不传默认是DEFAULT（随分组设置）
- **DISABLE**：不允许
- **HEADER**：允许AppCode的Header认证
- **HEADER_QUERY**：允许AppCode的Header及Query认证',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        7 => 
        array (
          'name' => 'AllowSignatureMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当**AuthType**为**APP**认证时，需要传该值明确签名算法。可选值如下，不传默认是HmacSHA256：

- HmacSHA256
- HmacSHA1,HmacSHA256',
            'type' => 'string',
            'required' => false,
            'example' => 'HmacSHA256',
          ),
        ),
        8 => 
        array (
          'name' => 'AuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
     - 任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制；
     - AppCodeAuthType的值不会生效。',
            'type' => 'string',
            'required' => false,
            'example' => 'APP',
          ),
        ),
        9 => 
        array (
          'name' => 'RequestProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API 支持的协议类型，可以多选，多选情况下以英文逗号隔开，如：”HTTP,HTTPS”，取值为：HTTP、HTTPS。',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTP',
          ),
        ),
        10 => 
        array (
          'name' => 'RequestHttpMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS。',
            'type' => 'string',
            'required' => false,
            'example' => 'GET',
          ),
        ),
        11 => 
        array (
          'name' => 'RequestPath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API path，比如API的完全地址为`http://api.a.com：8080/object/add?key1=value1&key2=value2`，path是指`/object/add`这一部分。',
            'type' => 'string',
            'required' => false,
            'example' => '/test/api',
          ),
        ),
        12 => 
        array (
          'name' => 'RequestMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '入参请求的模式，取值为：

- MAPPING：入参映射（过滤未知参数）

- PASSTHROUGH：入参透传

- MAPPING_PASSTHROUGH：入参映射（透传未知参数）',
            'type' => 'string',
            'required' => false,
            'example' => 'MAPPING',
          ),
        ),
        13 => 
        array (
          'name' => 'BodyFormat',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当**RequestMode**值为**MAPPING**时有效。

POST/PUT请求时，表示数据以何种方式传递给服务器，取值为：**FORM**、**STREAM**，分别表示表单形式(k-v对应)、字节流形式。',
            'type' => 'string',
            'required' => false,
            'example' => 'STREAM',
          ),
        ),
        14 => 
        array (
          'name' => 'PostBodyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求body描述',
            'type' => 'string',
            'required' => false,
            'example' => 'body描述',
          ),
        ),
        15 => 
        array (
          'name' => 'BodyModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'body模型',
            'type' => 'string',
            'required' => false,
            'example' => 'https://apigateway.aliyun.com/models/f4e7333c****40dcbaf7c9da553ccd8d/3ab61f775b****d4bc35e993****87aa8',
          ),
        ),
        16 => 
        array (
          'name' => 'ModelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型的名称',
            'type' => 'string',
            'required' => false,
            'example' => 'Test',
          ),
        ),
        17 => 
        array (
          'name' => 'BackendName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务名称
UseBackendService置为TRUE时才会生效',
            'type' => 'string',
            'required' => false,
            'example' => 'testBackendService',
          ),
        ),
        18 => 
        array (
          'name' => 'ServiceProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务协议类型，目前支持：
- Http： http/https后端
- Vpc： Vpc后端
- FC： 函数计算后端
- OSS： 对象存储后端
- Mock： mock后端
- EventBridge： 事件总线后端

需要指明对应后端服务的配置信息，即为对应的后端服务的config参数赋值。',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTP',
          ),
        ),
        19 => 
        array (
          'name' => 'HttpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'http配置信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"serviceAddress":"http://test.api.com","servicePath":"/test/api","serviceHttpMethod":"GET"}',
          ),
        ),
        20 => 
        array (
          'name' => 'VpcConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'vpc配置',
            'type' => 'string',
            'required' => false,
            'example' => '{"VpcId":"vpc-xxxxxxx","Name":"testVpc","InstanceId":"i-p0ssssss","Port":80,"servicePath":"/test/vpc","serviceHttpMethod":"HEAD"}',
          ),
        ),
        21 => 
        array (
          'name' => 'FunctionComputeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '函数计算配置信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"FcType":"FCEvent","FcRegionId":"cn-hangzhou","RoleArn":"acs:ram::xxxxxxxx:role/aliyunserviceroleforapigateway","selectServiceName":"fcTest","FunctionName":"funcTest","selectFunctionName":"funcTest","Qualifier":"LATEST","Path":"","FcBaseUrl":"","ServiceName":"fcTest"}',
          ),
        ),
        22 => 
        array (
          'name' => 'OssConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSS配置信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"OssRegionId":"cn-hangzhou","Key":"/test.html","BucketName":"test-api-oss","Action":"GetObject"}',
          ),
        ),
        23 => 
        array (
          'name' => 'MockConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Mock配置信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"MockResult":"test","MockHeaders":[{"HeaderName":"testHeader","HeaderValue":"testHeader"}],"MockStatusCode":"400"}',
          ),
        ),
        24 => 
        array (
          'name' => 'ServiceTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务超时时间，单位：毫秒',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        25 => 
        array (
          'name' => 'ContentTypeCategory',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端请求ContentType配置
- DEFAULT：API网关默认
- CUSTOM：自定义',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        26 => 
        array (
          'name' => 'ContentTypeValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调用后端服务HTTP服务，ContentTypeCatagory的值为DEFAULT或者CUSTOM时，ContentType头的取值。',
            'type' => 'string',
            'required' => false,
            'example' => 'application/x-www-form-urlencoded; charset=UTF-8',
          ),
        ),
        27 => 
        array (
          'name' => 'RequestParameters',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送API请求的参数描述。

更多信息，请参见[RequestParameter](~~43986~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"ParameterLocation":{"name":"Head","orderNumber":2},"ParameterType":"String","Required":"OPTIONAL","isHide":false,"ApiParameterName":"header1","DefaultValue":"123124","Location":"Head"},{"ParameterLocation":{"name":"Head","orderNumber":2},"ParameterType":"String","Required":"REQUIRED","isHide":false,"ApiParameterName":"header2","DefaultValue":"","Location":"Head"},{"ParameterLocation":{"name":"Query","orderNumber":3},"ParameterType":"String","Required":"OPTIONAL","isHide":false,"ApiParameterName":"query1","DefaultValue":"1245","Location":"Query"},{"ApiParameterName":"CaClientIp","ParameterLocation":{"name":"Query","orderNumber":0},"Location":"Query","ParameterType":"String","Required":"REQUIRED","Description":"ClientIP"},{"ApiParameterName":"testConstant","ParameterLocation":{"name":"Head","orderNumber":0},"Location":"Head","ParameterType":"String","Required":"REQUIRED","DefaultValue":"111"}]',
          ),
        ),
        28 => 
        array (
          'name' => 'ServiceParameters',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关向后端服务发送API请求的参数描述。

更多信息，请参见[ServiceParameter](~~43988~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"ServiceParameterName":"header1","Location":"Head","Type":"String","ParameterCatalog":"REQUEST"},{"ServiceParameterName":"header2","Location":"Query","Type":"String","ParameterCatalog":"REQUEST"},{"ServiceParameterName":"query1","Location":"Head","Type":"String","ParameterCatalog":"REQUEST"},{"ServiceParameterName":"ipp","Location":"Query","Type":"String","ParameterCatalog":"SYSTEM"},{"ServiceParameterName":"testConstant","Location":"Head","Type":"String","ParameterCatalog":"CONSTANT"}]',
          ),
        ),
        29 => 
        array (
          'name' => 'ServiceParametersMap',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送请求的参数和网关向后端服务发送的请求的参数的映射关系。

更多信息，请参见[ServiceParameterMap](~~43989~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"ServiceParameterName":"header1","RequestParameterName":"header1"},{"ServiceParameterName":"header2","RequestParameterName":"header2"},{"ServiceParameterName":"query1","RequestParameterName":"query1"},{"ServiceParameterName":"ipp","RequestParameterName":"CaClientIp"},{"ServiceParameterName":"testConstant","RequestParameterName":"testConstant"}]',
          ),
        ),
        30 => 
        array (
          'name' => 'ResultType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务返回应答的格式，目前可以设置为：JSON、TEXT、BINARY、XML、HTML。
该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'JSON',
          ),
        ),
        31 => 
        array (
          'name' => 'ResultSample',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务返回应答的示例
该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{\\n  \\"status\\": 0,\\n  \\"data\\": {\\n    \\"count\\": 1,\\n    \\"list\\": [\\n      \\"352\\"\\n    ]\\n  },\\n  \\"message\\": \\"success\\"\\n}',
          ),
        ),
        32 => 
        array (
          'name' => 'FailResultSample',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务失败返回应答的示例
该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'example' => '{"errorCode":"fail","errorMessage":"param invalid"}',
          ),
        ),
        33 => 
        array (
          'name' => 'ErrorCodeSamples',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务返回的错误码示例。

更多信息，请参见[ErrorCodeSample](~~44392~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"Code":"400","Message":"Missing the userId","Description":"param invalid"}]',
          ),
        ),
        34 => 
        array (
          'name' => 'UseBackendService',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用创建的后端服务资源：
- TRUE：使用创建的后端服务
- FALSE：自定义后端服务信息
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'TRUE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '6C87A26A-6A18-4B8E-8099-705278381A2C',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6C87A26A-6A18-4B8E-8099-705278381A2C\\"\\n}","type":"json"}]',
      'title' => '修改API定义',
    ),
    'ModifyApi' => 
    array (
      'summary' => '修改API的定义信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '927d50c0f2e54b359919923d908bb015',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8afff6c8c4c6447abb035812e4d66b65',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的名称，组内不允许重复。支持汉字，英文，数字，下划线，且只能以英文和汉字开头，4~50个字符',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ApiName',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API描述信息，最多180个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'Api description',
          ),
        ),
        4 => 
        array (
          'name' => 'Visibility',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API是否公开，目前可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境，会在所有用户的控制台“发现API”页面展示
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PUBLIC',
          ),
        ),
        5 => 
        array (
          'name' => 'AuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
     - 任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制。
     - “ANONYMOUS”API**不建议上架云市场**，网关无法对调用者区分计量，也无法限制调用次数，若所在分组要上架云市场，建议将该API转移至其他分组，或将类型设置为“私有”，或选择“阿里云APP”认证方式。',
            'type' => 'string',
            'required' => false,
            'example' => 'APP',
          ),
        ),
        6 => 
        array (
          'name' => 'RequestConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送API请求的相关配置项',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"RequestProtocol":"HTTP","RequestHttpMethod":"GET","RequestPath":"/v3/getUserTest/[userId]","BodyFormat":"FORM","PostBodyDescription":""}',
          ),
        ),
        7 => 
        array (
          'name' => 'ServiceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关向后端服务发送API请求的相关配置项',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"ServiceProtocol":"HTTP","ServiceHttpMethod":"GET","ServiceAddress":"http://www.customerdomain.com","ServiceTimeout":"1000","ServicePath":"/v3/getUserTest/[userId]"}',
          ),
        ),
        8 => 
        array (
          'name' => 'RequestParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送API请求的参数描述。

更多信息，请参见[RequestParameter](~~43986~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "ParameterLocation": {
                  "name": "Head",
                  "orderNumber": 2
            },
            "ParameterType": "String",
            "Required": "OPTIONAL",
            "isHide": false,
            "ApiParameterName": "header1",
            "DefaultValue": "123124",
            "Location": "Head"
      },
      {
            "ParameterLocation": {
                  "name": "Head",
                  "orderNumber": 2
            },
            "ParameterType": "String",
            "Required": "REQUIRED",
            "isHide": false,
            "ApiParameterName": "header2",
            "DefaultValue": "",
            "Location": "Head"
      },
      {
            "ParameterLocation": {
                  "name": "Query",
                  "orderNumber": 3
            },
            "ParameterType": "String",
            "Required": "OPTIONAL",
            "isHide": false,
            "ApiParameterName": "query1",
            "DefaultValue": "1245",
            "Location": "Query"
      },
      {
            "ApiParameterName": "CaClientIp",
            "ParameterLocation": {
                  "name": "Query",
                  "orderNumber": 0
            },
            "Location": "Query",
            "ParameterType": "String",
            "Required": "REQUIRED",
            "Description": "ClientIP"
      },
      {
            "ApiParameterName": "testConstant",
            "ParameterLocation": {
                  "name": "Head",
                  "orderNumber": 0
            },
            "Location": "Head",
            "ParameterType": "String",
            "Required": "REQUIRED",
            "DefaultValue": "111"
      }
]',
          ),
        ),
        9 => 
        array (
          'name' => 'SystemParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '网关发送给后端服务的系统参数',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"location\\":\\"HEAD\\",\\"parameterName\\":\\"CaDomain\\",\\"serviceParameterName\\":\\"host\\"}]',
          ),
        ),
        10 => 
        array (
          'name' => 'ConstantParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '网关发送给后端服务的常量参数',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"ConstantValue\\":\\"123\\",\\"Description\\":\\"常量参数\\",\\"Location\\":\\"HEAD\\",\\"ServiceParameterName\\":\\"test\\"}]',
          ),
        ),
        11 => 
        array (
          'name' => 'ServiceParameters',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '网关向后端服务发送API请求的参数描述。

更多信息，请参见[ServiceParameter](~~43988~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "ServiceParameterName": "header1",
            "Location": "Head",
            "Type": "String",
            "ParameterCatalog": "REQUEST"
      },
      {
            "ServiceParameterName": "header2",
            "Location": "Query",
            "Type": "String",
            "ParameterCatalog": "REQUEST"
      },
      {
            "ServiceParameterName": "query1",
            "Location": "Head",
            "Type": "String",
            "ParameterCatalog": "REQUEST"
      },
      {
            "ServiceParameterName": "ipp",
            "Location": "Query",
            "Type": "String",
            "ParameterCatalog": "SYSTEM"
      },
      {
            "ServiceParameterName": "testConstant",
            "Location": "Head",
            "Type": "String",
            "ParameterCatalog": "CONSTANT"
      }
]',
          ),
        ),
        12 => 
        array (
          'name' => 'ServiceParametersMap',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Consumer向网关发送请求的参数和网关向后端服务发送的请求的参数的映射关系。

更多信息，请参见[ServiceParameterMap](~~43989~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "ServiceParameterName": "header1",
            "RequestParameterName": "header1"
      },
      {
            "ServiceParameterName": "header2",
            "RequestParameterName": "header2"
      },
      {
            "ServiceParameterName": "query1",
            "RequestParameterName": "query1"
      },
      {
            "ServiceParameterName": "ipp",
            "RequestParameterName": "CaClientIp"
      },
      {
            "ServiceParameterName": "testConstant",
            "RequestParameterName": "testConstant"
      }
]',
          ),
        ),
        13 => 
        array (
          'name' => 'ResultType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务返回应答的格式，目前可以设置为：JSON、TEXT、BINARY、XML、HTML。
该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'HTML',
          ),
        ),
        14 => 
        array (
          'name' => 'ResultSample',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '后端服务返回应答的示例 该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '{}',
          ),
        ),
        15 => 
        array (
          'name' => 'FailResultSample',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '后端服务失败返回应答的示例。
该值仅用于生成文档使用。不对返回结果产生影响。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"requestId\\":\\"3b9b8b31-93c3-489e-8ebb-cab35a1aee51\\",\\"errCode\\":500,\\"errMsg\\":\\"connection refused\\"}',
          ),
        ),
        16 => 
        array (
          'name' => 'ErrorCodeSamples',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '后端服务返回的错误码示例。

更多信息，请参见[ErrorCodeSample](~~44392~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"Code\\":\\"400\\",\\"Message\\":\\"Login failed\\",\\"Description\\":\\"Invalid user name or password\\"}]',
          ),
        ),
        17 => 
        array (
          'name' => 'ResultDescriptions',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'api的返回说明',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        18 => 
        array (
          'name' => 'OpenIdConnectConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第三方账号认证OpenID Connect相关配置项',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"OpenIdApiType\\":\\"IDTOKEN\\",\\"PublicKey\\":\\"lzlj1573\\",\\"IdTokenParamName\\":\\"\\",\\"PublicKeyId\\":\\"lzljorders\\"}',
          ),
        ),
        19 => 
        array (
          'name' => 'AllowSignatureMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的客户端请求签名方法，可选值：

- HmacSHA256
- HmacSHA1,HmacSHA256',
            'type' => 'string',
            'required' => false,
            'example' => 'HmacSHA256',
          ),
        ),
        20 => 
        array (
          'name' => 'WebSocketApiType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '双向通信API类型：

- **COMMON**：普通API
- **REGISTER**：注册API
- **UNREGISTER**：注销API
- **NOTIFY**：下行通知
',
            'type' => 'string',
            'required' => false,
            'example' => 'COMMON',
          ),
        ),
        21 => 
        array (
          'name' => 'ResultBodyModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api的返回结果',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        22 => 
        array (
          'name' => 'ForceNonceCheck',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 设置**ForceNonceCheck**为**true**, 请求时强制检查X-Ca-Nonce，这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后会校验这个参数的有效性，同样的值，15分内只能被使用一次。可以有效防止API的重放攻击。
- 设置**ForceNonceCheck**为**false**, 则不检查。修改时，不设置则不修改原来的取值。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        23 => 
        array (
          'name' => 'DisableInternet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 设置DisableInternet为**true**，仅支持内网调用API。
- 设置DisableInternet为**false**，则不限制调用。

> 修改API时，不设置则不修改原来的取值。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        24 => 
        array (
          'name' => 'AppCodeAuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持AppCode的认证类型。可选值：

- DEFAULT：默认值：上架云市场后支持
- DISABLE： 不支持AppCode调用方式
- HEADER  ：仅在Header中支持
- HEADER_QUERY ：可以在Header或者Query中支持',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        25 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务ID',
            'type' => 'string',
            'required' => false,
            'example' => '0d105f80a8f340408bd34954d4e4ff22',
          ),
        ),
        26 => 
        array (
          'name' => 'BackendEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用后端服务',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6C87A26A-6A18-4B8E-8099-705278381A2C',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6C87A26A-6A18-4B8E-8099-705278381A2C\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyApiResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</ModifyApiResponse>","errorExample":""}]',
      'title' => '修改API定义',
      'description' => '**"** 此接口面向开放API的用户
- 该接口需要全量更新，不支持部分参数更新
- 修改ApiName时需要注意，同一个分组内API不允许重名
- 修改RequestPath时需要注意，同一个分组内Path不允许重复
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApisByBackend' => 
    array (
      'summary' => '查询使用该后端服务创建的草稿态API，或已发布在某个环境上的API。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务ID',
            'type' => 'string',
            'required' => true,
            'example' => '4ac69b7a17524781b275ed4c5eb25c54',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询API的环境

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试

不填写查询的是草稿态API',
            'type' => 'string',
            'required' => false,
            'example' => 'PRE',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：每页显示条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '分页参数：当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEB6EC62-B6C7-5082-A45A-45A204724AC2',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ApiInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiInfo' => 
                  array (
                    'description' => '返回的API列表信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => '20bcdc9453524b78a8beb1f6de21edb7',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API的描述信息',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'api分组名称',
                          'type' => 'string',
                          'example' => 'testApiGroup',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'api分组ID',
                          'type' => 'string',
                          'example' => '15bcdc9453524b7gs8beb1f6de21edb7',
                        ),
                        'Path' => 
                        array (
                          'description' => 'API的请求路径',
                          'type' => 'string',
                          'example' => '/test',
                        ),
                        'Method' => 
                        array (
                          'description' => 'API的请求方法',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testApi',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEB6EC62-B6C7-5082-A45A-45A204724AC2\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"ApiInfoList\\": {\\n    \\"ApiInfo\\": [\\n      {\\n        \\"ApiId\\": \\"20bcdc9453524b78a8beb1f6de21edb7\\",\\n        \\"Description\\": \\"test\\",\\n        \\"GroupName\\": \\"testApiGroup\\",\\n        \\"GroupId\\": \\"15bcdc9453524b7gs8beb1f6de21edb7\\",\\n        \\"Path\\": \\"/test\\",\\n        \\"Method\\": \\"GET\\",\\n        \\"ApiName\\": \\"testApi\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '根据后端查询 API 列表',
    ),
    'DescribeApi' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API所在的分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的ID标识',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8afff6c8c4c6447abb035812e4d66b65',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ApiId' => 
              array (
                'description' => 'API的ID标识',
                'type' => 'string',
                'example' => '8afff6c8c4c6447abb035812e4d66b65',
              ),
              'ResultType' => 
              array (
                'description' => '后端服务返回应答的格式，目前可以设置为：JSON、TEXT、BINARY、XML、HTML。',
                'type' => 'string',
                'example' => 'JSON',
              ),
              'WebSocketApiType' => 
              array (
                'description' => '双向通信API类型：

- **COMMON**：普通API
- **REGISTER**：注册API
- **UNREGISTER**：注销API
- **NOTIFY**：下行通知',
                'type' => 'string',
                'example' => 'COMMON',
              ),
              'DisableInternet' => 
              array (
                'description' => 'API是否仅支持内网调用, 取值：

- **true**：仅支持内网调用API
- **false**：不限制调用',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'ResultBodyModel' => 
              array (
                'description' => 'api的返回结果',
                'type' => 'string',
                'example' => '{}',
              ),
              'ResultSample' => 
              array (
                'description' => '后端服务返回应答的示例',
                'type' => 'string',
                'example' => '200',
              ),
              'AppCodeAuthType' => 
              array (
                'description' => '当**AuthType**为**APP**认证时，可选值如下：

- **DEFAULT**: 不传默认是DEFAULT(随分组设置)
- **DISABLE**: 不允许
- **HEADER**: 允许AppCode的Header认证
- **HEADER_QUERY**: 允许AppCode的Header及Query认证',
                'type' => 'string',
                'example' => 'HEADER',
              ),
              'AllowSignatureMethod' => 
              array (
                'description' => '当**AuthType**为**APP**认证时，需要传该值明确签名算法。可选值如下，不传默认是HmacSHA256：

- HmacSHA256
- HmacSHA1,HmacSHA256',
                'type' => 'string',
                'example' => 'HmacSHA256',
              ),
              'RegionId' => 
              array (
                'description' => 'API所处的Region的ID',
                'type' => 'string',
                'example' => 'cn-qingdao',
              ),
              'ForceNonceCheck' => 
              array (
                'description' => '调用API时是否必须携带header : X-Ca-Nonce, 这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后通过校验这个参数的有效性可以有效防止API的重放攻击，同样的值，15分内只能被使用一次。 取值：

- **true**: 请求API时强制检查这个字段，防止API的重放攻击
- **false**: 不检查这个字段',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Visibility' => 
              array (
                'description' => 'API是否公开，目前可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境，会在所有用户的控制台“发现API”页面展示
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架',
                'type' => 'string',
                'example' => 'PUBLIC',
              ),
              'FailResultSample' => 
              array (
                'description' => '后端服务失败返回应答的示例',
                'type' => 'string',
                'example' => '400',
              ),
              'AuthType' => 
              array (
                'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
    - 任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制。
    - “ANONYMOUS”API不建议上架云市场，网关无法对调用者区分计量，也无法限制调用次数，若所在分组要上架云市场，建议将该API转移至其他分组，或将类型设置为“私有”，或选择“阿里云APP”认证方式。
- **APPOPENID**：支持第三方账号认证OpenID Connect，而且只允许已授权的APP调用；当设置此项时，参数OpenIdConnectConfig为必传。',
                'type' => 'string',
                'example' => 'APP',
              ),
              'ModifiedTime' => 
              array (
                'description' => 'API最后一次修改的时间',
                'type' => 'string',
                'example' => '2016-07-28T13:13:12Z',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D0FF585F-7966-40CF-BC60-75DB070B23D5<',
              ),
              'Description' => 
              array (
                'description' => 'API描述信息',
                'type' => 'string',
                'example' => 'Api description',
              ),
              'GroupName' => 
              array (
                'description' => 'API所在的分组名称',
                'type' => 'string',
                'example' => 'ApiTest',
              ),
              'GroupId' => 
              array (
                'description' => 'API所在的分组编号',
                'type' => 'string',
                'example' => '08ae4aa0f95e4321849ee57f4e0b3077',
              ),
              'Mock' => 
              array (
                'description' => '是否启用MOCK模式，目前可以取值：

-  OPEN：启用Mock模式 

- CLOSED：不启用Mock模式',
                'type' => 'string',
                'example' => 'CLOSED',
              ),
              'MockResult' => 
              array (
                'description' => 'Mock返回结果',
                'type' => 'string',
                'example' => 'test result',
              ),
              'CreatedTime' => 
              array (
                'description' => 'API创建的时间',
                'type' => 'string',
                'example' => '2016-07-28T09:50:43Z',
              ),
              'ApiName' => 
              array (
                'description' => 'API的名称，组内不允许重复',
                'type' => 'string',
                'example' => 'ApiName',
              ),
              'BackendEnable' => 
              array (
                'description' => '是否启用后端服务',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BackendConfig' => 
              array (
                'description' => '后端配置',
                'type' => 'object',
                'properties' => 
                array (
                  'BackendId' => 
                  array (
                    'description' => '后端服务ID',
                    'type' => 'string',
                    'example' => '0038e00c3dca44fcba3a94015d8f5bbf',
                  ),
                  'BackendType' => 
                  array (
                    'description' => '后端服务类型',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'BackendName' => 
                  array (
                    'description' => '后端服务名称',
                    'type' => 'string',
                    'example' => 'testoss',
                  ),
                ),
              ),
              'RequestConfig' => 
              array (
                'description' => 'Consumer向网关发送API请求的相关配置项',
                'type' => 'object',
                'properties' => 
                array (
                  'BodyModel' => 
                  array (
                    'description' => 'body模型',
                    'type' => 'string',
                    'example' => 'https://apigateway.aliyun.com/models/3a240a127dcc4afd9ab1bf7e947b4095/9e2df550e85b4121a79ec33e2619eaab',
                  ),
                  'RequestPath' => 
                  array (
                    'description' => 'API path，比如API的完全地址为`http://api.a.com：8080/object/add?key1=value1&key2=value2`，path是指`/object/add`这一部分。',
                    'type' => 'string',
                    'example' => '/api/billing/test/[type]',
                  ),
                  'RequestHttpMethod' => 
                  array (
                    'description' => 'HTTP Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS。',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'BodyFormat' => 
                  array (
                    'description' => '当**RequestMode**值为**MAPPING**时有效。

POST/PUT请求时，表示数据以何种方式传递给服务器，取值为：**FORM**、**STREAM**，分别表示表单形式(k-v对应)、字节流形式。',
                    'type' => 'string',
                    'example' => 'STREAM',
                  ),
                  'RequestMode' => 
                  array (
                    'description' => '请求的模式，取值为：**MAPPING**、**PASSTHROUGH**，分别表示入参映射、入参透传',
                    'type' => 'string',
                    'example' => 'MAPPING',
                  ),
                  'PostBodyDescription' => 
                  array (
                    'description' => 'Body描述',
                    'type' => 'string',
                    'example' => 'fwefwef',
                  ),
                  'RequestProtocol' => 
                  array (
                    'description' => 'API 支持的协议类型，可以多选，多选情况下以英文逗号隔开，如：”HTTP,HTTPS”，取值为：HTTP、HTTPS。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'EscapePathParam' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
              ),
              'ServiceConfig' => 
              array (
                'description' => '网关向后端服务发送API请求的相关配置项',
                'type' => 'object',
                'properties' => 
                array (
                  'AoneAppName' => 
                  array (
                    'description' => 'aone应用名称',
                    'type' => 'string',
                    'example' => 'ib-blank',
                  ),
                  'MockStatusCode' => 
                  array (
                    'description' => 'Mock返回状态码',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'ContentTypeValue' => 
                  array (
                    'description' => '调用后端服务HTTP服务，ContentTypeCatagory的值为DEFAULT或者CUSTOM时，ContentType头的取值。',
                    'type' => 'string',
                    'example' => 'application/x-www-form-urlencoded; charset=UTF-8',
                  ),
                  'ServiceProtocol' => 
                  array (
                    'description' => '后端服务协议类型，目前只支持HTTP/HTTPS',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'ServicePath' => 
                  array (
                    'description' => '调用后端服务path，比如后端服务完全地址为`http://api.a.com:8080/object/add?key1=value1&key2=value2`，**ServicePath**是指`/object/add`这一部分。',
                    'type' => 'string',
                    'example' => '/object/add',
                  ),
                  'ContentTypeCatagory' => 
                  array (
                    'description' => '调用后端服务HTTP服务时，ContentType头的取值策略：

- **DEFAULT**：使用API网关默认的值
- **CUSTOM**：自定义
- **CLIENT**：使用客户端上行的ContentType的头',
                    'type' => 'string',
                    'example' => 'CUSTOM',
                  ),
                  'ServiceAddress' => 
                  array (
                    'description' => '调用后端服务地址，比如后端服务完全地址为`http://api.a.com:8080/object/add?key1=value1&key2=value2`，**ServiceAddress**是指`http://api.a.com:8080`这一部分。',
                    'type' => 'string',
                    'example' => 'http://api.a.com:8080',
                  ),
                  'Mock' => 
                  array (
                    'description' => '是否采取Mock模式，目前可以取值：

- **TRUE**：启用Mock模式
- **FALSE**：不启用Mock模式',
                    'type' => 'string',
                    'example' => 'TRUE',
                  ),
                  'ServiceVpcEnable' => 
                  array (
                    'description' => '是否启用VPC通道，目前可以取值：

- **TRUE**：启用VPC通道，必须先添加VPC授权成功后才能启用
- **FALSE**：不启用VPC通',
                    'type' => 'string',
                    'example' => 'TRUE',
                  ),
                  'MockResult' => 
                  array (
                    'description' => '如果启用Mock模式，返回的结果',
                    'type' => 'string',
                    'example' => 'test result',
                  ),
                  'ServiceHttpMethod' => 
                  array (
                    'description' => '调用后端服务HTTP协议时的Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS。',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'ServiceTimeout' => 
                  array (
                    'description' => '后端服务超时时间，单位：毫秒',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'MockHeaders' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MockHeader' => 
                      array (
                        'description' => '模拟 Headers',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HeaderValue' => 
                            array (
                              'description' => 'HTTP头参数的取值。',
                              'type' => 'string',
                              'example' => '86400',
                            ),
                            'HeaderName' => 
                            array (
                              'description' => 'HTTP头参数的名字。',
                              'type' => 'string',
                              'example' => 'Content-Length',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'VpcConfig' => 
                  array (
                    'description' => 'VPC通道相关配置项',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VpcId' => 
                      array (
                        'description' => '专用网络ID',
                        'type' => 'string',
                        'example' => 'vpc-2zeafsc3fygk1***',
                      ),
                      'VpcScheme' => 
                      array (
                        'description' => 'VPC协议',
                        'type' => 'string',
                        'example' => 'HTTP',
                      ),
                      'InstanceId' => 
                      array (
                        'description' => '专用网络中的实例ID（Ecs/负载均衡）',
                        'type' => 'string',
                        'example' => 'i-bp1h497hkijewv2***',
                      ),
                      'Port' => 
                      array (
                        'description' => '实例对应的端口号',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8080',
                      ),
                      'Name' => 
                      array (
                        'description' => 'VPC授权名称',
                        'type' => 'string',
                        'example' => 'glmall-app-test',
                      ),
                    ),
                  ),
                  'FunctionComputeConfig' => 
                  array (
                    'description' => '后端为函数计算时的后端配置项',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FcType' => 
                      array (
                        'description' => '函数计算服务类型',
                        'type' => 'string',
                        'example' => 'HttpTrigger',
                      ),
                      'RoleArn' => 
                      array (
                        'description' => 'Ram授权给API网关访问函数计算的arn',
                        'type' => 'string',
                        'example' => 'acs:ram::111***:role/aliyunserviceroleforsas',
                      ),
                      'Method' => 
                      array (
                        'description' => '请求方法。',
                        'type' => 'string',
                        'example' => 'GET',
                      ),
                      'FcBaseUrl' => 
                      array (
                        'description' => '函数计算服务根路径',
                        'type' => 'string',
                        'example' => 'https://1227****64334133.ap-southeast-1-int***al.fc.aliyuncs.com/201****-15/proxy/test****ice.LATEST/testHttp/',
                      ),
                      'ContentTypeValue' => 
                      array (
                        'description' => '调用后端服务函数计算服务，ContentTypeCatagory的值为DEFAULT或者CUSTOM时，ContentType头的取值。',
                        'type' => 'string',
                        'example' => 'application/x-www-form-urlencoded; charset=UTF-8',
                      ),
                      'RegionId' => 
                      array (
                        'description' => '函数计算所在Region',
                        'type' => 'string',
                        'example' => 'cn-qingdao',
                      ),
                      'OnlyBusinessPath' => 
                      array (
                        'description' => '后端只接收业务path',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'FunctionName' => 
                      array (
                        'description' => '函数计算定义的FunctionName',
                        'type' => 'string',
                        'example' => 'edge_function',
                      ),
                      'ContentTypeCatagory' => 
                      array (
                        'description' => '调用后端服务函数计算服务时，ContentType头的取值策略：

- **DEFAULT**：使用API网关默认的值
- **CUSTOM**：自定义
- **CLIENT**：使用客户端上行的ContentType的头',
                        'type' => 'string',
                        'example' => 'DEFAULT',
                      ),
                      'Path' => 
                      array (
                        'description' => 'API请求路径',
                        'type' => 'string',
                        'example' => '/api/offline/cacheData',
                      ),
                      'ServiceName' => 
                      array (
                        'description' => '函数计算定义的ServiceName',
                        'type' => 'string',
                        'example' => 'fcservicename',
                      ),
                      'Qualifier' => 
                      array (
                        'description' => '函数别名',
                        'type' => 'string',
                        'example' => '2',
                      ),
                    ),
                  ),
                  'OssConfig' => 
                  array (
                    'description' => '后端为OSS的信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Key' => 
                      array (
                        'description' => 'OSS内存储对象或文件夹路径',
                        'type' => 'string',
                        'example' => '/folder/test.json',
                      ),
                      'Action' => 
                      array (
                        'description' => 'OSS的操作，目前可以取值
  - GetObject
  - PostObject
  - DeleteObject
  - PutObject
  - HeadObject
  - GetObjectMeta
  - AppendObject',
                        'type' => 'string',
                        'example' => 'GetObject',
                      ),
                      'OssRegionId' => 
                      array (
                        'description' => 'OSS服务所在地域ID。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou',
                      ),
                      'BucketName' => 
                      array (
                        'description' => 'OSS存储Bucket。',
                        'type' => 'string',
                        'example' => 'cbg-db',
                      ),
                    ),
                  ),
                  'EventBridgeConfig' => 
                  array (
                    'description' => '事件总线设置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EventBus' => 
                      array (
                        'description' => '事件总线',
                        'type' => 'string',
                        'example' => 'testBus',
                      ),
                      'EventSource' => 
                      array (
                        'description' => '事件来源。
',
                        'type' => 'string',
                        'example' => 'baas_driver',
                      ),
                      'EventBridgeRegionId' => 
                      array (
                        'description' => '事件总线服务所在区域ID',
                        'type' => 'string',
                        'example' => 'cn-beijing',
                      ),
                      'RoleArn' => 
                      array (
                        'description' => 'Ram授权给EventBridge的arn',
                        'type' => 'string',
                        'example' => 'acs:ram::1933122015759***:role/adminoidcaliyun',
                      ),
                    ),
                  ),
                ),
              ),
              'OpenIdConnectConfig' => 
              array (
                'description' => '第三方账号认证OpenID Connect相关配置项',
                'type' => 'object',
                'properties' => 
                array (
                  'OpenIdApiType' => 
                  array (
                    'description' => 'OpenID Connect模式，目前可以取值：

- **IDTOKEN**：获取授权API，颁发Token，当设置此项时，参数PublicKeyId和PublicKey为必传。
- **BUSINESS**：业务API，Token验证，当设置此项时，参数IdTokenParamName为必传。',
                    'type' => 'string',
                    'example' => 'IDTOKEN',
                  ),
                  'IdTokenParamName' => 
                  array (
                    'description' => 'Token对应的参数名称',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'PublicKeyId' => 
                  array (
                    'description' => '公钥ID',
                    'type' => 'string',
                    'example' => '88483727556929326703309904351185815489',
                  ),
                  'PublicKey' => 
                  array (
                    'description' => '公钥',
                    'type' => 'string',
                    'example' => 'EB1837F8693CCED0BF750B3AD48467BEB569E780A14591CF92',
                  ),
                ),
              ),
              'ErrorCodeSamples' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ErrorCodeSample' => 
                  array (
                    'description' => '后端服务返回的错误码示例',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '错误码',
                          'type' => 'string',
                          'example' => '400',
                        ),
                        'Model' => 
                        array (
                          'description' => '模型',
                          'type' => 'string',
                          'example' => '[\\"*\\"]',
                        ),
                        'Message' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'Missing the parameter UserId',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述',
                          'type' => 'string',
                          'example' => '请求缺少参数 UserId',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ResultDescriptions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                ),
              ),
              'SystemParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemParameter' => 
                  array (
                    'description' => '网关发送给后端服务的系统参数',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '参数描述',
                          'type' => 'string',
                          'example' => '客户端IP',
                        ),
                        'ParameterName' => 
                        array (
                          'description' => '系统参数名，取值为：CaClientIp、CaDomain、CaRequestHandleTime、CaAppId、CaRequestId、CaHttpSchema、CaProxy。',
                          'type' => 'string',
                          'example' => 'CaClientIp',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '对应后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CustomSystemParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CustomSystemParameter' => 
                  array (
                    'description' => '自定义系统参数列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '参数描述',
                          'type' => 'string',
                          'example' => '客户端IP',
                        ),
                        'ParameterName' => 
                        array (
                          'description' => '系统参数名，取值为：CaClientIp、CaDomain、CaRequestHandleTime、CaAppId、CaRequestId、CaHttpSchema、CaProxy',
                          'type' => 'string',
                          'example' => 'CaClientIp',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '对应后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ConstantParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ConstantParameter' => 
                  array (
                    'description' => '网关发送给后端服务的常量参数',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '参数描述',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                        'ConstantValue' => 
                        array (
                          'description' => '参数值',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RequestParameter' => 
                  array (
                    'description' => 'Consumer向网关发送API请求的参数描述',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JsonScheme' => 
                        array (
                          'description' => '当**ParameterType**=String，JSON验证(Json Scheme)',
                          'type' => 'string',
                          'example' => 'JSON',
                        ),
                        'MaxValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double，参数的最大值限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'ArrayItemsType' => 
                        array (
                          'description' => '数组元素的类型',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'MinValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double，参数的最小值限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocShow' => 
                        array (
                          'description' => '文档可见，取值为：**PUBLIC**、**PRIVATE**',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'MaxLength' => 
                        array (
                          'description' => '当**ParameterType**=String，参数的最大长度限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DefaultValue' => 
                        array (
                          'description' => '默认值',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'ApiParameterName' => 
                        array (
                          'description' => '参数名',
                          'type' => 'string',
                          'example' => 'age',
                        ),
                        'EnumValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double或String，允许输入的散列值，不同的值用英文的逗号分隔，形如：1,2,3,4,9或A,B,C,E,F。',
                          'type' => 'string',
                          'example' => 'boy,girl',
                        ),
                        'DemoValue' => 
                        array (
                          'description' => '示例',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'Required' => 
                        array (
                          'description' => '是否必填，取值为：**REQUIRED**、**OPTIONAL**，分别表示必填、不必填',
                          'type' => 'string',
                          'example' => 'OPTIONAL',
                        ),
                        'Description' => 
                        array (
                          'description' => '参数描述',
                          'type' => 'string',
                          'example' => '年龄',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '参数类型，取值为：String、Int、Long、Float、Double、Boolean，分别表示字符、整型、长整型、单精度浮点型、双精度浮点型、布尔。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'RegularExpression' => 
                        array (
                          'description' => '当**ParameterType**=String，参数验证（正则表达式）',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'MinLength' => 
                        array (
                          'description' => '当**ParameterType**=String，参数的最小长度限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocOrder' => 
                        array (
                          'description' => '文档中顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ServiceParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceParameter' => 
                  array (
                    'description' => '网关向后端服务发送API请求的参数描述',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '后端参数数据类型，取值为：STRING、NUMBER、BOOLEAN，分别表示字符、数值、布尔。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ServiceParametersMap' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceParameterMap' => 
                  array (
                    'description' => 'Consumer向网关发送请求的参数和网关向后端服务发送的请求的参数的映射关系',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RequestParameterName' => 
                        array (
                          'description' => '对应前端入参名称，这个值必须存在于RequestParametersObject中，匹配于RequestParam.ApiParameterName。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'DeployedInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeployedInfo' => 
                  array (
                    'description' => 'API发布状态',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StageName' => 
                        array (
                          'description' => '环境名称，取值为：RELEASE、TEST',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'EffectiveVersion' => 
                        array (
                          'description' => '有效的版本',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'DeployedStatus' => 
                        array (
                          'description' => '部署状态，取值为：DEPLOYED、NONDEPLOYED，分别表示已部署、未部署',
                          'type' => 'string',
                          'example' => 'DEPLOYED',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TagList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => '标签列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagKey' => 
                        array (
                          'description' => '标签键',
                          'type' => 'string',
                          'example' => 'APP',
                        ),
                        'TagValue' => 
                        array (
                          'description' => '标签值',
                          'type' => 'string',
                          'example' => 'value3',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ApiId\\": \\"8afff6c8c4c6447abb035812e4d66b65\\",\\n  \\"ResultType\\": \\"JSON\\",\\n  \\"WebSocketApiType\\": \\"COMMON\\",\\n  \\"DisableInternet\\": false,\\n  \\"ResultBodyModel\\": \\"{}\\",\\n  \\"ResultSample\\": \\"200\\",\\n  \\"AppCodeAuthType\\": \\"HEADER\\",\\n  \\"AllowSignatureMethod\\": \\"HmacSHA256\\",\\n  \\"RegionId\\": \\"cn-qingdao\\",\\n  \\"ForceNonceCheck\\": true,\\n  \\"Visibility\\": \\"PUBLIC\\",\\n  \\"FailResultSample\\": \\"400\\",\\n  \\"AuthType\\": \\"APP\\",\\n  \\"ModifiedTime\\": \\"2016-07-28T13:13:12Z\\",\\n  \\"RequestId\\": \\"D0FF585F-7966-40CF-BC60-75DB070B23D5<\\",\\n  \\"Description\\": \\"Api description\\",\\n  \\"GroupName\\": \\"ApiTest\\",\\n  \\"GroupId\\": \\"08ae4aa0f95e4321849ee57f4e0b3077\\",\\n  \\"Mock\\": \\"CLOSED\\",\\n  \\"MockResult\\": \\"test result\\",\\n  \\"CreatedTime\\": \\"2016-07-28T09:50:43Z\\",\\n  \\"ApiName\\": \\"ApiName\\",\\n  \\"BackendEnable\\": true,\\n  \\"BackendConfig\\": {\\n    \\"BackendId\\": \\"0038e00c3dca44fcba3a94015d8f5bbf\\",\\n    \\"BackendType\\": \\"HTTP\\",\\n    \\"BackendName\\": \\"testoss\\"\\n  },\\n  \\"RequestConfig\\": {\\n    \\"BodyModel\\": \\"https://apigateway.aliyun.com/models/3a240a127dcc4afd9ab1bf7e947b4095/9e2df550e85b4121a79ec33e2619eaab\\",\\n    \\"RequestPath\\": \\"/api/billing/test/[type]\\",\\n    \\"RequestHttpMethod\\": \\"POST\\",\\n    \\"BodyFormat\\": \\"STREAM\\",\\n    \\"RequestMode\\": \\"MAPPING\\",\\n    \\"PostBodyDescription\\": \\"fwefwef\\",\\n    \\"RequestProtocol\\": \\"HTTP\\",\\n    \\"EscapePathParam\\": true\\n  },\\n  \\"ServiceConfig\\": {\\n    \\"AoneAppName\\": \\"ib-blank\\",\\n    \\"MockStatusCode\\": 200,\\n    \\"ContentTypeValue\\": \\"application/x-www-form-urlencoded; charset=UTF-8\\",\\n    \\"ServiceProtocol\\": \\"HTTP\\",\\n    \\"ServicePath\\": \\"/object/add\\",\\n    \\"ContentTypeCatagory\\": \\"CUSTOM\\",\\n    \\"ServiceAddress\\": \\"http://api.a.com:8080\\",\\n    \\"Mock\\": \\"TRUE\\",\\n    \\"ServiceVpcEnable\\": \\"TRUE\\",\\n    \\"MockResult\\": \\"test result\\",\\n    \\"ServiceHttpMethod\\": \\"POST\\",\\n    \\"ServiceTimeout\\": 1000,\\n    \\"MockHeaders\\": {\\n      \\"MockHeader\\": [\\n        {\\n          \\"HeaderValue\\": \\"86400\\",\\n          \\"HeaderName\\": \\"Content-Length\\"\\n        }\\n      ]\\n    },\\n    \\"VpcConfig\\": {\\n      \\"VpcId\\": \\"vpc-2zeafsc3fygk1***\\",\\n      \\"VpcScheme\\": \\"HTTP\\",\\n      \\"InstanceId\\": \\"i-bp1h497hkijewv2***\\",\\n      \\"Port\\": 8080,\\n      \\"Name\\": \\"glmall-app-test\\"\\n    },\\n    \\"FunctionComputeConfig\\": {\\n      \\"FcType\\": \\"HttpTrigger\\",\\n      \\"RoleArn\\": \\"acs:ram::111***:role/aliyunserviceroleforsas\\",\\n      \\"Method\\": \\"GET\\",\\n      \\"FcBaseUrl\\": \\"https://1227****64334133.ap-southeast-1-int***al.fc.aliyuncs.com/201****-15/proxy/test****ice.LATEST/testHttp/\\",\\n      \\"ContentTypeValue\\": \\"application/x-www-form-urlencoded; charset=UTF-8\\",\\n      \\"RegionId\\": \\"cn-qingdao\\",\\n      \\"OnlyBusinessPath\\": false,\\n      \\"FunctionName\\": \\"edge_function\\",\\n      \\"ContentTypeCatagory\\": \\"DEFAULT\\",\\n      \\"Path\\": \\"/api/offline/cacheData\\",\\n      \\"ServiceName\\": \\"fcservicename\\",\\n      \\"Qualifier\\": \\"2\\"\\n    },\\n    \\"OssConfig\\": {\\n      \\"Key\\": \\"/folder/test.json\\",\\n      \\"Action\\": \\"GetObject\\",\\n      \\"OssRegionId\\": \\"cn-hangzhou\\",\\n      \\"BucketName\\": \\"cbg-db\\"\\n    },\\n    \\"EventBridgeConfig\\": {\\n      \\"EventBus\\": \\"testBus\\",\\n      \\"EventSource\\": \\"baas_driver\\",\\n      \\"EventBridgeRegionId\\": \\"cn-beijing\\",\\n      \\"RoleArn\\": \\"acs:ram::1933122015759***:role/adminoidcaliyun\\"\\n    }\\n  },\\n  \\"OpenIdConnectConfig\\": {\\n    \\"OpenIdApiType\\": \\"IDTOKEN\\",\\n    \\"IdTokenParamName\\": \\"xxx\\",\\n    \\"PublicKeyId\\": \\"88483727556929326703309904351185815489\\",\\n    \\"PublicKey\\": \\"EB1837F8693CCED0BF750B3AD48467BEB569E780A14591CF92\\"\\n  },\\n  \\"ErrorCodeSamples\\": {\\n    \\"ErrorCodeSample\\": [\\n      {\\n        \\"Code\\": \\"400\\",\\n        \\"Model\\": \\"[\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\"]\\",\\n        \\"Message\\": \\"Missing the parameter UserId\\",\\n        \\"Description\\": \\"请求缺少参数 UserId\\"\\n      }\\n    ]\\n  },\\n  \\"SystemParameters\\": {\\n    \\"SystemParameter\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"客户端IP\\",\\n        \\"ParameterName\\": \\"CaClientIp\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"CustomSystemParameters\\": {\\n    \\"CustomSystemParameter\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"客户端IP\\",\\n        \\"ParameterName\\": \\"CaClientIp\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"ConstantParameters\\": {\\n    \\"ConstantParameter\\": [\\n      {\\n        \\"Description\\": \\"constance\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"constance\\",\\n        \\"ConstantValue\\": \\"constance\\"\\n      }\\n    ]\\n  },\\n  \\"RequestParameters\\": {\\n    \\"RequestParameter\\": [\\n      {\\n        \\"JsonScheme\\": \\"JSON\\",\\n        \\"MaxValue\\": 123456,\\n        \\"ArrayItemsType\\": \\"String\\",\\n        \\"MinValue\\": 123456,\\n        \\"DocShow\\": \\"PUBLIC\\",\\n        \\"MaxLength\\": 123456,\\n        \\"DefaultValue\\": \\"20\\",\\n        \\"ApiParameterName\\": \\"age\\",\\n        \\"EnumValue\\": \\"boy,girl\\",\\n        \\"DemoValue\\": \\"20\\",\\n        \\"Required\\": \\"OPTIONAL\\",\\n        \\"Description\\": \\"年龄\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"RegularExpression\\": \\"xxx\\",\\n        \\"MinLength\\": 123456,\\n        \\"DocOrder\\": 0,\\n        \\"Location\\": \\"HEAD\\"\\n      }\\n    ]\\n  },\\n  \\"ServiceParameters\\": {\\n    \\"ServiceParameter\\": [\\n      {\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"ServiceParametersMap\\": {\\n    \\"ServiceParameterMap\\": [\\n      {\\n        \\"RequestParameterName\\": \\"name\\",\\n        \\"ServiceParameterName\\": \\"name\\"\\n      }\\n    ]\\n  },\\n  \\"DeployedInfos\\": {\\n    \\"DeployedInfo\\": [\\n      {\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"EffectiveVersion\\": \\"xxx\\",\\n        \\"DeployedStatus\\": \\"DEPLOYED\\"\\n      }\\n    ]\\n  },\\n  \\"TagList\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"TagKey\\": \\"APP\\",\\n        \\"TagValue\\": \\"value3\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询 API 定义',
      'summary' => '查询指定API的定义。',
      'description' => '- 此接口面向开放API的用户
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiMarketAttributes' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b693252f3f19445e9a01dac177c4454c',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1f9b5e9ba80943099cac52e040b7e160',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ApiId' => 
              array (
                'description' => 'API编号',
                'type' => 'string',
                'example' => '6318cd8f6a304cac9318dea8d9a78f7a',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '545D4E52-4F77-5EC4-BB7E-7344CEC7B5E6',
              ),
              'MarketChargingMode' => 
              array (
                'description' => '云市场计费模式',
                'type' => 'string',
                'example' => 'PREPAID_BY_USAGE',
              ),
              'NeedCharging' => 
              array (
                'description' => '是否需要收费',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ApiId\\": \\"6318cd8f6a304cac9318dea8d9a78f7a\\",\\n  \\"RequestId\\": \\"545D4E52-4F77-5EC4-BB7E-7344CEC7B5E6\\",\\n  \\"MarketChargingMode\\": \\"PREPAID_BY_USAGE\\",\\n  \\"NeedCharging\\": \\"true\\"\\n}","type":"json"}]',
      'title' => '获取API的属性',
      'summary' => '查询API上云市场属性。',
    ),
    'DescribeApis' => 
    array (
      'summary' => '查询定义中的API列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => false,
            'example' => 'c4a4d2de657548a2bd485d5d4df42b4a',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的API编号',
            'type' => 'string',
            'required' => false,
            'example' => 'f68c19ee3bd1478fb58aa05ce8ae9b5a',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称(模糊匹配)',
            'type' => 'string',
            'required' => false,
            'example' => 'weather',
          ),
        ),
        3 => 
        array (
          'name' => 'CatalogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类 ID',
            'type' => 'string',
            'required' => false,
            'example' => '1553414085247362',
          ),
        ),
        4 => 
        array (
          'name' => 'Visibility',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API是否公开，可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境定义，会在所有用户的控制台“发现API”页面可见。
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架。',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableTagAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用标签验证',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 50,
          ),
        ),
        9 => 
        array (
          'name' => 'ApiPath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的请求Path',
            'type' => 'string',
            'required' => false,
            'example' => '/illegal/query',
          ),
        ),
        10 => 
        array (
          'name' => 'ApiMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的请求HTTP方法',
            'type' => 'string',
            'required' => false,
            'example' => 'GET',
          ),
        ),
        11 => 
        array (
          'name' => 'UnDeployed',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否过滤未发布的接口',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ002',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '32',
              ),
              'ApiSummarys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiSummary' => 
                  array (
                    'description' => '由 ApiSummary 组成的数组格式，返回API的定义信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Visibility' => 
                        array (
                          'description' => '可见性，可选值：

- **PUBLIC**：公开
- **PRIVATE**：私有',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '5af418828f0344a3b588c0cc1331a3bc',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '修改时间（格林威治时间）',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '创建对象接口',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'myGroup2',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '1084f9034c744137901057206b39d2b6',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间（格林威治时间）',
                          'type' => 'string',
                          'example' => '2016-05-20T18:18:25Z',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => '创建对象',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'API所在地域ID',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                        'ApiPath' => 
                        array (
                          'description' => 'api的路径',
                          'type' => 'string',
                          'example' => '/sqb/',
                        ),
                        'ApiMethod' => 
                        array (
                          'description' => 'api的请求方法',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'DeployedInfos' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DeployedInfo' => 
                            array (
                              'description' => 'API发布状态',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'API发布状态',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'StageName' => 
                                  array (
                                    'description' => '环境名称：
- **RELEASE**: 线上
- **PRE**：预发
- **TEST**: 测试',
                                    'type' => 'string',
                                    'example' => 'RELEASE',
                                  ),
                                  'EffectiveVersion' => 
                                  array (
                                    'description' => '已部署的版本',
                                    'type' => 'string',
                                    'example' => '20220103170737313',
                                  ),
                                  'DeployedStatus' => 
                                  array (
                                    'description' => '部署状态，取值为：DEPLOYED、NONDEPLOYED，分别表示已部署、未部署',
                                    'type' => 'string',
                                    'example' => 'DEPLOYED',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'TagList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签信息',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签信息',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TagKey' => 
                                  array (
                                    'description' => '标签键',
                                    'type' => 'string',
                                    'example' => 'tagKey',
                                  ),
                                  'TagValue' => 
                                  array (
                                    'description' => '标签值',
                                    'type' => 'string',
                                    'example' => 'tagValue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 3,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ002\\",\\n  \\"PageSize\\": 15,\\n  \\"TotalCount\\": 32,\\n  \\"ApiSummarys\\": {\\n    \\"ApiSummary\\": [\\n      {\\n        \\"Visibility\\": \\"PUBLIC\\",\\n        \\"ApiId\\": \\"5af418828f0344a3b588c0cc1331a3bc\\",\\n        \\"ModifiedTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"Description\\": \\"创建对象接口\\",\\n        \\"GroupName\\": \\"myGroup2\\",\\n        \\"GroupId\\": \\"1084f9034c744137901057206b39d2b6\\",\\n        \\"CreatedTime\\": \\"2016-05-20T18:18:25Z\\",\\n        \\"ApiName\\": \\"创建对象\\",\\n        \\"RegionId\\": \\"cn-qingdao\\",\\n        \\"ApiPath\\": \\"/sqb/\\",\\n        \\"ApiMethod\\": \\"GET\\",\\n        \\"DeployedInfos\\": {\\n          \\"DeployedInfo\\": [\\n            {\\n              \\"StageName\\": \\"RELEASE\\",\\n              \\"EffectiveVersion\\": \\"20220103170737313\\",\\n              \\"DeployedStatus\\": \\"DEPLOYED\\"\\n            }\\n          ]\\n        },\\n        \\"TagList\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"TagKey\\": \\"tagKey\\",\\n              \\"TagValue\\": \\"tagValue\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApisResponse>\\r\\n    <ApiSummarys>\\r\\n        <ApiSummary>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>63be9002440b4778a61122f14c2b2bbb</GroupId>\\r\\n            <GroupName>myGroup3</GroupName>\\r\\n            <ApiId>c076144d7878437b8f82fb85890ce6a0</ApiId>\\r\\n            <ApiName>获取对象列表</ApiName>                \\r\\n            <Visibility>public</Visibility>\\r\\n            <Description>分页显示对象列表</Description>\\r\\n            <CreatedTime>2016-06-20T18:18:25Z</CreatedTime>\\r\\n            <ModifiedTime>2016-07-23T08:28:48Z</ModifiedTime>\\r\\n        </ApiSummary>\\r\\n        <ApiSummary>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>1084f9034c744137901057206b39d2b6</GroupId>\\r\\n            <GroupName>myGroup2</GroupName>\\r\\n            <ApiId>5af418828f0344a3b588c0cc1331a3bc</ApiId>\\r\\n            <ApiName>创建对象</ApiName>                \\r\\n            <Visibility>public</Visibility>\\r\\n            <Description>创建对象接口</Description>\\r\\n            <CreatedTime>2016-05-20T18:18:25Z</CreatedTime>\\r\\n            <ModifiedTime>2016-07-23T08:28:48Z</ModifiedTime>\\r\\n        </ApiSummary>\\r\\n    </ApiSummarys>\\r\\n    <PageNumber>3</PageNumber>\\r\\n    <PageSize>15</PageSize>\\r\\n    <TotalCount>32</TotalCount>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ002</RequestId>        \\r\\n</DescribeApisResponse>","errorExample":""}]',
      'title' => '查询定义中的 API 列表',
      'description' => '- 此功能面向开放API的用户
- 接口返回所有定义中的API列表，以及概况信息
- 请注意是返回所有编辑中的API定义信息，跟环境无关，也可能跟环境中正在运行的定义不同，是最新的编辑结果',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiHistory' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '3013a55c0c44483f984d26df27120513',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的API编号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dc6e17ee3120404c839bbcd7622ab6ed',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，取值为：

- **RELEASE**：线上
- **TEST**：测试
- **PRE**：预发',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'HistoryVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的历史版本号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '20211122155403834',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => 'api调用状态',
                'type' => 'string',
                'example' => '200',
              ),
              'ApiId' => 
              array (
                'description' => 'API编号',
                'type' => 'string',
                'example' => 'bebf996e4b3d445d83078094b72b0d91',
              ),
              'ResultType' => 
              array (
                'description' => '返回数据类型。',
                'type' => 'string',
                'example' => 'JSON',
              ),
              'WebSocketApiType' => 
              array (
                'description' => '双向通信API类型：

- **COMMON**：普通API
- **REGISTER**：注册API
- **UNREGISTER**：注销API
- **NOTIFY**：下行通知',
                'type' => 'string',
                'example' => 'COMMON',
              ),
              'DisableInternet' => 
              array (
                'description' => '- 设置**DisableInternet**为**true**, 仅支持内网调用API。
- 设置**DisableInternet**为**false**, 则不限制调用。创建API时默认为false。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ResultBodyModel' => 
              array (
                'description' => 'api的返回结果',
                'type' => 'string',
                'example' => '{}',
              ),
              'ResultSample' => 
              array (
                'description' => '返回示例',
                'type' => 'string',
                'example' => '{\\n  \\"status\\": 0,\\n  \\"data\\": {\\n    \\"count\\": 1,\\n    \\"list\\": [\\n      \\"352\\"\\n    ]\\n  },\\n  \\"message\\": \\"success\\"\\n}',
              ),
              'AppCodeAuthType' => 
              array (
                'description' => '支持AppCode的认证类型。可选值：

- DEFAULT：默认值：上架云市场后支持
- DISABLE： 不支持AppCode调用方式
- HEADER  ：仅在Header中支持
- HEADER_QUERY ：可以在Header或者Query中支持',
                'type' => 'string',
                'example' => 'HEADER',
              ),
              'AllowSignatureMethod' => 
              array (
                'description' => '当**AuthType**为**APP**认证时，需要传该值明确签名算法。可选值如下，不传默认是HmacSHA256：

- HmacSHA256
- HmacSHA1,HmacSHA256',
                'type' => 'string',
                'example' => 'HmacSHA256',
              ),
              'RegionId' => 
              array (
                'description' => '所在的region',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'ForceNonceCheck' => 
              array (
                'description' => '- 设置**ForceNonceCheck**为**true**, 请求时强制检查X-Ca-Nonce，这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后会校验这个参数的有效性，同样的值，15分内只能被使用一次。可以有效防止API的重放攻击。

- 设置**ForceNonceCheck**为**false**，则不检查。创建API时默认为false。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Visibility' => 
              array (
                'description' => 'API是否公开，可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境定义，会在所有用户的控制台“发现API”页面可见。
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架。',
                'type' => 'string',
                'example' => 'PUBLIC',
              ),
              'FailResultSample' => 
              array (
                'description' => '后端服务失败返回应答的示例',
                'type' => 'string',
                'example' => '{"errorCode":"fail","errorMessage":"param invalid"}',
              ),
              'AuthType' => 
              array (
                'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
     - 任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制。',
                'type' => 'string',
                'example' => 'APP',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '6C87A26A-6A18-4B8E-8099-705278381A2C',
              ),
              'Description' => 
              array (
                'description' => 'api描述',
                'type' => 'string',
                'example' => '根据地区名称查询天气情况',
              ),
              'GroupName' => 
              array (
                'description' => 'api分组名称',
                'type' => 'string',
                'example' => 'dev_api',
              ),
              'GroupId' => 
              array (
                'description' => 'api分组编号',
                'type' => 'string',
                'example' => 'cfb6ef799bf54fffabb0f02019ad2581',
              ),
              'DeployedTime' => 
              array (
                'description' => '发布时间(格林威治时间)',
                'type' => 'string',
                'example' => '2021-06-1113:57:38',
              ),
              'StageName' => 
              array (
                'description' => 'API发布的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                'type' => 'string',
                'example' => 'RELEASE',
              ),
              'HistoryVersion' => 
              array (
                'description' => '历史版本号',
                'type' => 'string',
                'example' => '20211022134156663',
              ),
              'ApiName' => 
              array (
                'description' => 'Api名称',
                'type' => 'string',
                'example' => '测试API',
              ),
              'BackendEnable' => 
              array (
                'description' => '是否启用后端服务',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BackendConfig' => 
              array (
                'description' => '后端配置',
                'type' => 'object',
                'properties' => 
                array (
                  'BackendId' => 
                  array (
                    'description' => '后端服务ID',
                    'type' => 'string',
                    'example' => 'a0305308908c4740aba9cbfd63ba99b7',
                  ),
                  'BackendType' => 
                  array (
                    'description' => '后端服务类型',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'BackendName' => 
                  array (
                    'description' => '后端服务名称',
                    'type' => 'string',
                    'example' => 'zmapi',
                  ),
                ),
              ),
              'RequestConfig' => 
              array (
                'description' => 'Consumer向网关发送API请求的相关配置项。

更多信息，请参见[RequestConfig](~~43985~~)。',
                'type' => 'object',
                'properties' => 
                array (
                  'BodyModel' => 
                  array (
                    'description' => 'body模型

',
                    'type' => 'string',
                  ),
                  'RequestPath' => 
                  array (
                    'description' => 'API path',
                    'type' => 'string',
                    'example' => '/api/billing/test/[type]',
                  ),
                  'RequestHttpMethod' => 
                  array (
                    'description' => 'HTTP Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'BodyFormat' => 
                  array (
                    'description' => 'POST/PUT请求时，表示数据以何种方式传递给服务器，取值为：FORM、STREAM，分别表示表单形式(k-v对应)、字节流形式。当RequestMode值为MAPPING时有效。',
                    'type' => 'string',
                    'example' => 'STREAM',
                  ),
                  'RequestMode' => 
                  array (
                    'description' => '入参请求的模式，取值为：

- MAPPING：入参映射（过滤未知参数）

- PASSTHROUGH：入参透传

- MAPPING_PASSTHROUGH：入参映射（透传未知参数）',
                    'type' => 'string',
                    'example' => 'MAPPING',
                  ),
                  'PostBodyDescription' => 
                  array (
                    'description' => '请求body描述',
                    'type' => 'string',
                    'example' => 'fwefwef',
                  ),
                  'RequestProtocol' => 
                  array (
                    'description' => 'API 支持的协议类型，可以多选，多选情况下以英文逗号隔开，如："HTTP,HTTPS"，取值为：HTTP、HTTPS、WebSocket',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'EscapePathParam' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
              ),
              'ServiceConfig' => 
              array (
                'description' => '后端服务调用信息项',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => '专用网络ID',
                    'type' => 'string',
                    'example' => 'vpc-uf6kg9x8sx2tbxxxx',
                  ),
                  'MockStatusCode' => 
                  array (
                    'description' => 'Mock返回状态码

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'ContentTypeValue' => 
                  array (
                    'description' => '调用后端服务HTTP服务，ContentTypeCatagory的值为DEFAULT或者CUSTOM时，ContentType头的取值',
                    'type' => 'string',
                    'example' => 'application/json',
                  ),
                  'ServiceProtocol' => 
                  array (
                    'description' => '后端服务协议类型，目前只支持HTTP/HTTPS/FunctionCompute',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'ServicePath' => 
                  array (
                    'description' => '调用后端服务path',
                    'type' => 'string',
                    'example' => '/object/add',
                  ),
                  'ContentTypeCatagory' => 
                  array (
                    'description' => '调用后端服务HTTP服务时，ContentType头的取值策略：

- DEFAULT：使用API网关默认的值 

- CUSTOM：自定义 

- CLIENT：使用客户端上行的ContentType的头',
                    'type' => 'string',
                    'example' => 'CUSTOM',
                  ),
                  'ServiceAddress' => 
                  array (
                    'description' => '调用后端服务地址',
                    'type' => 'string',
                    'example' => 'http://api.a.com:8080',
                  ),
                  'Mock' => 
                  array (
                    'description' => '是否启用MOCK模式，目前可以取值：

-  TRUE：启用Mock模式 

- FALSE：不启用Mock模式',
                    'type' => 'string',
                    'example' => 'TRUE',
                  ),
                  'ServiceVpcEnable' => 
                  array (
                    'description' => '是否启用VPC通道，目前可以取值： 

- TRUE：启用VPC通道
 
- FALSE：不启用VPC通道
必须先添加VPC授权成功后才能启用',
                    'type' => 'string',
                    'example' => 'TRUE',
                  ),
                  'MockResult' => 
                  array (
                    'description' => '如果启用Mock模式，返回的结果',
                    'type' => 'string',
                    'example' => 'test result',
                  ),
                  'ServiceHttpMethod' => 
                  array (
                    'description' => '调用后端服务HTTP协议时的Method，取值为：PUT、GET、POST、DELETE、PATCH、HEAD、OPTIONS、ANY。',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'ServiceTimeout' => 
                  array (
                    'description' => '后端服务超时时间，单位：毫秒',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'MockHeaders' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MockHeader' => 
                      array (
                        'description' => '模拟 Headers',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HeaderValue' => 
                            array (
                              'description' => 'HTTP头参数值',
                              'type' => 'string',
                              'example' => '86400',
                            ),
                            'HeaderName' => 
                            array (
                              'description' => 'HTTP头参数名',
                              'type' => 'string',
                              'example' => 'Content-Type',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'VpcConfig' => 
                  array (
                    'description' => 'VPC通道相关配置项',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VpcId' => 
                      array (
                        'description' => '专用网络ID',
                        'type' => 'string',
                        'example' => 'vpc-2zeafsc3fygk1***',
                      ),
                      'VpcScheme' => 
                      array (
                        'description' => 'VPC协议',
                        'type' => 'string',
                        'example' => 'HTTP',
                      ),
                      'InstanceId' => 
                      array (
                        'description' => '专用网络中的实例ID（Ecs/负载均衡）',
                        'type' => 'string',
                        'example' => 'i-bp1h497hkijewv2***',
                      ),
                      'Port' => 
                      array (
                        'description' => '实例对应的端口号',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8080',
                      ),
                      'Name' => 
                      array (
                        'description' => 'VPC名称',
                        'type' => 'string',
                        'example' => 'glmall-app-test',
                      ),
                    ),
                  ),
                  'FunctionComputeConfig' => 
                  array (
                    'description' => '后端为函数计算时的后端配置项',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FcType' => 
                      array (
                        'description' => '函数计算服务类型',
                        'type' => 'string',
                        'example' => 'HttpTrigger',
                      ),
                      'RoleArn' => 
                      array (
                        'description' => 'Ram授权给API网关访问函数计算的arn',
                        'type' => 'string',
                        'example' => 'acs:ram::111***:role/aliyunserviceroleforsas',
                      ),
                      'Method' => 
                      array (
                        'description' => '请求方法',
                        'type' => 'string',
                        'example' => 'GET',
                      ),
                      'FcBaseUrl' => 
                      array (
                        'description' => '函数计算服务根路径',
                        'type' => 'string',
                        'example' => 'https://122xxxxxxx.fc.aliyun.com/2016xxxx/proxy/testSxxx.xxx/testHttp/',
                      ),
                      'ContentTypeValue' => 
                      array (
                        'description' => '调用后端服务HTTP服务，ContentTypeCatagory的值为DEFAULT或者CUSTOM时，ContentType头的取值。',
                        'type' => 'string',
                        'example' => 'application/json',
                      ),
                      'RegionId' => 
                      array (
                        'description' => '地域ID',
                        'type' => 'string',
                        'example' => 'cn-hangzhou',
                      ),
                      'OnlyBusinessPath' => 
                      array (
                        'description' => '后端只接收业务path',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'FunctionName' => 
                      array (
                        'description' => '函数计算定义的FunctionName',
                        'type' => 'string',
                        'example' => 'domain_business_control',
                      ),
                      'ContentTypeCatagory' => 
                      array (
                        'description' => '调用后端服务HTTP服务时，ContentType头的取值策略：

- **DEFAULT**：使用API网关默认的值
- **CUSTOM**：自定义
- **CLIENT**：使用客户端上行的ContentType的头',
                        'type' => 'string',
                        'example' => 'DEFAULT',
                      ),
                      'Path' => 
                      array (
                        'description' => 'API请求路径',
                        'type' => 'string',
                        'example' => '/api/offline/cacheData',
                      ),
                      'ServiceName' => 
                      array (
                        'description' => '函数计算定义的ServiceName',
                        'type' => 'string',
                        'example' => 'fcservicename',
                      ),
                      'Qualifier' => 
                      array (
                        'description' => '函数别名',
                        'type' => 'string',
                        'example' => '2',
                      ),
                    ),
                  ),
                  'OssConfig' => 
                  array (
                    'description' => '后端为OSS的信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Key' => 
                      array (
                        'type' => 'string',
                      ),
                      'Action' => 
                      array (
                        'type' => 'string',
                      ),
                      'OssRegionId' => 
                      array (
                        'description' => 'OSS服务所在地域ID。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou',
                      ),
                      'BucketName' => 
                      array (
                        'description' => 'OSS存储Bucket。',
                        'type' => 'string',
                        'example' => 'phototest02',
                      ),
                    ),
                  ),
                  'EventBridgeConfig' => 
                  array (
                    'description' => '事件总线设置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EventBridgeRegionId' => 
                      array (
                        'description' => '事件总线服务所在区域ID',
                        'type' => 'string',
                        'example' => 'cn-beijing',
                      ),
                      'EventBus' => 
                      array (
                        'description' => '事件总线',
                        'type' => 'string',
                        'example' => 'testBus',
                      ),
                      'EventSource' => 
                      array (
                        'description' => '事件来源。
',
                        'type' => 'string',
                        'example' => 'baas_driver',
                      ),
                      'RoleArn' => 
                      array (
                        'description' => 'Ram授权给EventBridge的arn',
                        'type' => 'string',
                        'example' => 'acs:ram::1933122015759***:role/adminoidcaliyun',
                      ),
                    ),
                  ),
                ),
              ),
              'OpenIdConnectConfig' => 
              array (
                'description' => '第三方账号认证OpenID Connect相关配置项',
                'type' => 'object',
                'properties' => 
                array (
                  'OpenIdApiType' => 
                  array (
                    'description' => 'OpenID Connect模式，目前可以取值：

- **IDTOKEN**：获取授权API，颁发Token，当设置此项时，参数PublicKeyId和PublicKey为必传。
- **BUSINESS**：业务API，Token验证，当设置此项时，参数IdTokenParamName为必传。',
                    'type' => 'string',
                    'example' => 'IDTOKEN',
                  ),
                  'IdTokenParamName' => 
                  array (
                    'description' => 'Token对应的参数名称',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'PublicKeyId' => 
                  array (
                    'description' => '公钥id',
                    'type' => 'string',
                    'example' => '88483727556929326703309904351185815489',
                  ),
                  'PublicKey' => 
                  array (
                    'description' => 'api公钥',
                    'type' => 'string',
                    'example' => 'EB1837F8693CCED0BF750B3AD48467BEB569E780A14591CF92',
                  ),
                ),
              ),
              'ErrorCodeSamples' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ErrorCodeSample' => 
                  array (
                    'description' => '后端服务返回的错误码示例。

更多信息，请参见[ErrorCodeSample](~~44392~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '错误码',
                          'type' => 'string',
                          'example' => '400',
                        ),
                        'Message' => 
                        array (
                          'description' => '错误消息',
                          'type' => 'string',
                          'example' => 'MissingParameter',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'Missing the parameter UserId',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ResultDescriptions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ResultDescription' => 
                  array (
                    'description' => 'api的返回说明',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '结果类型。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'Key' => 
                        array (
                          'description' => '结果主键。',
                          'type' => 'string',
                          'example' => 'groupName',
                        ),
                        'HasChild' => 
                        array (
                          'description' => '是否有子节点。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'for_test1',
                        ),
                        'Pid' => 
                        array (
                          'description' => '父节点 ID。',
                          'type' => 'string',
                          'example' => 'pid',
                        ),
                        'Mandatory' => 
                        array (
                          'description' => '是否必填。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Name' => 
                        array (
                          'description' => '结果名。',
                          'type' => 'string',
                          'example' => 'fwqf',
                        ),
                        'Id' => 
                        array (
                          'description' => '结果 ID。',
                          'type' => 'string',
                          'example' => 'id',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SystemParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemParameter' => 
                  array (
                    'description' => 'api的公共参数，json格式',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例值。',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'system parameters description',
                        ),
                        'ParameterName' => 
                        array (
                          'description' => '系统参数名，取值为：CaClientIp、CaDomain、CaRequestHandleTime、CaAppId、CaRequestId、CaHttpSchema、CaProxy。',
                          'type' => 'string',
                          'example' => 'CaClientIp',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '对应后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CustomSystemParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CustomSystemParameter' => 
                  array (
                    'description' => '自定义系统参数列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例值',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '自定义系统参数描述',
                          'type' => 'string',
                          'example' => 'balabala',
                        ),
                        'ParameterName' => 
                        array (
                          'description' => '自定义系统参数名',
                          'type' => 'string',
                          'example' => 'CaClientIp',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '对应后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ConstantParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ConstantParameter' => 
                  array (
                    'description' => '常量参数列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'for_test1',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                        'ConstantValue' => 
                        array (
                          'description' => '常量值',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RequestParameter' => 
                  array (
                    'description' => 'Consumer向网关发送API请求的参数描述。

更多信息，请参见[RequestParameter](~~43986~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JsonScheme' => 
                        array (
                          'description' => 'JSON scheme',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'MaxValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double，参数的最大值限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'ArrayItemsType' => 
                        array (
                          'description' => '数组元素的类型',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'MinValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double，参数的最小值限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocShow' => 
                        array (
                          'description' => '文档可见，取值为：**PUBLIC**、**PRIVATE**',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'MaxLength' => 
                        array (
                          'description' => '当**ParameterType**=String，参数的最大长度限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DefaultValue' => 
                        array (
                          'description' => '默认值',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'ApiParameterName' => 
                        array (
                          'description' => 'API 参数名称',
                          'type' => 'string',
                          'example' => 'age',
                        ),
                        'EnumValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double或String，允许输入的散列值，不同的值用英文的逗号分隔，形如：1,2,3,4,9或A,B,C,E,F。',
                          'type' => 'string',
                          'example' => 'boy,girl',
                        ),
                        'DemoValue' => 
                        array (
                          'description' => '示例',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'Required' => 
                        array (
                          'description' => '是否必填，取值为：**REQUIRED**、**OPTIONAL**，分别表示必填、不必填',
                          'type' => 'string',
                          'example' => 'OPTIONAL',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'modidyTest',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '参数类型，取值为：String、Int、Long、Float、Double、Boolean，分别表示字符、整型、长整型、单精度浮点型、双精度浮点型、布尔。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'RegularExpression' => 
                        array (
                          'description' => '当**ParameterType**=String，参数验证（正则表达式）',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'MinLength' => 
                        array (
                          'description' => '当**ParameterType**=String，参数的最小长度限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocOrder' => 
                        array (
                          'description' => '文档中顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ServiceParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceParameter' => 
                  array (
                    'description' => '网关向后端服务发送API请求的参数描述。

更多信息，请参见[ServiceParameter](~~43988~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '后端参数数据类型，取值为：STRING、NUMBER、BOOLEAN，分别表示字符、数值、布尔。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ServiceParametersMap' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceParameterMap' => 
                  array (
                    'description' => 'Consumer向网关发送请求的参数和网关向后端服务发送的请求的参数的映射关系。

更多信息，请参见[ServiceParameterMap](~~43989~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RequestParameterName' => 
                        array (
                          'description' => '对应前端入参名称，这个值必须存在于RequestParametersObject中，匹配于RequestParam.ApiParameterName。',
                          'type' => 'string',
                          'example' => 'sex',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'sex',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Status\\": \\"200\\",\\n  \\"ApiId\\": \\"bebf996e4b3d445d83078094b72b0d91\\",\\n  \\"ResultType\\": \\"JSON\\",\\n  \\"WebSocketApiType\\": \\"COMMON\\",\\n  \\"DisableInternet\\": true,\\n  \\"ResultBodyModel\\": \\"{}\\",\\n  \\"ResultSample\\": \\"{\\\\\\\\n  \\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": 0,\\\\\\\\n  \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\n    \\\\\\\\\\\\\\"count\\\\\\\\\\\\\\": 1,\\\\\\\\n    \\\\\\\\\\\\\\"list\\\\\\\\\\\\\\": [\\\\\\\\n      \\\\\\\\\\\\\\"352\\\\\\\\\\\\\\"\\\\\\\\n    ]\\\\\\\\n  },\\\\\\\\n  \\\\\\\\\\\\\\"message\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"\\\\\\\\n}\\",\\n  \\"AppCodeAuthType\\": \\"HEADER\\",\\n  \\"AllowSignatureMethod\\": \\"HmacSHA256\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"ForceNonceCheck\\": true,\\n  \\"Visibility\\": \\"PUBLIC\\",\\n  \\"FailResultSample\\": \\"{\\\\\\"errorCode\\\\\\":\\\\\\"fail\\\\\\",\\\\\\"errorMessage\\\\\\":\\\\\\"param invalid\\\\\\"}\\",\\n  \\"AuthType\\": \\"APP\\",\\n  \\"RequestId\\": \\"6C87A26A-6A18-4B8E-8099-705278381A2C\\",\\n  \\"Description\\": \\"根据地区名称查询天气情况\\",\\n  \\"GroupName\\": \\"dev_api\\",\\n  \\"GroupId\\": \\"cfb6ef799bf54fffabb0f02019ad2581\\",\\n  \\"DeployedTime\\": \\"2021-06-1113:57:38\\",\\n  \\"StageName\\": \\"RELEASE\\",\\n  \\"HistoryVersion\\": \\"20211022134156663\\",\\n  \\"ApiName\\": \\"测试API\\",\\n  \\"BackendEnable\\": true,\\n  \\"BackendConfig\\": {\\n    \\"BackendId\\": \\"a0305308908c4740aba9cbfd63ba99b7\\",\\n    \\"BackendType\\": \\"HTTP\\",\\n    \\"BackendName\\": \\"zmapi\\"\\n  },\\n  \\"RequestConfig\\": {\\n    \\"BodyModel\\": \\"\\",\\n    \\"RequestPath\\": \\"/api/billing/test/[type]\\",\\n    \\"RequestHttpMethod\\": \\"POST\\",\\n    \\"BodyFormat\\": \\"STREAM\\",\\n    \\"RequestMode\\": \\"MAPPING\\",\\n    \\"PostBodyDescription\\": \\"fwefwef\\",\\n    \\"RequestProtocol\\": \\"HTTP\\",\\n    \\"EscapePathParam\\": true\\n  },\\n  \\"ServiceConfig\\": {\\n    \\"VpcId\\": \\"vpc-uf6kg9x8sx2tbxxxx\\",\\n    \\"MockStatusCode\\": 200,\\n    \\"ContentTypeValue\\": \\"application/json\\",\\n    \\"ServiceProtocol\\": \\"HTTP\\",\\n    \\"ServicePath\\": \\"/object/add\\",\\n    \\"ContentTypeCatagory\\": \\"CUSTOM\\",\\n    \\"ServiceAddress\\": \\"http://api.a.com:8080\\",\\n    \\"Mock\\": \\"TRUE\\",\\n    \\"ServiceVpcEnable\\": \\"TRUE\\",\\n    \\"MockResult\\": \\"test result\\",\\n    \\"ServiceHttpMethod\\": \\"POST\\",\\n    \\"ServiceTimeout\\": 1000,\\n    \\"MockHeaders\\": {\\n      \\"MockHeader\\": [\\n        {\\n          \\"HeaderValue\\": \\"86400\\",\\n          \\"HeaderName\\": \\"Content-Type\\"\\n        }\\n      ]\\n    },\\n    \\"VpcConfig\\": {\\n      \\"VpcId\\": \\"vpc-2zeafsc3fygk1***\\",\\n      \\"VpcScheme\\": \\"HTTP\\",\\n      \\"InstanceId\\": \\"i-bp1h497hkijewv2***\\",\\n      \\"Port\\": 8080,\\n      \\"Name\\": \\"glmall-app-test\\"\\n    },\\n    \\"FunctionComputeConfig\\": {\\n      \\"FcType\\": \\"HttpTrigger\\",\\n      \\"RoleArn\\": \\"acs:ram::111***:role/aliyunserviceroleforsas\\",\\n      \\"Method\\": \\"GET\\",\\n      \\"FcBaseUrl\\": \\"https://122xxxxxxx.fc.aliyun.com/2016xxxx/proxy/testSxxx.xxx/testHttp/\\",\\n      \\"ContentTypeValue\\": \\"application/json\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"OnlyBusinessPath\\": false,\\n      \\"FunctionName\\": \\"domain_business_control\\",\\n      \\"ContentTypeCatagory\\": \\"DEFAULT\\",\\n      \\"Path\\": \\"/api/offline/cacheData\\",\\n      \\"ServiceName\\": \\"fcservicename\\",\\n      \\"Qualifier\\": \\"2\\"\\n    },\\n    \\"OssConfig\\": {\\n      \\"Key\\": \\"\\",\\n      \\"Action\\": \\"\\",\\n      \\"OssRegionId\\": \\"cn-hangzhou\\",\\n      \\"BucketName\\": \\"phototest02\\"\\n    },\\n    \\"EventBridgeConfig\\": {\\n      \\"EventBridgeRegionId\\": \\"cn-beijing\\",\\n      \\"EventBus\\": \\"testBus\\",\\n      \\"EventSource\\": \\"baas_driver\\",\\n      \\"RoleArn\\": \\"acs:ram::1933122015759***:role/adminoidcaliyun\\"\\n    }\\n  },\\n  \\"OpenIdConnectConfig\\": {\\n    \\"OpenIdApiType\\": \\"IDTOKEN\\",\\n    \\"IdTokenParamName\\": \\"xxx\\",\\n    \\"PublicKeyId\\": \\"88483727556929326703309904351185815489\\",\\n    \\"PublicKey\\": \\"EB1837F8693CCED0BF750B3AD48467BEB569E780A14591CF92\\"\\n  },\\n  \\"ErrorCodeSamples\\": {\\n    \\"ErrorCodeSample\\": [\\n      {\\n        \\"Code\\": \\"400\\",\\n        \\"Message\\": \\"MissingParameter\\",\\n        \\"Description\\": \\"Missing the parameter UserId\\"\\n      }\\n    ]\\n  },\\n  \\"ResultDescriptions\\": {\\n    \\"ResultDescription\\": [\\n      {\\n        \\"Type\\": \\"String\\",\\n        \\"Key\\": \\"groupName\\",\\n        \\"HasChild\\": true,\\n        \\"Description\\": \\"for_test1\\",\\n        \\"Pid\\": \\"pid\\",\\n        \\"Mandatory\\": true,\\n        \\"Name\\": \\"fwqf\\",\\n        \\"Id\\": \\"id\\"\\n      }\\n    ]\\n  },\\n  \\"SystemParameters\\": {\\n    \\"SystemParameter\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"system parameters description\\",\\n        \\"ParameterName\\": \\"CaClientIp\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"CustomSystemParameters\\": {\\n    \\"CustomSystemParameter\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"balabala\\",\\n        \\"ParameterName\\": \\"CaClientIp\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"ConstantParameters\\": {\\n    \\"ConstantParameter\\": [\\n      {\\n        \\"Description\\": \\"for_test1\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"constance\\",\\n        \\"ConstantValue\\": \\"constance\\"\\n      }\\n    ]\\n  },\\n  \\"RequestParameters\\": {\\n    \\"RequestParameter\\": [\\n      {\\n        \\"JsonScheme\\": \\"{}\\",\\n        \\"MaxValue\\": 123456,\\n        \\"ArrayItemsType\\": \\"String\\",\\n        \\"MinValue\\": 123456,\\n        \\"DocShow\\": \\"PUBLIC\\",\\n        \\"MaxLength\\": 123456,\\n        \\"DefaultValue\\": \\"20\\",\\n        \\"ApiParameterName\\": \\"age\\",\\n        \\"EnumValue\\": \\"boy,girl\\",\\n        \\"DemoValue\\": \\"20\\",\\n        \\"Required\\": \\"OPTIONAL\\",\\n        \\"Description\\": \\"modidyTest\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"RegularExpression\\": \\"xxx\\",\\n        \\"MinLength\\": 123456,\\n        \\"DocOrder\\": 0,\\n        \\"Location\\": \\"HEAD\\"\\n      }\\n    ]\\n  },\\n  \\"ServiceParameters\\": {\\n    \\"ServiceParameter\\": [\\n      {\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"ServiceParametersMap\\": {\\n    \\"ServiceParameterMap\\": [\\n      {\\n        \\"RequestParameterName\\": \\"sex\\",\\n        \\"ServiceParameterName\\": \\"sex\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询历史版本详情',
      'summary' => '查询指定API的某一次历史发布版本的定义详情，即某一次历史发布时发布的API定义。',
      'description' => '查询指定API的某一次历史发布版本的定义详情，即某一次历史发布时发布的API定义。

- 此功能面向开放API的用户。
- 网关会记录下每个API每一次发布的时间、定义等等，您可以通过其他的接口获取版本号来指定查询某一次发布的定义详情。',
    ),
    'DescribeApisByApp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'APP的ID',
            'description' => 'APP的ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '333486644',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码',
            'description' => '当前页码',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页条目',
            'description' => '每页条目',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiUid',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API的ID',
            'description' => 'API的ID',
            'type' => 'string',
            'required' => false,
            'example' => 'b19240592b1b4e74961fb8438ed7550c',
          ),
        ),
        4 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API名称',
            'description' => 'API名称',
            'type' => 'string',
            'required' => false,
            'example' => 'getPersonInfo',
          ),
        ),
        5 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API请求路径',
            'description' => 'API请求路径',
            'type' => 'string',
            'required' => false,
            'example' => '/tt',
          ),
        ),
        6 => 
        array (
          'name' => 'Method',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API的请求HTTP Method',
            'description' => 'API的请求HTTP Method',
            'type' => 'string',
            'required' => false,
            'example' => 'POST',
          ),
        ),
        7 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API描述信息',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'title' => '当前页码',
                'description' => '当前页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'PageSize' => 
              array (
                'title' => '每页条目',
                'description' => '每页条目',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'title' => '总条目数',
                'description' => '总条目数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'AppApiRelationInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AppApiRelationInfo' => 
                  array (
                    'description' => 'API授权信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'API授权信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'title' => 'API的ID',
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => 'c625795a1e664782a918eaa629e96ab5',
                        ),
                        'AuthorizationSource' => 
                        array (
                          'title' => '授权来源',
                          'description' => '授权来源',
                          'type' => 'string',
                          'example' => 'SELF',
                        ),
                        'AuthVaildTime' => 
                        array (
                          'title' => '授权有效时间',
                          'description' => '授权有效时间',
                          'type' => 'string',
                          'example' => 'Sun, 02 Jan 2022 16:00:00 GMT',
                        ),
                        'Description' => 
                        array (
                          'title' => '描述',
                          'description' => '描述',
                          'type' => 'string',
                          'example' => 'b1008kz',
                        ),
                        'GroupName' => 
                        array (
                          'title' => '分组名称',
                          'description' => '分组名称',
                          'type' => 'string',
                          'example' => 'wb2022012101605749',
                        ),
                        'GroupId' => 
                        array (
                          'title' => '分组ID',
                          'description' => '分组ID',
                          'type' => 'string',
                          'example' => '38bed48d664149e4b9b5ea576319673f',
                        ),
                        'Operator' => 
                        array (
                          'description' => '授权的人，取值：

- **PROVIDER**：API所有者
- **CONSUMER**：API调用者',
                          'type' => 'string',
                          'example' => 'PROVIDER',
                        ),
                        'StageName' => 
                        array (
                          'title' => '环境名称',
                          'description' => '环境名称',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'StageAlias' => 
                        array (
                          'description' => '环境别名',
                          'type' => 'string',
                          'example' => '线上',
                        ),
                        'CreatedTime' => 
                        array (
                          'title' => '授权时间',
                          'description' => '授权时间',
                          'type' => 'string',
                          'example' => 'Sun, 02 Jan 2022 16:00:00 GMT',
                        ),
                        'ApiName' => 
                        array (
                          'title' => 'API名称',
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'sd2_h5_player_history_competition',
                        ),
                        'RegionId' => 
                        array (
                          'title' => '地区ID',
                          'description' => '地区ID',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'Path' => 
                        array (
                          'title' => 'API的请求路径',
                          'description' => 'API的请求路径',
                          'type' => 'string',
                          'example' => '/api/offline/cacheData',
                        ),
                        'Method' => 
                        array (
                          'title' => 'API的请求HTTP Method',
                          'description' => 'API的请求HTTP Method',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"AppApiRelationInfos\\": {\\n    \\"AppApiRelationInfo\\": [\\n      {\\n        \\"ApiId\\": \\"c625795a1e664782a918eaa629e96ab5\\",\\n        \\"AuthorizationSource\\": \\"SELF\\",\\n        \\"AuthVaildTime\\": \\"Sun, 02 Jan 2022 16:00:00 GMT\\",\\n        \\"Description\\": \\"b1008kz\\",\\n        \\"GroupName\\": \\"wb2022012101605749\\",\\n        \\"GroupId\\": \\"38bed48d664149e4b9b5ea576319673f\\",\\n        \\"Operator\\": \\"PROVIDER\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"StageAlias\\": \\"线上\\",\\n        \\"CreatedTime\\": \\"Sun, 02 Jan 2022 16:00:00 GMT\\",\\n        \\"ApiName\\": \\"sd2_h5_player_history_competition\\",\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"Path\\": \\"/api/offline/cacheData\\",\\n        \\"Method\\": \\"GET\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '根据应用查询API列表',
      'summary' => '根据APP查询关联的API列表。',
    ),
    'DescribeAuthorizedApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App编号，系统生成，全局唯一',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '2386789',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'AuthorizedApis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AuthorizedApi' => 
                  array (
                    'description' => '已授权的API集合',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => '系统自动生成API唯一标识符',
                          'type' => 'string',
                          'example' => 'baacc592e63a4cb6a41920d9d3f91f38',
                        ),
                        'AuthorizationSource' => 
                        array (
                          'description' => '授权来源，取值：

- **CONSOLE**：控制台
- **API**：API',
                          'type' => 'string',
                          'example' => 'CONSOLE',
                        ),
                        'AuthVaildTime' => 
                        array (
                          'description' => '授权有效时间的截止时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2018-10-05T16:00:00Z',
                        ),
                        'Description' => 
                        array (
                          'description' => '授权说明',
                          'type' => 'string',
                          'example' => '根据地区名称查询天气情况',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'Weather',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组ID，系统生成，全局唯一',
                          'type' => 'string',
                          'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
                        ),
                        'AuthorizedTime' => 
                        array (
                          'description' => '授权操作的时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2016-07-21T06:17:20',
                        ),
                        'Operator' => 
                        array (
                          'description' => '授权的人，取值：

- **PROVIDER**：API所有者
- **CONSUMER**：API调用者',
                          'type' => 'string',
                          'example' => 'PROVIDER',
                        ),
                        'StageName' => 
                        array (
                          'description' => 'API环境，取值：

- **RELEASE**：线上
- **TEST**：测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'AreaWeather',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'API所在区域',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"AuthorizedApis\\": {\\n    \\"AuthorizedApi\\": [\\n      {\\n        \\"ApiId\\": \\"baacc592e63a4cb6a41920d9d3f91f38\\",\\n        \\"AuthorizationSource\\": \\"CONSOLE\\",\\n        \\"AuthVaildTime\\": \\"2018-10-05T16:00:00Z\\",\\n        \\"Description\\": \\"根据地区名称查询天气情况\\",\\n        \\"GroupName\\": \\"Weather\\",\\n        \\"GroupId\\": \\"523e8dc7bbe04613b5b1d726c2a7889d\\",\\n        \\"AuthorizedTime\\": \\"2016-07-21T06:17:20\\",\\n        \\"Operator\\": \\"PROVIDER\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"AreaWeather\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAuthorizedApisResponse>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <TotalCount>2</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n    <AuthorizedApis>\\r\\n        <AuthorizedApi>\\r\\n            <RegionId>cn-hangzhou</RegionId>\\r\\n            <GroupId>523e8dc7bbe04613b5b1d726c2a7889d</GroupId>\\r\\n            <GroupName>Weather</GroupName>\\r\\n            <StageName>RELEASE</StageName>\\r\\n            <Operator>PROVIDER</Operator>\\r\\n            <ApiId>baacc592e63a4cb6a41920d9d3f91f38</ApiId>\\r\\n            <ApiName>AreaWeather</ApiName>\\r\\n            <AuthorizationSource>CONSOLE</AuthorizationSource>\\r\\n            <Description>根据地区名称查询天气情况</Description>\\r\\n            <AuthorizedTime>2016-07-21T06:17:20Z</AuthorizedTime>\\r\\n            <AuthVaildTime>2018-10-05T16:00:00Z</AuthVaildTime>\\r\\n        </AuthorizedApi>\\r\\n        <AuthorizedApi>\\r\\n            <RegionId>cn-hangzhou</RegionId>\\r\\n            <GroupId>523e8dc7bbe04613b5b1d726c2a7889d</GroupId>\\r\\n            <GroupName>Weather</GroupName>\\r\\n            <StageName>RELEASE</StageName>\\r\\n            <Operator>CONSUMER</Operator>\\r\\n            <ApiId>baacc592e63a4cb6a41920d9d3f89g76</ApiId>\\r\\n            <ApiName>Area</ApiName>\\r\\n            <AuthorizationSource>API</AuthorizationSource>\\r\\n            <Description>查询区域</Description>\\r\\n            <AuthorizedTime>2016-07-21T06:17:20Z</AuthorizedTime>\\r\\n            <AuthVaildTime></AuthVaildTime>\\r\\n        </AuthorizedApi>\\r\\n    </AuthorizedApis>    \\r\\n</DescribeAuthorizedApisResponse>","errorExample":""}]',
      'title' => '查询已授权的API列表',
      'summary' => '查询指定 APP 已授权的API列表，即指定 APP 的API列表。',
      'description' => '- 此功能面向API使用者
- App可以调用查询结果返回的所有API ',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiDoc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，可选值：

- **RELEASE**: 线上
- **TEST**: 测试

若不传入，则默认为release。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'RELEASE',
            'default' => 'release',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ApiId' => 
              array (
                'description' => 'API编号',
                'type' => 'string',
                'example' => 'b24be7e59a104e52bffbf432cc9272af',
              ),
              'ResultType' => 
              array (
                'description' => '返回类型',
                'type' => 'string',
                'example' => 'JSON',
              ),
              'DisableInternet' => 
              array (
                'description' => '- 设置**DisableInternet**为**true**, 仅支持内网调用API。
- 设置**DisableInternet**为**false**, 则不限制调用。创建API时默认为false。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ResultSample' => 
              array (
                'description' => '返回示例',
                'type' => 'string',
                'example' => '{\\n  \\"status\\": 0,\\n  \\"data\\": {\\n    \\"count\\": 1,\\n    \\"list\\": [\\n      \\"352\\"\\n    ]\\n  },\\n  \\"message\\": \\"success\\"\\n}',
              ),
              'RegionId' => 
              array (
                'description' => 'API分组所在的地域ID',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'ForceNonceCheck' => 
              array (
                'description' => '- 设置**ForceNonceCheck**为**true**, 请求时强制检查X-Ca-Nonce，这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后会校验这个参数的有效性，同样的值，15分内只能被使用一次。可以有效防止API的重放攻击。

- 设置**ForceNonceCheck**为**false**，则不检查。创建API时默认为false。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Visibility' => 
              array (
                'description' => '可见性，取值为：**PUBLIC**、**PRIVATE**，分别表示公开、私有',
                'type' => 'string',
                'example' => 'PUBLIC',
              ),
              'FailResultSample' => 
              array (
                'description' => '后端服务失败返回应答的示例',
                'type' => 'string',
                'example' => '{"errorCode":"fail","errorMessage":"param invalid"}',
              ),
              'AuthType' => 
              array (
                'description' => '安全认证方式，取值为：APP、ANONYMOUS，分别表示阿里云APP、匿名',
                'type' => 'string',
                'example' => 'APP',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'F253FB5F-9AE1-5DDA-99B5-46BE00A3719E',
              ),
              'GroupId' => 
              array (
                'description' => 'API分组编号',
                'type' => 'string',
                'example' => 'f51d08c5b7c84342905544ebaec26d35',
              ),
              'GroupName' => 
              array (
                'description' => 'API分组名称',
                'type' => 'string',
                'example' => '会员时代交易服务',
              ),
              'Description' => 
              array (
                'description' => 'API描述',
                'type' => 'string',
                'example' => '领克数字商城OMS-UAT',
              ),
              'DeployedTime' => 
              array (
                'description' => '发布时间',
                'type' => 'string',
                'example' => '2022-07-13T16:00:33Z',
              ),
              'StageName' => 
              array (
                'description' => '环境名称，可选值：

- **RELEASE**: 线上
- **TEST**: 测试',
                'type' => 'string',
                'example' => 'RELEASE',
              ),
              'ApiName' => 
              array (
                'description' => 'API名称',
                'type' => 'string',
                'example' => '获取关键词二维码地址',
              ),
              'RequestConfig' => 
              array (
                'description' => '由 RequestConfig 组成的格式，返回API前端定义信息',
                'type' => 'object',
                'properties' => 
                array (
                  'RequestPath' => 
                  array (
                    'description' => 'API path，比如API的完全地址为`http://api.a.com：8080/object/add?key1=value1&key2=value2`，path是指`/object/add`这一部分。',
                    'type' => 'string',
                    'example' => '/api/billing/test/[type]',
                  ),
                  'RequestHttpMethod' => 
                  array (
                    'description' => 'HTTP Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS。',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'BodyFormat' => 
                  array (
                    'description' => '当**RequestMode**值为**MAPPING**时有效。

POST/PUT请求时，表示数据以何种方式传递给服务器，取值为：**FORM**、**STREAM**，分别表示表单形式(k-v对应)、字节流形式。',
                    'type' => 'string',
                    'example' => 'STREAM',
                  ),
                  'RequestMode' => 
                  array (
                    'description' => '入参请求的模式，取值为：

- MAPPING：入参映射（过滤未知参数）

- PASSTHROUGH：入参透传

- MAPPING_PASSTHROUGH：入参映射（透传未知参数）',
                    'type' => 'string',
                    'example' => 'MAPPING',
                  ),
                  'PostBodyDescription' => 
                  array (
                    'description' => 'Body描述',
                    'type' => 'string',
                    'example' => 'fwefwef',
                  ),
                  'RequestProtocol' => 
                  array (
                    'description' => 'API 支持的协议类型，可以多选，多选情况下以英文逗号隔开，如：”HTTP,HTTPS”，取值为：HTTP、HTTPS。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'EscapePathParam' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
              ),
              'ErrorCodeSamples' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ErrorCodeSample' => 
                  array (
                    'description' => '后端服务返回的错误码示例',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '后端服务返回的错误码示例',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '错误码',
                          'type' => 'string',
                          'example' => 'Error',
                        ),
                        'Message' => 
                        array (
                          'description' => '错误消息',
                          'type' => 'string',
                          'example' => 'error message',
                        ),
                        'Description' => 
                        array (
                          'description' => '错误码描述',
                          'type' => 'string',
                          'example' => '未授权',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ResultDescriptions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                ),
              ),
              'RequestParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RequestParameter' => 
                  array (
                    'description' => '由 RequestParameter 组成的数组格式，返回API中前端入参信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '由 RequestParameter 组成的数组格式，返回API中前端入参信息项',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JsonScheme' => 
                        array (
                          'description' => 'JSON scheme',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'MaxValue' => 
                        array (
                          'description' => '最大值',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '200',
                        ),
                        'ArrayItemsType' => 
                        array (
                          'description' => '数组元素的类型',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'MinValue' => 
                        array (
                          'description' => '最小值',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocShow' => 
                        array (
                          'description' => '文档可见，取值为：**PUBLIC**、**PRIVATE**',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'MaxLength' => 
                        array (
                          'description' => '最大长度',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DefaultValue' => 
                        array (
                          'description' => '默认值',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'ApiParameterName' => 
                        array (
                          'description' => 'API 参数名称',
                          'type' => 'string',
                          'example' => 'Length',
                        ),
                        'EnumValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double或String，允许输入的散列值，不同的值用英文的逗号分隔，形如：1,2,3,4,9或A,B,C,E,F。',
                          'type' => 'string',
                          'example' => 'boy,girl',
                        ),
                        'DemoValue' => 
                        array (
                          'description' => '示例值',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'Required' => 
                        array (
                          'description' => '是否必填',
                          'type' => 'string',
                          'example' => 'OPTIONAL',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => '参数说明',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '参数类型',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'RegularExpression' => 
                        array (
                          'description' => '当**ParameterType**=String，参数验证（正则表达式）',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'MinLength' => 
                        array (
                          'description' => '最小长度',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'DocOrder' => 
                        array (
                          'description' => '文档中顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ApiId\\": \\"b24be7e59a104e52bffbf432cc9272af\\",\\n  \\"ResultType\\": \\"JSON\\",\\n  \\"DisableInternet\\": true,\\n  \\"ResultSample\\": \\"{\\\\\\\\n  \\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": 0,\\\\\\\\n  \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\n    \\\\\\\\\\\\\\"count\\\\\\\\\\\\\\": 1,\\\\\\\\n    \\\\\\\\\\\\\\"list\\\\\\\\\\\\\\": [\\\\\\\\n      \\\\\\\\\\\\\\"352\\\\\\\\\\\\\\"\\\\\\\\n    ]\\\\\\\\n  },\\\\\\\\n  \\\\\\\\\\\\\\"message\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"\\\\\\\\n}\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"ForceNonceCheck\\": true,\\n  \\"Visibility\\": \\"PUBLIC\\",\\n  \\"FailResultSample\\": \\"{\\\\\\"errorCode\\\\\\":\\\\\\"fail\\\\\\",\\\\\\"errorMessage\\\\\\":\\\\\\"param invalid\\\\\\"}\\",\\n  \\"AuthType\\": \\"APP\\",\\n  \\"RequestId\\": \\"F253FB5F-9AE1-5DDA-99B5-46BE00A3719E\\",\\n  \\"GroupId\\": \\"f51d08c5b7c84342905544ebaec26d35\\",\\n  \\"GroupName\\": \\"会员时代交易服务\\",\\n  \\"Description\\": \\"领克数字商城OMS-UAT\\",\\n  \\"DeployedTime\\": \\"2022-07-13T16:00:33Z\\",\\n  \\"StageName\\": \\"RELEASE\\",\\n  \\"ApiName\\": \\"获取关键词二维码地址\\",\\n  \\"RequestConfig\\": {\\n    \\"RequestPath\\": \\"/api/billing/test/[type]\\",\\n    \\"RequestHttpMethod\\": \\"POST\\",\\n    \\"BodyFormat\\": \\"STREAM\\",\\n    \\"RequestMode\\": \\"MAPPING\\",\\n    \\"PostBodyDescription\\": \\"fwefwef\\",\\n    \\"RequestProtocol\\": \\"HTTP\\",\\n    \\"EscapePathParam\\": true\\n  },\\n  \\"ErrorCodeSamples\\": {\\n    \\"ErrorCodeSample\\": [\\n      {\\n        \\"Code\\": \\"Error\\",\\n        \\"Message\\": \\"error message\\",\\n        \\"Description\\": \\"未授权\\"\\n      }\\n    ]\\n  },\\n  \\"RequestParameters\\": {\\n    \\"RequestParameter\\": [\\n      {\\n        \\"JsonScheme\\": \\"{}\\",\\n        \\"MaxValue\\": 200,\\n        \\"ArrayItemsType\\": \\"String\\",\\n        \\"MinValue\\": 123456,\\n        \\"DocShow\\": \\"PUBLIC\\",\\n        \\"MaxLength\\": 123456,\\n        \\"DefaultValue\\": \\"20\\",\\n        \\"ApiParameterName\\": \\"Length\\",\\n        \\"EnumValue\\": \\"boy,girl\\",\\n        \\"DemoValue\\": \\"20\\",\\n        \\"Required\\": \\"OPTIONAL\\",\\n        \\"Description\\": \\"参数说明\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"RegularExpression\\": \\"xxx\\",\\n        \\"MinLength\\": 2,\\n        \\"DocOrder\\": 0,\\n        \\"Location\\": \\"HEAD\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询API说明文档',
      'summary' => '查询指定API的服务说明文档。',
      'description' => '- 此功能面向调用API的用户，指定的API必须是发布到运行环境，且**Visibility**=**PUBLIC**的API或者被授权的**Visibility**=**PRIVATE**的API
- 若您是调用API的用户，该接口返回您指定的API的服务信息及参数定义等详情信息。
- 若您是开放API的用户，那么调用该接口可以查看当前指定API在指定环境中运行的定义，可能与您现在修改中的API定义不同，是真正在环境中生效的定义。
- 若您是开放API的用户，由于该接口面向API调用者鉴权，所以您需要确认该API为PUBLIC类型或者您的相关APP已被授权。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDeployedApi' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '81750604ccff48c48f34d6c0165e09db',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ab7c95a01a7e42f28718f34497bbf47c',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ApiId' => 
              array (
                'description' => 'API编号',
                'type' => 'string',
                'example' => '4eed13a57d4e42fbb51316be8a5329ff',
              ),
              'ResultType' => 
              array (
                'description' => '后端服务返回应答的格式，目前可以设置为：JSON、TEXT、BINARY、XML、HTML。默认为JSON。',
                'type' => 'string',
                'example' => 'HTML',
              ),
              'DisableInternet' => 
              array (
                'description' => '- 设置DisableInternet为**true**, 仅支持内网调用API。
- 设置DisableInternet为**false**, 则不限制调用。

> 修改API时，不设置则不修改原来的取值。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ResultBodyModel' => 
              array (
                'description' => 'api的返回结果',
                'type' => 'string',
              ),
              'ResultSample' => 
              array (
                'description' => '后端服务返回应答的示例',
                'type' => 'string',
                'example' => '{code: 200, message:\'success\', data: \'\'}',
              ),
              'AllowSignatureMethod' => 
              array (
                'description' => 'API的客户端请求签名方法，可选值：

- HmacSHA256
- HmacSHA1,HmacSHA256',
                'type' => 'string',
                'example' => 'HmacSHA256',
              ),
              'RegionId' => 
              array (
                'description' => '分组所在区域',
                'type' => 'string',
                'example' => 'cn-beijing',
              ),
              'ForceNonceCheck' => 
              array (
                'description' => '- 设置**ForceNonceCheck**为**true**, 请求时强制检查X-Ca-Nonce，这个是请求的唯一标识，一般使用UUID来标识。API网关收到这个参数后会校验这个参数的有效性，同样的值，15分内只能被使用一次。可以有效防止API的重放攻击。

- 设置**ForceNonceCheck**为**false**，则不检查。创建API时默认为false。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Visibility' => 
              array (
                'description' => 'API是否公开，可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境定义，会在所有用户的控制台“发现API”页面可见。
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架。',
                'type' => 'string',
                'example' => 'PUBLIC',
              ),
              'FailResultSample' => 
              array (
                'description' => '后端服务失败返回应答的示例',
                'type' => 'string',
                'example' => '{"errorCode":"fail","errorMessage":"param invalid"}',
              ),
              'AuthType' => 
              array (
                'description' => 'API安全认证类型，目前可以取值：

- **APP**：只允许已授权的APP调用
- **ANONYMOUS**：允许匿名调用，设置为允许匿名调用需要注意：
     - 任何能够获取该API服务信息的人，都将能够调用该API。网关不会对调用者做身份认证，也无法设置按用户的流量控制，若开放该API请设置好按API的流量控制。',
                'type' => 'string',
                'example' => 'APP',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
              'Description' => 
              array (
                'description' => '描述信息',
                'type' => 'string',
                'example' => 'Api description',
              ),
              'GroupName' => 
              array (
                'description' => 'API分组名称',
                'type' => 'string',
                'example' => 'Weather',
              ),
              'GroupId' => 
              array (
                'description' => '分组编号',
                'type' => 'string',
                'example' => 'bc77f5b49c974437a9912ea3755cd834',
              ),
              'DeployedTime' => 
              array (
                'description' => '部署时间，格式为yyyy-mm-ddhh:mm:ss',
                'type' => 'string',
                'example' => '2022-07-25T17:47:51Z',
              ),
              'StageName' => 
              array (
                'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                'type' => 'string',
                'example' => 'RELEASE',
              ),
              'ApiName' => 
              array (
                'description' => 'API名称',
                'type' => 'string',
                'example' => 'weather',
              ),
              'RequestConfig' => 
              array (
                'description' => 'Consumer向网关发送API请求的相关配置项。

更多信息，请参见[RequestConfig](~~43985~~)。',
                'type' => 'object',
                'properties' => 
                array (
                  'BodyModel' => 
                  array (
                    'description' => 'body模型

',
                    'type' => 'string',
                  ),
                  'RequestPath' => 
                  array (
                    'description' => 'API path，比如API的完全地址为`http://api.a.com：8080/object/add?key1=value1&key2=value2`，path是指`/object/add`这一部分。',
                    'type' => 'string',
                    'example' => '/api/billing/test/[type]',
                  ),
                  'RequestHttpMethod' => 
                  array (
                    'description' => 'HTTP Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS。',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'BodyFormat' => 
                  array (
                    'description' => '当**RequestMode**值为**MAPPING**时有效。

POST/PUT请求时，表示数据以何种方式传递给服务器，取值为：**FORM**、**STREAM**，分别表示表单形式(k-v对应)、字节流形式。',
                    'type' => 'string',
                    'example' => 'STREAM',
                  ),
                  'RequestMode' => 
                  array (
                    'description' => '入参请求的模式，取值为：

- MAPPING：入参映射（过滤未知参数）

- PASSTHROUGH：入参透传

- MAPPING_PASSTHROUGH：入参映射（透传未知参数）',
                    'type' => 'string',
                    'example' => 'MAPPING',
                  ),
                  'PostBodyDescription' => 
                  array (
                    'description' => '请求body描述',
                    'type' => 'string',
                    'example' => 'fwefwef',
                  ),
                  'RequestProtocol' => 
                  array (
                    'description' => 'API 支持的协议类型，可以多选，多选情况下以英文逗号隔开，如："HTTP,HTTPS"，取值为：HTTP、HTTPS、WebSocket',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                ),
              ),
              'ServiceConfig' => 
              array (
                'description' => '网关向后端服务发送API请求的相关配置项。

更多信息，请参见[ServiceConfig](~~43987~~)。',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => '专有网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-uf6kg9x8sx2tbxxxx',
                  ),
                  'MockStatusCode' => 
                  array (
                    'description' => 'Mock返回状态码

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'ServicePath' => 
                  array (
                    'description' => '调用后端服务path，比如后端服务完全地址为`http://api.a.com:8080/object/add?key1=value1&key2=value2`，**ServicePath**是指`/object/add`这一部分。',
                    'type' => 'string',
                    'example' => '/object/add',
                  ),
                  'Mock' => 
                  array (
                    'description' => '是否采取Mock模式，目前可以取值：

- **TRUE**：启用Mock模式
- **FALSE**：不启用Mock模式',
                    'type' => 'string',
                    'example' => 'TRUE',
                  ),
                  'ServiceAddress' => 
                  array (
                    'description' => '调用后端服务地址，比如后端服务完全地址为`http://api.a.com:8080/object/add?key1=value1&key2=value2`，**ServiceAddress**是指`http://api.a.com:8080`这一部分。',
                    'type' => 'string',
                    'example' => 'http://api.a.com:8080',
                  ),
                  'ServiceVpcEnable' => 
                  array (
                    'description' => '是否启用VPC通道，目前可以取值：

- **TRUE**：启用VPC通道，必须先添加VPC授权成功后才能启用
- **FALSE**：不启用VPC通',
                    'type' => 'string',
                    'example' => 'TRUE',
                  ),
                  'MockResult' => 
                  array (
                    'description' => '如果启用Mock模式，返回的结果',
                    'type' => 'string',
                    'example' => 'test result',
                  ),
                  'ServiceHttpMethod' => 
                  array (
                    'description' => '调用后端服务HTTP协议时的Method，取值为：GET、POST、DELETE、PUT、HEADER、TRACE、PATCH、CONNECT、OPTIONS。',
                    'type' => 'string',
                    'example' => 'POST',
                  ),
                  'ServiceProtocol' => 
                  array (
                    'description' => '后端服务协议类型，目前只支持HTTP/HTTPS/FunctionCompute',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'ServiceTimeout' => 
                  array (
                    'description' => '后端服务超时时间，单位：毫秒',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'MockHeaders' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MockHeader' => 
                      array (
                        'description' => '模拟 Headers',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HeaderValue' => 
                            array (
                              'description' => 'HTTP头参数值',
                              'type' => 'string',
                              'example' => '86400',
                            ),
                            'HeaderName' => 
                            array (
                              'description' => 'HTTP头参数名',
                              'type' => 'string',
                              'example' => 'Content-Type',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'VpcConfig' => 
                  array (
                    'description' => 'VPC通道相关配置项',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VpcId' => 
                      array (
                        'description' => '专用网络ID',
                        'type' => 'string',
                        'example' => 'vpc-2zeafsc3fygk1***',
                      ),
                      'InstanceId' => 
                      array (
                        'description' => '专用网络中的实例ID（Ecs/负载均衡）',
                        'type' => 'string',
                        'example' => 'i-bp1h497hkijewv2***',
                      ),
                      'Port' => 
                      array (
                        'description' => '实例对应的端口号',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8080',
                      ),
                      'Name' => 
                      array (
                        'description' => 'VPC授权名称',
                        'type' => 'string',
                        'example' => 'glmall-app-test',
                      ),
                    ),
                  ),
                  'FunctionComputeConfig' => 
                  array (
                    'description' => '后端为函数计算时的后端配置项',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FcType' => 
                      array (
                        'description' => '函数计算服务类型',
                        'type' => 'string',
                        'example' => 'HttpTrigger',
                      ),
                      'RoleArn' => 
                      array (
                        'description' => 'Ram授权给API网关访问函数计算的arn',
                        'type' => 'string',
                        'example' => 'acs:ram::111***:role/aliyunserviceroleforsas',
                      ),
                      'Method' => 
                      array (
                        'description' => '请求方法',
                        'type' => 'string',
                        'example' => 'GET',
                      ),
                      'FcBaseUrl' => 
                      array (
                        'description' => '函数计算服务根路径',
                        'type' => 'string',
                        'example' => 'https://122xxxxxxx.fc.aliyun.com/2016xxxx/proxy/testSxxx.xxx/testHttp/',
                      ),
                      'ContentTypeValue' => 
                      array (
                        'description' => '调用后端服务HTTP服务，ContentTypeCatagory的值为DEFAULT或者CUSTOM时，ContentType头的取值。',
                        'type' => 'string',
                        'example' => 'application/x-www-form-urlencoded; charset=UTF-8
',
                      ),
                      'RegionId' => 
                      array (
                        'description' => '所在的region',
                        'type' => 'string',
                        'example' => 'cn-beijing',
                      ),
                      'OnlyBusinessPath' => 
                      array (
                        'description' => '后端只接收业务path',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'FunctionName' => 
                      array (
                        'description' => '函数计算定义的FunctionName',
                        'type' => 'string',
                        'example' => 'domain_business_control',
                      ),
                      'ContentTypeCatagory' => 
                      array (
                        'description' => '调用后端服务HTTP服务时，ContentType头的取值策略：

- **DEFAULT**：使用API网关默认的值
- **CUSTOM**：自定义
- **CLIENT**：使用客户端上行的ContentType的头',
                        'type' => 'string',
                        'example' => 'DEFAULT',
                      ),
                      'Path' => 
                      array (
                        'description' => 'API请求路径',
                        'type' => 'string',
                        'example' => '/api/offline/cacheData',
                      ),
                      'ServiceName' => 
                      array (
                        'description' => '函数计算定义的ServiceName',
                        'type' => 'string',
                        'example' => 'fcservicename',
                      ),
                      'Qualifier' => 
                      array (
                        'description' => '函数别名',
                        'type' => 'string',
                        'example' => '2',
                      ),
                    ),
                  ),
                ),
              ),
              'OpenIdConnectConfig' => 
              array (
                'description' => '第三方账号认证OpenID Connect相关配置项',
                'type' => 'object',
                'properties' => 
                array (
                  'OpenIdApiType' => 
                  array (
                    'description' => 'OpenID Connect模式，目前可以取值：

- **IDTOKEN**：获取授权API，颁发Token，当设置此项时，参数PublicKeyId和PublicKey为必传。
- **BUSINESS**：业务API，Token验证，当设置此项时，参数IdTokenParamName为必传。',
                    'type' => 'string',
                    'example' => 'IDTOKEN',
                  ),
                  'IdTokenParamName' => 
                  array (
                    'description' => 'Token对应的参数名称',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'PublicKeyId' => 
                  array (
                    'description' => '公钥ID',
                    'type' => 'string',
                    'example' => '88483727556929326703309904351185815489',
                  ),
                  'PublicKey' => 
                  array (
                    'description' => 'api公钥',
                    'type' => 'string',
                    'example' => 'EB1837F8693CCED0BF750B3AD48467BEB569E780A14591CF92',
                  ),
                ),
              ),
              'ErrorCodeSamples' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ErrorCodeSample' => 
                  array (
                    'description' => '后端服务返回的错误码示例。

更多信息，请参见[ErrorCodeSample](~~44392~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '错误码',
                          'type' => 'string',
                          'example' => 'Error',
                        ),
                        'Message' => 
                        array (
                          'description' => '错误信息。',
                          'type' => 'string',
                          'example' => 'error message',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => '错误描述',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ResultDescriptions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ResultDescription' => 
                  array (
                    'description' => 'api的返回说明',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'api的返回说明',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'type' => 'string',
                        ),
                        'Key' => 
                        array (
                          'type' => 'string',
                        ),
                        'HasChild' => 
                        array (
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'result description',
                        ),
                        'Pid' => 
                        array (
                          'type' => 'string',
                        ),
                        'Mandatory' => 
                        array (
                          'description' => '是否必填。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Name' => 
                        array (
                          'type' => 'string',
                        ),
                        'Id' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SystemParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemParameter' => 
                  array (
                    'description' => '系统参数列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'QueryParamDTO',
                        ),
                        'ParameterName' => 
                        array (
                          'description' => '系统参数名，取值为：CaClientIp、CaDomain、CaRequestHandleTime、CaAppId、CaRequestId、CaHttpSchema、CaProxy。',
                          'type' => 'string',
                          'example' => 'CaClientIp',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '对应后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CustomSystemParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CustomSystemParameter' => 
                  array (
                    'description' => '自定义系统参数列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例值',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'ParameterName' => 
                        array (
                          'description' => '自定义系统参数名',
                          'type' => 'string',
                          'example' => 'appid',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '对应后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ConstantParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ConstantParameter' => 
                  array (
                    'description' => '常量参数列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                        'ConstantValue' => 
                        array (
                          'description' => '常量值',
                          'type' => 'string',
                          'example' => 'constance',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RequestParameter' => 
                  array (
                    'description' => 'Consumer向网关发送API请求的参数描述。

更多信息，请参见[RequestParameter](~~43986~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JsonScheme' => 
                        array (
                          'description' => 'JSON scheme',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'MaxValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double，参数的最大值限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'ArrayItemsType' => 
                        array (
                          'description' => '数组元素的类型',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'MinValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double，参数的最小值限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocShow' => 
                        array (
                          'description' => '文档可见，取值为：**PUBLIC**、**PRIVATE**',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'MaxLength' => 
                        array (
                          'description' => '当**ParameterType**=String，参数的最大长度限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DefaultValue' => 
                        array (
                          'description' => '默认值',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'ApiParameterName' => 
                        array (
                          'description' => 'API 参数名称',
                          'type' => 'string',
                          'example' => 'age',
                        ),
                        'EnumValue' => 
                        array (
                          'description' => '当**ParameterType**=Int、Long、Float、Double或String，允许输入的散列值，不同的值用英文的逗号分隔，形如：1,2,3,4,9或A,B,C,E,F。',
                          'type' => 'string',
                          'example' => 'boy,girl',
                        ),
                        'DemoValue' => 
                        array (
                          'description' => '示例值',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'Required' => 
                        array (
                          'description' => '是否必填，取值为：**REQUIRED**、**OPTIONAL**，分别表示必填、不必填',
                          'type' => 'string',
                          'example' => 'OPTIONAL',
                        ),
                        'Description' => 
                        array (
                          'description' => '参数描述',
                          'type' => 'string',
                          'example' => 'parameter description',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '参数类型，取值为：String、Int、Long、Float、Double、Boolean，分别表示字符、整型、长整型、单精度浮点型、双精度浮点型、布尔。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'RegularExpression' => 
                        array (
                          'description' => '当**ParameterType**=String，参数验证（正则表达式）',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'MinLength' => 
                        array (
                          'description' => '当**ParameterType**=String，参数的最小长度限定',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'DocOrder' => 
                        array (
                          'description' => '文档中顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ServiceParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceParameter' => 
                  array (
                    'description' => '网关向后端服务发送API请求的参数描述。

更多信息，请参见[ServiceParameter](~~43988~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Location' => 
                        array (
                          'description' => '参数位置，取值为：BODY、HEAD、QUERY、PATH',
                          'type' => 'string',
                          'example' => 'HEAD',
                        ),
                        'ParameterType' => 
                        array (
                          'description' => '后端参数数据类型，取值为：STRING、NUMBER、BOOLEAN，分别表示字符、数值、布尔。',
                          'type' => 'string',
                          'example' => 'String',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'clientIp',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ServiceParametersMap' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceParameterMap' => 
                  array (
                    'description' => 'Consumer向网关发送请求的参数和网关向后端服务发送的请求的参数的映射关系。

更多信息，请参见[ServiceParameterMap](~~43989~~)。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RequestParameterName' => 
                        array (
                          'description' => '前端入参名称',
                          'type' => 'string',
                          'example' => 'sex',
                        ),
                        'ServiceParameterName' => 
                        array (
                          'description' => '后端参数名称',
                          'type' => 'string',
                          'example' => 'sex',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ApiId\\": \\"4eed13a57d4e42fbb51316be8a5329ff\\",\\n  \\"ResultType\\": \\"HTML\\",\\n  \\"DisableInternet\\": true,\\n  \\"ResultBodyModel\\": \\"\\",\\n  \\"ResultSample\\": \\"{code: 200, message:\'success\', data: \'\'}\\",\\n  \\"AllowSignatureMethod\\": \\"HmacSHA256\\",\\n  \\"RegionId\\": \\"cn-beijing\\",\\n  \\"ForceNonceCheck\\": true,\\n  \\"Visibility\\": \\"PUBLIC\\",\\n  \\"FailResultSample\\": \\"{\\\\\\"errorCode\\\\\\":\\\\\\"fail\\\\\\",\\\\\\"errorMessage\\\\\\":\\\\\\"param invalid\\\\\\"}\\",\\n  \\"AuthType\\": \\"APP\\",\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\",\\n  \\"Description\\": \\"Api description\\",\\n  \\"GroupName\\": \\"Weather\\",\\n  \\"GroupId\\": \\"bc77f5b49c974437a9912ea3755cd834\\",\\n  \\"DeployedTime\\": \\"2022-07-25T17:47:51Z\\",\\n  \\"StageName\\": \\"RELEASE\\",\\n  \\"ApiName\\": \\"weather\\",\\n  \\"RequestConfig\\": {\\n    \\"BodyModel\\": \\"\\",\\n    \\"RequestPath\\": \\"/api/billing/test/[type]\\",\\n    \\"RequestHttpMethod\\": \\"POST\\",\\n    \\"BodyFormat\\": \\"STREAM\\",\\n    \\"RequestMode\\": \\"MAPPING\\",\\n    \\"PostBodyDescription\\": \\"fwefwef\\",\\n    \\"RequestProtocol\\": \\"HTTP\\"\\n  },\\n  \\"ServiceConfig\\": {\\n    \\"VpcId\\": \\"vpc-uf6kg9x8sx2tbxxxx\\",\\n    \\"MockStatusCode\\": 200,\\n    \\"ServicePath\\": \\"/object/add\\",\\n    \\"Mock\\": \\"TRUE\\",\\n    \\"ServiceAddress\\": \\"http://api.a.com:8080\\",\\n    \\"ServiceVpcEnable\\": \\"TRUE\\",\\n    \\"MockResult\\": \\"test result\\",\\n    \\"ServiceHttpMethod\\": \\"POST\\",\\n    \\"ServiceProtocol\\": \\"HTTP\\",\\n    \\"ServiceTimeout\\": 1000,\\n    \\"MockHeaders\\": {\\n      \\"MockHeader\\": [\\n        {\\n          \\"HeaderValue\\": \\"86400\\",\\n          \\"HeaderName\\": \\"Content-Type\\"\\n        }\\n      ]\\n    },\\n    \\"VpcConfig\\": {\\n      \\"VpcId\\": \\"vpc-2zeafsc3fygk1***\\",\\n      \\"InstanceId\\": \\"i-bp1h497hkijewv2***\\",\\n      \\"Port\\": 8080,\\n      \\"Name\\": \\"glmall-app-test\\"\\n    },\\n    \\"FunctionComputeConfig\\": {\\n      \\"FcType\\": \\"HttpTrigger\\",\\n      \\"RoleArn\\": \\"acs:ram::111***:role/aliyunserviceroleforsas\\",\\n      \\"Method\\": \\"GET\\",\\n      \\"FcBaseUrl\\": \\"https://122xxxxxxx.fc.aliyun.com/2016xxxx/proxy/testSxxx.xxx/testHttp/\\",\\n      \\"ContentTypeValue\\": \\"application/x-www-form-urlencoded; charset=UTF-8\\\\n\\",\\n      \\"RegionId\\": \\"cn-beijing\\",\\n      \\"OnlyBusinessPath\\": false,\\n      \\"FunctionName\\": \\"domain_business_control\\",\\n      \\"ContentTypeCatagory\\": \\"DEFAULT\\",\\n      \\"Path\\": \\"/api/offline/cacheData\\",\\n      \\"ServiceName\\": \\"fcservicename\\",\\n      \\"Qualifier\\": \\"2\\"\\n    }\\n  },\\n  \\"OpenIdConnectConfig\\": {\\n    \\"OpenIdApiType\\": \\"IDTOKEN\\",\\n    \\"IdTokenParamName\\": \\"xxx\\",\\n    \\"PublicKeyId\\": \\"88483727556929326703309904351185815489\\",\\n    \\"PublicKey\\": \\"EB1837F8693CCED0BF750B3AD48467BEB569E780A14591CF92\\"\\n  },\\n  \\"ErrorCodeSamples\\": {\\n    \\"ErrorCodeSample\\": [\\n      {\\n        \\"Code\\": \\"Error\\",\\n        \\"Message\\": \\"error message\\",\\n        \\"Description\\": \\"错误描述\\"\\n      }\\n    ]\\n  },\\n  \\"ResultDescriptions\\": {\\n    \\"ResultDescription\\": [\\n      {\\n        \\"Type\\": \\"\\",\\n        \\"Key\\": \\"\\",\\n        \\"HasChild\\": false,\\n        \\"Description\\": \\"result description\\",\\n        \\"Pid\\": \\"\\",\\n        \\"Mandatory\\": true,\\n        \\"Name\\": \\"\\",\\n        \\"Id\\": \\"\\"\\n      }\\n    ]\\n  },\\n  \\"SystemParameters\\": {\\n    \\"SystemParameter\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"QueryParamDTO\\",\\n        \\"ParameterName\\": \\"CaClientIp\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"CustomSystemParameters\\": {\\n    \\"CustomSystemParameter\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"123\\",\\n        \\"ParameterName\\": \\"appid\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"ConstantParameters\\": {\\n    \\"ConstantParameter\\": [\\n      {\\n        \\"Description\\": \\"123\\",\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ServiceParameterName\\": \\"constance\\",\\n        \\"ConstantValue\\": \\"constance\\"\\n      }\\n    ]\\n  },\\n  \\"RequestParameters\\": {\\n    \\"RequestParameter\\": [\\n      {\\n        \\"JsonScheme\\": \\"{}\\",\\n        \\"MaxValue\\": 123456,\\n        \\"ArrayItemsType\\": \\"String\\",\\n        \\"MinValue\\": 123456,\\n        \\"DocShow\\": \\"PUBLIC\\",\\n        \\"MaxLength\\": 123456,\\n        \\"DefaultValue\\": \\"20\\",\\n        \\"ApiParameterName\\": \\"age\\",\\n        \\"EnumValue\\": \\"boy,girl\\",\\n        \\"DemoValue\\": \\"20\\",\\n        \\"Required\\": \\"OPTIONAL\\",\\n        \\"Description\\": \\"parameter description\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"RegularExpression\\": \\"xxx\\",\\n        \\"MinLength\\": 123456,\\n        \\"DocOrder\\": 0,\\n        \\"Location\\": \\"HEAD\\"\\n      }\\n    ]\\n  },\\n  \\"ServiceParameters\\": {\\n    \\"ServiceParameter\\": [\\n      {\\n        \\"Location\\": \\"HEAD\\",\\n        \\"ParameterType\\": \\"String\\",\\n        \\"ServiceParameterName\\": \\"clientIp\\"\\n      }\\n    ]\\n  },\\n  \\"ServiceParametersMap\\": {\\n    \\"ServiceParameterMap\\": [\\n      {\\n        \\"RequestParameterName\\": \\"sex\\",\\n        \\"ServiceParameterName\\": \\"sex\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询API在指定环境中的定义',
      'summary' => '查询指定API在指定环境中正在运行的定义，是真正在指定环境中生效的定义，可能跟正在编辑中的定义不同。',
    ),
    'DescribeHistoryApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => true,
            'example' => '0ccb66aadb5345b78a40f57d192d8aa4',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，可选值：

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的Api编号',
            'type' => 'string',
            'required' => false,
            'example' => 'a12068f555964ca8a0c9c33288f1e5a7',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称（模糊匹配）',
            'type' => 'string',
            'required' => false,
            'example' => 'getPersonInfo',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：每页显示条数。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：当前页码。',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6C87A26A-6A18-4B8E-8099-705278381A2C',
              ),
              'PageSize' => 
              array (
                'description' => '指定分页查询时每页行数，最大值50，默认值为10',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ApiHisItems' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiHisItem' => 
                  array (
                    'description' => '由 ApiHisItem 组成的数组格式，返回API的信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '对应版本的API是否生效，取值为：**ONLINE**、**OFFLINE**，分别表示有效、无效。',
                          'type' => 'string',
                          'example' => 'ONLINE',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API的ID。',
                          'type' => 'string',
                          'example' => '5af418828f0344a3b588c0cc1331a3bc',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '创建对象接口',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'myGroup2',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组ID',
                          'type' => 'string',
                          'example' => '1084f9034c744137901057206b39d2b6',
                        ),
                        'DeployedTime' => 
                        array (
                          'description' => '发布时间(格林威治时间)',
                          'type' => 'string',
                          'example' => '2016-07-20T08:28:48Z',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，可选值：

- **RELEASE**: 线上
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'StageAlias' => 
                        array (
                          'description' => '环境别名',
                          'type' => 'string',
                          'example' => '线上',
                        ),
                        'HistoryVersion' => 
                        array (
                          'description' => 'API定义的历史版本',
                          'type' => 'string',
                          'example' => '20210915101416294',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'v2_role_assign',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"6C87A26A-6A18-4B8E-8099-705278381A2C\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"ApiHisItems\\": {\\n    \\"ApiHisItem\\": [\\n      {\\n        \\"Status\\": \\"ONLINE\\",\\n        \\"ApiId\\": \\"5af418828f0344a3b588c0cc1331a3bc\\",\\n        \\"Description\\": \\"创建对象接口\\",\\n        \\"GroupName\\": \\"myGroup2\\",\\n        \\"GroupId\\": \\"1084f9034c744137901057206b39d2b6\\",\\n        \\"DeployedTime\\": \\"2016-07-20T08:28:48Z\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"StageAlias\\": \\"线上\\",\\n        \\"HistoryVersion\\": \\"20210915101416294\\",\\n        \\"ApiName\\": \\"v2_role_assign\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询API发布版本定义列表',
      'summary' => '查询API历史发布版本列表。',
    ),
    'DescribeImportOASTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OperationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进行导入操作时生成的异步任务ID，用来查询导入任务的执行情况',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '4c53ccf1d40c489686d1adf5c2644a7f',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的id',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
              'ApiResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiResult' => 
                  array (
                    'description' => 'API的导入结果',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => 'c5a0c2900ff746b789c007545be22fb8',
                        ),
                        'Path' => 
                        array (
                          'description' => 'API的请求路径',
                          'type' => 'string',
                          'example' => '/creator/getByCreatorId',
                        ),
                        'Method' => 
                        array (
                          'description' => 'API的请求HTTP Method',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API的描述信息',
                          'type' => 'string',
                          'example' => '这个API用于查询',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组 ID',
                          'type' => 'string',
                          'example' => '736508d885074167ba8fbce3bc95ea0b',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'api名称',
                          'type' => 'string',
                          'example' => 'GetByCreatorIdUsingGET',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '如果导入失败时，显示失败的原因',
                          'type' => 'string',
                          'example' => 'Internal Error',
                        ),
                        'UpdateStatus' => 
                        array (
                          'description' => '当前子任务执行的状态
 - RUNNING：执行中
 - WAIT：等待调度
 - OVER：执行成功
 - FAIL：执行失败
 - CANCEL：取消执行',
                          'type' => 'string',
                          'example' => 'WAIT',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ModelResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ModelResult' => 
                  array (
                    'description' => '模型的导入结果',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModelName' => 
                        array (
                          'description' => '模型名称',
                          'type' => 'string',
                          'example' => 'Pet',
                        ),
                        'ModelId' => 
                        array (
                          'description' => '导入的模型id',
                          'type' => 'string',
                          'example' => '6b48d724c921415486e190c494dd6bf8',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组ID',
                          'type' => 'string',
                          'example' => '736508d885074167ba8fbce3bc95ea0b',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '如果导入失败时，显示失败的原因',
                          'type' => 'string',
                          'example' => 'Internal Error
',
                        ),
                        'UpdateStatus' => 
                        array (
                          'description' => '当前子任务执行的状态
 - RUNNING：执行中
 - WAIT：等待调度
 - OVER：执行成功
 - FAIL：执行失败
 - CANCEL：取消执行',
                          'type' => 'string',
                          'example' => 'FAIL',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TaskStatus' => 
              array (
                'description' => '导入任务的执行状态：
- Running：运行中
- Finished：执行完成',
                'type' => 'string',
                'example' => 'Finished',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\",\\n  \\"ApiResults\\": {\\n    \\"ApiResult\\": [\\n      {\\n        \\"ApiId\\": \\"c5a0c2900ff746b789c007545be22fb8\\",\\n        \\"Path\\": \\"/creator/getByCreatorId\\",\\n        \\"Method\\": \\"GET\\",\\n        \\"Description\\": \\"这个API用于查询\\",\\n        \\"GroupId\\": \\"736508d885074167ba8fbce3bc95ea0b\\",\\n        \\"ApiName\\": \\"GetByCreatorIdUsingGET\\",\\n        \\"ErrorMessage\\": \\"Internal Error\\",\\n        \\"UpdateStatus\\": \\"WAIT\\"\\n      }\\n    ]\\n  },\\n  \\"ModelResults\\": {\\n    \\"ModelResult\\": [\\n      {\\n        \\"ModelName\\": \\"Pet\\",\\n        \\"ModelId\\": \\"6b48d724c921415486e190c494dd6bf8\\",\\n        \\"GroupId\\": \\"736508d885074167ba8fbce3bc95ea0b\\",\\n        \\"ErrorMessage\\": \\"Internal Error\\\\n\\",\\n        \\"UpdateStatus\\": \\"FAIL\\"\\n      }\\n    ]\\n  },\\n  \\"TaskStatus\\": \\"Finished\\"\\n}","type":"json"}]',
      'title' => '查询OAS导入API的任务',
      'summary' => '查询OAS批量导入API的结果。',
    ),
    'DescribePurchasedApis' => 
    array (
      'summary' => '获取在云市场购买的 API 列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => false,
            'example' => 'd27ad517be5f4c95ac3631780a8f4d50',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => false,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称',
            'type' => 'string',
            'required' => false,
            'example' => '纯真IP库查询接口',
          ),
        ),
        4 => 
        array (
          'name' => 'Visibility',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API是否公开，目前可以取值：

- **PUBLIC**：公开，如选择此类型，该API的线上环境，会在所有用户的控制台“发现API”页面展示
- **PRIVATE**：不公开，如选择此类型，当该组API在云市场上架时，私有类型的API不会上架',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条目',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回指定的页码',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '当前页的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
              'PageSize' => 
              array (
                'description' => '每页条目',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'PurchasedApis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PurchasedApi' => 
                  array (
                    'description' => '由purchasedapi组成的数组格式，返回api调用延迟监控信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '由purchasedapi组成的数组格式，返回api调用延迟监控信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Visibility' => 
                        array (
                          'description' => '可见性，可选值：

- **PUBLIC**：公开
- **PRIVATE**：私有',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'PurchasedTime' => 
                        array (
                          'description' => '购买时间',
                          'type' => 'string',
                          'example' => '2021-06-11T13:57:38+08:00',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API的ID。',
                          'type' => 'string',
                          'example' => 'eb6e54c1576d41149746e8e69b0a0792',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '最后修改时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2021-06-11T13:57:38+08:00',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => 'test测试',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'DMS_DEFAULT_GROUP_408589',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组 ID，系统生成，全局唯一',
                          'type' => 'string',
                          'example' => '3013a55c0c44483f984d26df27120513',
                        ),
                        'DeployedTime' => 
                        array (
                          'description' => '部署时间，格式为yyyy-mm-ddhh:mm:ss',
                          'type' => 'string',
                          'example' => '2021-06-1113:57:38',
                        ),
                        'StageName' => 
                        array (
                          'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'TEST',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'gw_rado_tissot_',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"PurchasedApis\\": {\\n    \\"PurchasedApi\\": [\\n      {\\n        \\"Visibility\\": \\"PUBLIC\\",\\n        \\"PurchasedTime\\": \\"2021-06-11T13:57:38+08:00\\",\\n        \\"ApiId\\": \\"eb6e54c1576d41149746e8e69b0a0792\\",\\n        \\"ModifiedTime\\": \\"2021-06-11T13:57:38+08:00\\",\\n        \\"Description\\": \\"test测试\\",\\n        \\"GroupName\\": \\"DMS_DEFAULT_GROUP_408589\\",\\n        \\"GroupId\\": \\"3013a55c0c44483f984d26df27120513\\",\\n        \\"DeployedTime\\": \\"2021-06-1113:57:38\\",\\n        \\"StageName\\": \\"TEST\\",\\n        \\"ApiName\\": \\"gw_rado_tissot_\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取购买的 API 列表',
    ),
    'DescribeApiHistories' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => true,
            'example' => '1084f9034c744137901057206b39d2b6',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，可选值：

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE ',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的API编号',
            'type' => 'string',
            'required' => false,
            'example' => 'c076144d7878437b8f82fb85890ce6a0',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称（模糊匹配）',
            'type' => 'string',
            'required' => false,
            'example' => 'weather',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'required' => false,
            'example' => '10',
            'format' => 'int32',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'required' => false,
            'example' => '1',
            'format' => 'int32',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ003',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '32',
              ),
              'ApiHisItems' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiHisItem' => 
                  array (
                    'description' => '由 ApiHisItem 组成的数组格式，返回API的信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '对应版本的API是否生效，取值为：**ONLINE**、**OFFLINE**，分别表示有效、无效。',
                          'type' => 'string',
                          'example' => 'ONLINE',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '5af418828f0344a3b588c0cc1331a3bc',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '创建对象接口',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'myGroup2',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '1084f9034c744137901057206b39d2b6',
                        ),
                        'DeployedTime' => 
                        array (
                          'description' => '发布时间(格林威治时间)',
                          'type' => 'string',
                          'example' => '2016-07-20T08:28:48Z',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，可选值：

- **RELEASE**: 线上
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'HistoryVersion' => 
                        array (
                          'description' => 'API定义的历史版本',
                          'type' => 'string',
                          'example' => '20160705104552393',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => '创建对象',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 3,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ003\\",\\n  \\"PageSize\\": 15,\\n  \\"TotalCount\\": 32,\\n  \\"ApiHisItems\\": {\\n    \\"ApiHisItem\\": [\\n      {\\n        \\"Status\\": \\"ONLINE\\",\\n        \\"ApiId\\": \\"5af418828f0344a3b588c0cc1331a3bc\\",\\n        \\"Description\\": \\"创建对象接口\\",\\n        \\"GroupName\\": \\"myGroup2\\",\\n        \\"GroupId\\": \\"1084f9034c744137901057206b39d2b6\\",\\n        \\"DeployedTime\\": \\"2016-07-20T08:28:48Z\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"HistoryVersion\\": \\"20160705104552393\\",\\n        \\"ApiName\\": \\"创建对象\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiHistoriesResponse>\\r\\n    <ApiHisItems>\\r\\n        <ApiHisItem>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>63be9002440b4778a61122f14c2b2bbb</GroupId>\\r\\n            <GroupName>myGroup3</GroupName>\\r\\n            <ApiId>c076144d7878437b8f82fb85890ce6a0</ApiId>\\r\\n            <ApiName>获取对象列表</ApiName>\\r\\n            <StageName>release</StageName>\\r\\n            <HistoryVersion>20160705104552292</HistoryVersion>\\r\\n            <Status>DISABLE</Status>\\r\\n            <Description>分页显示对象列表</Description>\\r\\n            <DeployedTime>2016-07-23T08:28:48Z</DeployedTime>\\r\\n        </ApiHisItem>\\r\\n        <ApiHisItem>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>1084f9034c744137901057206b39d2b6</GroupId>\\r\\n            <GroupName>myGroup2</GroupName>\\r\\n            <ApiId>5af418828f0344a3b588c0cc1331a3bc</ApiId>\\r\\n            <ApiName>创建对象</ApiName>\\r\\n            <StageName>release</StageName>\\r\\n            <HistoryVersion>20160705104552393</HistoryVersion>\\r\\n            <Status>DISABLE</Status>\\r\\n            <Description>创建对象接口</Description>\\r\\n            <DeployedTime>2016-07-20T08:28:48Z</DeployedTime>\\r\\n        </ApiHisItem>\\r\\n    </ApiHisItems>\\r\\n    <PageNumber>3</PageNumber>\\r\\n    <PageSize>15</PageSize>\\r\\n    <TotalCount>32</TotalCount>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ003</RequestId>        \\r\\n</DescribeApiHistoriesResponse>","errorExample":""}]',
      'title' => '查询API历史发布的版本列表',
      'summary' => '查询指定API历次历史发布的版本列表。',
      'description' => '- 此功能面向开放API的用户，有过发布的API才有历史版本记录
- 调用该接口能获取API历史版本号数据，用于其他接口的调用
',
    ),
    'DescribeDeployedApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => false,
            'example' => '63be9002440b4778a61122f14c2b2bbb',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，可选值：

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的API编号',
            'type' => 'string',
            'required' => false,
            'example' => 'c076144d7878437b8f82fb85890ce6a0',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称（模糊匹配）',
            'type' => 'string',
            'required' => false,
            'example' => 'weather',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'EnableTagAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用标签验证',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'appname',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'testapp',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
        8 => 
        array (
          'name' => 'ApiPath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的请求Path',
            'type' => 'string',
            'required' => false,
            'example' => '/st4',
          ),
        ),
        9 => 
        array (
          'name' => 'ApiMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的请求HTTP方法',
            'type' => 'string',
            'required' => false,
            'example' => 'POST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ002',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'DeployedApis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeployedApiItem' => 
                  array (
                    'description' => '由 DeployedApiItem 组成的数组格式，返回API的信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Visibility' => 
                        array (
                          'description' => '可见性，可选值：

- **PUBLIC**: 公开
- **PRIVATE**: 私有',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => 'c076144d7878437b8f82fb85890ce6a0',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '分页显示对象列表',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'myGroup3',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '63be9002440b4778a61122f14c2b2bbb',
                        ),
                        'DeployedTime' => 
                        array (
                          'description' => '发布时间(格林威治时间)',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，可选值：

- **RELEASE**: 线上
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => '获取对象列表',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                        'ApiPath' => 
                        array (
                          'description' => 'API的请求Path',
                          'type' => 'string',
                          'example' => '/trademark/search',
                        ),
                        'ApiMethod' => 
                        array (
                          'description' => 'API的请求HTTP方法',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ002\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"DeployedApis\\": {\\n    \\"DeployedApiItem\\": [\\n      {\\n        \\"Visibility\\": \\"PUBLIC\\",\\n        \\"ApiId\\": \\"c076144d7878437b8f82fb85890ce6a0\\",\\n        \\"Description\\": \\"分页显示对象列表\\",\\n        \\"GroupName\\": \\"myGroup3\\",\\n        \\"GroupId\\": \\"63be9002440b4778a61122f14c2b2bbb\\",\\n        \\"DeployedTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"获取对象列表\\",\\n        \\"RegionId\\": \\"cn-qingdao\\",\\n        \\"ApiPath\\": \\"/trademark/search\\",\\n        \\"ApiMethod\\": \\"POST\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询已发布 API 列表',
      'summary' => '查询已经发布到某指定环境中的API列表，即查询指定环境中正在运行的API列表。',
      'description' => '- 此功能面向开放API的用户',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMarketRemainsQuota' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '*.demo.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RemainsQuota' => 
              array (
                'description' => '剩余配额',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1000',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E7FE7172-AA75-5880-B6F7-C00893E9BC06',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RemainsQuota\\": 1000,\\n  \\"RequestId\\": \\"E7FE7172-AA75-5880-B6F7-C00893E9BC06\\"\\n}","type":"json"}]',
      'title' => '描述剩余配额',
      'summary' => '给购买者查询订购关系剩余次数。',
    ),
    'DescribeDeployApiTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OperationUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51524fb8f12846d694d0a1de9a0cf274',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CA4B3261-F14A-5E33-8608-F75A1DF27AD4',
              ),
              'DeployedResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeployedResult' => 
                  array (
                    'description' => '返回结果',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回结果',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'Success. Request Success.',
                        ),
                        'StageName' => 
                        array (
                          'description' => '指定要查询的环境。

- **RELEASE**：线上
- **TEST**：测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => 'e8da6f6346184da9a30d0dc1888b1f3b',
                        ),
                        'ApiUid' => 
                        array (
                          'description' => 'API 唯一标识',
                          'type' => 'string',
                          'example' => '0433c1cd84724923b7a4f9ca1cfc249c',
                        ),
                        'DeployedStatus' => 
                        array (
                          'description' => '部署状态',
                          'type' => 'string',
                          'example' => 'OVER',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CA4B3261-F14A-5E33-8608-F75A1DF27AD4\\",\\n  \\"DeployedResults\\": {\\n    \\"DeployedResult\\": [\\n      {\\n        \\"ErrorMsg\\": \\"Success. Request Success.\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"GroupId\\": \\"e8da6f6346184da9a30d0dc1888b1f3b\\",\\n        \\"ApiUid\\": \\"0433c1cd84724923b7a4f9ca1cfc249c\\",\\n        \\"DeployedStatus\\": \\"OVER\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询发布API任务进度',
      'summary' => '查询发布API的异步任务的进度。',
    ),
    'DescribeAbolishApiTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OperationUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下线操作ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fc54****dd4c4***ad7edd7****39401',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99',
              ),
              'ApiAbolishResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiAbolishResult' => 
                  array (
                    'description' => '返回结果',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回结果',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StageId' => 
                        array (
                          'description' => '运行环境编号',
                          'type' => 'string',
                          'example' => '0919f2854a88484c91dc9253347c78f9',
                        ),
                        'AbolishStatus' => 
                        array (
                          'description' => '下线状态',
                          'type' => 'string',
                          'example' => 'OVER',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组ID',
                          'type' => 'string',
                          'example' => '160cb6505e1c43a6b84346856d74eb47',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'wb2022021401619286',
                        ),
                        'ApiUid' => 
                        array (
                          'description' => 'API 唯一标识',
                          'type' => 'string',
                          'example' => '4e26cdbbb113416dba1f0285bed29979',
                        ),
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息。',
                          'type' => 'string',
                          'example' => 'Success. Request Success.',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，枚举为：

- **RELEASE**：线上
- **TEST**：测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'v2_page_consent',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99\\",\\n  \\"ApiAbolishResults\\": {\\n    \\"ApiAbolishResult\\": [\\n      {\\n        \\"StageId\\": \\"0919f2854a88484c91dc9253347c78f9\\",\\n        \\"AbolishStatus\\": \\"OVER\\",\\n        \\"GroupId\\": \\"160cb6505e1c43a6b84346856d74eb47\\",\\n        \\"GroupName\\": \\"wb2022021401619286\\",\\n        \\"ApiUid\\": \\"4e26cdbbb113416dba1f0285bed29979\\",\\n        \\"ErrorMsg\\": \\"Success. Request Success.\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"v2_page_consent\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询API下线任务',
      'summary' => '查询API下线任务的进度。',
    ),
    'AbolishApi' => 
    array (
      'summary' => '下线指定运行环境的指定API。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd6f679aeb3be4b91b3688e887ca1fe16',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运行环境名称，取值：

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ016',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ016\\"\\n}","errorExample":""},{"type":"xml","example":"<AbolishApiResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ016</RequestId>        \\r\\n</AbolishApiResponse>","errorExample":""}]',
      'title' => '下线 API',
      'description' => '- 此功能面向开放API的用户，和发布API相对应
- 将指定环境中运行的指定API从运行环境里删除，需要一定的时间，最长不超过5s
- API下线后将不能被调用（指定环境）',
    ),
    'DeployApi' => 
    array (
      'summary' => '发布API到指定的运行环境。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '63be9002440b4778a61122f14c2b2bbb',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd6f679aeb3be4b91b3688e887ca1fe16',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运行环境名称，取值：

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次发布备注说明',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'for_test1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\"\\n}","errorExample":""},{"type":"xml","example":"<DeployApiResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>        \\r\\n</DeployApiResponse>","errorExample":""}]',
      'title' => '发布 API',
      'description' => '- 此功能面向开放API的用户，定义的API只有发布到运行环境，才能被调用
- API发布到集群里需要一定的时间，最长5秒后生效
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchDeployApis' => 
    array (
      'summary' => '批量发布API到预发/测试/线上环境。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运行环境名称，取值：

- **RELEASE**：线上
- **TEST**：测试

- PRE：预发',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Api',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定要操作的api列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'GroupId' => 
                array (
                  'description' => 'API分组编号',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'b4f5c342b8bc4ef88ccda0332402****',
                ),
                'ApiUid' => 
                array (
                  'description' => 'API 唯一标识',
                  'type' => 'string',
                  'required' => true,
                  'example' => '2b35dd68345b472f8051647306a1****',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OperationId' => 
              array (
                'description' => '操作ID。',
                'type' => 'string',
                'example' => '2a322599-8e38-428a-a306-9b21ea2129bf',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E7FE7172-AA75-5880-B6F7-C00893E9BC06',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OperationId\\": \\"2a322599-8e38-428a-a306-9b21ea2129bf\\",\\n  \\"RequestId\\": \\"E7FE7172-AA75-5880-B6F7-C00893E9BC06\\"\\n}","type":"json"}]',
      'title' => '批量发布API',
    ),
    'BatchAbolishApis' => 
    array (
      'summary' => '批量下线已经发布到环境的API。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Api',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定要操作的api',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'StageId' => 
                array (
                  'description' => '环境id',
                  'type' => 'string',
                  'required' => false,
                  'example' => '979fd16250644d5b82173534f465ac77',
                ),
                'GroupId' => 
                array (
                  'description' => 'API分组编号',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ced5ab777f7b440398ea70e4470124de',
                ),
                'ApiUid' => 
                array (
                  'description' => 'API 唯一标识',
                  'type' => 'string',
                  'required' => true,
                  'example' => '994f72dcdaf04af0b38022c65fdbd1ac',
                ),
                'StageName' => 
                array (
                  'description' => '环境名称',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'RELEASE',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OperationId' => 
              array (
                'description' => '操作ID。',
                'type' => 'string',
                'example' => 'f7834d74be4e41aa8e607b0fafae9b33',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'E7FE7172-AA75-5880-B6F7-C00893E9BC06',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OperationId\\": \\"f7834d74be4e41aa8e607b0fafae9b33\\",\\n  \\"RequestId\\": \\"E7FE7172-AA75-5880-B6F7-C00893E9BC06\\"\\n}","type":"json"}]',
      'title' => '批量下线API',
    ),
    'SwitchApi' => 
    array (
      'summary' => '指定历史版本切换掉指定环境中正在运行中的API定义，即用历史定义替换运行中定义。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api分组编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '8dfec8759a6e4831bf73d8a982c20778',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b41f334843c445619bc3b85419895b3e',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，限200字以内',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'for_demo',
          ),
        ),
        4 => 
        array (
          'name' => 'HistoryVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '历史版本号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '20210305180312839',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'FB263467-7F5D-5A1B-88E8-06CB0228E0FE',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"FB263467-7F5D-5A1B-88E8-06CB0228E0FE\\"\\n}","type":"json"}]',
      'title' => '切换指定环境中正在运行中的API定义',
    ),
    'DryRunSwagger' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Overwrite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否覆盖现有API。

覆盖检测条件为：API的HTTP请求类型+后端请求路径相同。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalCondition',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '全局条件。',
            'type' => 'object',
            'required' => false,
            'docRequired' => true,
            'example' => '{}',
          ),
        ),
        2 => 
        array (
          'name' => 'DataFormat',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Swagger文本格式：

- json
- yaml',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'yaml',
          ),
        ),
        3 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Swagger文本内容。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '"A Swagger API definition in YAML"',
          ),
        ),
        4 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd633cf5524f841b9950e245b191bdabf',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'GlobalCondition' => 
              array (
                'description' => '全局条件。',
                'type' => 'string',
                'example' => '{}',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
              'Success' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiDryRunSwaggerSuccess' => 
                  array (
                    'description' => '本次所有通过swagger导入成功的API信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本次所有通过swagger导入成功的api信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Path' => 
                        array (
                          'description' => '创建API时配置的请求路径',
                          'type' => 'string',
                          'example' => '/http/get/mapping',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '创建API时配置的http方法',
                          'type' => 'string',
                          'example' => 'get',
                        ),
                        'ApiSwagger' => 
                        array (
                          'description' => 'API 的 Swagger 定义',
                          'type' => 'string',
                          'example' => '"A Swagger API definition in YAML"',
                        ),
                        'ApiOperation' => 
                        array (
                          'description' => '该API是创建（CREATE）或修改（MODIFY）',
                          'type' => 'string',
                          'example' => 'CREATE',
                        ),
                        'ApiUid' => 
                        array (
                          'description' => '导入成功的API的UID',
                          'type' => 'string',
                          'example' => '8e274ec61cf6468e83b68371956831cb',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Failed' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportSwaggerFailed' => 
                  array (
                    'description' => '本次所有通过swagger导入失败的API信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Path' => 
                        array (
                          'description' => '创建API时配置的请求路径',
                          'type' => 'string',
                          'example' => '/http/get/mapping',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '创建API时配置的http方法',
                          'type' => 'string',
                          'example' => 'post',
                        ),
                        'ErrorMsg' => 
                        array (
                          'description' => '创建API时返回的错误信息',
                          'type' => 'string',
                          'example' => 'api already exists : apiUid ===> 8e274ec61cf6468e83b68371956831cb',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ModelFailed' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportModelFailed' => 
                  array (
                    'description' => '本次所有通过 swagger 导入失败的 Model 信息。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'Not Found',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型名字',
                          'type' => 'string',
                          'example' => 'Region',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API 分组 ID',
                          'type' => 'string',
                          'example' => '36d4bcfaec1946e1870d90b2d7519710',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ModelSuccess' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiImportModelSuccess' => 
                  array (
                    'description' => '本次所有通过 swagger 导入成功的 Model 信息。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModelUid' => 
                        array (
                          'description' => '模型uid',
                          'type' => 'string',
                          'example' => 'ec1946e1870d90b2d7519',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型名称',
                          'type' => 'string',
                          'example' => 'NewInstance',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'api分组id',
                          'type' => 'string',
                          'example' => 'b2d552ed90ca435b86f7bf8d45414793',
                        ),
                        'ModelOperation' => 
                        array (
                          'description' => '该模型是创建（CREATE）或修改（MODIFY）',
                          'type' => 'string',
                          'example' => 'CREATE',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"GlobalCondition\\": \\"{}\\",\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\",\\n  \\"Success\\": {\\n    \\"ApiDryRunSwaggerSuccess\\": [\\n      {\\n        \\"Path\\": \\"/http/get/mapping\\",\\n        \\"HttpMethod\\": \\"get\\",\\n        \\"ApiSwagger\\": \\"\\\\\\"A Swagger API definition in YAML\\\\\\"\\",\\n        \\"ApiOperation\\": \\"CREATE\\",\\n        \\"ApiUid\\": \\"8e274ec61cf6468e83b68371956831cb\\"\\n      }\\n    ]\\n  },\\n  \\"Failed\\": {\\n    \\"ApiImportSwaggerFailed\\": [\\n      {\\n        \\"Path\\": \\"/http/get/mapping\\",\\n        \\"HttpMethod\\": \\"post\\",\\n        \\"ErrorMsg\\": \\"api already exists : apiUid ===> 8e274ec61cf6468e83b68371956831cb\\"\\n      }\\n    ]\\n  },\\n  \\"ModelFailed\\": {\\n    \\"ApiImportModelFailed\\": [\\n      {\\n        \\"ErrorMsg\\": \\"Not Found\\",\\n        \\"ModelName\\": \\"Region\\",\\n        \\"GroupId\\": \\"36d4bcfaec1946e1870d90b2d7519710\\"\\n      }\\n    ]\\n  },\\n  \\"ModelSuccess\\": {\\n    \\"ApiImportModelSuccess\\": [\\n      {\\n        \\"ModelUid\\": \\"ec1946e1870d90b2d7519\\",\\n        \\"ModelName\\": \\"NewInstance\\",\\n        \\"GroupId\\": \\"b2d552ed90ca435b86f7bf8d45414793\\",\\n        \\"ModelOperation\\": \\"CREATE\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '预检查swagger',
      'summary' => '使用swagger导入swagger之前先预先检查swagger的语法是否规范。',
    ),
    'CreateApp' => 
    array (
      'summary' => '创建API网关的APP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP名称。支持汉字、英文字母、数字、英文格式的下划线，且必须以字母或汉字开始，长度限制为4~26个字符',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CreateAppTest',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP描述信息，长度不超过180个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`。当参数有值，要求对应当tag.N.Key在相同的N的标签键也传入值，否则会报错。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
        3 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的Key，用于调用API时使用',
            'type' => 'string',
            'required' => false,
            'example' => '60030986',
          ),
        ),
        4 => 
        array (
          'name' => 'AppSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的密码',
            'type' => 'string',
            'required' => false,
            'example' => 'nzyNqFkRWB2uLw86',
          ),
        ),
        5 => 
        array (
          'name' => 'AppCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的AppCode',
            'type' => 'string',
            'required' => false,
            'example' => '3aaf905a0a1f4f0eabc6d891dfa08afc',
          ),
        ),
        6 => 
        array (
          'name' => 'Extend',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息',
            'type' => 'string',
            'required' => false,
            'example' => '110210264071',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TagStatus' => 
              array (
                'description' => '标签是否存在，取值为：-**true**：存在-**false**：不存在',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'BA20890E-75C7-41BC-9C8B-73276B58F550',
              ),
              'AppId' => 
              array (
                'description' => 'APP的唯一编号',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20112314518278',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TagStatus\\": false,\\n  \\"RequestId\\": \\"BA20890E-75C7-41BC-9C8B-73276B58F550\\",\\n  \\"AppId\\": 20112314518278\\n}","errorExample":""},{"type":"xml","example":"<CreateAppResponse>\\r\\n    <AppId>20112314518278</AppId> \\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n</CreateAppResponse>","errorExample":""}]',
      'title' => '创建APP',
      'description' => '- 此功能面向调用API的用户
- 每个APP有一对Key和Value密钥对，该密钥在调用API时用于身份验证
- APP调用API需要建立授权关系，即授予APP调用某API的权限
- 一个APP下只能有一对密钥，若密钥泄露可以重置
- 每个阿里云账号创建APP的个数上限是1000个
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteApp' => 
    array (
      'summary' => '删除指定APP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP唯一编号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '110840611',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。最多20个元素。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'appname',
                ),
                'Value' => 
                array (
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'testapp',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'test2',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteAppResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n</DeleteAppResponse>","errorExample":""}]',
      'title' => '删除应用',
      'description' => '- 此功能面向调用API的用户
- 注意删除之后不可恢复，与API的授权关系也不可恢复
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyApp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的唯一标识',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '20112314518278',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持汉字、英文字母、数字、英文格式的下划线，且必须以字母或汉字开始，4~26个字符，1个中文汉字算2个字符。

若不修改，可不传该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'jiedian_pord',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP描述信息，长度不超过180个字符。

若不修改，可不传该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'modidyTest',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '指定规则所适用的对象标签，可设置多个。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 20,
          ),
        ),
        4 => 
        array (
          'name' => 'Extend',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息',
            'type' => 'string',
            'required' => false,
            'example' => '110461946884',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyAppResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n</ModifyAppResponse>","errorExample":""}]',
      'title' => '修改APP应用',
      'summary' => '修改指定APP应用。',
      'description' => '- 此功能面向调用API的用户
- 可修改**AppName**或者**Description**，若两个属性都为空，则不做修改，直接返回成功
- 该接口调用的QPS限制为：单用户QPS不超过50',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApps' => 
    array (
      'summary' => '查询应用列表，非APP拥有者会隐藏APP的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的唯一标识',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20112314518278',
          ),
        ),
        1 => 
        array (
          'name' => 'AppOwner',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App拥有者的阿里云账号ID（账号ID请到[账号管理](https://account.console.aliyun.com/?spm=a2c4g.11186623.2.15.3a8c196eVWxvQB#/secure)页面查看）',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1546564',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Apps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AppItem' => 
                  array (
                    'description' => '由 AppItem 组成的数组格式，返回app的信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => 'APP名称',
                          'type' => 'string',
                          'example' => 'CreateApptest',
                        ),
                        'Description' => 
                        array (
                          'description' => 'APP描述信息',
                          'type' => 'string',
                          'example' => 'App test',
                        ),
                        'AppId' => 
                        array (
                          'description' => 'APP编号',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '20112314518278',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"Apps\\": {\\n    \\"AppItem\\": [\\n      {\\n        \\"AppName\\": \\"CreateApptest\\",\\n        \\"Description\\": \\"App test\\",\\n        \\"AppId\\": 20112314518278\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAppsResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n    <TotalCount>1</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <Apps>\\r\\n        <AppItem>\\r\\n            <AppId>20112314518278</AppId>\\r\\n            <AppName>CreateApptest</AppName>\\r\\n            <Description>App test</Description>\\r\\n        </AppItem>\\r\\n    </Apps>\\r\\n</DescribeAppsResponse>   ","errorExample":""}]',
      'title' => '查询应用列表',
      'description' => '- 此功能面向开放API的用户
- API开放者可通过AppId或者阿里云登录账号查询app信息，进而操作授权
- 每个用户在每个Region每天调用次数上限为200次
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAppAttributes' => 
    array (
      'summary' => '查询APP列表及基本信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的编号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20112314518278',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP名称',
            'type' => 'string',
            'required' => false,
            'example' => 'testApp',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'AppCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的APPCode编码',
            'type' => 'string',
            'required' => false,
            'example' => '23552160',
          ),
        ),
        5 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的Key，用于调用API时使用',
            'type' => 'string',
            'required' => false,
            'example' => '203708622',
          ),
        ),
        6 => 
        array (
          'name' => 'Sort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序，默认值是desc，可选asc，desc
- asc：按修改时间升序排列；
- desc：按修改时间降序排列',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
            'default' => 'desc',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableTagAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用标签验证',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '指定规则所适用的对象标签，可设置多个。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 20,
          ),
        ),
        9 => 
        array (
          'name' => 'Extend',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息',
            'type' => 'string',
            'required' => false,
            'example' => '110243810311',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '8883AC74-259D-4C0B-99FC-0B7F9A588B2F',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Apps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AppAttribute' => 
                  array (
                    'description' => '由 AppAttribute 组成的数组格式，返回app的信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => 'APP名称',
                          'type' => 'string',
                          'example' => 'CreateApptest',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '修改时间(格林威治时间)',
                          'type' => 'string',
                          'example' => '2016-07-31T04:10:19Z',
                        ),
                        'Description' => 
                        array (
                          'description' => 'APP描述信息',
                          'type' => 'string',
                          'example' => 'App test',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间(格林威治时间)',
                          'type' => 'string',
                          'example' => '2016-07-31T04:10:19Z',
                        ),
                        'AppId' => 
                        array (
                          'description' => 'APP编号',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '20112314518278',
                        ),
                        'Extend' => 
                        array (
                          'description' => '扩展信息',
                          'type' => 'string',
                          'example' => '110461946884',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'description' => '标签列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键',
                                    'type' => 'string',
                                    'example' => 'appid',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值',
                                    'type' => 'string',
                                    'example' => '123',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"8883AC74-259D-4C0B-99FC-0B7F9A588B2F\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"Apps\\": {\\n    \\"AppAttribute\\": [\\n      {\\n        \\"AppName\\": \\"CreateApptest\\",\\n        \\"ModifiedTime\\": \\"2016-07-31T04:10:19Z\\",\\n        \\"Description\\": \\"App test\\",\\n        \\"CreatedTime\\": \\"2016-07-31T04:10:19Z\\",\\n        \\"AppId\\": 20112314518278,\\n        \\"Extend\\": \\"110461946884\\",\\n        \\"Tags\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"appid\\",\\n              \\"Value\\": \\"123\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAppAttributesResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n      <TotalCount>1</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <Apps>\\r\\n        <AppAttribute>\\r\\n            <AppId>20112314518278</AppId>\\r\\n            <AppName>CreateApptest</AppName>\\r\\n            <Description>App test</Description>\\r\\n            <CreatedTime>2016-07-31T04:10:19Z</CreatedTime>\\r\\n            <ModifiedTime>2016-07-31T04:10:19Z</ModifiedTime>\\r\\n        </AppAttribute>\\r\\n    </Apps>\\r\\n</DescribeAppAttributesResponse>    ","errorExample":""}]',
      'title' => '查询APP列表信息',
      'description' => '- 此功能面向调用API的用户
- AppId可选择性传入',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAuthorizedApps' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'RELEASE' => 'RELEASE',
            ),
            'example' => 'RELEASE',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'baacc592e63a4cb6a41920d9d3f91f38',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App编号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20112314518278',
          ),
        ),
        6 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App名称',
            'type' => 'string',
            'required' => false,
            'example' => 'CreateApptest',
          ),
        ),
        7 => 
        array (
          'name' => 'AppOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App拥有者的阿里云账号ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1546564',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'AuthorizedApps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AuthorizedApp' => 
                  array (
                    'description' => '返回分组集合',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => '应用名称',
                          'type' => 'string',
                          'example' => '天气',
                        ),
                        'AuthorizationSource' => 
                        array (
                          'description' => '授权来源，取值：

- **CONSOLE**：控制台
- **API**：API',
                          'type' => 'string',
                          'example' => 'CONSOLE',
                        ),
                        'AuthVaildTime' => 
                        array (
                          'description' => '应用名称',
                          'type' => 'string',
                          'example' => '2018-10-05T16:00:00Z',
                        ),
                        'Description' => 
                        array (
                          'description' => '授权说明',
                          'type' => 'string',
                          'example' => '根据地区名称查询天气情况',
                        ),
                        'AuthorizedTime' => 
                        array (
                          'description' => '授权操作的时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2016-07-21T06:17:20Z',
                        ),
                        'AppId' => 
                        array (
                          'description' => '编号，系统生成，全局唯一',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2386789',
                        ),
                        'StageName' => 
                        array (
                          'description' => 'API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'StageAlias' => 
                        array (
                          'description' => '环境别名',
                          'type' => 'string',
                          'example' => '线上',
                        ),
                        'Operator' => 
                        array (
                          'description' => '授权的人，取值：

- **PROVIDER**：API所有者
- **CONSUMER**：API调用者',
                          'type' => 'string',
                          'example' => 'PROVIDER',
                        ),
                        'AppDescription' => 
                        array (
                          'description' => '应用描述信息',
                          'type' => 'string',
                          'example' => '生产应用',
                        ),
                        'Tag' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                  'Value' => 
                                  array (
                                    'type' => 'string',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"AuthorizedApps\\": {\\n    \\"AuthorizedApp\\": [\\n      {\\n        \\"AppName\\": \\"天气\\",\\n        \\"AuthorizationSource\\": \\"CONSOLE\\",\\n        \\"AuthVaildTime\\": \\"2018-10-05T16:00:00Z\\",\\n        \\"Description\\": \\"根据地区名称查询天气情况\\",\\n        \\"AuthorizedTime\\": \\"2016-07-21T06:17:20Z\\",\\n        \\"AppId\\": 2386789,\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"StageAlias\\": \\"线上\\",\\n        \\"Operator\\": \\"PROVIDER\\",\\n        \\"AppDescription\\": \\"生产应用\\",\\n        \\"Tag\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"\\",\\n              \\"Value\\": \\"\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAuthorizedAppsResponse>\\r\\n    <TotalCount>2</TotalCount>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <PageSize>10</PageSize>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n    <AuthorizedApps>\\r\\n        <AuthorizedApp>\\r\\n            <StageName>RELEASE</StageName>\\r\\n            <AppId>2386789</AppId>\\r\\n            <AppName>天气app</AppName>\\r\\n            <Operator>PROVIDER</Operator>\\r\\n            <AuthorizationSource>CONSOLE</AuthorizationSource>\\r\\n            <Description>根据地区名称查询天气情况</Description>\\r\\n            <AuthorizedTime>2016-07-21T06:17:20Z</AuthorizedTime>\\r\\n            <AuthVaildTime>2018-10-05T16:00:00Z</AuthVaildTime> \\r\\n        </AuthorizedApp>\\r\\n        <AuthorizedApp>\\r\\n            <StageName>TEST</StageName>\\r\\n            <AppId>2386789</AppId>\\r\\n            <AppName>天气app</AppName>\\r\\n            <Operator>CONSUMER</Operator>\\r\\n            <AuthorizationSource>API</AuthorizationSource>\\r\\n            <Description>根据地区名称查询天气情况</Description>\\r\\n            <AuthorizedTime>2016-07-21T06:17:20Z</AuthorizedTime>\\r\\n            <AuthVaildTime></AuthVaildTime>\\r\\n        </AuthorizedApp>\\r\\n    </AuthorizedApps>    \\r\\n</DescribeAuthorizedAppsResponse>","errorExample":""}]',
      'title' => '查询可访问APP列表',
      'summary' => '查询当前的应用（APP）列表。',
      'description' => '- 此功能面向API提供者
- 查询结果返回的所有应用（app）均可访问指定的API',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用（app）编号，系统生成，全局唯一',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '110843374',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AppName' => 
              array (
                'description' => 'App名称',
                'type' => 'string',
                'example' => 'CreateApptest',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'DBDB3B0F-EC61-5F33-88AD-EC2446FA1DDB',
              ),
              'ModifiedTime' => 
              array (
                'description' => 'app修改时间',
                'type' => 'string',
                'example' => '2019-01-29T09:33:01Z',
              ),
              'Description' => 
              array (
                'description' => 'app描述信息',
                'type' => 'string',
                'example' => '2021年10月15日10:20:27测算',
              ),
              'AppId' => 
              array (
                'description' => 'App的唯一标识',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '110843374',
              ),
              'CreatedTime' => 
              array (
                'description' => '创建时间',
                'type' => 'string',
                'example' => '2019-01-29T09:33:01Z',
              ),
              'Extend' => 
              array (
                'description' => '扩展信息',
                'type' => 'string',
                'example' => '110243810311',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"AppName\\": \\"CreateApptest\\",\\n  \\"RequestId\\": \\"DBDB3B0F-EC61-5F33-88AD-EC2446FA1DDB\\",\\n  \\"ModifiedTime\\": \\"2019-01-29T09:33:01Z\\",\\n  \\"Description\\": \\"2021年10月15日10:20:27测算\\",\\n  \\"AppId\\": 110843374,\\n  \\"CreatedTime\\": \\"2019-01-29T09:33:01Z\\",\\n  \\"Extend\\": \\"110243810311\\"\\n}","type":"json"}]',
      'title' => '查询可授权 APP 列表',
      'summary' => '查询可授权的 APP 列表，为开发者在操作授权时提取 APP 信息。',
    ),
    'DescribeAppSecurity' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的编号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '20112314518278',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'app',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AppSecret' => 
              array (
                'description' => 'App的密码',
                'type' => 'string',
                'example' => 'c1ae97aaa7e45f21d10824bc44678fee',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'AppKey' => 
              array (
                'description' => 'App的key',
                'type' => 'string',
                'example' => '60030986',
              ),
              'ModifiedTime' => 
              array (
                'description' => '密钥修改时间（格林威治时间）',
                'type' => 'string',
                'example' => '2016-07-31T04:10:19Z',
              ),
              'AppCode' => 
              array (
                'description' => '应用的APPCode编码',
                'type' => 'string',
                'example' => '3aaf905a0a1f4f0eabc6d891dfa08afc',
              ),
              'CreatedTime' => 
              array (
                'description' => '密钥创建时间（格林威治时间），与app创建时间相同',
                'type' => 'string',
                'example' => '2016-07-31T04:10:19Z',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AppSecret\\": \\"c1ae97aaa7e45f21d10824bc44678fee\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"AppKey\\": \\"60030986\\",\\n  \\"ModifiedTime\\": \\"2016-07-31T04:10:19Z\\",\\n  \\"AppCode\\": \\"3aaf905a0a1f4f0eabc6d891dfa08afc\\",\\n  \\"CreatedTime\\": \\"2016-07-31T04:10:19Z\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeAppSecurityResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n    <AppKey>60030986</AppKey>\\r\\n    <AppSecret>c1ae97aaa7e45f21d10824bc44678fee</AppSecret>\\r\\n    <CreatedTime>2016-07-31T04:10:19Z</CreatedTime>\\r\\n    <ModifiedTime>2016-07-31T04:10:19Z</ModifiedTime>\\r\\n</DescribeAppSecurityResponse>","errorExample":""}]',
      'title' => '查询指定 APP 的密钥信息',
      'summary' => '该密钥在调用API时要用作身份认证。',
      'description' => '- 此功能面向调用API的用户
',
    ),
    'ResetAppCode' => 
    array (
      'summary' => '重置应用的AppCode。此接口每个用户每分钟只能调一次。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的AppCode',
            'type' => 'string',
            'required' => true,
            'example' => '3aaf905a0a1f4f0eabc6d891dfa08afc',
          ),
        ),
        1 => 
        array (
          'name' => 'NewAppCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的应用AppCode。',
            'type' => 'string',
            'required' => false,
            'example' => '6f0e7ab2aa5f4b8fb18421e6edf4fb6c2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'D1B18FFE-4A81-59D8-AA02-1817098977CD',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D1B18FFE-4A81-59D8-AA02-1817098977CD\\"\\n}","type":"json"}]',
      'title' => '重置应用',
      'description' => '重置AppCode会存在大约2秒的延迟。',
    ),
    'RemoveVpcAccess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专用网络ID',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-uf657qec7lx42paw3qxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专用网络中的实例ID（ECS/负载均衡）',
            'type' => 'string',
            'required' => true,
            'example' => 'i-uf6bzcg1pr4oh5jjmxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例对应的端口号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '80',
          ),
        ),
        3 => 
        array (
          'name' => 'NeedBatchWork',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要批量工作',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'Apis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Api' => 
                  array (
                    'description' => 'API 列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API Id',
                          'type' => 'string',
                          'example' => '551877242a4b4f3a84a56b7c3570e4a7',
                        ),
                        'StageId' => 
                        array (
                          'description' => '环境 ID',
                          'type' => 'string',
                          'example' => 'd1e1ee28f9fb4b729db0ee8ca76ff0a5',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组ID',
                          'type' => 'string',
                          'example' => '78d54ac4424d4b1792e33ca35637e8e4',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"Apis\\": {\\n    \\"Api\\": [\\n      {\\n        \\"ApiId\\": \\"551877242a4b4f3a84a56b7c3570e4a7\\",\\n        \\"StageId\\": \\"d1e1ee28f9fb4b729db0ee8ca76ff0a5\\",\\n        \\"GroupId\\": \\"78d54ac4424d4b1792e33ca35637e8e4\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RemoveVpcAccessResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n</RemoveVpcAccessResponse>","errorExample":""}]',
      'title' => '撤销 VPC 授权',
      'summary' => '仅删除VPC授权，不做下线关联API的修改。',
      'description' => '- 此功能面向开放 API 的用户
- 撤销 API 网关访问您 VPC 实例的权限

> 删除授权可能会影响您线上的API运行，请在删除前确认此授权未被API使用。',
    ),
    'RemoveVpcAccessAndAbolishApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的vpcid',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp1iw82phcgkvupgfv0o8',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专用网络中的实例ID（ECS/负载均衡）',
            'type' => 'string',
            'required' => true,
            'example' => 'i-uf6iaale3gfef9t9cb41',
          ),
        ),
        2 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '8080',
          ),
        ),
        3 => 
        array (
          'name' => 'NeedBatchWork',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要批量工作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OperationId' => 
              array (
                'description' => '操作ID。',
                'type' => 'string',
                'example' => 'f7834d74be4e41aa8e607b0fafae9b33',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ016',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OperationId\\": \\"f7834d74be4e41aa8e607b0fafae9b33\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ016\\"\\n}","type":"json"}]',
      'title' => '删除VPC授权',
      'summary' => '删除VPC授权并下线关联的已经发布在线上的API。',
    ),
    'ModifyVpcAccessAndUpdateApis' => 
    array (
      'summary' => '修改VPC授权信息并更新关联的API元信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的新vpcId',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'vpc-m5e7jqfppv5wbvmdw5pg2',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的新的实例id

',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '	
i-uf6bzcg1pr4oh5jjmxxx
',
          ),
        ),
        2 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的端口号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '80',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC授权的名称。
> 
> - VPC授权名称不可修改，该参数不可用于修改；
> - 需要填写您当前VPC授权的名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VpcName',
          ),
        ),
        4 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '口令',
            'type' => 'string',
            'required' => false,
            'example' => 'c20d86c4-1eb3-4d0b-afe9-c586df1e2136',
          ),
        ),
        5 => 
        array (
          'name' => 'NeedBatchWork',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '~~是否需要刷新关联的API，><warning>如果您的VPC授权需要更新，并且该授权被API关联并已经发布上线，需要配置为true，否则您的API的后端服务不会刷新></warning>
~~
该参数作废，更新VPC授权信息后如果有关联API存在，会自动更新API的元定义',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'Refresh',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '刷新VPC授权
> 
> - 若您的VPC资源实例ID发生变化，但IP地址未变，勾选后可进行刷新授权',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'VpcTargetHostName',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '后端授权的host',
            'type' => 'string',
            'required' => false,
            'example' => 'iot.hu***ng.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OperationId' => 
              array (
                'description' => '异步任务ID

> 
> - 如果关联API被刷新，可使用任务ID，调用**DescribeUpdateVpcInfoTask**接口，查询更新结果。',
                'type' => 'string',
                'example' => '7b6d0cb72b2e4215b0129f675c889746',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'C2CEC6EA-EEBA-5FD6-8BD9-2CF01980FE39',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OperationId\\": \\"7b6d0cb72b2e4215b0129f675c889746\\",\\n  \\"RequestId\\": \\"C2CEC6EA-EEBA-5FD6-8BD9-2CF01980FE39\\"\\n}","type":"json"}]',
      'title' => '修改VPC授权信息，并且更新关联的API的元信息',
    ),
    'ModifyApiGroupVpcWhitelist' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9b80408147724ddab4c4e2703c6ca019',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'vpc实例id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp11w979o2s9rcr962w25',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'F8B9DC8C-D6E2-5065-BD1F-0401866E7F10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F8B9DC8C-D6E2-5065-BD1F-0401866E7F10\\"\\n}","type":"json"}]',
      'title' => '修改API分组VPC白名单',
      'summary' => '修改API分组VPC专有网络白名单。',
    ),
    'SetVpcAccess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义授权名称，需要保持唯一，不能重复',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专用网络ID，必须是同账户下可用的专用网络的ID',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-uf657qec7lx42paw3qxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专用网络中的实例ID（ECS/负载均衡）',
            'type' => 'string',
            'required' => true,
            'example' => 'i-uf6bzcg1pr4oh5jjmxxx',
          ),
        ),
        3 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例对应的端口号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '80',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC 描述信息',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcTargetHostName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端授权的host',
            'type' => 'string',
            'required' => false,
            'example' => 'iot.hu***ng.com',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的值',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'VpcAccessId' => 
              array (
                'description' => 'Vpc授权ID',
                'type' => 'string',
                'example' => '4c68e061860f441ab72af7404137440e',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"VpcAccessId\\": \\"4c68e061860f441ab72af7404137440e\\"\\n}","type":"json"}]',
      'title' => '添加 VPC 授权',
      'summary' => '创建VPC授权，开通反向访问。',
      'description' => '- 此功能面向开放 API 的用户。
- 授权 API 网关允许访问您的 VPC 实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiGroupVpcWhitelist' => 
    array (
      'summary' => '查询API分组允许访问的VPC白名单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'f6c64214dc27400196eef954575d60d3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'VpcIds' => 
              array (
                'description' => '专用网络id',
                'type' => 'string',
                'example' => 'vpc-bp11w979o2s9rcr962w25',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ016',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"VpcIds\\": \\"vpc-bp11w979o2s9rcr962w25\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ016\\"\\n}","type":"json"}]',
      'title' => '查询分组VPC白名单',
    ),
    'DescribeVpcAccesses' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码',
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页展示条目',
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC授权名称',
            'description' => '自定义授权名称，需要保持唯一，不能重复',
            'type' => 'string',
            'required' => false,
            'example' => 'wuying-edm-svc',
          ),
        ),
        3 => 
        array (
          'name' => 'VpcAccessId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpc授权ID',
            'description' => 'Vpc授权ID',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-*****ssds24',
          ),
        ),
        4 => 
        array (
          'name' => 'AccurateQuery',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否进行精准查询',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpc ID',
            'description' => '专用网络ID',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-uf657qec7lx42paw3qxxx',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例ID',
            'description' => 'VPC授权中的实例ID或IP',
            'type' => 'string',
            'required' => false,
            'example' => '10.199.26.***',
          ),
        ),
        7 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '端口号',
            'description' => '服务端口。',
            'type' => 'string',
            'required' => false,
            'example' => '8080',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '端口号',
            'type' => 'array',
            'items' => 
            array (
              'description' => '指定规则所适用的对象标签，可设置多个。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'appname',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'product',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '8883AC74-259D-4C0B-99FC-0B7F9A588B2F',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VpcAccessAttributes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VpcAccessAttribute' => 
                  array (
                    'description' => '由 VpcAccessAttribute 组成的数组格式，返回VPC授权信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '由 VpcAccessAttribute 组成的数组格式，返回VPC授权信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'title' => 'VPC的ID',
                          'description' => '专用网络ID',
                          'type' => 'string',
                          'example' => 'vpc-uf657qec7lx42paw3qxxx',
                        ),
                        'Description' => 
                        array (
                          'title' => 'VPC授权的描述',
                          'description' => 'VPC授权的描述',
                          'type' => 'string',
                          'example' => '测试',
                        ),
                        'InstanceId' => 
                        array (
                          'title' => 'VPC中的后端服务信息',
                          'description' => '专用网络中的实例ID（ECS/SLB）',
                          'type' => 'string',
                          'example' => 'i-uf6bzcg1pr4oh5jjmxxx',
                        ),
                        'Port' => 
                        array (
                          'title' => 'VPC中的后端服务端口',
                          'description' => '实例对应的端口号',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'Name' => 
                        array (
                          'title' => 'VPC授权名称',
                          'description' => '授权名称',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'CreatedTime' => 
                        array (
                          'title' => 'VPC授权的创建时间',
                          'description' => '创建时间',
                          'type' => 'string',
                          'example' => '2017-01-30T04:10:19Z',
                        ),
                        'RegionId' => 
                        array (
                          'title' => '地域id',
                          'description' => '地域ID',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'VpcAccessId' => 
                        array (
                          'title' => 'vpc授权ID',
                          'description' => 'vpc授权ID',
                          'type' => 'string',
                          'example' => 'vpc-*****ssds24',
                        ),
                        'VpcTargetHostName' => 
                        array (
                          'description' => '后端服务的host',
                          'type' => 'string',
                          'example' => 'hos-a***.fh-**nc.com',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'description' => '标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'PROJECT',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值',
                                    'type' => 'string',
                                    'example' => '6427a17ae6041d1be62414e4',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"8883AC74-259D-4C0B-99FC-0B7F9A588B2F\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"VpcAccessAttributes\\": {\\n    \\"VpcAccessAttribute\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-uf657qec7lx42paw3qxxx\\",\\n        \\"Description\\": \\"测试\\",\\n        \\"InstanceId\\": \\"i-uf6bzcg1pr4oh5jjmxxx\\",\\n        \\"Port\\": 80,\\n        \\"Name\\": \\"test\\",\\n        \\"CreatedTime\\": \\"2017-01-30T04:10:19Z\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"VpcAccessId\\": \\"vpc-*****ssds24\\",\\n        \\"VpcTargetHostName\\": \\"hos-a***.fh-**nc.com\\",\\n        \\"Tags\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"PROJECT\\",\\n              \\"Value\\": \\"6427a17ae6041d1be62414e4\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpcAccessesResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n    <TotalCount>1</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <VpcAccessAttributes>\\r\\n        <VpcAccessAttribute>\\r\\n            <VpcId>vpc-uf657qec7lx42paw3qxxx</VpcId>\\r\\n            <InstanceId>i-uf6bzcg1pr4oh5jjmxxx</InstanceId>\\r\\n            <Port>80</Port>\\r\\n            <Name>test</Name>\\r\\n            <CreatedTime>2017-01-30T04:10:19Z</CreatedTime>        \\r\\n        </VpcAccessAttribute>\\r\\n    </VpcAccessAttributes>\\r\\n</DescribeVpcAccessesResponse>    ","errorExample":""}]',
      'title' => '查询授权的VPC列表',
      'summary' => '查询已授权的VPC列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeUpdateVpcInfoTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OperationUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '7d341787517a47afaaef9cc1bdb7acce',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'ApiUpdateVpcInfoResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiUpdateVpcInfoResult' => 
                  array (
                    'description' => '任务结果列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StageId' => 
                        array (
                          'description' => '阶段id',
                          'type' => 'string',
                          'example' => 'fe952b95072747e2a8dfd336bcff8d7f',
                        ),
                        'UpdateStatus' => 
                        array (
                          'description' => '更新状态',
                          'type' => 'string',
                          'example' => 'success',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'api分组编号',
                          'type' => 'string',
                          'example' => 'e8da6f6346184da9a30d0dc1888b1f3b',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'api分组名称',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ApiUid' => 
                        array (
                          'description' => 'api编号',
                          'type' => 'string',
                          'example' => '86364e7c166c47ba819b3f8f95ac0913',
                        ),
                        'ErrorMsg' => 
                        array (
                          'description' => '错误信息',
                          'type' => 'string',
                          'example' => 'Success. Request Success.',
                        ),
                        'StageName' => 
                        array (
                          'description' => 'API发布的环境',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'api_test2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"ApiUpdateVpcInfoResults\\": {\\n    \\"ApiUpdateVpcInfoResult\\": [\\n      {\\n        \\"StageId\\": \\"fe952b95072747e2a8dfd336bcff8d7f\\",\\n        \\"UpdateStatus\\": \\"success\\",\\n        \\"GroupId\\": \\"e8da6f6346184da9a30d0dc1888b1f3b\\",\\n        \\"GroupName\\": \\"test\\",\\n        \\"ApiUid\\": \\"86364e7c166c47ba819b3f8f95ac0913\\",\\n        \\"ErrorMsg\\": \\"Success. Request Success.\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"api_test2\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询VPC授权更新状态',
      'summary' => '更新VPC授权会异步更新关联的发布中的API，该API用来查询这些API的更新进度。',
    ),
    'ValidateVpcConnectivity' => 
    array (
      'summary' => '测试API网关到指定VPC授权中指定实例的指定端口的网络连通性。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcAccessId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Vpc授权ID',
            'type' => 'string',
            'required' => true,
            'example' => '5f1b3216f9********e2c1297b6741dc',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API网关实例ID',
            'type' => 'string',
            'required' => true,
            'example' => 'apigateway-hz-72bc18******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '9A591B5B-0EC2-5463-B8B8-1984AE3AEBF1',
              ),
              'Connected' => 
              array (
                'description' => 'API网关实例到指定VPC授权网络是否连通
- **true**：网络连通
- **false**：网络不连通',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'IpType' => 
              array (
                'description' => '当VPC授权中实例ID填写为IP时，表示IP的实例类型
- **ECS**：IP对应的实例为ECS
- **SLB**：IP对应的实例为ECS
- **INVALID**：IP对应的实例类型非法',
                'type' => 'string',
                'example' => 'ECS',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9A591B5B-0EC2-5463-B8B8-1984AE3AEBF1\\",\\n  \\"Connected\\": true,\\n  \\"IpType\\": \\"ECS\\"\\n}","type":"json"}]',
      'title' => 'VPC授权连通性测试',
    ),
    'CreateAccessControlList' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
创建访问控制策略，每个用户每个region下只允许创建5个访问控制策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组名称，长度限制为1~30个字符，只支持中文、字母、数字和半角句号（.）、短划线（-）、正斜线（/）和下划线（_）。访问控制策略组名称必须为地域内唯一。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testAcl',
          ),
        ),
        1 => 
        array (
          'name' => 'AddressIPVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组的IP版本。取值：
- **IPv4**。
- **IPv6**。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
            'default' => 'ipv4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'AclId' => 
              array (
                'description' => '访问控制策略ID。',
                'type' => 'string',
                'example' => 'acl-bp1uqwgwmkbutnzq2r59z',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"AclId\\": \\"acl-bp1uqwgwmkbutnzq2r59z\\"\\n}","type":"json"}]',
      'title' => '创建访问控制策略',
    ),
    'DeleteAccessControlList' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
删除访问控制策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-uf6fpfdg3b5muska7uqem',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\"\\n}","type":"json"}]',
      'title' => '删除访问控制策略',
    ),
    'SetAccessControlListAttribute' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
修改访问控制策略名称。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testAcl',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-bp1ohqkonqybecf4llbrc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEB6EC62-B6C7-5082-A45A-45A204724AC2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEB6EC62-B6C7-5082-A45A-45A204724AC2\\"\\n}","type":"json"}]',
      'title' => '修改访问控制策略名称',
    ),
    'AddAccessControlListEntry' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
在实例的访问控制策略中添加IP条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-bp1ohqkonqybecf4llbrc',
          ),
        ),
        1 => 
        array (
          'name' => 'AclEntrys',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置访问控制策略组。

* entry：访问控制策略组中要添加的IP条目，可以指定IP地址段（CIDR block），多个IP地址段之间用逗号隔开。

* comment：访问控制策略组备注说明。

>每次最多可添加50个条目，如果添加的IP条目重复，则只会添加一条，其余重复条目会被忽略。IP条目必须是IP地址段。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{\'entry\': \'192.168.1.0/24\', \'comment\': \'test\'}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEB6EC62-B6C7-5082-A45A-45A204724AC2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEB6EC62-B6C7-5082-A45A-45A204724AC2\\"\\n}","type":"json"}]',
      'title' => '添加IP条目',
    ),
    'RemoveAccessControlListEntry' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
在实例的访问控制策略中删除IP条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-bp12ag0xxcfhq1ll68wp9',
          ),
        ),
        1 => 
        array (
          'name' => 'AclEntrys',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '	
设置访问控制策略组。

* entry：访问控制策略组中的IP条目，可以指定IP地址或IP地址段（CIDR block），多个IP地址/地址段之间用逗号隔开。。

* comment：访问控制策略组备注说明。

>如果访问控制策略组关联了监听，不允许删除组内的所有IP条目。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{\\"entry\\":\\"192.168.1.0/24\\",\\"comment\\":\\"WhiteIp\\"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'D1B18FFE-4A81-59D8-AA02-1817098977CD',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D1B18FFE-4A81-59D8-AA02-1817098977CD\\"\\n}","type":"json"}]',
      'title' => '删除IP条目',
    ),
    'DescribeAccessControlListAttribute' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
查看访问控制策略详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'acl-3nsohdozz0ru8fi5onwz1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AclId' => 
              array (
                'description' => '访问控制策略ID。',
                'type' => 'string',
                'example' => 'acl-uf6fpfdg3b5muska7uqem',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'AclName' => 
              array (
                'description' => '访问控制策略名称。',
                'type' => 'string',
                'example' => 'testAcl',
              ),
              'AclEntrys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AclEntry' => 
                  array (
                    'description' => '访问控制策略的信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制策略的信息列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AclEntryIp' => 
                        array (
                          'description' => '访问控制策略条目。',
                          'type' => 'string',
                          'example' => '192.168.1.0/24',
                        ),
                        'AclEntryComment' => 
                        array (
                          'description' => '访问控制条目备注。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'AddressIPVersion' => 
              array (
                'description' => 'IP版本，可以设置为**ipv4**或者**ipv6**。',
                'type' => 'string',
                'example' => 'ipv4',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"AclId\\": \\"acl-uf6fpfdg3b5muska7uqem\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"AclName\\": \\"testAcl\\",\\n  \\"AclEntrys\\": {\\n    \\"AclEntry\\": [\\n      {\\n        \\"AclEntryIp\\": \\"192.168.1.0/24\\",\\n        \\"AclEntryComment\\": \\"default\\"\\n      }\\n    ]\\n  },\\n  \\"AddressIPVersion\\": \\"ipv4\\"\\n}","type":"json"}]',
      'title' => '查看访问控制策略详情',
    ),
    'DescribeAccessControlLists' => 
    array (
      'summary' => '本功能为API网关专享实例提供实例级别的访问控制能力；
查看访问控制策略列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'testAcl',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：每页显示条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'AddressIPVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP版本，可以设置为**ipv4**或者**ipv6**。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '分页参数：当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'Acls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Acl' => 
                  array (
                    'description' => '访问控制策略组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制策略组列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AclName' => 
                        array (
                          'description' => '访问控制策略名称。',
                          'type' => 'string',
                          'example' => 'testAcl',
                        ),
                        'AclId' => 
                        array (
                          'description' => '访问控制策略ID。',
                          'type' => 'string',
                          'example' => 'acl-3nsohdozz0ru8fi5onwz1',
                        ),
                        'AddressIPVersion' => 
                        array (
                          'description' => '访问控制策略组的IP版本。
- **IPv4**。
- **IPv6**。',
                          'type' => 'string',
                          'example' => 'ipv4',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 3,\\n  \\"Acls\\": {\\n    \\"Acl\\": [\\n      {\\n        \\"AclName\\": \\"testAcl\\",\\n        \\"AclId\\": \\"acl-3nsohdozz0ru8fi5onwz1\\",\\n        \\"AddressIPVersion\\": \\"ipv4\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询访问控制策略列表',
    ),
    'CreatePlugin' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件名称。支持大小写英文字母、中文、数字、下划线（_）、长度为[4,50]个字符, 且不能以下划线开头。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NewCors',
          ),
        ),
        1 => 
        array (
          'name' => 'PluginType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件类型, 可选值：

- **ipControl**：IP访问控制
- **trafficControl**：流量控制
- **backendSignature**：后端签名
- **jwtAuth**：JWT(OpenId Connect)
- **cors**：CORS跨域资源访问
- **caching**：缓存
- **basicAuth**: Basic Auth
- **routing**：后端路由
- **accessControl**：参数访问控制
- **errorMapping**：错误码映射
- **circuitBreaker**：断路器（仅专享实例）
- **remoteAuth**：第三方鉴权（仅专享实例）',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cors',
          ),
        ),
        2 => 
        array (
          'name' => 'PluginData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件定义语句，支持json、yaml',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '---
unit: SECOND         
apiDefault: 1000     
userDefault: 30      
appDefault: 30     
specials:            
  - type: "APP"      
    policies:
    - key: 10123123  
      value: 10     
    - key: 10123123  
      value: 10',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，限200字以内',
            'type' => 'string',
            'required' => false,
            'example' => 'createPlugin',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PluginId' => 
              array (
                'description' => '生成的插件ID',
                'type' => 'string',
                'example' => '1f3bde29b43d4d53989248327ff737f2',
              ),
              'TagStatus' => 
              array (
                'description' => '是否成功标记插件',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PluginId\\": \\"1f3bde29b43d4d53989248327ff737f2\\",\\n  \\"TagStatus\\": true,\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\"\\n}","type":"json"}]',
      'title' => '创建API网关插件',
      'summary' => '新建API网关插件。',
      'description' => '- 此接口面向开放API的用户
- 限制每个用户同一类型的插件可以创建的数量，不同类型，上限不同
- 高级功能的插件定义限制使用
- 插件创建后未绑定API前是无意义的，绑定API后，对绑定的API即时生效。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeletePlugin' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要删除的API网关插件的ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9a3f1a5279434f2ba74ccd91c295af9f',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<DeletePluginResponse>\\r\\n     <RequestId>46373DC4-19F1-4DC8-8C31-1107289BB5E0</RequestId>\\r\\n</DeletePluginResponse>","errorExample":""}]',
      'title' => '删除插件',
      'summary' => '删除某个插件。',
      'description' => '- 此接口面向开放API的用户。
- 必须先解除API和插件的绑定关系，否则删除报错。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AttachPlugin' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的API网关插件ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9a3f1a5279434f2ba74ccd91c295af9f ',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的API分组ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '285bb759342649a1b70c2093a772e087',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'xxx',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TEST',
          ),
        ),
        4 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的API编号',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '8afff6c8c4c6447abb035812e4d66b65 ',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\"\\n}","errorExample":""},{"type":"xml","example":"<AttachPluginResponse>\\r\\n   <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</AttachPluginResponse>","errorExample":""}]',
      'title' => '绑定插件到API上',
      'summary' => '将API和插件建立绑定关系。',
      'description' => '- 此接口面向开放API的用户
- 绑定操作只能选择发布状态的API
- 绑定以后及时生效
- 修改插件后及时生效',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyPlugin' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要修改的API网关插件的ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a96926e82f994915a8da40a119374537 ',
          ),
        ),
        1 => 
        array (
          'name' => 'PluginName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件名称。支持大小写英文字母、中文、数字、下划线（_）、长度为[4,50]个字符, 且不能以下划线开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'modifyCors',
          ),
        ),
        2 => 
        array (
          'name' => 'PluginData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改插件定义语句',
            'type' => 'string',
            'required' => false,
            'example' => 'Plugin definition',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，限200字以内',
            'type' => 'string',
            'required' => false,
            'example' => 'modify plugin first',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyPluginResponse>\\r\\n   <RequestId>CE5722A6-AE78-4741-A9B0-6C817D360510</RequestId>\\r\\n</ModifyPluginResponse>","errorExample":""}]',
      'title' => '修改插件',
      'summary' => '修改插件信息。',
      'description' => '- 此接口面向开放API的用户。
- 插件不允许重名。
',
    ),
    'DetachPlugin' => 
    array (
      'summary' => '解绑API绑定的插件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的API网关插件ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '05df2b52a3644a3a8b1935ab8ab59e9d',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '93b87279e54c4c0baeb7113cdf9c67f5',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '19a2846d8e8541c788c6be740035eb68',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识',
                'type' => 'string',
                'example' => 'AD00F8C0-311B-54A9-ADE2-2436771012DA',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AD00F8C0-311B-54A9-ADE2-2436771012DA\\"\\n}","type":"json"}]',
      'title' => '解绑API绑定的插件',
    ),
    'DescribePluginApis' => 
    array (
      'summary' => '查询插件绑定的API列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API网关插件的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bf6583efcef44c51adb00c4e********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API所属分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '231a4bb81ee94da785733c29********',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API编号。',
            'type' => 'string',
            'required' => false,
            'example' => 'c6b0dd188b0e4e408e12f926********',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'API名称',
          ),
        ),
        4 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API请求路径。',
            'type' => 'string',
            'required' => false,
            'example' => '/sendVerifyCode',
          ),
        ),
        5 => 
        array (
          'name' => 'Method',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API的请求HTTP Method。',
            'type' => 'string',
            'required' => false,
            'example' => 'GET',
          ),
        ),
        6 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'API描述信息',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数，每页显示条数，默认值10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求的返回数据',
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'F9C5C4A5-BC6C-57A3-839F-AB08********',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'ApiSummarys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiPluginSummary' => 
                  array (
                    'description' => 'API信息集合',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'API信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => 'accc8c68b7294b1cb4928741********',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述信息',
                          'type' => 'string',
                          'example' => 'API描述信息',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API所属的分组名称',
                          'type' => 'string',
                          'example' => 'myGroup2',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '5f51f89261854fd9ad5116be********',
                        ),
                        'Path' => 
                        array (
                          'description' => 'API的请求路径',
                          'type' => 'string',
                          'example' => '/mqTest',
                        ),
                        'Method' => 
                        array (
                          'description' => 'API的请求HTTP Method',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，可选值：

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'fhosQueryDayOfStock_V2',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'API所在地域ID',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'StageAlias' => 
                        array (
                          'description' => '环境别名',
                          'type' => 'string',
                          'example' => '线上',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"F9C5C4A5-BC6C-57A3-839F-AB08********\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 7,\\n  \\"ApiSummarys\\": {\\n    \\"ApiPluginSummary\\": [\\n      {\\n        \\"ApiId\\": \\"accc8c68b7294b1cb4928741********\\",\\n        \\"Description\\": \\"API描述信息\\",\\n        \\"GroupName\\": \\"myGroup2\\",\\n        \\"GroupId\\": \\"5f51f89261854fd9ad5116be********\\",\\n        \\"Path\\": \\"/mqTest\\",\\n        \\"Method\\": \\"GET\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"fhosQueryDayOfStock_V2\\",\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"StageAlias\\": \\"线上\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询插件绑定的API列表',
    ),
    'DescribePluginsByApi' => 
    array (
      'summary' => '查询指定环境指定API上绑定的一组插件，该API在该环境必须是运行中状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API所属分组ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3c7a38392e764718ad7673e7b7f535d4',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93f4ead4080c4b2da70b7f81f50ae459',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回指定的每页条数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '46373DC4-19F1-4DC8-8C31-1107289BB5E0',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Plugins' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PluginAttribute' => 
                  array (
                    'description' => '由PluginAttribute组成的数组格式，返回插件的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回插件的信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PluginId' => 
                        array (
                          'description' => '插件ID',
                          'type' => 'string',
                          'example' => '9a3f1a5279434f2ba74ccd91c295af9f',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '最后修改时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2019-01-11T09:29:58Z',
                        ),
                        'PluginData' => 
                        array (
                          'description' => '插件定义语句',
                          'type' => 'string',
                          'example' => '{\\"unit\\":\\"MINUTE\\",\\"apiDefault\\":20}',
                        ),
                        'Description' => 
                        array (
                          'description' => '插件描述',
                          'type' => 'string',
                          'example' => '流控',
                        ),
                        'PluginName' => 
                        array (
                          'description' => '插件名称',
                          'type' => 'string',
                          'example' => 'firstPlugin',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2019-01-11T09:29:58Z',
                        ),
                        'PluginType' => 
                        array (
                          'description' => '插件类型',
                          'type' => 'string',
                          'example' => 'trafficControl',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '插件所在Region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"46373DC4-19F1-4DC8-8C31-1107289BB5E0\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"Plugins\\": {\\n    \\"PluginAttribute\\": [\\n      {\\n        \\"PluginId\\": \\"9a3f1a5279434f2ba74ccd91c295af9f\\",\\n        \\"ModifiedTime\\": \\"2019-01-11T09:29:58Z\\",\\n        \\"PluginData\\": \\"{\\\\\\\\\\\\\\"unit\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"MINUTE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"apiDefault\\\\\\\\\\\\\\":20}\\",\\n        \\"Description\\": \\"流控\\",\\n        \\"PluginName\\": \\"firstPlugin\\",\\n        \\"CreatedTime\\": \\"2019-01-11T09:29:58Z\\",\\n        \\"PluginType\\": \\"trafficControl\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询API上绑定的插件',
      'description' => '- 此功能面向开放API的用户
- 支持分页',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePluginSchemas' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中管控策略描述的语言。取值：

- zh-CN（默认值）：中文。
- en：英文。
- ja：日文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '2D39D1B3-8548-508A-9CE2-7F4A3F2A7989',
              ),
              'PluginSchemas' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PluginSchema' => 
                  array (
                    'description' => '插件模式列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '插件模式列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Title' => 
                        array (
                          'description' => '插件标题',
                          'type' => 'string',
                          'example' => 'plugin schema title',
                        ),
                        'Description' => 
                        array (
                          'description' => '插件描述',
                          'type' => 'string',
                          'example' => 'plugin scheme description',
                        ),
                        'Name' => 
                        array (
                          'description' => '插件名称',
                          'type' => 'string',
                          'example' => 'VPC_C',
                        ),
                        'DocumentId' => 
                        array (
                          'description' => '文档ID',
                          'type' => 'string',
                          'example' => '4107**',
                        ),
                        'SupportClassic' => 
                        array (
                          'description' => '是否支持分类',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2D39D1B3-8548-508A-9CE2-7F4A3F2A7989\\",\\n  \\"PluginSchemas\\": {\\n    \\"PluginSchema\\": [\\n      {\\n        \\"Title\\": \\"plugin schema title\\",\\n        \\"Description\\": \\"plugin scheme description\\",\\n        \\"Name\\": \\"VPC_C\\",\\n        \\"DocumentId\\": \\"4107**\\",\\n        \\"SupportClassic\\": true\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '描述插件模式',
      'summary' => '描述API网关支持的插件模式。',
    ),
    'DescribePluginTemplates' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API网关插件名称',
            'type' => 'string',
            'required' => false,
            'example' => 'jwtAuth',
          ),
        ),
        1 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言类型。系统权限策略的描述将以此语言返回。

- en：英文。
- zh-CN：中文。
- ja：日文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
              'Templates' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Template' => 
                  array (
                    'description' => '模板列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '模板列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Title' => 
                        array (
                          'description' => '插件模版标题',
                          'type' => 'string',
                          'example' => 'template title',
                        ),
                        'DocumentAnchor' => 
                        array (
                          'description' => '文档锚点。',
                          'type' => 'string',
                          'example' => 'anchor',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'balabala',
                        ),
                        'DocumentId' => 
                        array (
                          'description' => '文档ID',
                          'type' => 'string',
                          'example' => '41079',
                        ),
                        'Sample' => 
                        array (
                          'description' => '样例。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\",\\n  \\"Templates\\": {\\n    \\"Template\\": [\\n      {\\n        \\"Title\\": \\"template title\\",\\n        \\"DocumentAnchor\\": \\"anchor\\",\\n        \\"Description\\": \\"balabala\\",\\n        \\"DocumentId\\": \\"41079\\",\\n        \\"Sample\\": \\"1\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取插件模板列表',
    ),
    'DescribePlugins' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API网关插件ID',
            'type' => 'string',
            'required' => false,
            'example' => 'a96926e82f994915a8da40a119374537 ',
          ),
        ),
        1 => 
        array (
          'name' => 'PluginType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API网关插件业务类型',
            'type' => 'string',
            'required' => false,
            'example' => 'cors',
          ),
        ),
        2 => 
        array (
          'name' => 'PluginName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API网关插件名称',
            'type' => 'string',
            'required' => false,
            'example' => 'testPlugin',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'Key， Value',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '46373DC4-19F1-4DC8-8C31-1107289BB5E0',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Plugins' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PluginAttribute' => 
                  array (
                    'description' => '由 PluginAttribute 组成的数组格式，返回插件信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PluginId' => 
                        array (
                          'description' => '插件ID',
                          'type' => 'string',
                          'example' => '9a3f1a5279434f2ba74ccd91c295af9f',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '最后修改时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2019-01-11T09:29:58Z',
                        ),
                        'PluginData' => 
                        array (
                          'description' => '插件定义语句',
                          'type' => 'string',
                          'example' => '{"unit":"MINUTE","apiDefault":20}',
                        ),
                        'Description' => 
                        array (
                          'description' => '插件描述',
                          'type' => 'string',
                          'example' => '流控',
                        ),
                        'PluginName' => 
                        array (
                          'description' => '插件名称',
                          'type' => 'string',
                          'example' => 'firstPlugin',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2019-01-11T09:29:58Z',
                        ),
                        'PluginType' => 
                        array (
                          'description' => '插件类型',
                          'type' => 'string',
                          'example' => 'trafficControl',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '插件所在Region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'description' => '标签列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键',
                                    'type' => 'string',
                                    'example' => 'testkey',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值',
                                    'type' => 'string',
                                    'example' => 'tetstvalue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"46373DC4-19F1-4DC8-8C31-1107289BB5E0\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"Plugins\\": {\\n    \\"PluginAttribute\\": [\\n      {\\n        \\"PluginId\\": \\"9a3f1a5279434f2ba74ccd91c295af9f\\",\\n        \\"ModifiedTime\\": \\"2019-01-11T09:29:58Z\\",\\n        \\"PluginData\\": \\"{\\\\\\"unit\\\\\\":\\\\\\"MINUTE\\\\\\",\\\\\\"apiDefault\\\\\\":20}\\",\\n        \\"Description\\": \\"流控\\",\\n        \\"PluginName\\": \\"firstPlugin\\",\\n        \\"CreatedTime\\": \\"2019-01-11T09:29:58Z\\",\\n        \\"PluginType\\": \\"trafficControl\\",\\n        \\"RegionId\\": \\"cn-qingdao\\",\\n        \\"Tags\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"testkey\\",\\n              \\"Value\\": \\"tetstvalue\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribePluginsResponse>\\r\\n   <RequestId>46373DC4-19F1-4DC8-8C31-1107289BB5E0</RequestId>\\r\\n   <TotalCount>20</TotalCount>\\r\\n   <PageSize>10</PageSize>\\r\\n   <PageNumber>1</PageNumber>\\r\\n   <Plugins>\\r\\n      <PluginAttribute>\\r\\n          <PluginId>9a3f1a5279434f2ba74ccd91c295af9f</PluginId>\\r\\n          <PluginName>firstPlugin</PluginName>\\r\\n          <RegionId>cn-qingdao</RegionId>\\r\\n          <PluginType>trafficControl</PluginType>\\r\\n          <PluginData>{\\"unit\\":\\"MINUTE\\",\\"apiDefault\\":20}</PluginData>\\r\\n          <Description>流控</Description>\\r\\n          <CreatedTime>2019-01-11T09:29:58Z</CreatedTime>\\r\\n          <ModifiedTime>2019-01-11T09:29:58Z</ModifiedTime>\\r\\n      </PluginAttribute>\\r\\n   </Plugins>\\r\\n</DescribePluginsResponse>","errorExample":""}]',
      'title' => '查询插件列表',
      'summary' => '查询插件列表及详情。',
      'description' => '- 支持分页
- 支持按照插件业务类型查询
- 支持按照插件ID查询
- 支持按照插件名称查询',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDataset' => 
    array (
      'summary' => '创建用户自定义数据集。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DatasetName',
          ),
        ),
        1 => 
        array (
          'name' => 'DatasetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集类型，可选值：
- JWT_BLOCKING : JWT黑名单
- IP\\_WHITELIST\\_CIDR : IP白名单
- PARAMETER_ACCESS : 参数访问控制',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'JWT_BLOCKING',
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签的值',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DatasetId' => 
              array (
                'description' => '数据集ID',
                'type' => 'string',
                'example' => 'a25a6589b2584ff490e891cc********',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4173F95B-360C-460C-9F6C-4A96********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DatasetId\\": \\"a25a6589b2584ff490e891cc********\\",\\n  \\"RequestId\\": \\"4173F95B-360C-460C-9F6C-4A96********\\"\\n}","type":"json"}]',
      'title' => '创建数据集',
    ),
    'CreateDatasetItem' => 
    array (
      'summary' => '创建用户自定义数据集的数据条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a25a6589b2584ff490e891cc********',
          ),
        ),
        1 => 
        array (
          'name' => 'Value',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据值（根据数据集类型填写对应类型数据值）',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '106.43.XXX.XXX',
          ),
        ),
        2 => 
        array (
          'name' => 'ExpiredTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据条目超时时间，格式为**yyyy-MM-ddTHH:mm:ssZ（UTC时间）**
为空时表示永不过期',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2022-09-22T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，不超过180个字符',
            'type' => 'string',
            'required' => false,
            'example' => '描述信息',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DatasetItemId' => 
              array (
                'description' => '数据集条目ID',
                'type' => 'string',
                'example' => '5045****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '8A5E2053-4D9F-5280-B7A9-D357********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DatasetItemId\\": \\"5045****\\",\\n  \\"RequestId\\": \\"8A5E2053-4D9F-5280-B7A9-D357********\\"\\n}","type":"json"}]',
      'title' => '创建数据集条目',
    ),
    'DeleteDataset' => 
    array (
      'summary' => '删除用户自定义数据集。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a25a6589b2584ff490e891cc********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '048C8EFB-528F-5E97-8A3D-D17B********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"048C8EFB-528F-5E97-8A3D-D17B********\\"\\n}","type":"json"}]',
      'title' => '删除数据集',
    ),
    'DeleteDatasetItem' => 
    array (
      'summary' => '删除用户自定义数据集的数据条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a25a6589b2584ff490e891cc********
',
          ),
        ),
        1 => 
        array (
          'name' => 'DatasetItemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集条目ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5045****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'FF433E09-663A-5F5D-9DBA-A611********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"FF433E09-663A-5F5D-9DBA-A611********\\"\\n}","type":"json"}]',
      'title' => '删除数据集条目',
    ),
    'ModifyDataset' => 
    array (
      'summary' => '修改用户自定义数据集名称。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a25a6589b2584ff490e891cc********
',
          ),
        ),
        1 => 
        array (
          'name' => 'DatasetName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NewDatasetName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876********\\"\\n}","type":"json"}]',
      'title' => '修改数据集',
    ),
    'ModifyDatasetItem' => 
    array (
      'summary' => '修改用户自定义数据集的数据条目的超时时间和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a25a6589b2584ff490e891cc********',
          ),
        ),
        1 => 
        array (
          'name' => 'DatasetItemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集条目ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5045****
',
          ),
        ),
        2 => 
        array (
          'name' => 'ExpiredTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据条目超时时间，格式为**yyyy-MM-ddTHH:mm:ssZ（UTC时间）**',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2022-09-22T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息，长度不超过180个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'F7DE77BC-0F7D-5A18-B494-BD2C********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F7DE77BC-0F7D-5A18-B494-BD2C********\\"\\n}","type":"json"}]',
      'title' => '修改数据集条目',
    ),
    'DescribeDatasetInfo' => 
    array (
      'summary' => '查询单个数据集信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a25a6589b2584ff490e891cc********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'A2C8F75E-EE84-5C64-960F-45C8********',
              ),
              'DatasetInfo' => 
              array (
                'description' => '数据集信息',
                'type' => 'object',
                'properties' => 
                array (
                  'DatasetId' => 
                  array (
                    'description' => '数据集ID',
                    'type' => 'string',
                    'example' => '62b91a790a693238********',
                  ),
                  'DatasetName' => 
                  array (
                    'description' => '数据集名称',
                    'type' => 'string',
                    'example' => 'DatasetName',
                  ),
                  'DatasetType' => 
                  array (
                    'description' => '数据集类型，可选值：
- JWT_BLOCKING : JWT黑名单
- IP\\_WHITELIST\\_CIDR : IP白名单
- PARAMETER_ACCESS : 参数访问控制',
                    'type' => 'string',
                    'example' => 'JWT_BLOCKING',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '最后修改时间，格林威治时间',
                    'type' => 'string',
                    'example' => '2022-09-21T12:58:43Z',
                  ),
                  'CreatedTime' => 
                  array (
                    'description' => '创建时间，格林威治时间',
                    'type' => 'string',
                    'example' => '2022-09-21T12:58:43Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"A2C8F75E-EE84-5C64-960F-45C8********\\",\\n  \\"DatasetInfo\\": {\\n    \\"DatasetId\\": \\"62b91a790a693238********\\",\\n    \\"DatasetName\\": \\"DatasetName\\",\\n    \\"DatasetType\\": \\"JWT_BLOCKING\\",\\n    \\"ModifiedTime\\": \\"2022-09-21T12:58:43Z\\",\\n    \\"CreatedTime\\": \\"2022-09-21T12:58:43Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询数据集信息',
    ),
    'DescribeDatasetList' => 
    array (
      'summary' => '查询用户自定义数据集列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID（支持输入多个数据集ID，用","分隔）',
            'type' => 'string',
            'required' => false,
            'example' => '4add6a61804e47858266883e********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数，每页显示条数，默认值10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D403C6E6-21B3-5B78-82DA-E3B6********',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'DatasetInfoList' => 
              array (
                'description' => '由datasetinfo组成的数组格式，返回数据集信息',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DatasetId' => 
                    array (
                      'description' => '数据集ID',
                      'type' => 'string',
                      'example' => '6304ce6b4ae6453f********',
                    ),
                    'DatasetName' => 
                    array (
                      'description' => '数据集名称',
                      'type' => 'string',
                      'example' => 'DatasetName',
                    ),
                    'DatasetType' => 
                    array (
                      'description' => '数据集类型，可选值：
- JWT_BLOCKING : JWT黑名单
- IP\\_WHITELIST\\_CIDR : IP白名单
- PARAMETER_ACCESS : 参数访问控制',
                      'type' => 'string',
                      'example' => 'IP_WHITELIST_CIDR',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '最后修改时间，格林威治时间',
                      'type' => 'string',
                      'example' => '2022-09-21T12:58:43Z
',
                    ),
                    'CreatedTime' => 
                    array (
                      'description' => '创建时间，格林威治时间',
                      'type' => 'string',
                      'example' => '2022-09-21T12:58:43Z
',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签的键',
                            'type' => 'string',
                            'example' => 'ENV',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值',
                            'type' => 'string',
                            'example' => '123',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"D403C6E6-21B3-5B78-82DA-E3B6********\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"DatasetInfoList\\": [\\n    {\\n      \\"DatasetId\\": \\"6304ce6b4ae6453f********\\",\\n      \\"DatasetName\\": \\"DatasetName\\",\\n      \\"DatasetType\\": \\"IP_WHITELIST_CIDR\\",\\n      \\"ModifiedTime\\": \\"2022-09-21T12:58:43Z\\\\n\\",\\n      \\"CreatedTime\\": \\"2022-09-21T12:58:43Z\\\\n\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"ENV\\",\\n          \\"Value\\": \\"123\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询数据集列表',
    ),
    'DescribeDatasetItemInfo' => 
    array (
      'summary' => '查询用户自定义数据集的数据集条目信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '62b91a790a693238********',
          ),
        ),
        1 => 
        array (
          'name' => 'DatasetItemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集条目ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '5045****',
          ),
        ),
        2 => 
        array (
          'name' => 'Value',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据值',
            'type' => 'string',
            'required' => false,
            'example' => '106.43.XXX.XXX
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '5BAFA85F-38E3-5D9E-9E32-4B09********',
              ),
              'DatasetItemInfo' => 
              array (
                'description' => '数据集信息',
                'type' => 'object',
                'properties' => 
                array (
                  'DatasetId' => 
                  array (
                    'description' => '数据集ID',
                    'type' => 'string',
                    'example' => '626238665db4a5140eea3e40********',
                  ),
                  'DatasetItemId' => 
                  array (
                    'description' => '数据集条目ID',
                    'type' => 'string',
                    'example' => '5045****',
                  ),
                  'Value' => 
                  array (
                    'description' => '数据值',
                    'type' => 'string',
                    'example' => '106.43.XXX.XXX',
                  ),
                  'ExpiredTime' => 
                  array (
                    'description' => '数据条目超时时间，格式为**yyyy-MM-ddTHH:mm:ssZ（UTC时间）**
为空时表示永不过期',
                    'type' => 'string',
                    'example' => '2022-09-22T12:00:00Z
',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '最后修改时间，格林威治时间',
                    'type' => 'string',
                    'example' => '2022-09-21T12:58:43Z
',
                  ),
                  'CreatedTime' => 
                  array (
                    'description' => '创建时间，格林威治时间',
                    'type' => 'string',
                    'example' => '2022-09-21T12:58:43Z
',
                  ),
                  'Description' => 
                  array (
                    'description' => '描述信息',
                    'type' => 'string',
                    'example' => '描述信息',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5BAFA85F-38E3-5D9E-9E32-4B09********\\",\\n  \\"DatasetItemInfo\\": {\\n    \\"DatasetId\\": \\"626238665db4a5140eea3e40********\\",\\n    \\"DatasetItemId\\": \\"5045****\\",\\n    \\"Value\\": \\"106.43.XXX.XXX\\",\\n    \\"ExpiredTime\\": \\"2022-09-22T12:00:00Z\\\\n\\",\\n    \\"ModifiedTime\\": \\"2022-09-21T12:58:43Z\\\\n\\",\\n    \\"CreatedTime\\": \\"2022-09-21T12:58:43Z\\\\n\\",\\n    \\"Description\\": \\"描述信息\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询数据集条目信息',
    ),
    'DescribeDatasetItemList' => 
    array (
      'summary' => '查询用户自定义数据集的数据条目列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DatasetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集ID',
            'type' => 'string',
            'required' => true,
            'example' => '602e1f6b3543200eaab0a89e********',
          ),
        ),
        1 => 
        array (
          'name' => 'DatasetItemIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据集条目ID，支持填写多个ID，用","分隔',
            'type' => 'string',
            'required' => false,
            'example' => '5045****
',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数，每页显示条数，默认值10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C6E9C6E4-608B-5C0F-9783-E288********',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回数据总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'DatasetItemInfoList' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DatasetId' => 
                    array (
                      'description' => '数据集ID',
                      'type' => 'string',
                      'example' => '	
4add6a61804e47858266883e********
',
                    ),
                    'DatasetItemId' => 
                    array (
                      'description' => '数据集条目ID',
                      'type' => 'string',
                      'example' => '5045****',
                    ),
                    'Value' => 
                    array (
                      'description' => '数据值',
                      'type' => 'string',
                      'example' => '106.43.XXX.XXX',
                    ),
                    'ExpiredTime' => 
                    array (
                      'description' => '数据条目超时时间，格式为**yyyy-MM-ddTHH:mm:ssZ（UTC时间）**
为空时表示永不过期',
                      'type' => 'string',
                      'example' => '2022-09-22T12:00:00Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '最后修改时间，格林威治时间',
                      'type' => 'string',
                      'example' => '2022-09-21T12:58:43Z',
                    ),
                    'CreatedTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2022-09-21T12:58:43Z',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述信息',
                      'type' => 'string',
                      'example' => '描述信息',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"C6E9C6E4-608B-5C0F-9783-E288********\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"DatasetItemInfoList\\": [\\n    {\\n      \\"DatasetId\\": \\"\\\\t\\\\n4add6a61804e47858266883e********\\\\n\\",\\n      \\"DatasetItemId\\": \\"5045****\\",\\n      \\"Value\\": \\"106.43.XXX.XXX\\",\\n      \\"ExpiredTime\\": \\"2022-09-22T12:00:00Z\\",\\n      \\"ModifiedTime\\": \\"2022-09-21T12:58:43Z\\",\\n      \\"CreatedTime\\": \\"2022-09-21T12:58:43Z\\",\\n      \\"Description\\": \\"描述信息\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询数据集条目列表',
    ),
    'CreateModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ModelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型的名称，组内不许重复',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Test',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型所属的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '30e792398d6c4569b04c0e53a3494381',
          ),
        ),
        2 => 
        array (
          'name' => 'Schema',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型的JSON Schema定义',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"type":"object","properties":{"id":{"format":"int64","maximum":100,"exclusiveMaximum":true,"type":"integer"},"name":{"maxLength":10,"type":"string"}}}',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型定义的描述',
            'type' => 'string',
            'required' => false,
            'example' => 'Model Description',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ModifiedTime' => 
              array (
                'description' => '本次创建模型的最后修改时间',
                'type' => 'string',
                'example' => '2019-01-29T09:33:01Z',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4173F95B-360C-460C-9F6C-4A960B904411',
              ),
              'Description' => 
              array (
                'description' => '本次创建模型的描述',
                'type' => 'string',
                'example' => 'Model Description',
              ),
              'GroupId' => 
              array (
                'description' => '本次创建模型所属的分组编号',
                'type' => 'string',
                'example' => '30e792398d6c4569b04c0e53a3494381',
              ),
              'Schema' => 
              array (
                'description' => '本次创建模型的模型定义',
                'type' => 'string',
                'example' => '{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"format\\":\\"int64\\",\\"maximum\\":100,\\"exclusiveMaximum\\":true,\\"type\\":\\"integer\\"},\\"name\\":{\\"maxLength\\":10,\\"type\\":\\"string\\"}}}',
              ),
              'ModelName' => 
              array (
                'description' => '本次创建模型的名称',
                'type' => 'string',
                'example' => 'Test',
              ),
              'CreatedTime' => 
              array (
                'description' => '本次创建模型的创建时间',
                'type' => 'string',
                'example' => '2019-01-29T09:33:01Z',
              ),
              'ModelId' => 
              array (
                'description' => '本次创建模型的ID',
                'type' => 'string',
                'example' => '766c0b9538a04bdf974953b5576783ba',
              ),
              'RegionId' => 
              array (
                'description' => '本次创建模型的所属区域',
                'type' => 'string',
                'example' => 'cn-qingdao',
              ),
              'ModelRef' => 
              array (
                'description' => '本次创建模型的URI',
                'type' => 'string',
                'example' => 'https://apigateway.aliyun.com/models/30e792398d6c4569b04c0e53a3494381/766c0b9538a04bdf974953b5576783ba',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ModifiedTime\\": \\"2019-01-29T09:33:01Z\\",\\n  \\"RequestId\\": \\"4173F95B-360C-460C-9F6C-4A960B904411\\",\\n  \\"Description\\": \\"Model Description\\",\\n  \\"GroupId\\": \\"30e792398d6c4569b04c0e53a3494381\\",\\n  \\"Schema\\": \\"{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"int64\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"maximum\\\\\\\\\\\\\\":100,\\\\\\\\\\\\\\"exclusiveMaximum\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"integer\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"maxLength\\\\\\\\\\\\\\":10,\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\"}}}\\",\\n  \\"ModelName\\": \\"Test\\",\\n  \\"CreatedTime\\": \\"2019-01-29T09:33:01Z\\",\\n  \\"ModelId\\": \\"766c0b9538a04bdf974953b5576783ba\\",\\n  \\"RegionId\\": \\"cn-qingdao\\",\\n  \\"ModelRef\\": \\"https://apigateway.aliyun.com/models/30e792398d6c4569b04c0e53a3494381/766c0b9538a04bdf974953b5576783ba\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateModelResponse>\\r\\n    <ModelId>766c0b9538a04bdf974953b5576783ba</ModelId>\\r\\n    <Description>Model Description</Description>\\r\\n    <CreatedTime>2019-01-29T09:33:01Z</CreatedTime>\\r\\n    <ModelName>Test</ModelName>\\r\\n    <RequestId>4173F95B-360C-460C-9F6C-4A960B904411</RequestId>\\r\\n    <Schema>{\\\\\\"type\\\\\\":\\\\\\"object\\\\\\",\\\\\\"properties\\\\\\":{\\\\\\"id\\\\\\":{\\\\\\"format\\\\\\":\\\\\\"int64\\\\\\",\\\\\\"maximum\\\\\\":100,\\\\\\"exclusiveMaximum\\\\\\":true,\\\\\\"type\\\\\\":\\\\\\"integer\\\\\\"},\\\\\\"name\\\\\\":{\\\\\\"maxLength\\\\\\":10,\\\\\\"type\\\\\\":\\\\\\"string\\\\\\"}}}\\"</Schema>\\r\\n    <ModelRef>https://apigateway.aliyun.com/models/30e792398d6c4569b04c0e53a3494381/766c0b9538a04bdf974953b5576783ba</ModelRef>\\r\\n    <ModifiedTime>2019-01-29T09:33:01Z</ModifiedTime>\\r\\n    <GroupId>30e792398d6c4569b04c0e53a3494381</GroupId>\\r\\n</CreateModelResponse>","errorExample":""}]',
      'title' => '创建模型',
      'summary' => '在API分组的模型管理中创建模型。',
      'description' => '- 模型定义参考[JSON架构草案4](https://tools.ietf.org/html/draft-zyp-json-schema-04?spm=a2c4g.11186623.2.10.2e977ff7p4BpQd)的规范
- Json Schema只支持Object类型的元素属性。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ModelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型的名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Test',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型所属的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '30e792398d6c4569b04c0e53a3494381',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4173F95B-360C-460C-9F6C-4A960B904411',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4173F95B-360C-460C-9F6C-4A960B904411\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteModelResponse>\\r\\n    <RequestId>4173F95B-360C-460C-9F6C-4A960B904411</RequestId>\\r\\n</DeleteModelResponse>","errorExample":""}]',
      'title' => '删除已有模型',
      'summary' => '删除API分组的模型管理中的模型。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ModelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型的名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Test',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的模型定义的描述',
            'type' => 'string',
            'required' => false,
            'example' => 'Model Description',
          ),
        ),
        2 => 
        array (
          'name' => 'Schema',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的模型定义',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"format\\":\\"int64\\",\\"maximum\\":100,\\"exclusiveMaximum\\":true,\\"type\\":\\"integer\\"},\\"name\\":{\\"maxLength\\":10,\\"type\\":\\"string\\"}}}',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型所属的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '30e792398d6c4569b04c0e53a3494381',
          ),
        ),
        4 => 
        array (
          'name' => 'NewModelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的模型名称',
            'type' => 'string',
            'required' => false,
            'example' => 'NewTest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4173F95B-360C-460C-9F6C-4A960B904411',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4173F95B-360C-460C-9F6C-4A960B904411\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyModelResponse>\\r\\n    <RequestId>4173F95B-360C-460C-9F6C-4A960B904411</RequestId>\\r\\n</ModifyModelResponse>","errorExample":""}]',
      'title' => '更新模型',
      'summary' => '更新API分组的模型。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeModels' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '30e792398d6c4569b04c0e53a3494381',
          ),
        ),
        1 => 
        array (
          'name' => 'ModelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型的名称',
            'type' => 'string',
            'required' => false,
            'example' => 'Test',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'ModelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模型ID',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '40306469-2FB5-417A-B723-AF1F4A4FA204',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ModelDetails' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ModelDetail' => 
                  array (
                    'description' => '由ModelDetail组成的数组格式，返回模型的详细信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModifiedTime' => 
                        array (
                          'description' => '模型的最后修改时间',
                          'type' => 'string',
                          'example' => '2019-01-29T11:07:48Z',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '模型所属的分组编号',
                          'type' => 'string',
                          'example' => '30e792398d6c4569b04c0e53a3494381',
                        ),
                        'Description' => 
                        array (
                          'description' => '模型的定义说明',
                          'type' => 'string',
                          'example' => 'Model Description',
                        ),
                        'Schema' => 
                        array (
                          'description' => '模型的定义',
                          'type' => 'string',
                          'example' => '{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"format\\":\\"int64\\",\\"maximum\\":100,\\"exclusiveMaximum\\":true,\\"type\\":\\"integer\\"},\\"name\\":{\\"maxLength\\":10,\\"type\\":\\"string\\"}}}',
                        ),
                        'ModelName' => 
                        array (
                          'description' => '模型的名称',
                          'type' => 'string',
                          'example' => 'Test',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '模型的创建时间',
                          'type' => 'string',
                          'example' => '2019-01-29T11:07:48Z',
                        ),
                        'ModelId' => 
                        array (
                          'description' => '模型的编号',
                          'type' => 'string',
                          'example' => '766c0b9538a04bdf974953b5576783ba',
                        ),
                        'ModelRef' => 
                        array (
                          'description' => '模型的URI',
                          'type' => 'string',
                          'example' => 'https://apigateway.aliyun.com/models/30e792398d6c4569b04c0e53a3494381/766c0b9538a04bdf974953b5576783ba',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagInfo' => 
                            array (
                              'description' => '标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'ENV',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值',
                                    'type' => 'string',
                                    'example' => 'ST4',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"40306469-2FB5-417A-B723-AF1F4A4FA204\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"ModelDetails\\": {\\n    \\"ModelDetail\\": [\\n      {\\n        \\"ModifiedTime\\": \\"2019-01-29T11:07:48Z\\",\\n        \\"GroupId\\": \\"30e792398d6c4569b04c0e53a3494381\\",\\n        \\"Description\\": \\"Model Description\\",\\n        \\"Schema\\": \\"{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"int64\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"maximum\\\\\\\\\\\\\\":100,\\\\\\\\\\\\\\"exclusiveMaximum\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"integer\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"maxLength\\\\\\\\\\\\\\":10,\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\"}}}\\",\\n        \\"ModelName\\": \\"Test\\",\\n        \\"CreatedTime\\": \\"2019-01-29T11:07:48Z\\",\\n        \\"ModelId\\": \\"766c0b9538a04bdf974953b5576783ba\\",\\n        \\"ModelRef\\": \\"https://apigateway.aliyun.com/models/30e792398d6c4569b04c0e53a3494381/766c0b9538a04bdf974953b5576783ba\\",\\n        \\"Tags\\": {\\n          \\"TagInfo\\": [\\n            {\\n              \\"Key\\": \\"ENV\\",\\n              \\"Value\\": \\"ST4\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeModelsResponse>\\r\\n      <PageNumber>1</PageNumber>\\r\\n      <TotalCount>1</TotalCount>\\r\\n      <PageSize>10</PageSize>\\r\\n      <RequestId>40306469-2FB5-417A-B723-AF1F4A4FA204</RequestId>\\r\\n      <ModelDetails>\\r\\n          <ModelDetail>\\r\\n              <Description>Model Description</Description>\\r\\n              <ModelId>766c0b9538a04bdf974953b5576783ba</ModelId>\\r\\n              <CreatedTime>2019-01-29T11:07:48Z</CreatedTime>\\r\\n              <ModelName>Test</ModelName>\\r\\n              <Schema>{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;id&quot;:{&quot;format&quot;:&quot;int64&quot;,&quot;maximum&quot;:100,&quot;exclusiveMaximum&quot;:true,&quot;type&quot;:&quot;integer&quot;},&quot;name&quot;:{&quot;maxLength&quot;:10,&quot;type&quot;:&quot;string&quot;}}}</Schema>\\r\\n              <ModelRef>https://apigateway.aliyun.com/models/30e792398d6c4569b04c0e53a3494381/766c0b9538a04bdf974953b5576783ba</ModelRef>\\r\\n              <ModifiedTime>2019-01-29T11:07:48Z</ModifiedTime>\\r\\n              <GroupId>30e792398d6c4569b04c0e53a3494381</GroupId>\\r\\n          </ModelDetail>\\r\\n      </ModelDetails>\\r\\n</DescribeModelsResponse>","errorExample":""}]',
      'title' => '获取已创建的模型',
      'summary' => '获取API分组已创建的模型。',
      'description' => '- 模型查询支持模糊查询',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetApisAuthorities' => 
    array (
      'summary' => '给指定app添加多个API的访问权限。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用编号，系统生成，全局唯一',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '2386789',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'baacc592e63a4cb6a41920d9d3f91f38,jkscc489e63a4cb6a41920d9d3f92d78',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权说明',
            'type' => 'string',
            'required' => false,
            'example' => '根据地区名称查询天气情况',
          ),
        ),
        5 => 
        array (
          'name' => 'AuthValidTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权有效时间的截止时间，请设置格林尼治标准时间(GMT), 如果为空，即为授权永久有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'Fri,05Oct201816:00:00GMT',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\"\\n}","errorExample":""},{"type":"xml","example":"<SetApisAuthoritiesResponse>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n</SetApisAuthoritiesResponse>","errorExample":""}]',
      'title' => '给多个API添加APP访问权限',
      'description' => '- 此功能面向API提供者和API使用者
- API提供者可以授权自己的API给任意应用（app）调用
- API使用者可以将已购买的API授权给自己的应用（app）',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetAppsAuthorities' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'baacc592e63a4cb6a41920d9d3f91f38',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，取值为：

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的app编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2386789,3389798',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权说明',
            'type' => 'string',
            'required' => false,
            'example' => '根据地区名称查询天气情况',
          ),
        ),
        5 => 
        array (
          'name' => 'AuthValidTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权有效时间的截止时间，请设置格林尼治标准时间(GMT)，如果为空，即为授权永久有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'Fri,05Oct201816:00:00GMT',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\"\\n}","errorExample":""},{"type":"xml","example":"<SetAppsAuthoritiesResponse>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n</SetAppsAuthoritiesResponse>","errorExample":""}]',
      'title' => '给多个APP添加API访问权限',
      'summary' => '给多个 APP 添加指定 API 的访问权限。',
      'description' => '- 此功能面向API调用者和API使用者
- API提供者可以授权自己的API给任意应用（app）调用
- API使用者可以将已购买的API授权给自己的应用（app）
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveApisAuthorities' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用（app）编号，系统生成，全局唯一',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '2386789',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，取值为：

- **RELEASE**: 线上
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'baacc592e63a4cb6a41920d9d3f91f38,jkscc489e63a4cb6a41920d9d3f92d78',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权说明',
            'type' => 'string',
            'required' => false,
            'example' => '根据地区名称查询天气情况',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveApisAuthoritiesResponse>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n</RemoveApisAuthoritiesResponse>","errorExample":""}]',
      'title' => '撤销应用APP对多个API访问权限',
      'summary' => '撤销指定应用（app）对多个API的访问权限。',
      'description' => '- 此功能面向API提供者和API使用者
- 撤销前请查看添加授权记录的授权者，API所有者只能撤销Provider的授权，API使用者只能撤销Consumer的授权',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveAppsAuthorities' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API分组ID，系统生成，全局唯一',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '523e8dc7bbe04613b5b1d726c2a7889d',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API编号，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'baacc592e63a4cb6a41920d9d3f91f38',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，取值为

- **RELEASE**
- **TEST**',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的app编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2386789,3286798',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D6E46F10-F26C-4AA0-BB69-FE2743D9AE62',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D6E46F10-F26C-4AA0-BB69-FE2743D9AE62\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveAppsAuthoritiesResponse>\\r\\n    <RequestId>D6E46F10-F26C-4AA0-BB69-FE2743D9AE62</RequestId>\\r\\n</RemoveAppsAuthoritiesResponse>","errorExample":""}]',
      'title' => '撤销多个APP对指定API的访问权限',
      'summary' => '撤销多个APP对指定API的访问权限，多个APP一个API。',
      'description' => '- 此功能面向API提供者和API使用者
- 撤销前请查看添加授权记录的授权者，API所有者只能撤销Provider的授权，API使用者只能撤销Consumer的授权',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResetAppSecret' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的Key，用于调用API时使用',
            'type' => 'string',
            'required' => true,
            'example' => '60030986',
          ),
        ),
        1 => 
        array (
          'name' => 'NewAppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置的新的AppKey，需要全局唯一',
            'type' => 'string',
            'required' => false,
            'example' => 'testAppKey',
          ),
        ),
        2 => 
        array (
          'name' => 'NewAppSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的应用密钥。为提高兼容性，建议您尽量使用其他参数。
该参数不填，默认系统会自动生成一个新的AppSecret值',
            'type' => 'string',
            'required' => false,
            'example' => 'test***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\"\\n}","errorExample":""},{"type":"xml","example":"<ResetAppSecretResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ015</RequestId>\\r\\n</ResetAppSecretResponse>","errorExample":""}]',
      'title' => '重置 app 密钥',
      'summary' => '重置指定app的密钥。',
      'description' => '- 此功能面向调用API的用户
- 可以通过该接口重置AppKey和AppSecret
- NewAppSecret不填写，系统默认会自动生成一个新的AppSecret
- 该接口不直接返回密码，需要通过查询密码的接口获取
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型定义。

目前分组，插件，应用接入了标签，API相关操作基于分组的标签：
- **apiGroup**
- **plugin**
- **app**
- **api**',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apiGroup',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一个查询开始Token',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '1d2db86sca4384811e0b5e8707e68181f',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。

N的取值范围为：`[1, 50]`',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '285bb759342649a1b70c2093a772e087',
            'maxItems' => 10000,
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

N的取值范围为：`[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。当参数有值，要求对应的**tag.N.Key**在相同的N的标签键也传入值，否则会报错。

N的取值范围为：`[1, 20]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'product',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '下一个查询开始的Token。

NextToken为**-1**表示没有下一个。',
                'type' => 'string',
                'example' => '1d2db86sca4384811e0b5e8707e68181f',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '2D69A58F-345C-4FDE-88E4-BF5189484043',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '资源列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值',
                          'type' => 'string',
                          'example' => 'zhangsan',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '资源类型',
                          'type' => 'string',
                          'example' => 'apiGroup',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID',
                          'type' => 'string',
                          'example' => '285bb759342649a1b70c2093a772e087',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键',
                          'type' => 'string',
                          'example' => 'owner',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"1d2db86sca4384811e0b5e8707e68181f\\",\\n  \\"RequestId\\": \\"2D69A58F-345C-4FDE-88E4-BF5189484043\\",\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"TagValue\\": \\"zhangsan\\",\\n        \\"ResourceType\\": \\"apiGroup\\",\\n        \\"ResourceId\\": \\"285bb759342649a1b70c2093a772e087\\",\\n        \\"TagKey\\": \\"owner\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTagResourcesResponse>\\r\\n    <RequestId>2D69A58F-345C-4FDE-88E4-BF5189484043</RequestId>\\r\\n    <NextToken>1d2db86sca4384811e0b5e8707e68181f</NextToken>\\r\\n    <TagResources>\\r\\n        <TagResource>\\r\\n            <ResourceId>285bb759342649a1b70c2093a772e087</ResourceId>\\r\\n            <ResourceType>apiGroup</ResourceType>\\r\\n            <TagKey>env</TagKey>\\r\\n            <TagValue>product</TagValue>\\r\\n        </TagResource>\\r\\n        <TagResource>\\r\\n            <ResourceId>285bb759342649a1b70c2093a772e087</ResourceId>\\r\\n            <ResourceType>apiGroup</ResourceType>\\r\\n            <TagKey>owner</TagKey>\\r\\n            <TagValue>zhangsan</TagValue>\\r\\n        </TagResource>\\r\\n    </TagResources>\\r\\n</ListTagResourcesResponse>","errorExample":""}]',
      'title' => '用户查询标签接口',
      'summary' => '查询可见的资源标签关系。',
      'description' => '- 对于Tag.N.Key及Tag.N.Value中相同的N是一对键值对。
- ResourceId.N需满足所有输入的键值对。当输入多个键值对，查询结果为资源中包含指定多个键值对的资源。
- 查询返回符合条件的标签资源关系，当过滤后没有匹配的资源标签关系则返回空列表。
- 用户同时查询用户标签跟可见系统标签。
- 除必填参数传入外，传入ResourceId.N，查询某个region的指定资源的可见资源标签关系。
- 除必填参数传入外，传入Tag.N.Key，查询某个region的指定Key下的可见资源标签关系。
- ResourceId.N 及 (Tag.N.Key,Tag.N.Value) 至少存在一个。
- 单次操作，标签可以为相同类型的，也可以不同类型。
- 用户对于用户标签全部的查询权限，用户有查询可见系统标签的权限。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型定义，目前分组，插件，应用接入了标签，API相关操作基于分组的标签：
- **apiGroup**
- **plugin**
- **app**
- **api**',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apiGroup',
          ),
        ),
        1 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签值。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

n 的取值范围为 `[1, 20]`',
                  'type' => 'string',
                  'required' => true,
                  'example' => '\' \'',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'example' => '2021022811',
            'maxItems' => 10000,
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。

n的取值范围为`[1, 50]`',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => '285bb759342649a1b70c2093a772e087',
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\"\\n}","errorExample":""},{"type":"xml","example":"<TagResourcesResponse>\\r\\n   <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</TagResourcesResponse>","errorExample":""}]',
      'title' => '创建标签资源关系（用户标签）',
      'summary' => '创建标签资源关系（用户标签）。',
      'description' => '- 所有的Tag应用于所有的ResoureId的列表，即ResourceId.N是作用于所有的键值对。
- 对于Tag.N.Key及Tag.N.Value中相同的N是一对键值对。
- 批量标记资源，接口同成功同失败。
- 除必填参数，传入Tag.1.Value，则入参必须有Tag.1.Key，否则报InvalidParameter.TagKey。也就是指定某个Tag.N.Value对应N的Key必须存在，但是可以为空字符串。
- 当传入资源及Tag key，如果自定义Tag已经存在则覆盖之前的Tag value。',
    ),
    'UntagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型定义，目前分组，插件，应用接入了标签，API相关操作基于分组的标签：
- **apiGroup**
- **plugin**
- **app**',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apiGroup',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否全部删除。只针对**TagKey.N**为空时有效。取值范围：
- **true**
- **false**：默认值',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。

n的取值范围为`[1, 50]`',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '285bb759342649a1b70c2093a772e087',
            'maxItems' => 10000,
          ),
        ),
        3 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键。

n 的取值范围为 `[1, 20]`',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'env',
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<UntagResourcesResponse>\\r\\n   <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</UntagResourcesResponse>","errorExample":""}]',
      'title' => '删除用户标签和资源的关系',
      'summary' => '删除用户标签和资源的关系。',
      'description' => '- 批量取消标记资源，接口同成功同失败。
- 当传入ResourceId列表，没有传入TagKeys，同时All = true时，删除资源下所有资源标签关系。存在没有标签的资源，则不处理同时返回成功。
- 当传入的ResourceId列表，没有传入TagKeys，同时All = false时，不处理接口返回成功。
- 当TagKeys有值的时候，All是true/false都没有关系，这个字段无效。
- 当传入多个资源及多个键值时，删除资源中存在的指定标签，资源中不存在的标签不处理。',
    ),
    'DescribeSummaryData' => 
    array (
      'summary' => '查看API网关在指定region下的资源数量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'UsageGroupNum' => 
              array (
                'description' => 'API分组的数量',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'UsageInstanceNum' => 
              array (
                'description' => '运行中的专享实例数量',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'UsageApiNum' => 
              array (
                'description' => 'API的数量',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Region' => 
              array (
                'description' => '地区',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'ExpireInstanceNum' => 
              array (
                'description' => '14天内将要过期的预付费专享实例的数量',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"UsageGroupNum\\": 1,\\n  \\"UsageInstanceNum\\": 1,\\n  \\"UsageApiNum\\": 10,\\n  \\"Region\\": \\"cn-hangzhou\\",\\n  \\"ExpireInstanceNum\\": 1\\n}","type":"json"}]',
      'title' => '获取摘要数据',
    ),
    'DescribeRegions' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中管控策略描述的语言。取值：

- zh-CN（默认值）：中文。
- en：英文。
- ja：日文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求编号',
                'type' => 'string',
                'example' => '36BBBAD4-1CFB-489F-841A-8CA52EEA787E',
              ),
              'Regions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Region' => 
                  array (
                    'description' => '由 Region 组成的数组格式，返回区域信息',
                    'example' => 'cn-huhehaote',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RegionEndpoint' => 
                        array (
                          'description' => '区域服务接入点',
                          'type' => 'string',
                          'example' => 'apigateway.cn-shenzhen.aliyuncs.com',
                        ),
                        'LocalName' => 
                        array (
                          'description' => '区域名称',
                          'type' => 'string',
                          'example' => '华南1（深圳）',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '区域ID',
                          'type' => 'string',
                          'example' => 'cn-shenzhen',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"36BBBAD4-1CFB-489F-841A-8CA52EEA787E\\",\\n  \\"Regions\\": {\\n    \\"Region\\": [\\n      {\\n        \\"RegionEndpoint\\": \\"apigateway.cn-shenzhen.aliyuncs.com\\",\\n        \\"LocalName\\": \\"华南1（深圳）\\",\\n        \\"RegionId\\": \\"cn-shenzhen\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\"code\\":500}"},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询支持的区域',
      'summary' => '查询可以使用的阿里云地域。',
      'description' => '查询支持的区域列表

* 此功能面向开放API和调用API的用户',
    ),
    'DescribeSystemParameters' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '0CCDF65E-6050-412D-AD68-FA3D9196836C',
              ),
              'SystemParams' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemParamItem' => 
                  array (
                    'description' => '由 SystemParam 组成的数组格式，返回系统参数信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoValue' => 
                        array (
                          'description' => '示例',
                          'type' => 'string',
                          'example' => '192.168.1.1',
                        ),
                        'Description' => 
                        array (
                          'description' => '参数描述',
                          'type' => 'string',
                          'example' => '客户端IP',
                        ),
                        'ParamName' => 
                        array (
                          'description' => '参数名称',
                          'type' => 'string',
                          'example' => 'CaClientIp',
                        ),
                        'ParamType' => 
                        array (
                          'description' => '参数类型',
                          'type' => 'string',
                          'example' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0CCDF65E-6050-412D-AD68-FA3D9196836C\\",\\n  \\"SystemParams\\": {\\n    \\"SystemParamItem\\": [\\n      {\\n        \\"DemoValue\\": \\"192.168.1.1\\",\\n        \\"Description\\": \\"客户端IP\\",\\n        \\"ParamName\\": \\"CaClientIp\\",\\n        \\"ParamType\\": \\"string\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSystemParametersResponse>\\r\\n    <RequestId>0CCDF65E-6050-412D-AD68-FA3D9196836C</RequestId>\\r\\n    <SystemParameters>\\r\\n        <SystemParameter>\\r\\n            <Description>客户端IP</Description>\\r\\n            <DemoValue>192.168.1.1</DemoValue>\\r\\n            <ParamName>CaClientIp</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n        <SystemParameter>\\r\\n            <Description>请求域名</Description>\\r\\n            <DemoValue>api.aliyun.com</DemoValue>\\r\\n            <ParamName>CaDomain</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n        <SystemParameter>\\r\\n            <Description>请求时间（格林威治时间）</Description>\\r\\n            <DemoValue>2016-01-30T03:53:16Z</DemoValue>\\r\\n            <ParamName>CaRequestHandleTime</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n        <SystemParameter>\\r\\n            <Description>ConsumerAppId</Description>\\r\\n            <DemoValue>123456</DemoValue>\\r\\n            <ParamName>CaAppId</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n        <SystemParameter>\\r\\n            <Description>RequestId</Description>\\r\\n            <DemoValue>7157EBD9-4684-4827-B3B0-9B32D186819B</DemoValue>\\r\\n            <ParamName>CaRequestId</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n        <SystemParameter>\\r\\n            <Description>Http Schema</Description>\\r\\n            <DemoValue>https</DemoValue>\\r\\n            <ParamName>CaHttpSchema</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n        <SystemParameter>\\r\\n            <Description>代理</Description>\\r\\n            <DemoValue>AliCloudApiGateway</DemoValue>\\r\\n            <ParamName>CaProxy</ParamName>\\r\\n            <ParamType>string</ParamType>\\r\\n        </SystemParameter>\\r\\n    </SystemParameters>\\r\\n</DescribeSystemParametersResponse>","errorExample":""}]',
      'title' => '查询系统参数列表',
      'summary' => '查询系统支持的公共参数。',
      'description' => '- 此功能面向开放API的用户
- 此接口返回定义API时可选择接收的系统参数列表
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeZones' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言类型。系统权限策略的描述将以此语言返回。

- en：英文。
- zh-CN：中文。
- ja：日文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '9324B68F-9863-5722-A0FD-0798E2B02A0E',
              ),
              'Zones' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Zone' => 
                  array (
                    'description' => '当前地域支持的可用区列表',
                    'example' => '{\'Zone\': [{\'ZoneId\': \'cn-hangzhou-i\'}]}',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ZoneId' => 
                        array (
                          'description' => '可用区ID',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-MAZ2(j,g)',
                        ),
                        'LocalName' => 
                        array (
                          'description' => '本地名称',
                          'type' => 'string',
                          'example' => '华东1（杭州）多可用区 2(j,g)',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9324B68F-9863-5722-A0FD-0798E2B02A0E\\",\\n  \\"Zones\\": {\\n    \\"Zone\\": [\\n      {\\n        \\"ZoneId\\": \\"cn-hangzhou-MAZ2(j,g)\\",\\n        \\"LocalName\\": \\"华东1（杭州）多可用区 2(j,g)\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询地域的可用区列表',
      'summary' => '查询指定地域中可用区的列表。',
    ),
    'OpenApiGatewayService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'APP' => 
          array (
          ),
        ),
        2 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
        3 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OrderId' => 
              array (
                'description' => '开通服务的订单号。',
                'type' => 'string',
                'example' => '210981***530495',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2D39D1B3-8548-508A-9CE2-7F4A3F2A7989',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OrderId\\": \\"210981***530495\\",\\n  \\"RequestId\\": \\"2D39D1B3-8548-508A-9CE2-7F4A3F2A7989\\"\\n}","type":"json"}]',
      'title' => '开通服务',
      'summary' => '开通网关服务。',
    ),
    'CreateLogConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SlsProject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务中日志项目的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'rec-lq-sls',
          ),
        ),
        1 => 
        array (
          'name' => 'SlsLogStore',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'slslogstore',
            'type' => 'string',
            'required' => true,
            'example' => 'api-gateway',
          ),
        ),
        2 => 
        array (
          'name' => 'LogType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志类型',
            'type' => 'string',
            'required' => false,
            'example' => 'PROVIDER',
            'default' => 'PROVIDER',
            'enum' => 
            array (
              0 => 'PROVIDER',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","type":"json"}]',
      'title' => '创建日志配置',
      'summary' => '为API创建日志服务的配置。',
    ),
    'DeleteLogConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志类型，可选值：-**log**：日志-**survey**：质检日志',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'log',
            'default' => 'PROVIDER',
            'enum' => 
            array (
              0 => 'PROVIDER',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ016',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ016\\"\\n}","type":"json"}]',
      'title' => '删除日志配置',
      'summary' => '删除指定的日志配置。',
    ),
    'ModifyLogConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SlsProject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'sls的项目名称',
            'type' => 'string',
            'required' => true,
            'example' => 'ford-api-gateway-log',
          ),
        ),
        1 => 
        array (
          'name' => 'SlsLogStore',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务日志存储名。',
            'type' => 'string',
            'required' => true,
            'example' => 'logs-gateway',
          ),
        ),
        2 => 
        array (
          'name' => 'LogType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志类型，可选值：

- **log**：日志
- **survey**：质检日志',
            'type' => 'string',
            'required' => false,
            'example' => 'PROVIDER',
            'default' => 'PROVIDER',
            'enum' => 
            array (
              0 => 'PROVIDER',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '75A4ADCB-AA26-51FB-94D4-AB3240040974',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"75A4ADCB-AA26-51FB-94D4-AB3240040974\\"\\n}","type":"json"}]',
      'title' => '修改日志配置',
    ),
    'QueryRequestLogs' => 
    array (
      'summary' => '查询用户的操作日志记录。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求requestId',
            'type' => 'string',
            'required' => true,
            'example' => '95657ED9-2F6F-426F-BD99-79C8********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回内容',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C81********',
              ),
              'RequestLogs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RequestLog' => 
                  array (
                    'description' => '请求日志集合',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '请求日志',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => '4b83229ebcab4ecd88956fb3********',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'ApiName',
                        ),
                        'ConsumerAppKey' => 
                        array (
                          'description' => '调用方的App Key',
                          'type' => 'string',
                          'example' => '20412****',
                        ),
                        'TotalLatency' => 
                        array (
                          'description' => '总耗时，单位：ms',
                          'type' => 'string',
                          'example' => '1345',
                        ),
                        'HttpMethod' => 
                        array (
                          'description' => '请求使用的HTTP方法',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                        'Domain' => 
                        array (
                          'description' => '请求的域名',
                          'type' => 'string',
                          'example' => '360bdd88695c48ae8085c7f2********-ap-southeast-1.alicloudapi.com',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '调用失败时，返回的出错信息。',
                          'type' => 'string',
                          'example' => 'Backend service connect failed `Timeout connecting to [/1XX.20.0.XX:8080]`',
                        ),
                        'ConsumerAppId' => 
                        array (
                          'description' => '调用者应用ID',
                          'type' => 'string',
                          'example' => '11096****',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'API服务所在的网关实例ID',
                          'type' => 'string',
                          'example' => 'apigateway-bj-ab2b********',
                        ),
                        'ClientNonce' => 
                        array (
                          'description' => '客户端X-Ca-Nonce头',
                          'type' => 'string',
                          'example' => 'd43df9db-3b05-4cd6-888a-1c0b********',
                        ),
                        'RequestSize' => 
                        array (
                          'description' => '请求大小，单位：字节',
                          'type' => 'string',
                          'example' => '1923',
                        ),
                        'StageId' => 
                        array (
                          'description' => 'API环境ID',
                          'type' => 'string',
                          'example' => '8a305b7f10334052a52d9156********',
                        ),
                        'StageName' => 
                        array (
                          'description' => 'API环境名称',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'HttpPath' => 
                        array (
                          'description' => '请求的PATH',
                          'type' => 'string',
                          'example' => '/testPath',
                        ),
                        'RequestId' => 
                        array (
                          'description' => '请求ID',
                          'type' => 'string',
                          'example' => '95657ED9-2F6F-426F-BD99-79C8********',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API的分组ID',
                          'type' => 'string',
                          'example' => 'dc024277fe6c4cada79ba0bd6********',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'GroupName',
                        ),
                        'ErrorCode' => 
                        array (
                          'description' => '错误码',
                          'type' => 'string',
                          'example' => 'X500ER',
                        ),
                        'ResponseSize' => 
                        array (
                          'description' => '返回数据大小，单位：字节',
                          'type' => 'string',
                          'example' => '23441',
                        ),
                        'Region' => 
                        array (
                          'description' => '区域',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'StatusCode' => 
                        array (
                          'description' => '请求状态码',
                          'type' => 'string',
                          'example' => '200',
                        ),
                        'ClientIp' => 
                        array (
                          'description' => '调用者客户端IP',
                          'type' => 'string',
                          'example' => '21.237.XXX.XXX',
                        ),
                        'ServiceLatency' => 
                        array (
                          'description' => '访问后端资源耗时总和，包括申请连接资源耗时，建立连接耗时，调用后端服务耗时，单位：毫秒',
                          'type' => 'string',
                          'example' => '324',
                        ),
                        'RequestTime' => 
                        array (
                          'description' => '请求时间，UTC',
                          'type' => 'string',
                          'example' => '2022-10-29T03:59:59Z',
                        ),
                        'Exception' => 
                        array (
                          'description' => '后端返回的具体错信息',
                          'type' => 'string',
                          'example' => 'error msg',
                        ),
                        'CustomTraceId' => 
                        array (
                          'description' => '自定义API调用链id',
                          'type' => 'string',
                          'example' => '95657ED9-2F6F-426F-BD99-79C8********',
                        ),
                        'JwtClaims' => 
                        array (
                          'description' => '从JWT中解析出来的Claim，可以在分组上配置',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'RequestProtocol' => 
                        array (
                          'description' => '客户端请求协议：HTTP/HTTPS/WS',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'RequestHeaders' => 
                        array (
                          'description' => '客户端请求的header内容',
                          'type' => 'string',
                          'example' => 'content-type: application/x-www-form-urlencoded',
                        ),
                        'RequestQueryString' => 
                        array (
                          'description' => '客户端请求的queryString',
                          'type' => 'string',
                          'example' => 'username=name',
                        ),
                        'RequestBody' => 
                        array (
                          'description' => '客户端请求的body内容，最多1024个字节',
                          'type' => 'string',
                          'example' => 'param=paramName',
                        ),
                        'ResponseHeaders' => 
                        array (
                          'description' => 'API响应的header内容',
                          'type' => 'string',
                          'example' => 'content-type: application/x-www-form-urlencoded
',
                        ),
                        'ResponseBody' => 
                        array (
                          'description' => 'API响应的response内容，最多1024个字节',
                          'type' => 'string',
                          'example' => 'param=paramName
',
                        ),
                        'plugin' => 
                        array (
                          'description' => 'API请求命中的插件列表及相关上下文',
                          'type' => 'string',
                          'example' => '[]',
                        ),
                        'InitialRequestId' => 
                        array (
                          'description' => 'API网关自调用时，例如API-1调用API-2 ，那么API-2的日志中会用initialRequestId来记录API-1的requestid',
                          'type' => 'string',
                          'example' => '95657ED9-2F6F-426F-BD99-79C8********',
                        ),
                        'AppName' => 
                        array (
                          'description' => 'APP名称',
                          'type' => 'string',
                          'example' => 'VIPROOM_VIPROOM',
                        ),
                        'FrontRequestStart' => 
                        array (
                          'description' => 'API网关开始接收到客户端请求的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'FrontRequestEnd' => 
                        array (
                          'description' => 'API网关完成接收客户端请求的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'BackendRequestStart' => 
                        array (
                          'description' => 'API网关开始向后端服务发起请求的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'BackendRequestEnd' => 
                        array (
                          'description' => 'API网关完成向后端服务发起请求的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'BackendResponseStart' => 
                        array (
                          'description' => 'API网关开始接收到后端服务响应的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'BackendResponseEnd' => 
                        array (
                          'description' => 'API网关完成接收后端服务响应的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'FrontResponseStart' => 
                        array (
                          'description' => 'API网关开始向客户端发送响应的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                        'FrontResponseEnd' => 
                        array (
                          'description' => 'API网关完成向客户端发送响应的时间点',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C81********\\",\\n  \\"RequestLogs\\": {\\n    \\"RequestLog\\": [\\n      {\\n        \\"ApiId\\": \\"4b83229ebcab4ecd88956fb3********\\",\\n        \\"ApiName\\": \\"ApiName\\",\\n        \\"ConsumerAppKey\\": \\"20412****\\",\\n        \\"TotalLatency\\": \\"1345\\",\\n        \\"HttpMethod\\": \\"POST\\",\\n        \\"Domain\\": \\"360bdd88695c48ae8085c7f2********-ap-southeast-1.alicloudapi.com\\",\\n        \\"ErrorMessage\\": \\"Backend service connect failed `Timeout connecting to [/1XX.20.0.XX:8080]`\\",\\n        \\"ConsumerAppId\\": \\"11096****\\",\\n        \\"InstanceId\\": \\"apigateway-bj-ab2b********\\",\\n        \\"ClientNonce\\": \\"d43df9db-3b05-4cd6-888a-1c0b********\\",\\n        \\"RequestSize\\": \\"1923\\",\\n        \\"StageId\\": \\"8a305b7f10334052a52d9156********\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"HttpPath\\": \\"/testPath\\",\\n        \\"RequestId\\": \\"95657ED9-2F6F-426F-BD99-79C8********\\",\\n        \\"GroupId\\": \\"dc024277fe6c4cada79ba0bd6********\\",\\n        \\"GroupName\\": \\"GroupName\\",\\n        \\"ErrorCode\\": \\"X500ER\\",\\n        \\"ResponseSize\\": \\"23441\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"StatusCode\\": \\"200\\",\\n        \\"ClientIp\\": \\"21.237.XXX.XXX\\",\\n        \\"ServiceLatency\\": \\"324\\",\\n        \\"RequestTime\\": \\"2022-10-29T03:59:59Z\\",\\n        \\"Exception\\": \\"error msg\\",\\n        \\"CustomTraceId\\": \\"95657ED9-2F6F-426F-BD99-79C8********\\",\\n        \\"JwtClaims\\": \\"{}\\",\\n        \\"RequestProtocol\\": \\"HTTP\\",\\n        \\"RequestHeaders\\": \\"content-type: application/x-www-form-urlencoded\\",\\n        \\"RequestQueryString\\": \\"username=name\\",\\n        \\"RequestBody\\": \\"param=paramName\\",\\n        \\"ResponseHeaders\\": \\"content-type: application/x-www-form-urlencoded\\\\n\\",\\n        \\"ResponseBody\\": \\"param=paramName\\\\n\\",\\n        \\"plugin\\": \\"[]\\",\\n        \\"InitialRequestId\\": \\"95657ED9-2F6F-426F-BD99-79C8********\\",\\n        \\"AppName\\": \\"VIPROOM_VIPROOM\\",\\n        \\"FrontRequestStart\\": 0,\\n        \\"FrontRequestEnd\\": 0,\\n        \\"BackendRequestStart\\": 0,\\n        \\"BackendRequestEnd\\": 0,\\n        \\"BackendResponseStart\\": 0,\\n        \\"BackendResponseEnd\\": 0,\\n        \\"FrontResponseStart\\": 0,\\n        \\"FrontResponseEnd\\": 0\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取请求日志',
    ),
    'DescribeLogConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志类型',
            'type' => 'string',
            'required' => false,
            'example' => 'PROVIDER',
            'default' => 'PROVIDER',
            'enum' => 
            array (
              0 => 'PROVIDER',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'E3BC2706-ABDB-5B64-A12F-08DFD9E3F339',
              ),
              'LogInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'LogInfo' => 
                  array (
                    'description' => '日志信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SlsLogStore' => 
                        array (
                          'description' => 'SLS 的 log store 值。',
                          'type' => 'string',
                          'example' => 'slsstore',
                        ),
                        'LogType' => 
                        array (
                          'description' => '日志类型',
                          'type' => 'string',
                          'example' => 'PROVIDER',
                        ),
                        'SlsProject' => 
                        array (
                          'description' => 'SLS 项目',
                          'type' => 'string',
                          'example' => 'slsproject',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '日志服务的区域ID',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E3BC2706-ABDB-5B64-A12F-08DFD9E3F339\\",\\n  \\"LogInfos\\": {\\n    \\"LogInfo\\": [\\n      {\\n        \\"SlsLogStore\\": \\"slsstore\\",\\n        \\"LogType\\": \\"PROVIDER\\",\\n        \\"SlsProject\\": \\"slsproject\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取日志配置',
    ),
    'SdkGenerateByAppForRegion' => 
    array (
      'summary' => '生成与App关联的API的SDK',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App编号，系统生成，全局唯一',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '110906109',
          ),
        ),
        1 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要生成的编程语言',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Java',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DownloadLink' => 
              array (
                'description' => 'SDK的base64后的编码，通过base64解码可以得到文件',
                'type' => 'string',
                'example' => 'UEsDBBQACAAIADdwnFQAAAAAAAAAAAAAAAA2AAAAQ0FTREtfSkFWQV8xMjI3NDY2NjY0MzM0MTMzXzE2NTExMjU3MD......',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DownloadLink\\": \\"UEsDBBQACAAIADdwnFQAAAAAAAAAAAAAAAA2AAAAQ0FTREtfSkFWQV8xMjI3NDY2NjY0MzM0MTMzXzE2NTExMjU3MD......\\",\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\"\\n}","type":"json"}]',
      'title' => '按应用生成SDK',
    ),
    'SdkGenerateByApp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的唯一编号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '110797019',
          ),
        ),
        1 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要生成的编程语言',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'java',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DownloadLink' => 
              array (
                'description' => 'SDK的base64后的编码，通过base64解码可以得到文件',
                'type' => 'string',
                'example' => 'UEsDBBQACAAIADdwnFQAAAAAAAAAAAAAAAA2AAAAQ0FTREtfSkFWQV8xMjI3NDY2NjY0MzM0MTMzXzE2NTExMjU3MD......',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '61A16D46-EC04-5288-8A18-811B0F536CC2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DownloadLink\\": \\"UEsDBBQACAAIADdwnFQAAAAAAAAAAAAAAAA2AAAAQ0FTREtfSkFWQV8xMjI3NDY2NjY0MzM0MTMzXzE2NTExMjU3MD......\\",\\n  \\"RequestId\\": \\"61A16D46-EC04-5288-8A18-811B0F536CC2\\"\\n}","type":"json"}]',
      'title' => '按应用生成SDK',
      'summary' => '按APP应用生成SDK。',
    ),
    'SdkGenerateByGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'api分组id，系统生成，全局唯一',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1a991a450b9548a1a3df38fd3af117c2',
          ),
        ),
        1 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回的语言，取值：-**zh-cn**（默认值）：中文-**en-us**：英文',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'java',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DownloadLink' => 
              array (
                'description' => '下载地址',
                'type' => 'string',
                'example' => 'http://oss-bucket/object',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'D0075BDA-8AED-5073-A70A-FE44E86AB20F',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DownloadLink\\": \\"http://oss-bucket/object\\",\\n  \\"RequestId\\": \\"D0075BDA-8AED-5073-A70A-FE44E86AB20F\\"\\n}","type":"json"}]',
      'title' => '按分组生成SDK',
      'summary' => '按API分组生成SDK。',
    ),
    'CreateBackend' => 
    array (
      'summary' => '在API网关创建后端服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testBackendService',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务类型，可选值有`HTTP，VPC，FC_EVENT，FC_HTTP，OSS，MOCK`',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HTTP',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'HTTP后端',
          ),
        ),
        3 => 
        array (
          'name' => 'CreateEventBridgeServiceLinkedRole',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否服务关联角色',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'CreateSlr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建服务关联角色',
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'description' => '标签的值',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BackendId' => 
              array (
                'description' => '后端服务ID',
                'type' => 'string',
                'example' => '0d105f80a8f340408bd34954d4e4ff22',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '66D84355-164D-53ED-81FF-03DCF181DE24',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"BackendId\\": \\"0d105f80a8f340408bd34954d4e4ff22\\",\\n  \\"RequestId\\": \\"66D84355-164D-53ED-81FF-03DCF181DE24\\"\\n}","type":"json"}]',
      'title' => '创建后端服务',
    ),
    'DeleteBackend' => 
    array (
      'summary' => '删除后端服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '27be0dd9ebbc467b9e86c0d250d0b92e',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'AD00F8C0-311B-54A9-ADE2-2436771012DA',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AD00F8C0-311B-54A9-ADE2-2436771012DA\\"\\n}","type":"json"}]',
      'title' => '删除后端服务',
    ),
    'ModifyBackend' => 
    array (
      'summary' => '修改后端服务的基本信息如名称，描述，后端服务类型一经创建无法修改。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testHttpModify',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '20bcdc9453524b78a8beb1f6de21edb7',
          ),
        ),
        2 => 
        array (
          'name' => 'BackendType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务类型',
            'type' => 'string',
            'required' => true,
            'example' => 'HTTP',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '06DACA61-9359-5EC6-AEDA-C73E620E49A9',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"06DACA61-9359-5EC6-AEDA-C73E620E49A9\\"\\n}","type":"json"}]',
      'title' => '修改后端服务',
    ),
    'DescribeBackendList' => 
    array (
      'summary' => '查询后端服务列表，可以根据后端服务名称和后端服务类型进行过滤。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务名称，支持使用*进行模糊查询。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务类型',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'HTTP',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数：每页显示条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test1',
                ),
                'Value' => 
                array (
                  'description' => '标签的值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '分页参数：当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '090A0DF9-9144-5236-8CBA-E18DE317722D',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'BackendInfoList' => 
              array (
                'description' => '后端服务列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'BackendName' => 
                    array (
                      'description' => '后端服务名称',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'BackendType' => 
                    array (
                      'description' => '后端服务类型',
                      'type' => 'string',
                      'example' => 'HTTP',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '后端服务修改时间',
                      'type' => 'string',
                      'example' => '2022-01-25T11:22:29Z',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述信息',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'CreatedTime' => 
                    array (
                      'description' => '后端服务创建时间',
                      'type' => 'string',
                      'example' => '2022-01-25T11:22:29Z',
                    ),
                    'BackendId' => 
                    array (
                      'description' => '后端服务id',
                      'type' => 'string',
                      'example' => '35bd31d32c9c425ebbe9330db9f8c375',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签的key',
                            'type' => 'string',
                            'example' => 'groupName',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签的值。',
                            'type' => 'string',
                            'example' => 'e3b881d0-e2d0-4dfb-b1fb-a2a3d1e534b7',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"090A0DF9-9144-5236-8CBA-E18DE317722D\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"BackendInfoList\\": [\\n    {\\n      \\"BackendName\\": \\"test\\",\\n      \\"BackendType\\": \\"HTTP\\",\\n      \\"ModifiedTime\\": \\"2022-01-25T11:22:29Z\\",\\n      \\"Description\\": \\"test\\",\\n      \\"CreatedTime\\": \\"2022-01-25T11:22:29Z\\",\\n      \\"BackendId\\": \\"35bd31d32c9c425ebbe9330db9f8c375\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"groupName\\",\\n          \\"Value\\": \\"e3b881d0-e2d0-4dfb-b1fb-a2a3d1e534b7\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询后端服务列表',
    ),
    'DescribeBackendInfo' => 
    array (
      'summary' => '查询后端服务的信息以及在各个环境上配置的后端地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '739b68751c0b4e899e04d0c92b6d0be7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '0AA90E87-3506-5AA6-AFFB-A4D53B4F6231',
              ),
              'BackendInfo' => 
              array (
                'description' => '后端服务信息',
                'type' => 'object',
                'properties' => 
                array (
                  'BackendName' => 
                  array (
                    'description' => '后端服务名称',
                    'type' => 'string',
                    'example' => 'testoss2',
                  ),
                  'BackendType' => 
                  array (
                    'description' => '后端服务类型',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '后端服务修改时间',
                    'type' => 'string',
                    'example' => '2017-12-11T15:18:09+08:00',
                  ),
                  'Description' => 
                  array (
                    'description' => '描述信息',
                    'type' => 'string',
                    'example' => 'add',
                  ),
                  'CreatedTime' => 
                  array (
                    'description' => '后端服务创建时间',
                    'type' => 'string',
                    'example' => '2021-11-22T11:10:46+08:00',
                  ),
                  'BackendId' => 
                  array (
                    'description' => '后端服务ID',
                    'type' => 'string',
                    'example' => '6fc978bb63574146b766863dd7bdf661',
                  ),
                  'BackendModels' => 
                  array (
                    'description' => '后端服务在环境上的配置信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '后端服务在环境上的配置信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BackendModelId' => 
                        array (
                          'description' => '后端服务在环境上的配置ID',
                          'type' => 'string',
                          'example' => '5c4995d08e8b4954b0f326e8e4f2b97d',
                        ),
                        'StageModeId' => 
                        array (
                          'description' => '环境ID',
                          'type' => 'string',
                          'example' => '6fc978bb63574146b766863dd7bdf661',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'testDvs 1',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'string',
                          'example' => '2021-12-20T03:22:03.000+0000',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间',
                          'type' => 'string',
                          'example' => '2021-12-20T03:22:03.000+0000',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'BackendConfig' => 
                        array (
                          'description' => '后端配置',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ServiceAddress' => 
                            array (
                              'description' => '后端服务地址',
                              'type' => 'string',
                              'example' => '10.0.0.1',
                            ),
                            'HttpTargetHostName' => 
                            array (
                              'type' => 'string',
                            ),
                            'Type' => 
                            array (
                              'description' => '后端服务类型。',
                              'type' => 'string',
                              'example' => 'VPC',
                            ),
                            'VpcConfig' => 
                            array (
                              'description' => '后端为VPC的信息',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'VpcId' => 
                                array (
                                  'description' => '专用网络ID',
                                  'type' => 'string',
                                  'example' => 'vpc-wz9v96hqi6d14744sxqmx',
                                ),
                                'InstanceId' => 
                                array (
                                  'description' => '专用网络中的实例ID（ECS/SLB）',
                                  'type' => 'string',
                                  'example' => 'i-uf6iaale3gfef9t9cb41',
                                ),
                                'Port' => 
                                array (
                                  'description' => '实例对应的端口号',
                                  'type' => 'integer',
                                  'format' => 'int64',
                                  'example' => '8080',
                                ),
                                'VpcAccessId' => 
                                array (
                                  'description' => 'vpc授权ID',
                                  'type' => 'string',
                                  'example' => '2zej3ehuzg9m77kvwnfpn',
                                ),
                                'Name' => 
                                array (
                                  'description' => 'VPC 配置名称',
                                  'type' => 'string',
                                  'example' => 'dypls-cn-beijing-slb-pre',
                                ),
                                'VpcScheme' => 
                                array (
                                  'description' => 'http/https协议',
                                  'type' => 'string',
                                  'example' => 'http',
                                ),
                                'VpcTargetHostName' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                            'FunctionComputeConfig' => 
                            array (
                              'description' => '后端为函数计算的信息',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'FcType' => 
                                array (
                                  'description' => '函数计算服务类型',
                                  'type' => 'string',
                                  'example' => 'HttpTrigger',
                                ),
                                'FcRegionId' => 
                                array (
                                  'description' => '函数计算服务的区域ID。',
                                  'type' => 'string',
                                  'example' => 'cn-hangzhou',
                                ),
                                'ServiceName' => 
                                array (
                                  'description' => '函数计算定义的ServiceName',
                                  'type' => 'string',
                                  'example' => 'myservice',
                                ),
                                'FunctionName' => 
                                array (
                                  'description' => '函数计算定义的FunctionName',
                                  'type' => 'string',
                                  'example' => 'edge_function',
                                ),
                                'RoleArn' => 
                                array (
                                  'description' => 'Ram授权给API网关访问函数计算的arn',
                                  'type' => 'string',
                                  'example' => 'acs:ram::31985*:role/aliyunserviceroleforbastionhostpam',
                                ),
                                'Qualifier' => 
                                array (
                                  'description' => '函数别名',
                                  'type' => 'string',
                                  'example' => 'testQualifier',
                                ),
                                'FcBaseUrl' => 
                                array (
                                  'description' => '函数计算服务根路径',
                                  'type' => 'string',
                                  'example' => 'https://t*******.ap-*****.fcapp.run/',
                                ),
                                'OnlyBusinessPath' => 
                                array (
                                  'description' => '后端只接收业务path',
                                  'type' => 'boolean',
                                  'example' => 'false',
                                ),
                              ),
                            ),
                            'OssConfig' => 
                            array (
                              'description' => '后端为OSS的信息',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'OssRegionId' => 
                                array (
                                  'description' => 'OSS 服务地域ID',
                                  'type' => 'string',
                                  'example' => 'cn-hangzhou',
                                ),
                                'BucketName' => 
                                array (
                                  'description' => 'OSS 桶名',
                                  'type' => 'string',
                                  'example' => 'my_bucket',
                                ),
                              ),
                            ),
                            'EventBridgeConfig' => 
                            array (
                              'description' => '后端为 EventBridge 的配置',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'EventBridgeRegionId' => 
                                array (
                                  'description' => '事件总线服务所在区域ID',
                                  'type' => 'string',
                                  'example' => 'cn-hangzhou',
                                ),
                                'EventSource' => 
                                array (
                                  'description' => '事件来源。
',
                                  'type' => 'string',
                                  'example' => 'dds_driver',
                                ),
                                'EventBus' => 
                                array (
                                  'description' => '事件总线',
                                  'type' => 'string',
                                  'example' => 'testBus',
                                ),
                                'RoleArn' => 
                                array (
                                  'description' => 'Ram授权给EventBridge的arn',
                                  'type' => 'string',
                                  'example' => 'acs:ram::1975133748561***:role/aliyunserviceroleforiotlogexport',
                                ),
                              ),
                            ),
                            'MockConfig' => 
                            array (
                              'description' => 'Mock配置信息',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'MockResult' => 
                                array (
                                  'description' => 'Mock返回结果',
                                  'type' => 'string',
                                ),
                                'MockStatusCode' => 
                                array (
                                  'description' => 'Mock返回状态码',
                                  'type' => 'string',
                                ),
                                'MockHeaders' => 
                                array (
                                  'description' => 'Mock返回的Header',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'HeaderName' => 
                                      array (
                                        'description' => 'Header参数名。',
                                        'type' => 'string',
                                      ),
                                      'HeaderValue' => 
                                      array (
                                        'description' => '参数对应的值。',
                                        'type' => 'string',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'DiscoveryConfig' => 
                            array (
                              'description' => '服务发现类型后端的配置信息',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'RcType' => 
                                array (
                                  'description' => '注册中心类型',
                                  'type' => 'string',
                                  'example' => 'NACOS',
                                ),
                                'NacosConfig' => 
                                array (
                                  'description' => 'Nacos配置信息',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'ServerAddress' => 
                                    array (
                                      'description' => 'Nacos服务地址',
                                      'type' => 'string',
                                      'example' => 'http://1xx.2xx.3xx.4xx:8848',
                                    ),
                                    'Namespace' => 
                                    array (
                                      'description' => '注册在Nacos上的微服务所在的命名空间ID',
                                      'type' => 'string',
                                      'example' => 'public',
                                    ),
                                    'GroupName' => 
                                    array (
                                      'description' => '注册在Nacos上的微服务所在的分组名称',
                                      'type' => 'string',
                                      'example' => 'DEFAULT_GROUP',
                                    ),
                                    'ServiceName' => 
                                    array (
                                      'description' => '微服务名称',
                                      'type' => 'string',
                                      'example' => 'service-provider',
                                    ),
                                    'Clusters' => 
                                    array (
                                      'description' => '微服务所在的集群名称',
                                      'type' => 'string',
                                      'example' => 'cluster1',
                                    ),
                                    'AuthType' => 
                                    array (
                                      'description' => '鉴权方式',
                                      'type' => 'string',
                                      'example' => 'PASSWORD',
                                    ),
                                    'UserName' => 
                                    array (
                                      'description' => '用户名',
                                      'type' => 'string',
                                      'example' => 'username',
                                    ),
                                    'Password' => 
                                    array (
                                      'description' => '密码',
                                      'type' => 'string',
                                      'example' => 'password',
                                    ),
                                    'AccessKey' => 
                                    array (
                                      'description' => '具有mse资源管理权限的子账号的accessKey',
                                      'type' => 'string',
                                      'example' => 'A5FIDxxxxxx',
                                    ),
                                    'SecretKey' => 
                                    array (
                                      'description' => '具有mse资源管理权限的子账号的secretKey',
                                      'type' => 'string',
                                      'example' => 'dl5loxxxxxx',
                                    ),
                                  ),
                                ),
                                'ZookeeperConfig' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'ConnectString' => 
                                    array (
                                      'type' => 'string',
                                    ),
                                    'Namespace' => 
                                    array (
                                      'type' => 'string',
                                    ),
                                    'ServiceName' => 
                                    array (
                                      'type' => 'string',
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ServiceTimeout' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int32',
                            ),
                            'EdasConfig' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'MicroserviceNamespaceName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'MicroserviceNamespaceId' => 
                                array (
                                  'type' => 'string',
                                ),
                                'MicroserviceNamespace' => 
                                array (
                                  'type' => 'string',
                                ),
                                'ServiceName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'EdasAppId' => 
                                array (
                                  'type' => 'string',
                                ),
                                'RegistryType' => 
                                array (
                                  'type' => 'string',
                                ),
                                'MseInstanceId' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0AA90E87-3506-5AA6-AFFB-A4D53B4F6231\\",\\n  \\"BackendInfo\\": {\\n    \\"BackendName\\": \\"testoss2\\",\\n    \\"BackendType\\": \\"HTTP\\",\\n    \\"ModifiedTime\\": \\"2017-12-11T15:18:09+08:00\\",\\n    \\"Description\\": \\"add\\",\\n    \\"CreatedTime\\": \\"2021-11-22T11:10:46+08:00\\",\\n    \\"BackendId\\": \\"6fc978bb63574146b766863dd7bdf661\\",\\n    \\"BackendModels\\": [\\n      {\\n        \\"BackendModelId\\": \\"5c4995d08e8b4954b0f326e8e4f2b97d\\",\\n        \\"StageModeId\\": \\"6fc978bb63574146b766863dd7bdf661\\",\\n        \\"Description\\": \\"testDvs 1\\",\\n        \\"GmtCreate\\": \\"2021-12-20T03:22:03.000+0000\\",\\n        \\"GmtModified\\": \\"2021-12-20T03:22:03.000+0000\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"BackendConfig\\": {\\n          \\"ServiceAddress\\": \\"10.0.0.1\\",\\n          \\"HttpTargetHostName\\": \\"\\",\\n          \\"Type\\": \\"VPC\\",\\n          \\"VpcConfig\\": {\\n            \\"VpcId\\": \\"vpc-wz9v96hqi6d14744sxqmx\\",\\n            \\"InstanceId\\": \\"i-uf6iaale3gfef9t9cb41\\",\\n            \\"Port\\": 8080,\\n            \\"VpcAccessId\\": \\"2zej3ehuzg9m77kvwnfpn\\",\\n            \\"Name\\": \\"dypls-cn-beijing-slb-pre\\",\\n            \\"VpcScheme\\": \\"http\\",\\n            \\"VpcTargetHostName\\": \\"\\"\\n          },\\n          \\"FunctionComputeConfig\\": {\\n            \\"FcType\\": \\"HttpTrigger\\",\\n            \\"FcRegionId\\": \\"cn-hangzhou\\",\\n            \\"ServiceName\\": \\"myservice\\",\\n            \\"FunctionName\\": \\"edge_function\\",\\n            \\"RoleArn\\": \\"acs:ram::31985*:role/aliyunserviceroleforbastionhostpam\\",\\n            \\"Qualifier\\": \\"testQualifier\\",\\n            \\"FcBaseUrl\\": \\"https://t*******.ap-*****.fcapp.run/\\",\\n            \\"OnlyBusinessPath\\": false\\n          },\\n          \\"OssConfig\\": {\\n            \\"OssRegionId\\": \\"cn-hangzhou\\",\\n            \\"BucketName\\": \\"my_bucket\\"\\n          },\\n          \\"EventBridgeConfig\\": {\\n            \\"EventBridgeRegionId\\": \\"cn-hangzhou\\",\\n            \\"EventSource\\": \\"dds_driver\\",\\n            \\"EventBus\\": \\"testBus\\",\\n            \\"RoleArn\\": \\"acs:ram::1975133748561***:role/aliyunserviceroleforiotlogexport\\"\\n          },\\n          \\"MockConfig\\": {\\n            \\"MockResult\\": \\"\\",\\n            \\"MockStatusCode\\": \\"\\",\\n            \\"MockHeaders\\": [\\n              {\\n                \\"HeaderName\\": \\"\\",\\n                \\"HeaderValue\\": \\"\\"\\n              }\\n            ]\\n          },\\n          \\"DiscoveryConfig\\": {\\n            \\"RcType\\": \\"NACOS\\",\\n            \\"NacosConfig\\": {\\n              \\"ServerAddress\\": \\"http://1xx.2xx.3xx.4xx:8848\\",\\n              \\"Namespace\\": \\"public\\",\\n              \\"GroupName\\": \\"DEFAULT_GROUP\\",\\n              \\"ServiceName\\": \\"service-provider\\",\\n              \\"Clusters\\": \\"cluster1\\",\\n              \\"AuthType\\": \\"PASSWORD\\",\\n              \\"UserName\\": \\"username\\",\\n              \\"Password\\": \\"password\\",\\n              \\"AccessKey\\": \\"A5FIDxxxxxx\\",\\n              \\"SecretKey\\": \\"dl5loxxxxxx\\"\\n            },\\n            \\"ZookeeperConfig\\": {\\n              \\"ConnectString\\": \\"\\",\\n              \\"Namespace\\": \\"\\",\\n              \\"ServiceName\\": \\"\\"\\n            }\\n          },\\n          \\"ServiceTimeout\\": 0,\\n          \\"EdasConfig\\": {\\n            \\"MicroserviceNamespaceName\\": \\"\\",\\n            \\"MicroserviceNamespaceId\\": \\"\\",\\n            \\"MicroserviceNamespace\\": \\"\\",\\n            \\"ServiceName\\": \\"\\",\\n            \\"EdasAppId\\": \\"\\",\\n            \\"RegistryType\\": \\"\\",\\n            \\"MseInstanceId\\": \\"\\"\\n          }\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询后端服务的信息',
    ),
    'DescribeUpdateBackendTask' => 
    array (
      'summary' => '修改后端服务在某个环境上的定义时，关联的已发布API会批量更新，该接口用来查询更新的结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OperationUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '4e13c3e0c44c4a4ebb5231264eeb9bc1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ016',
              ),
              'ApiUpdateBackendResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiUpdateBackendResult' => 
                  array (
                    'description' => 'API的更新结果',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'API的更新结果',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StageId' => 
                        array (
                          'description' => '运行环境编号',
                          'type' => 'string',
                          'example' => 'd8f2f54f3309458b8aaceb36c01c2dd9',
                        ),
                        'UpdateStatus' => 
                        array (
                          'description' => 'API更新结果',
                          'type' => 'string',
                          'example' => 'OVER',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '分组名称',
                          'type' => 'string',
                          'example' => 'imotob1',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '分组ID',
                          'type' => 'string',
                          'example' => '3013a55c0c44483f984d26df27120513',
                        ),
                        'ApiUid' => 
                        array (
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => '14faa7ba0572445685866ddb6a6f19da',
                        ),
                        'ErrorMsg' => 
                        array (
                          'description' => '更新失败的错误信息',
                          'type' => 'string',
                          'example' => 'Failed',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'checkin_linechart_today',
                        ),
                        'BackendId' => 
                        array (
                          'description' => '后端服务ID',
                          'type' => 'string',
                          'example' => 'c09b078bcb8f4ade9677bd8b18cdf43f',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ016\\",\\n  \\"ApiUpdateBackendResults\\": {\\n    \\"ApiUpdateBackendResult\\": [\\n      {\\n        \\"StageId\\": \\"d8f2f54f3309458b8aaceb36c01c2dd9\\",\\n        \\"UpdateStatus\\": \\"OVER\\",\\n        \\"GroupName\\": \\"imotob1\\",\\n        \\"GroupId\\": \\"3013a55c0c44483f984d26df27120513\\",\\n        \\"ApiUid\\": \\"14faa7ba0572445685866ddb6a6f19da\\",\\n        \\"ErrorMsg\\": \\"Failed\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"checkin_linechart_today\\",\\n        \\"BackendId\\": \\"c09b078bcb8f4ade9677bd8b18cdf43f\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询后端服务更新任务',
    ),
    'CreateBackendModel' => 
    array (
      'summary' => '创建后端服务在环境上的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端 ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '34e94fcd3e2e47a49824a89b8f92cb5e',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端类型',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'HTTP',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'BackendModelData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端模型数据。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '{\\"ServiceAddress\\":\\"http://apigateway.alicloudapi.com:8080\\"}',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端模型描述',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'model description',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BackendModelId' => 
              array (
                'description' => '后端模型 ID',
                'type' => 'string',
                'example' => '4be6b110b7aa40b0bf0c83cc00b3bd86',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '64411ECF-FAF7-5E3C-BA7B-E4A1F15A28CA',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"BackendModelId\\": \\"4be6b110b7aa40b0bf0c83cc00b3bd86\\",\\n  \\"RequestId\\": \\"64411ECF-FAF7-5E3C-BA7B-E4A1F15A28CA\\"\\n}","type":"json"}]',
      'title' => '创建后端模型',
    ),
    'DeleteBackendModel' => 
    array (
      'summary' => '删除后端服务在某个环境上的定义，删除后，使用该后端服务并发布在此环境上的API都会下线。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendModelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端模型 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => false,
            'example' => '4be6b110b7aa40b0bf0c83cc00b3bd86',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端 ID',
            'type' => 'string',
            'required' => false,
            'example' => '20bcdc9453524b78a8beb1f6de21edb7',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'example' => 'TEST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D1B18FFE-4A81-59D8-AA02-1817098977CD',
              ),
              'OperationId' => 
              array (
                'description' => '操作ID。',
                'type' => 'string',
                'example' => 'f7834d74be4e41aa8e607b0fafae9b33',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D1B18FFE-4A81-59D8-AA02-1817098977CD\\",\\n  \\"OperationId\\": \\"f7834d74be4e41aa8e607b0fafae9b33\\"\\n}","type":"json"}]',
      'title' => '删除后端模型',
    ),
    'ModifyBackendModel' => 
    array (
      'summary' => '修改后端服务在环境上的定义，修改后，使用该后端服务并发布在此环境上的API的后端地址都会批量更新，无需手动发布。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BackendId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端 ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '20bcdc9453524b78a8beb1f6de21edb7',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端类型',
            'type' => 'string',
            'required' => false,
            'example' => 'OSS',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'BackendModelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端模型 ID',
            'type' => 'string',
            'required' => false,
            'example' => '3bb6375bc71c4e4c95ce05b4e7a55a9d',
          ),
        ),
        4 => 
        array (
          'name' => 'BackendModelData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端模型数据。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{\\"ServiceAddress\\":\\"http://121.40.XX.XX\\"}',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端模型定义的描述',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'modify plugin first',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '19B89B04-418B-55EE-94A8-6B42CA06002A',
              ),
              'OperationId' => 
              array (
                'description' => '操作ID。',
                'type' => 'string',
                'example' => 'c16a1880f5164d779f6a54f64d997cd9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"19B89B04-418B-55EE-94A8-6B42CA06002A\\",\\n  \\"OperationId\\": \\"c16a1880f5164d779f6a54f64d997cd9\\"\\n}","type":"json"}]',
      'title' => '修改后端模型',
    ),
    'CreateSignature' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥显示名称。支持汉字、英文字母、数字、英文格式的下划线，必须以英文字母或汉字开头，4~50个字符',
            'type' => 'string',
            'required' => true,
            'example' => 'backendsignature',
          ),
        ),
        1 => 
        array (
          'name' => 'SignatureKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置密钥的Key值。支持英文字母、数字、英文格式的下划线，必须以英文字母开头，6~20个字符',
            'type' => 'string',
            'required' => true,
            'example' => 'qwertyuiop',
          ),
        ),
        2 => 
        array (
          'name' => 'SignatureSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置密钥的secret值。支持英文字母、数字、英文格式的下划线、及特殊字符（@、#、!、*），必须以英文字母开头，6~30个字符',
            'type' => 'string',
            'required' => true,
            'example' => 'asdfghjkl',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'SignatureId' => 
              array (
                'description' => '后端签名密钥ID',
                'type' => 'string',
                'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
              ),
              'SignatureName' => 
              array (
                'description' => '后端签名密钥名称',
                'type' => 'string',
                'example' => 'backendsignature',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"SignatureId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n  \\"SignatureName\\": \\"backendsignature\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSignatureResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <SignatureId>dd05f1c54d6749eda95f9fa6d491449a</SignatureId>\\r\\n    <SignatureName>backendsignature</SignatureName>\\r\\n</CreateSignatureResponse>","errorExample":""}]',
      'title' => '创建签名密钥',
      'summary' => '创建后端签名密钥。',
      'description' => '- 此功能面向开放API的用户
- 此功能效果仅是创建密钥策略，需要再调用绑定接口才能绑定到API上
- 此密钥绑定到API后，网关到您后端服务的请求会带有签名字符串，您的后端服务可以自定义是否验证该签名字符串
- 该接口调用的QPS限制为：单用户QPS不超过50
',
    ),
    'DeleteSignature' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要删除的密钥ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                ),
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","type":"json"}]',
      'title' => '删除后端签名密钥',
      'summary' => '删除API网关后端签名密钥。',
    ),
    'ModifySignature' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要修改的签名密钥的ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'SignatureName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置新的密钥名称。支持汉字、英文字母、数字、英文格式的下划线，必须以英文字母或汉字开头，4~50个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'backendsignature',
          ),
        ),
        2 => 
        array (
          'name' => 'SignatureKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置新的密钥Key值。支持英文字母、数字、英文格式的下划线，必须以英文字母开头，6~20个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'qwertyuiop',
          ),
        ),
        3 => 
        array (
          'name' => 'SignatureSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置新的密钥secret值。支持英文字母、数字、英文格式的下划线、及特殊字符（@、#、!、*），必须以英文字母开头，6~30个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'asdfghjkl',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'SignatureId' => 
              array (
                'description' => '密钥ID',
                'type' => 'string',
                'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
              ),
              'SignatureName' => 
              array (
                'description' => '密钥名称',
                'type' => 'string',
                'example' => 'backendsignature',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"SignatureId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n  \\"SignatureName\\": \\"backendsignature\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySignatureResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <SignatureId>dd05f1c54d6749eda95f9fa6d491449a</SignatureId>\\r\\n    <SignatureName>backendsignature</SignatureName>\\r\\n</ModifySignatureResponse>","errorExample":""}]',
      'title' => '修改后端签名密钥',
      'summary' => '修改API网关后端签名密钥。',
      'description' => '- 此功能面向开放API的用户
- 用于修改某个已存在的签名密钥的名称、Key和Secret
- 需要注意，修改立即生效，若该密钥已经绑定API，后端做验证时请及时调整为针对新签名字符串的验证
- 该接口调用的QPS限制为：单用户QPS不超过50
',
    ),
    'SetSignatureApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的签名密钥id',
            'type' => 'string',
            'required' => true,
            'example' => '9242e31589fc41f4ba15dd52ffa2ce61',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号',
            'type' => 'string',
            'required' => true,
            'example' => 'b1eed5faa2404af4945cca26d611a136',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的API编号',
            'type' => 'string',
            'required' => true,
            'example' => '7ce7022b23a340c7becd947487fad84c',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '27F9C50D-7EB4-5623-8472-45B3C7602C91',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"27F9C50D-7EB4-5623-8472-45B3C7602C91\\"\\n}","type":"json"}]',
      'title' => '绑定签名密钥与API',
      'summary' => '添加指定签名密钥与API的绑定。',
    ),
    'DescribeSignatures' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的密钥ID',
            'type' => 'string',
            'required' => false,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'SignatureName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的密钥名称',
            'type' => 'string',
            'required' => false,
            'example' => 'backendsignature',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'SignatureInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SignatureInfo' => 
                  array (
                    'description' => '由 SignatureInfo 组成的数组格式，返回后端签名的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModifiedTime' => 
                        array (
                          'description' => '密钥最后修改时间',
                          'type' => 'string',
                          'example' => '2016-07-24T08:28:48Z',
                        ),
                        'SignatureId' => 
                        array (
                          'description' => '后端签名密钥编号',
                          'type' => 'string',
                          'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
                        ),
                        'SignatureSecret' => 
                        array (
                          'description' => '密钥Secret值',
                          'type' => 'string',
                          'example' => 'asdfghjkl',
                        ),
                        'SignatureName' => 
                        array (
                          'description' => '后端签名密钥名称',
                          'type' => 'string',
                          'example' => 'backendsignature',
                        ),
                        'SignatureKey' => 
                        array (
                          'description' => '密钥Key值',
                          'type' => 'string',
                          'example' => 'qwertyuiop',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '密钥创建时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"SignatureInfos\\": {\\n    \\"SignatureInfo\\": [\\n      {\\n        \\"ModifiedTime\\": \\"2016-07-24T08:28:48Z\\",\\n        \\"SignatureId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n        \\"SignatureSecret\\": \\"asdfghjkl\\",\\n        \\"SignatureName\\": \\"backendsignature\\",\\n        \\"SignatureKey\\": \\"qwertyuiop\\",\\n        \\"CreatedTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSignaturesResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <SignatureInfos>\\r\\n        <SignatureInfo>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <SignatureId>dd05f1c54d6749eda95f9fa6d491449a</SignatureId>        \\r\\n            <SignatureName>backendsignature</SignatureName>\\r\\n            <SignatureKey>qwertyuiop</SignatureKey>\\r\\n            <SignatureSecret>asdfghjkl</SignatureSecret>\\r\\n            <CreatedTime>2016-07-23T08:28:48Z</CreatedTime>\\r\\n            <ModifiedTime>2016-07-24T08:28:48Z</ModifiedTime>\\r\\n        </SignatureInfo>\\r\\n    </SignatureInfos>\\r\\n</DescribeSignaturesResponse>","errorExample":""}]',
      'title' => '查询后端签名密钥列表',
      'summary' => '查询API网关后端签名密钥列表。',
      'description' => '- 此功能面向开放API的用户
- 用于查询某Region下的后端签名密钥列表，Region为系统参数
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApisBySignature' => 
    array (
      'summary' => '查询指定签名密钥所绑定的API列表信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定查询要用的签名密钥ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ApiInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiInfo' => 
                  array (
                    'description' => '由 ApiInfo 组成的数组格式，返回API的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'Visibility' => 
                        array (
                          'description' => '可见性，枚举为：

- **PUBLIC**: 公开
- **PRIVATE**: 私有',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '3b81fd160f5645e097cc8855d75a1cf6',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'mygroup',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '0009db9c828549768a200320714b8930',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，枚举为：

- **RELEASE**: 线上
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'TEST',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testapi',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"ApiInfos\\": {\\n    \\"ApiInfo\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"Visibility\\": \\"PUBLIC\\",\\n        \\"ApiId\\": \\"3b81fd160f5645e097cc8855d75a1cf6\\",\\n        \\"Description\\": \\"描述\\",\\n        \\"GroupName\\": \\"mygroup\\",\\n        \\"GroupId\\": \\"0009db9c828549768a200320714b8930\\",\\n        \\"StageName\\": \\"TEST\\",\\n        \\"ApiName\\": \\"testapi\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApisBySignatureResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <ApiInfos>\\r\\n        <ApiInfo>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>0009db9c828549768a200320714b8930</GroupId>        \\r\\n            <GroupName>mygroup</GroupName>\\r\\n            <StageName>test</StageName>\\r\\n            <ApiId>3b81fd160f5645e097cc8855d75a1cf6</ApiId>\\r\\n            <ApiName>testapi</ApiName>\\r\\n            <Description>描述</Description>\\r\\n            <Visibility>public</Visibility>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </ApiInfo>\\r\\n    </ApiInfos>\\r\\n</DescribeApisBySignatureResponse>","errorExample":""}]',
      'title' => '查询签名密钥绑定的API列表',
      'description' => '- 此功能面向开放API的用户
- 分页返回
',
    ),
    'DescribeApiSignatures' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'TEST',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ApiSignatures' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiSignatureItem' => 
                  array (
                    'description' => '由 ApiSignatureItem 组成的数组格式，返回签名密钥的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '后端签名密钥绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '46fbb52840d146f186e38e8e70fc8c90',
                        ),
                        'SignatureId' => 
                        array (
                          'description' => '后端签名密钥ID',
                          'type' => 'string',
                          'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
                        ),
                        'SignatureName' => 
                        array (
                          'description' => '后端签名密钥名称',
                          'type' => 'string',
                          'example' => 'backendsignature',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testapi',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"ApiSignatures\\": {\\n    \\"ApiSignatureItem\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"ApiId\\": \\"46fbb52840d146f186e38e8e70fc8c90\\",\\n        \\"SignatureId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n        \\"SignatureName\\": \\"backendsignature\\",\\n        \\"ApiName\\": \\"testapi\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiSignaturesResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <ApiSignatures>\\r\\n        <ApiSignatureItem>\\r\\n            <ApiId>46fbb52840d146f186e38e8e70fc8c90</ApiId>\\r\\n            <ApiName>testapi</ApiName>        \\r\\n            <SignatureId>dd05f1c54d6749eda95f9fa6d491449a</SignatureId>\\r\\n            <SignatureName>backendsignature</SignatureName>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </ApiSignatureItem>\\r\\n    </ApiSignatures>\\r\\n</DescribeApiSignaturesResponse>","errorExample":""}]',
      'title' => '查询API签名密钥绑定情况',
      'summary' => '查询指定分组指定环境下，所有API的签名密钥绑定情况。',
      'description' => '- 此功能面向开放API的用户
- 非必填的参数，不传入则默认返回所有，分页返回
',
    ),
    'DescribeSignaturesByApi' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API所属分组',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API编号',
            'type' => 'string',
            'required' => true,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'TEST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'Signatures' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SignatureItem' => 
                  array (
                    'description' => '由 SignatureItem 组成的数组格式，返回后端签名密钥的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'SignatureId' => 
                        array (
                          'description' => '后端签名密钥ID',
                          'type' => 'string',
                          'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
                        ),
                        'SignatureName' => 
                        array (
                          'description' => '后端签名密钥名称',
                          'type' => 'string',
                          'example' => 'mysecret',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"Signatures\\": {\\n    \\"SignatureItem\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"SignatureId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n        \\"SignatureName\\": \\"mysecret\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSignaturesByApiResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <Signatures>\\r\\n        <SignatureItem>\\r\\n            <SignatureId>dd05f1c54d6749eda95f9fa6d491449a</SignatureId>        \\r\\n            <SignatureName>mysecret</SignatureName>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </SignatureItem>\\r\\n    </Signatures>\\r\\n</DescribeSignaturesByApiResponse>","errorExample":""}]',
      'title' => '查询API绑定的后端签名密钥',
      'summary' => '查询指定API已绑定的后端签名密钥。',
      'description' => '- 此功能面向开放API的用户',
    ),
    'RemoveSignatureApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的签名密钥ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要解绑的API。

- 若不传入：默认解绑该分组该环境下的所有API。
- 指定要查询的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'TEST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveSignatureApisResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</RemoveSignatureApisResponse>","errorExample":""}]',
      'title' => '解除API与后端签名密钥的绑定',
      'summary' => '解除API与后端签名密钥的绑定关系。',
      'description' => '- 此功能面向开放API的用户
- 即时生效，解除后网关到后端服务的请求将不带有签名字符串，请后端去掉相应的校验环节',
    ),
    'AddTrafficSpecialControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'tf123456',
          ),
        ),
        1 => 
        array (
          'name' => 'SpecialType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '特殊流控类型，可选值：

- **APP**：应用
- **USER**：用户',
            'type' => 'string',
            'required' => true,
            'example' => 'APP',
          ),
        ),
        2 => 
        array (
          'name' => 'SpecialKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据**SpecialType**填写对应的AppId或者阿里云账号ID（账号ID请到[账号管理](https://account.console.aliyun.com/?spm=a2c4g.11186623.2.15.3f053654YpMPwo#/secure)页面查看）',
            'type' => 'string',
            'required' => true,
            'example' => '3382463',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对应的特殊流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<AddTrafficSpecialControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</AddTrafficSpecialControlResponse>","errorExample":""}]',
      'title' => '添加特殊流控配置',
      'summary' => '在指定流控策略下添加用户自定义特殊流控策略。',
      'description' => '- 此功能面向开放API的用户
- 若传入的SpecialKey已经存在，则会直接覆盖之前的配置，请慎重操作
- 注意特殊流控是添加到已存在的指定流控策略下的，添加后特殊流控策略将对该策略下的所有API生效
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTrafficControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略名称，支持大小写英文字母，中文，数字，下划线，长度4~50，且不能以下划线开头。',
            'type' => 'string',
            'required' => true,
            'example' => '流控测试',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficControlUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略单位，可选值：

- **SECOND**：秒
- **MINUTE**：分钟
- **HOUR**：小时
- **DAY**：天',
            'type' => 'string',
            'required' => true,
            'example' => 'MINUTE',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个API默认流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10000',
          ),
        ),
        3 => 
        array (
          'name' => 'UserDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个用户默认的流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        4 => 
        array (
          'name' => 'AppDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个app默认的流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控描述信息',
            'type' => 'string',
            'required' => false,
            'example' => '流控测试描述',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TrafficControlId' => 
              array (
                'description' => '流控策略唯一ID',
                'type' => 'string',
                'example' => 'tf123456',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求编号',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TrafficControlId\\": \\"tf123456\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTrafficControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TrafficControlId>tf123456</TrafficControlId>\\r\\n</CreateTrafficControlResponse>","errorExample":""}]',
      'title' => '创建流控策略',
      'summary' => '创建用户自定义的流控策略。',
      'description' => '- 此功能面向开放API的用户
- 策略创建后，未绑定API前是无意义的，绑定API后，对绑定的API即时生效
- 该接口调用的QPS限制为：单用户QPS不超过50
',
    ),
    'DeleteAllTrafficSpecialControl' => 
    array (
      'summary' => '删除指定流控策略下用户所有自定义的特殊流控策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'tf123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteAllTrafficSpecialControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</DeleteAllTrafficSpecialControlResponse>","errorExample":""}]',
      'title' => '删除所有特殊流控',
      'description' => '- 此功能面向开放API的用户
',
    ),
    'DeleteTrafficControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'tf123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTrafficControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</DeleteTrafficControlResponse>","errorExample":""}]',
      'title' => '删除指定的用户自定义流控策略',
      'summary' => '删除指定的用户自定义流控策略，以及该策略包含的特殊流控策略。',
      'description' => '- 此功能面向开放API的用户
- 若该策略已经绑定了API，则需要先解除绑定才能操作删除，否则会报错
- 该接口调用的QPS限制为：单用户QPS不超过50
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTrafficSpecialControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'tf123456',
          ),
        ),
        1 => 
        array (
          'name' => 'SpecialType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '特殊流控类型，可选值：

- **APP**：应用
- **USER**：用户',
            'type' => 'string',
            'required' => true,
            'example' => 'APP',
          ),
        ),
        2 => 
        array (
          'name' => 'SpecialKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据类型填写对应的AppId或者阿里云账号ID（账号ID请到[账号管理](https://account.console.aliyun.com/?spm=a2c4g.11186623.2.15.343130a8sDi8cO#/secure)页面查看）',
            'type' => 'string',
            'required' => true,
            'example' => '3382463',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTrafficSpecialControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</DeleteTrafficSpecialControlResponse>","errorExample":""}]',
      'title' => '删除特殊流控',
      'summary' => '删除指定的用户自定义特殊流控策略。',
      'description' => '- 此功能面向开放API的用户
- 接口需要用到的入参可以调用其他接口获取
',
    ),
    'ModifyTrafficControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'tf123456',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficControlName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略名称，支持大小写英文字母，中文，数字，下划线，长度4~50，且不能以下划线开头。',
            'type' => 'string',
            'required' => false,
            'example' => '流控测试',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficControlUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单位，可选值：

- **SECOND**：秒
- **MINUTE**：分钟
- **HOUR**：小时
- **DAY**：天',
            'type' => 'string',
            'required' => false,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个API默认流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        4 => 
        array (
          'name' => 'UserDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个用户默认的流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        5 => 
        array (
          'name' => 'AppDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个app默认的流控值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        6 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控描述信息',
            'type' => 'string',
            'required' => false,
            'example' => '流控测试描述',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004 ',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004 \\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyTrafficControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</ModifyTrafficControlResponse>","errorExample":""}]',
      'title' => '修改用户自定义的流控策略设置',
      'summary' => '修改用户自定义的流控策略设置。',
      'description' => '- 此功能面向开放API的用户
- 修改将对策略下绑定的API即时生效
- 该接口调用的QPS限制为：单用户QPS不超过50',
    ),
    'SetTrafficControlApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => true,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6,46fbb52840d146f186e38e8e70fc8c12',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<SetTrafficControlApisResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</SetTrafficControlApisResponse>","errorExample":""}]',
      'title' => '添加指定流控策略与API的绑定',
      'summary' => '添加指定流控策略与API的绑定。',
      'description' => '- 此功能面向开放API的用户
- 用于添加API与策略的绑定关系，支持多个API批量操作，最多100个',
    ),
    'DescribeTrafficControls' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略ID',
            'type' => 'string',
            'required' => false,
            'example' => 'tf123456',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的分组编号，必须和**ApiId**、**StageName**一起查询',
            'type' => 'string',
            'required' => false,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的API编号，必须和**GroupId**、**StageName**一起查询',
            'type' => 'string',
            'required' => false,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境名称，必须和**GroupId**、**ApiId**一起查询 ，可选值：

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => false,
            'example' => 'RELEASE',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficControlName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控策略名称',
            'type' => 'string',
            'required' => false,
            'example' => '流控测试',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '93D91A99-F093-4596-87BA-3C4FBFD3FD8A',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TrafficControls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TrafficControl' => 
                  array (
                    'description' => '由 TrafficControl 组成的数组格式，返回流控策略信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UserDefault' => 
                        array (
                          'description' => '每个用户默认的流控值',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '15000',
                        ),
                        'ApiDefault' => 
                        array (
                          'description' => '每个API默认流控值',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20000',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '上一次修改时间（格林威治时间）',
                          'type' => 'string',
                          'example' => '2016-01-27T10:34:38Z',
                        ),
                        'Description' => 
                        array (
                          'description' => '流控策略描述',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'TrafficControlUnit' => 
                        array (
                          'description' => '流控策略单位，可选值：

- MINUTE：分钟
- HOUR：小时
- DAY：天',
                          'type' => 'string',
                          'example' => 'Minute',
                        ),
                        'TrafficControlName' => 
                        array (
                          'description' => '流控策略名称',
                          'type' => 'string',
                          'example' => 'wulingtestq1',
                        ),
                        'AppDefault' => 
                        array (
                          'description' => '每个app默认的流控值',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8000',
                        ),
                        'TrafficControlId' => 
                        array (
                          'description' => '流控策略ID',
                          'type' => 'string',
                          'example' => 'cfed6c970d45481dbe136d6b5ac68c41',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间（格林威治时间）',
                          'type' => 'string',
                          'example' => '2016-01-27T10:19:39Z',
                        ),
                        'SpecialPolicies' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SpecialPolicy' => 
                            array (
                              'description' => '由 SpecialPolicy 组成的数组格式，返回特殊流控策略信息',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'SpecialType' => 
                                  array (
                                    'description' => '特殊流控类型，可选值：

- **APP**：应用
- **USER**：用户',
                                    'type' => 'string',
                                    'example' => 'USER',
                                  ),
                                  'Specials' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Special' => 
                                      array (
                                        'description' => '由 Special 组成的数组格式，返回特殊流控策略数据项信息',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'TrafficValue' => 
                                            array (
                                              'description' => '流控值',
                                              'type' => 'integer',
                                              'format' => 'int32',
                                              'example' => '100',
                                            ),
                                            'SpecialKey' => 
                                            array (
                                              'description' => '根据SpecialType对应的AppId或者是用户账号',
                                              'type' => 'string',
                                              'example' => 'test_wg@aliyun.com',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"93D91A99-F093-4596-87BA-3C4FBFD3FD8A\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"TrafficControls\\": {\\n    \\"TrafficControl\\": [\\n      {\\n        \\"UserDefault\\": 15000,\\n        \\"ApiDefault\\": 20000,\\n        \\"ModifiedTime\\": \\"2016-01-27T10:34:38Z\\",\\n        \\"Description\\": \\"test\\",\\n        \\"TrafficControlUnit\\": \\"Minute\\",\\n        \\"TrafficControlName\\": \\"wulingtestq1\\",\\n        \\"AppDefault\\": 8000,\\n        \\"TrafficControlId\\": \\"cfed6c970d45481dbe136d6b5ac68c41\\",\\n        \\"CreatedTime\\": \\"2016-01-27T10:19:39Z\\",\\n        \\"SpecialPolicies\\": {\\n          \\"SpecialPolicy\\": [\\n            {\\n              \\"SpecialType\\": \\"USER\\",\\n              \\"Specials\\": {\\n                \\"Special\\": [\\n                  {\\n                    \\"TrafficValue\\": 100,\\n                    \\"SpecialKey\\": \\"test_wg@aliyun.com\\"\\n                  }\\n                ]\\n              }\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTrafficControlsResponse>\\r\\n    <TotalCount>1</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <RequestId>93D91A99-F093-4596-87BA-3C4FBFD3FD8A</RequestId>\\r\\n    <TrafficControls>\\r\\n        <TrafficControl>\\r\\n            <TrafficControlId>cfed6c970d45481dbe136d6b5ac68c41</TrafficControlId>\\r\\n            <ApiDefault>20000</ApiDefault>\\r\\n            <TrafficControlUnit>Minute</TrafficControlUnit>\\r\\n            <TrafficControlName>wulingtestq1</TrafficControlName>\\r\\n            <ModifiedTime>2016-01-27T10:34:38Z</ModifiedTime>\\r\\n            <UserDefault>15000</UserDefault>\\r\\n            <AppDefault>8000</AppDefault>\\r\\n            <Description>test</Description>\\r\\n            <CreateTime>2016-01-27T10:19:39Z</CreateTime>\\r\\n            <SpecialPolicies>\\r\\n                <SpecialPolicy>\\r\\n                    <SpecialType>User</SpecialType>\\r\\n                    <Specials>\\r\\n                        <Special>\\r\\n                            <TrafficValue>100</TrafficValue>\\r\\n                            <SpecialKey>test_wg@aliyun.com</SpecialKey>\\r\\n                        </Special>\\r\\n                    </Specials>\\r\\n                </SpecialPolicy>\\r\\n                <SpecialPolicy>\\r\\n                    <SpecialType>App</SpecialType>\\r\\n                    <Specials>\\r\\n                        <Special>\\r\\n                            <TrafficValue>100</TrafficValue>\\r\\n                            <SpecialKey>12345678</SpecialKey>\\r\\n                        </Special>\\r\\n                    </Specials>\\r\\n                </SpecialPolicy>\\r\\n            </SpecialPolicies>\\r\\n        </TrafficControl>\\r\\n    </TrafficControls>\\r\\n</DescribeTrafficControlsResponse>","errorExample":""}]',
      'title' => '查询流控策略列表及详情',
      'summary' => '查询用户自定义的流控策略列表及详情信息，支持条件查询。',
      'description' => '- 此功能面向开放API的用户
- 此接口可用于查询所有已创建的流控策略及策略下的特殊流控策略，包括详细信息
- 此接口还可以支持条件查询，如查询指定接口所绑定的流控策略，如查询指定环境下的流控策略',
    ),
    'DescribeTrafficControlsByApi' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API所属分组',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的Api编号',
            'type' => 'string',
            'required' => true,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**：线上
- **TEST**：测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'TrafficControlItems' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TrafficControlItem' => 
                  array (
                    'description' => '由 TrafficControlItem 组成的数组格式，返回策略的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TrafficControlItemId' => 
                        array (
                          'description' => '流控策略ID',
                          'type' => 'string',
                          'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
                        ),
                        'BoundTime' => 
                        array (
                          'description' => '绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'TrafficControlItemName' => 
                        array (
                          'description' => '流控策略名称',
                          'type' => 'string',
                          'example' => 'mysecret',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"TrafficControlItems\\": {\\n    \\"TrafficControlItem\\": [\\n      {\\n        \\"TrafficControlItemId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"TrafficControlItemName\\": \\"mysecret\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTrafficControlByApiResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TrafficControlItems>\\r\\n        <TrafficControlItem>\\r\\n            <TrafficControlId>dd05f1c54d6749eda95f9fa6d491449a</TrafficControlId>        \\r\\n            <TrafficControlName>mysecret</TrafficControlName>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </TrafficControlItem>\\r\\n    </TrafficControlItems>\\r\\n</DescribeTrafficControlByApiResponse>","errorExample":""}]',
      'title' => '查询API绑定的流控策略',
      'summary' => '查询指定API已绑定的流控策略。',
      'description' => '- 此功能面向开放API的用户
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApisByTrafficControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定查询要用的流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ApiInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiInfo' => 
                  array (
                    'description' => '由 ApiInfo 组成的数组格式，返回API的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'Visibility' => 
                        array (
                          'description' => '可见性，枚举为：

- **PUBLIC**: 公开
- **PRIVATE**: 私有',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '3b81fd160f5645e097cc8855d75a1cf6',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'mygroup',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '0009db9c828549768a200320714b8930',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，枚举为：

- **RELEASE**: 线上
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'TEST',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testapi',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"ApiInfos\\": {\\n    \\"ApiInfo\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"Visibility\\": \\"PUBLIC\\",\\n        \\"ApiId\\": \\"3b81fd160f5645e097cc8855d75a1cf6\\",\\n        \\"Description\\": \\"描述\\",\\n        \\"GroupName\\": \\"mygroup\\",\\n        \\"GroupId\\": \\"0009db9c828549768a200320714b8930\\",\\n        \\"StageName\\": \\"TEST\\",\\n        \\"ApiName\\": \\"testapi\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApisByTrafficControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <ApiInfos>\\r\\n        <ApiInfo>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>0009db9c828549768a200320714b8930</GroupId>        \\r\\n            <GroupName>mygroup</GroupName>\\r\\n            <StageName>test</StageName>\\r\\n            <ApiId>3b81fd160f5645e097cc8855d75a1cf6</ApiId>\\r\\n            <ApiName>testapi</ApiName>\\r\\n            <Description>描述</Description>\\r\\n            <Visibility>public</Visibility>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </ApiInfo>\\r\\n    </ApiInfos>\\r\\n</DescribeApisByTrafficControlResponse>","errorExample":""}]',
      'title' => '查询指定流控策略下已绑定API列表信息',
      'summary' => '查询指定流控策略下已绑定的API列表信息。',
      'description' => '- 此功能面向开放API的用户
- 分页返回',
    ),
    'RemoveTrafficControlApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的流控策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要解绑的API。

- 若不传入：默认解绑该分组该环境下的所有API。
- 若输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6,46fbb52840d146f186e38e8e70fc8c12',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'TEST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveTrafficControlApisResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</RemoveTrafficControlApisResponse>","errorExample":""}]',
      'title' => '解除API与流控策略的绑定',
      'summary' => '解除API与流控策略的绑定关系。',
      'description' => '- 此功能面向开放API的用户
- 用于解除API与流控策略的绑定关系，支持API批量，最多100个
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddIpControlPolicyItem' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制的ID，代表了唯一的IP控制策略。',
            'type' => 'string',
            'required' => true,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定策略限制的AppId，只有控制类型为白名单（即IpControlType为ALLOW）时，才可同时增加AppId的限制。

- 一次只能增加一个。
- 为空表示没有AppId的限制。
- 当该值不为空，表示在有IP限制的同时，还限制访问的AppId。
- 请注意：当该值不为空，如果API的安全认证为“无认证”，将限制所有的API调用。
- 当黑名单（IpControlType为REFUSE）时，该值不为空，API网关会自动忽略该值，只设置IP的限制。',
            'type' => 'string',
            'required' => false,
            'example' => '1111111',
          ),
        ),
        2 => 
        array (
          'name' => 'CidrIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '具体策略的IP或者IP段，多个请用英文分号（;）分割，最多添加10个。',
            'type' => 'string',
            'required' => true,
            'example' => '113.125.1.101;101.11.1.1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PolicyItemId' => 
              array (
                'description' => '该策略的唯一ID',
                'type' => 'string',
                'example' => 'P151617000829241',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PolicyItemId\\": \\"P151617000829241\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<AddIpControlPolicyItemResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <PolicyItemId>P151617000829241</PolicyItemId>\\r\\n</AddIpControlPolicyItemResponse>","errorExample":""}]',
      'title' => '增加IP访问控制策略',
      'summary' => '向某个已存在的IP访问控制增加一条策略。',
      'description' => '调用该接口时请注意：
- 此功能面向API提供者。
- 增加该策略后，所有绑定该访问控制的API，即时生效。
- 一个IP访问控制下最多添加100条策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIpControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制名称。支持大小写英文字母、中文、数字、下划线（_）、长度为`[4,50]`个字符, 且不能以下划线开头。',
            'type' => 'string',
            'required' => true,
            'example' => 'controlNameTest',
          ),
        ),
        1 => 
        array (
          'name' => 'IpControlType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制类型：

- **ALLOW**：IP访问控制为白名单类型
- **REFUSE**：IP访问控制为黑名单类型',
            'type' => 'string',
            'required' => true,
            'example' => 'ALLOW',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，不超过200个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'IpControlPolicys',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '由ipcontrolpolicys组成的数组格式，返回策略的信息项',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'AppId' => 
                array (
                  'description' => '策略限制的AppId，只有控制类型为白名单（即 IpControlType为ALLOW）时，才可同时增加AppId的限制。

- 一次只能增加一个；
- 为空表示没有AppId的限制；
- 当该值不为空，表示在有IP限制的同时，还限制访问的AppId；
- 当该值不为空，如果API的安全认证为“无认证”，将限制所有的API调用，请注意；
- 当黑名单（IpControlType为REFUSE）时，该值不为空，API网关会自动忽略该值，只设置IP的限制；
- IpControlPolicys.N 中N的取值范围：`[1,100]`；',
                  'type' => 'string',
                  'required' => false,
                  'example' => '11111',
                ),
                'CidrIp' => 
                array (
                  'description' => '具体策略的IP或者IP段

- 当要在创建访问控制时指定策略，该值不能为空；
- 每条策略的IP或者IP段，多个请用英文分号（;）分割，最多添加10个；
- IpControlPolicys.N 中N的取值范围：`[1,100]`',
                  'type' => 'string',
                  'required' => false,
                  'example' => '114.1.1.0/24',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'IpControlId' => 
              array (
                'description' => '访问控制的ID',
                'type' => 'string',
                'example' => '7ea91319a34d48a09b5c9c871d9768b1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CE5722A6-AE78-4741-A9B0-6C817D360510',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"IpControlId\\": \\"7ea91319a34d48a09b5c9c871d9768b1\\",\\n  \\"RequestId\\": \\"CE5722A6-AE78-4741-A9B0-6C817D360510\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIpControlResponse>\\r\\n    <RequestId>CE5722A6-AE78-4741-A9B0-6C817D360510</RequestId>\\r\\n    <IpControlId>7ea91319a34d48a09b5c9c871d9768b1</IpControlId>\\r\\n</CreateIpControlResponse>","errorExample":""}]',
      'title' => '新增IP访问控制',
      'summary' => '在某个地域下新增IP访问控制。',
      'description' => '调用本接口之前，您需要了解：
- 此功能面向API提供者。
- IP访问控制创建后，未绑定API前是无意义的，绑定API后，对绑定的API即时生效。
- 具体的IP策略可以在创建IP控制时添加
- 当IP访问控制下策略为空时，该策略无效。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIpControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制的ID，代表了唯一的IP控制策略',
            'type' => 'string',
            'required' => true,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIpControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</DeleteIpControlResponse>","errorExample":""}]',
      'title' => '删除IP访问控制',
      'summary' => '删除某个已存在的IP访问控制。',
      'description' => '- 此功能面向API提供者
- 若该访问控制已经绑定了API，则需要先解除绑定才能操作删除，否则会报错
- 删除一个不存在的IP访问控制，会直接返回成功',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIpControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制的ID，代表了唯一的IP控制策略',
            'type' => 'string',
            'required' => true,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
        1 => 
        array (
          'name' => 'IpControlName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制名称。支持大小写英文字母、中文、数字、下划线（_）、长度为[4,50]个字符, 且不能以下划线开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testControl11',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，不超过200个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIpControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</ModifyIpControlResponse>","errorExample":""}]',
      'title' => '修改IP访问控制',
      'summary' => '修改某个已存在的IP访问控制。',
      'description' => '- 此功能面向API提供者
- 该接口只能修改访问控制的名称和描述，访问控制类型不支持修改。
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIpControlPolicyItem' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'P访问控制的ID，代表了唯一的IP控制策略',
            'type' => 'string',
            'required' => true,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
        1 => 
        array (
          'name' => 'PolicyItemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '某条策略ID',
            'type' => 'string',
            'required' => true,
            'example' => 'P151617000829241',
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定策略限制的AppId，只有控制类型为白名单（即 IpControlType为ALLOW）时，才可同时增加AppId的限制。

- 一次只能增加一个；
- 为空表示没有AppId的限制；
- 当该值不为空，表示在有IP限制的同时，还限制访问的AppId；
- 请注意：当该值不为空，如果API的安全认证为“无认证”，将限制所有的API调用；
- 当黑名单（IpControlType为REFUSE）时，该值不为空，API网关会自动忽略该值，只设置IP的限制；',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        3 => 
        array (
          'name' => 'CidrIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '具体策略的IP或者IP段，多个请用英文分号（;）分割，最多添加10个',
            'type' => 'string',
            'required' => true,
            'example' => '113.125.1.101;101.11.1.1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIpControlPolicyItemResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</ModifyIpControlPolicyItemResponse>","errorExample":""}]',
      'title' => '修改IP访问控制下的策略',
      'summary' => '修改某个IP访问控制下的某条策略。',
      'description' => '- 此功能面向API提供者
- 增加该策略后，所有绑定该访问控制的API，即时生效
- 修改是某条策略内容的全量修改',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetIpControlApis' => 
    array (
      'summary' => '添加指定IP访问控制与API的绑定关系。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的IP访问控制的ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => true,
            'example' => '3b81fd160f5645e097cc8855d75a1cf6,46fbb52840d146f186e38e8e70fc8c12',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'TEST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<SetIpControlApisResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</SetIpControlApisResponse>","errorExample":""}]',
      'title' => '绑定IP访问控制与API关系',
      'description' => '- 此功能面向开放API的用户
- 支持多个API批量操作，最多100个',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApiIpControls' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**: 线上
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的分组',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的API编号，支持输入多个，半角逗号（,）分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'example' => '123,234',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ApiIpControls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiIpControlItem' => 
                  array (
                    'description' => '由 ApiIpControlItem组成的数组格式，返回IP访问控制的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '46fbb52840d146f186e38e8e70fc8c90',
                        ),
                        'IpControlId' => 
                        array (
                          'description' => 'IP访问控制ID',
                          'type' => 'string',
                          'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
                        ),
                        'IpControlName' => 
                        array (
                          'description' => 'IP访问控制名称',
                          'type' => 'string',
                          'example' => 'testControlName',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testapi',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"ApiIpControls\\": {\\n    \\"ApiIpControlItem\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"ApiId\\": \\"46fbb52840d146f186e38e8e70fc8c90\\",\\n        \\"IpControlId\\": \\"dd05f1c54d6749eda95f9fa6d491449a\\",\\n        \\"IpControlName\\": \\"testControlName\\",\\n        \\"ApiName\\": \\"testapi\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApiIpControlsResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <ApiSignatures>\\r\\n        <ApiSignatureItem>\\r\\n            <ApiId>46fbb52840d146f186e38e8e70fc8c90</ApiId>\\r\\n            <ApiName>testapi</ApiName>        \\r\\n            <IpControlId>dd05f1c54d6749eda95f9fa6d491449a</IpControlId>\\r\\n            <IpControlName>testControlName</IpControlName>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </ApiSignatureItem>\\r\\n    </ApiSignatures>\\r\\n</DescribeApiIpControlsResponse>","errorExample":""}]',
      'title' => '查询API的IP访问控制绑定情况',
      'summary' => '查询指定分组指定环境下，所有API的IP访问控制绑定情况。',
      'description' => '- 此功能面向开放API的用户
- 非必填的参数，不传入则默认返回所有，分页返回
·',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIpControlPolicyItems' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制的ID，代表了唯一的IP控制策略',
            'type' => 'string',
            'required' => false,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
        1 => 
        array (
          'name' => 'PolicyItemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略ID',
            'type' => 'string',
            'required' => false,
            'example' => 'P151617000829241',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'IpControlPolicyItems' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IpControlPolicyItem' => 
                  array (
                    'description' => '由 IpControlPolicyItem组成的数组格式，返回的是某IP访问控制下的策略信息。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModifiedTime' => 
                        array (
                          'description' => '修改时间（UTC）',
                          'type' => 'string',
                          'example' => '2018-01-17T06:25:13Z',
                        ),
                        'PolicyItemId' => 
                        array (
                          'description' => '某项策略的ID',
                          'type' => 'string',
                          'example' => 'P151617000829241',
                        ),
                        'CidrIp' => 
                        array (
                          'description' => 'IP或者IP段组成的字符串',
                          'type' => 'string',
                          'example' => '113.125.XX.XX;101.11.XX.XX',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间（UTC）',
                          'type' => 'string',
                          'example' => '2018-01-17T06:20:08Z',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID',
                          'type' => 'string',
                          'example' => '11112',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"IpControlPolicyItems\\": {\\n    \\"IpControlPolicyItem\\": [\\n      {\\n        \\"ModifiedTime\\": \\"2018-01-17T06:25:13Z\\",\\n        \\"PolicyItemId\\": \\"P151617000829241\\",\\n        \\"CidrIp\\": \\"113.125.XX.XX;101.11.XX.XX\\",\\n        \\"CreateTime\\": \\"2018-01-17T06:20:08Z\\",\\n        \\"AppId\\": \\"11112\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIpControlPolicyItemsResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>2</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <IpControlPolicyItems>\\r\\n        <IpControlPolicyItem>\\r\\n            <PolicyItemId>P151617000829241</PolicyItemId>\\r\\n            <CreateTime>2018-01-17T06:20:08Z</CreateTime>\\r\\n            <ModifiedTime>2018-01-17T06:25:13Z</ModifiedTime>\\r\\n            <CidrIp>113.125.1.101;101.11.1.1</CidrIp>\\r\\n            <AppId>11112</AppId>\\r\\n        </IpControlPolicyItem>\\r\\n        <IpControlPolicyItem>\\r\\n            <PolicyItemId>P151616809156728</PolicyItemId>\\r\\n            <CreateTime>2018-01-17T05:48:11Z</CreateTime>\\r\\n            <ModifiedTime>2018-01-17T05:48:11Z</ModifiedTime>\\r\\n            <CidrIp>102.0.0.0/8</CidrIp>\\r\\n        </IpControlPolicyItem>\\r\\n    </IpControlPolicyItems>\\r\\n</DescribeIpControlPolicyItemsResponse>","errorExample":""}]',
      'title' => '查询IP访问控制策略列表',
      'summary' => '分页查询某IP访问控制下的策略列表。',
      'description' => '- 此功能面向API提供者
- 可支持策略ID过滤
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIpControls' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制的ID，代表了唯一的IP控制策略',
            'type' => 'string',
            'required' => false,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
        1 => 
        array (
          'name' => 'IpControlName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制名称',
            'type' => 'string',
            'required' => false,
            'example' => '访问控制test',
          ),
        ),
        2 => 
        array (
          'name' => 'IpControlType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制类型：

- **ALLOW**：IP访问控制为白名单类型
- **REFUSE**：IP访问控制为黑名单类型',
            'type' => 'string',
            'required' => false,
            'example' => 'ALLOW',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'IpControlInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IpControlInfo' => 
                  array (
                    'description' => '由IpControlInfo组成的数组格式，返回的是IP访问控制的信息项（不包含具体的策略）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IpControlId' => 
                        array (
                          'description' => 'IP访问控制编号',
                          'type' => 'string',
                          'example' => '7ea91319a34d48a09b5c9c871d9768b1',
                        ),
                        'IpControlType' => 
                        array (
                          'description' => 'IP访问控制类型',
                          'type' => 'string',
                          'example' => 'ALLOW',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '修改时间（UTC）',
                          'type' => 'string',
                          'example' => '2018-01-17T06:00:38Z',
                        ),
                        'IpControlName' => 
                        array (
                          'description' => 'IP访问控制名称',
                          'type' => 'string',
                          'example' => 'testControl11',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述',
                          'type' => 'string',
                          'example' => 'description',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间（UTC）',
                          'type' => 'string',
                          'example' => '2018-01-17T05:48:11Z',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"IpControlInfos\\": {\\n    \\"IpControlInfo\\": [\\n      {\\n        \\"IpControlId\\": \\"7ea91319a34d48a09b5c9c871d9768b1\\",\\n        \\"IpControlType\\": \\"ALLOW\\",\\n        \\"ModifiedTime\\": \\"2018-01-17T06:00:38Z\\",\\n        \\"IpControlName\\": \\"testControl11\\",\\n        \\"Description\\": \\"description\\",\\n        \\"CreateTime\\": \\"2018-01-17T05:48:11Z\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIpControlsResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>1</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <IpControlInfos>\\r\\n        <IpControlInfo>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <IpControlId>7ea91319a34d48a09b5c9c871d9768b1</IpControlId>\\r\\n            <IpControlName>testControl11</IpControlName>\\r\\n            <IpControlType>ALLOW</IpControlType>\\r\\n            <Description>description</Description>\\r\\n            <CreateTime>2018-01-17T05:48:11Z</CreateTime>\\r\\n            <ModifiedTime>2018-01-17T06:00:38Z</ModifiedTime>\\r\\n        </IpControlInfo>\\r\\n    </IpControlInfos>\\r\\n</DescribeIpControlsResponse>","errorExample":""}]',
      'title' => '查询IP访问控制列表',
      'summary' => '调用DescribeIpControls分页查询用户自定义的IP访问控制列表。',
      'description' => '- 此功能面向API提供者
- 用于查询某Region下的IP访问控制列表，Region为系统参数
- 可根据控制ID，名称，类型等过滤
- 该接口不含具体的策略，如果需要查询详细策略，请用[查询IP访问控制策略列表](~~65532~~)接口',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApisByIpControl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定查询要用的IP访问控制ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
              'PageSize' => 
              array (
                'description' => '返回指定的每页条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ApiInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiInfo' => 
                  array (
                    'description' => '由 ApiInfo 组成的数组格式，返回API的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BoundTime' => 
                        array (
                          'description' => '绑定时间',
                          'type' => 'string',
                          'example' => '2016-07-23T08:28:48Z',
                        ),
                        'Visibility' => 
                        array (
                          'description' => '可见性，枚举为：

- **PUBLIC**: 公开
- **PRIVATE**: 私有',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'ApiId' => 
                        array (
                          'description' => 'API编号',
                          'type' => 'string',
                          'example' => '3b81fd160f5645e097cc8855d75a1cf6',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API描述',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'mygroup',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'API分组编号',
                          'type' => 'string',
                          'example' => '0009db9c828549768a200320714b8930',
                        ),
                        'StageName' => 
                        array (
                          'description' => '环境名称，枚举为：

- **RELEASE**: 线上
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'TEST',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testapi',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"ApiInfos\\": {\\n    \\"ApiInfo\\": [\\n      {\\n        \\"BoundTime\\": \\"2016-07-23T08:28:48Z\\",\\n        \\"Visibility\\": \\"PUBLIC\\",\\n        \\"ApiId\\": \\"3b81fd160f5645e097cc8855d75a1cf6\\",\\n        \\"Description\\": \\"描述\\",\\n        \\"GroupName\\": \\"mygroup\\",\\n        \\"GroupId\\": \\"0009db9c828549768a200320714b8930\\",\\n        \\"StageName\\": \\"TEST\\",\\n        \\"ApiName\\": \\"testapi\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeApisByIpControlResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n    <TotalCount>20</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <ApiInfos>\\r\\n        <ApiInfo>\\r\\n            <RegionId>cn-qingdao</RegionId>\\r\\n            <GroupId>0009db9c828549768a200320714b8930</GroupId>        \\r\\n            <GroupName>mygroup</GroupName>\\r\\n            <StageName>test</StageName>\\r\\n            <ApiId>3b81fd160f5645e097cc8855d75a1cf6</ApiId>\\r\\n            <ApiName>testapi</ApiName>\\r\\n            <Description>描述</Description>\\r\\n            <Visibility>public</Visibility>\\r\\n            <BoundTime>2016-07-23T08:28:48Z</BoundTime>\\r\\n        </ApiInfo>\\r\\n    </ApiInfos>\\r\\n</DescribeApisByIpControlResponse>","errorExample":""}]',
      'title' => '查询IP访问控制绑定的API',
      'summary' => '查询指定IP访问控制所绑定的API列表信息。',
      'description' => '- 此功能面向开放API的用户
- 分页返回
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveIpControlApis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作的IP访问控制ID',
            'type' => 'string',
            'required' => true,
            'example' => 'dd05f1c54d6749eda95f9fa6d491449a',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '0009db9c828549768a200320714b8930',
          ),
        ),
        2 => 
        array (
          'name' => 'ApiIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要解绑的API。

- 若不传入：默认解绑该分组该环境下的所有API。
- 指定要查询的API编号，支持输入多个，“,”分隔，最多支持100个',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        3 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'TEST',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveIpControlApisResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</RemoveIpControlApisResponse>","errorExample":""}]',
      'title' => '解除API与IP访问控制的绑定',
      'summary' => '解除API与IP访问控制的绑定关系。',
      'description' => '- 此功能面向开放API的用户
- 即时生效，解除后该API的对应环境将不会有IP访问控制',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveIpControlPolicyItem' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpControlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP访问控制的ID，代表了唯一的IP控制策略',
            'type' => 'string',
            'required' => true,
            'example' => '7ea91319a34d48a09b5c9c871d9768b1',
          ),
        ),
        1 => 
        array (
          'name' => 'PolicyItemIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '具体的策略ID，多个以英文分号（;）分割,最多100个',
            'type' => 'string',
            'required' => true,
            'example' => 'P151533572852362;P151533557750260',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ004',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ004\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveIpControlPolicyItemResponse>\\r\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BZ004</RequestId>\\r\\n</RemoveIpControlPolicyItemResponse>","errorExample":""}]',
      'title' => '移除IP访问控制的策略',
      'summary' => '移除某个IP访问控制下的一条或多条策略。',
      'description' => '- 此功能面向API提供者',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApisWithStageNameIntegratedByApp' => 
    array (
      'summary' => '根据应用查询API列表，返回环境聚合的结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'APP的ID',
            'description' => 'APP的ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '2386789',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码',
            'description' => '当前页码',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页条目',
            'description' => '每页条目',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ApiUid',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API的ID',
            'description' => 'API的ID',
            'type' => 'string',
            'required' => false,
            'example' => 'b19240592b1b4e74961fb8438ed7550c',
          ),
        ),
        4 => 
        array (
          'name' => 'ApiName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API名称',
            'description' => 'API名称',
            'type' => 'string',
            'required' => false,
            'example' => 'ApiName',
          ),
        ),
        5 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API请求路径',
            'description' => 'API请求路径',
            'type' => 'string',
            'required' => false,
            'example' => '/tt',
          ),
        ),
        6 => 
        array (
          'name' => 'Method',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'API的请求HTTP Method',
            'description' => 'API的请求HTTP Method',
            'type' => 'string',
            'required' => false,
            'example' => 'POST',
          ),
        ),
        7 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述，不超过200个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'title' => '当前页码',
                'description' => '当前页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6C87A26A-6A18-4B8E-8099-705278381A2C',
              ),
              'PageSize' => 
              array (
                'title' => '每页条目',
                'description' => '每页条目',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'title' => '总条目数',
                'description' => '总条目数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'AppApiRelationInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AppApiRelationInfo' => 
                  array (
                    'description' => 'API授权信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'API授权信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'title' => 'API的ID',
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => 'c625795a1e664782a918eaa629e96ab5',
                        ),
                        'AuthorizationSource' => 
                        array (
                          'title' => '授权来源',
                          'description' => '授权来源',
                          'type' => 'string',
                          'example' => 'SELF',
                        ),
                        'Description' => 
                        array (
                          'title' => '描述',
                          'description' => '描述',
                          'type' => 'string',
                          'example' => 'b1008kz',
                        ),
                        'GroupName' => 
                        array (
                          'title' => '分组名称',
                          'description' => '分组名称',
                          'type' => 'string',
                          'example' => 'manager_vehicles',
                        ),
                        'GroupId' => 
                        array (
                          'title' => '分组ID',
                          'description' => '分组ID',
                          'type' => 'string',
                          'example' => '38bed48d664149e4b9b5ea576319673f',
                        ),
                        'Operator' => 
                        array (
                          'description' => '授权的人，取值：

- **PROVIDER**：API所有者
- **CONSUMER**：API调用者',
                          'type' => 'string',
                          'example' => 'PROVIDER',
                        ),
                        'CreatedTime' => 
                        array (
                          'title' => '授权时间',
                          'description' => '授权时间',
                          'type' => 'string',
                          'example' => 'Sun, 02 Jan 2022 16:00:00 GMT',
                        ),
                        'ApiName' => 
                        array (
                          'title' => 'API名称',
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'sd2_h5_player_history_competition',
                        ),
                        'RegionId' => 
                        array (
                          'title' => '地区ID',
                          'description' => '地区ID',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'Path' => 
                        array (
                          'title' => 'API的请求路径',
                          'description' => 'API的请求路径',
                          'type' => 'string',
                          'example' => '/api/offline/cacheData',
                        ),
                        'Method' => 
                        array (
                          'title' => 'API的请求HTTP Method',
                          'description' => 'API的请求HTTP Method',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                        'StageNameAndAuth' => 
                        array (
                          'description' => '环境名称与对应环境授权有效期的map集合',
                          'type' => 'object',
                          'additionalProperties' => 
                          array (
                            'type' => 'string',
                            'example' => 'Sun, 02 Jan 2022 16:00:00 GMT',
                            'description' => '授权有效期',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"6C87A26A-6A18-4B8E-8099-705278381A2C\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"AppApiRelationInfos\\": {\\n    \\"AppApiRelationInfo\\": [\\n      {\\n        \\"ApiId\\": \\"c625795a1e664782a918eaa629e96ab5\\",\\n        \\"AuthorizationSource\\": \\"SELF\\",\\n        \\"Description\\": \\"b1008kz\\",\\n        \\"GroupName\\": \\"manager_vehicles\\",\\n        \\"GroupId\\": \\"38bed48d664149e4b9b5ea576319673f\\",\\n        \\"Operator\\": \\"PROVIDER\\",\\n        \\"CreatedTime\\": \\"Sun, 02 Jan 2022 16:00:00 GMT\\",\\n        \\"ApiName\\": \\"sd2_h5_player_history_competition\\",\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"Path\\": \\"/api/offline/cacheData\\",\\n        \\"Method\\": \\"POST\\",\\n        \\"StageNameAndAuth\\": {\\n          \\"key\\": \\"Sun, 02 Jan 2022 16:00:00 GMT\\"\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '根据应用查询API列表，返回环境聚合的结果',
    ),
    'DescribeGroupLatency' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2023-03-30T16:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2023-04-14T06:26:14Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => 'd825094fdd114a869f5adb443d9b7ead',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '75DC3AB0-421C-5371-8170-86AEABF77AD0',
              ),
              'LatencyPacket' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '平均时延信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '延迟数，单位：ms',
                          'type' => 'string',
                          'example' => '100.0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '时间节点，按照ISO8601标准表示，格式为：YYYY-MM-DDThh:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2023-03-30T16:10:00Z',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- latency：后端处理延迟
- gatewayLatency：API网关处理延迟',
                          'type' => 'string',
                          'example' => 'latency',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"75DC3AB0-421C-5371-8170-86AEABF77AD0\\",\\n  \\"LatencyPacket\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"100.0\\",\\n        \\"ItemTime\\": \\"2023-03-30T16:10:00Z\\",\\n        \\"Item\\": \\"latency\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询分组的平均延迟',
      'summary' => '查询指定分组指定环境下，分组的平均延迟。',
    ),
    'DescribeGroupTraffic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2023-01-29T01:27:43Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2023-06-16T02:16:53Z',
          ),
        ),
        2 => 
        array (
          'name' => 'StageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
            'type' => 'string',
            'required' => true,
            'example' => 'RELEASE ',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要操作API所属分组ID',
            'type' => 'string',
            'required' => true,
            'example' => '16df9d11caa04900bcafe23b38a81600',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
              'TrafficPerSecond' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MonitorItem' => 
                  array (
                    'description' => '每秒的流量信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemValue' => 
                        array (
                          'description' => '对应值',
                          'type' => 'string',
                          'example' => '100.0',
                        ),
                        'ItemTime' => 
                        array (
                          'description' => '对应时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ',
                          'type' => 'string',
                          'example' => '2023-01-29T01:30:00Z',
                        ),
                        'Item' => 
                        array (
                          'description' => '指标
- inbound 请求流量
- outbound 应答流量',
                          'type' => 'string',
                          'example' => 'inbound',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\",\\n  \\"TrafficPerSecond\\": {\\n    \\"MonitorItem\\": [\\n      {\\n        \\"ItemValue\\": \\"100.0\\",\\n        \\"ItemTime\\": \\"2023-01-29T01:30:00Z\\",\\n        \\"Item\\": \\"inbound\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询分组流量',
      'summary' => '查询指定api分组的流量。',
    ),
    'ModifyApiGroupInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要迁移的API分组',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '01c97ed08a614118849b00079753d1e2',
          ),
        ),
        1 => 
        array (
          'name' => 'TargetInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apigateway-bj-c325375b1ebe',
          ),
        ),
        2 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'migrate',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定规则所适用的对象标签，可设置多个',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => true,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'E07AEFF0-9FB0-599E-8F12-B418D8AE1F3D',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E07AEFF0-9FB0-599E-8F12-B418D8AE1F3D\\"\\n}","type":"json"}]',
      'title' => '修改api分组所属的实例',
    ),
    'ModifyApiGroupNetworkPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要修改的分组id',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b0162c75d7d34ff48506f1aff878b05e',
          ),
        ),
        1 => 
        array (
          'name' => 'HttpsPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'https安全策略',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS1_1_TLS1_0',
          ),
        ),
        2 => 
        array (
          'name' => 'InternetEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否支持公网访问，**关闭后将无法通过公网访问API网关，请谨慎操作**
- **True**：支持公网访问
- **False**：关闭公网访问',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'InternetIPV6Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启ipv6
- **True**：开启
- **False**：关闭',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'VpcIntranetEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启内网VPC域名

- **True**：开通内网VPC域名

- **False**：关闭内网VPC域名',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcSlbIntranetEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启API网关自调用域名',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'InnerDomainEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否支持分组的公网二级域名调用
- **True**：支持分组公网二级域名调用
- **False**：关闭分组公网二级域名调用，仅支持自定义域名访问',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4E707B25-5119-5ACF-9D26-7D2A2762F05C',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E707B25-5119-5ACF-9D26-7D2A2762F05C\\"\\n}","type":"json"}]',
      'title' => '修改api分组的网络策略',
      'summary' => '修改api分组的网络。',
    ),
    'DetachApiProduct' => 
    array (
      'summary' => '解除API与API产品的绑定关系',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiProductId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API产品ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
          ),
        ),
        1 => 
        array (
          'name' => 'Apis',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'API 列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ApiId' => 
                array (
                  'description' => 'API的ID',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ba84c55eca46488598da17c0609f3ead',
                ),
                'StageName' => 
                array (
                  'description' => '环境名称，取值为：

- **RELEASE**：线上
- **PRE**：预发
- **TEST**：测试',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'RELEASE',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '98E4A7DC-1EA6-5E6A-ACFE-91B60CE7D4BB',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"98E4A7DC-1EA6-5E6A-ACFE-91B60CE7D4BB\\"\\n}","type":"json"}]',
      'title' => '解除API与API产品的绑定关系',
    ),
    'SetApiProductsAuthorities' => 
    array (
      'summary' => '批量授权API产品给指定APP',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '111385984',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiProductIds',
          'in' => 'query',
          'allowEmptyValue' => false,
          'style' => 'simple',
          'schema' => 
          array (
            'description' => 'API产品ID列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'API产品ID',
              'type' => 'string',
              'required' => false,
              'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'AuthValidTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权有效时间的截止时间，请设置格林尼治标准时间(GMT), 如果为空，即为授权永久有效。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-06-12T03:07:37Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权描述信息',
            'type' => 'string',
            'required' => false,
            'example' => '描述信息',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '2603F41E-77FC-59A3-840E-296578A9BDE0',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2603F41E-77FC-59A3-840E-296578A9BDE0\\"\\n}","type":"json"}]',
      'title' => '批量授权API产品给指定APP',
    ),
    'DescribeApiProductsByApp' => 
    array (
      'summary' => '根据APP查询有权限的API产品列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '110962435',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '0B805201-AF4C-5788-AC9E-C3EEC83DC82A',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数，默认值10',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '分页参数：当前页码，默认值1',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'ApiProductInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiProductInfo' => 
                  array (
                    'description' => 'API产品信息列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiProductId' => 
                        array (
                          'description' => 'API产品ID',
                          'type' => 'string',
                          'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0B805201-AF4C-5788-AC9E-C3EEC83DC82A\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 4,\\n  \\"ApiProductInfoList\\": {\\n    \\"ApiProductInfo\\": [\\n      {\\n        \\"ApiProductId\\": \\"117b7a64a8b3f064eaa4a47ac62aac5e\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '根据APP查询有权限的API产品列表',
    ),
    'DescribeApiProductApis' => 
    array (
      'summary' => '查询API产品绑定的API列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiProductId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API产品ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数，每页显示条数，默认值10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '03442A3D-3B7D-434C-8A95-A5FEB989B519',
              ),
              'PageNumber' => 
              array (
                'description' => '分页参数：当前页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'ApiInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiInfo' => 
                  array (
                    'description' => '返回的API列表信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回的API列表信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => 'dd46297680014a7e8e318308f3345951',
                        ),
                        'Description' => 
                        array (
                          'description' => 'API的描述信息',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'api分组名称',
                          'type' => 'string',
                          'example' => 'testApiGroup',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'api分组ID',
                          'type' => 'string',
                          'example' => '1e377f18142345dfb700cd8911c2463a',
                        ),
                        'Path' => 
                        array (
                          'description' => 'API的请求路径',
                          'type' => 'string',
                          'example' => '/test',
                        ),
                        'Method' => 
                        array (
                          'description' => 'API的请求方法',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                        'StageName' => 
                        array (
                          'description' => 'API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'testApi',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"03442A3D-3B7D-434C-8A95-A5FEB989B519\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 4,\\n  \\"ApiInfoList\\": {\\n    \\"ApiInfo\\": [\\n      {\\n        \\"ApiId\\": \\"dd46297680014a7e8e318308f3345951\\",\\n        \\"Description\\": \\"test\\",\\n        \\"GroupName\\": \\"testApiGroup\\",\\n        \\"GroupId\\": \\"1e377f18142345dfb700cd8911c2463a\\",\\n        \\"Path\\": \\"/test\\",\\n        \\"Method\\": \\"POST\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"testApi\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询API产品绑定的API列表',
    ),
    'DescribeAppsByApiProduct' => 
    array (
      'summary' => '根据API产品查询授权了的APP列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiProductId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API产品ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App名称',
            'type' => 'string',
            'required' => false,
            'example' => 'testApp',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'AC866798-62D3-52F4-8AB5-CA149A53984F',
              ),
              'PageSize' => 
              array (
                'description' => '分页参数：每页显示条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '分页参数：当前页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'AuthorizedApps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AuthorizedApp' => 
                  array (
                    'description' => '授权的APP信息列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => 'App名称',
                          'type' => 'string',
                          'example' => 'APP_02580_DEV',
                        ),
                        'Description' => 
                        array (
                          'description' => '授权说明',
                          'type' => 'string',
                          'example' => '授权描述',
                        ),
                        'AuthValidTime' => 
                        array (
                          'description' => '授权有效时间的截止时间，格林尼治标准时间(GMT)，如果为空，即为授权永久有效',
                          'type' => 'string',
                          'example' => '2023-06-17T03:41:53Z',
                        ),
                        'AppId' => 
                        array (
                          'description' => 'App的ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '110982419',
                        ),
                        'Extend' => 
                        array (
                          'description' => '扩展信息',
                          'type' => 'string',
                          'example' => 'extra info',
                        ),
                        'AuthorizedTime' => 
                        array (
                          'description' => '授权操作的时间，格林尼治标准时间(GMT)',
                          'type' => 'string',
                          'example' => '2016-07-21T06:17:20Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AC866798-62D3-52F4-8AB5-CA149A53984F\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 4,\\n  \\"AuthorizedApps\\": {\\n    \\"AuthorizedApp\\": [\\n      {\\n        \\"AppName\\": \\"APP_02580_DEV\\",\\n        \\"Description\\": \\"授权描述\\",\\n        \\"AuthValidTime\\": \\"2023-06-17T03:41:53Z\\",\\n        \\"AppId\\": 110982419,\\n        \\"Extend\\": \\"extra info\\",\\n        \\"AuthorizedTime\\": \\"2016-07-21T06:17:20Z\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '根据API产品查询授权了的APP列表',
    ),
    'AttachApiProduct' => 
    array (
      'summary' => '将API绑定到指定的API产品（如果指定的API产品不存在，将自动创建）',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiProductId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API产品ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
          ),
        ),
        1 => 
        array (
          'name' => 'Apis',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'API 列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'API 列表',
              'type' => 'object',
              'properties' => 
              array (
                'ApiId' => 
                array (
                  'description' => 'API的ID',
                  'type' => 'string',
                  'required' => true,
                  'example' => '551877242a4b4f3a84a56b7c3570e4a7',
                ),
                'StageName' => 
                array (
                  'description' => '环境名称，枚举为：

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'RELEASE',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'BA20890E-75C7-41BC-9C8B-73276B58F550',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"BA20890E-75C7-41BC-9C8B-73276B58F550\\"\\n}","type":"json"}]',
      'title' => '将API绑定到指定API产品',
    ),
    'DeleteApiProduct' => 
    array (
      'summary' => '删除API产品，会自动删除API与API产品的绑定关系（如果存在API产品与APP的授权关系，将删除失败）',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiProductId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API产品ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ002',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ002\\"\\n}","type":"json"}]',
      'title' => '删除API产品',
    ),
    'RemoveApiProductsAuthorities' => 
    array (
      'summary' => '批量移除API产品对指定APP的授权',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '110982490',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiProductIds',
          'in' => 'query',
          'style' => 'simple',
          'schema' => 
          array (
            'description' => 'API产品ID列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'API产品ID',
              'type' => 'string',
              'required' => false,
              'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEB6EC62-B6C7-5082-A45A-45A204724AC2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEB6EC62-B6C7-5082-A45A-45A204724AC2\\"\\n}","type":"json"}]',
      'title' => '批量移除API产品对指定APP的授权',
    ),
    'SetAppsAuthToApiProduct' => 
    array (
      'summary' => '批量授权多个APP给指定的API产品',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiProductId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API产品ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '117b7a64a8b3f064eaa4a47ac62aac5e',
          ),
        ),
        1 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '应用ID列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '授权的应用ID',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '110966607',
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'AuthValidTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权有效时间的截止时间，请设置格林尼治标准时间(GMT), 如果为空，即为授权永久有效。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-05-31T08:15:39Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息',
            'type' => 'string',
            'required' => false,
            'example' => '描述信息',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\"\\n}","type":"json"}]',
      'title' => '批量授权多个APP给指定API产品',
    ),
    'DescribeApisByVpcAccess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Vpc授权的名称',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'lynkco-iov-uat',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页行数，最大值100，默认值为10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的页码，默认是1，起始是1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '指定要查询的页码，默认是1，起始是1',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '4E707B25-5119-5ACF-9D26-7D2A2762F05C',
              ),
              'PageSize' => 
              array (
                'description' => '指定分页查询时每页行数，最大值100，默认值为10',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'ApiVpcAccessInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApiVpcAccessInfo' => 
                  array (
                    'description' => '由apiinfo组成的数组格式，返回api的信息项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ApiId' => 
                        array (
                          'description' => 'API的ID',
                          'type' => 'string',
                          'example' => '09839002de484e76b5a213b040a6a3ca',
                        ),
                        'VpcId' => 
                        array (
                          'description' => 'vpc id',
                          'type' => 'string',
                          'example' => 'vpc-2ze7bj64wstznvftrskbk',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'VPC授权中的实例ID或IP',
                          'type' => 'string',
                          'example' => 'Ib-04e41XXXXXd95e9c1',
                        ),
                        'Port' => 
                        array (
                          'description' => '端口号',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '443',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'StageId' => 
                        array (
                          'description' => '运行环境编号',
                          'type' => 'string',
                          'example' => '57e17906a69b4424914fb1e05f67c78a',
                        ),
                        'VpcName' => 
                        array (
                          'description' => 'VPC授权的名称',
                          'type' => 'string',
                          'example' => 'aliYun_service_prod',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '分组ID',
                          'type' => 'string',
                          'example' => '41c33748cbfb41f6b00870156203b72a',
                        ),
                        'GroupName' => 
                        array (
                          'description' => 'API分组名称',
                          'type' => 'string',
                          'example' => 'RT_PLU_IP_CTRL_group',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述，不超过200个字符',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'StageName' => 
                        array (
                          'description' => 'API的环境。

- **RELEASE**: 线上
- **PRE**: 预发
- **TEST**: 测试',
                          'type' => 'string',
                          'example' => 'RELEASE',
                        ),
                        'ApiName' => 
                        array (
                          'description' => 'API名称',
                          'type' => 'string',
                          'example' => 'iwc',
                        ),
                        'Path' => 
                        array (
                          'description' => 'API请求路径',
                          'type' => 'string',
                          'example' => '/api/v1/friends/rc/status',
                        ),
                        'Method' => 
                        array (
                          'description' => 'API的请求HTTP Method',
                          'type' => 'string',
                          'example' => 'POST',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"4E707B25-5119-5ACF-9D26-7D2A2762F05C\\",\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 12,\\n  \\"ApiVpcAccessInfos\\": {\\n    \\"ApiVpcAccessInfo\\": [\\n      {\\n        \\"ApiId\\": \\"09839002de484e76b5a213b040a6a3ca\\",\\n        \\"VpcId\\": \\"vpc-2ze7bj64wstznvftrskbk\\",\\n        \\"InstanceId\\": \\"Ib-04e41XXXXXd95e9c1\\",\\n        \\"Port\\": 443,\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"StageId\\": \\"57e17906a69b4424914fb1e05f67c78a\\",\\n        \\"VpcName\\": \\"aliYun_service_prod\\",\\n        \\"GroupId\\": \\"41c33748cbfb41f6b00870156203b72a\\",\\n        \\"GroupName\\": \\"RT_PLU_IP_CTRL_group\\",\\n        \\"Description\\": \\"123\\",\\n        \\"StageName\\": \\"RELEASE\\",\\n        \\"ApiName\\": \\"iwc\\",\\n        \\"Path\\": \\"/api/v1/friends/rc/status\\",\\n        \\"Method\\": \\"POST\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '通过Vpc授权信息查询绑定该VPC授权的API信息',
      'summary' => '查询指定地域内指定api的访问控制绑定情况。',
    ),
    'DeleteAppCode' => 
    array (
      'summary' => '删除指定App的AppCode。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '111265074',
          ),
        ),
        1 => 
        array (
          'name' => 'AppCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的APPCode编码',
            'type' => 'string',
            'required' => true,
            'example' => '0d13f021c5cd4997831a9717e75b0663',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E8515BA6-81CD-4191-A7CF-C4FCDD3C0D99\\"\\n}","type":"json"}]',
      'title' => '删除App的AppCode',
    ),
    'DeleteAppKey' => 
    array (
      'summary' => '删除指定App的AppKey和AppSecret。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '110840611',
          ),
        ),
        1 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的Key，用于调用API时使用',
            'type' => 'string',
            'required' => true,
            'example' => '203708622',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => '79EF055D-AC00-5161-8F35-6A36AAED7422',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EF055D-AC00-5161-8F35-6A36AAED7422\\"\\n}","type":"json"}]',
      'title' => '删除App的AppKey和AppSecret',
    ),
    'CreateAppCode' => 
    array (
      'summary' => '给App添加AppCode。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的编号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '111203109',
          ),
        ),
        1 => 
        array (
          'name' => 'AppCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的APPCode编码',
            'type' => 'string',
            'required' => false,
            'example' => '3aaf905a0a1f4f0eabc6d891dfa08afc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '418DAAE7-A0C2-5E9C-ADFF-4CD14A474F88',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"418DAAE7-A0C2-5E9C-ADFF-4CD14A474F88\\"\\n}","type":"json"}]',
      'title' => 'App添加AppCode',
    ),
    'CreateAppKey' => 
    array (
      'summary' => 'App添加AppKey和AppSecret。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'APP的ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '111053351',
          ),
        ),
        1 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的key',
            'type' => 'string',
            'required' => false,
            'example' => '204203237',
          ),
        ),
        2 => 
        array (
          'name' => 'AppSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用AppSecret',
            'type' => 'string',
            'required' => false,
            'example' => '6f0a4ad7918a4b41a57fc087d5b066d0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5D524309-6BED-5BB4-A735-F7D9F98B7B88',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5D524309-6BED-5BB4-A735-F7D9F98B7B88\\"\\n}","type":"json"}]',
      'title' => 'App添加AppKey和AppSecret',
    ),
    'DescribeInstanceClusterInfo' => 
    array (
      'summary' => '查询专享实例集群信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专享实例集群名称',
            'type' => 'string',
            'required' => false,
            'example' => 'testvpc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '本次请求的ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'InstanceClusterName' => 
              array (
                'description' => '专享实例集群名称',
                'type' => 'string',
                'example' => 'test',
              ),
              'InstanceClusterId' => 
              array (
                'description' => '纳管该专享实例的专享实例集群的ID',
                'type' => 'string',
                'example' => 'apigateway-ht-04e41d95e9c1
',
              ),
              'InstanceClusterStatus' => 
              array (
                'description' => '专享实例集群状态',
                'type' => 'string',
                'example' => 'RUNNING',
              ),
              'InstanceClusterVersion' => 
              array (
                'description' => '专享实例集群版本',
                'type' => 'string',
                'example' => '3.5.3.856',
              ),
              'Description' => 
              array (
                'description' => '描述，不超过200个字符',
                'type' => 'string',
                'example' => 'v0.0.4',
              ),
              'RegionId' => 
              array (
                'description' => '实例所属地域的ID',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'CreatedTime' => 
              array (
                'description' => '创建时间',
                'type' => 'string',
                'example' => '2022-10-10T18:29:27',
              ),
              'ModifiedTime' => 
              array (
                'description' => '修改时间',
                'type' => 'string',
                'example' => '2023-06-19 10:40:29 +0800',
              ),
              'InstanceClusterAttribute' => 
              array (
                'description' => '专享实例集群的详细信息',
                'type' => 'object',
                'properties' => 
                array (
                  'HttpsPolicies' => 
                  array (
                    'description' => 'https安全策略',
                    'type' => 'string',
                    'example' => 'HTTPS2_TLS1_0',
                  ),
                  'InternetEgressAddress' => 
                  array (
                    'description' => '公网出口地址',
                    'type' => 'string',
                    'example' => '39.106.XX.XX',
                  ),
                  'IntranetEgressAddress' => 
                  array (
                    'description' => '内网出口地址',
                    'type' => 'string',
                    'example' => '100.104.XX.XX/26',
                  ),
                  'VpcIntranetEnable' => 
                  array (
                    'description' => '是否开启内网VPC域名',
                    'type' => 'boolean',
                  ),
                  'IntranetSegments' => 
                  array (
                    'description' => '自定义网段，所配置的网段将被视为私网地址',
                    'type' => 'string',
                    'example' => '123.0.0.1',
                  ),
                  'UserVpcId' => 
                  array (
                    'description' => '客户端vpcid',
                    'type' => 'string',
                    'example' => 'vpc-2zew2v4vcg78mXXXX',
                  ),
                  'UserVswitchId' => 
                  array (
                    'description' => '客户端vpc的交换机',
                    'type' => 'string',
                    'example' => 'vsw-2zecr5r7ao44tslsXXXX',
                  ),
                  'VpcOwnerId' => 
                  array (
                    'description' => 'VPC实例所属账号ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '165438596694XXXX',
                  ),
                  'IPV4AclId' => 
                  array (
                    'description' => 'IPV4访问控制策略ID',
                    'type' => 'string',
                    'example' => 'acl-t4n8i4rvvp70kcyuoXXXX',
                  ),
                  'IPV4AclName' => 
                  array (
                    'description' => 'IPV4访问控制策略名称',
                    'type' => 'string',
                    'example' => 'test-black',
                  ),
                  'IPV4AclStatus' => 
                  array (
                    'description' => '是否开启IPV4访问控制功能。取值：

- on：开启访问控制
- off：关闭访问控制',
                    'type' => 'string',
                    'example' => 'on',
                  ),
                  'IPV4AclType' => 
                  array (
                    'description' => 'IPV4访问控制策略类型

- black：黑名单

- white：白名单',
                    'type' => 'string',
                    'example' => 'black',
                  ),
                  'EgressIpv6Enable' => 
                  array (
                    'description' => 'IPV6出访能力是否支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'SupportIpv6' => 
                  array (
                    'description' => '是否支持ipv6',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'IPV6AclName' => 
                  array (
                    'description' => 'IPV6访问控制策略名称',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'IPV6AclId' => 
                  array (
                    'description' => 'IPV6访问控制策略ID',
                    'type' => 'string',
                    'example' => 'acl-t4nevzhwbpe7cup18XXXX',
                  ),
                  'IPV6AclStatus' => 
                  array (
                    'description' => '是否开启IPV6访问控制功能。取值：

- **on**：开启访问控制

- **off**：关闭访问控制',
                    'type' => 'string',
                    'example' => 'on',
                  ),
                  'IPV6AclType' => 
                  array (
                    'description' => 'IPV6访问控制策略类型
- black：黑名单                                 
- white：白名单',
                    'type' => 'string',
                    'example' => 'white',
                  ),
                  'VipTypeList' => 
                  array (
                    'description' => '实例集群已开通的VIP列表',
                    'type' => 'string',
                    'example' => 'VPC_INTERNET_IPV6',
                  ),
                  'VpcSlbIntranetEnable' => 
                  array (
                    'description' => '是否开启API网关自调用域名',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'ConnectVpcId' => 
                  array (
                    'description' => 'VPC融合类型实例集群联通的用户VPC ID',
                    'type' => 'string',
                    'example' => 'vpc-p0w3kxxxxxxxxxxxxxxxx',
                  ),
                  'ConnectCidrBlocks' => 
                  array (
                    'description' => 'VPC融合类型实例集群可以访问到的用户VPC的内网网段',
                    'type' => 'string',
                    'example' => '["192.168.1.0/24","192.168.0.0/24"]',
                  ),
                ),
              ),
              'InstanceList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '实例集群包含的专享实例列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceName' => 
                        array (
                          'description' => '实例名称',
                          'type' => 'string',
                          'example' => 'tf-testacceu-central-1apigatewayinstance8752',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '专享实例ID',
                          'type' => 'string',
                          'example' => 'apigateway-ht-04e41d95e9c1',
                        ),
                        'Status' => 
                        array (
                          'description' => '专享实例状态',
                          'type' => 'string',
                          'example' => 'RUNNING',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '调用失败时，返回的出错信息',
                          'type' => 'string',
                          'example' => 'Instance not found.',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'InstanceClusterType' => 
              array (
                'description' => '专享实例集群类型',
                'type' => 'string',
                'example' => 'normal',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"InstanceClusterName\\": \\"test\\",\\n  \\"InstanceClusterId\\": \\"apigateway-ht-04e41d95e9c1\\\\n\\",\\n  \\"InstanceClusterStatus\\": \\"RUNNING\\",\\n  \\"InstanceClusterVersion\\": \\"3.5.3.856\\",\\n  \\"Description\\": \\"v0.0.4\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"CreatedTime\\": \\"2022-10-10T18:29:27\\",\\n  \\"ModifiedTime\\": \\"2023-06-19 10:40:29 +0800\\",\\n  \\"InstanceClusterAttribute\\": {\\n    \\"HttpsPolicies\\": \\"HTTPS2_TLS1_0\\",\\n    \\"InternetEgressAddress\\": \\"39.106.XX.XX\\",\\n    \\"IntranetEgressAddress\\": \\"100.104.XX.XX/26\\",\\n    \\"VpcIntranetEnable\\": true,\\n    \\"IntranetSegments\\": \\"123.0.0.1\\",\\n    \\"UserVpcId\\": \\"vpc-2zew2v4vcg78mXXXX\\",\\n    \\"UserVswitchId\\": \\"vsw-2zecr5r7ao44tslsXXXX\\",\\n    \\"VpcOwnerId\\": 0,\\n    \\"IPV4AclId\\": \\"acl-t4n8i4rvvp70kcyuoXXXX\\",\\n    \\"IPV4AclName\\": \\"test-black\\",\\n    \\"IPV4AclStatus\\": \\"on\\",\\n    \\"IPV4AclType\\": \\"black\\",\\n    \\"EgressIpv6Enable\\": true,\\n    \\"SupportIpv6\\": true,\\n    \\"IPV6AclName\\": \\"test\\",\\n    \\"IPV6AclId\\": \\"acl-t4nevzhwbpe7cup18XXXX\\",\\n    \\"IPV6AclStatus\\": \\"on\\",\\n    \\"IPV6AclType\\": \\"white\\",\\n    \\"VipTypeList\\": \\"VPC_INTERNET_IPV6\\",\\n    \\"VpcSlbIntranetEnable\\": false,\\n    \\"ConnectVpcId\\": \\"vpc-p0w3kxxxxxxxxxxxxxxxx\\",\\n    \\"ConnectCidrBlocks\\": \\"[\\\\\\"192.168.1.0/24\\\\\\",\\\\\\"192.168.0.0/24\\\\\\"]\\"\\n  },\\n  \\"InstanceList\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"InstanceName\\": \\"tf-testacceu-central-1apigatewayinstance8752\\",\\n        \\"InstanceId\\": \\"apigateway-ht-04e41d95e9c1\\",\\n        \\"Status\\": \\"RUNNING\\",\\n        \\"ErrorMessage\\": \\"Instance not found.\\"\\n      }\\n    ]\\n  },\\n  \\"InstanceClusterType\\": \\"normal\\"\\n}","type":"json"}]',
      'title' => '查询专享实例集群信息',
    ),
    'DescribeInstanceClusterList' => 
    array (
      'summary' => '查询专享实例集群列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专享实例集群名称',
            'type' => 'string',
            'required' => false,
            'example' => 'test-cluster',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '纳管该专享实例的专享实例集群的ID',
            'type' => 'string',
            'required' => false,
            'example' => 'apigateway-cluster-hz-xxxxxxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条目',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回指定的页码',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BZ015',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果的总条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageNumber' => 
              array (
                'description' => '返回指定的页码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '每页条目',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'InstanceClusters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceCluster' => 
                  array (
                    'description' => '专享实例集群列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceClusterName' => 
                        array (
                          'description' => '专享实例集群名称',
                          'type' => 'string',
                          'example' => 'test-cluster',
                        ),
                        'InstanceClusterId' => 
                        array (
                          'description' => '纳管该专享实例的专享实例集群的ID',
                          'type' => 'string',
                          'example' => 'apigateway-cluster-hz-xxxxxxxxxxxx
',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息',
                          'type' => 'string',
                          'example' => 'Test TrafficControl',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2023-08-14T17:46:59+08:00',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '最后修改时间，格林威治时间',
                          'type' => 'string',
                          'example' => '2024-01-12T10:11:08+08:00',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在的region',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'InstanceClusterStatus' => 
                        array (
                          'description' => '专享实例集群状态',
                          'type' => 'string',
                          'example' => 'RUNNING',
                        ),
                        'InstanceClusterType' => 
                        array (
                          'description' => '专享实例集群类型',
                          'type' => 'string',
                          'example' => 'normal',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BZ015\\",\\n  \\"TotalCount\\": 2,\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"InstanceClusters\\": {\\n    \\"InstanceCluster\\": [\\n      {\\n        \\"InstanceClusterName\\": \\"test-cluster\\",\\n        \\"InstanceClusterId\\": \\"apigateway-cluster-hz-xxxxxxxxxxxx\\\\n\\",\\n        \\"Description\\": \\"Test TrafficControl\\",\\n        \\"CreatedTime\\": \\"2023-08-14T17:46:59+08:00\\",\\n        \\"ModifiedTime\\": \\"2024-01-12T10:11:08+08:00\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"InstanceClusterStatus\\": \\"RUNNING\\",\\n        \\"InstanceClusterType\\": \\"normal\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询专享实例集群',
    ),
    'DescribeAppSecurities' => 
    array (
      'summary' => '查询App的密钥信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'App的编号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '110862931',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'EF924FE4-2EDD-4CD3-89EC-34E4708574E7',
              ),
              'AppSecuritys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AppSecurity' => 
                  array (
                    'description' => '关联的安全策略信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppSecret' => 
                        array (
                          'description' => '应用AppSecret',
                          'type' => 'string',
                          'example' => 'ea5291a7aff343769eb3139a2f6de8c9',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '修改时间（格林威治时间）',
                          'type' => 'string',
                          'example' => '2023-08-14T18:03:00+08:00',
                        ),
                        'AppKey' => 
                        array (
                          'description' => 'App的key',
                          'type' => 'string',
                          'example' => '34379343',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'string',
                          'example' => '2021-09-14T18:50:59',
                        ),
                        'AppCode' => 
                        array (
                          'description' => '应用的AppCode',
                          'type' => 'string',
                          'example' => 'd2350ecd62c44cbfbe35a7f182e35105',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EF924FE4-2EDD-4CD3-89EC-34E4708574E7\\",\\n  \\"AppSecuritys\\": {\\n    \\"AppSecurity\\": [\\n      {\\n        \\"AppSecret\\": \\"ea5291a7aff343769eb3139a2f6de8c9\\",\\n        \\"ModifiedTime\\": \\"2023-08-14T18:03:00+08:00\\",\\n        \\"AppKey\\": \\"34379343\\",\\n        \\"CreatedTime\\": \\"2021-09-14T18:50:59\\",\\n        \\"AppCode\\": \\"d2350ecd62c44cbfbe35a7f182e35105\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询App的密钥信息',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'apigateway.cn-qingdao.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'apigateway.cn-beijing.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'apigateway.cn-zhangjiakou.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'apigateway.cn-huhehaote.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'apigateway.cn-wulanchabu.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'apigateway.cn-hangzhou.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'apigateway.cn-shanghai.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'apigateway.cn-shenzhen.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-heyuan',
      'endpoint' => 'apigateway.cn-heyuan.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-guangzhou',
      'endpoint' => 'apigateway.cn-guangzhou.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'apigateway.cn-chengdu.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'apigateway.cn-hongkong.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'apigateway.ap-northeast-1.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'ap-northeast-2',
      'endpoint' => 'apigateway.ap-northeast-2.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'apigateway.ap-southeast-1.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'apigateway.ap-southeast-2.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'apigateway.ap-southeast-3.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'apigateway.ap-southeast-5.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'ap-southeast-6',
      'endpoint' => 'apigateway.ap-southeast-6.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'apigateway.us-east-1.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'apigateway.us-west-1.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'apigateway.eu-west-1.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'apigateway.eu-central-1.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'apigateway.ap-south-1.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'apigateway.me-east-1.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'apigateway.cn-hangzhou-finance.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'apigateway.cn-shanghai-finance-1.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'apigateway.cn-shenzhen-finance-1.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'ap-southeast-7',
      'endpoint' => 'apigateway.ap-southeast-7.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'apigateway.cn-beijing-finance-1.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'me-central-1',
      'endpoint' => 'apigateway.me-central-1.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-heyuan-acdr-1',
      'endpoint' => 'apigateway.cn-heyuan-acdr-1.aliyuncs.com',
    ),
  ),
);