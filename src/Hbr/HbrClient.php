<?php

declare(strict_types=1);

namespace Dew\Acs\Hbr;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createVault(array $arguments = [])
 * @method \Http\Promise\Promise createVaultAsync($arguments = [])
 * @method \Dew\Acs\Result createReplicationVault(array $arguments = [])
 * @method \Http\Promise\Promise createReplicationVaultAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVault(array $arguments = [])
 * @method \Http\Promise\Promise deleteVaultAsync($arguments = [])
 * @method \Dew\Acs\Result updateVault(array $arguments = [])
 * @method \Http\Promise\Promise updateVaultAsync($arguments = [])
 * @method \Dew\Acs\Result describeVaults(array $arguments = [])
 * @method \Http\Promise\Promise describeVaultsAsync($arguments = [])
 * @method \Dew\Acs\Result createBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise createBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result disableBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise disableBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result enableBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise enableBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result updateBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPlans(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPlansAsync($arguments = [])
 * @method \Dew\Acs\Result executeBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise executeBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result createPolicyV2(array $arguments = [])
 * @method \Http\Promise\Promise createPolicyV2Async($arguments = [])
 * @method \Dew\Acs\Result deletePolicyV2(array $arguments = [])
 * @method \Http\Promise\Promise deletePolicyV2Async($arguments = [])
 * @method \Dew\Acs\Result updatePolicyV2(array $arguments = [])
 * @method \Http\Promise\Promise updatePolicyV2Async($arguments = [])
 * @method \Dew\Acs\Result describePoliciesV2(array $arguments = [])
 * @method \Http\Promise\Promise describePoliciesV2Async($arguments = [])
 * @method \Dew\Acs\Result createPolicyBindings(array $arguments = [])
 * @method \Http\Promise\Promise createPolicyBindingsAsync($arguments = [])
 * @method \Dew\Acs\Result deletePolicyBinding(array $arguments = [])
 * @method \Http\Promise\Promise deletePolicyBindingAsync($arguments = [])
 * @method \Dew\Acs\Result updatePolicyBinding(array $arguments = [])
 * @method \Http\Promise\Promise updatePolicyBindingAsync($arguments = [])
 * @method \Dew\Acs\Result describePolicyBindings(array $arguments = [])
 * @method \Http\Promise\Promise describePolicyBindingsAsync($arguments = [])
 * @method \Dew\Acs\Result executePolicyV2(array $arguments = [])
 * @method \Http\Promise\Promise executePolicyV2Async($arguments = [])
 * @method \Dew\Acs\Result deleteBackupClient(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupClientAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBackupClientResource(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupClientResourceAsync($arguments = [])
 * @method \Dew\Acs\Result updateClientSettings(array $arguments = [])
 * @method \Http\Promise\Promise updateClientSettingsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupClients(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupClientsAsync($arguments = [])
 * @method \Dew\Acs\Result installBackupClients(array $arguments = [])
 * @method \Http\Promise\Promise installBackupClientsAsync($arguments = [])
 * @method \Dew\Acs\Result uninstallBackupClients(array $arguments = [])
 * @method \Http\Promise\Promise uninstallBackupClientsAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeBackupClients(array $arguments = [])
 * @method \Http\Promise\Promise upgradeBackupClientsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise deleteSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result describeOtsTableSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise describeOtsTableSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecoverableOtsInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeRecoverableOtsInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result searchHistoricalSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise searchHistoricalSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUdmSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise describeUdmSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result createRestoreJob(array $arguments = [])
 * @method \Http\Promise\Promise createRestoreJobAsync($arguments = [])
 * @method \Dew\Acs\Result cancelRestoreJob(array $arguments = [])
 * @method \Http\Promise\Promise cancelRestoreJobAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreJobs2(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreJobs2Async($arguments = [])
 * @method \Dew\Acs\Result cancelBackupJob(array $arguments = [])
 * @method \Http\Promise\Promise cancelBackupJobAsync($arguments = [])
 * @method \Dew\Acs\Result createBackupJob(array $arguments = [])
 * @method \Http\Promise\Promise createBackupJobAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupJobs2(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupJobs2Async($arguments = [])
 * @method \Dew\Acs\Result createHanaBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise createHanaBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result createHanaInstance(array $arguments = [])
 * @method \Http\Promise\Promise createHanaInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createClients(array $arguments = [])
 * @method \Http\Promise\Promise createClientsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteClient(array $arguments = [])
 * @method \Http\Promise\Promise deleteClientAsync($arguments = [])
 * @method \Dew\Acs\Result createHanaRestore(array $arguments = [])
 * @method \Http\Promise\Promise createHanaRestoreAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHanaBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteHanaBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHanaInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteHanaInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result uninstallClient(array $arguments = [])
 * @method \Http\Promise\Promise uninstallClientAsync($arguments = [])
 * @method \Dew\Acs\Result updateHanaBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateHanaBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result enableHanaBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise enableHanaBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result disableHanaBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise disableHanaBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result updateHanaInstance(array $arguments = [])
 * @method \Http\Promise\Promise updateHanaInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeClient(array $arguments = [])
 * @method \Http\Promise\Promise upgradeClientAsync($arguments = [])
 * @method \Dew\Acs\Result startHanaDatabaseAsync(array $arguments = [])
 * @method \Http\Promise\Promise startHanaDatabaseAsyncAsync($arguments = [])
 * @method \Dew\Acs\Result stopHanaDatabaseAsync(array $arguments = [])
 * @method \Http\Promise\Promise stopHanaDatabaseAsyncAsync($arguments = [])
 * @method \Dew\Acs\Result updateHanaRetentionSetting(array $arguments = [])
 * @method \Http\Promise\Promise updateHanaRetentionSettingAsync($arguments = [])
 * @method \Dew\Acs\Result updateHanaBackupSetting(array $arguments = [])
 * @method \Http\Promise\Promise updateHanaBackupSettingAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaBackupPlans(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaBackupPlansAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeClients(array $arguments = [])
 * @method \Http\Promise\Promise describeClientsAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaDatabases(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaDatabasesAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaRetentionSetting(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaRetentionSettingAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaBackupSetting(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaBackupSettingAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaBackupsAsync(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaBackupsAsyncAsync($arguments = [])
 * @method \Dew\Acs\Result describeHanaRestores(array $arguments = [])
 * @method \Http\Promise\Promise describeHanaRestoresAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAirEcsInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteAirEcsInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result openHbrService(array $arguments = [])
 * @method \Http\Promise\Promise openHbrServiceAsync($arguments = [])
 * @method \Dew\Acs\Result addContainerCluster(array $arguments = [])
 * @method \Http\Promise\Promise addContainerClusterAsync($arguments = [])
 * @method \Dew\Acs\Result updateContainerCluster(array $arguments = [])
 * @method \Http\Promise\Promise updateContainerClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeTask(array $arguments = [])
 * @method \Http\Promise\Promise describeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeVaultReplicationRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeVaultReplicationRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerCluster(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerClusterAsync($arguments = [])
 * @method \Dew\Acs\Result detachNasFileSystem(array $arguments = [])
 * @method \Http\Promise\Promise detachNasFileSystemAsync($arguments = [])
 * @method \Dew\Acs\Result generateRamPolicy(array $arguments = [])
 * @method \Http\Promise\Promise generateRamPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result changeResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createTempFileUploadUrl(array $arguments = [])
 * @method \Http\Promise\Promise createTempFileUploadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result getTempFileDownloadLink(array $arguments = [])
 * @method \Http\Promise\Promise getTempFileDownloadLinkAsync($arguments = [])
 * @method \Dew\Acs\Result checkRole(array $arguments = [])
 * @method \Http\Promise\Promise checkRoleAsync($arguments = [])
 * @method \Dew\Acs\Result describeCrossAccounts(array $arguments = [])
 * @method \Http\Promise\Promise describeCrossAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUdmEcsInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteUdmEcsInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUdmDisk(array $arguments = [])
 * @method \Http\Promise\Promise deleteUdmDiskAsync($arguments = [])
 * @method \Dew\Acs\Result listProtectedResources(array $arguments = [])
 * @method \Http\Promise\Promise listProtectedResourcesAsync($arguments = [])
 */
final class HbrClient extends AcsClient
{
    //
}
