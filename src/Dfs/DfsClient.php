<?php

declare(strict_types=1);

namespace Dew\Acs\Dfs;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result getRegion(array $arguments = [])
 * @method \Http\Promise\Promise getRegionAsync($arguments = [])
 * @method \Dew\Acs\Result createFileSystem(array $arguments = [])
 * @method \Http\Promise\Promise createFileSystemAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFileSystem(array $arguments = [])
 * @method \Http\Promise\Promise deleteFileSystemAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFileSystem(array $arguments = [])
 * @method \Http\Promise\Promise modifyFileSystemAsync($arguments = [])
 * @method \Dew\Acs\Result listFileSystems(array $arguments = [])
 * @method \Http\Promise\Promise listFileSystemsAsync($arguments = [])
 * @method \Dew\Acs\Result getFileSystem(array $arguments = [])
 * @method \Http\Promise\Promise getFileSystemAsync($arguments = [])
 * @method \Dew\Acs\Result createMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise createMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise deleteMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise modifyMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result listMountPoints(array $arguments = [])
 * @method \Http\Promise\Promise listMountPointsAsync($arguments = [])
 * @method \Dew\Acs\Result getMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise getMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result createAccessGroup(array $arguments = [])
 * @method \Http\Promise\Promise createAccessGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAccessGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteAccessGroupAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccessGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccessGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listAccessGroups(array $arguments = [])
 * @method \Http\Promise\Promise listAccessGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result getAccessGroup(array $arguments = [])
 * @method \Http\Promise\Promise getAccessGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createAccessRule(array $arguments = [])
 * @method \Http\Promise\Promise createAccessRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAccessRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteAccessRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccessRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccessRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getAccessRule(array $arguments = [])
 * @method \Http\Promise\Promise getAccessRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listAccessRules(array $arguments = [])
 * @method \Http\Promise\Promise listAccessRulesAsync($arguments = [])
 * @method \Dew\Acs\Result createUserGroupsMapping(array $arguments = [])
 * @method \Http\Promise\Promise createUserGroupsMappingAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUserGroupsMapping(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserGroupsMappingAsync($arguments = [])
 * @method \Dew\Acs\Result listUserGroupsMappings(array $arguments = [])
 * @method \Http\Promise\Promise listUserGroupsMappingsAsync($arguments = [])
 * @method \Dew\Acs\Result createVscMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise createVscMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVscMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise deleteVscMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result attachVscMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise attachVscMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result bindVscMountPointAlias(array $arguments = [])
 * @method \Http\Promise\Promise bindVscMountPointAliasAsync($arguments = [])
 * @method \Dew\Acs\Result detachVscMountPoint(array $arguments = [])
 * @method \Http\Promise\Promise detachVscMountPointAsync($arguments = [])
 * @method \Dew\Acs\Result describeVscMountPoints(array $arguments = [])
 * @method \Http\Promise\Promise describeVscMountPointsAsync($arguments = [])
 */
final class DfsClient extends AcsClient
{
    //
}
