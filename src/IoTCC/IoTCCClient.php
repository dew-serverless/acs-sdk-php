<?php

declare(strict_types=1);

namespace Dew\Acs\IoTCC;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result openIoTCloudConnectorService(array $arguments = [])
 * @method \Http\Promise\Promise openIoTCloudConnectorServiceAsync($arguments = [])
 * @method \Dew\Acs\Result listRegions(array $arguments = [])
 * @method \Http\Promise\Promise listRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result listAPNs(array $arguments = [])
 * @method \Http\Promise\Promise listAPNsAsync($arguments = [])
 * @method \Dew\Acs\Result createIoTCloudConnector(array $arguments = [])
 * @method \Http\Promise\Promise createIoTCloudConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result updateIoTCloudConnectorAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateIoTCloudConnectorAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listIoTCloudConnectors(array $arguments = [])
 * @method \Http\Promise\Promise listIoTCloudConnectorsAsync($arguments = [])
 * @method \Dew\Acs\Result listIoTCloudConnectorAvailableZones(array $arguments = [])
 * @method \Http\Promise\Promise listIoTCloudConnectorAvailableZonesAsync($arguments = [])
 * @method \Dew\Acs\Result associateVSwitchWithIoTCloudConnector(array $arguments = [])
 * @method \Http\Promise\Promise associateVSwitchWithIoTCloudConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result dissociateVSwitchFromIoTCloudConnector(array $arguments = [])
 * @method \Http\Promise\Promise dissociateVSwitchFromIoTCloudConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result listIoTCloudConnectorEIPs(array $arguments = [])
 * @method \Http\Promise\Promise listIoTCloudConnectorEIPsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIoTCloudConnector(array $arguments = [])
 * @method \Http\Promise\Promise deleteIoTCloudConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result createConnectionPool(array $arguments = [])
 * @method \Http\Promise\Promise createConnectionPoolAsync($arguments = [])
 * @method \Dew\Acs\Result addCidrToConnectionPool(array $arguments = [])
 * @method \Http\Promise\Promise addCidrToConnectionPoolAsync($arguments = [])
 * @method \Dew\Acs\Result updateConnectionPoolAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateConnectionPoolAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listConnectionPools(array $arguments = [])
 * @method \Http\Promise\Promise listConnectionPoolsAsync($arguments = [])
 * @method \Dew\Acs\Result listConnectionPoolIps(array $arguments = [])
 * @method \Http\Promise\Promise listConnectionPoolIpsAsync($arguments = [])
 * @method \Dew\Acs\Result getStsInfoAndOssPath(array $arguments = [])
 * @method \Http\Promise\Promise getStsInfoAndOssPathAsync($arguments = [])
 * @method \Dew\Acs\Result associateIpWithConnectionPool(array $arguments = [])
 * @method \Http\Promise\Promise associateIpWithConnectionPoolAsync($arguments = [])
 * @method \Dew\Acs\Result dissociateIpFromConnectionPool(array $arguments = [])
 * @method \Http\Promise\Promise dissociateIpFromConnectionPoolAsync($arguments = [])
 * @method \Dew\Acs\Result getConnectionPoolIpOperationResult(array $arguments = [])
 * @method \Http\Promise\Promise getConnectionPoolIpOperationResultAsync($arguments = [])
 * @method \Dew\Acs\Result listConnectionPoolAllIps(array $arguments = [])
 * @method \Http\Promise\Promise listConnectionPoolAllIpsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteConnectionPool(array $arguments = [])
 * @method \Http\Promise\Promise deleteConnectionPoolAsync($arguments = [])
 * @method \Dew\Acs\Result createAuthorizationRule(array $arguments = [])
 * @method \Http\Promise\Promise createAuthorizationRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createAuthorizationRules(array $arguments = [])
 * @method \Http\Promise\Promise createAuthorizationRulesAsync($arguments = [])
 * @method \Dew\Acs\Result updateAuthorizationRuleAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateAuthorizationRuleAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listAuthorizationRules(array $arguments = [])
 * @method \Http\Promise\Promise listAuthorizationRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAuthorizationRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteAuthorizationRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createIoTCloudConnectorGroup(array $arguments = [])
 * @method \Http\Promise\Promise createIoTCloudConnectorGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addIoTCloudConnectorToGroup(array $arguments = [])
 * @method \Http\Promise\Promise addIoTCloudConnectorToGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateIoTCloudConnectorGroupAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateIoTCloudConnectorGroupAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listIoTCloudConnectorGroups(array $arguments = [])
 * @method \Http\Promise\Promise listIoTCloudConnectorGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result removeIoTCloudConnectorFromGroup(array $arguments = [])
 * @method \Http\Promise\Promise removeIoTCloudConnectorFromGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIoTCloudConnectorGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteIoTCloudConnectorGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createGroupAuthorizationRule(array $arguments = [])
 * @method \Http\Promise\Promise createGroupAuthorizationRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateGroupAuthorizationRuleAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateGroupAuthorizationRuleAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listGroupAuthorizationRules(array $arguments = [])
 * @method \Http\Promise\Promise listGroupAuthorizationRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGroupAuthorizationRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteGroupAuthorizationRuleAsync($arguments = [])
 * @method \Dew\Acs\Result grantVirtualBorderRouter(array $arguments = [])
 * @method \Http\Promise\Promise grantVirtualBorderRouterAsync($arguments = [])
 * @method \Dew\Acs\Result createDNSServiceRule(array $arguments = [])
 * @method \Http\Promise\Promise createDNSServiceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateDNSServiceRuleAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateDNSServiceRuleAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listDNSServiceRules(array $arguments = [])
 * @method \Http\Promise\Promise listDNSServiceRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDNSServiceRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteDNSServiceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result moveAuthorizationRuleToDNSService(array $arguments = [])
 * @method \Http\Promise\Promise moveAuthorizationRuleToDNSServiceAsync($arguments = [])
 * @method \Dew\Acs\Result createGroupDNSServiceRule(array $arguments = [])
 * @method \Http\Promise\Promise createGroupDNSServiceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateGroupDNSServiceRuleAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateGroupDNSServiceRuleAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listGroupDNSServiceRules(array $arguments = [])
 * @method \Http\Promise\Promise listGroupDNSServiceRulesAsync($arguments = [])
 * @method \Dew\Acs\Result moveGroupAuthorizationRuleToDNSService(array $arguments = [])
 * @method \Http\Promise\Promise moveGroupAuthorizationRuleToDNSServiceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGroupDNSServiceRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteGroupDNSServiceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result enableIoTCloudConnectorAccessLog(array $arguments = [])
 * @method \Http\Promise\Promise enableIoTCloudConnectorAccessLogAsync($arguments = [])
 * @method \Dew\Acs\Result disableIoTCloudConnectorAccessLog(array $arguments = [])
 * @method \Http\Promise\Promise disableIoTCloudConnectorAccessLogAsync($arguments = [])
 * @method \Dew\Acs\Result getIoTCloudConnectorAccessLog(array $arguments = [])
 * @method \Http\Promise\Promise getIoTCloudConnectorAccessLogAsync($arguments = [])
 * @method \Dew\Acs\Result createService(array $arguments = [])
 * @method \Http\Promise\Promise createServiceAsync($arguments = [])
 * @method \Dew\Acs\Result updateServiceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateServiceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listService(array $arguments = [])
 * @method \Http\Promise\Promise listServiceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteService(array $arguments = [])
 * @method \Http\Promise\Promise deleteServiceAsync($arguments = [])
 * @method \Dew\Acs\Result createServiceEntry(array $arguments = [])
 * @method \Http\Promise\Promise createServiceEntryAsync($arguments = [])
 * @method \Dew\Acs\Result updateServiceEntryAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateServiceEntryAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listServiceEntries(array $arguments = [])
 * @method \Http\Promise\Promise listServiceEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteServiceEntry(array $arguments = [])
 * @method \Http\Promise\Promise deleteServiceEntryAsync($arguments = [])
 * @method \Dew\Acs\Result submitDiagnoseTaskForSingleCard(array $arguments = [])
 * @method \Http\Promise\Promise submitDiagnoseTaskForSingleCardAsync($arguments = [])
 * @method \Dew\Acs\Result getDiagnoseResultForSingleCard(array $arguments = [])
 * @method \Http\Promise\Promise getDiagnoseResultForSingleCardAsync($arguments = [])
 * @method \Dew\Acs\Result listDiagnoseInfoForSingleCard(array $arguments = [])
 * @method \Http\Promise\Promise listDiagnoseInfoForSingleCardAsync($arguments = [])
 * @method \Dew\Acs\Result createIoTCloudConnectorBackhaulRoute(array $arguments = [])
 * @method \Http\Promise\Promise createIoTCloudConnectorBackhaulRouteAsync($arguments = [])
 * @method \Dew\Acs\Result listIoTCoudConnectorBackhaulRoute(array $arguments = [])
 * @method \Http\Promise\Promise listIoTCoudConnectorBackhaulRouteAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIoTCloudConnetorBackhaulRoute(array $arguments = [])
 * @method \Http\Promise\Promise deleteIoTCloudConnetorBackhaulRouteAsync($arguments = [])
 * @method \Dew\Acs\Result createIpMappingRule(array $arguments = [])
 * @method \Http\Promise\Promise createIpMappingRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateIpMappingRule(array $arguments = [])
 * @method \Http\Promise\Promise updateIpMappingRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listIpMappingRules(array $arguments = [])
 * @method \Http\Promise\Promise listIpMappingRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIpMappingRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteIpMappingRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createGroupIpMappingRule(array $arguments = [])
 * @method \Http\Promise\Promise createGroupIpMappingRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateGroupIpMappingRule(array $arguments = [])
 * @method \Http\Promise\Promise updateGroupIpMappingRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listGroupIpMappingRules(array $arguments = [])
 * @method \Http\Promise\Promise listGroupIpMappingRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGroupIpMappingRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteGroupIpMappingRuleAsync($arguments = [])
 * @method \Dew\Acs\Result confirmIoTCloudConnector(array $arguments = [])
 * @method \Http\Promise\Promise confirmIoTCloudConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result revertIoTCloudConnector(array $arguments = [])
 * @method \Http\Promise\Promise revertIoTCloudConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAuthorizationRules(array $arguments = [])
 * @method \Http\Promise\Promise deleteAuthorizationRulesAsync($arguments = [])
 */
final class IoTCCClient extends AcsClient
{
    //
}
