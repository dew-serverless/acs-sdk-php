<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'ICE',
    'version' => '2020-11-09',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 170098,
      'title' => '媒体上传',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateUploadMedia',
        1 => 'CreateUploadStream',
        2 => 'RefreshUploadMedia',
        3 => 'RegisterMediaStream',
        4 => 'GetUrlUploadInfos',
        5 => 'UploadMediaByURL',
        6 => 'UploadStreamByURL',
      ),
    ),
    1 => 
    array (
      'id' => 170106,
      'title' => '媒资管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 186460,
          'title' => '媒资搜索',
          'type' => 'directory',
          'children' => 
          array (
            0 => 
            array (
              'id' => 186506,
              'title' => '搜索库',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateSearchLib',
                1 => 'QuerySearchLib',
                2 => 'DropSearchLib',
              ),
            ),
            1 => 
            array (
              'id' => 186510,
              'title' => '搜索索引',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateSearchIndex',
                1 => 'AlterSearchIndex',
                2 => 'QuerySearchIndex',
                3 => 'DropSearchIndex',
              ),
            ),
            2 => 'InsertMediaToSearchLib',
            3 => 'UpdateMediaToSearchLib',
            4 => 'DeleteMediaFromSearchLib',
            5 => 'QueryMediaIndexJob',
            6 => 'SearchMedia',
            7 => 'GetVideoList',
            8 => 'SearchMediaByFace',
            9 => 'SearchMediaClipByFace',
            10 => 'SearchMediaByAILabel',
            11 => 'SearchMediaByMultimodal',
            12 => 'SearchMediaByHybrid',
          ),
        ),
        1 => 
        array (
          'id' => 137519,
          'title' => '媒资库',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'RegisterMediaInfo',
            1 => 'GetMediaInfo',
            2 => 'UpdateMediaInfo',
            3 => 'DeleteMediaInfos',
            4 => 'BatchGetMediaInfos',
            5 => 'ListMediaBasicInfos',
            6 => 'ListPublicMediaBasicInfos',
            7 => 'ListAllPublicMediaTags',
          ),
        ),
        2 => 
        array (
          'id' => 170110,
          'title' => '分类管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddCategory',
            1 => 'GetCategories',
            2 => 'UpdateCategory',
            3 => 'DeleteCategory',
          ),
        ),
        3 => 
        array (
          'id' => 179222,
          'title' => '标记管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddMediaMarks',
            1 => 'GetMediaMarks',
            2 => 'UpdateMediaMarks',
            3 => 'DeleteMediaMarks',
            4 => 'ListMediaMarks',
          ),
        ),
        4 => 'GetPlayInfo',
        5 => 'DeletePlayInfo',
      ),
    ),
    2 => 
    array (
      'id' => 174129,
      'title' => '媒资审核',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateAudit',
        1 => 'SubmitMediaCensorJob',
        2 => 'QueryMediaCensorJobDetail',
        3 => 'QueryMediaCensorJobList',
      ),
    ),
    3 => 
    array (
      'id' => 170115,
      'title' => '配置管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 170116,
          'title' => '模板管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateCustomTemplate',
            1 => 'GetSystemTemplate',
            2 => 'GetCustomTemplate',
            3 => 'SetDefaultCustomTemplate',
            4 => 'UpdateCustomTemplate',
            5 => 'DeleteCustomTemplate',
            6 => 'ListSystemTemplates',
            7 => 'ListCustomTemplates',
          ),
        ),
        1 => 
        array (
          'id' => 170125,
          'title' => '管道管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreatePipeline',
            1 => 'GetPipeline',
            2 => 'UpdatePipeline',
            3 => 'DeletePipeline',
            4 => 'ListPipelines',
          ),
        ),
      ),
    ),
    4 => 
    array (
      'id' => 170131,
      'title' => '媒体处理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 170132,
          'title' => '转码接口',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SubmitTranscodeJob',
            1 => 'GetTranscodeJob',
            2 => 'ListTranscodeJobs',
            3 => 'SubmitPackageJob',
            4 => 'GetPackageJob',
            5 => 'ListPackageJobs',
            6 => 'GenerateKMSDataKey',
            7 => 'DecryptKMSDataKey',
          ),
        ),
        1 => 
        array (
          'id' => 170136,
          'title' => '截图接口',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SubmitSnapshotJob',
            1 => 'SubmitDynamicImageJob',
            2 => 'GetSnapshotUrls',
            3 => 'GetSnapshotJob',
            4 => 'GetDynamicImageJob',
            5 => 'ListSnapshotJobs',
            6 => 'ListDynamicImageJobs',
          ),
        ),
        2 => 
        array (
          'id' => 170144,
          'title' => '媒体信息接口',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SubmitSyncMediaInfoJob',
            1 => 'SubmitMediaInfoJob',
            2 => 'GetMediaInfoJob',
            3 => 'ListMediaInfoJobs',
          ),
        ),
      ),
    ),
    5 => 
    array (
      'id' => 171061,
      'title' => '实时处理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 171331,
          'title' => '实时媒体转码',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateLiveTranscodeTemplate',
            1 => 'GetLiveTranscodeTemplate',
            2 => 'UpdateLiveTranscodeTemplate',
            3 => 'DeleteLiveTranscodeTemplate',
            4 => 'ListLiveTranscodeTemplates',
            5 => 'SubmitLiveTranscodeJob',
            6 => 'SendLiveTranscodeJobCommand',
            7 => 'GetLiveTranscodeJob',
            8 => 'UpdateLiveTranscodeJob',
            9 => 'DeleteLiveTranscodeJob',
            10 => 'ListLiveTranscodeJobs',
          ),
        ),
        1 => 
        array (
          'id' => 171062,
          'title' => '实时媒体录制',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateLiveRecordTemplate',
            1 => 'GetLiveRecordTemplate',
            2 => 'UpdateLiveRecordTemplate',
            3 => 'DeleteLiveRecordTemplate',
            4 => 'ListLiveRecordTemplates',
            5 => 'SubmitLiveRecordJob',
            6 => 'GetLiveRecordJob',
            7 => 'DeleteLiveRecordFiles',
            8 => 'ListLiveRecordJobs',
            9 => 'ListLiveRecordFiles',
          ),
        ),
        2 => 
        array (
          'id' => 171234,
          'title' => '实时媒体截图',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateLiveSnapshotTemplate',
            1 => 'GetLiveSnapshotTemplate',
            2 => 'UpdateLiveSnapshotTemplate',
            3 => 'DeleteLiveSnapshotTemplate',
            4 => 'ListLiveSnapshotTemplates',
            5 => 'SubmitLiveSnapshotJob',
            6 => 'SendLiveSnapshotJobCommand',
            7 => 'GetLiveSnapshotJob',
            8 => 'DeleteLiveSnapshotFiles',
            9 => 'ListLiveSnapshotJobs',
            10 => 'ListLiveSnapshotFiles',
          ),
        ),
      ),
    ),
    6 => 
    array (
      'id' => 170149,
      'title' => '生产制作',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 137503,
          'title' => '云剪辑工程管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateEditingProject',
            1 => 'GetEditingProject',
            2 => 'UpdateEditingProject',
            3 => 'DeleteEditingProjects',
            4 => 'SearchEditingProject',
            5 => 'AddEditingProjectMaterials',
            6 => 'GetEditingProjectMaterials',
            7 => 'DeleteEditingProjectMaterials',
            8 => 'GetLiveEditingIndexFile',
          ),
        ),
        1 => 
        array (
          'id' => 137513,
          'title' => '剪辑制作',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SubmitMediaProducingJob',
            1 => 'GetMediaProducingJob',
            2 => 'SubmitLiveEditingJob',
            3 => 'GetLiveEditingJob',
            4 => 'SubmitBatchMediaProducingJob',
            5 => 'GetBatchMediaProducingJob',
          ),
        ),
        2 => 
        array (
          'id' => 137528,
          'title' => '模板工厂',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddTemplate',
            1 => 'GetTemplate',
            2 => 'UpdateTemplate',
            3 => 'DeleteTemplate',
            4 => 'ListTemplates',
            5 => 'GetTemplateMaterials',
            6 => 'GetTemplateParams',
          ),
        ),
        3 => 
        array (
          'id' => 137534,
          'title' => '智能任务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 
            array (
              'id' => 185311,
              'title' => '数字人训练',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateAvatarTrainingJob',
                1 => 'UpdateAvatarTrainingJob',
                2 => 'SubmitAvatarTrainingJob',
                3 => 'GetAvatarTrainingJob',
                4 => 'DeleteAvatarTrainingJob',
                5 => 'ListAvatarTrainingJobs',
                6 => 'GetAvatar',
                7 => 'ListAvatars',
              ),
            ),
            1 => 
            array (
              'id' => 183347,
              'title' => '人声克隆',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateCustomizedVoiceJob',
                1 => 'GetDemonstrationForCustomizedVoiceJob',
                2 => 'DetectAudioForCustomizedVoiceJob',
                3 => 'SubmitCustomizedVoiceJob',
                4 => 'SubmitStandardCustomizedVoiceJob',
                5 => 'GetCustomizedVoiceJob',
                6 => 'DeleteCustomizedVoiceJob',
                7 => 'ListCustomizedVoiceJobs',
                8 => 'GetCustomizedVoice',
                9 => 'UpdateCustomizedVoice',
                10 => 'ListCustomizedVoices',
              ),
            ),
            2 => 'SubmitASRJob',
            3 => 'SubmitAvatarVideoJob',
            4 => 'SubmitAudioProduceJob',
            5 => 'SubmitTextGenerateJob',
            6 => 'SubmitVideoTranslationJob',
            7 => 'GetSmartHandleJob',
            8 => 'DeleteSmartJob',
            9 => 'ListSmartJobs',
            10 => 'ListSmartSysAvatarModels',
            11 => 'ListSmartVoiceGroups',
          ),
        ),
      ),
    ),
    7 => 
    array (
      'id' => 170150,
      'title' => '媒体AI',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 178764,
          'title' => '智能标签',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SubmitSmarttagJob',
            1 => 'QuerySmarttagJob',
          ),
        ),
        1 => 
        array (
          'id' => 178765,
          'title' => '智能生产',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SubmitIProductionJob',
            1 => 'QueryIProductionJob',
          ),
        ),
        2 => 
        array (
          'id' => 178766,
          'title' => '媒体DNA',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateDNADB',
            1 => 'DeleteDNADB',
            2 => 'ListDNADB',
            3 => 'SubmitDNAJob',
            4 => 'CancelDNAJob',
            5 => 'DeleteDNAFiles',
            6 => 'ListDNAFiles',
            7 => 'QueryDNAJobList',
          ),
        ),
      ),
    ),
    8 => 
    array (
      'id' => 170153,
      'title' => '用量统计',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeMeterImsMediaConvertUHDUsage',
        1 => 'DescribeMeterImsMediaConvertUsage',
        2 => 'DescribeMeterImsEditUsage',
        3 => 'DescribeMeterImsSummary',
        4 => 'DescribeMeterImsMpsAiUsage',
      ),
    ),
    9 => 
    array (
      'id' => 137547,
      'title' => '全局配置',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SetEventCallback',
        1 => 'GetEventCallback',
      ),
    ),
    10 => 
    array (
      'id' => 178743,
      'title' => '工作流',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'StartWorkflow',
        1 => 'GetWorkflowTask',
      ),
    ),
    11 => 
    array (
      'id' => 187656,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 193096,
          'title' => '全集配置--deprecated',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'SetContentAnalyzeConfig',
            1 => 'GetContentAnalyzeConfig',
            2 => 'SetDefaultStorageLocation',
            3 => 'GetDefaultStorageLocation',
          ),
        ),
        1 => 'DescribePlayList',
        2 => 
        array (
          'id' => 137497,
          'title' => '素材中心',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddFavoritePublicMedia',
            1 => 'CancelFavoritePublicMedia',
            2 => 'GetPublicMediaInfo',
            3 => 'SearchPublicMediaInfo',
          ),
        ),
        3 => 'SubmitDynamicChartJob',
        4 => 'ListMediaProducingJobs',
        5 => 'ListBatchMediaProducingJobs',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'CreateUploadMedia' => 
    array (
      'summary' => '获取媒资上传地址和凭证，并创建媒资信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。默认取值：app-1000000。',
            'type' => 'string',
            'required' => false,
            'example' => 'app-1000000',
          ),
        ),
        1 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实体 ID。可调用CreateEntity接口创建实体，自定义动态元数据结构。',
            'type' => 'string',
            'required' => false,
            'example' => '9e177cac2fb44f8b8c67b199fcc7bffd',
          ),
        ),
        2 => 
        array (
          'name' => 'FileInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件信息，JSON类型，包含参数字段：
- Type（必填）：文件类型，取值video、image、audio、text、other。
- Name（必填）：文件名，不带扩展名。
- Size（选填）：文件大小。
- Ext（必填）：文件扩展名。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"Type\\":\\"video\\",\\"Name\\":\\"test\\",\\"Size\\":108078336,\\"Ext\\":\\"mp4\\"}',
          ),
        ),
        3 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义设置。为JSON字符串，支持消息回调等设置。',
            'type' => 'string',
            'required' => false,
            'example' => '{"MessageCallback":{"CallbackURL":"http://example.aliyundoc.com"},"Extend":{"localId":"*****","test":"www"}}',
          ),
        ),
        4 => 
        array (
          'name' => 'UploadTargetConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标存储地址。

StorageType 取值：仅支持oss。

StorageLocation 仅支持VOD点播存储，不支持用户自有OSS存储。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"StorageType\\":\\"oss\\",\\"StorageLocation\\":\\"outin-***.oss-cn-shanghai.aliyuncs.com\\"}',
          ),
        ),
        5 => 
        array (
          'name' => 'MediaMetaData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传媒资的元数据，JSON格式。

Title  标题（必填）：
- 长度不超过128个字符。
- UTF-8编码。

Description  描述（选填）：
- 长度不超过1024个字符。
- UTF-8编码。

CateId 分类ID（选填）。

Tags 标签（选填）。

BusinessType  业务类型（必填），取值：
- Type = video ，取值：
opening： 片头/开场；ending： 片尾
- Type =  image ，取值：
  default：默认；
  cover：封面
- Type = text ，取值：
  subtitles：字幕；
  font：字体；
- Type=material ，取值：
  watermark：水印；
- general 通用；
CoverURL 封面（选填）。

DynamicMetaData 动态元数据，类型为字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"Title\\": \\"UploadTest\\", \\"Description\\": \\"UploadImageTest\\", \\"Tags\\": \\"tag1,tag2\\",\\"BusinessType\\":\\"cover\\"}',
          ),
        ),
        6 => 
        array (
          'name' => 'PostProcessConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Type = video  || audio  有上传后处理动作。

ProcessType取值：Workflow。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"ProcessType\\":\\"Workflow\\",\\"ProcessID\\":\\"74ba870f1a4873a3ba238e0bf6fa9***\\"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'MediaURL' => 
              array (
                'description' => '媒资地址。
> 如果配置了CDN域名则返回CDN地址，否则为OSS地址。说明如果返回的MediaURL在浏览器无法访问（403），是因为您开启了点播域名的鉴权功能。可关闭URL鉴权或自助生成鉴权签名。
',
                'type' => 'string',
                'example' => 'https://xxq-live-playback.oss-cn-shanghai.aliyuncs.com/capture/5d96d2b4-111b-4e5d-a0e5-20f44405bb55.mp4',
              ),
              'FileURL' => 
              array (
                'description' => '文件OSS地址（不带鉴权）。',
                'type' => 'string',
                'example' => 'http://outin-***.oss-cn-north-2-gov-1.aliyuncs.com/sv/40360f05-181f63c3110-0004-cd8e-27f-de3c9.mp4',
              ),
              'UploadAddress' => 
              array (
                'description' => '上传地址。
>接口返回的上传地址是Base64加密后的值。调用SDK或API完成媒资上传时需要对其进行Base64解码后再使用。仅OSS原生SDK或OSS API方式上传需要自行解析UploadAddress。',
                'type' => 'string',
                'example' => 'eyJTZWN1cml0a2VuIjoiQ0FJU3p3TjF****',
              ),
              'UploadAuth' => 
              array (
                'description' => '上传凭证。

> 接口返回的上传凭证是Base64加密后的值。调用SDK或API完成媒资上传时需要对其进行Base64解码后再使用。仅OSS原生SDK或OSS API方式上传需要自行解析UploadAuth。',
                'type' => 'string',
                'example' => 'eyJFbmRwb2ludCI6Imm****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\",\\n  \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"MediaURL\\": \\"https://xxq-live-playback.oss-cn-shanghai.aliyuncs.com/capture/5d96d2b4-111b-4e5d-a0e5-20f44405bb55.mp4\\",\\n  \\"FileURL\\": \\"http://outin-***.oss-cn-north-2-gov-1.aliyuncs.com/sv/40360f05-181f63c3110-0004-cd8e-27f-de3c9.mp4\\",\\n  \\"UploadAddress\\": \\"eyJTZWN1cml0a2VuIjoiQ0FJU3p3TjF****\\",\\n  \\"UploadAuth\\": \\"eyJFbmRwb2ludCI6Imm****\\"\\n}","type":"json"}]',
      'title' => '获取媒资上传地址和凭证',
      'description' => '- 此接口既支持获取音视频的上传地址和凭证，同时也支持获取图片和辅助媒资的上传地址和凭证。
- 获取上传地址和凭证为智能媒体服务的核心基础，是每个上传操作的必经过程。
- 如果视频上传凭证失效（默认有效期为3000秒），请调用刷新视频上传凭证接口重新获取上传凭证。
- 上传后，可通过配置回调，接收上传事件通知或调用GetMediaInfo接口根据返回的媒资状态来判断是否上传成功。
- 本接口返回的MediaId参数，可以用于媒资生命周期管理或媒体处理。
- 本接口仅支持上传至VOD点播存储，不支持上传至用户自有OSS存储。使用自有OSS存储的用户，可以先通过[OSS SDK](https://help.aliyun.com/document_detail/52834.html?spm=a2c4g.31815.0.0.3bc2796cc4Aouh)上传文件至OSS，再调用[RegisterMediaInfo](https://help.aliyun.com/document_detail/441152.html?spm=a2c4g.444822.0.0.41e7796cMLYax8)接口将OSS文件注册至媒资库。
- 本接口目前仅支持华东2（上海）、华北2（北京）、华南1（深圳）地域。',
    ),
    'CreateUploadStream' => 
    array (
      'summary' => '获取媒体流上传地址和凭证。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'Definition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频流清晰度定义。取值：
- FD：流畅。
- LD：标清。
- SD：高清。
- HD：超清
- OD：原画。
- 2K：2K。
- 4K：4K。
- SQ：普通音质。
- HQ：高音质。',
            'type' => 'string',
            'required' => false,
            'example' => 'HD',
          ),
        ),
        2 => 
        array (
          'name' => 'FileExtension',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒体文件扩展名。',
            'type' => 'string',
            'required' => false,
            'example' => 'MP4',
          ),
        ),
        3 => 
        array (
          'name' => 'HDRType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转码流HDR类型。取值：
- HDR
- HDR10
- HLG
- DolbyVision
- HDRVivid
- SDR+
> - 大小写不敏感。
> - 非HDR视频该参数为空即可。

',
            'type' => 'string',
            'required' => false,
            'example' => 'HDR10',
          ),
        ),
        4 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义参数。',
            'type' => 'string',
            'required' => false,
            'example' => '{"MessageCallback":{"CallbackURL":"http://aliyundoc.com"}, "Extend":{"localId":"xxx","test":"www"}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '****c469e944b5a856828dc2****',
              ),
              'FileURL' => 
              array (
                'description' => '文件OSS地址（不带鉴权）。',
                'type' => 'string',
                'example' => 'http://outin-***.oss-cn-shanghai.aliyuncs.com/stream/48555e8b-181dd5a8c07/48555e8b-181dd5a8c07.mp4',
              ),
              'UploadAddress' => 
              array (
                'description' => '上传地址。

> 接口返回的上传地址是Base64加密后的值。调用SDK或API完成媒资上传时需要对其进行Base64解码后再使用。仅OSS原生SDK或OSS API方式上传需要自行解析UploadAddress。',
                'type' => 'string',
                'example' => 'eyJTZWN1cml0a2VuIjoiQ0FJU3p3TjF****',
              ),
              'UploadAuth' => 
              array (
                'description' => '上传凭证。
> 接口返回的上传凭证是Base64加密后的值。调用SDK或API完成媒资上传时需要对其进行Base64解码后再使用。仅OSS原生SDK或OSS API方式上传需要自行解析UploadAuth。',
                'type' => 'string',
                'example' => 'eyJFbmRwb2ludCI6Imm****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"****c469e944b5a856828dc2****\\",\\n  \\"FileURL\\": \\"http://outin-***.oss-cn-shanghai.aliyuncs.com/stream/48555e8b-181dd5a8c07/48555e8b-181dd5a8c07.mp4\\",\\n  \\"UploadAddress\\": \\"eyJTZWN1cml0a2VuIjoiQ0FJU3p3TjF****\\",\\n  \\"UploadAuth\\": \\"eyJFbmRwb2ludCI6Imm****\\"\\n}","type":"json"}]',
      'title' => '获取媒体流上传地址和凭证',
      'description' => '- 本接口用于本地上传媒体流，上传完成之后会将该媒体流挂载到指定的MediaId下。
- 本接口仅支持上传至VOD点播存储，不支持上传至用户自有OSS存储。使用自有OSS存储的用户，可以先通过[OSS SDK](https://help.aliyun.com/document_detail/52834.html?spm=a2c4g.31815.0.0.3bc2796cc4Aouh)上传文件至OSS，再调用[RegisterMediaStream](https://help.aliyun.com/document_detail/440765.html?spm=a2c4g.441152.0.0.7fc85000aXcFYD)接口将媒体流挂载到指定媒资。
- 本接口目前仅支持华东2（上海）、华北2（北京）、华南1（深圳）地域。',
    ),
    'RefreshUploadMedia' => 
    array (
      'summary' => '用于媒资文件上传超时后重新获取媒资上传凭证。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '411bed50018971edb60b0764a0ec6***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID',
                'type' => 'string',
                'example' => 'c2e77390f75271ec802f0674a2ce6***',
              ),
              'UploadAddress' => 
              array (
                'description' => '上传地址。
>接口返回的上传地址是Base64加密后的值。调用SDK或API完成媒资上传时需要对其进行Base64解码后再使用。仅OSS原生SDK或OSS API方式上传需要自行解析UploadAddress。',
                'type' => 'string',
                'example' => 'eyJTZWN1cml0a2VuIjoiQ0FJU3p3TjF****',
              ),
              'UploadAuth' => 
              array (
                'description' => '上传凭证。
>接口返回的上传凭证是Base64加密后的值。调用SDK或API完成媒资上传时需要对其进行Base64解码后再使用。仅OSS原生SDK或OSS API方式上传需要自行解析UploadAuth。',
                'type' => 'string',
                'example' => 'eyJFbmRwb2ludCI6Imm****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"c2e77390f75271ec802f0674a2ce6***\\",\\n  \\"UploadAddress\\": \\"eyJTZWN1cml0a2VuIjoiQ0FJU3p3TjF****\\",\\n  \\"UploadAuth\\": \\"eyJFbmRwb2ludCI6Imm****\\"\\n}","type":"json"}]',
      'title' => '刷新媒资上传凭证',
      'description' => '该接口也可用于媒资文件的覆盖上传（即获取到源文件上传地址后重新上传且音/视频ID保持不变）',
    ),
    'RegisterMediaStream' => 
    array (
      'summary' => '注册媒体流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InputURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待注册的媒资在相应系统中的地址，一经注册不可更改，并与IMS的mediaId绑定。

\\- OSS地址，支持两种格式。

http(s)://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4

oss://example-bucket/example.mp4 此格式默认oss region与服务接入区域一致。',
            'type' => 'string',
            'required' => false,
            'example' => 'oss://***/接口测试/900d1-b8rs8.aac',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '5e778ec0027b71ed80a8909598506***',
          ),
        ),
        2 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义参数。',
            'type' => 'string',
            'required' => false,
            'example' => '{"MessageCallback":{"CallbackURL":"http://test.test.com"}, "Extend":{"localId":"xxx","test":"www"}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '5e778ec0027b71ed80a8909598506302',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"5e778ec0027b71ed80a8909598506302\\"\\n}","type":"json"}]',
      'title' => '注册媒体流',
      'description' => '该接口用于将OSS上媒体流文件注册到媒体服务，并将该媒体流挂在到指定的MediaId下。',
    ),
    'GetUrlUploadInfos' => 
    array (
      'summary' => '调用GetURLUploadInfos获取URL上传信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传任务ID（JobId）列表。由一个或多个JobId组成，JobId为通过[UploadMediaByURL](~~86311~~)接口上传时，返回参数JobId的值。
- 最多支持10个ID。
- 多个ID之间使用半角逗号（,）分隔。

> JobIds和UploadURLs必须指定一个，二者同时传入时只处理JobIds。',
            'type' => 'string',
            'required' => false,
            'example' => 'df2ac80b481346daa1db6a7c40edc7f8',
          ),
        ),
        1 => 
        array (
          'name' => 'UploadURLs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传视频源文件URL列表。多个URL之间使用半角逗号（,）分隔，最多支持10个。
> - 使用前，先进行URL编码。
> - 如果同一URL视频多次上传，建议传入单个URL进行查询。
> - JobIds和UploadURLs必须指定一个，二者同时传入时只处理JobIds。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://media.w3.org/2010/05/sintel/trailer.mp4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'NonExists' => 
              array (
                'description' => '不存在的ID或URL列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '不存在的JobId或URL列表。

如果请求参数为JobIds，返回值为JobId；如果请求参数为UploadURLs，返回值为URL。',
                  'type' => 'string',
                  'example' => '[\'e3e71ae8e4a46e4893d8cadce50c3bd0\']',
                ),
              ),
              'URLUploadInfoList' => 
              array (
                'description' => 'URL上传信息详情。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'URL上传信息列表。具体上传名称及描述，请参见URLUploadInfo：URL上传信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '创建时间。格式为：<i>yyyy-MM-dd</i>T<i>HH:mm:ss</i>Z（UTC时间）。',
                      'type' => 'string',
                      'example' => '2021-11-07T10:03:37Z',
                    ),
                    'Status' => 
                    array (
                      'description' => 'URL拉取任务状态。具体的拉取状态取值及说明，请参见[Status：URL上传任务状态](~~52839~~)。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。',
                      'type' => 'string',
                      'example' => 'Success',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CompleteTime' => 
                    array (
                      'description' => '完成时间。格式为：<i>yyyy-MM-dd</i>T<i>HH:mm:ss</i>Z（UTC时间）。',
                      'type' => 'string',
                      'example' => '2021-11-26 21:47:37',
                    ),
                    'JobId' => 
                    array (
                      'description' => '上传任务ID。',
                      'type' => 'string',
                      'example' => '3829500c0fef429fa4ec1680b122d***',
                    ),
                    'UserData' => 
                    array (
                      'description' => '自定义设置。为JSON字符串。',
                      'type' => 'string',
                      'example' => '{"MessageCallback":"{"CallbackURL":"http://example.aliyundoc.com"}", "Extend":"{"localId":"***", "test":"www"}"}',
                    ),
                    'UploadURL' => 
                    array (
                      'description' => '上传视频源文件URL。

> 最多可以返回100条记录。',
                      'type' => 'string',
                      'example' => 'http://****.mp4',
                    ),
                    'MediaId' => 
                    array (
                      'description' => '上传视频ID。',
                      'type' => 'string',
                      'example' => '5014ca70f08171ecbf940764a0fd6***',
                    ),
                    'FileSize' => 
                    array (
                      'description' => '文件大小。单位：字节。',
                      'type' => 'string',
                      'example' => '64610',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"NonExists\\": [\\n    \\"[\'e3e71ae8e4a46e4893d8cadce50c3bd0\']\\"\\n  ],\\n  \\"URLUploadInfoList\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-11-07T10:03:37Z\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"ErrorMessage\\": \\"Success\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CompleteTime\\": \\"2021-11-26 21:47:37\\",\\n      \\"JobId\\": \\"3829500c0fef429fa4ec1680b122d***\\",\\n      \\"UserData\\": \\"{\\\\\\"MessageCallback\\\\\\":\\\\\\"{\\\\\\"CallbackURL\\\\\\":\\\\\\"http://example.aliyundoc.com\\\\\\"}\\\\\\", \\\\\\"Extend\\\\\\":\\\\\\"{\\\\\\"localId\\\\\\":\\\\\\"***\\\\\\", \\\\\\"test\\\\\\":\\\\\\"www\\\\\\"}\\\\\\"}\\",\\n      \\"UploadURL\\": \\"http://****.mp4\\",\\n      \\"MediaId\\": \\"5014ca70f08171ecbf940764a0fd6***\\",\\n      \\"FileSize\\": \\"64610\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取URL上传信息',
      'description' => '通过URL上传时返回的JobId或者上传时使用的URL来获取URL上传信息，包括URL上传状态、UserData、创建时间、完成时间等。

如果上传失败可以查看错误码和错误信息，上传成功可以查看对应的视频ID。',
    ),
    'UploadMediaByURL' => 
    array (
      'summary' => '调用UploadMediaByURL基于源文件URL，拉取音视频媒体文件进行上传，支持批量上传。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UploadURLs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒体源文件URL。
- URL中需要包括扩展名, 比如`https://****.mp4`中mp4为扩展名。
    - 如果URL中不包含扩展名，可以在`UploadMetadatas`中传入`FileExtension`来指定。
    - 如果URL中有扩展名且同时传入`FileExtension`，以传入的`FileExtension`为准。
- URL编码，多个地址之间以半角逗号（,）分隔，最多支持20个。
- 避免存在特殊字符导致无法上传视频，需要URL编码后再做逗号拼接。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://diffurl.mp4',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'app-1000000',
          ),
        ),
        2 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义设置。为JSON字符串，支持消息回调等设置。',
            'type' => 'string',
            'required' => false,
            'example' => '{"MessageCallback":{"CallbackURL":"http://example.aliyundoc.com"},"Extend":{"localId":"xxx","test":"www"}}',
          ),
        ),
        3 => 
        array (
          'name' => 'UploadTargetConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标存储地址。

StorageType 取值：仅支持oss。

StorageLocation 仅支持VOD点播存储，不支持用户自有OSS存储。',
            'type' => 'string',
            'required' => false,
            'example' => '{"StorageType":"oss","StorageLocation":"outin-***.oss-cn-shanghai.aliyuncs.com"}',
          ),
        ),
        4 => 
        array (
          'name' => 'MediaMetaData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传媒体文件的元数据信息，为JSON字符串。
- 与UploadURLs里的URL匹配才能生效。
- JSON格式：[UploadMetadata, UploadMetadata,…]，需转为JSON字符串 。
- 更多信息，请参见下表UploadMetadata。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"SourceURL":"https://example.aliyundoc.com/video01.mp4","Title":"urlUploadTest"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'PostProcessConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Type = video  || audio  有上传后处理动作。

ProcessType取值：Workflow。',
            'type' => 'string',
            'required' => false,
            'example' => '{"ProcessType": "Workflow","ProcessID":"b72a06c6beeb4dcdb898feef067b1***"}',
          ),
        ),
        6 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实体 ID。可调用CreateEntity接口创建实体，自定义动态元数据结构。',
            'type' => 'string',
            'required' => false,
            'example' => 'd67281da3c8743b8823ad12976187***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****83B7-7F87-4792-BFE9-63CD2137****',
              ),
              'UploadJobs' => 
              array (
                'description' => '多个Job信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '上传任务详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'description' => '上传任务ID。',
                      'type' => 'string',
                      'example' => '20ce1e05dba64576b96e9683879f0***',
                    ),
                    'SourceURL' => 
                    array (
                      'description' => '上传任务对应的源文件URL。',
                      'type' => 'string',
                      'example' => 'http://example****.mp4
',
                    ),
                    'MediaId' => 
                    array (
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => 'f476988629f54a7b8a4ba90d1a6c7***',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****83B7-7F87-4792-BFE9-63CD2137****\\",\\n  \\"UploadJobs\\": [\\n    {\\n      \\"JobId\\": \\"20ce1e05dba64576b96e9683879f0***\\",\\n      \\"SourceURL\\": \\"http://example****.mp4\\\\n\\",\\n      \\"MediaId\\": \\"f476988629f54a7b8a4ba90d1a6c7***\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'URL拉取上传',
      'description' => '- 如果配置了回调，则上传完成后会收到URL上传视频完成的事件通知，可以通过获取URL上传信息接口查询上传状态。
- 上传任务提交成功后，会在云端生成异步执行的任务，进行排队执行；上传完成后可根据事件通知（消息回调）返回的URL和视频ID等信息进行关联。
- 本接口主要适用于文件没有存储在本地服务器或终端，需要通过公网访问的URL地址上传的场景。
- 本接口仅支持上传至VOD点播存储，不支持上传至用户自有OSS存储。使用自有OSS存储的用户，可以先将文件拉取到本地，通过[OSS SDK](https://help.aliyun.com/document_detail/52834.html?spm=a2c4g.31815.0.0.3bc2796cc4Aouh)上传文件至OSS，然后再调用[RegisterMediaInfo](https://help.aliyun.com/document_detail/441152.html?spm=a2c4g.444822.0.0.41e7796cMLYax8)接口将OSS文件注册至媒资库。
- 本接口目前仅支持华东2（上海）、华北2（北京）、华南1（深圳）地域。',
      'requestParamsDescription' => '## UploadMetadata

| 名称      | 类型      | 是否必需   | 描述   |
| ------------- |------------   | ----- | ------ |
| SourceURL |	String |	是	| 需要上传的媒体源文件URL。|
| Title	|String	|是	|媒体标题。长度不超过128个字节。UTF-8编码。|
| FileSize|	String	|否	|文件大小。|
| Description|	String	|否	|描述。长度不超过1024个字节。UTF-8编码。|
| CoverURL	|String	|否	|自定义视频封面URL地址。|
| CateId	|String	|否	|分类ID。
| Tags	|String	|否   |标签。单个标签不超过32字节，最多不超过16个标签。多个标签，请使用半角逗号（,）分隔。UTF8编码。|
|WorkflowId	|String	|否	|工作流ID。|
|FileExtension	|String	|否|	媒体文件扩展名。|
|DynamicMetaData	|String	|否|	动态元数据，例："{\\"Uploader\\": \\"xxx\\"}"。|
|FileExtension	|String	|否|	实体Id。|

> - UploadMetadata 中的参数（如Title、Description、Tags等）不能包含表情符。
> - 如果配置了回调，视频上传完成后，除了上传和转码通知，还有URL上传视频完成件通知。
> - 批量提交时，每一个SourceURL有独立的通知。',
    ),
    'UploadStreamByURL' => 
    array (
      'summary' => '调用UploadStreamByURL基于源文件URL，拉取媒体流文件进行上传。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StreamURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转码流文件URL。

如果转码流的URL需要鉴权，需要在StreamURL中传入鉴权参数，并确保该URL可以通过公网访问。
',
            'type' => 'string',
            'required' => false,
            'example' => 'https://example.com/sample-stream.mp4',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '411bed50018971edb60b0764a0ec6***',
          ),
        ),
        2 => 
        array (
          'name' => 'Definition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频流清晰度定义。取值：
- FD：流畅。
- LD：标清。
- SD：高清。
- HD：超清
- OD：原画。
- 2K：2K。
- 4K：4K。
- SQ：普通音质。
- HQ：高音质。',
            'type' => 'string',
            'required' => false,
            'example' => 'HD',
          ),
        ),
        3 => 
        array (
          'name' => 'FileExtension',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒体文件扩展名。',
            'type' => 'string',
            'required' => false,
            'example' => 'mp4',
          ),
        ),
        4 => 
        array (
          'name' => 'HDRType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转码流HDR类型。取值：
- HDR
- HDR10
- HLG
- DolbyVision
- HDRVivid
- SDR+
> - 大小写不敏感。
> - 非HDR视频该参数为空即可。

',
            'type' => 'string',
            'required' => false,
            'example' => 'HDR10',
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义参数。',
            'type' => 'string',
            'required' => false,
            'example' => '{"MessageCallback":{"CallbackURL":"http://test.test.com"}, "Extend":{"localId":"xxx","test":"www"}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******89-C21D-4B78-AE24-3788B8******',
              ),
              'JobId' => 
              array (
                'description' => '上传任务ID。',
                'type' => 'string',
                'example' => '****cdb3e74639973036bc84****',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '411bed50018971edb60b0764a0ec6***',
              ),
              'FileURL' => 
              array (
                'description' => '文件OSS地址。',
                'type' => 'string',
                'example' => 'http://outin-***.oss-cn-shanghai.aliyuncs.com/stream/48555e8b-181dd5a8c07/48555e8b-181dd5a8c07.mp4',
              ),
              'SourceURL' => 
              array (
                'description' => '上传任务对应的源文件URL。',
                'type' => 'string',
                'example' => 'https://example.com/sample-stream.mp4',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******89-C21D-4B78-AE24-3788B8******\\",\\n  \\"JobId\\": \\"****cdb3e74639973036bc84****\\",\\n  \\"MediaId\\": \\"411bed50018971edb60b0764a0ec6***\\",\\n  \\"FileURL\\": \\"http://outin-***.oss-cn-shanghai.aliyuncs.com/stream/48555e8b-181dd5a8c07/48555e8b-181dd5a8c07.mp4\\",\\n  \\"SourceURL\\": \\"https://example.com/sample-stream.mp4\\"\\n}","type":"json"}]',
      'title' => '媒体流URL拉取上传',
      'description' => '- 本接口用于URL拉取上传媒体流，上传完成之后将该媒体流挂载到指定MediaId下。
- 本接口仅支持上传至VOD点播存储，不支持上传至用户自有OSS存储。使用自有OSS存储的用户，可以先将文件拉取到本地，通过[OSS SDK](https://help.aliyun.com/document_detail/52834.html?spm=a2c4g.31815.0.0.3bc2796cc4Aouh)上传文件至OSS，然后再调用[RegisterMediaStream](https://help.aliyun.com/document_detail/440765.html?spm=a2c4g.441152.0.0.7fc85000aXcFYD)接口将媒体流挂载到指定媒资。
- 本接口目前仅支持华东2（上海）、华北2（北京）、华南1（深圳）地域。',
    ),
    'CreateSearchLib' => 
    array (
      'summary' => '用户新建搜索媒资库。可以用来保存媒资。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。数据字母组合。',
            'type' => 'string',
            'required' => true,
            'example' => 'test1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'SearchLibName' => 
              array (
                'description' => '搜索库名称。',
                'type' => 'string',
                'example' => 'test1',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"SearchLibName\\": \\"test1\\"\\n}","type":"json"}]',
      'title' => '创建搜索库',
    ),
    'QuerySearchLib' => 
    array (
      'summary' => '查询搜索媒资库信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功：
- true：调用成功
- false：调用失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'SearchLibName' => 
              array (
                'description' => '搜索库名称。',
                'type' => 'string',
                'example' => 'test1',
              ),
              'Status' => 
              array (
                'description' => '状态：
- 正常
- 删除中
- 删除失败',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'normal' => 'normal',
                  'deleting' => 'deleting',
                  'deleteFail' => 'deleteFail',
                ),
                'example' => 'normal',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"SearchLibName\\": \\"test1\\",\\n  \\"Status\\": \\"normal\\"\\n}","type":"json"}]',
      'title' => '查询搜索库',
    ),
    'DropSearchLib' => 
    array (
      'summary' => '删除搜索媒资库。删除库下所有媒资。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '删除搜索库',
    ),
    'CreateSearchIndex' => 
    array (
      'summary' => '可以在搜索库下新增搜索索引。一个搜索库下可以有多个搜索索引。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。

- 未填写搜索库名称时，默认情况下搜索索引会被创建在IMS的默认搜索库下。默认值ims-default-search-lib。
- 您还可以通过[QuerySearchLib](~~2584455~~)接口查询已有的搜索库信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'IndexType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '索引类别',
            'description' => '索引类别。取值：
- mm：大模型视觉状态。用于描述视频中的复杂视觉特征和动作，可以帮助识别和搜索视频中特定的动作、运动以及事件。如足球运动员射球进门、篮球运动员受伤等情况。
- face：人脸自动识别。用于描述视频中的人脸特征，通过人脸识别技术，可以对视频中的人脸进行自动标记和搜索。
- aiLabel：智能标签。智能标签索引类别用于描述视频中的字幕、语音等内容。通过文本和语音识别技术，可以自动提取视频中的字幕、对话等语言信息进行标记和搜索。帮助用户快速搜索和定位视频中涉及特定话题或关键字的内容。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'mm' => 'mm',
              'face' => 'face',
              'aiLabel' => 'aiLabel',
            ),
            'example' => 'mm',
          ),
        ),
        2 => 
        array (
          'name' => 'IndexStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引状态。默认值Active。取值：
- Active：激活。
- Deactive：失效。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Active' => 'Active',
              'Deactive' => 'Deactive',
            ),
            'example' => 'Active',
          ),
        ),
        3 => 
        array (
          'name' => 'IndexConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '索引配置',
            'description' => '索引配置',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '*****ACB-44F2-5F2D-88D7-1283E70*****',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功，取值：
- true：调用成功                  
-  false：调用失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"*****ACB-44F2-5F2D-88D7-1283E70*****\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '创建搜索索引',
    ),
    'AlterSearchIndex' => 
    array (
      'summary' => '修改搜索索引信息（索引状态或索引配置）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。

- 未填写搜索库名称时，默认情况下搜索索引会被创建在IMS的默认搜索库下。默认值ims-default-search-lib。
- 您还可以通过[QuerySearchLib](~~2584455~~)接口查询已有的搜索库信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'IndexType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '索引类别',
            'description' => '索引类别。取值：
- mm：大模型。
- face：人脸。
- aiLabel：智能标签。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'mm' => 'mm',
              'face' => 'face',
              'aiLabel' => 'aiLabel',
            ),
            'example' => 'mm',
          ),
        ),
        2 => 
        array (
          'name' => 'IndexStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引状态。默认值为Active，取值：
- Active：激活。
- Deactive：失效。

><notice> 必须填写IndexStatus或IndexConfig两个参数中的一个。></notice>',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Active' => 'Active',
              'Deactive' => 'Deactive',
            ),
            'example' => 'Active',
          ),
        ),
        3 => 
        array (
          'name' => 'IndexConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '索引配置',
            'description' => '索引配置。
><notice> 必须填写IndexStatus或IndexConfig两个参数中的一个。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '修改搜索索引',
    ),
    'QuerySearchIndex' => 
    array (
      'summary' => '查询搜索索引详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。
- 未填写搜索库名称时，默认情况下搜索索引会被创建在IMS的默认搜索库下。默认值ims-default-search-lib。
- 您还可以通过[QuerySearchLib](~~2584455~~)接口查询已有的搜索库信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'IndexType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '索引类别',
            'description' => '索引类别。取值：
- mm：大模型。
- face：人脸。
- aiLabel：智能标签。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'mm' => 'mm',
            ),
            'example' => 'mm',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'SearchLibName' => 
              array (
                'title' => '搜索库',
                'description' => '搜索库名称。',
                'type' => 'string',
                'example' => 'test1',
              ),
              'IndexType' => 
              array (
                'title' => '索引类别',
                'description' => '索引类别。取值：
- mm：大模型。
- face：人脸。
- aiLabel：智能标签。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'mm' => 'mm',
                  'face' => 'face',
                  'aiLabel' => 'aiLabel',
                ),
                'example' => 'mm',
              ),
              'IndexStatus' => 
              array (
                'description' => '索引状态。取值：
- Active：激活。
- Deactive：失效。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'Active' => 'Active',
                  'Deactive' => 'Deactive',
                ),
                'example' => 'Active',
              ),
              'MediaTotal' => 
              array (
                'description' => '媒资总数。',
                'type' => 'string',
                'example' => '12',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"SearchLibName\\": \\"test1\\",\\n  \\"IndexType\\": \\"mm\\",\\n  \\"IndexStatus\\": \\"Active\\",\\n  \\"MediaTotal\\": \\"12\\"\\n}","type":"json"}]',
      'title' => '查询搜索索引',
    ),
    'DropSearchIndex' => 
    array (
      'summary' => '删除索引，删除后对应索引存量数据会被删除，新增媒资也不再支持对应索引分析、存储、搜索。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。

- 未填写搜索库名称时，默认情况下搜索索引会被创建在IMS的默认搜索库下。默认值ims-default-search-lib。
- 您还可以通过[QuerySearchLib](~~2584455~~)接口查询已有的搜索库信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'IndexType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '索引类别',
            'description' => '索引类别。取值：
- mm：大模型。
- face：人脸。
- aiLabel：智能标签。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'mm' => 'mm',
            ),
            'example' => 'mm',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '删除搜索索引',
    ),
    'InsertMediaToSearchLib' => 
    array (
      'summary' => '插入媒资到搜索库，需要提前建立好搜索库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索库名称。默认值ims-default-search-lib。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。具有唯一性，不填会自动生成。',
            'type' => 'string',
            'required' => false,
            'example' => '411bed50018971edb60b0764a0ec6***',
          ),
        ),
        2 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资类型。默认值video。
- video视频
- image图片
- audio音频',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'image' => 'image',
              'video' => 'video',
              'audio' => 'audio',
            ),
            'example' => 'video',
          ),
        ),
        3 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要入库的视频、音频或图片文件的地址。

说明：
请确认您的文件名正确且所在Bucket与接口调用地域一致，否则可能导致找不到文件或接口调用失败。

OSS地址：oss://[Bucket名称]/[文件路径]，例如oss://[example-bucket-****]/[object_path-****]。

HTTP地址：公网可下载的地址，例如http://example-test-****.mp4。',
            'type' => 'string',
            'required' => true,
            'example' => 'http://example-test-****.mp4',
          ),
        ),
        4 => 
        array (
          'name' => 'MsgBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资信息消息体。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '*****ACB-44F2-5F2D-88D7-1283E70*****',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"*****ACB-44F2-5F2D-88D7-1283E70*****\\",\\n  \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '插入媒资到搜索库',
    ),
    'UpdateMediaToSearchLib' => 
    array (
      'summary' => '在搜索库中更新媒资信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索库名称。默认值ims-default-search-lib。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****019b82e24b37a1c2958dec38****',
          ),
        ),
        2 => 
        array (
          'name' => 'MsgBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资信息消息体。',
            'type' => 'string',
            'required' => true,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '******b48fb04483915d4f2cd8******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\",\\n  \\"MediaId\\": \\"******b48fb04483915d4f2cd8******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '更新媒资到搜索库',
    ),
    'DeleteMediaFromSearchLib' => 
    array (
      'summary' => '在搜索库中删除指定媒资。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索库名称。默认值ims-default-search-lib。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        2 => 
        array (
          'name' => 'MsgBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资信息消息体。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'description' => '媒资ID。',
                'type' => 'string',
                'example' => '******b48fb04483915d4f2cd8******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"******b48fb04483915d4f2cd8******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '删除媒资从搜索库',
    ),
    'QueryMediaIndexJob' => 
    array (
      'summary' => '查询媒资对应开启的索引任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库名称。默认值ims-default-search-lib。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资ID',
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c2e77390f75271ec802f0674a2ce6***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'IndexJobInfoList' => 
              array (
                'description' => '索引任务信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '索引任务信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'GmtSubmit' => 
                    array (
                      'description' => '提交时间。',
                      'type' => 'string',
                      'example' => '2023-11-21 11:33:50',
                    ),
                    'GmtFinish' => 
                    array (
                      'description' => '结束时间。',
                      'type' => 'string',
                      'example' => '2023-11-21 11:33:51',
                    ),
                    'IndexType' => 
                    array (
                      'description' => '索引类别。取值：
- mm：大模型。
- face：人脸。
- aiLabel：智能标签。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'mm' => 'mm',
                        'face' => 'face',
                        'aiLabel' => 'aiLabel',
                      ),
                      'example' => 'mm',
                    ),
                    'Status' => 
                    array (
                      'description' => '任务状态，取值： 
- Running：运行中。
- Success: 成功。
- Fail: 失败。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Running' => 'Running',
                        'Success' => 'Success',
                        'Fail' => 'Fail',
                      ),
                      'example' => 'Success',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"IndexJobInfoList\\": [\\n    {\\n      \\"GmtSubmit\\": \\"2023-11-21 11:33:50\\",\\n      \\"GmtFinish\\": \\"2023-11-21 11:33:51\\",\\n      \\"IndexType\\": \\"mm\\",\\n      \\"Status\\": \\"Success\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询媒资索引任务',
    ),
    'SearchMedia' => 
    array (
      'summary' => '根据用户所提供参数，返回符合条件的媒资信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Match',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '过滤条件',
            'description' => '过滤条件。语法规则，请参见[媒资搜索协议](~~2584256~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'title = \'中国\' and utcCreate = [\'1693367158561\',\'1693367158562\']',
          ),
        ),
        1 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序字段和排序顺序。多个使用英文逗号（,）分隔',
            'description' => '排序字段和排序顺序。多个使用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'utcCreate:Desc',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '每页返回的数据条数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实体Id',
            'description' => '实体ID。',
            'type' => 'string',
            'required' => false,
            'example' => '2d3bf1e35a1e42b5ab338d701efa****',
          ),
        ),
        5 => 
        array (
          'name' => 'ScrollToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '翻页标识。32字段。第一次执行搜索请求时不用设置本参数。搜索请求命中数据时，服务端会返回该参数值，用于记录当前搜索数据的位置地址。请记录返回的参数值，下一次搜索时按下述要求或建议设置本参数：需要遍历搜索条件命中的所有数据时，本参数必须设置。当PageNo参数取值超过200时，建议设置本参数优化搜索性能。只能向后翻页，最大翻页距离为1000媒资。',
            'type' => 'string',
            'required' => false,
            'example' => 'F8C4F642184DBDA5D93907A70AAE****',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索库。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6F61C357-ACC0-57FB-876E-D5879533****',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'string',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'MediaInfoList' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '媒资信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => '3b187b3620c8490886cfc2a9578c****',
                    ),
                    'MediaBasicInfo' => 
                    array (
                      'title' => 'BasicInfo',
                      'description' => '媒资基础信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => 'MediaId',
                          'description' => '媒资ID。',
                          'type' => 'string',
                          'example' => '132bd600fc3c71ec99476732a78f****',
                        ),
                        'InputURL' => 
                        array (
                          'title' => '待注册的媒资在相应系统中的地址',
                          'description' => '待注册的媒资在相应系统中的地址。',
                          'type' => 'string',
                          'example' => 'oss://clipres/longvideo/material/voice/prod/20220418/07d7c799f6054dc3bbef250854cf8498165024814****',
                        ),
                        'MediaType' => 
                        array (
                          'title' => '媒资媒体类型',
                          'description' => '媒资媒体类型。',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'BusinessType' => 
                        array (
                          'title' => '媒资业务类型',
                          'description' => '媒资业务类型。',
                          'type' => 'string',
                          'example' => 'opening',
                        ),
                        'Source' => 
                        array (
                          'title' => '来源',
                          'description' => '来源。',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Title' => 
                        array (
                          'title' => '标题',
                          'description' => '标题。',
                          'type' => 'string',
                          'example' => '智能横屏转竖屏',
                        ),
                        'Description' => 
                        array (
                          'title' => '内容描述',
                          'description' => '内容描述。',
                          'type' => 'string',
                          'example' => '对这个视频进行转码处理了',
                        ),
                        'Category' => 
                        array (
                          'title' => '分类',
                          'description' => '分类。',
                          'type' => 'string',
                          'example' => 'image',
                        ),
                        'MediaTags' => 
                        array (
                          'title' => '标签',
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'tags,tags2
',
                        ),
                        'CoverURL' => 
                        array (
                          'title' => '封面地址',
                          'description' => '封面地址。',
                          'type' => 'string',
                          'example' => 'https://dtlive-bj.oss-cn-beijing.aliyuncs.com/cover/e694372e-4f5b-4821-ae09-efd064f2****_large_cover_url.jpg',
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据。',
                          'type' => 'string',
                          'example' => 'userData',
                        ),
                        'Snapshots' => 
                        array (
                          'title' => '截图',
                          'description' => '截图。',
                          'type' => 'string',
                          'example' => '[{"bucket":"example-bucket","count":"3","iceJobId":"******f48f0e4154976b2b8c45******","location":"oss-cn-beijing","snapshotRegular":"example.jpg","templateId":"******e6a6440b29eb60bd7c******"}]',
                        ),
                        'Status' => 
                        array (
                          'title' => '资源状态',
                          'description' => '资源状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'TranscodeStatus' => 
                        array (
                          'title' => '转码状态',
                          'description' => '转码状态。',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '媒资创建时间',
                          'description' => '媒资创建时间。',
                          'type' => 'string',
                          'example' => '2020-12-01T19:48Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'title' => '媒资修改时间',
                          'description' => '媒资修改时间。',
                          'type' => 'string',
                          'example' => '2020-12-01T19:48Z
',
                        ),
                        'DeletedTime' => 
                        array (
                          'title' => '媒资删除时间',
                          'description' => '媒资删除时间。',
                          'type' => 'string',
                          'example' => '2020-12-01T19:48Z
',
                        ),
                        'SpriteImages' => 
                        array (
                          'title' => '雪碧图',
                          'description' => '雪碧图。',
                          'type' => 'string',
                          'example' => '[{"bucket":"example-bucket","count":"32","iceJobId":"******83ec44d58b2069def2e******","location":"oss-cn-shanghai","snapshotRegular":"example/example-{Count}.jpg","spriteRegular":"example/example-{TileCount}.jpg","templateId":"******e438b14ff39293eaec25******","tileCount":"1"}]',
                        ),
                        'CateId' => 
                        array (
                          'description' => '分类ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '44',
                        ),
                        'Biz' => 
                        array (
                          'description' => '媒资所属业务。',
                          'type' => 'string',
                          'example' => 'IMS',
                        ),
                        'UploadSource' => 
                        array (
                          'description' => '上传资源。',
                          'type' => 'string',
                          'example' => 'general',
                        ),
                        'CateName' => 
                        array (
                          'description' => '分类名称。',
                          'type' => 'string',
                          'example' => '子分类1',
                        ),
                        'ReferenceId' => 
                        array (
                          'description' => '自定义ID，仅支持小写字母、大写字母、数字、横线、下划线，长度6-64位。用户维度唯一。',
                          'type' => 'string',
                          'example' => '123-123',
                        ),
                      ),
                    ),
                    'FileInfoList' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => 'FileInfos。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'fileinfo列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'FileBasicInfo' => 
                          array (
                            'title' => '文件基础信息，包含时长，大小等',
                            'description' => '文件基础信息，包含时长，大小等。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FileName' => 
                              array (
                                'title' => '文件名',
                                'description' => '文件名。',
                                'type' => 'string',
                                'example' => '164265080291300080527050.wav',
                              ),
                              'FileStatus' => 
                              array (
                                'title' => '文件状态',
                                'description' => '文件状态。',
                                'type' => 'string',
                                'example' => 'Normal',
                              ),
                              'FileType' => 
                              array (
                                'description' => '文件类型。',
                                'type' => 'string',
                                'example' => 'source_file',
                              ),
                              'FileSize' => 
                              array (
                                'title' => '文件大小（字节）',
                                'description' => '文件大小（字节）。',
                                'type' => 'string',
                                'example' => '324784',
                              ),
                              'FileUrl' => 
                              array (
                                'title' => '文件oss地址',
                                'description' => '文件OSS地址。',
                                'type' => 'string',
                                'example' => 'https://outin-d3f4681ddfd911ec99a600163e1403e7.oss-cn-shanghai.aliyuncs.com/sv/23d5cdd1-18180984899/23d5cdd1-1818098****.mp4',
                              ),
                              'Region' => 
                              array (
                                'title' => '文件存储区域',
                                'description' => '文件存储区域。',
                                'type' => 'string',
                                'example' => 'cn-beijing',
                              ),
                              'FormatName' => 
                              array (
                                'title' => '封装格式',
                                'description' => '封装格式。',
                                'type' => 'string',
                                'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长。',
                                'type' => 'string',
                                'example' => '60.00000
',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率。',
                                'type' => 'string',
                                'example' => '1912.13
',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽。',
                                'type' => 'string',
                                'example' => '1920',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高。',
                                'type' => 'string',
                                'example' => '480',
                              ),
                              'CreateTime' => 
                              array (
                                'description' => '创建时间。',
                                'type' => 'string',
                                'example' => '2022-05-30T02:02:17Z',
                              ),
                              'ModifiedTime' => 
                              array (
                                'description' => '最后修改时间。',
                                'type' => 'string',
                                'example' => '2021-12-10T12:19Z',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'AiData' => 
                    array (
                      'description' => 'AI详细信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AiLabelInfo' => 
                        array (
                          'description' => 'AI标签信息列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'AI标签信息',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FaceId' => 
                              array (
                                'description' => '人脸ID',
                                'type' => 'string',
                                'example' => '5FE19530C7A422197535FE74F5DB****',
                              ),
                              'LabelType' => 
                              array (
                                'description' => '标签类型',
                                'type' => 'string',
                                'example' => '物体',
                              ),
                              'Source' => 
                              array (
                                'description' => '来源',
                                'type' => 'string',
                                'example' => 'vision',
                              ),
                              'Category' => 
                              array (
                                'description' => '分类',
                                'type' => 'string',
                                'example' => '交通工具',
                              ),
                              'LabelName' => 
                              array (
                                'description' => '实体名称',
                                'type' => 'string',
                                'example' => '车',
                              ),
                              'LabelId' => 
                              array (
                                'description' => '实体ID',
                                'type' => 'string',
                                'example' => '10310250338',
                              ),
                              'Occurrences' => 
                              array (
                                'description' => '片段列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '片段',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Score' => 
                                    array (
                                      'description' => '打分',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '0.75287705',
                                    ),
                                    'Image' => 
                                    array (
                                      'description' => '最优人脸图片的base64编码',
                                      'type' => 'string',
                                      'example' => '99C64F6287',
                                    ),
                                    'TableBatchSeqId' => 
                                    array (
                                      'description' => '向量表序列ID',
                                      'type' => 'string',
                                      'example' => '85010D1',
                                    ),
                                    'clipId' => 
                                    array (
                                      'description' => '片段ID',
                                      'type' => 'string',
                                      'example' => '5FE19530C7A422197535FE74F5DB****',
                                    ),
                                    'From' => 
                                    array (
                                      'description' => '片段起始时间',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '1.4',
                                    ),
                                    'To' => 
                                    array (
                                      'description' => '片段结束时间',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '2.5',
                                    ),
                                    'FinegrainName' => 
                                    array (
                                      'description' => '实体的细粒度名称',
                                      'type' => 'string',
                                      'example' => '车',
                                    ),
                                    'FinegrainId' => 
                                    array (
                                      'description' => '实体的细粒度ID',
                                      'type' => 'string',
                                      'example' => '10310250338',
                                    ),
                                    'Content' => 
                                    array (
                                      'description' => '文本内容',
                                      'type' => 'string',
                                      'example' => '皮皮',
                                    ),
                                    'Tracks' => 
                                    array (
                                      'description' => 'track序列',
                                      'type' => 'array',
                                      'items' => 
                                      array (
                                        'description' => '序列',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Size' => 
                                          array (
                                            'description' => '人脸bbox框的面积',
                                            'type' => 'number',
                                            'format' => 'double',
                                            'example' => '50.2',
                                          ),
                                          'Position' => 
                                          array (
                                            'description' => 'bbox框位置坐标',
                                            'type' => 'string',
                                            'example' => '468.0;67.0;615.0;267.0',
                                          ),
                                          'Timestamp' => 
                                          array (
                                            'description' => 'track的时间戳',
                                            'type' => 'number',
                                            'format' => 'double',
                                            'example' => '1.4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AsrInfo' => 
                        array (
                          'description' => '语音信息列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '语音信息',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'From' => 
                              array (
                                'description' => '片段起始时间',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                              'To' => 
                              array (
                                'description' => '片段结束时间',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '2.5',
                              ),
                              'ClipId' => 
                              array (
                                'description' => '片段ID',
                                'type' => 'string',
                                'example' => '5FE19530C7A422197535FE74F5DB****',
                              ),
                              'Content' => 
                              array (
                                'description' => '文本内容',
                                'type' => 'string',
                                'example' => '我是皮皮',
                              ),
                              'Timestamp' => 
                              array (
                                'description' => '片段时间戳',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                            ),
                          ),
                        ),
                        'OcrInfo' => 
                        array (
                          'description' => '字幕信息列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '字幕信息',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'From' => 
                              array (
                                'description' => '片段起始时间',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                              'To' => 
                              array (
                                'description' => '片段结束时间',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '2.5',
                              ),
                              'ClipId' => 
                              array (
                                'description' => '片段ID',
                                'type' => 'string',
                                'example' => '5FE19530C7A422197535FE74F5DB****',
                              ),
                              'Content' => 
                              array (
                                'description' => '文本内容',
                                'type' => 'string',
                                'example' => '我是皮皮',
                              ),
                              'Timestamp' => 
                              array (
                                'description' => '片段时间戳',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'AiRoughData' => 
                    array (
                      'description' => 'AI简介数据',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SaveType' => 
                        array (
                          'description' => '保存类型',
                          'type' => 'string',
                          'example' => 'TEXT',
                        ),
                        'Status' => 
                        array (
                          'description' => '数据状态',
                          'type' => 'string',
                          'example' => 'SaveSuccess',
                        ),
                        'AiJobId' => 
                        array (
                          'description' => 'AI任务ID',
                          'type' => 'string',
                          'example' => 'cd35b0b0025f71edbfcb472190a9****',
                        ),
                        'Result' => 
                        array (
                          'description' => 'AI结果',
                          'type' => 'string',
                          'example' => 'http://xxxx.json',
                        ),
                        'AiCategory' => 
                        array (
                          'description' => '电视剧',
                          'type' => 'string',
                          'example' => '视频AI分类',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ScrollToken' => 
              array (
                'description' => '翻页标识。',
                'type' => 'string',
                'example' => 'F8C4F642184DBDA5D93907A70AAE****',
              ),
              'Total' => 
              array (
                'description' => '符合条件的媒资总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '163',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6F61C357-ACC0-57FB-876E-D5879533****\\",\\n  \\"Success\\": \\"True\\",\\n  \\"Code\\": \\"200\\",\\n  \\"MediaInfoList\\": [\\n    {\\n      \\"MediaId\\": \\"3b187b3620c8490886cfc2a9578c****\\",\\n      \\"MediaBasicInfo\\": {\\n        \\"MediaId\\": \\"132bd600fc3c71ec99476732a78f****\\",\\n        \\"InputURL\\": \\"oss://clipres/longvideo/material/voice/prod/20220418/07d7c799f6054dc3bbef250854cf8498165024814****\\",\\n        \\"MediaType\\": \\"video\\",\\n        \\"BusinessType\\": \\"opening\\",\\n        \\"Source\\": \\"oss\\",\\n        \\"Title\\": \\"智能横屏转竖屏\\",\\n        \\"Description\\": \\"对这个视频进行转码处理了\\",\\n        \\"Category\\": \\"image\\",\\n        \\"MediaTags\\": \\"tags,tags2\\\\n\\",\\n        \\"CoverURL\\": \\"https://dtlive-bj.oss-cn-beijing.aliyuncs.com/cover/e694372e-4f5b-4821-ae09-efd064f2****_large_cover_url.jpg\\",\\n        \\"UserData\\": \\"userData\\",\\n        \\"Snapshots\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"3\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******f48f0e4154976b2b8c45******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-beijing\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e6a6440b29eb60bd7c******\\\\\\"}]\\",\\n        \\"Status\\": \\"Normal\\",\\n        \\"TranscodeStatus\\": \\"Init\\",\\n        \\"CreateTime\\": \\"2020-12-01T19:48Z\\",\\n        \\"ModifiedTime\\": \\"2020-12-01T19:48Z\\\\n\\",\\n        \\"DeletedTime\\": \\"2020-12-01T19:48Z\\\\n\\",\\n        \\"SpriteImages\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"32\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******83ec44d58b2069def2e******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-shanghai\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example/example-{Count}.jpg\\\\\\",\\\\\\"spriteRegular\\\\\\":\\\\\\"example/example-{TileCount}.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e438b14ff39293eaec25******\\\\\\",\\\\\\"tileCount\\\\\\":\\\\\\"1\\\\\\"}]\\",\\n        \\"CateId\\": 44,\\n        \\"Biz\\": \\"IMS\\",\\n        \\"UploadSource\\": \\"general\\",\\n        \\"CateName\\": \\"子分类1\\",\\n        \\"ReferenceId\\": \\"123-123\\"\\n      },\\n      \\"FileInfoList\\": [\\n        {\\n          \\"FileBasicInfo\\": {\\n            \\"FileName\\": \\"164265080291300080527050.wav\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"324784\\",\\n            \\"FileUrl\\": \\"https://outin-d3f4681ddfd911ec99a600163e1403e7.oss-cn-shanghai.aliyuncs.com/sv/23d5cdd1-18180984899/23d5cdd1-1818098****.mp4\\",\\n            \\"Region\\": \\"cn-beijing\\",\\n            \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n            \\"Duration\\": \\"60.00000\\\\n\\",\\n            \\"Bitrate\\": \\"1912.13\\\\n\\",\\n            \\"Width\\": \\"1920\\",\\n            \\"Height\\": \\"480\\",\\n            \\"CreateTime\\": \\"2022-05-30T02:02:17Z\\",\\n            \\"ModifiedTime\\": \\"2021-12-10T12:19Z\\"\\n          }\\n        }\\n      ],\\n      \\"AiData\\": {\\n        \\"AiLabelInfo\\": [\\n          {\\n            \\"FaceId\\": \\"5FE19530C7A422197535FE74F5DB****\\",\\n            \\"LabelType\\": \\"物体\\",\\n            \\"Source\\": \\"vision\\",\\n            \\"Category\\": \\"交通工具\\",\\n            \\"LabelName\\": \\"车\\",\\n            \\"LabelId\\": \\"10310250338\\",\\n            \\"Occurrences\\": [\\n              {\\n                \\"Score\\": 0.75287705,\\n                \\"Image\\": \\"99C64F6287\\",\\n                \\"TableBatchSeqId\\": \\"85010D1\\",\\n                \\"clipId\\": \\"5FE19530C7A422197535FE74F5DB****\\",\\n                \\"From\\": 1.4,\\n                \\"To\\": 2.5,\\n                \\"FinegrainName\\": \\"车\\",\\n                \\"FinegrainId\\": \\"10310250338\\",\\n                \\"Content\\": \\"皮皮\\",\\n                \\"Tracks\\": [\\n                  {\\n                    \\"Size\\": 50.2,\\n                    \\"Position\\": \\"468.0;67.0;615.0;267.0\\",\\n                    \\"Timestamp\\": 1.4\\n                  }\\n                ]\\n              }\\n            ]\\n          }\\n        ],\\n        \\"AsrInfo\\": [\\n          {\\n            \\"From\\": 1.4,\\n            \\"To\\": 2.5,\\n            \\"ClipId\\": \\"5FE19530C7A422197535FE74F5DB****\\",\\n            \\"Content\\": \\"我是皮皮\\",\\n            \\"Timestamp\\": 1.4\\n          }\\n        ],\\n        \\"OcrInfo\\": [\\n          {\\n            \\"From\\": 1.4,\\n            \\"To\\": 2.5,\\n            \\"ClipId\\": \\"5FE19530C7A422197535FE74F5DB****\\",\\n            \\"Content\\": \\"我是皮皮\\",\\n            \\"Timestamp\\": 1.4\\n          }\\n        ]\\n      },\\n      \\"AiRoughData\\": {\\n        \\"SaveType\\": \\"TEXT\\",\\n        \\"Status\\": \\"SaveSuccess\\",\\n        \\"AiJobId\\": \\"cd35b0b0025f71edbfcb472190a9****\\",\\n        \\"Result\\": \\"http://xxxx.json\\",\\n        \\"AiCategory\\": \\"视频AI分类\\"\\n      }\\n    }\\n  ],\\n  \\"ScrollToken\\": \\"F8C4F642184DBDA5D93907A70AAE****\\",\\n  \\"Total\\": 163\\n}","type":"json"}]',
      'title' => '搜索媒体信息',
      'description' => '阿里云智能媒体服务智能媒资搜索功能使用或问题咨询等，请搜索钉钉群（30415005038）加入智能媒体服务多模检索客户答疑群联系我们。',
    ),
    'GetVideoList' => 
    array (
      'summary' => '获取视频信息列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '781111',
          ),
        ),
        1 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索结果中返回的媒资字段。  默认只返回基本媒资字段，可指定返回更多媒资字段',
            'description' => '视频状态。支持获取多个状态的视频，多个状态之间使用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'PrepareFail' => '文件异常',
              'UploadFail' => '上传失败',
              'UploadSucc' => '上传完成',
              'Transcoding' => '转码',
              'TranscodeFail' => '转码失败',
              'ProduceFail' => '合成失败',
              'Normal' => '正常',
              'Uploading' => '上传中',
              'Preparing' => '文件生成中',
              'Blocked' => '屏蔽',
              'Checking' => '审核',
            ),
            'example' => 'Uploading,Normal',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '过滤条件',
            'description' => 'CreationTime（创建时间）的开始时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-01-11T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实体Id',
            'description' => 'CreationTime的结束时间，需晚于开始时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-01-11T12:59:00Z',
          ),
        ),
        4 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序字段和排序顺序。多个使用英文逗号（,）分隔',
            'description' => '查询结果排序。取值：

- CreationTime:Desc（默认值）：按创建时间倒序。
- CreationTime:Asc：按创建时间升序。',
            'type' => 'string',
            'required' => false,
            'example' => 'CreationTime:Asc',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '列表页大小。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '是否请求成功。取值：
- true： 成功
- false：失败',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Total' => 
              array (
                'description' => '符合条件的媒资总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '163',
              ),
              'MediaList' => 
              array (
                'description' => '媒资信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '媒资信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'StorageLocation' => 
                    array (
                      'description' => '存储地址。',
                      'type' => 'string',
                      'example' => 'out-****.oss-cn-shanghai.aliyuncs.com',
                    ),
                    'Status' => 
                    array (
                      'description' => '视频状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'PrepareFail' => '文件异常',
                        'UploadFail' => '上传失败',
                        'UploadSucc' => '上传成功',
                        'Transcoding' => '转码',
                        'TranscodeFail' => '转码失败',
                        'ProduceFail' => '合成失败',
                        'Normal' => '正常',
                        'Uploading' => '上传中',
                        'Preparing' => '文件生成中',
                        'Blocked' => '屏蔽',
                        'Checking' => '审核',
                      ),
                      'example' => 'Normal',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                      'type' => 'string',
                      'example' => '2017-11-14T09:15:50Z',
                    ),
                    'CateId' => 
                    array (
                      'description' => '分类ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3679',
                    ),
                    'MediaId' => 
                    array (
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => '1c6ce34007d571ed94667630a6bc****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'string',
                      'example' => '标签1, 标签2',
                    ),
                    'ModificationTime' => 
                    array (
                      'description' => '更新时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                      'type' => 'string',
                      'example' => '2017-11-14T09:16:50Z',
                    ),
                    'CateName' => 
                    array (
                      'description' => '分类名称。',
                      'type' => 'string',
                      'example' => '分类1',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述。',
                      'type' => 'string',
                      'example' => '阿里云VOD视频描述',
                    ),
                    'AppId' => 
                    array (
                      'description' => '应用ID。默认取值：app-1000000',
                      'type' => 'string',
                      'example' => 'app-1000000',
                    ),
                    'Size' => 
                    array (
                      'description' => '源文件大小。单位：字节。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10897890',
                    ),
                    'CoverUrl' => 
                    array (
                      'description' => '封面URL。',
                      'type' => 'string',
                      'example' => 'http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****',
                    ),
                    'Duration' => 
                    array (
                      'description' => '时长。单位：秒。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '135.6',
                    ),
                    'Title' => 
                    array (
                      'description' => '标题。',
                      'type' => 'string',
                      'example' => '史上最牛音乐播放器',
                    ),
                    'Snapshots' => 
                    array (
                      'description' => '视频截图URL数组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '视频截图URL。',
                        'type' => 'string',
                        'example' => 'http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Total\\": 163,\\n  \\"MediaList\\": [\\n    {\\n      \\"StorageLocation\\": \\"out-****.oss-cn-shanghai.aliyuncs.com\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"CreationTime\\": \\"2017-11-14T09:15:50Z\\",\\n      \\"CateId\\": 3679,\\n      \\"MediaId\\": \\"1c6ce34007d571ed94667630a6bc****\\",\\n      \\"Tags\\": \\"标签1, 标签2\\",\\n      \\"ModificationTime\\": \\"2017-11-14T09:16:50Z\\",\\n      \\"CateName\\": \\"分类1\\",\\n      \\"Description\\": \\"阿里云VOD视频描述\\",\\n      \\"AppId\\": \\"app-1000000\\",\\n      \\"Size\\": 10897890,\\n      \\"CoverUrl\\": \\"http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****\\",\\n      \\"Duration\\": 135.6,\\n      \\"Title\\": \\"史上最牛音乐播放器\\",\\n      \\"Snapshots\\": [\\n        \\"http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****\\"\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取媒资信息列表',
      'description' => '本接口最多可获取指定筛选条件（如视频状态、分类ID等）的前5000条音视频。建议限定StartTime和EndTime来分批获取数据。',
    ),
    'SearchMediaByFace' => 
    array (
      'summary' => '人脸图片搜媒资接口（粗搜），输入一张人脸图片，搜索该人物所在媒资的相关信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '每页返回的数据条数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实体Id',
            'description' => '实体ID。',
            'type' => 'string',
            'required' => false,
            'example' => '2d3bf1e35a1e42b5ab338d701efa****',
          ),
        ),
        3 => 
        array (
          'name' => 'PersonImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人脸图片URL。',
            'type' => 'string',
            'required' => true,
            'example' => 'https://****.oss-cn-shanghai.aliyuncs.com/input/huangxuan****.jpg',
          ),
        ),
        4 => 
        array (
          'name' => 'FaceSearchToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过该参数判断是同一个搜索条件下的分页返回，与精搜接口里的FaceSearchToken配合使用。',
            'type' => 'string',
            'required' => true,
            'example' => 'zxtest-huangxuan-2023-3-7-V1',
          ),
        ),
        5 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索库名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        6 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资类型。取值：
- image：图片
- video：视频',
            'type' => 'string',
            'required' => false,
            'example' => 'video',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7CA7D615-CFB1-5437-9A12-2D185C3EE6CB',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：true：成功。false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'MediaInfoList' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '媒资信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => '3b187b3620c8490886cfc2a9578c****',
                    ),
                  ),
                ),
              ),
              'Total' => 
              array (
                'description' => '满足搜索条件的媒资信息总条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '163',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7CA7D615-CFB1-5437-9A12-2D185C3EE6CB\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"MediaInfoList\\": [\\n    {\\n      \\"MediaId\\": \\"3b187b3620c8490886cfc2a9578c****\\"\\n    }\\n  ],\\n  \\"Total\\": 163\\n}","type":"json"}]',
      'title' => '人脸图片搜媒资',
      'description' => '阿里云智能媒体服务智能媒资搜索功能使用或问题咨询等，请搜索钉钉群（30415005038）加入智能媒体服务多模检索客户答疑群联系我们。',
    ),
    'SearchMediaClipByFace' => 
    array (
      'summary' => '人脸图片搜媒资片段接口（精搜），基于粗搜结果返回该人脸所在媒资的相关人物片段信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索库名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '每页返回的数据条数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实体Id',
            'description' => '实体ID。',
            'type' => 'string',
            'required' => false,
            'example' => '2d3bf1e35a1e42b5ab338d701efa****',
          ),
        ),
        4 => 
        array (
          'name' => 'FaceSearchToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '与粗搜接口里的FaceSearchToken的值保持一致，通过该参数判断是同一个搜索条件下的分页返回。',
            'type' => 'string',
            'required' => true,
            'example' => 'zxtest-huangxuan-2023-3-7-V1',
          ),
        ),
        5 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => true,
            'example' => '3b187b3620c8490886cfc2a9578c****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E44FFACD-9E90-555A-A09A-6FD3B7335E39',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'MediaClipList' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资片段集合。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Score' => 
                    array (
                      'description' => '匹配片段得分，Float类型，范围为[0，1]。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '0.99041677',
                    ),
                    'EntityId' => 
                    array (
                      'description' => '实体ID，对应标签分析结果里的实体ID。',
                      'type' => 'string',
                      'example' => '1031025****',
                    ),
                    'LabelName' => 
                    array (
                      'description' => '实体名称。',
                      'type' => 'string',
                      'example' => '张三',
                    ),
                    'OccurrencesInfos' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => '人物片段聚类信息',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'StartTime' => 
                          array (
                            'description' => '匹配片段的起始时间，单位为秒，Float类型。',
                            'type' => 'number',
                            'format' => 'float',
                            'example' => '61.066353',
                          ),
                          'EndTime' => 
                          array (
                            'description' => '匹配片段的结束时间，单位为秒，Float类型。',
                            'type' => 'number',
                            'format' => 'float',
                            'example' => '69.06635',
                          ),
                          'TrackData' => 
                          array (
                            'description' => '人脸在片段中的具体信息。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Timestamp' => 
                                array (
                                  'description' => '人脸在媒资中出现的时间戳，单位为秒，Float类型。',
                                  'type' => 'number',
                                  'format' => 'float',
                                  'example' => '62.03302',
                                ),
                                'BoxPosition' => 
                                array (
                                  'description' => '人脸坐标信息。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'X' => 
                                    array (
                                      'description' => '左上顶点x轴坐标，单位为像素。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '517',
                                    ),
                                    'Y' => 
                                    array (
                                      'description' => '左上顶点y轴坐标，单位为像素。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '409',
                                    ),
                                    'W' => 
                                    array (
                                      'description' => '矩形框宽度，单位为像素。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '128',
                                    ),
                                    'H' => 
                                    array (
                                      'description' => '矩形框高度，单位为像素。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '168',
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'Category' => 
                    array (
                      'description' => '人物类型。
取值：
celebrity——名人
sensitive——敏感人物
politician——政治人物
custom——自定义人物
unknown——未知人物',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                      ),
                      'example' => 'celebrity',
                    ),
                  ),
                ),
              ),
              'Total' => 
              array (
                'description' => '符合条件的媒资片段总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E44FFACD-9E90-555A-A09A-6FD3B7335E39\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"MediaClipList\\": [\\n    {\\n      \\"Score\\": 0.99041677,\\n      \\"EntityId\\": \\"1031025****\\",\\n      \\"LabelName\\": \\"张三\\",\\n      \\"OccurrencesInfos\\": [\\n        {\\n          \\"StartTime\\": 61.066353,\\n          \\"EndTime\\": 69.06635,\\n          \\"TrackData\\": [\\n            {\\n              \\"Timestamp\\": 62.03302,\\n              \\"BoxPosition\\": {\\n                \\"X\\": 517,\\n                \\"Y\\": 409,\\n                \\"W\\": 128,\\n                \\"H\\": 168\\n              }\\n            }\\n          ]\\n        }\\n      ],\\n      \\"Category\\": \\"celebrity\\"\\n    }\\n  ],\\n  \\"Total\\": 5\\n}","type":"json"}]',
      'title' => '人脸图片搜媒资片段',
      'description' => '阿里云智能媒体服务智能媒资搜索功能使用或问题咨询等，请搜索钉钉群（30415005038）加入智能媒体服务多模检索客户答疑群联系我们。',
    ),
    'SearchMediaByAILabel' => 
    array (
      'summary' => '可以根据人名、字幕、AI分类进行多模搜索。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '195892',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceJQ6U8A',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库名称',
            'description' => '搜索库名称',
            'type' => 'string',
            'required' => false,
            'example' => 'test-1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索结果中返回的媒资字段。  默认只返回基本媒资字段，可指定返回更多媒资字段',
            'description' => '媒资类型。取值：
- image：图片
- video：视频
- audio：音频',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'image' => 'image',
              'video' => 'video',
              'audio' => 'audio',
            ),
            'example' => 'video',
          ),
        ),
        2 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序字段和排序顺序。多个使用英文逗号（,）分隔',
            'description' => '查询结果排序。取值：

- CreationTime:Desc（默认值）：按创建时间倒序。
- CreationTime:Asc：按创建时间升序。',
            'type' => 'string',
            'required' => false,
            'example' => 'CreationTime:Desc
',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '每页返回的数据条数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'Text',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '过滤条件',
            'description' => '搜索内容。',
            'type' => 'string',
            'required' => false,
            'example' => '风筝',
          ),
        ),
        6 => 
        array (
          'name' => 'MultimodalSearchType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多模搜索类型。默认为全文搜索。取值：

- PersonName：人名搜
- Ocr：字幕搜
- AiCategory ：AI分类
- FullSearch：全文搜',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'PersonName' => 'PersonName',
              'AiCategory' => 'AiCategory',
              'FullSearch' => 'FullSearch',
              'Ocr' => 'Ocr',
            ),
            'example' => 'Ocr',
          ),
        ),
        7 => 
        array (
          'name' => 'SpecificSearch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否精搜。取值：

- true： 精搜
- false：粗搜',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。精搜时必须携带。',
            'type' => 'string',
            'required' => false,
            'example' => '****c469e944b5a856828dc2****
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'MediaList' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '媒资信息详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AiData' => 
                    array (
                      'description' => 'AI详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AiLabelInfo' => 
                        array (
                          'description' => 'AI标签信息列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'AI标签信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FaceId' => 
                              array (
                                'description' => '人脸ID。',
                                'type' => 'string',
                                'example' => '5FE19530C7A422197535FE74F5DB****
',
                              ),
                              'LabelType' => 
                              array (
                                'description' => '标签类型。',
                                'type' => 'string',
                                'example' => '物体',
                              ),
                              'Source' => 
                              array (
                                'description' => '来源。',
                                'type' => 'string',
                                'example' => 'vision',
                              ),
                              'Category' => 
                              array (
                                'description' => '分类。',
                                'type' => 'string',
                                'example' => '交通工具',
                              ),
                              'LabelName' => 
                              array (
                                'description' => '实体名称。',
                                'type' => 'string',
                                'example' => '车',
                              ),
                              'LabelId' => 
                              array (
                                'description' => '实体ID。',
                                'type' => 'string',
                                'example' => '103102503**',
                              ),
                              'Occurrences' => 
                              array (
                                'description' => '片段信息。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '片段。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Score' => 
                                    array (
                                      'description' => '打分。',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '0.75287705
',
                                    ),
                                    'Image' => 
                                    array (
                                      'description' => '最有人脸图片。',
                                      'type' => 'string',
                                      'example' => 'https://service-****-public.oss-cn-hangzhou.aliyuncs.com/1563457****438522/service-image/f788974f-9595-43b2-a478-7c7a1afb****.jpg',
                                    ),
                                    'TableBatchSeqId' => 
                                    array (
                                      'description' => '向量表序列ID。',
                                      'type' => 'string',
                                      'example' => '85010D1**',
                                    ),
                                    'ClipId' => 
                                    array (
                                      'description' => '片段ID。',
                                      'type' => 'string',
                                      'example' => '158730355E4B82257D8AA1583A58****',
                                    ),
                                    'From' => 
                                    array (
                                      'description' => '片段起始时间。',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '1.4',
                                    ),
                                    'To' => 
                                    array (
                                      'description' => '片段结束时间。',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '2.5',
                                    ),
                                    'FinegrainName' => 
                                    array (
                                      'description' => '实体的细粒度名称。',
                                      'type' => 'string',
                                      'example' => '车',
                                    ),
                                    'FinegrainId' => 
                                    array (
                                      'description' => '实体的细粒度ID。',
                                      'type' => 'string',
                                      'example' => '103102503**',
                                    ),
                                    'Content' => 
                                    array (
                                      'description' => '文本内容。',
                                      'type' => 'string',
                                      'example' => '智能标签测试
',
                                    ),
                                    'Tracks' => 
                                    array (
                                      'description' => 'track序列。',
                                      'type' => 'array',
                                      'items' => 
                                      array (
                                        'description' => '序列。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Size' => 
                                          array (
                                            'description' => '人脸bbox框的面积。',
                                            'type' => 'number',
                                            'format' => 'double',
                                            'example' => '50',
                                          ),
                                          'Position' => 
                                          array (
                                            'description' => 'bbox框位置坐标。',
                                            'type' => 'string',
                                            'example' => '468.0;67.0;615.0;267.0',
                                          ),
                                          'Timestamp' => 
                                          array (
                                            'description' => 'track的时间戳。',
                                            'type' => 'number',
                                            'format' => 'double',
                                            'example' => '1.4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AsrInfo' => 
                        array (
                          'description' => '语音信息列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '语音信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'From' => 
                              array (
                                'description' => '片段起始时间。',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                              'To' => 
                              array (
                                'description' => '片段结束时间。',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '2.5',
                              ),
                              'ClipId' => 
                              array (
                                'description' => '片段ID。',
                                'type' => 'string',
                                'example' => '5FE19530C7A422197535FE74F5DB****',
                              ),
                              'Content' => 
                              array (
                                'description' => '文本内容。',
                                'type' => 'string',
                                'example' => '智能标签测试',
                              ),
                              'Timestamp' => 
                              array (
                                'description' => '片段时间戳。',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                            ),
                          ),
                        ),
                        'OcrInfo' => 
                        array (
                          'description' => '字幕信息列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '字幕信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'From' => 
                              array (
                                'description' => '片段起始时间。',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                              'To' => 
                              array (
                                'description' => '片段结束时间。',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '2.5',
                              ),
                              'ClipId' => 
                              array (
                                'description' => '片段ID。',
                                'type' => 'string',
                                'example' => '5FE19530C7A422197535FE74F5DB****
',
                              ),
                              'Content' => 
                              array (
                                'description' => '文本内容。',
                                'type' => 'string',
                                'example' => '皮皮',
                              ),
                              'Timestamp' => 
                              array (
                                'description' => '片段时间戳。',
                                'type' => 'number',
                                'format' => 'double',
                                'example' => '1.4',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'StorageLocation' => 
                    array (
                      'description' => '存储地址。',
                      'type' => 'string',
                      'example' => 'out-****.oss-cn-shanghai.aliyuncs.com
',
                    ),
                    'Status' => 
                    array (
                      'description' => '视频状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'PrepareFail' => 'PrepareFail',
                        'UploadFail' => 'UploadFail',
                        'Init' => 'Init',
                        'UploadSucc' => 'UploadSucc',
                        'Transcoding' => 'Transcoding',
                        'TranscodeFail' => 'TranscodeFail',
                        'Deleted' => 'Deleted',
                        'Normal' => 'Normal',
                        'Uploading' => 'Uploading',
                        'Preparing' => 'Preparing',
                        'Blocked' => 'Blocked',
                        'Checking' => 'Checking',
                      ),
                      'example' => 'Normal',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                      'type' => 'string',
                      'example' => '2017-11-14T09:15:50Z
',
                    ),
                    'ModificationTime' => 
                    array (
                      'description' => '更新时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                      'type' => 'string',
                      'example' => '2017-11-14T09:15:50Z
',
                    ),
                    'MediaId' => 
                    array (
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => '1c6ce34007d571ed94667630a6bc****
',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'string',
                      'example' => '标签1, 标签2
',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述。',
                      'type' => 'string',
                      'example' => '阿里云VOD视频描述
',
                    ),
                    'AppId' => 
                    array (
                      'description' => '应用ID。默认取值：app-1000000。',
                      'type' => 'string',
                      'example' => 'app-1000000',
                    ),
                    'Size' => 
                    array (
                      'description' => '源文件大小。单位：字节。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10897890',
                    ),
                    'CoverUrl' => 
                    array (
                      'description' => '封面URL。',
                      'type' => 'string',
                      'example' => 'http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****',
                    ),
                    'Duration' => 
                    array (
                      'description' => '时长（单位：秒）。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '12.2',
                    ),
                    'Title' => 
                    array (
                      'description' => '标题。',
                      'type' => 'string',
                      'example' => '史上最牛音乐播放器
',
                    ),
                    'Snapshots' => 
                    array (
                      'description' => '视频截图URL数组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '视频截图URL。',
                        'type' => 'string',
                        'example' => 'http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****',
                      ),
                    ),
                  ),
                ),
              ),
              'Total' => 
              array (
                'description' => '符合条件的媒资总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '30',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"MediaList\\": [\\n    {\\n      \\"AiData\\": {\\n        \\"AiLabelInfo\\": [\\n          {\\n            \\"FaceId\\": \\"5FE19530C7A422197535FE74F5DB****\\\\n\\",\\n            \\"LabelType\\": \\"物体\\",\\n            \\"Source\\": \\"vision\\",\\n            \\"Category\\": \\"交通工具\\",\\n            \\"LabelName\\": \\"车\\",\\n            \\"LabelId\\": \\"103102503**\\",\\n            \\"Occurrences\\": [\\n              {\\n                \\"Score\\": 0.75287705,\\n                \\"Image\\": \\"https://service-****-public.oss-cn-hangzhou.aliyuncs.com/1563457****438522/service-image/f788974f-9595-43b2-a478-7c7a1afb****.jpg\\",\\n                \\"TableBatchSeqId\\": \\"85010D1**\\",\\n                \\"ClipId\\": \\"158730355E4B82257D8AA1583A58****\\",\\n                \\"From\\": 1.4,\\n                \\"To\\": 2.5,\\n                \\"FinegrainName\\": \\"车\\",\\n                \\"FinegrainId\\": \\"103102503**\\",\\n                \\"Content\\": \\"智能标签测试\\\\n\\",\\n                \\"Tracks\\": [\\n                  {\\n                    \\"Size\\": 50,\\n                    \\"Position\\": \\"468.0;67.0;615.0;267.0\\",\\n                    \\"Timestamp\\": 1.4\\n                  }\\n                ]\\n              }\\n            ]\\n          }\\n        ],\\n        \\"AsrInfo\\": [\\n          {\\n            \\"From\\": 1.4,\\n            \\"To\\": 2.5,\\n            \\"ClipId\\": \\"5FE19530C7A422197535FE74F5DB****\\",\\n            \\"Content\\": \\"智能标签测试\\",\\n            \\"Timestamp\\": 1.4\\n          }\\n        ],\\n        \\"OcrInfo\\": [\\n          {\\n            \\"From\\": 1.4,\\n            \\"To\\": 2.5,\\n            \\"ClipId\\": \\"5FE19530C7A422197535FE74F5DB****\\\\n\\",\\n            \\"Content\\": \\"皮皮\\",\\n            \\"Timestamp\\": 1.4\\n          }\\n        ]\\n      },\\n      \\"StorageLocation\\": \\"out-****.oss-cn-shanghai.aliyuncs.com\\\\n\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"CreationTime\\": \\"2017-11-14T09:15:50Z\\\\n\\",\\n      \\"ModificationTime\\": \\"2017-11-14T09:15:50Z\\\\n\\",\\n      \\"MediaId\\": \\"1c6ce34007d571ed94667630a6bc****\\\\n\\",\\n      \\"Tags\\": \\"标签1, 标签2\\\\n\\",\\n      \\"Description\\": \\"阿里云VOD视频描述\\\\n\\",\\n      \\"AppId\\": \\"app-1000000\\",\\n      \\"Size\\": 10897890,\\n      \\"CoverUrl\\": \\"http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****\\",\\n      \\"Duration\\": 12.2,\\n      \\"Title\\": \\"史上最牛音乐播放器\\\\n\\",\\n      \\"Snapshots\\": [\\n        \\"http://example.aliyundoc.com/snapshot/****.jpg?auth_key=1498476426-0-0-f00b9455c49a423ce69cf4e27333****\\"\\n      ]\\n    }\\n  ],\\n  \\"Total\\": 30\\n}","type":"json"}]',
      'title' => '智能标签文本搜索',
      'description' => '可以根据人名、字幕、AI分类进行多模搜索，粗搜支持媒资粒度返回，精搜支持媒资内命中片段信息返回。',
    ),
    'SearchMediaByMultimodal' => 
    array (
      'summary' => '大模型搜索。用户可以使用自然语言描述进行搜索。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索结果中返回的媒资类型。',
            'description' => '媒资类型。默认值video。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'image' => 'image',
              'video' => 'video',
            ),
            'example' => 'video',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '每页返回的数据条数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Text',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索内容。',
            'description' => '搜索内容。可以是自然语言描述。',
            'type' => 'string',
            'required' => false,
            'example' => '两只熊猫在打架',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：true：成功。false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'MediaList' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '媒资信息详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => 'a18936e0e28771edb59ae6f6f47a****',
                    ),
                    'ClipInfo' => 
                    array (
                      'description' => '片段信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'From' => 
                          array (
                            'description' => '片段起始时间。',
                            'type' => 'number',
                            'format' => 'double',
                            'example' => '2',
                          ),
                          'To' => 
                          array (
                            'description' => '片段结束时间。',
                            'type' => 'number',
                            'format' => 'double',
                            'example' => '4',
                          ),
                          'Score' => 
                          array (
                            'description' => '打分。',
                            'type' => 'number',
                            'format' => 'double',
                            'example' => '1.2',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Total' => 
              array (
                'description' => '满足搜索条件的媒资信息总条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"MediaList\\": [\\n    {\\n      \\"MediaId\\": \\"a18936e0e28771edb59ae6f6f47a****\\",\\n      \\"ClipInfo\\": [\\n        {\\n          \\"From\\": 2,\\n          \\"To\\": 4,\\n          \\"Score\\": 1.2\\n        }\\n      ]\\n    }\\n  ],\\n  \\"Total\\": 20\\n}","type":"json"}]',
      'title' => '大模型搜索',
      'description' => '阿里云智能媒体服务智能媒资搜索功能使用或问题咨询等，请搜索钉钉群（30415005038）加入智能媒体服务多模检索客户答疑群联系我们。',
    ),
    'SearchMediaByHybrid' => 
    array (
      'summary' => '媒资混合搜索。用户可以使用自然语言描述进行混合搜索。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '224461',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceJQ6U8A',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchLibName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索库',
            'description' => '搜索库。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-1',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索结果中返回的媒资类型。',
            'description' => '媒资类型。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'image' => 'image',
              'video' => 'video',
            ),
            'example' => 'video',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页返回的数据条数。默认值为10，最大值为50',
            'description' => '每页返回的数据条数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'Text',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索内容。',
            'description' => '搜索内容。',
            'type' => 'string',
            'required' => false,
            'example' => '两只熊猫在打架',
          ),
        ),
        5 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '****c469e944b5a856828dc2****
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'MediaList' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '符合要求的媒资集合。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => 'a18936e0e28771edb59ae6f6f47a****',
                    ),
                    'ClipInfo' => 
                    array (
                      'description' => '片段信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '片段信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'From' => 
                          array (
                            'description' => '片段起始时间。',
                            'type' => 'number',
                            'format' => 'double',
                            'example' => '2',
                          ),
                          'To' => 
                          array (
                            'description' => '片段结束时间。',
                            'type' => 'number',
                            'format' => 'double',
                            'example' => '4',
                          ),
                          'Score' => 
                          array (
                            'description' => '打分。',
                            'type' => 'number',
                            'format' => 'double',
                            'example' => '0.99',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Total' => 
              array (
                'description' => '满足搜索条件的媒资信息总条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '30',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"MediaList\\": [\\n    {\\n      \\"MediaId\\": \\"a18936e0e28771edb59ae6f6f47a****\\",\\n      \\"ClipInfo\\": [\\n        {\\n          \\"From\\": 2,\\n          \\"To\\": 4,\\n          \\"Score\\": 0.99\\n        }\\n      ]\\n    }\\n  ],\\n  \\"Total\\": 30\\n}","type":"json"}]',
      'title' => '混合搜索',
      'description' => '阿里云智能媒体服务智能媒资搜索功能使用或问题咨询等，请搜索钉钉群（30415005038）加入智能媒体服务多模检索客户答疑群联系我们。',
    ),
    'RegisterMediaInfo' => 
    array (
      'summary' => '发起一个注册媒资的任务，赋予新媒资一个IMS的mediaId。接口根据InputURL，异步调用其他媒资信息服务，获取媒资的文件信息。同时用户可以设置一些基本信息的值，如标题、标签、描述等。接口同步返回mediaId，用户可以调用获取媒资内容信息GetMediaInfo的接口，获取具体的媒资信息。当前仅支持InputURL为OSS文件或VOD媒资。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '6889',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceFEJXOS',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InputURL',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资媒体url',
            'description' => '待注册的媒资在相应系统中的地址，一经注册不可更改，并与IMS的mediaId绑定。

- OSS地址，支持两种格式。

http(s)://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4

oss://example-bucket/example.mp4 （此格式默认oss region与服务接入区域一致）

- VOD媒资

vod://\\*\\*\\*20b48fb04483915d4f2cd8ac****',
            'type' => 'string',
            'required' => true,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4  或  vod://****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资媒体类型',
            'description' => '媒资媒体类型。取值范围：

- "image" 图片

- "video" 视频

- "audio" 音频

- "text" 文字

此字段建议用户按需填写。当InputURL字段是OSS URL时，也支持按照文件后缀自动判断媒资类型（仅限图片、视频、音频文件后缀），对应关系见[文件格式](https://help.aliyun.com/document_detail/466207.html)。',
            'type' => 'string',
            'required' => false,
            'example' => 'video',
          ),
        ),
        2 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资业务类型',
            'description' => '媒资业务类型。取值范围：

- "subtitles" 字幕

- "watermark" 水印

- "opening" 片头/开场

- "ending" 片尾

- "general" 通用',
            'type' => 'string',
            'required' => false,
            'example' => 'opening',
          ),
        ),
        3 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标题',
            'description' => '标题，若不提供，根据日期自动生成默认title。

- 长度不超过128字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'defaultTitle',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '描述',
            'description' => '内容描述。

- 长度不超过1024字节

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'defaultDescription',
          ),
        ),
        5 => 
        array (
          'name' => 'MediaTags',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标签,如果有多个标签用逗号隔开',
            'description' => '标签。

- 最多不超过16个标签。

- 多个用逗号分隔。

- 单个标签不超过32字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'tag1,tag2',
          ),
        ),
        6 => 
        array (
          'name' => 'CoverURL',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '封面图，仅视频媒资有效',
            'description' => '封面地址。

- 长度不超过128字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png',
          ),
        ),
        7 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户数据，最大1024字节',
            'description' => '用户数据。支持自定义回调地址配置，配置说明可参考[配置剪辑完成时的回调](https://help.aliyun.com/document_detail/451631.html)

- 长度不超过1024字节。

- UTF8编码。

- Json 格式',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotifyAddress":"http://xx.xx.xxx"} 或{"NotifyAddress":"https://xx.xx.xxx"} 或{"NotifyAddress":"ice-callback-demo"}',
          ),
        ),
        8 => 
        array (
          'name' => 'Overwrite',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否覆盖已有媒资',
            'description' => '是否覆盖已注册媒资，默认false。

-true，如果inputUrl已注册，删除原有媒资并注册新媒资；

-false, 如果inputUrl已注册则不予注册新媒资，暂不支持重复的inputUrl。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '客户端token',
            'description' => '客户端token，32位UUID，保证请求幂等性。',
            'type' => 'string',
            'required' => false,
            'example' => '****0311a423d11a5f7dee713535****',
          ),
        ),
        10 => 
        array (
          'name' => 'RegisterConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '注册媒资的配置',
            'description' => '注册配置。

默认为媒资生成雪碧图，如不需要可以手动设置NeedSprite字段为false。

默认生成截图，如不需要可以手动设置NeedSnapshot字段为false。',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "NeedSprite": "false"
}',
          ),
        ),
        11 => 
        array (
          'name' => 'CateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3048',
          ),
        ),
        12 => 
        array (
          'name' => 'WorkflowId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工作流ID',
            'type' => 'string',
            'required' => false,
            'example' => '******b4fb044839815d4f2cd8******',
          ),
        ),
        13 => 
        array (
          'name' => 'ReferenceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义ID，仅支持小写字母、大写字母、数字、横线、下划线，长度6-64位。需保证用户维度唯一。',
            'type' => 'string',
            'required' => false,
            'example' => '123-123',
          ),
        ),
        14 => 
        array (
          'name' => 'SmartTagTemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能标签模板。取值：
- S00000101-300080：包含NLP内容理解功能的系统模板

配置该字段后，媒资注册完成会自动发起智能标签分析任务，相关计费项请参考 [智能标签标准版计费](https://help.aliyun.com/zh/ims/media-ai-billing?spm=a2c4g.11186623.0.0.3147392dWwlSjL#p-k38-3rb-dug)。',
            'type' => 'string',
            'required' => false,
            'example' => 'S00000101-300080',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******5A-CAAC-4850-A3AF-B74606******',
              ),
              'MediaId' => 
              array (
                'title' => 'ICE媒资ID',
                'description' => 'IMS媒资ID。',
                'type' => 'string',
                'example' => '******b48fb04483915d4f2cd8******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******5A-CAAC-4850-A3AF-B74606******\\",\\n  \\"MediaId\\": \\"******b48fb04483915d4f2cd8******\\"\\n}","errorExample":""},{"type":"xml","example":"<RegisterMediaInfoResponse>\\n    <RequestId>******5A-CAAC-4850-A3AF-B74606******</RequestId>\\n    <MediaId>******b48fb04483915d4f2cd8******</MediaId>\\n</RegisterMediaInfoResponse>","errorExample":""}]',
      'title' => '注册内容库资源',
      'description' => '注册媒资是一个异步任务，一般需要2-3s完成。当注册接口返回mediaId时，可能媒资还没有注册完成，此时调用GetMediaInfo无法获取到媒资的文件信息。',
    ),
    'GetMediaInfo' => 
    array (
      'summary' => '根据IMS mediaId或媒资InputURL，获取并返回媒资信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '6890',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceFEJXOS',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IMS媒资ID，若为空，则必须有InputURL。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'InputURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待查询的媒资在相应系统中的地址，使用前必须在IMS内容库中注册并与IMS的mediaId绑定

- OSS地址，支持两种格式

http(s)://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4 或者

oss://example-bucket/example.mp4 此格式默认oss region与服务接入区域一致。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
          ),
        ),
        2 => 
        array (
          'name' => 'OutputType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值中媒资文件地址的类型：

- "oss" 返回OSS地址，默认。

- "cdn" 返回CDN地址。仅当媒资是由vod导入的、且在vod配置了加速域名，才会返回CDN地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'cdn',
          ),
        ),
        3 => 
        array (
          'name' => 'ReturnDetailedInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置对应媒资字段是否返回详细信息，支持字段：
AiRoughData.StandardSmartTagJob: 如果媒资提交过标签分析，是否返回详细标签结果。
- 默认false，任务结果以URL形式返回。
- true，任务结果以文本形式返回。',
            'type' => 'string',
            'required' => false,
            'example' => '{"AiRoughData.StandardSmartTagJob": false} ',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '2FDE2411-DB8D-4A9A-875B-275798F14A5E',
              ),
              'MediaInfo' => 
              array (
                'description' => '媒资信息',
                'type' => 'object',
                'properties' => 
                array (
                  'MediaId' => 
                  array (
                    'title' => '媒资ID',
                    'description' => '媒资ID',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'MediaBasicInfo' => 
                  array (
                    'title' => 'BasicInfo',
                    'description' => 'BasicInfo',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MediaId' => 
                      array (
                        'title' => 'MediaId',
                        'description' => 'MediaId',
                        'type' => 'string',
                        'example' => '****20b48fb04483915d4f2cd8ac****',
                      ),
                      'InputURL' => 
                      array (
                        'title' => '待注册的媒资在相应系统中的地址',
                        'description' => '被查询的媒资在相应系统中的地址',
                        'type' => 'string',
                        'example' => 'https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
                      ),
                      'MediaType' => 
                      array (
                        'title' => '媒资媒体类型',
                        'description' => '媒资媒体类型',
                        'type' => 'string',
                        'example' => 'video',
                      ),
                      'BusinessType' => 
                      array (
                        'title' => '媒资业务类型',
                        'description' => '媒资业务类型',
                        'type' => 'string',
                        'example' => 'general',
                      ),
                      'Source' => 
                      array (
                        'title' => '来源',
                        'description' => '来源',
                        'type' => 'string',
                        'example' => 'oss',
                      ),
                      'Title' => 
                      array (
                        'title' => '标题',
                        'description' => '标题',
                        'type' => 'string',
                        'example' => '标题',
                      ),
                      'Description' => 
                      array (
                        'title' => '内容描述',
                        'description' => '内容描述',
                        'type' => 'string',
                        'example' => '描述',
                      ),
                      'Category' => 
                      array (
                        'title' => '分类',
                        'description' => '分类',
                        'type' => 'string',
                        'example' => '分类',
                      ),
                      'MediaTags' => 
                      array (
                        'title' => '标签',
                        'description' => '标签',
                        'type' => 'string',
                        'example' => '标签,tag1',
                      ),
                      'CoverURL' => 
                      array (
                        'title' => '封面地址',
                        'description' => '封面地址',
                        'type' => 'string',
                        'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                      ),
                      'UserData' => 
                      array (
                        'title' => '用户数据',
                        'description' => '用户数据',
                        'type' => 'string',
                        'example' => 'userDataTest',
                      ),
                      'Snapshots' => 
                      array (
                        'title' => '截图',
                        'description' => '截图',
                        'type' => 'string',
                        'example' => '[
    "http://example-bucket.oss-cn-shanghai.aliyuncs.com/snapshot-00001.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>",
    "http://example-bucket.oss-cn-shanghai.aliyuncs.com/snapshot-00002.jpg?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>",
    "http://example-bucket.oss-cn-shanghai.aliyuncs.com/snapshot-00003.jpg?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>"
]',
                      ),
                      'Status' => 
                      array (
                        'title' => '资源状态',
                        'description' => '资源状态',
                        'type' => 'string',
                        'example' => 'Normal',
                      ),
                      'CreateTime' => 
                      array (
                        'title' => '媒资创建时间',
                        'description' => '媒资创建时间',
                        'type' => 'string',
                        'example' => '2020-12-26T04:11:08Z',
                      ),
                      'ModifiedTime' => 
                      array (
                        'title' => '媒资修改时间',
                        'description' => '媒资修改时间',
                        'type' => 'string',
                        'example' => '2020-12-26T04:11:10Z',
                      ),
                      'DeletedTime' => 
                      array (
                        'title' => '媒资删除时间',
                        'description' => '媒资删除时间',
                        'type' => 'string',
                        'example' => '2020-12-26T04:11:15Z',
                      ),
                      'SpriteImages' => 
                      array (
                        'title' => '雪碧图',
                        'description' => '雪碧图',
                        'type' => 'string',
                        'example' => '[{"bucket":"example-bucket","count":"32","iceJobId":"******83ec44d58b2069def2e******","location":"oss-cn-shanghai","snapshotRegular":"example/example-{Count}.jpg","spriteRegular":"example/example-{TileCount}.jpg","templateId":"******e438b14ff39293eaec25******","tileCount":"1"}]',
                      ),
                      'CateId' => 
                      array (
                        'description' => '分类ID',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '3048',
                      ),
                      'Biz' => 
                      array (
                        'description' => '媒资所属业务',
                        'type' => 'string',
                        'example' => 'ICE',
                      ),
                      'UploadSource' => 
                      array (
                        'description' => '媒资上传来源',
                        'type' => 'string',
                        'example' => 'general',
                      ),
                      'CateName' => 
                      array (
                        'description' => '分类名称',
                        'type' => 'string',
                        'example' => 'cateName',
                      ),
                      'ReferenceId' => 
                      array (
                        'description' => '自定义ID，仅支持小写字母、大写字母、数字、横线、下划线，长度6-64位。用户维度唯一。',
                        'type' => 'string',
                        'example' => '123-1234',
                      ),
                    ),
                  ),
                  'FileInfoList' => 
                  array (
                    'title' => 'FileInfos',
                    'description' => 'FileInfo列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FileBasicInfo' => 
                        array (
                          'title' => '文件基础信息，包含时长，大小等',
                          'description' => '文件基础信息，包含时长，大小等',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FileName' => 
                            array (
                              'title' => '文件名',
                              'description' => '文件名',
                              'type' => 'string',
                              'example' => 'example.mp4',
                            ),
                            'FileStatus' => 
                            array (
                              'title' => '文件状态',
                              'description' => '文件状态',
                              'type' => 'string',
                              'example' => 'Normal',
                            ),
                            'FileType' => 
                            array (
                              'title' => '文件类型',
                              'description' => '文件类型',
                              'type' => 'string',
                              'example' => 'source_file',
                            ),
                            'FileSize' => 
                            array (
                              'title' => '文件大小（字节）',
                              'description' => '文件大小（字节）',
                              'type' => 'string',
                              'example' => '30611502',
                            ),
                            'FileUrl' => 
                            array (
                              'title' => '文件oss地址',
                              'description' => '文件OSS地址',
                              'type' => 'string',
                              'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                            ),
                            'Region' => 
                            array (
                              'title' => '文件存储区域',
                              'description' => '文件存储区域',
                              'type' => 'string',
                              'example' => 'cn-shanghai',
                            ),
                            'FormatName' => 
                            array (
                              'title' => '封装格式',
                              'description' => '封装格式',
                              'type' => 'string',
                              'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长',
                              'description' => '时长',
                              'type' => 'string',
                              'example' => '216.206667',
                            ),
                            'Bitrate' => 
                            array (
                              'title' => '码率',
                              'description' => '码率',
                              'type' => 'string',
                              'example' => '1132.68',
                            ),
                            'Width' => 
                            array (
                              'title' => '宽',
                              'description' => '宽',
                              'type' => 'string',
                              'example' => '960',
                            ),
                            'Height' => 
                            array (
                              'title' => '高',
                              'description' => '高',
                              'type' => 'string',
                              'example' => '540',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '文件创建时间',
                              'type' => 'string',
                              'example' => '2020-12-26T04:11:08Z',
                            ),
                            'ModifiedTime' => 
                            array (
                              'description' => '文件修改时间',
                              'type' => 'string',
                              'example' => '2020-12-26T04:11:10Z',
                            ),
                          ),
                        ),
                        'AudioStreamInfoList' => 
                        array (
                          'title' => '音频流信息，一个媒资可能有多条音频流',
                          'description' => '音频流信息，一个媒资可能有多条音频流',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '音频流序号',
                                'description' => '音频流序号',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式简述名',
                                'description' => '编码格式简述名',
                                'type' => 'string',
                                'example' => 'aac',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式长述名',
                                'description' => '编码格式长述名',
                                'type' => 'string',
                                'example' => 'AAC (Advanced Audio Coding)',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码时基',
                                'description' => '编码时基',
                                'type' => 'string',
                                'example' => '1/24000',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码格式标记文本',
                                'description' => '编码格式标记文本',
                                'type' => 'string',
                                'example' => 'mp4a',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码格式标记',
                                'description' => '编码格式标记',
                                'type' => 'string',
                                'example' => '0x6134706d',
                              ),
                              'Profile' => 
                              array (
                                'title' => '编码预置',
                                'description' => '编码预置',
                                'type' => 'string',
                                'example' => 'High',
                              ),
                              'SampleFmt' => 
                              array (
                                'title' => '采样格式',
                                'description' => '采样格式',
                                'type' => 'string',
                                'example' => 'fltp',
                              ),
                              'SampleRate' => 
                              array (
                                'title' => '采样率',
                                'description' => '采样率',
                                'type' => 'string',
                                'example' => '44100',
                              ),
                              'Channels' => 
                              array (
                                'title' => '声道数',
                                'description' => '声道数',
                                'type' => 'string',
                                'example' => '2',
                              ),
                              'ChannelLayout' => 
                              array (
                                'title' => '声道输出样式',
                                'description' => '声道输出样式',
                                'type' => 'string',
                                'example' => 'stereo',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时基',
                                'description' => '时基',
                                'type' => 'string',
                                'example' => '1/44100',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '起始时间',
                                'description' => '起始时间',
                                'type' => 'string',
                                'example' => '0.000000',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '16.200998',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '127.794',
                              ),
                              'Fps' => 
                              array (
                                'title' => '音频帧率',
                                'description' => '音频帧率',
                                'type' => 'string',
                                'example' => '8',
                              ),
                              'NumFrames' => 
                              array (
                                'title' => '总帧数',
                                'description' => '总帧数',
                                'type' => 'string',
                                'example' => '10',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言',
                                'description' => '语言',
                                'type' => 'string',
                                'example' => 'und',
                              ),
                            ),
                          ),
                        ),
                        'VideoStreamInfoList' => 
                        array (
                          'title' => '视频流信息，一个媒资可能有多条视频流',
                          'description' => '视频流信息，一个媒资可能有多条视频流',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '视频流序号',
                                'description' => '视频流序号',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式简述名',
                                'description' => '编码格式简述名',
                                'type' => 'string',
                                'example' => 'h264',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式长述名',
                                'description' => '编码格式长述名',
                                'type' => 'string',
                                'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                              ),
                              'Profile' => 
                              array (
                                'title' => '编码预置',
                                'description' => '编码预置',
                                'type' => 'string',
                                'example' => 'High',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码时基',
                                'description' => '编码时基',
                                'type' => 'string',
                                'example' => '1/48',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码格式标记文本',
                                'description' => '编码格式标记文本',
                                'type' => 'string',
                                'example' => '[0][0][0][0]',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码格式标记',
                                'description' => '编码格式标记',
                                'type' => 'string',
                                'example' => '0x0000',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽',
                                'type' => 'string',
                                'example' => '960',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高',
                                'type' => 'string',
                                'example' => '540',
                              ),
                              'HasBFrames' => 
                              array (
                                'title' => '是否有B帧',
                                'description' => '是否有B帧',
                                'type' => 'string',
                                'example' => '2',
                              ),
                              'Sar' => 
                              array (
                                'title' => '编码信号分辨率比',
                                'description' => '编码信号分辨率比',
                                'type' => 'string',
                                'example' => '0:1',
                              ),
                              'Dar' => 
                              array (
                                'title' => '编码显示分辨率比',
                                'description' => '编码显示分辨率比',
                                'type' => 'string',
                                'example' => '0:1',
                              ),
                              'PixFmt' => 
                              array (
                                'title' => '像素格式',
                                'description' => '像素格式',
                                'type' => 'string',
                                'example' => 'yuv420p',
                              ),
                              'Level' => 
                              array (
                                'title' => '编码等级',
                                'description' => '编码等级',
                                'type' => 'string',
                                'example' => '30',
                              ),
                              'Fps' => 
                              array (
                                'title' => '视频帧率',
                                'description' => '视频帧率',
                                'type' => 'string',
                                'example' => '24.0',
                              ),
                              'AvgFPS' => 
                              array (
                                'title' => '平均帧率',
                                'description' => '平均帧率',
                                'type' => 'string',
                                'example' => '24.0',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时基',
                                'description' => '时基',
                                'type' => 'string',
                                'example' => '1/12288',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '起始时间',
                                'description' => '起始时间',
                                'type' => 'string',
                                'example' => '0.081706',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '216.206706',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '1001.594',
                              ),
                              'NumFrames' => 
                              array (
                                'title' => '总帧数',
                                'description' => '总帧数',
                                'type' => 'string',
                                'example' => '5184',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言',
                                'description' => '语言',
                                'type' => 'string',
                                'example' => 'und',
                              ),
                              'Rotate' => 
                              array (
                                'title' => '旋转',
                                'description' => '旋转',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'Nb_frames' => 
                              array (
                                'title' => '总帧数',
                                'description' => '总帧数',
                                'type' => 'string',
                                'example' => '5184',
                              ),
                            ),
                          ),
                        ),
                        'SubtitleStreamInfoList' => 
                        array (
                          'title' => '字幕流信息，一个媒资可能有多条字幕流',
                          'description' => '字幕流信息，一个媒资可能有多条字幕流',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '音频流序号',
                                'description' => '字幕流序号',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式简述名',
                                'description' => '编码格式简述名',
                                'type' => 'string',
                                'example' => 'srt',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式长述名',
                                'description' => '编码格式长述名',
                                'type' => 'string',
                                'example' => 'SubRip Text',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码时基',
                                'description' => '编码时基',
                                'type' => 'string',
                                'example' => '29.97',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码格式标记文本',
                                'description' => '编码格式标记文本',
                                'type' => 'string',
                                'example' => 'unicode',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码格式标记',
                                'description' => '编码格式标记',
                                'type' => 'string',
                                'example' => 'unicode',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时基',
                                'description' => '时基',
                                'type' => 'string',
                                'example' => '30',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '起始时间',
                                'description' => '起始时间',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言',
                                'description' => '语言',
                                'type' => 'string',
                                'example' => 'und',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'AiRoughData' => 
                  array (
                    'description' => 'AI 分析原始数据',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Result' => 
                      array (
                        'description' => 'AI分析原始结果',
                        'type' => 'string',
                        'example' => 'https://sample-bucket.cn-shanghai.aliyuncs.com/result.json',
                      ),
                      'Status' => 
                      array (
                        'description' => 'AI分析状态：
- Analyzing 分析中
- AnalyzeSuccess 分析成功
- AnalyzeFailed 分析失败
- Saving 入库中 
- SaveSuccess 入库成功
- SaveFailed 入库失败 
- Deleting 删除中
- DeleteSuccess 删除成功
- DeleteFailed 删除失败',
                        'type' => 'string',
                        'example' => 'Analyzing',
                      ),
                      'SaveType' => 
                      array (
                        'description' => '入库类型，智能分析完成后是否入搜索库。取值：
- TEXT 文本库',
                        'type' => 'string',
                        'example' => 'TEXT',
                      ),
                      'AiCategory' => 
                      array (
                        'description' => 'AI分类，取值：
- 生活
- 颜值
- 萌宠
- 资讯
- 广告
- 环境资源
- 汽车',
                        'type' => 'string',
                        'example' => '生活',
                      ),
                      'AiJobId' => 
                      array (
                        'description' => 'AI任务ID',
                        'type' => 'string',
                        'example' => '****483915d4f2cd8ac20b48fb04****',
                      ),
                      'StandardSmartTagJob' => 
                      array (
                        'description' => '标签任务',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'AiJobId' => 
                          array (
                            'description' => 'AI任务ID',
                            'type' => 'string',
                            'example' => '****483915d4f2cd8ac20b48fb04****',
                          ),
                          'Status' => 
                          array (
                            'description' => 'AI分析状态：
- Analyzing 分析中
- AnalyzeSuccess 分析成功
- AnalyzeFailed 分析失败',
                            'type' => 'string',
                            'example' => 'Analyzing',
                          ),
                          'ResultUrl' => 
                          array (
                            'description' => '标签结果URL。',
                            'type' => 'string',
                            'example' => 'http://xx.oss-cn-shanghai.aliyuncs.com/result2.txt',
                          ),
                          'Results' => 
                          array (
                            'description' => '标签识别结果列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '标签识别结果',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Data' => 
                                array (
                                  'description' => '分析结果的具体数据，以 JSON 字符串表示。不同 Type 的数据结构详见[Result 参数说明](https://help.aliyun.com/zh/ims/developer-reference/api-ice-2020-11-09-querysmarttagjob?spm=a2c4g.11186623.0.0.521d48b7KfapOL#api-detail-40)。',
                                  'type' => 'string',
                                  'example' => '{"autoChapters": [...]}',
                                ),
                                'Type' => 
                                array (
                                  'description' => '标签识别类型，取值：
- NLP：NLP 处理结果',
                                  'type' => 'string',
                                  'example' => 'NLP',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2FDE2411-DB8D-4A9A-875B-275798F14A5E\\",\\n  \\"MediaInfo\\": {\\n    \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"MediaBasicInfo\\": {\\n      \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"InputURL\\": \\"https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4\\",\\n      \\"MediaType\\": \\"video\\",\\n      \\"BusinessType\\": \\"general\\",\\n      \\"Source\\": \\"oss\\",\\n      \\"Title\\": \\"标题\\",\\n      \\"Description\\": \\"描述\\",\\n      \\"Category\\": \\"分类\\",\\n      \\"MediaTags\\": \\"标签,tag1\\",\\n      \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n      \\"UserData\\": \\"userDataTest\\",\\n      \\"Snapshots\\": \\"[\\\\n    \\\\\\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/snapshot-00001.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\\\\\",\\\\n    \\\\\\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/snapshot-00002.jpg?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\\\\\",\\\\n    \\\\\\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/snapshot-00003.jpg?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\\\\\"\\\\n]\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"CreateTime\\": \\"2020-12-26T04:11:08Z\\",\\n      \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\",\\n      \\"DeletedTime\\": \\"2020-12-26T04:11:15Z\\",\\n      \\"SpriteImages\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"32\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******83ec44d58b2069def2e******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-shanghai\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example/example-{Count}.jpg\\\\\\",\\\\\\"spriteRegular\\\\\\":\\\\\\"example/example-{TileCount}.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e438b14ff39293eaec25******\\\\\\",\\\\\\"tileCount\\\\\\":\\\\\\"1\\\\\\"}]\\",\\n      \\"CateId\\": 3048,\\n      \\"Biz\\": \\"ICE\\",\\n      \\"UploadSource\\": \\"general\\",\\n      \\"CateName\\": \\"cateName\\",\\n      \\"ReferenceId\\": \\"123-1234\\"\\n    },\\n    \\"FileInfoList\\": [\\n      {\\n        \\"FileBasicInfo\\": {\\n          \\"FileName\\": \\"example.mp4\\",\\n          \\"FileStatus\\": \\"Normal\\",\\n          \\"FileType\\": \\"source_file\\",\\n          \\"FileSize\\": \\"30611502\\",\\n          \\"FileUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n          \\"Region\\": \\"cn-shanghai\\",\\n          \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n          \\"Duration\\": \\"216.206667\\",\\n          \\"Bitrate\\": \\"1132.68\\",\\n          \\"Width\\": \\"960\\",\\n          \\"Height\\": \\"540\\",\\n          \\"CreateTime\\": \\"2020-12-26T04:11:08Z\\",\\n          \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\"\\n        },\\n        \\"AudioStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"1\\",\\n            \\"CodecName\\": \\"aac\\",\\n            \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n            \\"CodecTimeBase\\": \\"1/24000\\",\\n            \\"CodecTagString\\": \\"mp4a\\",\\n            \\"CodecTag\\": \\"0x6134706d\\",\\n            \\"Profile\\": \\"High\\",\\n            \\"SampleFmt\\": \\"fltp\\",\\n            \\"SampleRate\\": \\"44100\\",\\n            \\"Channels\\": \\"2\\",\\n            \\"ChannelLayout\\": \\"stereo\\",\\n            \\"Timebase\\": \\"1/44100\\",\\n            \\"StartTime\\": \\"0.000000\\",\\n            \\"Duration\\": \\"16.200998\\",\\n            \\"Bitrate\\": \\"127.794\\",\\n            \\"Fps\\": \\"8\\",\\n            \\"NumFrames\\": \\"10\\",\\n            \\"Lang\\": \\"und\\"\\n          }\\n        ],\\n        \\"VideoStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"0\\",\\n            \\"CodecName\\": \\"h264\\",\\n            \\"CodecLongName\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n            \\"Profile\\": \\"High\\",\\n            \\"CodecTimeBase\\": \\"1/48\\",\\n            \\"CodecTagString\\": \\"[0][0][0][0]\\",\\n            \\"CodecTag\\": \\"0x0000\\",\\n            \\"Width\\": \\"960\\",\\n            \\"Height\\": \\"540\\",\\n            \\"HasBFrames\\": \\"2\\",\\n            \\"Sar\\": \\"0:1\\",\\n            \\"Dar\\": \\"0:1\\",\\n            \\"PixFmt\\": \\"yuv420p\\",\\n            \\"Level\\": \\"30\\",\\n            \\"Fps\\": \\"24.0\\",\\n            \\"AvgFPS\\": \\"24.0\\",\\n            \\"Timebase\\": \\"1/12288\\",\\n            \\"StartTime\\": \\"0.081706\\",\\n            \\"Duration\\": \\"216.206706\\",\\n            \\"Bitrate\\": \\"1001.594\\",\\n            \\"NumFrames\\": \\"5184\\",\\n            \\"Lang\\": \\"und\\",\\n            \\"Rotate\\": \\"0\\",\\n            \\"Nb_frames\\": \\"5184\\"\\n          }\\n        ],\\n        \\"SubtitleStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"1\\",\\n            \\"CodecName\\": \\"srt\\",\\n            \\"CodecLongName\\": \\"SubRip Text\\",\\n            \\"CodecTimeBase\\": \\"29.97\\",\\n            \\"CodecTagString\\": \\"unicode\\",\\n            \\"CodecTag\\": \\"unicode\\",\\n            \\"Timebase\\": \\"30\\",\\n            \\"StartTime\\": \\"0\\",\\n            \\"Duration\\": \\"1\\",\\n            \\"Lang\\": \\"und\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"AiRoughData\\": {\\n      \\"Result\\": \\"https://sample-bucket.cn-shanghai.aliyuncs.com/result.json\\",\\n      \\"Status\\": \\"Analyzing\\",\\n      \\"SaveType\\": \\"TEXT\\",\\n      \\"AiCategory\\": \\"生活\\",\\n      \\"AiJobId\\": \\"****483915d4f2cd8ac20b48fb04****\\",\\n      \\"StandardSmartTagJob\\": {\\n        \\"AiJobId\\": \\"****483915d4f2cd8ac20b48fb04****\\",\\n        \\"Status\\": \\"Analyzing\\",\\n        \\"ResultUrl\\": \\"http://xx.oss-cn-shanghai.aliyuncs.com/result2.txt\\",\\n        \\"Results\\": [\\n          {\\n            \\"Data\\": \\"{\\\\\\"autoChapters\\\\\\": [...]}\\",\\n            \\"Type\\": \\"NLP\\"\\n          }\\n        ]\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetMediaInfoResponse>\\n    <RequestId>2FDE2411-DB8D-4A9A-875B-275798F14A5E</RequestId>\\n    <MediaInfo>\\n        <MediaId>****20b48fb04483915d4f2cd8ac****</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>****20b48fb04483915d4f2cd8ac****</MediaId>\\n            <InputURL>https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4</InputURL>\\n            <MediaType>video</MediaType>\\n            <BusinessType>general</BusinessType>\\n            <Source>oss</Source>\\n            <Title>标题</Title>\\n            <Description>描述</Description>\\n            <Category>分类</Category>\\n            <MediaTags>标签,tag1</MediaTags>\\n            <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n            <UserData>userDataTest</UserData>\\n            <Status>Normal</Status>\\n            <CreateTime>2020-12-26T04:11:08Z</CreateTime>\\n            <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n            <DeletedTime>2020-12-26T04:11:15Z</DeletedTime>\\n            <SpriteImages>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"32\\",\\"iceJobId\\":\\"******83ec44d58b2069def2e******\\",\\"location\\":\\"oss-cn-shanghai\\",\\"snapshotRegular\\":\\"example/example-{Count}.jpg\\",\\"spriteRegular\\":\\"example/example-{TileCount}.jpg\\",\\"templateId\\":\\"******e438b14ff39293eaec25******\\",\\"tileCount\\":\\"1\\"}]</SpriteImages>\\n            <CateId>3048</CateId>\\n            <Biz>ICE</Biz>\\n            <UploadSource>general</UploadSource>\\n            <CateName>cateName</CateName>\\n        </MediaBasicInfo>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example.mp4</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>30611502</FileSize>\\n                <FileUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mov,mp4,m4a,3gp,3g2,mj2</FormatName>\\n                <Duration>216.206667</Duration>\\n                <Bitrate>1132.68</Bitrate>\\n                <Width>960</Width>\\n                <Height>540</Height>\\n                <CreateTime>2020-12-26T04:11:08Z</CreateTime>\\n                <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n            </FileBasicInfo>\\n            <AudioStreamInfoList>\\n                <Index>1</Index>\\n                <CodecName>aac</CodecName>\\n                <CodecLongName>AAC (Advanced Audio Coding)</CodecLongName>\\n                <CodecTimeBase>1/24000</CodecTimeBase>\\n                <CodecTagString>mp4a</CodecTagString>\\n                <CodecTag>0x6134706d</CodecTag>\\n                <Profile>High</Profile>\\n                <SampleFmt>fltp</SampleFmt>\\n                <SampleRate>44100</SampleRate>\\n                <Channels>2</Channels>\\n                <ChannelLayout>stereo</ChannelLayout>\\n                <Timebase>1/44100</Timebase>\\n                <StartTime>0.000000</StartTime>\\n                <Duration>16.200998</Duration>\\n                <Bitrate>127.794</Bitrate>\\n                <Fps>8</Fps>\\n                <NumFrames>10</NumFrames>\\n                <Lang>und</Lang>\\n            </AudioStreamInfoList>\\n            <VideoStreamInfoList>\\n                <Index>0</Index>\\n                <CodecName>h264</CodecName>\\n                <CodecLongName>H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10</CodecLongName>\\n                <Profile>High</Profile>\\n                <CodecTimeBase>1/48</CodecTimeBase>\\n                <CodecTagString>[0][0][0][0]</CodecTagString>\\n                <CodecTag>0x0000</CodecTag>\\n                <Width>960</Width>\\n                <Height>540</Height>\\n                <HasBFrames>2</HasBFrames>\\n                <Sar>0:1</Sar>\\n                <Dar>0:1</Dar>\\n                <PixFmt>yuv420p</PixFmt>\\n                <Level>30</Level>\\n                <Fps>24.0</Fps>\\n                <AvgFPS>24.0</AvgFPS>\\n                <Timebase>1/12288</Timebase>\\n                <StartTime>0.081706</StartTime>\\n                <Duration>216.206706</Duration>\\n                <Bitrate>1001.594</Bitrate>\\n                <NumFrames>5184</NumFrames>\\n                <Lang>und</Lang>\\n                <Rotate>0</Rotate>\\n                <Nb_frames>5184</Nb_frames>\\n            </VideoStreamInfoList>\\n            <SubtitleStreamInfoList>\\n                <Index>1</Index>\\n                <CodecName>srt</CodecName>\\n                <CodecLongName>SubRip Text</CodecLongName>\\n                <CodecTimeBase>29.97</CodecTimeBase>\\n                <CodecTagString>unicode</CodecTagString>\\n                <CodecTag>unicode</CodecTag>\\n                <Timebase>30</Timebase>\\n                <StartTime>0</StartTime>\\n                <Duration>1</Duration>\\n                <Lang>und</Lang>\\n            </SubtitleStreamInfoList>\\n        </FileInfoList>\\n    </MediaInfo>\\n</GetMediaInfoResponse>","errorExample":""}]',
      'title' => '获取媒资内容信息',
      'description' => 'MediaId不为空时，优先使用MediaId。如果MediaId为空，则InputURL必须非空。',
    ),
    'UpdateMediaInfo' => 
    array (
      'summary' => '根据IMS mediaId或媒资InputURL，更新一个媒资的媒资信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资Id',
            'description' => '媒资Id，若为空，则必须有已在IMS内容库中注册过的InputURL。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'InputURL',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资媒体类型',
            'description' => '待注册的媒资在相应系统中的地址，一经注册不可更改，并与IMS的mediaId绑定。

\\- OSS地址，支持两种格式

1.http(s)://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4

2.oss://example-bucket/example.mp4 此格式默认oss region与服务接入区域一致',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
          ),
        ),
        2 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资业务类型',
            'description' => '媒资业务类型。取值范围：

- "subtitles" 字幕

- "watermark" 水印

- "opening" 片头/开场

- "ending" 片尾

- "general" 通用',
            'type' => 'string',
            'required' => false,
            'example' => 'video',
          ),
        ),
        3 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标题',
            'description' => '标题。

- 长度不超过128字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'defaultTitle',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '描述',
            'description' => '内容描述。

- 长度不超过1024字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'defaultDescription',
          ),
        ),
        5 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类',
            'description' => '分类。
- 长度不超过64字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'defaultCategory',
          ),
        ),
        6 => 
        array (
          'name' => 'MediaTags',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标签,如果有多个标签用逗号隔开',
            'description' => '标签。

- 最多不超过16个标签。

- 多个用逗号分隔。

- 单个标签不超过32字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'updateTags1,updateTags2',
          ),
        ),
        7 => 
        array (
          'name' => 'CoverURL',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '封面图，仅视频媒资有效',
            'description' => '封面地址。

- 长度不超过128字节。

- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png',
          ),
        ),
        8 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户数据，最大1024字节',
            'description' => '用户数据，最大1024字节。',
            'type' => 'string',
            'required' => false,
            'example' => 'userData',
          ),
        ),
        9 => 
        array (
          'name' => 'AppendTags',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否以append的形式更新Tags字段',
            'description' => '默认为false，取值：
- appendTags = true，以追加的模式更新MediaTags字段。
- appendTags = false，以覆盖的模式更新MediaTags字段。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'CateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3048',
          ),
        ),
        11 => 
        array (
          'name' => 'ReferenceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义ID，仅支持小写字母、大写字母、数字、横线、下划线，长度6-64位。需保证用户维度唯一。',
            'type' => 'string',
            'required' => false,
            'example' => '123-123',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'title' => 'ICE媒资ID',
                'description' => 'IMS媒资ID。',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateMediaInfoResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <MediaId>****20b48fb04483915d4f2cd8ac****</MediaId>\\n</UpdateMediaInfoResponse>","errorExample":""}]',
      'title' => '更新媒体信息',
      'description' => 'MediaId不为空时，优先使用MediaId。如果MediaId为空，则InputURL必须非空。返回请求ID和媒资ID。不支持给定MediaId，修改InputURL。',
    ),
    'DeleteMediaInfos' => 
    array (
      'summary' => '批量删除媒资信息，最多一次删20个。MediaIds不为空时，优先使用MediaIds。如果MediaIds为空，则InputURLs必须非空。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaIds',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ICE 媒资ID',
            'description' => 'IMS 媒资ID
- 多个用英文逗号分隔。

若MediaIds 字段为空，则InputURLs字段必须不为空。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****,****15d4a4b0448391508f2cb486****',
          ),
        ),
        1 => 
        array (
          'name' => 'InputURLs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '待注册的媒资在相应系统中的地址',
            'description' => '待删除的媒资在相应系统中的地址，该地址对应的文件需要先在IMS中注册，多个URL用英文逗号分隔。
支持两种格式
1. http(s)://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?
2. OSS://example-bucket/example.mp4?  
此格式默认OSS region与服务接入区域一致',
            'type' => 'string',
            'required' => false,
            'example' => 'http(s)://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4? 或者 oss://example-bucket/example.mp4?',
          ),
        ),
        2 => 
        array (
          'name' => 'DeletePhysicalFiles',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除媒资的物理文件。

若媒资的存储地址是用户自有oss，需对服务角色AliyunICEDefaultRole提前进行授权，具体操作请参见[删除录制文件说明（OSS授权管理）](https://help.aliyun.com/zh/ims/user-guide/record?spm=a2c4g.11186623.0.i8#0737d9c437bmn)。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '0622C702-41BE-467E-AF2E-883D4517962E',
              ),
              'IgnoredList' => 
              array (
                'title' => '出现获取错误的ID或inputUr',
                'description' => '出现获取错误的ID或InputURL（与用户输入一致）列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '出现获取错误的ID或InputURL（与用户输入一致）。',
                  'type' => 'string',
                  'example' => '****20b48fb04483915d4f2cd8ac****',
                ),
              ),
              'ForbiddenList' => 
              array (
                'description' => '不可删除的媒资ID或URL（与用户输入一致）列表。一般由于无权限导致。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '不可删除的媒资ID或URL（与用户输入一致）。',
                  'type' => 'string',
                  'example' => '****15d4a4b0448391508f2cb486****
',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0622C702-41BE-467E-AF2E-883D4517962E\\",\\n  \\"IgnoredList\\": [\\n    \\"****20b48fb04483915d4f2cd8ac****\\"\\n  ],\\n  \\"ForbiddenList\\": [\\n    \\"****15d4a4b0448391508f2cb486****\\\\n\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DeleteMediaInfosResponse>\\n    <RequestId>0622C702-41BE-467E-AF2E-883D4517962E</RequestId>\\n    <IgnoredList>****20b48fb04483915d4f2cd8ac****</IgnoredList>\\n</DeleteMediaInfosResponse>","errorExample":""}]',
      'title' => '删除媒资内容',
    ),
    'BatchGetMediaInfos' => 
    array (
      'summary' => '批量获取媒资信息，支持传入多个mediaId。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '所有待查询的媒资ID，以逗号分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '******b48fb04483915d4f2cd8******,******c48fb37407365d4f2cd8******',
          ),
        ),
        1 => 
        array (
          'name' => 'AdditionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量查询的媒资额外信息，默认只返回BasicInfo，额外文件信息内容包括：

\\-FileInfo

\\-DynamicMetaData',
            'type' => 'string',
            'required' => false,
            'example' => 'FileInfo,DynamicMetaData',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaInfos' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID',
                      'type' => 'string',
                      'example' => '******c48fb37407365d4f2cd8******',
                    ),
                    'MediaBasicInfo' => 
                    array (
                      'title' => 'BasicInfo',
                      'description' => '媒资基础信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => 'MediaId',
                          'description' => 'MediaId',
                          'type' => 'string',
                          'example' => '******c48fb37407365d4f2cd8******',
                        ),
                        'InputURL' => 
                        array (
                          'title' => '待注册的媒资在相应系统中的地址',
                          'description' => '待注册的媒资在相应系统中的地址',
                          'type' => 'string',
                          'example' => 'https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
                        ),
                        'MediaType' => 
                        array (
                          'title' => '媒资媒体类型',
                          'description' => '媒资媒体类型

\\-Image

\\-Video

\\-Audio

\\-Text',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'BusinessType' => 
                        array (
                          'title' => '媒资业务类型',
                          'description' => '媒资业务类型',
                          'type' => 'string',
                          'example' => 'general',
                        ),
                        'Source' => 
                        array (
                          'title' => '来源',
                          'description' => '来源

\\-OSS

\\-vod',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Title' => 
                        array (
                          'title' => '标题',
                          'description' => '标题',
                          'type' => 'string',
                          'example' => '标题',
                        ),
                        'Description' => 
                        array (
                          'title' => '内容描述',
                          'description' => '内容描述',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                        'Category' => 
                        array (
                          'title' => '分类',
                          'description' => '分类',
                          'type' => 'string',
                          'example' => '分类',
                        ),
                        'MediaTags' => 
                        array (
                          'title' => '标签',
                          'description' => '标签',
                          'type' => 'string',
                          'example' => '标签,tag1',
                        ),
                        'CoverURL' => 
                        array (
                          'title' => '封面地址',
                          'description' => '封面地址',
                          'type' => 'string',
                          'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据',
                          'type' => 'string',
                          'example' => 'userDataTest',
                        ),
                        'Snapshots' => 
                        array (
                          'title' => '截图',
                          'description' => '截图',
                          'type' => 'string',
                          'example' => '[{"bucket":"example-bucket","count":"3","iceJobId":"******f48f0e4154976b2b8c45******","location":"oss-cn-beijing","snapshotRegular":"example.jpg","templateId":"******e6a6440b29eb60bd7c******"}]',
                        ),
                        'Status' => 
                        array (
                          'title' => '资源状态',
                          'description' => '资源状态',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'TranscodeStatus' => 
                        array (
                          'title' => '转码状态',
                          'description' => '转码状态',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '媒资创建时间',
                          'description' => '媒资创建时间',
                          'type' => 'string',
                          'example' => '2020-12-26T04:11:10Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'title' => '媒资修改时间',
                          'description' => '媒资修改时间',
                          'type' => 'string',
                          'example' => '2020-12-26T04:11:12Z',
                        ),
                        'DeletedTime' => 
                        array (
                          'title' => '媒资删除时间',
                          'description' => '媒资删除时间',
                          'type' => 'string',
                          'example' => '2020-12-26T04:11:10Z',
                        ),
                        'SpriteImages' => 
                        array (
                          'title' => '雪碧图',
                          'description' => '雪碧图',
                          'type' => 'string',
                          'example' => '[{"bucket":"example-bucket","count":"32","iceJobId":"******83ec44d58b2069def2e******","location":"oss-cn-shanghai","snapshotRegular":"example/example-{Count}.jpg","spriteRegular":"example/example-{TileCount}.jpg","templateId":"******e438b14ff39293eaec25******","tileCount":"1"}]',
                        ),
                      ),
                    ),
                    'FileInfoList' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => 'FileInfos',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'FileBasicInfo' => 
                          array (
                            'title' => '文件基础信息，包含时长，大小等',
                            'description' => '文件基础信息，包含时长，大小等',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FileName' => 
                              array (
                                'title' => '文件名',
                                'description' => '文件名',
                                'type' => 'string',
                                'example' => 'example',
                              ),
                              'FileStatus' => 
                              array (
                                'title' => '文件状态',
                                'description' => '文件状态',
                                'type' => 'string',
                                'example' => 'Normal',
                              ),
                              'FileType' => 
                              array (
                                'title' => '文件类型',
                                'description' => '文件类型',
                                'type' => 'string',
                                'example' => 'source_file',
                              ),
                              'FileSize' => 
                              array (
                                'title' => '文件大小（字节）',
                                'description' => '文件大小（字节）',
                                'type' => 'string',
                                'example' => '30611502',
                              ),
                              'FileUrl' => 
                              array (
                                'title' => '文件oss地址',
                                'description' => '文件OSS地址',
                                'type' => 'string',
                                'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                              ),
                              'Region' => 
                              array (
                                'title' => '文件存储区域',
                                'description' => '文件存储区域',
                                'type' => 'string',
                                'example' => 'cn-shanghai',
                              ),
                              'FormatName' => 
                              array (
                                'title' => '封装格式',
                                'description' => '封装格式',
                                'type' => 'string',
                                'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '200',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '1132.68',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽',
                                'type' => 'string',
                                'example' => '1920',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高',
                                'type' => 'string',
                                'example' => '1080',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaInfos\\": [\\n    {\\n      \\"MediaId\\": \\"******c48fb37407365d4f2cd8******\\",\\n      \\"MediaBasicInfo\\": {\\n        \\"MediaId\\": \\"******c48fb37407365d4f2cd8******\\",\\n        \\"InputURL\\": \\"https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4\\",\\n        \\"MediaType\\": \\"video\\",\\n        \\"BusinessType\\": \\"general\\",\\n        \\"Source\\": \\"oss\\",\\n        \\"Title\\": \\"标题\\",\\n        \\"Description\\": \\"描述\\",\\n        \\"Category\\": \\"分类\\",\\n        \\"MediaTags\\": \\"标签,tag1\\",\\n        \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n        \\"UserData\\": \\"userDataTest\\",\\n        \\"Snapshots\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"3\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******f48f0e4154976b2b8c45******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-beijing\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e6a6440b29eb60bd7c******\\\\\\"}]\\",\\n        \\"Status\\": \\"Normal\\",\\n        \\"TranscodeStatus\\": \\"Init\\",\\n        \\"CreateTime\\": \\"2020-12-26T04:11:10Z\\",\\n        \\"ModifiedTime\\": \\"2020-12-26T04:11:12Z\\",\\n        \\"DeletedTime\\": \\"2020-12-26T04:11:10Z\\",\\n        \\"SpriteImages\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"32\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******83ec44d58b2069def2e******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-shanghai\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example/example-{Count}.jpg\\\\\\",\\\\\\"spriteRegular\\\\\\":\\\\\\"example/example-{TileCount}.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e438b14ff39293eaec25******\\\\\\",\\\\\\"tileCount\\\\\\":\\\\\\"1\\\\\\"}]\\"\\n      },\\n      \\"FileInfoList\\": [\\n        {\\n          \\"FileBasicInfo\\": {\\n            \\"FileName\\": \\"example\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"30611502\\",\\n            \\"FileUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n            \\"Duration\\": \\"200\\",\\n            \\"Bitrate\\": \\"1132.68\\",\\n            \\"Width\\": \\"1920\\",\\n            \\"Height\\": \\"1080\\"\\n          }\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetMediaInfosResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <MediaInfos>\\n        <MediaId>******c48fb37407365d4f2cd8******</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>******c48fb37407365d4f2cd8******</MediaId>\\n            <InputURL>https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4</InputURL>\\n            <MediaType>video</MediaType>\\n            <BusinessType>general</BusinessType>\\n            <Source>oss</Source>\\n            <Title>标题</Title>\\n            <Description>描述</Description>\\n            <Category>分类</Category>\\n            <MediaTags>标签,tag1</MediaTags>\\n            <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n            <UserData>userDataTest</UserData>\\n            <Snapshots>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"3\\",\\"iceJobId\\":\\"******f48f0e4154976b2b8c45******\\",\\"location\\":\\"oss-cn-beijing\\",\\"snapshotRegular\\":\\"example.jpg\\",\\"templateId\\":\\"******e6a6440b29eb60bd7c******\\"}]</Snapshots>\\n            <Status>Normal</Status>\\n            <TranscodeStatus>Init</TranscodeStatus>\\n            <CreateTime>2020-12-26T04:11:10Z</CreateTime>\\n            <ModifiedTime>2020-12-26T04:11:12Z</ModifiedTime>\\n            <DeletedTime>2020-12-26T04:11:10Z</DeletedTime>\\n            <SpriteImages>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"32\\",\\"iceJobId\\":\\"******83ec44d58b2069def2e******\\",\\"location\\":\\"oss-cn-shanghai\\",\\"snapshotRegular\\":\\"example/example-{Count}.jpg\\",\\"spriteRegular\\":\\"example/example-{TileCount}.jpg\\",\\"templateId\\":\\"******e438b14ff39293eaec25******\\",\\"tileCount\\":\\"1\\"}]</SpriteImages>\\n        </MediaBasicInfo>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>30611502</FileSize>\\n                <FileUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mov,mp4,m4a,3gp,3g2,mj2</FormatName>\\n                <Duration>200</Duration>\\n                <Bitrate>1132.68</Bitrate>\\n                <Width>1920</Width>\\n                <Height>1080</Height>\\n            </FileBasicInfo>\\n        </FileInfoList>\\n    </MediaInfos>\\n</BatchGetMediaInfosResponse>","errorExample":""}]',
      'title' => '批量获取媒体信息',
    ),
    'ListMediaBasicInfos' => 
    array (
      'summary' => '根据用户所给参数，返回所有符合条件的媒资的基础信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '创建时间',
            'description' => 'utcCreated（创建时间）的开始时间。

\\- 为开区间（大于开始时间）。

\\- 日期格式按照ISO8601标准表示，使用UTC时间。格式为："YYYY-MM-DD\'T\'hh:mm:ss\'Z\'"。例如：2017-01-11T12:00:00Z 表示北京时间2017年1月11日20点0分0秒。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-12-20T12:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结束时间',
            'description' => 'utcCreated的结束时间。

\\- 为闭区间（小于等于结束时间）。

\\- 日期格式按照ISO8601标准表示，使用UTC时间。格式为："YYYY-MM-DD\'T\'hh:mm:ss\'Z\'"。例如：2017-01-11T12:00:00Z 表示北京时间2017年1月11日20点0分0秒。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-12-20T13:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'MediaType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资媒体类型',
            'description' => '媒资媒体类型。取值范围：

\\- "image" 图片

\\- "video" 视频

\\- "audio" 音频

\\- "text" 文字',
            'type' => 'string',
            'required' => false,
            'example' => 'video',
          ),
        ),
        3 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资业务类型',
            'description' => '媒资业务类型。取值范围：

\\- "subtitles" 字幕

\\- "watermark" 水印

\\- "opening" 片头/开场

\\- "ending" 片尾

\\- "general" 通用',
            'type' => 'string',
            'required' => false,
            'example' => 'opening',
          ),
        ),
        4 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '来源',
            'description' => '来源,

\\- "oss" OSS存储

\\- "vod" 视频点播

\\- "live" 视频直播

\\- "general" 其他来源（默认）',
            'type' => 'string',
            'required' => false,
            'example' => 'oss',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源状态',
            'description' => '资源状态。取值范围：

\\- Init（初始状态：源文件未就绪）

\\- Preparing（源文件准备中：比如上传中或者剪辑合成中）

\\- PrepareFail（源文件准备失败：比如获取源文件信息失败）

\\- Normal（正常：源文件已就绪）',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页号',
            'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
            'type' => 'string',
            'required' => false,
            'example' => 'pSa1SQ0wCe5pzVrQ6mWZEw==',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小',
            'description' => '本次请求所返回的最大记录条数。

最大值：100，默认值：10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '5',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序',
            'description' => '根据utcCreated排序, 默认倒序

\\- "desc" 倒序

\\- "asc" 正序',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        9 => 
        array (
          'name' => 'IncludeFileBasicInfo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回值中是否包含文件基础信息',
            'description' => '如果为true，返回值中包含文件基础信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资ID，单个媒资ID支持前缀匹配',
            'description' => '媒资ID',
            'type' => 'string',
            'required' => false,
            'example' => '****019b82e24b37a1c2958dec38****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******B7-7F87-4792-BFE9-63CD21******',
              ),
              'TotalCount' => 
              array (
                'title' => '符合要求的媒资总数',
                'description' => '本次请求条件下的数据总量',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '4',
              ),
              'MediaInfos' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID',
                      'type' => 'string',
                      'example' => '****019b82e24b37a1c2958dec38****',
                    ),
                    'MediaBasicInfo' => 
                    array (
                      'title' => 'BasicInfo',
                      'description' => 'BasicInfo',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => 'MediaId',
                          'description' => '媒资ID',
                          'type' => 'string',
                          'example' => '****019b82e24b37a1c2958dec38****',
                        ),
                        'InputURL' => 
                        array (
                          'title' => '待注册的媒资在相应系统中的地址',
                          'description' => '待注册的媒资在相应系统中的地址',
                          'type' => 'string',
                          'example' => 'https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
                        ),
                        'MediaType' => 
                        array (
                          'title' => '媒资媒体类型',
                          'description' => '媒资媒体类型',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'BusinessType' => 
                        array (
                          'title' => '媒资业务类型',
                          'description' => '媒资业务类型',
                          'type' => 'string',
                          'example' => 'opening',
                        ),
                        'Source' => 
                        array (
                          'title' => '来源',
                          'description' => '来源',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Title' => 
                        array (
                          'title' => '标题',
                          'description' => '标题',
                          'type' => 'string',
                          'example' => 'title标题',
                        ),
                        'Description' => 
                        array (
                          'title' => '内容描述',
                          'description' => '内容描述',
                          'type' => 'string',
                          'example' => 'desc 描述',
                        ),
                        'Category' => 
                        array (
                          'title' => '分类',
                          'description' => '分类',
                          'type' => 'string',
                          'example' => '分类 category',
                        ),
                        'MediaTags' => 
                        array (
                          'title' => '标签',
                          'description' => '标签',
                          'type' => 'string',
                          'example' => 'tags,tags2',
                        ),
                        'CoverURL' => 
                        array (
                          'title' => '封面地址',
                          'description' => '封面地址',
                          'type' => 'string',
                          'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据',
                          'type' => 'string',
                          'example' => 'userData',
                        ),
                        'Snapshots' => 
                        array (
                          'title' => '截图',
                          'description' => '截图',
                          'type' => 'string',
                          'example' => '[{"bucket":"example-bucket","count":"3","iceJobId":"******f48f0e4154976b2b8c45******","location":"oss-cn-beijing","snapshotRegular":"example.jpg","templateId":"******e6a6440b29eb60bd7c******"}]',
                        ),
                        'Status' => 
                        array (
                          'title' => '资源状态',
                          'description' => '资源状态',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'TranscodeStatus' => 
                        array (
                          'title' => '转码状态',
                          'description' => '转码状态',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '媒资创建时间',
                          'description' => '媒资创建时间',
                          'type' => 'string',
                          'example' => '2021-01-08T16:52:04Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'title' => '媒资修改时间',
                          'description' => '媒资修改时间',
                          'type' => 'string',
                          'example' => '2021-01-08T16:52:07Z',
                        ),
                        'DeletedTime' => 
                        array (
                          'title' => '媒资删除时间',
                          'description' => '媒资删除时间',
                          'type' => 'string',
                          'example' => '2021-01-08T16:52:07Z',
                        ),
                        'SpriteImages' => 
                        array (
                          'title' => '雪碧图',
                          'description' => '雪碧图',
                          'type' => 'string',
                          'example' => '[{"bucket":"example-bucket","count":"32","iceJobId":"******83ec44d58b2069def2e******","location":"oss-cn-shanghai","snapshotRegular":"example/example-{Count}.jpg","spriteRegular":"example/example-{TileCount}.jpg","templateId":"******e438b14ff39293eaec25******","tileCount":"1"}]',
                        ),
                        'CateId' => 
                        array (
                          'description' => '分类ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3049',
                        ),
                        'Biz' => 
                        array (
                          'description' => '媒资所属业务',
                          'type' => 'string',
                          'example' => 'ICE',
                        ),
                        'UploadSource' => 
                        array (
                          'description' => '媒资上传来源',
                          'type' => 'string',
                          'example' => 'general',
                        ),
                        'ReferenceId' => 
                        array (
                          'description' => '自定义ID，仅支持小写字母、大写字母、数字、横线、下划线，长度6-64位。用户维度唯一。',
                          'type' => 'string',
                          'example' => '123-123',
                        ),
                      ),
                    ),
                    'FileInfoList' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => 'FileInfos',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'FileBasicInfo' => 
                          array (
                            'title' => '文件基础信息，包含时长，大小等',
                            'description' => '文件基础信息，包含时长，大小等',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FileName' => 
                              array (
                                'title' => '文件名',
                                'description' => '文件名',
                                'type' => 'string',
                                'example' => 'example.mp4',
                              ),
                              'FileStatus' => 
                              array (
                                'title' => '文件状态',
                                'description' => '文件状态',
                                'type' => 'string',
                                'example' => 'Normal',
                              ),
                              'FileType' => 
                              array (
                                'description' => '文件类型',
                                'type' => 'string',
                                'example' => 'source_file',
                              ),
                              'FileSize' => 
                              array (
                                'title' => '文件大小（字节）',
                                'description' => '文件大小（字节）',
                                'type' => 'string',
                                'example' => '14340962',
                              ),
                              'FileUrl' => 
                              array (
                                'title' => '文件oss地址',
                                'description' => '文件OSS地址',
                                'type' => 'string',
                                'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                              ),
                              'Region' => 
                              array (
                                'title' => '文件存储区域',
                                'description' => '文件存储区域',
                                'type' => 'string',
                                'example' => 'cn-shanghai',
                              ),
                              'FormatName' => 
                              array (
                                'title' => '封装格式',
                                'description' => '封装格式',
                                'type' => 'string',
                                'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '60.00000',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '1912.13',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽',
                                'type' => 'string',
                                'example' => '1280',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高',
                                'type' => 'string',
                                'example' => '720',
                              ),
                              'CreateTime' => 
                              array (
                                'description' => '文件创建时间',
                                'type' => 'string',
                                'example' => '2021-01-08T16:52:04Z',
                              ),
                              'ModifiedTime' => 
                              array (
                                'description' => '文件修改时间',
                                'type' => 'string',
                                'example' => '2021-01-08T16:52:07Z',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕',
                'type' => 'string',
                'example' => '8EqYpQbZ6Eh7+Zz8DxVYoQ==',
              ),
              'MaxResults' => 
              array (
                'description' => '本次请求所返回的最大记录条数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******B7-7F87-4792-BFE9-63CD21******\\",\\n  \\"TotalCount\\": 4,\\n  \\"MediaInfos\\": [\\n    {\\n      \\"MediaId\\": \\"****019b82e24b37a1c2958dec38****\\",\\n      \\"MediaBasicInfo\\": {\\n        \\"MediaId\\": \\"****019b82e24b37a1c2958dec38****\\",\\n        \\"InputURL\\": \\"https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4\\",\\n        \\"MediaType\\": \\"video\\",\\n        \\"BusinessType\\": \\"opening\\",\\n        \\"Source\\": \\"oss\\",\\n        \\"Title\\": \\"title标题\\",\\n        \\"Description\\": \\"desc 描述\\",\\n        \\"Category\\": \\"分类 category\\",\\n        \\"MediaTags\\": \\"tags,tags2\\",\\n        \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n        \\"UserData\\": \\"userData\\",\\n        \\"Snapshots\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"3\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******f48f0e4154976b2b8c45******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-beijing\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e6a6440b29eb60bd7c******\\\\\\"}]\\",\\n        \\"Status\\": \\"Normal\\",\\n        \\"TranscodeStatus\\": \\"Init\\",\\n        \\"CreateTime\\": \\"2021-01-08T16:52:04Z\\",\\n        \\"ModifiedTime\\": \\"2021-01-08T16:52:07Z\\",\\n        \\"DeletedTime\\": \\"2021-01-08T16:52:07Z\\",\\n        \\"SpriteImages\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"32\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******83ec44d58b2069def2e******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-shanghai\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example/example-{Count}.jpg\\\\\\",\\\\\\"spriteRegular\\\\\\":\\\\\\"example/example-{TileCount}.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e438b14ff39293eaec25******\\\\\\",\\\\\\"tileCount\\\\\\":\\\\\\"1\\\\\\"}]\\",\\n        \\"CateId\\": 3049,\\n        \\"Biz\\": \\"ICE\\",\\n        \\"UploadSource\\": \\"general\\",\\n        \\"ReferenceId\\": \\"123-123\\"\\n      },\\n      \\"FileInfoList\\": [\\n        {\\n          \\"FileBasicInfo\\": {\\n            \\"FileName\\": \\"example.mp4\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"14340962\\",\\n            \\"FileUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n            \\"Duration\\": \\"60.00000\\",\\n            \\"Bitrate\\": \\"1912.13\\",\\n            \\"Width\\": \\"1280\\",\\n            \\"Height\\": \\"720\\",\\n            \\"CreateTime\\": \\"2021-01-08T16:52:04Z\\",\\n            \\"ModifiedTime\\": \\"2021-01-08T16:52:07Z\\"\\n          }\\n        }\\n      ]\\n    }\\n  ],\\n  \\"NextToken\\": \\"8EqYpQbZ6Eh7+Zz8DxVYoQ==\\",\\n  \\"MaxResults\\": 2\\n}","errorExample":""},{"type":"xml","example":"<ListMediaBasicInfosResponse>\\n    <RequestId>******B7-7F87-4792-BFE9-63CD21******</RequestId>\\n    <TotalCount>4</TotalCount>\\n    <MediaInfos>\\n        <MediaId>****019b82e24b37a1c2958dec38****</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>****019b82e24b37a1c2958dec38****</MediaId>\\n            <InputURL>https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4</InputURL>\\n            <MediaType>video</MediaType>\\n            <BusinessType>opening</BusinessType>\\n            <Source>oss</Source>\\n            <Title>title标题</Title>\\n            <Description>desc 描述</Description>\\n            <Category>分类 category</Category>\\n            <MediaTags>tags,tags2</MediaTags>\\n            <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n            <UserData>userData</UserData>\\n            <Snapshots>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"3\\",\\"iceJobId\\":\\"******f48f0e4154976b2b8c45******\\",\\"location\\":\\"oss-cn-beijing\\",\\"snapshotRegular\\":\\"example.jpg\\",\\"templateId\\":\\"******e6a6440b29eb60bd7c******\\"}]</Snapshots>\\n            <Status>Normal</Status>\\n            <TranscodeStatus>Init</TranscodeStatus>\\n            <CreateTime>2021-01-08T16:52:04Z</CreateTime>\\n            <ModifiedTime>2021-01-08T16:52:07Z</ModifiedTime>\\n            <DeletedTime>2021-01-08T16:52:07Z</DeletedTime>\\n            <SpriteImages>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"32\\",\\"iceJobId\\":\\"******83ec44d58b2069def2e******\\",\\"location\\":\\"oss-cn-shanghai\\",\\"snapshotRegular\\":\\"example/example-{Count}.jpg\\",\\"spriteRegular\\":\\"example/example-{TileCount}.jpg\\",\\"templateId\\":\\"******e438b14ff39293eaec25******\\",\\"tileCount\\":\\"1\\"}]</SpriteImages>\\n            <CateId>3049</CateId>\\n            <Biz>ICE</Biz>\\n            <UploadSource>general</UploadSource>\\n        </MediaBasicInfo>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example.mp4</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>14340962</FileSize>\\n                <FileUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mov,mp4,m4a,3gp,3g2,mj2</FormatName>\\n                <Duration>60.00000</Duration>\\n                <Bitrate>1912.13</Bitrate>\\n                <Width>1280</Width>\\n                <Height>720</Height>\\n                <CreateTime>2021-01-08T16:52:04Z</CreateTime>\\n                <ModifiedTime>2021-01-08T16:52:07Z</ModifiedTime>\\n            </FileBasicInfo>\\n        </FileInfoList>\\n    </MediaInfos>\\n    <NextToken>8EqYpQbZ6Eh7+Zz8DxVYoQ==</NextToken>\\n    <MaxResults>2</MaxResults>\\n</ListMediaBasicInfosResponse>","errorExample":""}]',
      'title' => '列出媒资基础信息',
      'description' => '如果includeFileBasicInfo字段为真，也返回源文件基础信息，例如：时长、文件大小，最多筛选符合条件的前100条。所有符合条件的媒资需要精确匹配所有非空字段。支持精确匹配的字段有媒资媒体类型、来源、媒资业务类型、分类、资源状态。当一次性无法返回所有信息时，用户可使用nextToken进行下一轮查询。',
    ),
    'ListPublicMediaBasicInfos' => 
    array (
      'summary' => '列出符合条件的公共素材库媒资基础信息，最多筛选出100条。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'Anonymous' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaTagId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标签',
            'description' => '媒资标签，根据此mediaTagId进行匹配,返回所有包含此标签的媒资。取值：
- sticker（贴纸类型）
    - sticker-atmosphere：气氛
    - sticker-bubble：气泡
    - sticker-cute：可爱
    - sticker-daily：日常
    - sticker-expression：表情
    - sticker-gif：动图
- bgm（背景音乐类型）
    - bgm-romantic：浪漫
    - bgm-cuisine：美食
    - bgm-chinese-style：国风
    - bgm-upbeat：轻快
    - bgm-dynamic：动感
    - bgm-relaxing：舒缓
    - bgm-quirky：搞怪
    - bgm-beauty：时尚/美妆
- bgi（背景图片类型）
    - bgi-grad：渐变背景
    - bgi-solid：纯色背景
    - bgi-pic：图片背景',
            'type' => 'string',
            'required' => false,
            'example' => 'sticker-atmosphere',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '下一次读取的位置',
            'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
            'type' => 'string',
            'required' => false,
            'example' => 'pSa1SQ0wCe5pzVrQ6mWZEw==',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小',
            'description' => '本次请求所返回的最大记录条数。

最大值：100，默认值：10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '5',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页数',
            'description' => '当前页码。默认值为1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '2147483647',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小',
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'IncludeFileBasicInfo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回值中是否包含文件基础信息',
            'description' => '如果为true，返回值中包含文件基础信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资业务类型。取值范围：

- sticker：贴纸

- bgm：背景音乐

- bgi：背景图片',
            'type' => 'string',
            'required' => false,
            'example' => 'sticker',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******B7-7F87-4792-BFE9-63CD21******',
              ),
              'TotalCount' => 
              array (
                'title' => '符合要求的媒资总数',
                'description' => '符合要求的媒资总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'MediaInfos' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => '****019b82e24b37a1c2958dec38****',
                    ),
                    'MediaBasicInfo' => 
                    array (
                      'title' => 'BasicInfo',
                      'description' => '媒资基础信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => 'MediaId',
                          'description' => '媒资ID。',
                          'type' => 'string',
                          'example' => '****019b82e24b37a1c2958dec38****',
                        ),
                        'InputURL' => 
                        array (
                          'title' => '待注册的媒资在相应系统中的地址',
                          'description' => '待注册的媒资在相应系统中的地址。',
                          'type' => 'string',
                          'example' => 'https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
                        ),
                        'MediaType' => 
                        array (
                          'title' => '媒资媒体类型',
                          'description' => '媒资媒体类型。',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'BusinessType' => 
                        array (
                          'title' => '媒资业务类型',
                          'description' => '媒资业务类型。',
                          'type' => 'string',
                          'example' => 'general',
                        ),
                        'Source' => 
                        array (
                          'title' => '来源',
                          'description' => '来源。',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Title' => 
                        array (
                          'title' => '标题',
                          'description' => '标题。',
                          'type' => 'string',
                          'example' => 'title标题',
                        ),
                        'Description' => 
                        array (
                          'title' => '内容描述',
                          'description' => '内容描述。',
                          'type' => 'string',
                          'example' => 'description',
                        ),
                        'Category' => 
                        array (
                          'title' => '分类',
                          'description' => '分类。',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'MediaTags' => 
                        array (
                          'title' => '标签',
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'sticker-daily',
                        ),
                        'CoverURL' => 
                        array (
                          'title' => '封面地址',
                          'description' => '封面地址。',
                          'type' => 'string',
                          'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据。',
                          'type' => 'string',
                          'example' => 'userData',
                        ),
                        'Snapshots' => 
                        array (
                          'title' => '截图',
                          'description' => '截图。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'Status' => 
                        array (
                          'title' => '资源状态',
                          'description' => '资源状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'TranscodeStatus' => 
                        array (
                          'title' => '转码状态',
                          'description' => '转码状态。',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '媒资创建时间',
                          'description' => '媒资创建时间。',
                          'type' => 'string',
                          'example' => '2021-01-08T16:52:04Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'title' => '媒资修改时间',
                          'description' => '媒资修改时间。',
                          'type' => 'string',
                          'example' => '2021-01-08T16:52:04Z',
                        ),
                        'DeletedTime' => 
                        array (
                          'title' => '媒资删除时间',
                          'description' => '媒资删除时间。',
                          'type' => 'string',
                          'example' => '2021-01-08T16:52:04Z',
                        ),
                      ),
                    ),
                    'FileInfoList' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => '文件信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'FileBasicInfo' => 
                          array (
                            'title' => '文件基础信息，包含时长，大小等',
                            'description' => '文件基础信息，包含时长，大小等。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FileName' => 
                              array (
                                'title' => '文件名',
                                'description' => '文件名。',
                                'type' => 'string',
                                'example' => 'example.mp4',
                              ),
                              'FileStatus' => 
                              array (
                                'title' => '文件状态',
                                'description' => '文件状态。',
                                'type' => 'string',
                                'example' => 'Normal',
                              ),
                              'FileType' => 
                              array (
                                'title' => '文件类型',
                                'description' => '文件类型。',
                                'type' => 'string',
                                'example' => 'source_file',
                              ),
                              'FileSize' => 
                              array (
                                'title' => '文件大小（字节）',
                                'description' => '文件大小（字节）。',
                                'type' => 'string',
                                'example' => '338990717',
                              ),
                              'FileUrl' => 
                              array (
                                'title' => '文件oss地址',
                                'description' => '文件OSS地址。',
                                'type' => 'string',
                                'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                              ),
                              'Region' => 
                              array (
                                'title' => '文件存储区域',
                                'description' => '文件存储区域。',
                                'type' => 'string',
                                'example' => 'cn-shanghai',
                              ),
                              'FormatName' => 
                              array (
                                'title' => '封装格式',
                                'description' => '封装格式。',
                                'type' => 'string',
                                'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长。',
                                'type' => 'string',
                                'example' => '10.040000',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率。',
                                'type' => 'string',
                                'example' => '270112.12',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽。',
                                'type' => 'string',
                                'example' => '1920',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高。',
                                'type' => 'string',
                                'example' => '1080',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
                'type' => 'string',
                'example' => '8EqYpQbZ6Eh7+Zz8DxVYoQ==',
              ),
              'MaxResults' => 
              array (
                'description' => '本次请求所返回的最大记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******B7-7F87-4792-BFE9-63CD21******\\",\\n  \\"TotalCount\\": 2,\\n  \\"MediaInfos\\": [\\n    {\\n      \\"MediaId\\": \\"****019b82e24b37a1c2958dec38****\\",\\n      \\"MediaBasicInfo\\": {\\n        \\"MediaId\\": \\"****019b82e24b37a1c2958dec38****\\",\\n        \\"InputURL\\": \\"https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4\\",\\n        \\"MediaType\\": \\"video\\",\\n        \\"BusinessType\\": \\"general\\",\\n        \\"Source\\": \\"oss\\",\\n        \\"Title\\": \\"title标题\\",\\n        \\"Description\\": \\"description\\",\\n        \\"Category\\": \\"video\\",\\n        \\"MediaTags\\": \\"sticker-daily\\",\\n        \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n        \\"UserData\\": \\"userData\\",\\n        \\"Snapshots\\": \\"null\\",\\n        \\"Status\\": \\"Normal\\",\\n        \\"TranscodeStatus\\": \\"Init\\",\\n        \\"CreateTime\\": \\"2021-01-08T16:52:04Z\\",\\n        \\"ModifiedTime\\": \\"2021-01-08T16:52:04Z\\",\\n        \\"DeletedTime\\": \\"2021-01-08T16:52:04Z\\"\\n      },\\n      \\"FileInfoList\\": [\\n        {\\n          \\"FileBasicInfo\\": {\\n            \\"FileName\\": \\"example.mp4\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"338990717\\",\\n            \\"FileUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n            \\"Duration\\": \\"10.040000\\",\\n            \\"Bitrate\\": \\"270112.12\\",\\n            \\"Width\\": \\"1920\\",\\n            \\"Height\\": \\"1080\\"\\n          }\\n        }\\n      ]\\n    }\\n  ],\\n  \\"NextToken\\": \\"8EqYpQbZ6Eh7+Zz8DxVYoQ==\\",\\n  \\"MaxResults\\": 2\\n}","errorExample":""},{"type":"xml","example":"<ListPublicMediaBasicInfosResponse>\\n    <RequestId>B45F83B7-7F87-4792-BFE9-63CD2137CAF0</RequestId>\\n    <TotalCount>2</TotalCount>\\n    <MediaInfos>\\n        <MediaId>****019b82e24b37a1c2958dec38****</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>****019b82e24b37a1c2958dec38****</MediaId>\\n            <InputURL>https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4</InputURL>\\n            <MediaType>video</MediaType>\\n            <BusinessType>general</BusinessType>\\n            <Source>oss</Source>\\n            <Title>title标题</Title>\\n            <Description>description</Description>\\n            <Category>video</Category>\\n            <MediaTags>sticker-daily</MediaTags>\\n            <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n            <UserData>userData</UserData>\\n            <Snapshots>null</Snapshots>\\n            <Status>Normal</Status>\\n            <TranscodeStatus>Init</TranscodeStatus>\\n            <CreateTime>2021-01-08T16:52:04Z</CreateTime>\\n            <ModifiedTime>2021-01-08T16:52:04Z</ModifiedTime>\\n            <DeletedTime>2021-01-08T16:52:04Z</DeletedTime>\\n        </MediaBasicInfo>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example.mp4</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>338990717</FileSize>\\n                <FileUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mov,mp4,m4a,3gp,3g2,mj2</FormatName>\\n                <Duration>10.040000</Duration>\\n                <Bitrate>270112.12</Bitrate>\\n                <Width>1920</Width>\\n                <Height>1080</Height>\\n            </FileBasicInfo>\\n        </FileInfoList>\\n    </MediaInfos>\\n    <NextToken>8EqYpQbZ6Eh7+Zz8DxVYoQ==</NextToken>\\n    <MaxResults>2</MaxResults>\\n</ListPublicMediaBasicInfosResponse>","errorExample":""}]',
      'title' => '列出公共素材库媒资基础信息',
    ),
    'ListAllPublicMediaTags' => 
    array (
      'summary' => '列出公共素材库媒资的所有标签。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'Anonymous' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资业务类型',
            'description' => '媒资业务类型',
            'type' => 'string',
            'required' => false,
            'example' => '"sticker"',
          ),
        ),
        1 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实体ID，用于区分不同种类的公共版权媒资。取值：

\\- Copyright_Music: 公共版权音乐
',
            'type' => 'string',
            'required' => false,
            'example' => 'Copyright_Music',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'B45F83B7-7F87-4792-BFE9-63CD2137CAF0',
              ),
              'MediaTagList' => 
              array (
                'title' => '公共素材库标签列表',
                'description' => '公共素材库标签列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaTagId' => 
                    array (
                      'title' => '素材标签id',
                      'description' => '素材标签id',
                      'type' => 'string',
                      'example' => 'sticker-gif',
                    ),
                    'MediaTagNameChinese' => 
                    array (
                      'title' => '素材标签中文名',
                      'description' => '素材标签中文名',
                      'type' => 'string',
                      'example' => 'Gif',
                    ),
                    'MediaTagNameEnglish' => 
                    array (
                      'title' => '素材标签英文名',
                      'description' => '素材标签英文名',
                      'type' => 'string',
                      'example' => '动图',
                    ),
                    'Options' => 
                    array (
                      'description' => '选项列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'OptionId' => 
                          array (
                            'description' => '筛选项ID',
                            'type' => 'string',
                            'example' => 'Angry',
                          ),
                          'OptionEnglishName' => 
                          array (
                            'description' => '筛选项英文名',
                            'type' => 'string',
                            'example' => 'Angry',
                          ),
                          'OptionChineseName' => 
                          array (
                            'description' => '筛选项中文名',
                            'type' => 'string',
                            'example' => '愤怒',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B45F83B7-7F87-4792-BFE9-63CD2137CAF0\\",\\n  \\"MediaTagList\\": [\\n    {\\n      \\"MediaTagId\\": \\"sticker-gif\\",\\n      \\"MediaTagNameChinese\\": \\"Gif\\",\\n      \\"MediaTagNameEnglish\\": \\"动图\\",\\n      \\"Options\\": [\\n        {\\n          \\"OptionId\\": \\"Angry\\",\\n          \\"OptionEnglishName\\": \\"Angry\\",\\n          \\"OptionChineseName\\": \\"愤怒\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListAllPublicMediaTagsResponse>\\n    <RequestId>B45F83B7-7F87-4792-BFE9-63CD2137CAF0</RequestId>\\n    <MediaTagList>\\n        <MediaTagId>sticker-gif</MediaTagId>\\n        <MediaTagNameChinese>Gif</MediaTagNameChinese>\\n        <MediaTagNameEnglish>动图</MediaTagNameEnglish>\\n    </MediaTagList>\\n</ListAllPublicMediaTagsResponse>","errorExample":""}]',
      'title' => '列出公共素材库所有标签',
    ),
    'AddCategory' => 
    array (
      'summary' => '调用AddCategory创建媒资分类。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CateName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类名称。
- 最多支持64个字节。
- UTF-8编码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '三级子分类',
          ),
        ),
        1 => 
        array (
          'name' => 'ParentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '父分类ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '5',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类类型。取值：
- default（默认值）：音视频/图片分类。                                 
- material：短视频素材分类。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Category' => 
              array (
                'description' => '媒资分类信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '分类类型。取值：
- **default**（默认值）：音视频/图片分类。
- **material**：短视频素材分类。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'ParentId' => 
                  array (
                    'description' => '父分类ID。当ParentId参数设置为空或者小于1时，则默认返回值为-1。表示所创建的分类为根目录。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '-1',
                  ),
                  'CateName' => 
                  array (
                    'description' => '分类名称。',
                    'type' => 'string',
                    'example' => '分类1',
                  ),
                  'CateId' => 
                  array (
                    'description' => '创建的分类ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '45',
                  ),
                  'Level' => 
                  array (
                    'description' => '分类层级。一级分类层级为**0**，二级分类层级为**1**，三级分类层级为**2**。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Category\\": {\\n    \\"Type\\": \\"default\\",\\n    \\"ParentId\\": -1,\\n    \\"CateName\\": \\"分类1\\",\\n    \\"CateId\\": 45,\\n    \\"Level\\": 0\\n  }\\n}","type":"json"}]',
      'title' => '创建分类',
      'description' => '分类最多支持三级分类，每级分类最多支持创建100个子分类',
    ),
    'GetCategories' => 
    array (
      'summary' => '调用GetCategories获取指定的分类信息，及其子分类（即下一级分类）的列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类ID。可通过以下方式获取：
- 登录[IMS控制台](https://ims.console.aliyun.com)，选择 **媒资管理** > **分类管理**查看分类ID。
- 通过创建分类接口创建分类时，分类ID为返回参数CateId的值。
- 通过获取分类接口查询分类时，为请求后返回参数CateId的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '33',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，最小值为10，最大值为100',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结果排序方式。取值范围：

\\-CreationTime:Desc（默认值）：按创建时间倒序。

\\-CreationTime:Asc：按创建时间升序。',
            'type' => 'string',
            'required' => false,
            'example' => 'CreationTime:Desc',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类类型。取值：default（默认值）：音视频/图片分类。                                 material：短视频素材分类。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SubTotal' => 
              array (
                'description' => '子分类总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Category' => 
              array (
                'description' => '媒资分类信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '分类类型。取值：
- **default**（默认值）：音视频/图片分类。
- **material**：短视频素材分类。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'CateName' => 
                  array (
                    'description' => '分类名称。',
                    'type' => 'string',
                    'example' => '一级分类',
                  ),
                  'ParentId' => 
                  array (
                    'description' => '父分类ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '-1',
                  ),
                  'CateId' => 
                  array (
                    'description' => '分类ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '46',
                  ),
                  'Level' => 
                  array (
                    'description' => '分类层级。一级分类层级为**0**，二级分类层级为**1**，三级分类层级为**2**。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                ),
              ),
              'SubCategories' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Category' => 
                  array (
                    'description' => '子分类列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '子分类列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '分类类型。取值：
- **default**（默认值）：音视频/图片分类。
- **material**：短视频素材分类。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'CateName' => 
                        array (
                          'description' => '分类名称。

- 最多支持64个字节。
- UTF-8编码。',
                          'type' => 'string',
                          'example' => '二级子分类',
                        ),
                        'ParentId' => 
                        array (
                          'description' => '父分类ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '46',
                        ),
                        'CateId' => 
                        array (
                          'description' => '分类ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '129',
                        ),
                        'SubTotal' => 
                        array (
                          'description' => '子分类总数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '100',
                        ),
                        'Level' => 
                        array (
                          'description' => '分类层级。一级分类层级为**0**，二级分类层级为**1**，三级分类层级为**2**。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"SubTotal\\": 100,\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Category\\": {\\n    \\"Type\\": \\"default\\",\\n    \\"CateName\\": \\"一级分类\\",\\n    \\"ParentId\\": -1,\\n    \\"CateId\\": 46,\\n    \\"Level\\": 0\\n  },\\n  \\"SubCategories\\": {\\n    \\"Category\\": [\\n      {\\n        \\"Type\\": \\"default\\",\\n        \\"CateName\\": \\"二级子分类\\",\\n        \\"ParentId\\": 46,\\n        \\"CateId\\": 129,\\n        \\"SubTotal\\": 100,\\n        \\"Level\\": 1\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取分类及子分类',
      'description' => '支持按分类ID和分类类型来查询分类及其子分类的信息。

',
    ),
    'UpdateCategory' => 
    array (
      'summary' => '调用UpdateCategory更新媒资分类。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CateName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类名称。',
            'type' => 'string',
            'required' => true,
            'example' => '分类1',
          ),
        ),
        1 => 
        array (
          'name' => 'CateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类ID。可通过以下方式获取：
- 登录[IMS控制台](https://ims.console.aliyun.com)，选择 **媒资管理** > **分类管理**查看分类ID。
- 通过创建分类接口创建分类时，分类ID为返回参数CateId的值。
- 通过获取分类接口查询分类时，为请求后返回参数CateId的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '43',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\"\\n}","type":"json"}]',
      'title' => '更新分类',
      'description' => '创建媒资分类后，可调用本接口通过分类ID来定位并更新媒资分类的名称。',
    ),
    'DeleteCategory' => 
    array (
      'summary' => '调用DeleteCategory删除媒资分类。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类ID。可通过以下方式获取：
- 登录[IMS控制台](https://ims.console.aliyun.com)，选择 **媒资管理** > **分类管理**查看分类ID。
- 通过创建分类接口创建分类时，分类ID为返回参数CateId的值。
- 通过获取分类接口查询分类时，为请求后返回参数CateId的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '46',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\"\\n}","type":"json"}]',
      'title' => '删除分类',
      'description' => '此接口会同时删除其子分类（包括二级分类和三级分类），请慎重操作。',
    ),
    'AddMediaMarks' => 
    array (
      'summary' => '为媒资增加标记信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资ID',
            'description' => '媒资ID',
            'type' => 'string',
            'required' => true,
            'example' => '53afdf003a2171ed9c6a16b5feac6402',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaMarks',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '打标信息',
            'description' => '打标信息，字符串内容需要符合 JSONArray 格式',
            'type' => 'string',
            'required' => true,
            'example' => '[
    {
        "MarkStartTime": "12.1",
        "MarkEndTime": "12.2",
        "MarkTag": "tag-1",
        "MarkContent": "content-1",
        "MarkStatus": "a"
    },{
        "MarkStartTime": "12.3",
        "MarkEndTime": "12.4",
        "MarkTag": "tag-2",
        "MarkContent": "content-2",
        "MarkStatus": "上线"
    }
]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求Id',
                'type' => 'string',
                'example' => '771A1414-27BF-53E6-AB73-EFCB*****ACF',
              ),
              'MediaId' => 
              array (
                'title' => '媒资ID',
                'description' => '媒资ID',
                'type' => 'string',
                'example' => '53afdf003a******6a16b5feac6402',
              ),
              'MediaMarkIds' => 
              array (
                'title' => '添加的标记Id',
                'description' => '添加的标记Id',
                'type' => 'string',
                'example' => 'mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'AddMediaMarksFailed',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"771A1414-27BF-53E6-AB73-EFCB*****ACF\\",\\n  \\"MediaId\\": \\"53afdf003a******6a16b5feac6402\\",\\n  \\"MediaMarkIds\\": \\"mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60\\"\\n}","type":"json"}]',
      'title' => '为媒资增加标记信息',
      'requestParamsDescription' => '## MediaMark
| 名称      | 类型      | 必填   | 描述   |
| ------------- |------------   | ----- | ------ |
| MarkId |	String |	否	| 点位 Id|
| MarkStartTime	|Float	|否	|入点|
| MarkEndTime|	Float	|否	|出点|
| MarkTag|	String	|否	|自定义 Tag，便于归类|
| MarkContent	|String	|否	|点位内容信息|
| MarkStatus	|String	|否	|点位状态|',
    ),
    'GetMediaMarks' => 
    array (
      'summary' => '按照点位ID获取媒资标记信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaMarkIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标记ID，支持多值，多值以逗号分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'title' => 'MediaId',
                'description' => '媒资ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'MediaMarks' => 
              array (
                'title' => 'MediaMarks',
                'description' => '标记信息列表
- 字符串内容符合 JSONArray 格式',
                'type' => 'string',
                'example' => '[
      {
            "MarkStartTime": "12.1",
            "MarkEndTime": "12.2",
            "MarkTag": "tag-1",
            "MarkContent": "content-1",
            "MarkStatus": "a"
      },
      {
            "MarkStartTime": "12.3",
            "MarkEndTime": "12.4",
            "MarkTag": "tag-2",
            "MarkContent": "content-2",
            "MarkStatus": "上线"
      }
]',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"MediaMarks\\": \\"[\\\\n      {\\\\n            \\\\\\"MarkStartTime\\\\\\": \\\\\\"12.1\\\\\\",\\\\n            \\\\\\"MarkEndTime\\\\\\": \\\\\\"12.2\\\\\\",\\\\n            \\\\\\"MarkTag\\\\\\": \\\\\\"tag-1\\\\\\",\\\\n            \\\\\\"MarkContent\\\\\\": \\\\\\"content-1\\\\\\",\\\\n            \\\\\\"MarkStatus\\\\\\": \\\\\\"a\\\\\\"\\\\n      },\\\\n      {\\\\n            \\\\\\"MarkStartTime\\\\\\": \\\\\\"12.3\\\\\\",\\\\n            \\\\\\"MarkEndTime\\\\\\": \\\\\\"12.4\\\\\\",\\\\n            \\\\\\"MarkTag\\\\\\": \\\\\\"tag-2\\\\\\",\\\\n            \\\\\\"MarkContent\\\\\\": \\\\\\"content-2\\\\\\",\\\\n            \\\\\\"MarkStatus\\\\\\": \\\\\\"上线\\\\\\"\\\\n      }\\\\n]\\"\\n}","type":"json"}]',
      'title' => '按照点位ID获取媒资标记信息',
      'responseParamsDescription' => '## MediaMark
| 名称      | 类型      | 必填   | 描述   |
| ------------- |------------   | ----- | ------ |
| MarkId |	String |	否	| 点位 ID|
| MarkStartTime	|Float	|否	|入点|
| MarkEndTime|	Float	|否	|出点|
| MarkTag|	String	|否	|自定义 Tag，便于归类|
| MarkContent	|String	|否	|点位内容信息|
| MarkStatus	|String	|否	|点位状态|',
    ),
    'UpdateMediaMarks' => 
    array (
      'summary' => '修改媒资标记信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '媒资ID',
            'description' => '媒资ID',
            'type' => 'string',
            'required' => true,
            'example' => '53afdf003a******6a16b5feac6402',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaMarks',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '打标信息',
            'description' => '打标信息',
            'type' => 'string',
            'required' => true,
            'example' => '[
      {
            "MarkStartTime": "12.1",
            "MarkEndTime": "12.2",
            "MarkTag": "tag-1",
            "MarkContent": "content-1",
            "MarkStatus": "a"
      },
      {
            "MarkStartTime": "12.3",
            "MarkEndTime": "12.4",
            "MarkTag": "tag-2",
            "MarkContent": "content-2",
            "MarkStatus": "上线"
      }
]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'title' => '媒资ID',
                'description' => '媒资ID',
                'type' => 'string',
                'example' => '53afdf003a******6a16b5feac6402',
              ),
              'MediaMarkIds' => 
              array (
                'title' => '添加的标记Id',
                'description' => '修改成功的标记ID',
                'type' => 'string',
                'example' => 'mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UpdateMediaMarksFailed',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"53afdf003a******6a16b5feac6402\\",\\n  \\"MediaMarkIds\\": \\"mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60\\"\\n}","type":"json"}]',
      'title' => '修改媒资标记信息',
      'requestParamsDescription' => '## MediaMark
| 名称      | 类型      | 必填   | 描述   |
| ------------- |------------   | ----- | ------ |
| MarkId |	String |	否	| 点位 ID|
| MarkStartTime	|Float	|否	|入点|
| MarkEndTime|	Float	|否	|出点|
| MarkTag|	String	|否	|自定义 Tag，便于归类|
| MarkContent	|String	|否	|点位内容信息|
| MarkStatus	|String	|否	|点位状态|',
    ),
    'DeleteMediaMarks' => 
    array (
      'summary' => '删除媒资的标记信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID',
            'type' => 'string',
            'required' => false,
            'example' => '****c469e944b5a856828dc2****',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaMarkIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标记ID，支持多值，多值以逗号分隔。

如果 MediaMarkIds 为空，默认删除媒资所有的点位信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'title' => 'MediaId',
                'description' => '媒资ID',
                'type' => 'string',
                'example' => '****019b82e24b37a1c2958dec38****',
              ),
              'MediaMarkIds' => 
              array (
                'title' => 'MediaMarkIds',
                'description' => '删除的点位ID，以逗号分割',
                'type' => 'string',
                'example' => 'mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"****019b82e24b37a1c2958dec38****\\",\\n  \\"MediaMarkIds\\": \\"mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60\\"\\n}","type":"json"}]',
      'title' => '删除媒资的标记信息',
    ),
    'ListMediaMarks' => 
    array (
      'summary' => '列出媒资的全部标记信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID',
            'type' => 'string',
            'required' => false,
            'example' => '411bed50018971edb60b0764a0ec6***',
          ),
        ),
        1 => 
        array (
          'name' => 'MediaMarkIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标记ID，支持多值，多值以逗号分隔（此入参已废弃）',
            'type' => 'string',
            'required' => false,
            'example' => 'mark-f82d*****4994b0915948ef7e16,mark-3d56d*****4c8fa9ae2a1f9e5d2d60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaId' => 
              array (
                'title' => 'MediaId',
                'description' => '媒资ID',
                'type' => 'string',
                'example' => '******b48fb04483915d4f2cd8******',
              ),
              'MediaMarks' => 
              array (
                'title' => 'MediaMarks',
                'description' => '标记信息列表，字符串内容符合 JSONArray 格式',
                'type' => 'string',
                'example' => '[
      {
            "MarkStartTime": "12.1",
            "MarkEndTime": "12.2",
            "MarkTag": "tag-1",
            "MarkContent": "content-1",
            "MarkStatus": "a"
      },
      {
            "MarkStartTime": "12.3",
            "MarkEndTime": "12.4",
            "MarkTag": "tag-2",
            "MarkContent": "content-2",
            "MarkStatus": "上线"
      }
]',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaId\\": \\"******b48fb04483915d4f2cd8******\\",\\n  \\"MediaMarks\\": \\"[\\\\n      {\\\\n            \\\\\\"MarkStartTime\\\\\\": \\\\\\"12.1\\\\\\",\\\\n            \\\\\\"MarkEndTime\\\\\\": \\\\\\"12.2\\\\\\",\\\\n            \\\\\\"MarkTag\\\\\\": \\\\\\"tag-1\\\\\\",\\\\n            \\\\\\"MarkContent\\\\\\": \\\\\\"content-1\\\\\\",\\\\n            \\\\\\"MarkStatus\\\\\\": \\\\\\"a\\\\\\"\\\\n      },\\\\n      {\\\\n            \\\\\\"MarkStartTime\\\\\\": \\\\\\"12.3\\\\\\",\\\\n            \\\\\\"MarkEndTime\\\\\\": \\\\\\"12.4\\\\\\",\\\\n            \\\\\\"MarkTag\\\\\\": \\\\\\"tag-2\\\\\\",\\\\n            \\\\\\"MarkContent\\\\\\": \\\\\\"content-2\\\\\\",\\\\n            \\\\\\"MarkStatus\\\\\\": \\\\\\"上线\\\\\\"\\\\n      }\\\\n]\\"\\n}","type":"json"}]',
      'title' => '列出媒资的全部标记信息',
      'responseParamsDescription' => '## MediaMark
| 名称      | 类型      | 必填   | 描述   |
| ------------- |------------   | ----- | ------ |
| MarkId |	String |	否	| 点位 Id|
| MarkStartTime	|Float	|否	|入点|
| MarkEndTime|	Float	|否	|出点|
| MarkTag|	String	|否	|自定义 Tag，便于归类|
| MarkContent	|String	|否	|点位内容信息|
| MarkStatus	|String	|否	|点位状态|',
    ),
    'GetPlayInfo' => 
    array (
      'summary' => '调用GetPlayInfo通过音视频ID直接获取媒体文件（支持视频和音频）的播放地址。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。
> 
> MediaId和InputURL字段中至少一个不能为空。',
            'type' => 'string',
            'required' => false,
            'example' => '86434e152b7d4f20be480574439fe***',
          ),
        ),
        1 => 
        array (
          'name' => 'InputURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注册媒资时填写的InputURL，详情见[RegisterMediaInfo](https://help.aliyun.com/document_detail/441152.html)。
> 
> MediaId和InputURL字段中至少一个不能为空。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4  或  vod://****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaBase' => 
              array (
                'description' => '媒资信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2021-09-22T10:07:31+08:00',
                  ),
                  'Status' => 
                  array (
                    'description' => '资源状态。取值范围：

\\- Init（初始状态：源文件未就绪）

\\- Preparing（源文件准备中：比如上传中或者剪辑合成中）

\\- PrepareFail（源文件准备失败：比如获取源文件信息失败）

\\- Normal（正常：源文件已就绪）',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'MediaId' => 
                  array (
                    'description' => '媒资ID。',
                    'type' => 'string',
                    'example' => '2eea77a61c7b4ddd95bec34a6f65b***',
                  ),
                  'CoverURL' => 
                  array (
                    'description' => '封面URL。',
                    'type' => 'string',
                    'example' => 'https://***.oss-cn-shanghai.aliyuncs.com/cover/281c64d6-b5fb-4c57-97cd-84da56a8b151_large_cover_url.jpg',
                  ),
                  'Title' => 
                  array (
                    'description' => '标题。',
                    'type' => 'string',
                    'example' => 'testTitle',
                  ),
                  'MediaType' => 
                  array (
                    'description' => '媒体文件类型，取值：

video：视频。
audio：纯音频。',
                    'type' => 'string',
                    'example' => 'video',
                  ),
                  'MediaTags' => 
                  array (
                    'description' => '标签。

- 最多不超过16个标签。

- 多个用逗号分隔。

- 单个标签不超过32字节。

- UTF8编码。',
                    'type' => 'string',
                    'example' => 'test,ccc',
                  ),
                  'CateId' => 
                  array (
                    'description' => '分类ID。可通过以下方式获取：
- 登录[IMS控制台](https://ims.console.aliyun.com)，选择 **媒资管理** > **分类管理**查看分类ID。
- 通过创建分类接口创建分类时，分类ID为返回参数CateId的值。
- 通过获取分类接口查询分类时，为请求后返回参数CateId的值。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '4220',
                  ),
                  'Description' => 
                  array (
                    'description' => '内容描述',
                    'type' => 'string',
                    'example' => 'desc',
                  ),
                ),
              ),
              'PlayInfoList' => 
              array (
                'description' => '音/视频播放信息（流信息）。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '音/视频详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '创建时间。格式为：<i>yyyy-MM-dd</i>T<i>HH:mm:ss</i>Z（UTC时间）。',
                      'type' => 'string',
                      'example' => '2022-05-10T02:28:49Z',
                    ),
                    'Status' => 
                    array (
                      'description' => '媒体流状态，取值：

- **Normal**：正常。
- **Invisible**：不可见。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'NarrowBandType' => 
                    array (
                      'description' => '窄带高清类型。取值：

- **0**：普通。
- **1.0**：窄带高清1.0。
- **2.0**：窄带高清2.0。

仅当配置了窄带高清1.0内置转码模板的清晰度时才会生效。更多详情，请参见[转码模板配置-Definition](~~52839~~)。',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'Height' => 
                    array (
                      'description' => '媒体流高度。单位：px。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1080',
                    ),
                    'Bitrate' => 
                    array (
                      'description' => '媒体流码率。单位：Kbps。',
                      'type' => 'string',
                      'example' => '20',
                    ),
                    'ModificationTime' => 
                    array (
                      'description' => '更新时间。格式为：<i>yyyy-MM-dd</i>T<i>HH:mm:ss</i>Z（UTC时间）。',
                      'type' => 'string',
                      'example' => '2022-05-13T11:39:41.714+08:00',
                    ),
                    'WatermarkId' => 
                    array (
                      'description' => '当前媒体流关联的水印ID。',
                      'type' => 'string',
                      'example' => '5bed88672b1e2520ead228935ed51***',
                    ),
                    'Encrypt' => 
                    array (
                      'description' => '媒体流是否加密流，取值：

- **0**：否。
- **1**：是。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                    'Definition' => 
                    array (
                      'description' => '视频流清晰度定义。取值：

- **FD**：流畅。
- **LD**：标清。
- **SD**：高清。
- **HD**：超清
- **OD**：原画。
- **2K**：2K。
- **4K**：4K。
- **SQ**：普通音质。
- **HQ**：高音质。
- **AUTO**：自适应码率。',
                      'type' => 'string',
                      'example' => 'HD',
                    ),
                    'EncryptType' => 
                    array (
                      'description' => '媒体流加密类型。取值：

- **AliyunVoDEncryption**：阿里云视频加密。
- **HLSEncryption**：HLS标准加密。

> 如果加密类型为**AliyunVoDEncryption**，则只能使用阿里云播放器SDK才能正常播放。',
                      'type' => 'string',
                      'example' => 'AliyunVoDEncryption',
                    ),
                    'StreamType' => 
                    array (
                      'description' => '媒体流类型。
若媒体流为视频则取值：**video**，若是纯音频则取值：**audio**。',
                      'type' => 'string',
                      'example' => 'video',
                    ),
                    'Size' => 
                    array (
                      'description' => '媒体流大小。单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '418112',
                    ),
                    'Width' => 
                    array (
                      'description' => '媒体流宽度。单位：px。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1024',
                    ),
                    'Fps' => 
                    array (
                      'description' => '媒体流帧率。单位：帧/每秒。',
                      'type' => 'string',
                      'example' => '25',
                    ),
                    'Duration' => 
                    array (
                      'description' => '媒体流长度。单位：秒。',
                      'type' => 'string',
                      'example' => '9.0464',
                    ),
                    'PlayURL' => 
                    array (
                      'description' => '视频流的播放地址。',
                      'type' => 'string',
                      'example' => 'https://***.aliyuncdn.com/sv/756bee1-17f980f0945/756bee1-17f980f0945.mp4',
                    ),
                    'Format' => 
                    array (
                      'description' => '媒体流格式。
- 若媒体文件为视频则取值： **mp4**、 **m3u8**。
-  若是纯音频则取值：**mp3**。',
                      'type' => 'string',
                      'example' => 'mp4',
                    ),
                    'HDRType' => 
                    array (
                      'title' => '视频流HDR类型',
                      'description' => '媒体流HDR类型。取值：
- HDR
- HDR10
- HLG
- DolbyVision
- HDRVivid
- SDR+',
                      'type' => 'string',
                      'example' => 'HDR',
                    ),
                    'BitDepth' => 
                    array (
                      'title' => '颜色位深',
                      'description' => '颜色位深。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '8',
                    ),
                    'FileURL' => 
                    array (
                      'description' => '文件OSS地址。',
                      'type' => 'string',
                      'example' => 'http://outin-***.oss-cn-shanghai.aliyuncs.com/sv/43a68ee9-181809b6aba/43a68ee9-181809b6aba.mpeg',
                    ),
                    'TransTemplateType' => 
                    array (
                      'description' => '转码模板类型，取值：
- Normal：普通模板
- AudioTranscode：音频转码
- Remux：转封装
- NarrowBandV1：窄带高清1.0
- NarrowBandV2：窄带高清2.0
- UHD：音画增强（超高清）',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'StreamTags' => 
                    array (
                      'description' => '流标签，用于标识转码处理类型。',
                      'type' => 'string',
                      'example' => '"{\\"ims.audioServiceType\\": \\"AudioEnhancement\\"}"',
                    ),
                    'JobId' => 
                    array (
                      'description' => '任务 ID。',
                      'type' => 'string',
                      'example' => '36c9d38e70bf43ed9f7f8f48d6356***',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaBase\\": {\\n    \\"CreationTime\\": \\"2021-09-22T10:07:31+08:00\\",\\n    \\"Status\\": \\"Normal\\",\\n    \\"MediaId\\": \\"2eea77a61c7b4ddd95bec34a6f65b***\\",\\n    \\"CoverURL\\": \\"https://***.oss-cn-shanghai.aliyuncs.com/cover/281c64d6-b5fb-4c57-97cd-84da56a8b151_large_cover_url.jpg\\",\\n    \\"Title\\": \\"testTitle\\",\\n    \\"MediaType\\": \\"video\\",\\n    \\"MediaTags\\": \\"test,ccc\\",\\n    \\"CateId\\": 4220,\\n    \\"Description\\": \\"desc\\"\\n  },\\n  \\"PlayInfoList\\": [\\n    {\\n      \\"CreationTime\\": \\"2022-05-10T02:28:49Z\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"NarrowBandType\\": \\"0\\",\\n      \\"Height\\": 1080,\\n      \\"Bitrate\\": \\"20\\",\\n      \\"ModificationTime\\": \\"2022-05-13T11:39:41.714+08:00\\",\\n      \\"WatermarkId\\": \\"5bed88672b1e2520ead228935ed51***\\",\\n      \\"Encrypt\\": 0,\\n      \\"Definition\\": \\"HD\\",\\n      \\"EncryptType\\": \\"AliyunVoDEncryption\\",\\n      \\"StreamType\\": \\"video\\",\\n      \\"Size\\": 418112,\\n      \\"Width\\": 1024,\\n      \\"Fps\\": \\"25\\",\\n      \\"Duration\\": \\"9.0464\\",\\n      \\"PlayURL\\": \\"https://***.aliyuncdn.com/sv/756bee1-17f980f0945/756bee1-17f980f0945.mp4\\",\\n      \\"Format\\": \\"mp4\\",\\n      \\"HDRType\\": \\"HDR\\",\\n      \\"BitDepth\\": 8,\\n      \\"FileURL\\": \\"http://outin-***.oss-cn-shanghai.aliyuncs.com/sv/43a68ee9-181809b6aba/43a68ee9-181809b6aba.mpeg\\",\\n      \\"TransTemplateType\\": \\"Normal\\",\\n      \\"StreamTags\\": \\"\\\\\\"{\\\\\\\\\\\\\\"ims.audioServiceType\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"AudioEnhancement\\\\\\\\\\\\\\"}\\\\\\"\\",\\n      \\"JobId\\": \\"36c9d38e70bf43ed9f7f8f48d6356***\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取音视频播放地址',
      'description' => '通过音视频ID来获取音视频的播放地址。通过集成阿里云播放器SDK（适用于URL播放方式）或第三方播放器后，可使用获取到的播放地址用于音视频的播放。',
    ),
    'DeletePlayInfo' => 
    array (
      'summary' => '调用DeletePlayInfo删除媒体流（视频流，音频流）信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '1d3518e0027d71ed80cd909598416303',
          ),
        ),
        1 => 
        array (
          'name' => 'FileURLs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的播放流文件URL，多个URL用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://ice-test001.oss-cn-shanghai.aliyuncs.com/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87640*360.mp4',
          ),
        ),
        2 => 
        array (
          'name' => 'DeletePhysicalFiles',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除媒体流的物理文件。

若媒资的存储地址是用户自有oss，需对服务角色AliyunICEDefaultRole提前进行授权，具体操作请参见[OSS授权管理](https://help.aliyun.com/document_detail/449331.html#p-ko2-wc7-iad)。

仅支持删除转码流的物理文件，删除源文件的物理文件暂不支持。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'IgnoredList' => 
              array (
                'description' => '出现获取错误的媒体流URL列表，一般由于媒资ID不存在或媒资流URL不存在导致。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '出现获取错误的媒体流URL。',
                  'type' => 'string',
                  'example' => 'https://ice-test001.oss-cn-shanghai.aliyuncs.com/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87640*360.mp4
',
                ),
              ),
              'ForbiddenList' => 
              array (
                'description' => '不可删除的媒体流URL列表。一般由于无权限导致。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '不可删除的媒体流URL。',
                  'type' => 'string',
                  'example' => 'https://ice-test001.oss-cn-shanghai.aliyuncs.com/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87640*360.mp4
',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"IgnoredList\\": [\\n    \\"https://ice-test001.oss-cn-shanghai.aliyuncs.com/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87640*360.mp4\\\\n\\"\\n  ],\\n  \\"ForbiddenList\\": [\\n    \\"https://ice-test001.oss-cn-shanghai.aliyuncs.com/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87640*360.mp4\\\\n\\"\\n  ]\\n}","type":"json"}]',
      'title' => '删除媒体流',
      'description' => '支持批量删除。',
    ),
    'CreateAudit' => 
    array (
      'summary' => '调用CreateAudit针对媒资提交人工审核。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AuditContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '审核内容数组。一次最多支持20个视频的审核内容。需将数组转为字符串后作为参数值。                               具体参数结构定义，参见下表AuditContent。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[
      {
            "MediaId": "93ab850b4f*****b54b6e91d24d81d4",
            "Status": "Normal"
      },
      {
            "MediaId": "f867fbfb58*****8bbab65c4480ae1d",
            "Status": "Blocked",
            "Reason": "xxxx",
            "Comment": "xxxx"
      }
]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\"\\n}","type":"json"}]',
      'title' => '人工审核',
      'requestParamsDescription' => '## 审核内容AuditContent

|名称	|类型	|必填项	|描述|
| ------------- |------------   | ----- | ------ |
|MediaId	|String	|是	|音/视频ID。|
|Status	|String	|是	|音/视频审核状态。取值范围：**Blocked**（屏蔽），**Normal**（正常）。|
|Reason	|String	|否	|若审核状态为屏蔽时，需给出屏蔽的理由。最长支持128字节。|
|Comment|String	|否	|审核备注。最长支持512字节。|',
    ),
    'SubmitMediaCensorJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统一模板ID，为空使用默认模板进行审核。',
            'type' => 'string',
            'required' => false,
            'example' => 'S00000001-100060',
          ),
        ),
        1 => 
        array (
          'name' => 'CoverImages',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '封面图片的OSS文件，最多支持5个封面图片，JSON数组。

> 如果设置，会优先使用这个字段中的封面代替**Media**中的封面。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"Bucket":"example-bucket-****","Location":"oss-cn-shanghai","Object":"example-****.jpeg","RoleArn":"acs:ram::1997018457688683:role/AliyunICEDefaultRole"}]',
          ),
        ),
        2 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频标题，最大长度64个字节。

> 如果设置，会优先使用这个字段中的标题代替Media中的标题。',
            'type' => 'string',
            'required' => false,
            'example' => 'Hello World',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频介绍，最大长度128个字节。

> 如果设置，会优先使用这个字段中的描述代替Media中的描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'example description',
          ),
        ),
        4 => 
        array (
          'name' => 'Barrages',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频弹幕。

> 如果设置，会优先使用这个字段中的描述代替Media中的描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'hello world',
          ),
        ),
        5 => 
        array (
          'name' => 'Output',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '截图输出。审核任务会在文件输入文件对应的path下面生成审核截图和结果JSON文件。

- 输出格式参考：oss://bucket/snapshot-{Count}.jpg，其中，bucket为和当前项目处于同一区域的oss bucket名称，{Count}为截帧图片序号替换符。

- 审核结果详细信息保存在Output相同OSS文件夹下，命名为{jobId}.output，output文件具体字段格式，请参见[媒体审核结果文件字段](~~609211~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'oss://sashimi-cn-shanghai/censor/snapshot-{Count}.jpg',
          ),
        ),
        6 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义数据，最大长度128个字节。',
            'type' => 'string',
            'required' => false,
            'example' => 'UserDatatestid-001-****',
          ),
        ),
        7 => 
        array (
          'name' => 'NotifyUrl',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => 'Callback路径，支持MNS和HTTP回调。',
            'type' => 'string',
            'required' => false,
            'example' => 'mns://125340688170****.oss-cn-shanghai.aliyuncs.com/queues/example-pipeline',
          ),
        ),
        8 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '输入待审核文件信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输入文件类型：

OSS：OSS路径

Media：媒资ID',
                'type' => 'string',
                'required' => false,
                'example' => 'Media',
              ),
              'Media' => 
              array (
                'description' => '输入文件信息，支持OSS地址和媒资ID两种。
OSS地址规则为

1、oss://bucket/object

2、http(s)://bucket.oss-[regionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                'type' => 'string',
                'required' => false,
                'example' => '1b1b9cd148034739af413150fded****',
              ),
            ),
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '调度配置。',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'description' => '管道ID。',
                'type' => 'string',
                'required' => false,
                'example' => '5246b8d12a62433ab77845074039****',
              ),
              'Priority' => 
              array (
                'description' => '任务优先级。数值越大优先级越高，取值范围：1~10。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '6',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
              'JobId' => 
              array (
                'description' => '视频审核作业ID。建议您保存此ID便于后续调用其他接口时使用。',
                'type' => 'string',
                'example' => '88c6ca184c0e47098a5b665e2****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\",\\n  \\"JobId\\": \\"88c6ca184c0e47098a5b665e2****\\"\\n}","type":"json"}]',
      'title' => '提交媒体审核作业',
      'summary' => '调用SubmitMediaCensorJob提交媒体审核作业。',
      'description' => '本接口提交的作业是异步执行方式，作业添加到管道中调度排队和执行。可以调用[查询媒体审核作业接口](~~444847~~)查询作业执行结果，也可以使用异步的消息通知机制。',
    ),
    'QueryMediaCensorJobDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒体审核作业ID。可以从[提交媒体审核作业](~~444848~~)的返回参数中获取。',
            'type' => 'string',
            'required' => true,
            'example' => '2288c6ca184c0e47098a5b665e2a12****',
          ),
        ),
        1 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
            'type' => 'string',
            'required' => false,
            'example' => 'ae0fd49c0840e14daf0d66a75b83****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaximumPageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页最大返回数。

- 默认值：**30**

- 取值范围：**1~300**',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '30',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B42299E6-F71F-465F-8FE9-4FC2E3D3C2CA',
              ),
              'MediaCensorJobDetail' => 
              array (
                'description' => '媒体审核作业结果列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'CreationTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2018-09-13T16:32:24Z',
                  ),
                  'FinishTime' => 
                  array (
                    'description' => '完成时间。',
                    'type' => 'string',
                    'example' => '2018-09-13T16:38:24Z',
                  ),
                  'Suggestion' => 
                  array (
                    'description' => '作业整体审核结果。取值：

- **pass**：通过

- **review**：人工重审
- **block**：拦截

> 任何一种类型的审核结果是review时，整体结果为review，任何一种类型的审核结果是block时，整体结果为block。',
                    'type' => 'string',
                    'example' => 'block',
                  ),
                  'CoverImageCensorResults' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CoverImageCensorResult' => 
                      array (
                        'description' => '封面审核结果。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '结果详细信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Object' => 
                            array (
                              'description' => '视频封面OSS Object。',
                              'type' => 'string',
                              'example' => 'test/ai/censor/v2/vme-****.jpg',
                            ),
                            'Location' => 
                            array (
                              'description' => '视频封面OSS Location。',
                              'type' => 'string',
                              'example' => 'oss-cn-shanghai',
                            ),
                            'Bucket' => 
                            array (
                              'description' => '视频封面OSS Bucket。',
                              'type' => 'string',
                              'example' => 'bucket-out-test-****',
                            ),
                            'Results' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Result' => 
                                array (
                                  'description' => '审核结果。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '审核结果详细信息。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Suggestion' => 
                                      array (
                                        'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                                        'type' => 'string',
                                        'example' => 'pass',
                                      ),
                                      'Label' => 
                                      array (
                                        'description' => '审核结果的标签。
- 图片智能鉴黄（porn）结果分类：
    - **normal：正常**
    - **sexy：性感**
    - **porn：色情**
- 图片暴恐涉政（terrorism）结果分类：
    - **normal：正常**
    - **bloody：血腥**
    - **explosion：爆炸烟光**
    - **outfit：特殊装束**
    - **logo：特殊标识**
    - **weapon：武器**
    - **politics：涉政**
    - **violence ：打斗**
    - **crowd：聚众**
    - **parade：游行**
    - **carcrash：车祸现场**
    - **flag：旗帜**
    - **location：地标**
    - **others：其他**
- 图文违规（ad）结果分类：
    - **normal：正常**
    - **ad：其他广告**
    - **politics：文字含涉政内容**
    - **porn：文字含涉黄内容**
    - **abuse：文字含辱骂内容**
    - **terrorism：文字含暴恐内容**
    - **contraband：文字含违禁内容**
    - **spam：文字含其他垃圾内容**
    - **npx：牛皮癣广告**
    - **qrcode：含二维码**
    - **programCode：含小程序码**
- 图片不良场景（live）结果分类：
    - **normal：正常**
    - **meaningless：图片中无内容（例如黑屏、白屏）**
    - **PIP：画中画**
    - **smoking：吸烟**
    - **drivelive：车内直播**
- 图片logo（logo）结果分类：
    - **normal：正常**
    - **TV：含受管控的logo**
    - **trademark：含商标**',
                                        'type' => 'string',
                                        'example' => 'Normal',
                                      ),
                                      'Scene' => 
                                      array (
                                        'description' => '审核场景。

- **porn**：鉴黄
- **terrorism**：暴恐涉政
- **ad**：图文违规
- **live**：不良场景
- **logo**：图片Logo',
                                        'type' => 'string',
                                        'example' => 'Antispam',
                                      ),
                                      'Rate' => 
                                      array (
                                        'description' => '分值。取值：0~100。',
                                        'type' => 'string',
                                        'example' => '100',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'State' => 
                  array (
                    'description' => '作业状态。',
                    'type' => 'string',
                    'example' => 'Success',
                  ),
                  'TitleCensorResult' => 
                  array (
                    'description' => '标题审核结果。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Suggestion' => 
                      array (
                        'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                        'type' => 'string',
                        'example' => 'block',
                      ),
                      'Label' => 
                      array (
                        'description' => '审核结果的标签。

- **normal**：普通
- **spam**：含垃圾信息
- **ad**：广告
- **abuse**：辱骂
- **flood**：灌水
- **contraband**：违禁
- **meaningless**：无意义',
                        'type' => 'string',
                        'example' => 'meaningless',
                      ),
                      'Scene' => 
                      array (
                        'description' => '审核场景。取固定值： **antispam**，文本反垃圾。',
                        'type' => 'string',
                        'example' => 'antispam',
                      ),
                      'Rate' => 
                      array (
                        'description' => '分值。',
                        'type' => 'string',
                        'example' => '99.91',
                      ),
                    ),
                  ),
                  'Message' => 
                  array (
                    'description' => '作业失败时错误信息。执行成功时不返回此参数。',
                    'type' => 'string',
                    'example' => 'The resource operated cannot be found',
                  ),
                  'Input' => 
                  array (
                    'description' => '作业输入。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Object' => 
                      array (
                        'description' => '输入文件的OSS Object。',
                        'type' => 'string',
                        'example' => 'test/ai/censor/test-****.mp4',
                      ),
                      'Location' => 
                      array (
                        'description' => '输入文件的OSS Location。',
                        'type' => 'string',
                        'example' => 'oss-cn-shanghai',
                      ),
                      'Bucket' => 
                      array (
                        'description' => '输入文件的OSS Bucket。',
                        'type' => 'string',
                        'example' => 'bucket-test-in-****',
                      ),
                    ),
                  ),
                  'BarrageCensorResult' => 
                  array (
                    'description' => '弹幕审核结果。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Suggestion' => 
                      array (
                        'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                        'type' => 'string',
                        'example' => 'pass',
                      ),
                      'Label' => 
                      array (
                        'description' => '审核结果的标签。

- **normal**：普通
- **spam**：含垃圾信息
- **ad**：广告
- **abuse**：辱骂
- **flood**：灌水
- **contraband**：违禁
- **meaningless**：无意义',
                        'type' => 'string',
                        'example' => 'normal',
                      ),
                      'Scene' => 
                      array (
                        'description' => '审核场景。取固定值： **antispam**，文本反垃圾。',
                        'type' => 'string',
                        'example' => 'antispam',
                      ),
                      'Rate' => 
                      array (
                        'description' => '分值。',
                        'type' => 'string',
                        'example' => '99.91',
                      ),
                    ),
                  ),
                  'DescCensorResult' => 
                  array (
                    'description' => '描述审核结果。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Suggestion' => 
                      array (
                        'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                        'type' => 'string',
                        'example' => 'review',
                      ),
                      'Label' => 
                      array (
                        'description' => '审核结果的标签。

- **normal**：普通
- **spam**：含垃圾信息
- **ad**：广告
- **abuse**：辱骂
- **flood**：灌水
- **contraband**：违禁
- **meaningless**：无意义',
                        'type' => 'string',
                        'example' => 'terrorism',
                      ),
                      'Scene' => 
                      array (
                        'description' => '审核场景。取固定值： **antispam**，文本反垃圾。',
                        'type' => 'string',
                        'example' => 'antispam',
                      ),
                      'Rate' => 
                      array (
                        'description' => '分值。',
                        'type' => 'string',
                        'example' => '100',
                      ),
                    ),
                  ),
                  'VideoCensorConfig' => 
                  array (
                    'description' => '视频审查配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OutputFile' => 
                      array (
                        'description' => '视频截图结果的保存地址。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Object' => 
                          array (
                            'description' => '截图输出文件 （OSS Object）。

> 示例中{Count}是占位符，图片Object依次为`output00001-****.jpg`,`output00002-****.jpg`等。',
                            'type' => 'string',
                            'example' => 'output{Count}.jpg',
                          ),
                          'Location' => 
                          array (
                            'description' => '截图输出OSS Bucket所在数据中心（OSS Location）。',
                            'type' => 'string',
                            'example' => 'oss-cn-shanghai',
                          ),
                          'Bucket' => 
                          array (
                            'description' => '截图输出文件所在OSS Bucket。',
                            'type' => 'string',
                            'example' => 'test-bucket-****',
                          ),
                        ),
                      ),
                      'VideoCensor' => 
                      array (
                        'description' => '是否需要审核视频内容。默认值：**true**。可取值：

- **true**：审核

- **false**：不审核',
                        'type' => 'string',
                        'example' => 'true',
                      ),
                      'BizType' => 
                      array (
                        'description' => '定制业务类型。默认common。',
                        'type' => 'string',
                        'example' => 'common',
                      ),
                    ),
                  ),
                  'JobId' => 
                  array (
                    'description' => '媒体审核作业ID。',
                    'type' => 'string',
                    'example' => 'f8f166eea7a44e9bb0a4aecf9543****',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户自定义数据。',
                    'type' => 'string',
                    'example' => 'example userdata ****',
                  ),
                  'Code' => 
                  array (
                    'description' => '作业失败时错误码。执行成功时此参数不返回。',
                    'type' => 'string',
                    'example' => 'InvalidParameter.ResourceNotFound',
                  ),
                  'VensorCensorResult' => 
                  array (
                    'description' => '视频审查结果。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VideoTimelines' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'VideoTimeline' => 
                          array (
                            'description' => '详细时间点的审核结果，按照时间从小到大排序。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '返回参数。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Timestamp' => 
                                array (
                                  'description' => '视频中的位置。
格式：`hh:mm:ss[.SSS]`。',
                                  'type' => 'string',
                                  'example' => '00:02:59.999',
                                ),
                                'Object' => 
                                array (
                                  'description' => '截图输出文件 （OSS Object）。

> 示例中{Count}是占位符，图片Object依次为`output00001-****.jpg`,`output00002-****.jpg`等。',
                                  'type' => 'string',
                                  'example' => 'output{Count}.jpg',
                                ),
                                'CensorResults' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'CensorResult' => 
                                    array (
                                      'description' => '包含多种类型审核结果的标签、分值等。',
                                      'type' => 'array',
                                      'items' => 
                                      array (
                                        'description' => '返回参数。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Suggestion' => 
                                          array (
                                            'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                                            'type' => 'string',
                                            'example' => 'block',
                                          ),
                                          'Label' => 
                                          array (
                                            'description' => '审核结果的标签。
- 图片智能鉴黄（porn）结果分类：
    - **normal：正常**
    - **sexy：性感**
    - **porn：色情**
- 图片暴恐涉政（terrorism）结果分类：
    - **normal：正常**
    - **bloody：血腥**
    - **explosion：爆炸烟光**
    - **outfit：特殊装束**
    - **logo：特殊标识**
    - **weapon：武器**
    - **politics：涉政**
    - **violence ：打斗**
    - **crowd：聚众**
    - **parade：游行**
    - **carcrash：车祸现场**
    - **flag：旗帜**
    - **location：地标**
    - **others：其他**
- 图文违规（ad）结果分类：
    - **normal：正常**
    - **ad：其他广告**
    - **politics：文字含涉政内容**
    - **porn：文字含涉黄内容**
    - **abuse：文字含辱骂内容**
    - **terrorism：文字含暴恐内容**
    - **contraband：文字含违禁内容**
    - **spam：文字含其他垃圾内容**
    - **npx：牛皮癣广告**
    - **qrcode：含二维码**
    - **programCode：含小程序码**
- 图片不良场景（live）结果分类：
    - **normal：正常**
    - **meaningless：图片中无内容（例如黑屏、白屏）**
    - **PIP：画中画**
    - **smoking：吸烟**
    - **drivelive：车内直播**
- 图片logo（logo）结果分类：
    - **normal：正常**
    - **TV：含受管控的logo**
    - **trademark：含商标**',
                                            'type' => 'string',
                                            'example' => 'flood',
                                          ),
                                          'Scene' => 
                                          array (
                                            'description' => '审核场景。

- **porn**：鉴黄
- **terrorism**：暴恐涉政
- **ad**：图文违规
- **live**：不良场景
- **logo**：图片Logo',
                                            'type' => 'string',
                                            'example' => 'porn',
                                          ),
                                          'Rate' => 
                                          array (
                                            'description' => '分值。',
                                            'type' => 'string',
                                            'example' => '99.99',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'NextPageToken' => 
                      array (
                        'description' => '下一页标识',
                        'type' => 'string',
                        'example' => 'ea04afcca7cd4e80b9ece8fbb251****',
                      ),
                      'CensorResults' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CensorResult' => 
                          array (
                            'description' => '审核结果集合，包含各种场景（黄、暴、恐、政）的概要信息。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '审核结果详情。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Suggestion' => 
                                array (
                                  'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                                  'type' => 'string',
                                  'example' => 'review',
                                ),
                                'Label' => 
                                array (
                                  'description' => '审核结果的标签。
- 图片智能鉴黄（porn）结果分类：
    - **normal：正常**
    - **sexy：性感**
    - **porn：色情**
- 图片暴恐涉政（terrorism）结果分类：
    - **normal：正常**
    - **bloody：血腥**
    - **explosion：爆炸烟光**
    - **outfit：特殊装束**
    - **logo：特殊标识**
    - **weapon：武器**
    - **politics：涉政**
    - **violence ：打斗**
    - **crowd：聚众**
    - **parade：游行**
    - **carcrash：车祸现场**
    - **flag：旗帜**
    - **location：地标**
    - **others：其他**
- 图文违规（ad）结果分类：
    - **normal：正常**
    - **ad：其他广告**
    - **politics：文字含涉政内容**
    - **porn：文字含涉黄内容**
    - **abuse：文字含辱骂内容**
    - **terrorism：文字含暴恐内容**
    - **contraband：文字含违禁内容**
    - **spam：文字含其他垃圾内容**
    - **npx：牛皮癣广告**
    - **qrcode：含二维码**
    - **programCode：含小程序码**
- 图片不良场景（live）结果分类：
    - **normal：正常**
    - **meaningless：图片中无内容（例如黑屏、白屏）**
    - **PIP：画中画**
    - **smoking：吸烟**
    - **drivelive：车内直播**
- 图片logo（logo）结果分类：
    - **normal：正常**
    - **TV：含受管控的logo**
    - **trademark：含商标**',
                                  'type' => 'string',
                                  'example' => 'meaningless',
                                ),
                                'Scene' => 
                                array (
                                  'description' => '审核场景。

- **porn**：鉴黄
- **terrorism**：暴恐涉政
- **ad**：图文违规
- **live**：不良场景
- **logo**：图片Logo',
                                  'type' => 'string',
                                  'example' => 'terrorism',
                                ),
                                'Rate' => 
                                array (
                                  'description' => '分值。',
                                  'type' => 'string',
                                  'example' => '100',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'PipelineId' => 
                  array (
                    'description' => '管道ID。',
                    'type' => 'string',
                    'example' => 'c5b30b7c0d0e4a0abde1d5f9e751****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B42299E6-F71F-465F-8FE9-4FC2E3D3C2CA\\",\\n  \\"MediaCensorJobDetail\\": {\\n    \\"CreationTime\\": \\"2018-09-13T16:32:24Z\\",\\n    \\"FinishTime\\": \\"2018-09-13T16:38:24Z\\",\\n    \\"Suggestion\\": \\"block\\",\\n    \\"CoverImageCensorResults\\": {\\n      \\"CoverImageCensorResult\\": [\\n        {\\n          \\"Object\\": \\"test/ai/censor/v2/vme-****.jpg\\",\\n          \\"Location\\": \\"oss-cn-shanghai\\",\\n          \\"Bucket\\": \\"bucket-out-test-****\\",\\n          \\"Results\\": {\\n            \\"Result\\": [\\n              {\\n                \\"Suggestion\\": \\"pass\\",\\n                \\"Label\\": \\"Normal\\",\\n                \\"Scene\\": \\"Antispam\\",\\n                \\"Rate\\": \\"100\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    },\\n    \\"State\\": \\"Success\\",\\n    \\"TitleCensorResult\\": {\\n      \\"Suggestion\\": \\"block\\",\\n      \\"Label\\": \\"meaningless\\",\\n      \\"Scene\\": \\"antispam\\",\\n      \\"Rate\\": \\"99.91\\"\\n    },\\n    \\"Message\\": \\"The resource operated cannot be found\\",\\n    \\"Input\\": {\\n      \\"Object\\": \\"test/ai/censor/test-****.mp4\\",\\n      \\"Location\\": \\"oss-cn-shanghai\\",\\n      \\"Bucket\\": \\"bucket-test-in-****\\"\\n    },\\n    \\"BarrageCensorResult\\": {\\n      \\"Suggestion\\": \\"pass\\",\\n      \\"Label\\": \\"normal\\",\\n      \\"Scene\\": \\"antispam\\",\\n      \\"Rate\\": \\"99.91\\"\\n    },\\n    \\"DescCensorResult\\": {\\n      \\"Suggestion\\": \\"review\\",\\n      \\"Label\\": \\"terrorism\\",\\n      \\"Scene\\": \\"antispam\\",\\n      \\"Rate\\": \\"100\\"\\n    },\\n    \\"VideoCensorConfig\\": {\\n      \\"OutputFile\\": {\\n        \\"Object\\": \\"output{Count}.jpg\\",\\n        \\"Location\\": \\"oss-cn-shanghai\\",\\n        \\"Bucket\\": \\"test-bucket-****\\"\\n      },\\n      \\"VideoCensor\\": \\"true\\",\\n      \\"BizType\\": \\"common\\"\\n    },\\n    \\"JobId\\": \\"f8f166eea7a44e9bb0a4aecf9543****\\",\\n    \\"UserData\\": \\"example userdata ****\\",\\n    \\"Code\\": \\"InvalidParameter.ResourceNotFound\\",\\n    \\"VensorCensorResult\\": {\\n      \\"VideoTimelines\\": {\\n        \\"VideoTimeline\\": [\\n          {\\n            \\"Timestamp\\": \\"00:02:59.999\\",\\n            \\"Object\\": \\"output{Count}.jpg\\",\\n            \\"CensorResults\\": {\\n              \\"CensorResult\\": [\\n                {\\n                  \\"Suggestion\\": \\"block\\",\\n                  \\"Label\\": \\"flood\\",\\n                  \\"Scene\\": \\"porn\\",\\n                  \\"Rate\\": \\"99.99\\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      },\\n      \\"NextPageToken\\": \\"ea04afcca7cd4e80b9ece8fbb251****\\",\\n      \\"CensorResults\\": {\\n        \\"CensorResult\\": [\\n          {\\n            \\"Suggestion\\": \\"review\\",\\n            \\"Label\\": \\"meaningless\\",\\n            \\"Scene\\": \\"terrorism\\",\\n            \\"Rate\\": \\"100\\"\\n          }\\n        ]\\n      }\\n    },\\n    \\"PipelineId\\": \\"c5b30b7c0d0e4a0abde1d5f9e751****\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询媒体审核作业详情',
      'summary' => '调用QueryMediaCensorJobDetail查询媒体审核作业的详细信息。',
      'description' => '媒体审核结果中视频部分是按照时间点从小到大排序组成一个时间线，如果视频时间非常长，查询时按分页返回第1页信息，如果需要详细查询视频部分的全量结果，可单独调用本接口。',
    ),
    'QueryMediaCensorJobList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒体审核作业ID。可以从提交媒体审核作业的返回参数中获取，多个使用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'fa9c34be3bcf42919ac4d1775239****,78dc866518b843259669df58ed30****',
          ),
        ),
        1 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
            'type' => 'string',
            'required' => false,
            'example' => '79aff3eee82242e092899db5f669',
          ),
        ),
        2 => 
        array (
          'name' => 'MaximumPageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页最大返回数。

- 默认：**30**
- 取值：**1~300**',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'State',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的作业状态。取值：

- **All**：全部。

- **Queuing**：排队中。

- **Analysing**：分析中。

- **Fail**：失败。

- **Success**：成功。',
            'type' => 'string',
            'required' => false,
            'example' => 'All',
            'default' => 'All',
          ),
        ),
        4 => 
        array (
          'name' => 'StartOfJobCreatedTimeRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最早任务创建时间。

- 日期格式按照ISO8601标准表示，并需要使用UTC时间。
- 格式为：YYYY-MM-DDThh:mm:ssZ 。',
            'type' => 'string',
            'required' => false,
            'example' => '2021-12-22T03:48:05Z
',
          ),
        ),
        5 => 
        array (
          'name' => 'EndOfJobCreatedTimeRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最晚任务创建时间。

- 日期格式按照ISO8601标准表示，并需要使用UTC时间。
- 格式为：YYYY-MM-DDThh:mm:ssZ 。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-14T02:16:07Z
',
          ),
        ),
        6 => 
        array (
          'name' => 'PipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管道ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'c5b30b7c0d0e4a0abde1d5f9e751****
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'MediaCensorJobList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MediaCensorJob' => 
                  array (
                    'description' => '媒体审核作业列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '媒体审核作业详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '任务创建时间。',
                          'type' => 'string',
                          'example' => '2021-11-04T07:25:48Z
',
                        ),
                        'FinishTime' => 
                        array (
                          'description' => '完成时间。',
                          'type' => 'string',
                          'example' => '2021-11-04T07:25:50Z
',
                        ),
                        'Suggestion' => 
                        array (
                          'description' => '处理建议。可取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                          'type' => 'string',
                          'example' => 'pass',
                        ),
                        'CoverImageCensorResults' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CoverImageCensorResult' => 
                            array (
                              'description' => '封面图片审查结果列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '封面图片审查结果详细信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Object' => 
                                  array (
                                    'description' => '封面图片的OSS Object。',
                                    'type' => 'string',
                                    'example' => 'test/ai/censor/v2/vme-****.jpg
',
                                  ),
                                  'Location' => 
                                  array (
                                    'description' => '封面图片的OSS Object。',
                                    'type' => 'string',
                                    'example' => 'oss-cn-shanghai',
                                  ),
                                  'Bucket' => 
                                  array (
                                    'description' => '封面图片的OSS Bucket。',
                                    'type' => 'string',
                                    'example' => 'example-Bucket-****
',
                                  ),
                                  'Results' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Result' => 
                                      array (
                                        'description' => '作业审核结果。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '作业审核结果详细信息。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Suggestion' => 
                                            array (
                                              'description' => '作业整体审核结果。取值：

- **pass**：通过。
- **review**：人工重审。
- **block**：拦截。

> 任何一种类型的审核结果是review时，整体结果为review，任何一种类型的审核结果是block时，整体结果为block。',
                                              'type' => 'string',
                                              'example' => 'pass',
                                            ),
                                            'Label' => 
                                            array (
                                              'description' => '审核结果的标签，多个使用半角逗号（,）分隔。

- 图片智能鉴黄（porn）审核结果分类：
    - **nomal**：正常。
    - **sexy**：性感。
    - **porn**：色情。

- 图片暴恐涉政（terrorism）结果分类：
    - **naomal**：正常。
    - **bloody**：血腥。
    - **explosion**：爆炸烟光。
    - **outfit**：特殊装束。
    - **logo**：特殊标识。
    - **weapon**：武器。
    - **polotocs**：涉政。
    - **violence**：打斗。
    - **crowd**：聚众。
    - **parade**：游行。
    - **carcrash**：车祸现场。
    - **flag**：旗帜。
    - **location**：地标。
    - **others**：其他。

- 图文违规（ad）结果分类：
    - **normal**：正常。
    - **ad**：其他广告。
    - **politics**：文字含涉政内容。
    - **porn**：文字含涉黄内容。
    - **abuse**：文字含辱骂内容。
    - **terrorism**：文字含暴恐内容。
    - **contraband**：文字含违禁内容。
    - **spam**：文字含其他垃圾内容。
    - **npx**：牛皮藓广告。
    - **qrcode**：含二维码。
    - **programCode**：含小程序码。

- 图片不良场景（live）结果分类：
    - **normal**：正常。
    - **meaningless**：图片中无内容（例如黑屏、白屏）。
    - **PIP**：画中画。
    - **smoking**：吸烟。
    - **drivelive**：车内直播。

- 图片logo（logo）结果分类：
    - **normal**：正常。
    - **TV**：含受管控的Logo。
    - **trademark**：含商标。',
                                              'type' => 'string',
                                              'example' => 'normal',
                                            ),
                                            'Scene' => 
                                            array (
                                              'description' => '审核场景。

- **porn**：鉴黄
- **terrorism**：暴恐涉政
- **ad**：图文违规
- **live**：不良场景
- **logo**：图片logo',
                                              'type' => 'string',
                                              'example' => 'live',
                                            ),
                                            'Rate' => 
                                            array (
                                              'description' => '分值。可取值：0~100。',
                                              'type' => 'string',
                                              'example' => '100',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'State' => 
                        array (
                          'description' => '作业状态。',
                          'type' => 'string',
                          'example' => 'Success',
                        ),
                        'TitleCensorResult' => 
                        array (
                          'description' => '标题审核结果。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Suggestion' => 
                            array (
                              'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                              'type' => 'string',
                              'example' => 'block',
                            ),
                            'Label' => 
                            array (
                              'description' => '审核结果的标签，多个使用半角逗号（,）分隔。

- **normal**：普通
- **spam**：含垃圾信息
- **ad**：广告
- **abuse**：辱骂
- **flood**：灌水
- **contraband**：违禁
- **meaningless**：无意义',
                              'type' => 'string',
                              'example' => 'meaningless',
                            ),
                            'Scene' => 
                            array (
                              'description' => '审核场景。取固定值：**antispam**，文本反垃圾。',
                              'type' => 'string',
                              'example' => 'antispam',
                            ),
                            'Rate' => 
                            array (
                              'description' => '分值。可取值：0~100。',
                              'type' => 'string',
                              'example' => '100',
                            ),
                          ),
                        ),
                        'Message' => 
                        array (
                          'description' => '作业失败时错误信息。执行成功时不返回此参数。',
                          'type' => 'string',
                          'example' => 'The resource operated cannot be found',
                        ),
                        'Input' => 
                        array (
                          'description' => '作业输入。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Object' => 
                            array (
                              'description' => '输入文件的OSS Object。',
                              'type' => 'string',
                              'example' => 'test/ai/censor/test-****.mp4',
                            ),
                            'Location' => 
                            array (
                              'description' => '输入文件的OSS Location。',
                              'type' => 'string',
                              'example' => 'oss-cn-shanghai
',
                            ),
                            'Bucket' => 
                            array (
                              'description' => '输入文件的OSS Bucket。',
                              'type' => 'string',
                              'example' => 'bucket-test-in-****',
                            ),
                          ),
                        ),
                        'BarrageCensorResult' => 
                        array (
                          'description' => '弹幕审核结果。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Suggestion' => 
                            array (
                              'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                              'type' => 'string',
                              'example' => 'pass',
                            ),
                            'Label' => 
                            array (
                              'description' => '审核结果的标签，多个使用半角逗号（,）分隔。

- **normal**：普通
- **spam**：含垃圾信息
- **ad**：广告
- **abuse**：辱骂
- **flood**：灌水
- **contraband**：违禁
- **meaningless**：无意义',
                              'type' => 'string',
                              'example' => 'normal',
                            ),
                            'Scene' => 
                            array (
                              'description' => '审核场景。取固定值：**antispam**，文本反垃圾。',
                              'type' => 'string',
                              'example' => 'antispam',
                            ),
                            'Rate' => 
                            array (
                              'description' => '分值。可取值：0~100。',
                              'type' => 'string',
                              'example' => '99.91',
                            ),
                          ),
                        ),
                        'DescCensorResult' => 
                        array (
                          'description' => '描述审核结果。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Suggestion' => 
                            array (
                              'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                              'type' => 'string',
                              'example' => 'pass',
                            ),
                            'Label' => 
                            array (
                              'description' => '审核结果的标签，多个使用半角逗号（,）分隔。

- **normal**：普通
- **spam**：含垃圾信息
- **ad**：广告
- **abuse**：辱骂
- **flood**：灌水
- **contraband**：违禁
- **meaningless**：无意义',
                              'type' => 'string',
                              'example' => 'normal',
                            ),
                            'Scene' => 
                            array (
                              'description' => '审核场景。取固定值：**antispam**，文本反垃圾。',
                              'type' => 'string',
                              'example' => 'antispam',
                            ),
                            'Rate' => 
                            array (
                              'description' => '分值。可取值：0~100。',
                              'type' => 'string',
                              'example' => '100',
                            ),
                          ),
                        ),
                        'VideoCensorConfig' => 
                        array (
                          'description' => '视频审查配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OutputFile' => 
                            array (
                              'description' => '视频截图结果的保存地址。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Object' => 
                                array (
                                  'description' => '截图输出文件 （OSS Object）。

> 示例中{Count}是占位符，图片Object依次为`output00001-****.jpg,output00002-****.jpg`等。',
                                  'type' => 'string',
                                  'example' => 'output{Count}.jpg',
                                ),
                                'Location' => 
                                array (
                                  'description' => '截图输出OSS Bucket所在的OSS Location。',
                                  'type' => 'string',
                                  'example' => 'oss-cn-shanghai
',
                                ),
                                'Bucket' => 
                                array (
                                  'description' => '截图输出文件所在OSS Bucket。',
                                  'type' => 'string',
                                  'example' => 'test-bucket-****
',
                                ),
                              ),
                            ),
                            'VideoCensor' => 
                            array (
                              'description' => '是否需要审核视频内容。默认值：**true**。可取值：

- **true**：审核

- **false**：不审核',
                              'type' => 'string',
                              'example' => 'true',
                            ),
                            'BizType' => 
                            array (
                              'description' => '审核模板。默认common（默认模板）。

> 不填默认为common，如果是通过提交工单自定义的审核模板，此项返回UID。',
                              'type' => 'string',
                              'example' => 'common',
                            ),
                          ),
                        ),
                        'JobId' => 
                        array (
                          'description' => '媒体审核作业ID。',
                          'type' => 'string',
                          'example' => 'f8f166eea7a44e9bb0a4aecf9543',
                        ),
                        'UserData' => 
                        array (
                          'description' => '用户自定义数据。',
                          'type' => 'string',
                          'example' => 'example userdata ****
',
                        ),
                        'Code' => 
                        array (
                          'description' => '作业失败时错误码。执行成功时此参数不返回。',
                          'type' => 'string',
                          'example' => 'InvalidParameter.ResourceNotFound',
                        ),
                        'VensorCensorResult' => 
                        array (
                          'description' => '视频审查结果。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VideoTimelines' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'VideoTimeline' => 
                                array (
                                  'description' => '详细时间点的审核结果，按照时间从小到大排序。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '详细信息。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Timestamp' => 
                                      array (
                                        'description' => '视频中的位置。格式：`hh:mm:ss[.SSS]`。',
                                        'type' => 'string',
                                        'example' => '00:02:59.999',
                                      ),
                                      'Object' => 
                                      array (
                                        'description' => '截图输出文件 （OSS Object）。

> 示例中{Count}是占位符，图片Object依次为`output00001-****.jpg`，`output00002-****.jpg`等。',
                                        'type' => 'string',
                                        'example' => 'output{Count}.jpg',
                                      ),
                                      'CensorResults' => 
                                      array (
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'CensorResult' => 
                                          array (
                                            'description' => '包含多种类型审核结果的标签、分值等。',
                                            'type' => 'array',
                                            'items' => 
                                            array (
                                              'description' => '详细信息。',
                                              'type' => 'object',
                                              'properties' => 
                                              array (
                                                'Suggestion' => 
                                                array (
                                                  'description' => '处理建议。取值：

- **pass**：通过
- **review**：人工重审
- **block**：拦截',
                                                  'type' => 'string',
                                                  'example' => 'block',
                                                ),
                                                'Label' => 
                                                array (
                                                  'description' => '审核结果的标签，多个使用半角逗号（,）分隔。

- 图片智能鉴黄（porn）审核结果分类：
    - **nomal**：正常。
    - **sexy**：性感。
    - **porn**：色情。

- 图片暴恐涉政（terrorism）结果分类：
    - **naomal**：正常。
    - **bloody**：血腥。
    - **explosion**：爆炸烟光。
    - **outfit**：特殊装束。
    - **logo**：特殊标识。
    - **weapon**：武器。
    - **polotocs**：涉政。
    - **violence**：打斗。
    - **crowd**：聚众。
    - **parade**：游行。
    - **carcrash**：车祸现场。
    - **flag**：旗帜。
    - **location**：地标。
    - **others**：其他。

- 图文违规（ad）结果分类：
    - **normal**：正常。
    - **ad**：其他广告。
    - **politics**：文字含涉政内容。
    - **porn**：文字含涉黄内容。
    - **abuse**：文字含辱骂内容。
    - **terrorism**：文字含暴恐内容。
    - **contraband**：文字含违禁内容。
    - **spam**：文字含其他垃圾内容。
    - **npx**：牛皮藓广告。
    - **qrcode**：含二维码。
    - **programCode**：含小程序码。

- 图片不良场景（live）结果分类：
    - **normal**：正常。
    - **meaningless**：图片中无内容（例如黑屏、白屏）。
    - **PIP**：画中画。
    - **smoking**：吸烟。
    - **drivelive**：车内直播。

- 图片logo（logo）结果分类：
    - **normal**：正常。
    - **TV**：含受管控的Logo。
    - **trademark**：含商标。',
                                                  'type' => 'string',
                                                  'example' => 'normal',
                                                ),
                                                'Scene' => 
                                                array (
                                                  'description' => '审核场景。

- **porn**：鉴黄。
- **terrorism**：暴恐涉政。
- **ad**：图文违规。
- **live**：不良场景。
- **logo**：图片logo。',
                                                  'type' => 'string',
                                                  'example' => 'porn',
                                                ),
                                                'Rate' => 
                                                array (
                                                  'description' => '分值。可取值：0~100。',
                                                  'type' => 'string',
                                                  'example' => '100',
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'NextPageToken' => 
                            array (
                              'description' => '下一页标识。',
                              'type' => 'string',
                              'example' => 'ea04afcca7cd4e80b9ece8fbb251',
                            ),
                            'CensorResults' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'CensorResult' => 
                                array (
                                  'description' => '审核结果集合，包含各种场景（黄、暴、恐、政）的概要信息。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '审核结果详细信息。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Suggestion' => 
                                      array (
                                        'description' => '处理建议。取值：

- **pass**：通过。

- **review**：人工重审。

- **block**：拦截。',
                                        'type' => 'string',
                                        'example' => 'pass',
                                      ),
                                      'Label' => 
                                      array (
                                        'description' => '审核结果的标签，多个使用半角逗号（,）分隔。

- 图片智能鉴黄（porn）审核结果分类：
    - **nomal**：正常。
    - **sexy**：性感。
    - **porn**：色情。

- 图片暴恐涉政（terrorism）结果分类：
    - **naomal**：正常。
    - **bloody**：血腥。
    - **explosion**：爆炸烟光。
    - **outfit**：特殊装束。
    - **logo**：特殊标识。
    - **weapon**：武器。
    - **polotocs**：涉政。
    - **violence**：打斗。
    - **crowd**：聚众。
    - **parade**：游行。
    - **carcrash**：车祸现场。
    - **flag**：旗帜。
    - **location**：地标。
    - **others**：其他。

- 图文违规（ad）结果分类：
    - **normal**：正常。
    - **ad**：其他广告。
    - **politics**：文字含涉政内容。
    - **porn**：文字含涉黄内容。
    - **abuse**：文字含辱骂内容。
    - **terrorism**：文字含暴恐内容。
    - **contraband**：文字含违禁内容。
    - **spam**：文字含其他垃圾内容。
    - **npx**：牛皮藓广告。
    - **qrcode**：含二维码。
    - **programCode**：含小程序码。

- 图片不良场景（live）结果分类：
    - **normal**：正常。
    - **meaningless**：图片中无内容（例如黑屏、白屏）。
    - **PIP**：画中画。
    - **smoking**：吸烟。
    - **drivelive**：车内直播。

- 图片logo（logo）结果分类：
    - **normal**：正常。
    - **TV**：含受管控的Logo。
    - **trademark**：含商标。',
                                        'type' => 'string',
                                        'example' => 'meaningless',
                                      ),
                                      'Scene' => 
                                      array (
                                        'description' => '审核场景。

- **porn**：鉴黄。
- **terrorism**：暴恐涉政。
- **ad**：图文违规。
- **live**：不良场景。
- **logo**：图片Logo。',
                                        'type' => 'string',
                                        'example' => 'ad',
                                      ),
                                      'Rate' => 
                                      array (
                                        'description' => '分值。可取值：0~100。',
                                        'type' => 'string',
                                        'example' => '100',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'PipelineId' => 
                        array (
                          'description' => '管道ID。',
                          'type' => 'string',
                          'example' => 'c5b30b7c0d0e4a0abde1d5f9e751****
',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D1D5C080-8E2F-5030-8AB4-13092F17631B
',
              ),
              'NextPageToken' => 
              array (
                'description' => '下一页标识，32位UUID。查询结果大于一页时返回，每次查询值都会更新。',
                'type' => 'string',
                'example' => '9b1a42bc6e8d46e6a1383b7e7f01****
',
              ),
              'NonExistIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'String' => 
                  array (
                    'description' => '不存在的作业ID列表。如果为空则不返回此参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '作业ID。',
                      'type' => 'string',
                      'example' => '78dc866518b843259669df58ed30****
',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"MediaCensorJobList\\": {\\n    \\"MediaCensorJob\\": [\\n      {\\n        \\"CreationTime\\": \\"2021-11-04T07:25:48Z\\\\n\\",\\n        \\"FinishTime\\": \\"2021-11-04T07:25:50Z\\\\n\\",\\n        \\"Suggestion\\": \\"pass\\",\\n        \\"CoverImageCensorResults\\": {\\n          \\"CoverImageCensorResult\\": [\\n            {\\n              \\"Object\\": \\"test/ai/censor/v2/vme-****.jpg\\\\n\\",\\n              \\"Location\\": \\"oss-cn-shanghai\\",\\n              \\"Bucket\\": \\"example-Bucket-****\\\\n\\",\\n              \\"Results\\": {\\n                \\"Result\\": [\\n                  {\\n                    \\"Suggestion\\": \\"pass\\",\\n                    \\"Label\\": \\"normal\\",\\n                    \\"Scene\\": \\"live\\",\\n                    \\"Rate\\": \\"100\\"\\n                  }\\n                ]\\n              }\\n            }\\n          ]\\n        },\\n        \\"State\\": \\"Success\\",\\n        \\"TitleCensorResult\\": {\\n          \\"Suggestion\\": \\"block\\",\\n          \\"Label\\": \\"meaningless\\",\\n          \\"Scene\\": \\"antispam\\",\\n          \\"Rate\\": \\"100\\"\\n        },\\n        \\"Message\\": \\"The resource operated cannot be found\\",\\n        \\"Input\\": {\\n          \\"Object\\": \\"test/ai/censor/test-****.mp4\\",\\n          \\"Location\\": \\"oss-cn-shanghai\\\\n\\",\\n          \\"Bucket\\": \\"bucket-test-in-****\\"\\n        },\\n        \\"BarrageCensorResult\\": {\\n          \\"Suggestion\\": \\"pass\\",\\n          \\"Label\\": \\"normal\\",\\n          \\"Scene\\": \\"antispam\\",\\n          \\"Rate\\": \\"99.91\\"\\n        },\\n        \\"DescCensorResult\\": {\\n          \\"Suggestion\\": \\"pass\\",\\n          \\"Label\\": \\"normal\\",\\n          \\"Scene\\": \\"antispam\\",\\n          \\"Rate\\": \\"100\\"\\n        },\\n        \\"VideoCensorConfig\\": {\\n          \\"OutputFile\\": {\\n            \\"Object\\": \\"output{Count}.jpg\\",\\n            \\"Location\\": \\"oss-cn-shanghai\\\\n\\",\\n            \\"Bucket\\": \\"test-bucket-****\\\\n\\"\\n          },\\n          \\"VideoCensor\\": \\"true\\",\\n          \\"BizType\\": \\"common\\"\\n        },\\n        \\"JobId\\": \\"f8f166eea7a44e9bb0a4aecf9543\\",\\n        \\"UserData\\": \\"example userdata ****\\\\n\\",\\n        \\"Code\\": \\"InvalidParameter.ResourceNotFound\\",\\n        \\"VensorCensorResult\\": {\\n          \\"VideoTimelines\\": {\\n            \\"VideoTimeline\\": [\\n              {\\n                \\"Timestamp\\": \\"00:02:59.999\\",\\n                \\"Object\\": \\"output{Count}.jpg\\",\\n                \\"CensorResults\\": {\\n                  \\"CensorResult\\": [\\n                    {\\n                      \\"Suggestion\\": \\"block\\",\\n                      \\"Label\\": \\"normal\\",\\n                      \\"Scene\\": \\"porn\\",\\n                      \\"Rate\\": \\"100\\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ]\\n          },\\n          \\"NextPageToken\\": \\"ea04afcca7cd4e80b9ece8fbb251\\",\\n          \\"CensorResults\\": {\\n            \\"CensorResult\\": [\\n              {\\n                \\"Suggestion\\": \\"pass\\",\\n                \\"Label\\": \\"meaningless\\",\\n                \\"Scene\\": \\"ad\\",\\n                \\"Rate\\": \\"100\\"\\n              }\\n            ]\\n          }\\n        },\\n        \\"PipelineId\\": \\"c5b30b7c0d0e4a0abde1d5f9e751****\\\\n\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"D1D5C080-8E2F-5030-8AB4-13092F17631B\\\\n\\",\\n  \\"NextPageToken\\": \\"9b1a42bc6e8d46e6a1383b7e7f01****\\\\n\\",\\n  \\"NonExistIds\\": {\\n    \\"String\\": [\\n      \\"78dc866518b843259669df58ed30****\\\\n\\"\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询媒体审核作业列表',
      'summary' => '调用QueryMediaCensorJobList查询媒体审核作业列表。',
      'description' => '本接口只支持查询三个月内的媒体审核作业列表。',
    ),
    'CreateCustomTemplate' => 
    array (
      'summary' => '创建媒体处理用户自定义模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test-template',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型。',
            'description' => '模板类型。
- 1：转码模板
- 2：截图模板
- 3：动图模板
- 4：图片水印模板
- 5：文字水印模板
- 6：字幕模板
- 7：AI智能审核
- 8：AI智能封面
- 9：AI智能擦除
- 10：AI智能DNA模板
- 11：AI智能标签模板',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Subtype',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板子类型。',
            'description' => '模板子类型。

转码模板子类型：
- 1：普通转码模板（Normal）
- 2：音频转码模板（AudioTranscode）
- 3：转封装（Remux）
- 4：窄带高清1.0（NarrowBandV1）
- 5：窄带高清2.0（NarrowBandV2）

截图模板子类型：
- 1：普通截图/静态截图（Normal）
- 2：雪碧图（Sprite）
- 3：WebVtt截图（WebVtt）

AI审核模板子类型：
- 1：视频审核（Video） 
-  2：音频审核（Audio）
- 3：图片审核（Image）

AI智能擦除模板子类型：
- 1：图标擦除（VideoDelogo）
- 2：字幕擦除（VideoDetext）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板参数',
            'description' => '模板配置。详细参数说明请参见[模板参数](~~448291~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '{"Container":{"Format":"flv"},"Video":{},"Audio":{}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'CustomTemplate' => 
              array (
                'title' => '模板信息',
                'description' => '模板信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'title' => '模板Id',
                    'description' => '模板ID。',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'TemplateName' => 
                  array (
                    'title' => '模板名称',
                    'description' => '模板名称。',
                    'type' => 'string',
                    'example' => 'test-template',
                  ),
                  'Type' => 
                  array (
                    'title' => '模板类型ID',
                    'description' => '模板类型ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TypeName' => 
                  array (
                    'title' => '模板类型名称',
                    'description' => '模板类型名称。',
                    'type' => 'string',
                    'example' => 'TranscodeTemplate',
                  ),
                  'Subtype' => 
                  array (
                    'title' => '模板子类型名称',
                    'description' => '模板子类型名称。',
                    'type' => 'string',
                    'example' => 'Remux',
                  ),
                  'Status' => 
                  array (
                    'title' => '模板状态',
                    'description' => '模板状态。',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'IsDefault' => 
                  array (
                    'title' => '是否默认模板',
                    'description' => '是否默认模板。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TemplateConfig' => 
                  array (
                    'title' => '模板参数',
                    'description' => '模板配置。',
                    'type' => 'string',
                    'example' => '{"Container":{"Format":"flv"},"Video":{},"Audio":{}}',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '模板创建时间',
                    'description' => '模板创建时间。',
                    'type' => 'string',
                    'example' => '2022-04-19T02:04:31Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '模板修改时间',
                    'description' => '模板修改时间。',
                    'type' => 'string',
                    'example' => '2022-04-19T02:04:31Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"CustomTemplate\\": {\\n    \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"TemplateName\\": \\"test-template\\",\\n    \\"Type\\": 1,\\n    \\"TypeName\\": \\"TranscodeTemplate\\",\\n    \\"Subtype\\": \\"Remux\\",\\n    \\"Status\\": \\"Normal\\",\\n    \\"IsDefault\\": true,\\n    \\"TemplateConfig\\": \\"{\\\\\\"Container\\\\\\":{\\\\\\"Format\\\\\\":\\\\\\"flv\\\\\\"},\\\\\\"Video\\\\\\":{},\\\\\\"Audio\\\\\\":{}}\\",\\n    \\"CreateTime\\": \\"2022-04-19T02:04:31Z\\",\\n    \\"ModifiedTime\\": \\"2022-04-19T02:04:31Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建用户自定义模板',
    ),
    'GetSystemTemplate' => 
    array (
      'summary' => '获取单个系统预置模板信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID',
            'type' => 'string',
            'required' => true,
            'example' => 'S00000001-100060',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'SystemTemplate' => 
              array (
                'title' => '模板信息',
                'description' => '模板信息',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'title' => '模板Id',
                    'description' => '模板ID',
                    'type' => 'string',
                    'example' => 'S00000001-100060',
                  ),
                  'TemplateName' => 
                  array (
                    'title' => '模板名称',
                    'description' => '模板名称',
                    'type' => 'string',
                    'example' => 'M3U8-2K',
                  ),
                  'Type' => 
                  array (
                    'title' => '模板类型ID',
                    'description' => '模板类型ID',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TypeName' => 
                  array (
                    'title' => '模板类型名称',
                    'description' => '模板类型名称',
                    'type' => 'string',
                    'example' => 'TranscodeTemplate',
                  ),
                  'Subtype' => 
                  array (
                    'title' => '模板子类型ID',
                    'description' => '模板子类型ID',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'SubtypeName' => 
                  array (
                    'title' => '模板子类型名称',
                    'description' => '模板子类型名称',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'Status' => 
                  array (
                    'title' => '模板状态',
                    'description' => '模板状态',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'TemplateConfig' => 
                  array (
                    'title' => '模板参数',
                    'description' => '模板参数',
                    'type' => 'string',
                    'example' => '{"Container":{"Format":"m3u8"},"TransConfig":{"TransMode":"onepass"},"Video":{"Codec":"H.264","Maxrate":8000,"Preset":"medium","PixFmt":"yuv420p","Width":2048,"Bitrate":3500},"Audio":{"Codec":"aac","Bitrate":160,"Samplerate":44100,"Channels":2}}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"SystemTemplate\\": {\\n    \\"TemplateId\\": \\"S00000001-100060\\",\\n    \\"TemplateName\\": \\"M3U8-2K\\",\\n    \\"Type\\": 1,\\n    \\"TypeName\\": \\"TranscodeTemplate\\",\\n    \\"Subtype\\": 1,\\n    \\"SubtypeName\\": \\"Normal\\",\\n    \\"Status\\": \\"Normal\\",\\n    \\"TemplateConfig\\": \\"{\\\\\\"Container\\\\\\":{\\\\\\"Format\\\\\\":\\\\\\"m3u8\\\\\\"},\\\\\\"TransConfig\\\\\\":{\\\\\\"TransMode\\\\\\":\\\\\\"onepass\\\\\\"},\\\\\\"Video\\\\\\":{\\\\\\"Codec\\\\\\":\\\\\\"H.264\\\\\\",\\\\\\"Maxrate\\\\\\":8000,\\\\\\"Preset\\\\\\":\\\\\\"medium\\\\\\",\\\\\\"PixFmt\\\\\\":\\\\\\"yuv420p\\\\\\",\\\\\\"Width\\\\\\":2048,\\\\\\"Bitrate\\\\\\":3500},\\\\\\"Audio\\\\\\":{\\\\\\"Codec\\\\\\":\\\\\\"aac\\\\\\",\\\\\\"Bitrate\\\\\\":160,\\\\\\"Samplerate\\\\\\":44100,\\\\\\"Channels\\\\\\":2}}\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取系统模板信息',
    ),
    'GetCustomTemplate' => 
    array (
      'summary' => '获取媒体处理用户自定义模板信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID',
            'type' => 'string',
            'required' => false,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取默认模板时的模板类型ID。TemplateId为空时该参数必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Subtype',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板子类型。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'CustomTemplate' => 
              array (
                'title' => '模板信息',
                'description' => '模板信息',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'title' => '模板Id',
                    'description' => '模板Id',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'TemplateName' => 
                  array (
                    'title' => '模板名称',
                    'description' => '模板名称',
                    'type' => 'string',
                    'example' => '测试截图模板',
                  ),
                  'Type' => 
                  array (
                    'title' => '模板类型ID',
                    'description' => '模板类型ID',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'TypeName' => 
                  array (
                    'title' => '模板类型名称',
                    'description' => '模板类型名称',
                    'type' => 'string',
                    'example' => 'SnapshotTemplate',
                  ),
                  'Subtype' => 
                  array (
                    'title' => '模板子类型ID',
                    'description' => '模板子类型ID',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'SubtypeName' => 
                  array (
                    'title' => '模板子类型名称',
                    'description' => '模板子类型名称',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'Status' => 
                  array (
                    'title' => '模板状态',
                    'description' => '模板状态',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'IsDefault' => 
                  array (
                    'title' => '是否默认模板',
                    'description' => '是否默认模板',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TemplateConfig' => 
                  array (
                    'title' => '模板参数',
                    'description' => '模板参数',
                    'type' => 'string',
                    'example' => '{"Type":"Normal","FrameType":"normal","Time":0,"Count":10}',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '模板创建时间',
                    'description' => '模板创建时间',
                    'type' => 'string',
                    'example' => '2022-01-01T10:00:00Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '模板修改时间',
                    'description' => '模板修改时间',
                    'type' => 'string',
                    'example' => '2022-01-01T11:00:00Z
',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"CustomTemplate\\": {\\n    \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"TemplateName\\": \\"测试截图模板\\",\\n    \\"Type\\": 2,\\n    \\"TypeName\\": \\"SnapshotTemplate\\",\\n    \\"Subtype\\": 1,\\n    \\"SubtypeName\\": \\"Normal\\",\\n    \\"Status\\": \\"Normal\\",\\n    \\"IsDefault\\": true,\\n    \\"TemplateConfig\\": \\"{\\\\\\"Type\\\\\\":\\\\\\"Normal\\\\\\",\\\\\\"FrameType\\\\\\":\\\\\\"normal\\\\\\",\\\\\\"Time\\\\\\":0,\\\\\\"Count\\\\\\":10}\\",\\n    \\"CreateTime\\": \\"2022-01-01T10:00:00Z\\",\\n    \\"ModifiedTime\\": \\"2022-01-01T11:00:00Z\\\\n\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取自定义模板信息',
      'description' => '该接口可以根据TemplateId获取指定ID的模板信息；也可以获取默认模板信息。
当TemplateId非空时，忽略其他参数并获取指定TemplateId的模板信息；当TemplateId为空时会根据其他参数获取用户默认模板。此时Type必填。

模板类型（Type）：
1. 1：转码模板
2. 2：截图模板
3. 3：动图模板
4. 4：图片水印模板
5. 5：文字水印模板
6. 6：字幕模板
7. 7：AI智能审核
8. 8：AI智能封面
9. 9：AI智能擦除

转码模板子类型（Subtype）：
1. 1：普通转码模板（Normal）
2. 2：音频转码模板（AudioTranscode）
3. 3：转封装（Remux）
4. 4：窄带高清1.0（NarrowBandV1）
5. 5：窄带高清2.0（NarrowBandV2）

截图模板子类型（Subtype）：
1. 1：普通截图/静态截图（Normal）
2. 2：雪碧图（Sprite）
3. 3：WebVtt截图（WebVtt）

AI审核模板子类型（Subtype）：
1. 1：视频审核（Video） 
2. 2：音频审核（Audio）
3. 3：图片审核（Image）

AI智能擦除模板子类型（Subtype）：
1. 1：图标擦除（VideoDelogo）
2. 2：字幕擦除（VideoDetext）',
    ),
    'SetDefaultCustomTemplate' => 
    array (
      'summary' => '设置用户自定义点播媒体处理默认模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID',
            'type' => 'string',
            'required' => true,
            'example' => '****d80e4e4044975745c14b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '设置默认自定义模板',
    ),
    'UpdateCustomTemplate' => 
    array (
      'summary' => '修改媒体处理用户自定义模板信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID',
            'type' => 'string',
            'required' => true,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '模板名称',
            'type' => 'string',
            'required' => false,
            'example' => 'test-template',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板参数',
            'description' => '[模板参数](~~448291~~)',
            'type' => 'string',
            'required' => false,
            'example' => '{"param": "sample"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改用户自定义模板信息',
    ),
    'DeleteCustomTemplate' => 
    array (
      'summary' => '删除用户自定义模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '用户自定义模板ID',
            'type' => 'string',
            'required' => true,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除自定义模板',
    ),
    'ListSystemTemplates' => 
    array (
      'summary' => '获取媒体处理系统预置模板列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型。逗号分隔',
            'description' => '模板类型。逗号分隔',
            'type' => 'string',
            'required' => true,
            'example' => '1,2',
          ),
        ),
        1 => 
        array (
          'name' => 'Subtype',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板子类型ID',
            'description' => '模板子类型ID',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '模板名称',
            'type' => 'string',
            'required' => false,
            'example' => 'SampleTemplate',
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID',
            'type' => 'string',
            'required' => false,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板状态：Normal正常，Invisible不可见，ALL全部',
            'description' => '模板状态：Normal正常，Invisible不可见，ALL全部',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页数目',
            'description' => '分页数目',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小',
            'description' => '分页大小。默认值20。最大值100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Total' => 
              array (
                'title' => '模板总数',
                'description' => '模板总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'SystemTemplateList' => 
              array (
                'title' => '模板信息列表',
                'description' => '模板信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '系统预置模板',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TemplateId' => 
                    array (
                      'title' => '模板Id',
                      'description' => '模板Id',
                      'type' => 'string',
                      'example' => 'S00000001-000000',
                    ),
                    'TemplateName' => 
                    array (
                      'title' => '模板名称',
                      'description' => '模板名称',
                      'type' => 'string',
                      'example' => 'FLV-COPY',
                    ),
                    'Type' => 
                    array (
                      'title' => '模板类型ID',
                      'description' => '模板类型ID',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TypeName' => 
                    array (
                      'title' => '模板类型名称',
                      'description' => '模板类型名称',
                      'type' => 'string',
                      'example' => 'TranscodeTemplate',
                    ),
                    'Subtype' => 
                    array (
                      'title' => '模板子类型ID',
                      'description' => '模板子类型ID',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'SubtypeName' => 
                    array (
                      'title' => '模板子类型名称',
                      'description' => '模板子类型名称',
                      'type' => 'string',
                      'example' => 'Remux',
                    ),
                    'Status' => 
                    array (
                      'title' => '模板状态',
                      'description' => '模板状态',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'TemplateConfig' => 
                    array (
                      'title' => '模板参数',
                      'description' => '模板参数',
                      'type' => 'string',
                      'example' => '{"Container":{"Format":"flv"},"Video":{},"Audio":{}}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Total\\": 20,\\n  \\"SystemTemplateList\\": [\\n    {\\n      \\"TemplateId\\": \\"S00000001-000000\\",\\n      \\"TemplateName\\": \\"FLV-COPY\\",\\n      \\"Type\\": 1,\\n      \\"TypeName\\": \\"TranscodeTemplate\\",\\n      \\"Subtype\\": 1,\\n      \\"SubtypeName\\": \\"Remux\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"TemplateConfig\\": \\"{\\\\\\"Container\\\\\\":{\\\\\\"Format\\\\\\":\\\\\\"flv\\\\\\"},\\\\\\"Video\\\\\\":{},\\\\\\"Audio\\\\\\":{}}\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取系统模板列表',
      'description' => '模板类型（Type）：
1. 1：转码模板
2. 2：截图模板
3. 3：动图模板
4. 4：图片水印模板
5. 5：文字水印模板
6. 6：字幕模板
7. 7：AI智能审核
8. 8：AI智能封面
9. 9：AI智能擦除

转码模板子类型（Subtype）：
1. 1：普通转码模板（Normal）
2. 2：音频转码模板（AudioTranscode）
3. 3：转封装（Remux）
4. 4：窄带高清1.0（NarrowBandV1）
5. 5：窄带高清2.0（NarrowBandV2）

截图模板子类型（Subtype）：
1. 1：普通截图/静态截图（Normal）
2. 2：雪碧图（Sprite）
3. 3：WebVtt截图（WebVtt）

AI审核模板子类型（Subtype）：
1. 1：视频审核（Video） 
2. 2：音频审核（Audio）
3. 3：图片审核（Image）

AI智能擦除模板子类型（Subtype）：
1. 1：图标擦除（VideoDelogo）
2. 2：字幕擦除（VideoDetext）',
    ),
    'ListCustomTemplates' => 
    array (
      'summary' => '获取用户自定义点播媒体处理模板列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型。逗号分隔',
            'description' => '模板类型。
- 1：转码模板
- 2：截图模板
- 3：动图模板
- 4：图片水印模板
- 5：文字水印模板
- 6：字幕模板
- 7：AI 智能审核
- 8：AI 智能封面
- 9：AI 智能擦除',
            'type' => 'string',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Subtype',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板子类型ID',
            'description' => '模板子类型ID。
- 转码模板子类型：
    - 1：普通转码模板（Normal）
    - 2：音频转码模板（AudioTranscode）
    - 3：转封装（Remux）
    - 4：窄带高清 1.0（NarrowBandV1）
    - 5：窄带高清 2.0（NarrowBandV2）
- 截图模板子类型（Subtype）：
    - 1：普通截图/静态截图（Normal）
    - 2：雪碧图（Sprite）
    - 3：WebVtt 截图（WebVtt）
- AI 审核模板子类型（Subtype）：
    - 1：视频审核（Video）
    - 2：音频审核（Audio）
    - 3：图片审核（Image）
- AI 智能擦除模板子类型（Subtype）：
    - 1：图标擦除（VideoDelogo）
    - 2：字幕擦除（VideoDetext）',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-template',
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID。',
            'type' => 'string',
            'required' => false,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页数目',
            'description' => '分页数目。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小',
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序顺序：CreateTimeDesc 和 CreateTimeAsc',
            'description' => '排序顺序。取值：
- CreateTimeDesc(按照创建时间逆序排列)
- CreateTimeAsc(按照创建时间顺序排列)',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'CreateTimeDesc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Total' => 
              array (
                'title' => '模板总数',
                'description' => '模板总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'CustomTemplateList' => 
              array (
                'title' => '模板信息列表',
                'description' => '模板信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '自定义模板信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TemplateId' => 
                    array (
                      'title' => '模板Id',
                      'description' => '模板ID。',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'TemplateName' => 
                    array (
                      'title' => '模板名称',
                      'description' => '模板名称。',
                      'type' => 'string',
                      'example' => 'test-template',
                    ),
                    'Type' => 
                    array (
                      'title' => '模板类型ID',
                      'description' => '模板类型ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TypeName' => 
                    array (
                      'title' => '模板类型名称',
                      'description' => '模板类型名称。',
                      'type' => 'string',
                      'example' => 'TranscodeTemplate',
                    ),
                    'Subtype' => 
                    array (
                      'title' => '模板子类型ID',
                      'description' => '模板子类型ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'SubtypeName' => 
                    array (
                      'title' => '模板子类型名称',
                      'description' => '模板子类型名称。',
                      'type' => 'string',
                      'example' => 'AudioTranscode',
                    ),
                    'Status' => 
                    array (
                      'title' => '模板状态',
                      'description' => '模板状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Normal' => 'Normal',
                      ),
                      'example' => 'Normal',
                    ),
                    'IsDefault' => 
                    array (
                      'title' => '是否默认模板',
                      'description' => '是否默认模板。',
                      'type' => 'boolean',
                      'enumValueTitles' => 
                      array (
                        'true' => 'true',
                        'false' => 'false',
                      ),
                      'example' => 'true',
                    ),
                    'TemplateConfig' => 
                    array (
                      'title' => '模板参数',
                      'description' => '模板参数。',
                      'type' => 'string',
                      'example' => '{"Container":{"Format":"mp3"},"Audio":{"Codec":"mp3","Bitrate":"64","Samplerate":"22050","Channels":"2"}}',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '模板创建时间',
                      'description' => '模板创建时间。',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'title' => '模板修改时间',
                      'description' => '模板修改时间。',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Total\\": 20,\\n  \\"CustomTemplateList\\": [\\n    {\\n      \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"TemplateName\\": \\"test-template\\",\\n      \\"Type\\": 1,\\n      \\"TypeName\\": \\"TranscodeTemplate\\",\\n      \\"Subtype\\": 2,\\n      \\"SubtypeName\\": \\"AudioTranscode\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"IsDefault\\": true,\\n      \\"TemplateConfig\\": \\"{\\\\\\"Container\\\\\\":{\\\\\\"Format\\\\\\":\\\\\\"mp3\\\\\\"},\\\\\\"Audio\\\\\\":{\\\\\\"Codec\\\\\\":\\\\\\"mp3\\\\\\",\\\\\\"Bitrate\\\\\\":\\\\\\"64\\\\\\",\\\\\\"Samplerate\\\\\\":\\\\\\"22050\\\\\\",\\\\\\"Channels\\\\\\":\\\\\\"2\\\\\\"}}\\",\\n      \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n      \\"ModifiedTime\\": \\"2022-07-12T16:17:54Z\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取自定义模板列表',
    ),
    'CreatePipeline' => 
    array (
      'summary' => '创建管道。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道名称',
            'description' => '管道名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test-pipeline',
          ),
        ),
        1 => 
        array (
          'name' => 'Speed',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道类型。',
            'description' => '管道类型。取值：
1. Standard：标准管道
2. Boost：倍速转码管道
3. NarrowBandHDV2：窄带高清2.0管道',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'Boost' => '倍速转码管道',
              'Standard' => '标准管道',
              'NarrowBandHDV2' => '窄带高清2.0管道',
            ),
            'example' => 'Standard',
          ),
        ),
        2 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '优先级，1-10，默认6。数值越大，优先级越高',
            'description' => '优先级，1-10，默认6。数值越大，优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Pipeline' => 
              array (
                'title' => '管道信息',
                'description' => '管道信息',
                'type' => 'object',
                'properties' => 
                array (
                  'PipelineId' => 
                  array (
                    'title' => '管道Id',
                    'description' => '管道ID',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'Name' => 
                  array (
                    'title' => '管道名称',
                    'description' => '管道名称',
                    'type' => 'string',
                    'example' => 'test-pipeline',
                  ),
                  'Speed' => 
                  array (
                    'title' => '管道类型',
                    'description' => '管道类型',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Boost' => '倍速转码管道',
                      'Standard' => '标准管道',
                      'NarrowBandHDV2' => '窄带高清2.0管道',
                    ),
                    'example' => 'Standard',
                  ),
                  'Priority' => 
                  array (
                    'title' => '管道优先级',
                    'description' => '管道优先级',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'Status' => 
                  array (
                    'title' => '管道状态',
                    'description' => '管道状态',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Active' => '正常',
                      'Paused' => '停用',
                    ),
                    'example' => 'Active',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '模板创建时间',
                    'description' => '模板创建时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '模板修改时间',
                    'description' => '模板修改时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Pipeline\\": {\\n    \\"PipelineId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"Name\\": \\"test-pipeline\\",\\n    \\"Speed\\": \\"Standard\\",\\n    \\"Priority\\": 6,\\n    \\"Status\\": \\"Active\\",\\n    \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n    \\"ModifiedTime\\": \\"2022-07-12T16:17:54Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建管道',
    ),
    'GetPipeline' => 
    array (
      'summary' => '获取用户管道详细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道ID',
            'description' => '管道ID',
            'type' => 'string',
            'required' => true,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Pipeline' => 
              array (
                'title' => '管道信息',
                'description' => '管道信息',
                'type' => 'object',
                'properties' => 
                array (
                  'PipelineId' => 
                  array (
                    'title' => '管道Id',
                    'description' => '管道ID',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'Name' => 
                  array (
                    'title' => '管道名称',
                    'description' => '管道名称',
                    'type' => 'string',
                    'example' => 'test-pipeline',
                  ),
                  'Speed' => 
                  array (
                    'title' => '管道类型',
                    'description' => '管道类型',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Speed' => '标准管道',
                      'Boost' => '倍速转码管道',
                      'NarrowBandHDV2' => '窄带高清2.0管道',
                    ),
                    'example' => 'Standard',
                  ),
                  'Priority' => 
                  array (
                    'title' => '管道优先级',
                    'description' => '管道优先级。取值范围为1-10。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'Status' => 
                  array (
                    'title' => '管道状态',
                    'description' => '管道状态',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Active' => '正常',
                      'Paused' => '停用',
                    ),
                    'example' => 'Active',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '模板创建时间',
                    'description' => '模板创建时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '模板修改时间',
                    'description' => '模板修改时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Pipeline\\": {\\n    \\"PipelineId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"Name\\": \\"test-pipeline\\",\\n    \\"Speed\\": \\"Standard\\",\\n    \\"Priority\\": 6,\\n    \\"Status\\": \\"Active\\",\\n    \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n    \\"ModifiedTime\\": \\"2022-07-12T16:17:54Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取管道详细信息',
    ),
    'UpdatePipeline' => 
    array (
      'summary' => '更新用户管道信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道ID',
            'description' => '管道ID',
            'type' => 'string',
            'required' => true,
            'example' => '****d80e4e4044975745c14b****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道名称',
            'description' => '管道名称',
            'type' => 'string',
            'required' => false,
            'example' => 'test-pipeline',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道状态。',
            'description' => '管道状态。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Active' => '正常',
              'Paused' => '停用',
            ),
            'example' => 'Paused',
          ),
        ),
        3 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '优先级',
            'description' => '优先级。取值范围：1-10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新管道信息',
    ),
    'DeletePipeline' => 
    array (
      'summary' => '删除用户管道信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道ID',
            'description' => '管道ID',
            'type' => 'string',
            'required' => true,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除用户管道',
    ),
    'ListPipelines' => 
    array (
      'summary' => '获取用户管道列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Speed',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '管道类型。',
            'description' => '管道类型。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Boost' => '倍速转码管道',
              'Standard' => '标准管道',
              'NarrowBandHDV2' => '窄带高清2.0管道',
            ),
            'example' => 'Standard',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'PipelineList' => 
              array (
                'description' => '管道列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '管道详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PipelineId' => 
                    array (
                      'title' => '管道Id',
                      'description' => '管道ID',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'Name' => 
                    array (
                      'title' => '管道名称',
                      'description' => '管道名称',
                      'type' => 'string',
                      'example' => 'test-pipeline',
                    ),
                    'Speed' => 
                    array (
                      'title' => '管道类型',
                      'description' => '管道类型',
                      'type' => 'string',
                      'example' => 'Standard',
                    ),
                    'Priority' => 
                    array (
                      'title' => '管道优先级',
                      'description' => '管道优先级',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '6',
                    ),
                    'Status' => 
                    array (
                      'title' => '管道状态',
                      'description' => '管道状态',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Active' => '正常',
                        'Paused' => '停用',
                      ),
                      'example' => 'Active',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '模板创建时间',
                      'description' => '模板创建时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'title' => '模板修改时间',
                      'description' => '模板修改时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"PipelineList\\": [\\n    {\\n      \\"PipelineId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"Name\\": \\"test-pipeline\\",\\n      \\"Speed\\": \\"Standard\\",\\n      \\"Priority\\": 6,\\n      \\"Status\\": \\"Active\\",\\n      \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n      \\"ModifiedTime\\": \\"2022-07-12T16:17:54Z\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取管道列表',
    ),
    'SubmitTranscodeJob' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务名字。',
            'description' => '任务名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'job-name',
          ),
        ),
        1 => 
        array (
          'name' => 'InputGroup',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '任务输入组 (目前只支持一个)。',
            'description' => '任务输入组。单个输入为转码任务。多个输入为音视频合流任务。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '任务输入。',
              'type' => 'object',
              'properties' => 
              array (
                'Type' => 
                array (
                  'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                  'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'OSS',
                ),
                'Media' => 
                array (
                  'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                  'description' => '媒体值：
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议。
> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。

- type 为 Media 时，为媒资 ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'oss://bucket/path/to/video.mp4',
                ),
                'InputUrl' => 
                array (
                  'title' => '输入流路径：       仅当 type 为 Media 是才生效，让用户可以选择该媒资下的特定文件作为输入。       - 系统会检查该媒资下是否存在这个 inputUrl。',
                  'description' => '输入流路径：
- 仅当 type 为 Media 是才生效，让用户可以选择该媒资下的特定文件作为输入。 
 - 系统会检查该媒资下是否存在这个 inputUrl。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'oss://bucket/path/to/video.mp4',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
            'example' => 'job-name',
          ),
        ),
        2 => 
        array (
          'name' => 'OutputGroup',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '任务输出组。',
            'description' => '任务输出组。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '任务输出。',
              'type' => 'object',
              'properties' => 
              array (
                'Output' => 
                array (
                  'title' => '输出媒体配置',
                  'description' => '输出媒体配置。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                      'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'OSS',
                    ),
                    'Media' => 
                    array (
                      'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                      'description' => '媒体值：
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议。
> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。

- type 为 Media 时，为媒资 ID。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'oss://bucket/path/to/video.mp4',
                    ),
                    'OutputUrl' => 
                    array (
                      'title' => '输入流路径：       仅当 Type 为 Media时才生效，让用户可以选择该媒资下特定文件作为输出。       支持的占位符：       - {MediaId}：媒资ID。       - {JobId}：转码子任务ID。       - {ExtName}：文件后缀，取转码模板的输出格式。       - {DestMd5}：转码输出文件的MD5值。  说明：       1、该参数必须包含{MediaId} 和 {JobId} 两个占位符。       2、输出的Bucket与MediaId所在Bucket相同。',
                      'description' => '输出流路径：    
      仅当 Type 为 Media时才生效，让用户可以选择该媒资下特定文件作为输出。    
      支持的占位符：
- {MediaId}：媒资ID。
- {JobId}：转码子任务ID。
- {MediaBucket}：媒资ID所在的Bucket。
- {ExtName}：文件后缀，取转码模板的输出格式。
- {DestMd5}：转码输出文件的MD5值。    
 说明：    
1. 该参数必须包含{MediaId} 和 {JobId} 两个占位符。
2. 输出的Bucket与MediaId所在Bucket相同。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'oss://bucket/path/to/{MediaId}/{JobId}.mp4',
                    ),
                  ),
                  'required' => true,
                ),
                'ProcessConfig' => 
                array (
                  'title' => '任务处理配置',
                  'description' => '任务处理配置。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Transcode' => 
                    array (
                      'title' => '转码配置',
                      'description' => '转码配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TemplateId' => 
                        array (
                          'title' => '模板 ID。',
                          'description' => '模板 ID。',
                          'type' => 'string',
                          'required' => true,
                          'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                        ),
                        'OverwriteParams' => 
                        array (
                          'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                          'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Video' => 
                            array (
                              'title' => 'video 设置',
                              'description' => 'video 设置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Codec' => 
                                array (
                                  'title' => '编码格式',
                                  'description' => '编码格式。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'H.264',
                                ),
                                'Profile' => 
                                array (
                                  'title' => '编码级别。
         支持baseline、main、high。
         baseline：针对移动设备。
         main：针对标准分辨率设备。
         high：针对高分辨率设备。
         默认值：high。',
                                  'description' => '编码级别。
         支持baseline、main、high。
- baseline：针对移动设备。
- main：针对标准分辨率设备。
- high：针对高分辨率设备。
         
默认值：high。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'Main',
                                ),
                                'Bitrate' => 
                                array (
                                  'title' => '视频平均码率。
         取值范围：[10，50000]。
         单位：Kbps。',
                                  'description' => '视频平均码率，取值范围：[10,50000]，单位：Kbps。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '3000',
                                ),
                                'Crf' => 
                                array (
                                  'title' => '码率-质量控制因子。
         取值范围：[0，51]。
         默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
         如果设置了Crf，则Bitrate的设置失效。',
                                  'description' => '码率-质量控制因子，取值范围：[0,51]。默认值：编码格式为H264，默认值为23；编码格式为H265，默认值为26。
> 如果设置了Crf，则Bitrate的设置失效。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '23',
                                ),
                                'Width' => 
                                array (
                                  'title' => '宽。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始宽度。',
                                  'description' => '宽，取值范围：[128,4096]，单位：px，默认值：视频原始宽度。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '1920',
                                ),
                                'Height' => 
                                array (
                                  'title' => '高。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始高度。',
                                  'description' => '高，取值范围：[128,4096]，单位：px，默认值：视频原始高度。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '1080',
                                ),
                                'Fps' => 
                                array (
                                  'title' => '帧率。
         取值范围：(0,60]。
         当输入文件帧率超过60时取60。
         默认值：取输入文件帧率',
                                  'description' => '帧率，取值范围：(0,60]，默认值：取输入文件帧率。
> 当输入文件帧率超过60时取60。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '25',
                                ),
                                'Gop' => 
                                array (
                                  'title' => '关键帧间最大帧数。
         取值范围：[1，1080000]。
         默认值：250。',
                                  'description' => '关键帧间最大帧数，取值范围：[1,1080000]，默认值：250。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '250',
                                ),
                                'Preset' => 
                                array (
                                  'title' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                  'description' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'medium',
                                ),
                                'ScanMode' => 
                                array (
                                  'title' => '扫描模式。
支持interlaced、progressive。',
                                  'description' => '扫描模式。
支持interlaced、progressive。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'progressive',
                                ),
                                'PixFmt' => 
                                array (
                                  'title' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                  'description' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'yuv420p',
                                ),
                                'Remove' => 
                                array (
                                  'title' => '是否去掉视频',
                                  'description' => '是否去掉视频。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'false',
                                ),
                                'Crop' => 
                                array (
                                  'title' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                  'description' => '视频画面裁切支持2种方式。               
- 自动检测黑边并裁切，设置为“border”
- 自定义裁切，参数格式：width:height:left:top，示例：1280:800:0:140',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '1280:800:0:140',
                                ),
                                'Pad' => 
                                array (
                                  'title' => '视频贴黑边
         参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                  'description' => '视频贴黑边参数，格式：width:height:left:top，示例：1280:800:0:140',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '1280:800:0:140',
                                ),
                                'LongShortMode' => 
                                array (
                                  'title' => '是否开启横竖屏自适应（即：长短边模式）',
                                  'description' => '是否开启横竖屏自适应（即：长短边模式）',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'false',
                                ),
                                'Bufsize' => 
                                array (
                                  'title' => '缓冲区大小
          值范围：[1000，128000]
          默认值：6000
          单位：Kb',
                                  'description' => '缓冲区大小值，范围：[1000,128000]，默认值：6000，单位：Kb。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '6000',
                                ),
                                'Maxrate' => 
                                array (
                                  'title' => '视频码率峰值
         值范围[10，50000]，单位Kbps。',
                                  'description' => '视频码率峰值范围[10，50000]，单位Kbps。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '9000',
                                ),
                                'AbrMax' => 
                                array (
                                  'title' => 'abr 最大码率(只有窄高1有效)
值范围[10，50000]，单位Kbps。',
                                  'description' => 'abr 最大码率（只有窄高1有效）值范围[10，50000]，单位Kbps。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '6000',
                                ),
                              ),
                              'required' => false,
                            ),
                            'Audio' => 
                            array (
                              'title' => 'audio 设置',
                              'description' => 'audio 设置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Codec' => 
                                array (
                                  'title' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                  'description' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'AAC',
                                ),
                                'Profile' => 
                                array (
                                  'title' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                  'description' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'aac_low',
                                ),
                                'Samplerate' => 
                                array (
                                  'title' => '采样率。
         默认值：44100
         支持22050、32000、44100、48000、96000，
         单位：Hz',
                                  'description' => '采样率，默认值：44100，支持22050、32000、44100、48000、96000，单位：Hz。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '44100',
                                ),
                                'Bitrate' => 
                                array (
                                  'title' => '输出文件的音频码率。
         值范围：[8，1000]
         单位：Kbps
         默认值：128',
                                  'description' => '输出文件的音频码率，值范围：[8,1000]，单位：Kbps，默认值：128。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '128',
                                ),
                                'Channels' => 
                                array (
                                  'title' => '声道数。
         默认值：2',
                                  'description' => '声道数。
         默认值：2',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '2',
                                ),
                                'Remove' => 
                                array (
                                  'title' => '是否删除音频流。',
                                  'description' => '是否删除音频流。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'false',
                                ),
                                'Volume' => 
                                array (
                                  'title' => '音量控制',
                                  'description' => '音量控制。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Method' => 
                                    array (
                                      'title' => '音量调整方式',
                                      'description' => '音量调整方式。',
                                      'type' => 'string',
                                      'required' => false,
                                      'example' => 'auto',
                                    ),
                                    'IntegratedLoudnessTarget' => 
                                    array (
                                      'title' => '目标音量',
                                      'description' => '目标音量。',
                                      'type' => 'string',
                                      'required' => false,
                                      'example' => '-6',
                                    ),
                                    'TruePeak' => 
                                    array (
                                      'title' => '最大峰值',
                                      'description' => '最大峰值。',
                                      'type' => 'string',
                                      'required' => false,
                                      'example' => '-1',
                                    ),
                                    'LoudnessRangeTarget' => 
                                    array (
                                      'title' => '音量范围',
                                      'description' => '音量范围。',
                                      'type' => 'string',
                                      'required' => false,
                                      'example' => '8',
                                    ),
                                  ),
                                  'required' => false,
                                ),
                              ),
                              'required' => false,
                            ),
                            'Container' => 
                            array (
                              'title' => '封装格式设置',
                              'description' => '封装格式设置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Format' => 
                                array (
                                  'title' => '容器格式',
                                  'description' => '容器格式。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'mp4',
                                ),
                              ),
                              'required' => false,
                            ),
                            'MuxConfig' => 
                            array (
                              'title' => '封装设置',
                              'description' => '封装设置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Segment' => 
                                array (
                                  'title' => '切片设置',
                                  'description' => '切片设置。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Duration' => 
                                    array (
                                      'title' => '切片时长',
                                      'description' => '切片时长。',
                                      'type' => 'string',
                                      'required' => false,
                                      'example' => '10',
                                    ),
                                    'ForceSegTime' => 
                                    array (
                                      'title' => '强制切片时间点',
                                      'description' => '强制切片时间点。',
                                      'type' => 'string',
                                      'required' => false,
                                      'example' => '2,3',
                                    ),
                                  ),
                                  'required' => false,
                                ),
                              ),
                              'required' => false,
                            ),
                            'TransConfig' => 
                            array (
                              'description' => '条件转码参数。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'TransMode' => 
                                array (
                                  'description' => '视频转码模式。取值如下：

- onepass：一般用于ABR。编码速度较twopass更快。

- twopass：一般用于VBR。编码速度较onepass更慢。

- CBR：固定码率模式。

默认值：onepass。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'onepass',
                                ),
                                'IsCheckReso' => 
                                array (
                                  'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，IsCheckResoFail优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，按输入视频分辨率转码。

- false：不检查。

默认值：false。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'true',
                                ),
                                'IsCheckResoFail' => 
                                array (
                                  'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'true',
                                ),
                                'IsCheckVideoBitrate' => 
                                array (
                                  'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，IsCheckVideoBitrateFail优先级更高。

- true：检查。当输入视频码率小于输出设置时，按输入视频码率转码。

- false：不检查。

默认值：false。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'true',
                                ),
                                'IsCheckVideoBitrateFail' => 
                                array (
                                  'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'true',
                                ),
                                'IsCheckAudioBitrate' => 
                                array (
                                  'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，IsCheckAudioBitrateFail优先级更高。

- true：检查。当输入音频码率小于输出设置时，按输入音频码率转码。

- false：不检查。

默认值：

- 参数为空，并且codec和输入源不一样：false。

- 参数为空，并且codec和输入源一样：true。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'true',
                                ),
                                'IsCheckAudioBitrateFail' => 
                                array (
                                  'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入音频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'true',
                                ),
                                'AdjDarMethod' => 
                                array (
                                  'description' => '分辨率改写方式。当Width或Height都填写时才生效，可以和LongShortMode搭配使用。

可选值：rescale、crop、pad、none。

默认值：none。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'none',
                                ),
                              ),
                              'required' => false,
                            ),
                          ),
                          'required' => false,
                        ),
                      ),
                      'required' => true,
                    ),
                    'ImageWatermarks' => 
                    array (
                      'title' => '图片水印配置',
                      'description' => '图片水印配置。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '图片水印配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TemplateId' => 
                          array (
                            'title' => '模板 ID。',
                            'description' => '模板 ID。',
                            'type' => 'string',
                            'required' => true,
                            'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                          ),
                          'OverwriteParams' => 
                          array (
                            'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                            'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Width' => 
                              array (
                                'title' => '输出视频上水印图片宽。
值有两种形式：

- 整数型代水印图片宽的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                'description' => '输出视频上水印图片宽。
值有两种形式：

- 整数型代水印图片宽的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                'type' => 'string',
                                'required' => false,
                                'example' => '32',
                              ),
                              'Height' => 
                              array (
                                'title' => '输出视频上水印图片高。
值有两种形式：

- 整数型代水印图片高的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                'description' => '输出视频上水印图片高。
值有两种形式：

- 整数型代水印图片高的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                'type' => 'string',
                                'required' => false,
                                'example' => '32',
                              ),
                              'Dx' => 
                              array (
                                'title' => '水印图片相对输出视频的水平偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围：[8，4096]
  - 单位：px
- 小数型代表水平偏移量与输出分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                'description' => '水印图片相对输出视频的水平偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围：[8，4096]
  - 单位：px
- 小数型代表水平偏移量与输出分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                'type' => 'string',
                                'required' => false,
                                'example' => '10',
                              ),
                              'Dy' => 
                              array (
                                'title' => '水印图片相对输出视频的垂直偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围[8，4096]
  - 单位：px
- 小数型代表垂直偏移量与输出分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                'description' => '水印图片相对输出视频的垂直偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围[8，4096]
  - 单位：px
- 小数型代表垂直偏移量与输出分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                'type' => 'string',
                                'required' => false,
                                'example' => '10',
                              ),
                              'ReferPos' => 
                              array (
                                'title' => '水印的位置。
- 可取值：TopRight（右上）、TopLeft（左上）、BottomRight（右下）、BottomLeft（左下）
- 默认值：TopRight',
                                'description' => '水印的位置。
- 可取值：TopRight（右上）、TopLeft（左上）、BottomRight（右下）、BottomLeft（左下）
- 默认值：TopRight',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'TopLeft',
                              ),
                              'Timeline' => 
                              array (
                                'title' => '动态水印，显示时间设置。',
                                'description' => '动态水印，显示时间设置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Start' => 
                                  array (
                                    'title' => '水印开始出现时间。
- 单位：秒
- 取值范围：数字
- 默认值：0',
                                    'description' => '水印开始出现时间。
- 单位：秒
- 取值范围：数字
- 默认值：0',
                                    'type' => 'string',
                                    'required' => false,
                                    'example' => '00:00:05',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '水印持续时间。
- 取值范围：[数字，ToEND]
- 默认值：ToEND',
                                    'description' => '水印持续时间。
- 取值范围：[数字，ToEND]
- 默认值：ToEND',
                                    'type' => 'string',
                                    'required' => false,
                                    'example' => 'ToEND',
                                  ),
                                ),
                                'required' => false,
                              ),
                              'File' => 
                              array (
                                'title' => '水印图片文件。',
                                'description' => '水印图片文件。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Type' => 
                                  array (
                                    'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                    'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                    'type' => 'string',
                                    'required' => false,
                                    'example' => 'OSS',
                                  ),
                                  'Media' => 
                                  array (
                                    'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                    'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                    'type' => 'string',
                                    'required' => false,
                                    'example' => 'oss://bucket/path/to/video.mp4',
                                  ),
                                ),
                                'required' => false,
                              ),
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                    'TextWatermarks' => 
                    array (
                      'title' => '文字水印配置',
                      'description' => '文字水印配置。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '文字水印配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TemplateId' => 
                          array (
                            'title' => '模板 ID。',
                            'description' => '模板 ID。',
                            'type' => 'string',
                            'required' => true,
                            'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                          ),
                          'OverwriteParams' => 
                          array (
                            'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                            'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Content' => 
                              array (
                                'title' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                'description' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                'type' => 'string',
                                'required' => false,
                                'example' => '测试水印',
                              ),
                              'FontName' => 
                              array (
                                'title' => '字体。默认：SimSun。',
                                'description' => '字体。默认：SimSun。',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'SimSun',
                              ),
                              'FontColor' => 
                              array (
                                'title' => '颜色。',
                                'description' => '颜色。',
                                'type' => 'string',
                                'required' => false,
                                'example' => '#006400',
                              ),
                              'FontAlpha' => 
                              array (
                                'title' => '字体透明度。
- 范围：(0, 1]
- 默认：1.0',
                                'description' => '字体透明度。
- 范围：(0, 1]
- 默认：1.0',
                                'type' => 'string',
                                'required' => false,
                                'example' => '1.0',
                              ),
                              'Top' => 
                              array (
                                'title' => '文本上边距。
- 默认：0
- 范围：[0,4096]
',
                                'description' => '文本上边距。
- 默认：0
- 范围：[0,4096]
',
                                'type' => 'string',
                                'required' => false,
                                'example' => '10',
                              ),
                              'Left' => 
                              array (
                                'title' => '文本左边距。
- 默认：0
- 范围：[0,4096]',
                                'description' => '文本左边距。
- 默认：0
- 范围：[0,4096]',
                                'type' => 'string',
                                'required' => false,
                                'example' => '10',
                              ),
                              'FontSize' => 
                              array (
                                'title' => '字体大小。
- 默认值：16
- 范围：(4, 120)',
                                'description' => '字体大小。
- 默认值：16
- 范围：(4, 120)',
                                'type' => 'integer',
                                'format' => 'int32',
                                'required' => false,
                                'example' => '16',
                              ),
                              'BorderWidth' => 
                              array (
                                'title' => '描边宽度。
- 默认：0
- 范围：(0,4096]',
                                'description' => '描边宽度。
- 默认：0
- 范围：(0,4096]',
                                'type' => 'integer',
                                'format' => 'int32',
                                'required' => false,
                                'example' => '0',
                              ),
                              'BorderColor' => 
                              array (
                                'title' => '描边颜色。
默认：Black
更多取值请参见BorderColor。',
                                'description' => '描边颜色。
默认：Black
更多取值请参见BorderColor。',
                                'type' => 'string',
                                'required' => false,
                                'example' => '#006400',
                              ),
                              'Adaptive' => 
                              array (
                                'title' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                'description' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'false',
                              ),
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                    'Subtitles' => 
                    array (
                      'title' => '字幕压制配置',
                      'description' => '字幕压制配置。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '字幕压制配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TemplateId' => 
                          array (
                            'title' => '模板 ID。',
                            'description' => '模板 ID。',
                            'type' => 'string',
                            'required' => true,
                            'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                          ),
                          'OverwriteParams' => 
                          array (
                            'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                            'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Format' => 
                              array (
                                'title' => '字幕文件格式。',
                                'description' => '字幕文件格式。',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'vtt',
                              ),
                              'CharEnc' => 
                              array (
                                'title' => '文件 encoding 格式。',
                                'description' => '文件 encoding 格式。',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'UTF-8',
                              ),
                              'File' => 
                              array (
                                'title' => '字幕文件。',
                                'description' => '字幕文件。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Type' => 
                                  array (
                                    'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                    'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                    'type' => 'string',
                                    'required' => false,
                                    'example' => 'OSS',
                                  ),
                                  'Media' => 
                                  array (
                                    'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                    'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                    'type' => 'string',
                                    'required' => false,
                                    'example' => 'oss://bucket/path/to/video.mp4',
                                  ),
                                ),
                                'required' => false,
                              ),
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                    'Encryption' => 
                    array (
                      'title' => '加密配置。',
                      'description' => '加密配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EncryptType' => 
                        array (
                          'title' => '加密类型。',
                          'description' => '加密类型。取值：
- PrivateEncryption：阿里云私有加密。
- HLSEncryption：HLS标准加密。',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'PrivateEncryption',
                        ),
                        'CipherText' => 
                        array (
                          'title' => '标准加密的密钥密文。',
                          'description' => '标准加密的密钥密文。',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'MTYi00NDU0LTg5O****',
                        ),
                        'DecryptKeyUri' => 
                        array (
                          'title' => '标准加密的解密服务地址。',
                          'description' => '标准加密的解密服务地址。',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'https://sample.com/path?CipherText=MTYi00NDU0LTg5O****',
                        ),
                        'KeyServiceType' => 
                        array (
                          'title' => '密钥服务类型。目前仅支持KMS和Base64',
                          'description' => '标准加密的密钥服务类型。取值：

- KMS

- Base64',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'KMS',
                        ),
                      ),
                      'required' => false,
                    ),
                    'CombineConfigs' => 
                    array (
                      'title' => '多输入合流配置',
                      'description' => '多输入合流配置',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '合流配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'AudioIndex' => 
                          array (
                            'title' => '音频流Index',
                            'description' => '音频流Index',
                            'type' => 'string',
                            'required' => true,
                            'example' => '0 或 exclude',
                          ),
                          'VideoIndex' => 
                          array (
                            'title' => '视频流Index',
                            'description' => '视频流Index',
                            'type' => 'string',
                            'required' => true,
                            'example' => '0 或 exclude',
                          ),
                          'Start' => 
                          array (
                            'title' => '输入流的开始时间。 默认为0',
                            'description' => '输入流的开始时间。 默认为0',
                            'type' => 'number',
                            'format' => 'double',
                            'required' => false,
                            'example' => '0.0',
                          ),
                          'Duration' => 
                          array (
                            'title' => '输入流的持续时间。 默认为视频时长。',
                            'description' => '输入流的持续时间。 默认为视频时长。',
                            'type' => 'number',
                            'format' => 'double',
                            'required' => false,
                            'example' => '20.0',
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                  ),
                  'required' => true,
                ),
              ),
              'required' => true,
            ),
            'required' => true,
            'example' => 'user-data',
          ),
        ),
        3 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户数据。',
            'description' => '自定义设置，JSON格式，长度限制为512字节，支持[自定义回调地址配置](~~451631~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'user-data',
          ),
        ),
        4 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '任务调度信息。',
            'description' => '任务调度信息。',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'title' => '管道 ID。',
                'description' => '管道 ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'e37ebee5d98b4781897f6086e89f9c56',
              ),
              'Priority' => 
              array (
                'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '5',
              ),
            ),
            'required' => false,
            'example' => 'job-name',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等性校验Key。',
            'description' => '幂等性校验Key。保证请求幂等性。',
            'type' => 'string',
            'required' => false,
            'example' => '****12e8864746a0a398****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'TranscodeParentJob' => 
              array (
                'title' => 'TranscodeParentJobWithSubJobDTO',
                'description' => 'TranscodeParentJobWithSubJobDTO',
                'type' => 'object',
                'properties' => 
                array (
                  'TranscodeJobList' => 
                  array (
                    'title' => '子任务列表',
                    'description' => '子任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '子任务详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'title' => '任务创建时间',
                          'description' => '任务创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-12T08:49:41Z',
                        ),
                        'Name' => 
                        array (
                          'title' => '任务名',
                          'description' => '任务名。',
                          'type' => 'string',
                          'example' => 'transcode-job',
                        ),
                        'ParentJobId' => 
                        array (
                          'title' => '主任务 ID',
                          'description' => '主任务 ID',
                          'type' => 'string',
                          'example' => '8b2198504dd340b7b3c9842a74fc9baa',
                        ),
                        'JobId' => 
                        array (
                          'title' => '子任务 ID',
                          'description' => '子任务 ID',
                          'type' => 'string',
                          'example' => '7d6a7e0d4db2457a8d45ff5d43e1bf0a',
                        ),
                        'JobIndex' => 
                        array (
                          'title' => '子任务在整个任务中的索引号',
                          'description' => '子任务在整个任务中的索引号。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'InputGroup' => 
                        array (
                          'title' => '任务输入组 (目前只支持单个输入)',
                          'description' => '任务输入组。单个输入为转码任务。多个输入为音视频合流任务。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '作业输入。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Type' => 
                              array (
                                'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                'type' => 'string',
                                'example' => 'OSS',
                              ),
                              'Media' => 
                              array (
                                'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                'type' => 'string',
                                'example' => 'oss://bucket/path/to/video.mp4',
                              ),
                              'InputUrl' => 
                              array (
                                'description' => '输入流路径：

- 仅当 type 为 Media 是才生效，让用户可以选择该媒资下的特定文件作为输入。
- 系统会检查该媒资下是否存在这个 inputUrl。',
                                'type' => 'string',
                                'example' => 'oss://bucket/path/to/video.mp4
',
                              ),
                            ),
                          ),
                        ),
                        'ProcessConfig' => 
                        array (
                          'title' => '转码处理配置',
                          'description' => '转码处理配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Transcode' => 
                            array (
                              'title' => '转码配置',
                              'description' => '转码配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'TemplateId' => 
                                array (
                                  'title' => '模板 ID。',
                                  'description' => '模板 ID。',
                                  'type' => 'string',
                                  'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                ),
                                'OverwriteParams' => 
                                array (
                                  'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                  'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Video' => 
                                    array (
                                      'title' => 'video 设置',
                                      'description' => 'video 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '编码格式',
                                          'description' => '编码格式。',
                                          'type' => 'string',
                                          'example' => 'H.264',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '编码级别。
         支持baseline、main、high。
         baseline：针对移动设备。
         main：针对标准分辨率设备。
         high：针对高分辨率设备。
         默认值：high。',
                                          'description' => '编码级别。
支持baseline、main、high。
- baseline：针对移动设备。
- main：针对标准分辨率设备。
- high：针对高分辨率设备。

默认值：high。',
                                          'type' => 'string',
                                          'example' => 'Main',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '视频平均码率。
         取值范围：[10，50000]。
         单位：Kbps。',
                                          'description' => '视频平均码率。
         
- 取值范围：[10，50000]。
- 单位：Kbps。',
                                          'type' => 'string',
                                          'example' => '3000',
                                        ),
                                        'Crf' => 
                                        array (
                                          'title' => '码率-质量控制因子。
         取值范围：[0，51]。
         默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
         如果设置了Crf，则Bitrate的设置失效。',
                                          'description' => '码率-质量控制因子。
         
- 取值范围：[0，51]。
- 默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。

如果设置了Crf，则Bitrate的设置失效。',
                                          'type' => 'string',
                                          'example' => '23',
                                        ),
                                        'Width' => 
                                        array (
                                          'title' => '宽。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始宽度。',
                                          'description' => '宽。
         
- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始宽度。',
                                          'type' => 'string',
                                          'example' => '1920',
                                        ),
                                        'Height' => 
                                        array (
                                          'title' => '高。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始高度。',
                                          'description' => '高。
         
- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始高度。',
                                          'type' => 'string',
                                          'example' => '1080',
                                        ),
                                        'Fps' => 
                                        array (
                                          'title' => '帧率。
         取值范围：(0,60]。
         当输入文件帧率超过60时取60。
         默认值：取输入文件帧率',
                                          'description' => '帧率。
         
- 取值范围：(0,60]。
- 当输入文件帧率超过60时取60。
- 默认值：取输入文件帧率。',
                                          'type' => 'string',
                                          'example' => '25',
                                        ),
                                        'Gop' => 
                                        array (
                                          'title' => '关键帧间最大帧数。
         取值范围：[1，1080000]。
         默认值：250。',
                                          'description' => '关键帧间最大帧数。
         
- 取值范围：[1，1080000]。
- 默认值：250。',
                                          'type' => 'string',
                                          'example' => '250',
                                        ),
                                        'Preset' => 
                                        array (
                                          'title' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'description' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'type' => 'string',
                                          'example' => 'medium',
                                        ),
                                        'ScanMode' => 
                                        array (
                                          'title' => '扫描模式。
支持interlaced、progressive。',
                                          'description' => '扫描模式。
支持interlaced、progressive。',
                                          'type' => 'string',
                                          'example' => 'progressive',
                                        ),
                                        'PixFmt' => 
                                        array (
                                          'title' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'description' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'type' => 'string',
                                          'example' => 'yuv420p',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否去掉视频',
                                          'description' => '是否去掉视频。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Crop' => 
                                        array (
                                          'title' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频画面裁切，支持2种方式。
         
- 自动检测黑边并裁切，设置为“border”
- 自定义裁切，参数格式：width:height:left:top。示例：1280:800:0:140',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'Pad' => 
                                        array (
                                          'title' => '视频贴黑边
         参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频贴黑边   
- 参数格式：width:height:left:top。
- 示例：1280:800:0:140',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'LongShortMode' => 
                                        array (
                                          'title' => '是否开启横竖屏自适应（即：长短边模式）',
                                          'description' => '是否开启横竖屏自适应（即：长短边模式）',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Bufsize' => 
                                        array (
                                          'title' => '缓冲区大小
          值范围：[1000，128000]
          默认值：6000
          单位：Kb',
                                          'description' => '缓冲区大小
          
- 值范围：[1000，128000]
- 默认值：6000
- 单位：Kb',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                        'Maxrate' => 
                                        array (
                                          'title' => '视频码率峰值
         值范围[10，50000]，单位Kbps。',
                                          'description' => '视频码率峰值
值范围[10，50000]，单位Kbps。',
                                          'type' => 'string',
                                          'example' => '9000',
                                        ),
                                        'AbrMax' => 
                                        array (
                                          'title' => 'abr 最大码率(只有窄高1有效)
值范围[10，50000]，单位Kbps。',
                                          'description' => 'abr 最大码率（只有窄高1有效）
值范围[10，50000]，单位Kbps。',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                      ),
                                    ),
                                    'Audio' => 
                                    array (
                                      'title' => 'audio 设置',
                                      'description' => 'audio 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'description' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'type' => 'string',
                                          'example' => 'AAC',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'description' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'type' => 'string',
                                          'example' => 'aac_low',
                                        ),
                                        'Samplerate' => 
                                        array (
                                          'title' => '采样率。
         默认值：44100
         支持22050、32000、44100、48000、96000，
         单位：Hz',
                                          'description' => '采样率。
         
- 默认值：44100
- 支持22050、32000、44100、48000、96000，
- 单位：Hz',
                                          'type' => 'string',
                                          'example' => '44100',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '输出文件的音频码率。
         值范围：[8，1000]
         单位：Kbps
         默认值：128',
                                          'description' => '输出文件的音频码率。
         
- 值范围：[8，1000]
- 单位：Kbps
- 默认值：128',
                                          'type' => 'string',
                                          'example' => '128',
                                        ),
                                        'Channels' => 
                                        array (
                                          'title' => '声道数。
         默认值：2',
                                          'description' => '声道数。
         默认值：2',
                                          'type' => 'string',
                                          'example' => '2',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否删除音频流。',
                                          'description' => '是否删除音频流。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Volume' => 
                                        array (
                                          'title' => '音量控制',
                                          'description' => '音量控制。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Method' => 
                                            array (
                                              'title' => '音量调整方式',
                                              'description' => '音量调整方式。',
                                              'type' => 'string',
                                              'example' => 'auto',
                                            ),
                                            'IntegratedLoudnessTarget' => 
                                            array (
                                              'title' => '目标音量',
                                              'description' => '目标音量。',
                                              'type' => 'string',
                                              'example' => '-6',
                                            ),
                                            'TruePeak' => 
                                            array (
                                              'title' => '最大峰值',
                                              'description' => '最大峰值。',
                                              'type' => 'string',
                                              'example' => '-1',
                                            ),
                                            'LoudnessRangeTarget' => 
                                            array (
                                              'title' => '音量范围',
                                              'description' => '音量范围。',
                                              'type' => 'string',
                                              'example' => '8',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'Container' => 
                                    array (
                                      'title' => '封装格式设置',
                                      'description' => '封装格式设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Format' => 
                                        array (
                                          'title' => '容器格式',
                                          'description' => '容器格式。',
                                          'type' => 'string',
                                          'example' => 'mp4',
                                        ),
                                      ),
                                    ),
                                    'MuxConfig' => 
                                    array (
                                      'title' => '封装设置',
                                      'description' => '封装设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Segment' => 
                                        array (
                                          'title' => '切片设置',
                                          'description' => '切片设置。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Duration' => 
                                            array (
                                              'title' => '切片时长',
                                              'description' => '切片时长。',
                                              'type' => 'string',
                                              'example' => '10',
                                            ),
                                            'ForceSegTime' => 
                                            array (
                                              'title' => '强制切片时间点',
                                              'description' => '强制切片时间点。',
                                              'type' => 'string',
                                              'example' => '2,3',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'TransConfig' => 
                                    array (
                                      'description' => '条件转码参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'TransMode' => 
                                        array (
                                          'description' => '视频转码模式。取值：
- onepass（默认值）：一般用于ABR。编码速度较twopass更快。
- twopass：一般用于VBR。编码速度较onepass更慢。
- CBR：固定码率模式。',
                                          'type' => 'string',
                                          'example' => 'onepass',
                                        ),
                                        'IsCheckReso' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，IsCheckResoFail优先级更高。
- true：检查。当输入视频分辨率（宽或高）小于输出设置时，按输入视频分辨率转码。
- false（默认值）：不检查。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckResoFail' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，本参数优先级更高。
- true：检查。当输入视频分辨率（宽或高）小于输出设置时，返回转码失败。
- false（默认值）：不检查。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrate' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，IsCheckVideoBitrateFail优先级更高。
- true：检查。当输入视频码率小于输出设置时，按输入视频码率转码。
- false（默认值）：不检查。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrateFail' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，本参数优先级更高。
- true：检查。当输入视频码率小于输出设置时，返回转码失败。
- false（默认值）：不检查。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrate' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，IsCheckAudioBitrateFail优先级更高。
- true：检查。当输入音频码率小于输出设置时，按输入音频码率转码。
- false：不检查。

默认值规则：
- 参数为空，并且codec和输入源不一样：false。
- 参数为空，并且codec和输入源一样：true。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrateFail' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，本参数优先级更高。
- true：检查。当输入音频码率小于输出设置时，返回转码失败。
- false（默认值）：不检查。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'AdjDarMethod' => 
                                        array (
                                          'description' => '分辨率改写方式。当Width或Height都填写时才生效，可以和LongShortMode搭配使用。

可选值：rescale、crop、pad、none。

默认值：none。',
                                          'type' => 'string',
                                          'example' => 'none',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ImageWatermarks' => 
                            array (
                              'title' => '图片水印配置',
                              'description' => '图片水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '图片水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Width' => 
                                      array (
                                        'title' => '输出视频上水印图片宽。
值有两种形式：

- 整数型代水印图片宽的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'description' => '输出视频上水印图片宽。
值有两种形式：

- 整数型代水印图片宽的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Height' => 
                                      array (
                                        'title' => '输出视频上水印图片高。
值有两种形式：

- 整数型代水印图片高的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'description' => '输出视频上水印图片高。
值有两种形式：

- 整数型代水印图片高的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Dx' => 
                                      array (
                                        'title' => '水印图片相对输出视频的水平偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围：[8，4096]
  - 单位：px
- 小数型代表水平偏移量与输出分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'description' => '水印图片相对输出视频的水平偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围：[8，4096]
  - 单位：px
- 小数型代表水平偏移量与输出分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Dy' => 
                                      array (
                                        'title' => '水印图片相对输出视频的垂直偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围[8，4096]
  - 单位：px
- 小数型代表垂直偏移量与输出分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'description' => '水印图片相对输出视频的垂直偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围[8，4096]
  - 单位：px
- 小数型代表垂直偏移量与输出分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'ReferPos' => 
                                      array (
                                        'title' => '水印的位置。
- 可取值：TopRight（右上）、TopLeft（左上）、BottomRight（右下）、BottomLeft（左下）
- 默认值：TopRight',
                                        'description' => '水印的位置。
- 可取值：TopRight（右上）、TopLeft（左上）、BottomRight（右下）、BottomLeft（左下）
- 默认值：TopRight',
                                        'type' => 'string',
                                        'example' => 'TopLeft',
                                      ),
                                      'Timeline' => 
                                      array (
                                        'title' => '动态水印，显示时间设置。',
                                        'description' => '动态水印，显示时间设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Start' => 
                                          array (
                                            'title' => '水印开始出现时间。
- 单位：秒
- 取值范围：数字
- 默认值：0',
                                            'description' => '水印开始出现时间。
- 单位：秒
- 取值范围：数字
- 默认值：0',
                                            'type' => 'string',
                                            'example' => '00:00:05',
                                          ),
                                          'Duration' => 
                                          array (
                                            'title' => '水印持续时间。
- 取值范围：[数字，ToEND]
- 默认值：ToEND',
                                            'description' => '水印持续时间。
- 取值范围：[数字，ToEND]
- 默认值：ToEND',
                                            'type' => 'string',
                                            'example' => 'ToEND',
                                          ),
                                        ),
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '水印图片文件。',
                                        'description' => '水印图片文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'TextWatermarks' => 
                            array (
                              'title' => '文字水印配置',
                              'description' => '文字水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '文字水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Content' => 
                                      array (
                                        'title' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                        'description' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                        'type' => 'string',
                                        'example' => '测试水印',
                                      ),
                                      'FontName' => 
                                      array (
                                        'title' => '字体。默认：SimSun。',
                                        'description' => '字体。默认：SimSun。',
                                        'type' => 'string',
                                        'example' => 'SimSun',
                                      ),
                                      'FontColor' => 
                                      array (
                                        'title' => '颜色。',
                                        'description' => '颜色。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'FontAlpha' => 
                                      array (
                                        'title' => '字体透明度。
- 范围：(0, 1]
- 默认：1.0',
                                        'description' => '字体透明度。
- 范围：(0, 1]
- 默认：1.0',
                                        'type' => 'string',
                                        'example' => '1.0',
                                      ),
                                      'Top' => 
                                      array (
                                        'title' => '文本上边距。
- 默认：0
- 范围：[0,4096]
',
                                        'description' => '文本上边距。
- 默认：0
- 范围：[0,4096]
',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Left' => 
                                      array (
                                        'title' => '文本左边距。
- 默认：0
- 范围：[0,4096]',
                                        'description' => '文本左边距。
- 默认：0
- 范围：[0,4096]',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'FontSize' => 
                                      array (
                                        'title' => '字体大小。
- 默认值：16
- 范围：(4, 120)',
                                        'description' => '字体大小。
- 默认值：16
- 范围：(4, 120)',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '16',
                                      ),
                                      'BorderWidth' => 
                                      array (
                                        'title' => '描边宽度。
- 默认：0
- 范围：(0,4096]',
                                        'description' => '描边宽度。
- 默认：0
- 范围：(0,4096]',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '0',
                                      ),
                                      'BorderColor' => 
                                      array (
                                        'title' => '描边颜色。
默认：Black
更多取值请参见BorderColor。',
                                        'description' => '描边颜色。
默认：Black
更多取值请参见BorderColor。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'Adaptive' => 
                                      array (
                                        'title' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                        'description' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                        'type' => 'string',
                                        'example' => 'false',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Subtitles' => 
                            array (
                              'title' => '字幕压制配置',
                              'description' => '字幕压制配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '字幕压制配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Format' => 
                                      array (
                                        'title' => '字幕文件格式。',
                                        'description' => '字幕文件格式。',
                                        'type' => 'string',
                                        'example' => 'vtt',
                                      ),
                                      'CharEnc' => 
                                      array (
                                        'title' => '文件 encoding 格式。',
                                        'description' => '文件 encoding 格式。',
                                        'type' => 'string',
                                        'example' => 'UTF-8',
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '字幕文件。',
                                        'description' => '字幕文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Encryption' => 
                            array (
                              'title' => '加密配置。',
                              'description' => '加密配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'EncryptType' => 
                                array (
                                  'title' => '加密类型。',
                                  'description' => '加密类型。',
                                  'type' => 'string',
                                  'example' => 'PrivateEncryption',
                                ),
                                'CipherText' => 
                                array (
                                  'title' => '标准加密的密钥密文。',
                                  'description' => '标准加密的密钥密文。',
                                  'type' => 'string',
                                  'example' => 'MTYi00NDU0LTg5O****',
                                ),
                                'DecryptKeyUri' => 
                                array (
                                  'title' => '标准加密的解密服务地址。',
                                  'description' => '标准加密的解密服务地址。',
                                  'type' => 'string',
                                  'example' => 'https://sample.com/path?CipherText=MTYi00NDU0LTg5O****',
                                ),
                                'KeyServiceType' => 
                                array (
                                  'title' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'description' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'type' => 'string',
                                  'example' => 'KMS',
                                ),
                              ),
                            ),
                            'CombineConfigs' => 
                            array (
                              'title' => '多输入合流配置',
                              'description' => '多输入合流配置',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '合流配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'AudioIndex' => 
                                  array (
                                    'title' => '音频流Index',
                                    'description' => '音频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'VideoIndex' => 
                                  array (
                                    'title' => '视频流Index',
                                    'description' => '视频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'Start' => 
                                  array (
                                    'title' => '输入流的开始时间。 默认为0',
                                    'description' => '输入流的开始时间。 默认为0',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '0.0',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '输入流的持续时间。 默认为视频时长。',
                                    'description' => '输入流的持续时间。 默认为视频时长。',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '20.0',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Output' => 
                        array (
                          'title' => '输出媒体配置',
                          'description' => '输出媒体配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'type' => 'string',
                              'example' => 'OSS',
                            ),
                            'Media' => 
                            array (
                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                              'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4',
                            ),
                            'OutputUrl' => 
                            array (
                              'description' => '输出流路径：    
      仅当 Type 为 Media时才生效，让用户可以选择该媒资下特定文件作为输出。    
      支持的占位符：
- {MediaId}：媒资ID。
- {JobId}：转码子任务ID。
- {MediaBucket}：媒资ID所在的Bucket。
- {ExtName}：文件后缀，取转码模板的输出格式。
- {DestMd5}：转码输出文件的MD5值。    
 说明：    
1. 该参数必须包含{MediaId} 和 {JobId} 两个占位符。
2. 输出的Bucket与MediaId所在Bucket相同。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/{MediaId}/{JobId}.mp4
',
                            ),
                          ),
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据。',
                          'type' => 'string',
                          'example' => 'user-data',
                        ),
                        'ScheduleConfig' => 
                        array (
                          'title' => '任务调度信息',
                          'description' => '任务调度信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PipelineId' => 
                            array (
                              'title' => '管道 ID。',
                              'description' => '管道 ID。',
                              'type' => 'string',
                              'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                            ),
                            'Priority' => 
                            array (
                              'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                              'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                          ),
                        ),
                        'Status' => 
                        array (
                          'title' => '转码任务任务状态 - Init: 已提交, Processing: 转码中, Success: 转码成功, Fail: 转码失败, Deleted: 已删除',
                          'description' => '转码任务状态 

- Init：已提交
- Processing：转码中
- Success：转码成功
- Fail：转码失败
- Deleted：已删除',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'OutFileMeta' => 
                        array (
                          'title' => '任务生成视频 Media 信息',
                          'description' => '任务生成视频 Media 信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FileBasicInfo' => 
                            array (
                              'title' => '基础文件信息',
                              'description' => '基础文件信息。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'MediaId' => 
                                array (
                                  'title' => '媒资 ID。',
                                  'description' => '媒资 ID。',
                                  'type' => 'string',
                                  'example' => '73e07de0f77171eca3fc7035d0b26402',
                                ),
                                'FileName' => 
                                array (
                                  'title' => '文件名。',
                                  'description' => '文件名。',
                                  'type' => 'string',
                                  'example' => 'file.m3u8',
                                ),
                                'FileStatus' => 
                                array (
                                  'title' => '文件状态。',
                                  'description' => '文件状态。',
                                  'type' => 'string',
                                  'example' => 'Normal',
                                ),
                                'FileType' => 
                                array (
                                  'title' => '文件类型。取值: source_file, transcode_file',
                                  'description' => '文件类型。取值：source_file, transcode_file',
                                  'type' => 'string',
                                  'example' => 'source_file',
                                ),
                                'FileSize' => 
                                array (
                                  'title' => '文件大小。单位：Byte。',
                                  'description' => '文件大小。单位：Byte。',
                                  'type' => 'string',
                                  'example' => '31737',
                                ),
                                'FileUrl' => 
                                array (
                                  'title' => '文件 URL。',
                                  'description' => '文件 URL。',
                                  'type' => 'string',
                                  'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8',
                                ),
                                'Region' => 
                                array (
                                  'title' => '文件所在区域。',
                                  'description' => '文件所在区域。',
                                  'type' => 'string',
                                  'example' => 'cn-shanghai',
                                ),
                                'FormatName' => 
                                array (
                                  'title' => '视频格式名称。',
                                  'description' => '视频格式名称。',
                                  'type' => 'string',
                                  'example' => 'hls,applehttp',
                                ),
                                'Duration' => 
                                array (
                                  'title' => '视频时长（单位: 秒）。',
                                  'description' => '视频时长（单位：秒）。',
                                  'type' => 'string',
                                  'example' => '403.039999',
                                ),
                                'Bitrate' => 
                                array (
                                  'title' => '视频码率。',
                                  'description' => '视频码率。',
                                  'type' => 'string',
                                  'example' => '888.563',
                                ),
                                'Width' => 
                                array (
                                  'title' => '宽。',
                                  'description' => '宽。',
                                  'type' => 'string',
                                  'example' => '848',
                                ),
                                'Height' => 
                                array (
                                  'title' => '高。',
                                  'description' => '高。',
                                  'type' => 'string',
                                  'example' => '478',
                                ),
                              ),
                            ),
                            'AudioStreamInfoList' => 
                            array (
                              'title' => '音频流信息',
                              'description' => '音频流信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '音频流信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Index' => 
                                  array (
                                    'title' => '流序号。',
                                    'description' => '流序号。',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'CodecName' => 
                                  array (
                                    'title' => '编码格式。',
                                    'description' => '编码格式。',
                                    'type' => 'string',
                                    'example' => 'aac',
                                  ),
                                  'CodecLongName' => 
                                  array (
                                    'title' => '编码格式名。',
                                    'description' => '编码格式名。',
                                    'type' => 'string',
                                    'example' => 'AAC (Advanced Audio Coding)',
                                  ),
                                  'CodecTimeBase' => 
                                  array (
                                    'title' => '编码器时间基。',
                                    'description' => '编码器时间基。',
                                    'type' => 'string',
                                    'example' => '1/44100',
                                  ),
                                  'CodecTagString' => 
                                  array (
                                    'title' => '编码器标签名。',
                                    'description' => '编码器标签名。',
                                    'type' => 'string',
                                    'example' => '[15][0][0][0]',
                                  ),
                                  'CodecTag' => 
                                  array (
                                    'title' => '编码器标签。',
                                    'description' => '编码器标签。',
                                    'type' => 'string',
                                    'example' => '0x000f',
                                  ),
                                  'SampleFmt' => 
                                  array (
                                    'title' => '采样格式。',
                                    'description' => '采样格式。',
                                    'type' => 'string',
                                    'example' => 'fltp',
                                  ),
                                  'SampleRate' => 
                                  array (
                                    'title' => '采样率（单位: Hz）。',
                                    'description' => '采样率（单位：Hz）。',
                                    'type' => 'string',
                                    'example' => '44100',
                                  ),
                                  'Channels' => 
                                  array (
                                    'title' => '声道数。',
                                    'description' => '声道数。',
                                    'type' => 'string',
                                    'example' => '2',
                                  ),
                                  'ChannelLayout' => 
                                  array (
                                    'title' => '声道布局。',
                                    'description' => '声道布局。',
                                    'type' => 'string',
                                    'example' => 'stereo',
                                  ),
                                  'Timebase' => 
                                  array (
                                    'title' => '时间基。',
                                    'description' => '时间基。',
                                    'type' => 'string',
                                    'example' => '1/90000',
                                  ),
                                  'StartTime' => 
                                  array (
                                    'title' => '开始时间。',
                                    'description' => '开始时间。',
                                    'type' => 'string',
                                    'example' => '1.473556',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '时长（单位: 秒）。',
                                    'description' => '时长（单位：秒）。',
                                    'type' => 'string',
                                    'example' => '403.039989',
                                  ),
                                  'Bitrate' => 
                                  array (
                                    'title' => '码率。',
                                    'description' => '码率。',
                                    'type' => 'string',
                                    'example' => '0.f',
                                  ),
                                  'Lang' => 
                                  array (
                                    'title' => '语言。',
                                    'description' => '语言。',
                                    'type' => 'string',
                                    'example' => 'cn',
                                  ),
                                ),
                              ),
                            ),
                            'VideoStreamInfoList' => 
                            array (
                              'title' => '视频流信息',
                              'description' => '视频流信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '视频流信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Index' => 
                                  array (
                                    'title' => '流序号。',
                                    'description' => '流序号。',
                                    'type' => 'string',
                                    'example' => '0',
                                  ),
                                  'Codec_name' => 
                                  array (
                                    'title' => '编码格式。',
                                    'description' => '编码格式。',
                                    'type' => 'string',
                                    'example' => 'h264',
                                  ),
                                  'Codec_long_name' => 
                                  array (
                                    'title' => '编码格式名。',
                                    'description' => '编码格式名。',
                                    'type' => 'string',
                                    'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                                  ),
                                  'Profile' => 
                                  array (
                                    'title' => '编码器预设。',
                                    'description' => '编码器预设。',
                                    'type' => 'string',
                                    'example' => 'High',
                                  ),
                                  'Codec_time_base' => 
                                  array (
                                    'description' => '编码时基。',
                                    'type' => 'string',
                                    'example' => '1/50',
                                  ),
                                  'Codec_tag_string' => 
                                  array (
                                    'title' => '编码格式标记文本。',
                                    'description' => '编码格式标记文本。',
                                    'type' => 'string',
                                    'example' => '[27][0][0][0]',
                                  ),
                                  'Codec_tag' => 
                                  array (
                                    'title' => '编码格式标记。',
                                    'description' => '编码格式标记。',
                                    'type' => 'string',
                                    'example' => '0x001b',
                                  ),
                                  'Width' => 
                                  array (
                                    'title' => '宽。',
                                    'description' => '宽。',
                                    'type' => 'string',
                                    'example' => '848',
                                  ),
                                  'Height' => 
                                  array (
                                    'title' => '高。',
                                    'description' => '高。',
                                    'type' => 'string',
                                    'example' => '478',
                                  ),
                                  'Has_b_frames' => 
                                  array (
                                    'title' => '是否有B帧。
取值: 
- 0: 没有 B 帧, 
- 1: 有一个 B 帧, 
- 2: 有多个连续 B 帧。',
                                    'description' => '是否有B帧。
取值：
- 0: 没有 B 帧, 
- 1: 有一个 B 帧, 
- 2: 有多个连续 B 帧。',
                                    'type' => 'string',
                                    'example' => '2',
                                  ),
                                  'Sar' => 
                                  array (
                                    'title' => '采集点数宽高比。',
                                    'description' => '采集点数宽高比。',
                                    'type' => 'string',
                                    'example' => '478:477',
                                  ),
                                  'Dar' => 
                                  array (
                                    'title' => '图像显示宽高比。',
                                    'description' => '图像显示宽高比。',
                                    'type' => 'string',
                                    'example' => '16:9',
                                  ),
                                  'PixFmt' => 
                                  array (
                                    'title' => '颜色存储格式。',
                                    'description' => '颜色存储格式。',
                                    'type' => 'string',
                                    'example' => 'yuv420p',
                                  ),
                                  'Level' => 
                                  array (
                                    'title' => '编码等级。',
                                    'description' => '编码等级。',
                                    'type' => 'string',
                                    'example' => '31',
                                  ),
                                  'Fps' => 
                                  array (
                                    'title' => '帧率。',
                                    'description' => '帧率。',
                                    'type' => 'string',
                                    'example' => '25.0',
                                  ),
                                  'Avg_fps' => 
                                  array (
                                    'title' => '平均帧率。',
                                    'description' => '平均帧率。',
                                    'type' => 'string',
                                    'example' => '25.0',
                                  ),
                                  'Time_base' => 
                                  array (
                                    'title' => '时基。',
                                    'description' => '时基。',
                                    'type' => 'string',
                                    'example' => '1/90000',
                                  ),
                                  'Start_time' => 
                                  array (
                                    'title' => '起始时间。',
                                    'description' => '起始时间。',
                                    'type' => 'string',
                                    'example' => '1.473556',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '时长（单位: 秒）。',
                                    'description' => '时长（单位：秒）。',
                                    'type' => 'string',
                                    'example' => '403.039989',
                                  ),
                                  'Bit_rate' => 
                                  array (
                                    'title' => '码率。',
                                    'description' => '码率。',
                                    'type' => 'string',
                                    'example' => '888.563',
                                  ),
                                  'NumFrames' => 
                                  array (
                                    'title' => '总帧数。',
                                    'description' => '总帧数。',
                                    'type' => 'string',
                                    'example' => '10040',
                                  ),
                                  'Lang' => 
                                  array (
                                    'title' => '语言。',
                                    'description' => '语言。',
                                    'type' => 'string',
                                    'example' => 'cn',
                                  ),
                                  'Rotate' => 
                                  array (
                                    'title' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                                    'description' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                                    'type' => 'string',
                                    'example' => '0',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SubmitResultJson' => 
                        array (
                          'title' => '任务提交结果',
                          'description' => '任务提交结果。',
                          'type' => 'object',
                          'example' => '{}',
                        ),
                        'SubmitTime' => 
                        array (
                          'title' => '任务提交时间',
                          'description' => '任务提交时间。',
                          'type' => 'string',
                          'example' => '2022-01-12T08:49:41Z',
                        ),
                        'FinishTime' => 
                        array (
                          'title' => '任务结束时间',
                          'description' => '任务结束时间。',
                          'type' => 'string',
                          'example' => '2022-01-12T08:49:41Z',
                        ),
                        'RequestId' => 
                        array (
                          'title' => '提交任务时请求 ID',
                          'description' => '提交任务时请求 ID。',
                          'type' => 'string',
                          'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
                        ),
                      ),
                    ),
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '任务创建时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'Name' => 
                  array (
                    'title' => '任务名。',
                    'description' => '任务名。',
                    'type' => 'string',
                    'example' => 'transcode-job',
                  ),
                  'RequestId' => 
                  array (
                    'title' => '提交任务时请求 ID。',
                    'description' => '提交任务时请求 ID。',
                    'type' => 'string',
                    'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
                  ),
                  'ParentJobId' => 
                  array (
                    'title' => '主任务 ID。',
                    'description' => '主任务 ID。',
                    'type' => 'string',
                    'example' => '8b2198504dd340b7b3c9842a74fc9baa',
                  ),
                  'JobCount' => 
                  array (
                    'title' => '子任务数量。',
                    'description' => '子任务数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Status' => 
                  array (
                    'title' => '任务状态。 Success: 所有子任务完成后，有一个子任务则为成功, Fail: 所有子任务失败',
                    'description' => '任务状态。 Success: 所有子任务完成后，有一个子任务则为成功, Fail: 所有子任务失败。',
                    'type' => 'string',
                    'example' => 'Success',
                  ),
                  'TriggerSource' => 
                  array (
                    'title' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                    'description' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                    'type' => 'string',
                    'example' => 'API',
                  ),
                  'Percent' => 
                  array (
                    'title' => '任务完成百分比。',
                    'description' => '任务完成百分比。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'SubmitTime' => 
                  array (
                    'title' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务提交时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'FinishTime' => 
                  array (
                    'title' => '任务结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'InputGroup' => 
                  array (
                    'title' => '任务输入组 (目前只支持单个输入)。',
                    'description' => '任务输入组。单个输入为转码任务。多个输入为音视频合流任务。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '作业输入。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                          'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'Media' => 
                        array (
                          'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                          'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                          'type' => 'string',
                          'example' => 'oss://bucket/path/to/video.mp4',
                        ),
                      ),
                    ),
                  ),
                  'OutputGroup' => 
                  array (
                    'title' => '任务输出组。',
                    'description' => '任务输出组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '作业输出。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Output' => 
                        array (
                          'title' => '输出媒体配置',
                          'description' => '输出媒体配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'type' => 'string',
                              'example' => 'OSS',
                            ),
                            'Media' => 
                            array (
                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                              'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4',
                            ),
                          ),
                        ),
                        'ProcessConfig' => 
                        array (
                          'title' => '任务处理配置',
                          'description' => '任务处理配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Transcode' => 
                            array (
                              'title' => '转码配置',
                              'description' => '转码配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'TemplateId' => 
                                array (
                                  'title' => '模板 ID。',
                                  'description' => '模板 ID。',
                                  'type' => 'string',
                                  'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                ),
                                'OverwriteParams' => 
                                array (
                                  'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                  'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Video' => 
                                    array (
                                      'title' => 'video 设置',
                                      'description' => 'video 设置',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '编码格式',
                                          'description' => '编码格式。',
                                          'type' => 'string',
                                          'example' => 'H.264',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '编码级别。
         支持baseline、main、high。
         baseline：针对移动设备。
         main：针对标准分辨率设备。
         high：针对高分辨率设备。
         默认值：high。',
                                          'description' => '编码级别。
         支持baseline、main、high。
         
- baseline：针对移动设备。
- main：针对标准分辨率设备。
- high：针对高分辨率设备。

默认值：high。',
                                          'type' => 'string',
                                          'example' => 'Main',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '视频平均码率。
         取值范围：[10，50000]。
         单位：Kbps。',
                                          'description' => '视频平均码率。
         
- 取值范围：[10，50000]。
- 单位：Kbps。',
                                          'type' => 'string',
                                          'example' => '3000',
                                        ),
                                        'Crf' => 
                                        array (
                                          'title' => '码率-质量控制因子。
         取值范围：[0，51]。
         默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
         如果设置了Crf，则Bitrate的设置失效。',
                                          'description' => '码率-质量控制因子。
         
- 取值范围：[0，51]。
- 默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。

如果设置了Crf，则Bitrate的设置失效。',
                                          'type' => 'string',
                                          'example' => '23',
                                        ),
                                        'Width' => 
                                        array (
                                          'title' => '宽。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始宽度。',
                                          'description' => '宽。
         
- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始宽度。',
                                          'type' => 'string',
                                          'example' => '1920',
                                        ),
                                        'Height' => 
                                        array (
                                          'title' => '高。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始高度。',
                                          'description' => '高。
         
- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始高度。',
                                          'type' => 'string',
                                          'example' => '1080',
                                        ),
                                        'Fps' => 
                                        array (
                                          'title' => '帧率。
         取值范围：(0,60]。
         当输入文件帧率超过60时取60。
         默认值：取输入文件帧率',
                                          'description' => '帧率。
         
- 取值范围：(0,60]。
- 当输入文件帧率超过60时取60。
- 默认值：取输入文件帧率。',
                                          'type' => 'string',
                                          'example' => '25',
                                        ),
                                        'Gop' => 
                                        array (
                                          'title' => '关键帧间最大帧数。
         取值范围：[1，1080000]。
         默认值：250。',
                                          'description' => '关键帧间最大帧数。
         
- 取值范围：[1，1080000]。
- 默认值：250。',
                                          'type' => 'string',
                                          'example' => '250',
                                        ),
                                        'Preset' => 
                                        array (
                                          'title' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'description' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'type' => 'string',
                                          'example' => 'medium',
                                        ),
                                        'ScanMode' => 
                                        array (
                                          'title' => '扫描模式。
支持interlaced、progressive。',
                                          'description' => '扫描模式。
支持interlaced、progressive。',
                                          'type' => 'string',
                                          'example' => 'progressive',
                                        ),
                                        'PixFmt' => 
                                        array (
                                          'title' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'description' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'type' => 'string',
                                          'example' => 'yuv420p',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否去掉视频',
                                          'description' => '是否去掉视频。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Crop' => 
                                        array (
                                          'title' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频画面裁切。
         支持2种方式。
         
- 自动检测黑边并裁切，设置为“border”
- 自定义裁切，参数格式：width:height:left:top。
示例：1280:800:0:140',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'Pad' => 
                                        array (
                                          'title' => '视频贴黑边
         参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频贴黑边。
         
- 参数格式：width:height:left:top。
- 示例：1280:800:0:140',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'LongShortMode' => 
                                        array (
                                          'title' => '是否开启横竖屏自适应（即：长短边模式）',
                                          'description' => '是否开启横竖屏自适应（即：长短边模式）',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Bufsize' => 
                                        array (
                                          'title' => '缓冲区大小
          值范围：[1000，128000]
          默认值：6000
          单位：Kb',
                                          'description' => '缓冲区大小。
          
- 值范围：[1000，128000]
- 默认值：6000
- 单位：Kb',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                        'Maxrate' => 
                                        array (
                                          'title' => '视频码率峰值
         值范围[10，50000]，单位Kbps。',
                                          'description' => '视频码率峰值。
         
- 值范围：[10，50000]
- 单位：Kbps',
                                          'type' => 'string',
                                          'example' => '9000',
                                        ),
                                        'AbrMax' => 
                                        array (
                                          'title' => 'abr 最大码率(只有窄高1有效)
值范围[10，50000]，单位Kbps。',
                                          'description' => 'abr 最大码率（只有窄高1有效）

- 值范围：[10，50000]
- 单位：Kbps',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                      ),
                                    ),
                                    'Audio' => 
                                    array (
                                      'title' => 'audio 设置',
                                      'description' => 'audio 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'description' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'type' => 'string',
                                          'example' => 'AAC',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'description' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'type' => 'string',
                                          'example' => 'aac_low',
                                        ),
                                        'Samplerate' => 
                                        array (
                                          'title' => '采样率。
         默认值：44100
         支持22050、32000、44100、48000、96000，
         单位：Hz',
                                          'description' => '采样率。
         
- 默认值：44100   支持22050、32000、44100、48000、96000，
- 单位：Hz',
                                          'type' => 'string',
                                          'example' => '44100',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '输出文件的音频码率。
         值范围：[8，1000]
         单位：Kbps
         默认值：128',
                                          'description' => '输出文件的音频码率。
         
- 值范围：[8，1000]
- 单位：Kbps
- 默认值：128',
                                          'type' => 'string',
                                          'example' => '128',
                                        ),
                                        'Channels' => 
                                        array (
                                          'title' => '声道数。
         默认值：2',
                                          'description' => '声道数。
         默认值：2',
                                          'type' => 'string',
                                          'example' => '2',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否删除音频流。',
                                          'description' => '是否删除音频流。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Volume' => 
                                        array (
                                          'title' => '音量控制',
                                          'description' => '音量控制。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Method' => 
                                            array (
                                              'title' => '音量调整方式',
                                              'description' => '音量调整方式。',
                                              'type' => 'string',
                                              'example' => 'auto',
                                            ),
                                            'IntegratedLoudnessTarget' => 
                                            array (
                                              'title' => '目标音量',
                                              'description' => '目标音量。',
                                              'type' => 'string',
                                              'example' => '-6',
                                            ),
                                            'TruePeak' => 
                                            array (
                                              'title' => '最大峰值',
                                              'description' => '最大峰值。',
                                              'type' => 'string',
                                              'example' => '-1',
                                            ),
                                            'LoudnessRangeTarget' => 
                                            array (
                                              'title' => '音量范围',
                                              'description' => '音量范围。',
                                              'type' => 'string',
                                              'example' => '8',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'Container' => 
                                    array (
                                      'title' => '封装格式设置',
                                      'description' => '封装格式设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Format' => 
                                        array (
                                          'title' => '容器格式',
                                          'description' => '容器格式。',
                                          'type' => 'string',
                                          'example' => 'mp4',
                                        ),
                                      ),
                                    ),
                                    'MuxConfig' => 
                                    array (
                                      'title' => '封装设置',
                                      'description' => '封装设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Segment' => 
                                        array (
                                          'title' => '切片设置',
                                          'description' => '切片设置。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Duration' => 
                                            array (
                                              'title' => '切片时长',
                                              'description' => '切片时长。',
                                              'type' => 'string',
                                              'example' => '10',
                                            ),
                                            'ForceSegTime' => 
                                            array (
                                              'title' => '强制切片时间点',
                                              'description' => '强制切片时间点。',
                                              'type' => 'string',
                                              'example' => '2,3',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'TransConfig' => 
                                    array (
                                      'description' => '条件转码参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'TransMode' => 
                                        array (
                                          'description' => '视频转码模式。取值如下：

- onepass：一般用于ABR。编码速度较twopass更快。

- twopass：一般用于VBR。编码速度较onepass更慢。

- CBR：固定码率模式。

默认值：onepass。',
                                          'type' => 'string',
                                          'example' => 'onepass',
                                        ),
                                        'IsCheckReso' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，IsCheckResoFail优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，按输入视频分辨率转码。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckResoFail' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrate' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，IsCheckVideoBitrateFail优先级更高。

- true：检查。当输入视频码率小于输出设置时，按输入视频码率转码。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrateFail' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrate' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，IsCheckAudioBitrateFail优先级更高。

- true：检查。当输入音频码率小于输出设置时，按输入音频码率转码。

- false：不检查。

默认值：

- 参数为空，并且codec和输入源不一样：false。

- 参数为空，并且codec和输入源一样：true。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrateFail' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入音频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'AdjDarMethod' => 
                                        array (
                                          'description' => '分辨率改写方式。当Width或Height都填写时才生效，可以和LongShortMode搭配使用。

可选值：rescale、crop、pad、none。

默认值：none。',
                                          'type' => 'string',
                                          'example' => 'none',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ImageWatermarks' => 
                            array (
                              'title' => '图片水印配置',
                              'description' => '图片水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '图片水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Width' => 
                                      array (
                                        'title' => '输出视频上水印图片宽。
值有两种形式：

- 整数型代水印图片宽的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'description' => '输出视频上水印图片宽。
值有两种形式：

- 整数型代水印图片宽的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Height' => 
                                      array (
                                        'title' => '输出视频上水印图片高。
值有两种形式：

- 整数型代水印图片高的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'description' => '输出视频上水印图片高。
值有两种形式：

- 整数型代水印图片高的像素值。
  - 范围：[8,4096]
  - 单位：px
- 小数型代表相对输出视频分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Dx' => 
                                      array (
                                        'title' => '水印图片相对输出视频的水平偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围：[8，4096]
  - 单位：px
- 小数型代表水平偏移量与输出分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'description' => '水印图片相对输出视频的水平偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围：[8，4096]
  - 单位：px
- 小数型代表水平偏移量与输出分辨率宽的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Dy' => 
                                      array (
                                        'title' => '水印图片相对输出视频的垂直偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围[8，4096]
  - 单位：px
- 小数型代表垂直偏移量与输出分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'description' => '水印图片相对输出视频的垂直偏移量。
默认值：0

值有两种形式：
- 整数型代表偏移像素。
  - 范围[8，4096]
  - 单位：px
- 小数型代表垂直偏移量与输出分辨率高的比率。
  - 范围：(0，1)
  - 支持4位小数，如0.9999，超出部分系统自动丢弃',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'ReferPos' => 
                                      array (
                                        'title' => '水印的位置。
- 可取值：TopRight（右上）、TopLeft（左上）、BottomRight（右下）、BottomLeft（左下）
- 默认值：TopRight',
                                        'description' => '水印的位置。
- 可取值：TopRight（右上）、TopLeft（左上）、BottomRight（右下）、BottomLeft（左下）
- 默认值：TopRight',
                                        'type' => 'string',
                                        'example' => 'TopLeft',
                                      ),
                                      'Timeline' => 
                                      array (
                                        'title' => '动态水印，显示时间设置。',
                                        'description' => '动态水印，显示时间设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Start' => 
                                          array (
                                            'title' => '水印开始出现时间。
- 单位：秒
- 取值范围：数字
- 默认值：0',
                                            'description' => '水印开始出现时间。
- 单位：秒
- 取值范围：数字
- 默认值：0',
                                            'type' => 'string',
                                            'example' => '00:00:05',
                                          ),
                                          'Duration' => 
                                          array (
                                            'title' => '水印持续时间。
- 取值范围：[数字，ToEND]
- 默认值：ToEND',
                                            'description' => '水印持续时间。
- 取值范围：[数字，ToEND]
- 默认值：ToEND',
                                            'type' => 'string',
                                            'example' => 'ToEND',
                                          ),
                                        ),
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '水印图片文件。',
                                        'description' => '水印图片文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'TextWatermarks' => 
                            array (
                              'title' => '文字水印配置',
                              'description' => '文字水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '文字水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Content' => 
                                      array (
                                        'title' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                        'description' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                        'type' => 'string',
                                        'example' => '测试水印',
                                      ),
                                      'FontName' => 
                                      array (
                                        'title' => '字体。默认：SimSun。',
                                        'description' => '字体。默认：SimSun。',
                                        'type' => 'string',
                                        'example' => 'SimSun',
                                      ),
                                      'FontColor' => 
                                      array (
                                        'title' => '颜色。',
                                        'description' => '颜色。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'FontAlpha' => 
                                      array (
                                        'title' => '字体透明度。
- 范围：(0, 1]
- 默认：1.0',
                                        'description' => '字体透明度。
- 范围：(0, 1]
- 默认：1.0',
                                        'type' => 'string',
                                        'example' => '1.0',
                                      ),
                                      'Top' => 
                                      array (
                                        'title' => '文本上边距。
- 默认：0
- 范围：[0,4096]
',
                                        'description' => '文本上边距。
- 默认：0
- 范围：[0,4096]
',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Left' => 
                                      array (
                                        'title' => '文本左边距。
- 默认：0
- 范围：[0,4096]',
                                        'description' => '文本左边距。
- 默认：0
- 范围：[0,4096]',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'FontSize' => 
                                      array (
                                        'title' => '字体大小。
- 默认值：16
- 范围：(4, 120)',
                                        'description' => '字体大小。
- 默认值：16
- 范围：(4, 120)',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '16',
                                      ),
                                      'BorderWidth' => 
                                      array (
                                        'title' => '描边宽度。
- 默认：0
- 范围：(0,4096]',
                                        'description' => '描边宽度。
- 默认：0
- 范围：(0,4096]',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '0',
                                      ),
                                      'BorderColor' => 
                                      array (
                                        'title' => '描边颜色。
默认：Black
更多取值请参见BorderColor。',
                                        'description' => '描边颜色。
默认：Black
更多取值请参见BorderColor。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'Adaptive' => 
                                      array (
                                        'title' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                        'description' => '根据输出视频大小调整字体 size。

- true: false
- default: false',
                                        'type' => 'string',
                                        'example' => 'false',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Subtitles' => 
                            array (
                              'title' => '字幕压制配置',
                              'description' => '字幕压制配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '字幕压制配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Format' => 
                                      array (
                                        'title' => '字幕文件格式。',
                                        'description' => '字幕文件格式。',
                                        'type' => 'string',
                                        'example' => 'vtt',
                                      ),
                                      'CharEnc' => 
                                      array (
                                        'title' => '文件 encoding 格式。',
                                        'description' => '文件 encoding 格式。',
                                        'type' => 'string',
                                        'example' => 'UTF-8',
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '字幕文件。',
                                        'description' => '字幕文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Encryption' => 
                            array (
                              'title' => '加密配置。',
                              'description' => '加密配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'EncryptType' => 
                                array (
                                  'title' => '加密类型。',
                                  'description' => '加密类型。',
                                  'type' => 'string',
                                  'example' => 'PrivateEncryption',
                                ),
                                'CipherText' => 
                                array (
                                  'title' => '标准加密的密钥密文。',
                                  'description' => '标准加密的密钥密文。',
                                  'type' => 'string',
                                  'example' => 'MTYi00NDU0LTg5O****',
                                ),
                                'DecryptKeyUri' => 
                                array (
                                  'title' => '标准加密的解密服务地址。',
                                  'description' => '标准加密的解密服务地址。',
                                  'type' => 'string',
                                  'example' => 'https://sample.com/path?CipherText=MTYi00NDU0LTg5O****',
                                ),
                                'KeyServiceType' => 
                                array (
                                  'title' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'description' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'type' => 'string',
                                  'example' => 'KMS',
                                ),
                              ),
                            ),
                            'CombineConfigs' => 
                            array (
                              'title' => '多输入合流配置',
                              'description' => '多输入合流配置',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '多输入合流配置',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'AudioIndex' => 
                                  array (
                                    'title' => '音频流Index',
                                    'description' => '音频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'VideoIndex' => 
                                  array (
                                    'title' => '视频流Index',
                                    'description' => '视频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'Start' => 
                                  array (
                                    'title' => '输入流的开始时间。 默认为0',
                                    'description' => '输入流的开始时间。 默认为0',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '0.0',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '输入流的持续时间。 默认为视频时长。',
                                    'description' => '输入流的持续时间。 默认为视频时长。',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '20.0',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'UserData' => 
                  array (
                    'title' => '用户数据。',
                    'description' => '用户数据。',
                    'type' => 'string',
                    'example' => 'user-data',
                  ),
                  'ScheduleConfig' => 
                  array (
                    'title' => '任务调度配置。',
                    'description' => '任务调度配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PipelineId' => 
                      array (
                        'title' => '管道 ID。',
                        'description' => '管道 ID。',
                        'type' => 'string',
                        'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                      ),
                      'Priority' => 
                      array (
                        'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"TranscodeParentJob\\": {\\n    \\"TranscodeJobList\\": [\\n      {\\n        \\"CreateTime\\": \\"2022-01-12T08:49:41Z\\",\\n        \\"Name\\": \\"transcode-job\\",\\n        \\"ParentJobId\\": \\"8b2198504dd340b7b3c9842a74fc9baa\\",\\n        \\"JobId\\": \\"7d6a7e0d4db2457a8d45ff5d43e1bf0a\\",\\n        \\"JobIndex\\": 0,\\n        \\"InputGroup\\": [\\n          {\\n            \\"Type\\": \\"OSS\\",\\n            \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n            \\"InputUrl\\": \\"oss://bucket/path/to/video.mp4\\\\n\\"\\n          }\\n        ],\\n        \\"ProcessConfig\\": {\\n          \\"Transcode\\": {\\n            \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n            \\"OverwriteParams\\": {\\n              \\"Video\\": {\\n                \\"Codec\\": \\"H.264\\",\\n                \\"Profile\\": \\"Main\\",\\n                \\"Bitrate\\": \\"3000\\",\\n                \\"Crf\\": \\"23\\",\\n                \\"Width\\": \\"1920\\",\\n                \\"Height\\": \\"1080\\",\\n                \\"Fps\\": \\"25\\",\\n                \\"Gop\\": \\"250\\",\\n                \\"Preset\\": \\"medium\\",\\n                \\"ScanMode\\": \\"progressive\\",\\n                \\"PixFmt\\": \\"yuv420p\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Crop\\": \\"1280:800:0:140\\",\\n                \\"Pad\\": \\"1280:800:0:140\\",\\n                \\"LongShortMode\\": \\"false\\",\\n                \\"Bufsize\\": \\"6000\\",\\n                \\"Maxrate\\": \\"9000\\",\\n                \\"AbrMax\\": \\"6000\\"\\n              },\\n              \\"Audio\\": {\\n                \\"Codec\\": \\"AAC\\",\\n                \\"Profile\\": \\"aac_low\\",\\n                \\"Samplerate\\": \\"44100\\",\\n                \\"Bitrate\\": \\"128\\",\\n                \\"Channels\\": \\"2\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Volume\\": {\\n                  \\"Method\\": \\"auto\\",\\n                  \\"IntegratedLoudnessTarget\\": \\"-6\\",\\n                  \\"TruePeak\\": \\"-1\\",\\n                  \\"LoudnessRangeTarget\\": \\"8\\"\\n                }\\n              },\\n              \\"Container\\": {\\n                \\"Format\\": \\"mp4\\"\\n              },\\n              \\"MuxConfig\\": {\\n                \\"Segment\\": {\\n                  \\"Duration\\": \\"10\\",\\n                  \\"ForceSegTime\\": \\"2,3\\"\\n                }\\n              },\\n              \\"TransConfig\\": {\\n                \\"TransMode\\": \\"onepass\\",\\n                \\"IsCheckReso\\": \\"true\\",\\n                \\"IsCheckResoFail\\": \\"true\\",\\n                \\"IsCheckVideoBitrate\\": \\"true\\",\\n                \\"IsCheckVideoBitrateFail\\": \\"true\\",\\n                \\"IsCheckAudioBitrate\\": \\"true\\",\\n                \\"IsCheckAudioBitrateFail\\": \\"true\\",\\n                \\"AdjDarMethod\\": \\"none\\"\\n              }\\n            }\\n          },\\n          \\"ImageWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Width\\": \\"32\\",\\n                \\"Height\\": \\"32\\",\\n                \\"Dx\\": \\"10\\",\\n                \\"Dy\\": \\"10\\",\\n                \\"ReferPos\\": \\"TopLeft\\",\\n                \\"Timeline\\": {\\n                  \\"Start\\": \\"00:00:05\\",\\n                  \\"Duration\\": \\"ToEND\\"\\n                },\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"TextWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Content\\": \\"测试水印\\",\\n                \\"FontName\\": \\"SimSun\\",\\n                \\"FontColor\\": \\"#006400\\",\\n                \\"FontAlpha\\": \\"1.0\\",\\n                \\"Top\\": \\"10\\",\\n                \\"Left\\": \\"10\\",\\n                \\"FontSize\\": 16,\\n                \\"BorderWidth\\": 0,\\n                \\"BorderColor\\": \\"#006400\\",\\n                \\"Adaptive\\": \\"false\\"\\n              }\\n            }\\n          ],\\n          \\"Subtitles\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Format\\": \\"vtt\\",\\n                \\"CharEnc\\": \\"UTF-8\\",\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"Encryption\\": {\\n            \\"EncryptType\\": \\"PrivateEncryption\\",\\n            \\"CipherText\\": \\"MTYi00NDU0LTg5O****\\",\\n            \\"DecryptKeyUri\\": \\"https://sample.com/path?CipherText=MTYi00NDU0LTg5O****\\",\\n            \\"KeyServiceType\\": \\"KMS\\"\\n          },\\n          \\"CombineConfigs\\": [\\n            {\\n              \\"AudioIndex\\": \\"0 或 exclude\\",\\n              \\"VideoIndex\\": \\"0 或 exclude\\",\\n              \\"Start\\": 0,\\n              \\"Duration\\": 20\\n            }\\n          ]\\n        },\\n        \\"Output\\": {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n          \\"OutputUrl\\": \\"oss://bucket/path/to/{MediaId}/{JobId}.mp4\\\\n\\"\\n        },\\n        \\"UserData\\": \\"user-data\\",\\n        \\"ScheduleConfig\\": {\\n          \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n          \\"Priority\\": 5\\n        },\\n        \\"Status\\": \\"Init\\",\\n        \\"OutFileMeta\\": {\\n          \\"FileBasicInfo\\": {\\n            \\"MediaId\\": \\"73e07de0f77171eca3fc7035d0b26402\\",\\n            \\"FileName\\": \\"file.m3u8\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"31737\\",\\n            \\"FileUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"hls,applehttp\\",\\n            \\"Duration\\": \\"403.039999\\",\\n            \\"Bitrate\\": \\"888.563\\",\\n            \\"Width\\": \\"848\\",\\n            \\"Height\\": \\"478\\"\\n          },\\n          \\"AudioStreamInfoList\\": [\\n            {\\n              \\"Index\\": \\"1\\",\\n              \\"CodecName\\": \\"aac\\",\\n              \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n              \\"CodecTimeBase\\": \\"1/44100\\",\\n              \\"CodecTagString\\": \\"[15][0][0][0]\\",\\n              \\"CodecTag\\": \\"0x000f\\",\\n              \\"SampleFmt\\": \\"fltp\\",\\n              \\"SampleRate\\": \\"44100\\",\\n              \\"Channels\\": \\"2\\",\\n              \\"ChannelLayout\\": \\"stereo\\",\\n              \\"Timebase\\": \\"1/90000\\",\\n              \\"StartTime\\": \\"1.473556\\",\\n              \\"Duration\\": \\"403.039989\\",\\n              \\"Bitrate\\": \\"0.f\\",\\n              \\"Lang\\": \\"cn\\"\\n            }\\n          ],\\n          \\"VideoStreamInfoList\\": [\\n            {\\n              \\"Index\\": \\"0\\",\\n              \\"Codec_name\\": \\"h264\\",\\n              \\"Codec_long_name\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n              \\"Profile\\": \\"High\\",\\n              \\"Codec_time_base\\": \\"1/50\\",\\n              \\"Codec_tag_string\\": \\"[27][0][0][0]\\",\\n              \\"Codec_tag\\": \\"0x001b\\",\\n              \\"Width\\": \\"848\\",\\n              \\"Height\\": \\"478\\",\\n              \\"Has_b_frames\\": \\"2\\",\\n              \\"Sar\\": \\"478:477\\",\\n              \\"Dar\\": \\"16:9\\",\\n              \\"PixFmt\\": \\"yuv420p\\",\\n              \\"Level\\": \\"31\\",\\n              \\"Fps\\": \\"25.0\\",\\n              \\"Avg_fps\\": \\"25.0\\",\\n              \\"Time_base\\": \\"1/90000\\",\\n              \\"Start_time\\": \\"1.473556\\",\\n              \\"Duration\\": \\"403.039989\\",\\n              \\"Bit_rate\\": \\"888.563\\",\\n              \\"NumFrames\\": \\"10040\\",\\n              \\"Lang\\": \\"cn\\",\\n              \\"Rotate\\": \\"0\\"\\n            }\\n          ]\\n        },\\n        \\"SubmitResultJson\\": {},\\n        \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n        \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n        \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\"\\n      }\\n    ],\\n    \\"CreateTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"Name\\": \\"transcode-job\\",\\n    \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n    \\"ParentJobId\\": \\"8b2198504dd340b7b3c9842a74fc9baa\\",\\n    \\"JobCount\\": 1,\\n    \\"Status\\": \\"Success\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"Percent\\": 0,\\n    \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"InputGroup\\": [\\n      {\\n        \\"Type\\": \\"OSS\\",\\n        \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n      }\\n    ],\\n    \\"OutputGroup\\": [\\n      {\\n        \\"Output\\": {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n        },\\n        \\"ProcessConfig\\": {\\n          \\"Transcode\\": {\\n            \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n            \\"OverwriteParams\\": {\\n              \\"Video\\": {\\n                \\"Codec\\": \\"H.264\\",\\n                \\"Profile\\": \\"Main\\",\\n                \\"Bitrate\\": \\"3000\\",\\n                \\"Crf\\": \\"23\\",\\n                \\"Width\\": \\"1920\\",\\n                \\"Height\\": \\"1080\\",\\n                \\"Fps\\": \\"25\\",\\n                \\"Gop\\": \\"250\\",\\n                \\"Preset\\": \\"medium\\",\\n                \\"ScanMode\\": \\"progressive\\",\\n                \\"PixFmt\\": \\"yuv420p\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Crop\\": \\"1280:800:0:140\\",\\n                \\"Pad\\": \\"1280:800:0:140\\",\\n                \\"LongShortMode\\": \\"false\\",\\n                \\"Bufsize\\": \\"6000\\",\\n                \\"Maxrate\\": \\"9000\\",\\n                \\"AbrMax\\": \\"6000\\"\\n              },\\n              \\"Audio\\": {\\n                \\"Codec\\": \\"AAC\\",\\n                \\"Profile\\": \\"aac_low\\",\\n                \\"Samplerate\\": \\"44100\\",\\n                \\"Bitrate\\": \\"128\\",\\n                \\"Channels\\": \\"2\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Volume\\": {\\n                  \\"Method\\": \\"auto\\",\\n                  \\"IntegratedLoudnessTarget\\": \\"-6\\",\\n                  \\"TruePeak\\": \\"-1\\",\\n                  \\"LoudnessRangeTarget\\": \\"8\\"\\n                }\\n              },\\n              \\"Container\\": {\\n                \\"Format\\": \\"mp4\\"\\n              },\\n              \\"MuxConfig\\": {\\n                \\"Segment\\": {\\n                  \\"Duration\\": \\"10\\",\\n                  \\"ForceSegTime\\": \\"2,3\\"\\n                }\\n              },\\n              \\"TransConfig\\": {\\n                \\"TransMode\\": \\"onepass\\",\\n                \\"IsCheckReso\\": \\"true\\",\\n                \\"IsCheckResoFail\\": \\"true\\",\\n                \\"IsCheckVideoBitrate\\": \\"true\\",\\n                \\"IsCheckVideoBitrateFail\\": \\"true\\",\\n                \\"IsCheckAudioBitrate\\": \\"true\\",\\n                \\"IsCheckAudioBitrateFail\\": \\"true\\",\\n                \\"AdjDarMethod\\": \\"none\\"\\n              }\\n            }\\n          },\\n          \\"ImageWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Width\\": \\"32\\",\\n                \\"Height\\": \\"32\\",\\n                \\"Dx\\": \\"10\\",\\n                \\"Dy\\": \\"10\\",\\n                \\"ReferPos\\": \\"TopLeft\\",\\n                \\"Timeline\\": {\\n                  \\"Start\\": \\"00:00:05\\",\\n                  \\"Duration\\": \\"ToEND\\"\\n                },\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"TextWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Content\\": \\"测试水印\\",\\n                \\"FontName\\": \\"SimSun\\",\\n                \\"FontColor\\": \\"#006400\\",\\n                \\"FontAlpha\\": \\"1.0\\",\\n                \\"Top\\": \\"10\\",\\n                \\"Left\\": \\"10\\",\\n                \\"FontSize\\": 16,\\n                \\"BorderWidth\\": 0,\\n                \\"BorderColor\\": \\"#006400\\",\\n                \\"Adaptive\\": \\"false\\"\\n              }\\n            }\\n          ],\\n          \\"Subtitles\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Format\\": \\"vtt\\",\\n                \\"CharEnc\\": \\"UTF-8\\",\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"Encryption\\": {\\n            \\"EncryptType\\": \\"PrivateEncryption\\",\\n            \\"CipherText\\": \\"MTYi00NDU0LTg5O****\\",\\n            \\"DecryptKeyUri\\": \\"https://sample.com/path?CipherText=MTYi00NDU0LTg5O****\\",\\n            \\"KeyServiceType\\": \\"KMS\\"\\n          },\\n          \\"CombineConfigs\\": [\\n            {\\n              \\"AudioIndex\\": \\"0 或 exclude\\",\\n              \\"VideoIndex\\": \\"0 或 exclude\\",\\n              \\"Start\\": 0,\\n              \\"Duration\\": 20\\n            }\\n          ]\\n        }\\n      }\\n    ],\\n    \\"UserData\\": \\"user-data\\",\\n    \\"ScheduleConfig\\": {\\n      \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n      \\"Priority\\": 5\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '提交转码任务',
      'summary' => '提交转码任务。',
    ),
    'GetTranscodeJob' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ParentJobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务 ID',
            'description' => '任务 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ab4802364a2e49208c99efab82dfa8e8',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 ID。',
                'type' => 'string',
                'example' => '9EDC30DC-0050-5459-B788-F761B2BE359B',
              ),
              'TranscodeParentJob' => 
              array (
                'title' => 'TranscodeParentJobWithSubJobDTO',
                'description' => 'TranscodeParentJobWithSubJobDTO',
                'type' => 'object',
                'properties' => 
                array (
                  'TranscodeJobList' => 
                  array (
                    'title' => '子任务列表',
                    'description' => '子任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '子任务。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'title' => '任务创建时间',
                          'description' => '任务创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-12T08:49:41Z',
                        ),
                        'Name' => 
                        array (
                          'title' => '任务名',
                          'description' => '任务名。',
                          'type' => 'string',
                          'example' => 'transcode-job',
                        ),
                        'ParentJobId' => 
                        array (
                          'title' => '主任务 ID',
                          'description' => '主任务 ID。 ',
                          'type' => 'string',
                          'example' => '8b2198504dd340b7b3c9842a74fc9baa',
                        ),
                        'JobId' => 
                        array (
                          'title' => '子任务 ID',
                          'description' => '子任务 ID。',
                          'type' => 'string',
                          'example' => '7d6a7e0d4db2457a8d45ff5d43e1bf0a',
                        ),
                        'JobIndex' => 
                        array (
                          'title' => '子任务在整个任务中的索引号',
                          'description' => '子任务在整个任务中的索引号。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'InputGroup' => 
                        array (
                          'title' => '任务输入组。单输入时为转码任务，多输入时为合流任务。',
                          'description' => '任务输入组。单个输入为转码任务。多个输入为音视频合流任务。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '作业输入。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Type' => 
                              array (
                                'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                'type' => 'string',
                                'example' => 'OSS',
                              ),
                              'Media' => 
                              array (
                                'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                'description' => '媒体值：
-  type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
-   type 为 Media 时，为媒资 ID。',
                                'type' => 'string',
                                'example' => 'oss://bucket/path/to/video.mp4',
                              ),
                              'InputUrl' => 
                              array (
                                'description' => '媒资流地址，只有当对媒资流进行转码时填写此参数。',
                                'type' => 'string',
                                'example' => 'oss://bucket/path/to/video.mp4',
                              ),
                            ),
                          ),
                        ),
                        'ProcessConfig' => 
                        array (
                          'title' => '转码处理配置',
                          'description' => '转码处理配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Transcode' => 
                            array (
                              'title' => '转码配置',
                              'description' => '转码配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'TemplateId' => 
                                array (
                                  'title' => '模板 ID。',
                                  'description' => '模板 ID。',
                                  'type' => 'string',
                                  'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                ),
                                'OverwriteParams' => 
                                array (
                                  'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                  'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Video' => 
                                    array (
                                      'title' => 'video 设置',
                                      'description' => 'video 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '编码格式',
                                          'description' => '编码格式。',
                                          'type' => 'string',
                                          'example' => 'H.264',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '编码级别。
         支持baseline、main、high。
         baseline：针对移动设备。
         main：针对标准分辨率设备。
         high：针对高分辨率设备。
         默认值：high。',
                                          'description' => '编码级别。
支持baseline、main、high。
         
- baseline：针对移动设备。
- main：针对标准分辨率设备。
 - high：针对高分辨率设备。

默认值：high。',
                                          'type' => 'string',
                                          'example' => 'Main',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '视频平均码率。
         取值范围：[10，50000]。
         单位：Kbps。',
                                          'description' => '视频平均码率。      
-  取值范围：[10，50000]。
- 单位：Kbps。',
                                          'type' => 'string',
                                          'example' => '3000',
                                        ),
                                        'Crf' => 
                                        array (
                                          'title' => '码率-质量控制因子。
         取值范围：[0，51]。
         默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
         如果设置了Crf，则Bitrate的设置失效。',
                                          'description' => '码率-质量控制因子。
         
- 取值范围：[0，51]。
- 默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
        
如果设置了Crf，则Bitrate的设置失效。',
                                          'type' => 'string',
                                          'example' => '23',
                                        ),
                                        'Width' => 
                                        array (
                                          'title' => '宽。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始宽度。',
                                          'description' => '宽。
- 取值范围：[128,4096]。 
- 单位：px。  
     
默认值：视频原始宽度。',
                                          'type' => 'string',
                                          'example' => '1920',
                                        ),
                                        'Height' => 
                                        array (
                                          'title' => '高。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始高度。',
                                          'description' => '高。
        
- 取值范围：[128,4096]。
- 单位：px。
      
默认值：视频原始高度。',
                                          'type' => 'string',
                                          'example' => '1080',
                                        ),
                                        'Fps' => 
                                        array (
                                          'title' => '帧率。
         取值范围：(0,60]。
         当输入文件帧率超过60时取60。
         默认值：取输入文件帧率',
                                          'description' => '帧率。
       
- 取值范围：(0,60]。
当输入文件帧率超过60时取60。
     
-  默认值：取输入文件帧率。',
                                          'type' => 'string',
                                          'example' => '25',
                                        ),
                                        'Gop' => 
                                        array (
                                          'title' => '关键帧间最大帧数。
         取值范围：[1，1080000]。
         默认值：250。',
                                          'description' => '关键帧间最大帧数。
         
- 取值范围：[1，1080000]。
- 默认值：250。',
                                          'type' => 'string',
                                          'example' => '250',
                                        ),
                                        'Preset' => 
                                        array (
                                          'title' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'description' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'type' => 'string',
                                          'example' => 'medium',
                                        ),
                                        'ScanMode' => 
                                        array (
                                          'title' => '扫描模式。
支持interlaced、progressive。',
                                          'description' => '扫描模式。
支持interlaced、progressive。',
                                          'type' => 'string',
                                          'example' => 'progressive',
                                        ),
                                        'PixFmt' => 
                                        array (
                                          'title' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'description' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'type' => 'string',
                                          'example' => 'yuv420p',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否去掉视频',
                                          'description' => '是否去掉视频。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Crop' => 
                                        array (
                                          'title' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频画面裁切，支持2种方式：
- 自动检测黑边并裁切，设置为“border”；
- 自定义裁切，参数格式：width:height:left:top。',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'Pad' => 
                                        array (
                                          'title' => '视频贴黑边
         参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频贴黑边，参数格式：width:height:left:top。',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'LongShortMode' => 
                                        array (
                                          'title' => '是否开启横竖屏自适应（即：长短边模式）',
                                          'description' => '是否开启横竖屏自适应（即：长短边模式）。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Bufsize' => 
                                        array (
                                          'title' => '缓冲区大小
          值范围：[1000，128000]
          默认值：6000
          单位：Kb',
                                          'description' => '缓冲区大小：
- 值范围：[1000，128000]；
- 默认值：6000；
- 单位：Kb。',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                        'Maxrate' => 
                                        array (
                                          'title' => '视频码率峰值
         值范围[10，50000]，单位Kbps。',
                                          'description' => '视频码率峰值：
- 值范围[10，50000]；
- 单位Kbps。',
                                          'type' => 'string',
                                          'example' => '9000',
                                        ),
                                        'AbrMax' => 
                                        array (
                                          'title' => 'abr 最大码率(只有窄高1有效)
值范围[10，50000]，单位Kbps。',
                                          'description' => 'abr 最大码率（只有窄高1有效）：
- 值范围[10，50000]；
- 单位Kbps。',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                      ),
                                    ),
                                    'Audio' => 
                                    array (
                                      'title' => 'audio 设置',
                                      'description' => 'audio 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'description' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'type' => 'string',
                                          'example' => 'AAC',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'description' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'type' => 'string',
                                          'example' => 'aac_low',
                                        ),
                                        'Samplerate' => 
                                        array (
                                          'title' => '采样率。
         默认值：44100
         支持22050、32000、44100、48000、96000，
         单位：Hz',
                                          'description' => '采样率。
         
- 默认值：44100
支持22050、32000、44100、48000、96000，
- 单位：Hz',
                                          'type' => 'string',
                                          'example' => '44100',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '输出文件的音频码率。
         值范围：[8，1000]
         单位：Kbps
         默认值：128',
                                          'description' => '输出文件的音频码率。
         
- 值范围：[8，1000]
- 单位：Kbps
- 默认值：128',
                                          'type' => 'string',
                                          'example' => '128',
                                        ),
                                        'Channels' => 
                                        array (
                                          'title' => '声道数。
         默认值：2',
                                          'description' => '声道数。
         默认值：2',
                                          'type' => 'string',
                                          'example' => '2',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否删除音频流。',
                                          'description' => '是否删除音频流。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Volume' => 
                                        array (
                                          'title' => '音量控制',
                                          'description' => '音量控制。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Method' => 
                                            array (
                                              'title' => '音量调整方式',
                                              'description' => '音量调整方式。',
                                              'type' => 'string',
                                              'example' => 'auto',
                                            ),
                                            'IntegratedLoudnessTarget' => 
                                            array (
                                              'title' => '目标音量',
                                              'description' => '目标音量。',
                                              'type' => 'string',
                                              'example' => '-6',
                                            ),
                                            'TruePeak' => 
                                            array (
                                              'title' => '最大峰值',
                                              'description' => '最大峰值。',
                                              'type' => 'string',
                                              'example' => '-1',
                                            ),
                                            'LoudnessRangeTarget' => 
                                            array (
                                              'title' => '音量范围',
                                              'description' => '音量范围。',
                                              'type' => 'string',
                                              'example' => '8',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'Container' => 
                                    array (
                                      'title' => '封装格式设置',
                                      'description' => '封装格式设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Format' => 
                                        array (
                                          'title' => '容器格式',
                                          'description' => '容器格式。',
                                          'type' => 'string',
                                          'example' => 'mp4',
                                        ),
                                      ),
                                    ),
                                    'MuxConfig' => 
                                    array (
                                      'title' => '封装设置',
                                      'description' => '封装设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Segment' => 
                                        array (
                                          'title' => '切片设置',
                                          'description' => '切片设置。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Duration' => 
                                            array (
                                              'title' => '切片时长',
                                              'description' => '切片时长。',
                                              'type' => 'string',
                                              'example' => '10',
                                            ),
                                            'ForceSegTime' => 
                                            array (
                                              'title' => '强制切片时间点',
                                              'description' => '强制切片时间点。',
                                              'type' => 'string',
                                              'example' => '2,3',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'TransConfig' => 
                                    array (
                                      'description' => '条件转码参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'TransMode' => 
                                        array (
                                          'description' => '视频转码模式。取值如下：

- onepass：一般用于ABR。编码速度较twopass更快。

- twopass：一般用于VBR。编码速度较onepass更慢。

- CBR：固定码率模式。

默认值：onepass。',
                                          'type' => 'string',
                                          'example' => 'onepass',
                                        ),
                                        'IsCheckReso' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，IsCheckResoFail优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，按输入视频分辨率转码。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckResoFail' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrate' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，IsCheckVideoBitrateFail优先级更高。

- true：检查。当输入视频码率小于输出设置时，按输入视频码率转码。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrateFail' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrate' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，IsCheckAudioBitrateFail优先级更高。

- true：检查。当输入音频码率小于输出设置时，按输入音频码率转码。

- false：不检查。

默认值：

- 参数为空，并且codec和输入源不一样：false。

- 参数为空，并且codec和输入源一样：true。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrateFail' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入音频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'AdjDarMethod' => 
                                        array (
                                          'description' => '分辨率改写方式。当Width或Height都填写时才生效，可以和LongShortMode搭配使用。

可选值：rescale、crop、pad、none。

默认值：none。

示例：请参见如何设置分辨率。',
                                          'type' => 'string',
                                          'example' => 'none',
                                        ),
                                      ),
                                    ),
                                    'Tags' => 
                                    array (
                                      'type' => 'object',
                                      'additionalProperties' => 
                                      array (
                                        'type' => 'string',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ImageWatermarks' => 
                            array (
                              'title' => '图片水印配置',
                              'description' => '图片水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '图片水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Width' => 
                                      array (
                                        'title' => '宽',
                                        'description' => '宽。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Height' => 
                                      array (
                                        'title' => '高',
                                        'description' => '高。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Dx' => 
                                      array (
                                        'title' => '水印位置，x',
                                        'description' => '水印位置，x。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Dy' => 
                                      array (
                                        'title' => '水印位置，y',
                                        'description' => '水印位置，y。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'ReferPos' => 
                                      array (
                                        'title' => '参考位置: TopLeft, TopRight, BottomLeft, BottomRight  default: TopLeft',
                                        'description' => '参考位置：TopLeft, TopRight, BottomLeft, BottomRight  default: TopLeft。',
                                        'type' => 'string',
                                        'example' => 'TopLeft',
                                      ),
                                      'Timeline' => 
                                      array (
                                        'title' => '显示时间设置',
                                        'description' => '显示时间设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Start' => 
                                          array (
                                            'title' => '开始时间',
                                            'description' => '开始时间。',
                                            'type' => 'string',
                                            'example' => '00:00:05',
                                          ),
                                          'Duration' => 
                                          array (
                                            'title' => '显示时长，秒数 或者 "ToEND"',
                                            'description' => '显示时长，秒数或者 "ToEND"。',
                                            'type' => 'string',
                                            'example' => 'ToEND',
                                          ),
                                        ),
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '水印图片文件',
                                        'description' => '水印图片文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'TextWatermarks' => 
                            array (
                              'title' => '文字水印配置',
                              'description' => '文字水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '文字水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Content' => 
                                      array (
                                        'title' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码',
                                        'description' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                        'type' => 'string',
                                        'example' => '测试水印',
                                      ),
                                      'FontName' => 
                                      array (
                                        'title' => '字体',
                                        'description' => '字体。',
                                        'type' => 'string',
                                        'example' => 'SimSun',
                                      ),
                                      'FontColor' => 
                                      array (
                                        'title' => '颜色',
                                        'description' => '颜色。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'FontAlpha' => 
                                      array (
                                        'title' => '透明度',
                                        'description' => '透明度。',
                                        'type' => 'string',
                                        'example' => '1.0',
                                      ),
                                      'Top' => 
                                      array (
                                        'title' => '水印位置，距离上边距离',
                                        'description' => '水印位置，距离上边距离。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Left' => 
                                      array (
                                        'title' => '水印位置，距离左边距离',
                                        'description' => '水印位置，距离左边距离。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'FontSize' => 
                                      array (
                                        'title' => '字体大小',
                                        'description' => '字体大小。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '16',
                                      ),
                                      'BorderWidth' => 
                                      array (
                                        'title' => '边框宽度',
                                        'description' => '边框宽度。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '0',
                                      ),
                                      'BorderColor' => 
                                      array (
                                        'title' => '边框颜色',
                                        'description' => '边框颜色。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'Adaptive' => 
                                      array (
                                        'title' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                        'description' => '根据输出视频大小调整字体 size。 true / false, default: false。',
                                        'type' => 'string',
                                        'example' => 'false',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Subtitles' => 
                            array (
                              'title' => '字幕压制配置',
                              'description' => '字幕压制配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '字幕压制配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Format' => 
                                      array (
                                        'title' => '字幕文件格式',
                                        'description' => '字幕文件格式。',
                                        'type' => 'string',
                                        'example' => 'vtt',
                                      ),
                                      'CharEnc' => 
                                      array (
                                        'title' => '文件 encoding 格式',
                                        'description' => '文件 encoding 格式。',
                                        'type' => 'string',
                                        'example' => 'UTF-8',
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '字幕文件',
                                        'description' => '字幕文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Encryption' => 
                            array (
                              'title' => '加密配置。',
                              'description' => '加密配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'EncryptType' => 
                                array (
                                  'title' => '加密类型。',
                                  'description' => '加密类型。',
                                  'type' => 'string',
                                  'example' => 'PrivateEncryption',
                                ),
                                'CipherText' => 
                                array (
                                  'title' => '标准加密的密钥密文。',
                                  'description' => '标准加密的密钥密文。',
                                  'type' => 'string',
                                  'example' => 'MTYi00NDU0LTg5O****',
                                ),
                                'DecryptKeyUri' => 
                                array (
                                  'title' => '标准加密的解密服务地址。',
                                  'description' => '标准加密的解密服务地址。',
                                  'type' => 'string',
                                  'example' => 'https://sample.com/path?CipherText=MTYi00NDU0LTg5O****',
                                ),
                                'KeyServiceType' => 
                                array (
                                  'title' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'description' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'type' => 'string',
                                  'example' => 'KMS',
                                ),
                              ),
                            ),
                            'CombineConfigs' => 
                            array (
                              'title' => '多输入合流配置',
                              'description' => '多输入合流配置',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'AudioIndex' => 
                                  array (
                                    'title' => '音频流Index',
                                    'description' => '音频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'VideoIndex' => 
                                  array (
                                    'title' => '视频流Index',
                                    'description' => '视频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'Start' => 
                                  array (
                                    'title' => '输入流的开始时间。 默认为0',
                                    'description' => '输入流的开始时间。 默认为0',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '0.0',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '输入流的持续时间。 默认为视频时长。',
                                    'description' => '输入流的持续时间。 默认为视频时长。',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '20.0',
                                  ),
                                ),
                              ),
                            ),
                            'IsInheritTags' => 
                            array (
                              'description' => '是否继承输入流的tag。
当输入不是媒资是该参数不生效。
默认值：false',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                          ),
                        ),
                        'Output' => 
                        array (
                          'title' => '输出媒体配置',
                          'description' => '输出媒体配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'type' => 'string',
                              'example' => 'OSS',
                            ),
                            'Media' => 
                            array (
                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                              'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4',
                            ),
                            'OutputUrl' => 
                            array (
                              'description' => '转码输出流地址，仅当输出到媒资流时需要填此参数',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/{MediaId}/{JobId}.mp4
',
                            ),
                          ),
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据。',
                          'type' => 'string',
                          'example' => 'user-data',
                        ),
                        'ScheduleConfig' => 
                        array (
                          'title' => '任务调度信息',
                          'description' => '任务调度信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PipelineId' => 
                            array (
                              'title' => '管道 ID。',
                              'description' => '管道 ID。',
                              'type' => 'string',
                              'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                            ),
                            'Priority' => 
                            array (
                              'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                              'description' => '任务优先级。数字越大优先级越高，取值范围：1~10。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                          ),
                        ),
                        'Status' => 
                        array (
                          'title' => '转码任务任务状态 - Init: 已提交, Processing: 转码中, Success: 转码成功, Fail: 转码失败, Deleted: 已删除',
                          'description' => '转码任务状态 - Init: 已提交, Processing: 转码中, Success: 转码成功, Fail: 转码失败, Deleted: 已删除。',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'OutFileMeta' => 
                        array (
                          'title' => '任务生成视频 Media 信息',
                          'description' => '任务生成视频 Media 信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FileBasicInfo' => 
                            array (
                              'title' => '基础文件信息',
                              'description' => '基础文件信息。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'MediaId' => 
                                array (
                                  'title' => '媒资 ID。',
                                  'description' => '媒资 ID。',
                                  'type' => 'string',
                                  'example' => '486c2890096871edba6f81848c016303',
                                ),
                                'FileName' => 
                                array (
                                  'title' => '文件名。',
                                  'description' => '文件名。',
                                  'type' => 'string',
                                  'example' => 'file.m3u8',
                                ),
                                'FileStatus' => 
                                array (
                                  'title' => '文件状态。',
                                  'description' => '文件状态。',
                                  'type' => 'string',
                                  'example' => 'Normal',
                                ),
                                'FileType' => 
                                array (
                                  'title' => '文件类型。取值: source_file, transcode_file',
                                  'description' => '文件类型。取值：source_file, transcode_file',
                                  'type' => 'string',
                                  'example' => 'source_file',
                                ),
                                'FileSize' => 
                                array (
                                  'title' => '文件大小。单位：Byte。',
                                  'description' => '文件大小。单位：Byte。',
                                  'type' => 'string',
                                  'example' => '31737',
                                ),
                                'FileUrl' => 
                                array (
                                  'title' => '文件 URL。',
                                  'description' => '文件 URL。',
                                  'type' => 'string',
                                  'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8',
                                ),
                                'Region' => 
                                array (
                                  'title' => '文件所在区域。',
                                  'description' => '文件所在区域。',
                                  'type' => 'string',
                                  'example' => 'cn-shanghai',
                                ),
                                'FormatName' => 
                                array (
                                  'title' => '视频格式名称。',
                                  'description' => '视频格式名称。',
                                  'type' => 'string',
                                  'example' => 'hls,applehttp',
                                ),
                                'Duration' => 
                                array (
                                  'title' => '视频时长（单位: 秒）。',
                                  'description' => '视频时长（单位：秒）。',
                                  'type' => 'string',
                                  'example' => '403.039999',
                                ),
                                'Bitrate' => 
                                array (
                                  'title' => '视频码率。',
                                  'description' => '视频码率。',
                                  'type' => 'string',
                                  'example' => '888.563',
                                ),
                                'Width' => 
                                array (
                                  'title' => '宽。',
                                  'description' => '宽。',
                                  'type' => 'string',
                                  'example' => '848',
                                ),
                                'Height' => 
                                array (
                                  'title' => '高。',
                                  'description' => '高。',
                                  'type' => 'string',
                                  'example' => '478',
                                ),
                              ),
                            ),
                            'AudioStreamInfoList' => 
                            array (
                              'title' => '音频流信息',
                              'description' => '音频流信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '音频流信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Index' => 
                                  array (
                                    'title' => '流序号。',
                                    'description' => '流序号。',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'CodecName' => 
                                  array (
                                    'title' => '编码格式。',
                                    'description' => '编码格式。',
                                    'type' => 'string',
                                    'example' => 'aac',
                                  ),
                                  'CodecLongName' => 
                                  array (
                                    'title' => '编码格式名。',
                                    'description' => '编码格式名。',
                                    'type' => 'string',
                                    'example' => 'AAC (Advanced Audio Coding)',
                                  ),
                                  'CodecTimeBase' => 
                                  array (
                                    'title' => '编码器时间基。',
                                    'description' => '编码器时间基。',
                                    'type' => 'string',
                                    'example' => '1/44100',
                                  ),
                                  'CodecTagString' => 
                                  array (
                                    'title' => '编码器标签名。',
                                    'description' => '编码器标签名。',
                                    'type' => 'string',
                                    'example' => '[15][0][0][0]',
                                  ),
                                  'CodecTag' => 
                                  array (
                                    'title' => '编码器标签。',
                                    'description' => '编码器标签。',
                                    'type' => 'string',
                                    'example' => '0x000f',
                                  ),
                                  'SampleFmt' => 
                                  array (
                                    'title' => '采样格式。',
                                    'description' => '采样格式。',
                                    'type' => 'string',
                                    'example' => 'fltp',
                                  ),
                                  'SampleRate' => 
                                  array (
                                    'title' => '采样率（单位: Hz）。',
                                    'description' => '采样率（单位：Hz）。',
                                    'type' => 'string',
                                    'example' => '44100',
                                  ),
                                  'Channels' => 
                                  array (
                                    'title' => '声道数。',
                                    'description' => '声道数。',
                                    'type' => 'string',
                                    'example' => '2',
                                  ),
                                  'ChannelLayout' => 
                                  array (
                                    'title' => '声道布局。',
                                    'description' => '声道布局。',
                                    'type' => 'string',
                                    'example' => 'stereo',
                                  ),
                                  'Timebase' => 
                                  array (
                                    'title' => '时间基。',
                                    'description' => '时间基。',
                                    'type' => 'string',
                                    'example' => '1/90000',
                                  ),
                                  'StartTime' => 
                                  array (
                                    'title' => '开始时间。',
                                    'description' => '开始时间。',
                                    'type' => 'string',
                                    'example' => '1.473556',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '时长（单位: 秒）。',
                                    'description' => '时长（单位：秒）。',
                                    'type' => 'string',
                                    'example' => '403.039989',
                                  ),
                                  'Bitrate' => 
                                  array (
                                    'title' => '码率。',
                                    'description' => '码率。',
                                    'type' => 'string',
                                    'example' => '0.f',
                                  ),
                                  'Lang' => 
                                  array (
                                    'title' => '语言。',
                                    'description' => '语言。',
                                    'type' => 'string',
                                    'example' => 'cn',
                                  ),
                                ),
                              ),
                            ),
                            'VideoStreamInfoList' => 
                            array (
                              'title' => '视频流信息',
                              'description' => '视频流信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '视频流信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Index' => 
                                  array (
                                    'title' => '流序号。',
                                    'description' => '流序号。',
                                    'type' => 'string',
                                    'example' => '0',
                                  ),
                                  'Codec_name' => 
                                  array (
                                    'title' => '编码格式。',
                                    'description' => '编码格式。',
                                    'type' => 'string',
                                    'example' => 'h264',
                                  ),
                                  'Codec_long_name' => 
                                  array (
                                    'title' => '编码格式名。',
                                    'description' => '编码格式名。',
                                    'type' => 'string',
                                    'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                                  ),
                                  'Profile' => 
                                  array (
                                    'title' => '编码器预设。',
                                    'description' => '编码器预设。',
                                    'type' => 'string',
                                    'example' => 'High',
                                  ),
                                  'Codec_time_base' => 
                                  array (
                                    'description' => '编码时基。',
                                    'type' => 'string',
                                    'example' => '1/50',
                                  ),
                                  'Codec_tag_string' => 
                                  array (
                                    'title' => '编码格式标记文本。',
                                    'description' => '编码格式标记文本。',
                                    'type' => 'string',
                                    'example' => '[27][0][0][0]',
                                  ),
                                  'Codec_tag' => 
                                  array (
                                    'title' => '编码格式标记。',
                                    'description' => '编码格式标记。',
                                    'type' => 'string',
                                    'example' => '0x001b',
                                  ),
                                  'Width' => 
                                  array (
                                    'title' => '宽。',
                                    'description' => '宽。',
                                    'type' => 'string',
                                    'example' => '848',
                                  ),
                                  'Height' => 
                                  array (
                                    'title' => '高。',
                                    'description' => '高。',
                                    'type' => 'string',
                                    'example' => '478',
                                  ),
                                  'Has_b_frames' => 
                                  array (
                                    'title' => '是否有B帧。
取值: 
- 0: 没有 B 帧, 
- 1: 有一个 B 帧, 
- 2: 有多个连续 B 帧。',
                                    'description' => '是否有B帧。
取值：
- 0：没有 B 帧, 
- 1：有一个 B 帧, 
- 2：有多个连续 B 帧。',
                                    'type' => 'string',
                                    'example' => '2',
                                  ),
                                  'Sar' => 
                                  array (
                                    'title' => '采集点数宽高比。',
                                    'description' => '采集点数宽高比。',
                                    'type' => 'string',
                                    'example' => '478:477',
                                  ),
                                  'Dar' => 
                                  array (
                                    'title' => '图像显示宽高比。',
                                    'description' => '图像显示宽高比。',
                                    'type' => 'string',
                                    'example' => '16:9',
                                  ),
                                  'PixFmt' => 
                                  array (
                                    'title' => '颜色存储格式。',
                                    'description' => '颜色存储格式。',
                                    'type' => 'string',
                                    'example' => 'yuv420p',
                                  ),
                                  'Level' => 
                                  array (
                                    'title' => '编码等级。',
                                    'description' => '编码等级。',
                                    'type' => 'string',
                                    'example' => '31',
                                  ),
                                  'Fps' => 
                                  array (
                                    'title' => '帧率。',
                                    'description' => '帧率。',
                                    'type' => 'string',
                                    'example' => '25.0',
                                  ),
                                  'Avg_fps' => 
                                  array (
                                    'title' => '平均帧率。',
                                    'description' => '平均帧率。',
                                    'type' => 'string',
                                    'example' => '25.0',
                                  ),
                                  'Time_base' => 
                                  array (
                                    'title' => '时基。',
                                    'description' => '时基。',
                                    'type' => 'string',
                                    'example' => '1/90000',
                                  ),
                                  'Start_time' => 
                                  array (
                                    'title' => '起始时间。',
                                    'description' => '起始时间。',
                                    'type' => 'string',
                                    'example' => '1.473556',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '时长（单位: 秒）。',
                                    'description' => '时长（单位：秒）。',
                                    'type' => 'string',
                                    'example' => '403.039989',
                                  ),
                                  'Bit_rate' => 
                                  array (
                                    'title' => '码率。',
                                    'description' => '码率。',
                                    'type' => 'string',
                                    'example' => '888.563',
                                  ),
                                  'NumFrames' => 
                                  array (
                                    'title' => '总帧数。',
                                    'description' => '总帧数。',
                                    'type' => 'string',
                                    'example' => '10040',
                                  ),
                                  'Lang' => 
                                  array (
                                    'title' => '语言。',
                                    'description' => '语言。',
                                    'type' => 'string',
                                    'example' => 'cn',
                                  ),
                                  'Rotate' => 
                                  array (
                                    'title' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                                    'description' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                                    'type' => 'string',
                                    'example' => '0',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SubmitResultJson' => 
                        array (
                          'title' => '任务提交结果',
                          'description' => '任务提交结果。',
                          'type' => 'object',
                          'example' => '{}',
                        ),
                        'SubmitTime' => 
                        array (
                          'title' => '任务提交时间',
                          'description' => '任务提交时间。',
                          'type' => 'string',
                          'example' => '2022-01-12T08:49:41Z',
                        ),
                        'FinishTime' => 
                        array (
                          'title' => '任务结束时间',
                          'description' => '任务结束时间。',
                          'type' => 'string',
                          'example' => '2022-01-12T08:49:41Z',
                        ),
                        'RequestId' => 
                        array (
                          'title' => '提交任务时请求 ID',
                          'description' => '提交任务时请求 ID。',
                          'type' => 'string',
                          'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
                        ),
                      ),
                    ),
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '任务创建时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'Name' => 
                  array (
                    'title' => '任务名。',
                    'description' => '任务名。',
                    'type' => 'string',
                    'example' => 'transcode-job',
                  ),
                  'RequestId' => 
                  array (
                    'title' => '提交任务时请求 ID。',
                    'description' => '提交任务时请求 ID。',
                    'type' => 'string',
                    'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
                  ),
                  'ParentJobId' => 
                  array (
                    'title' => '主任务 ID。',
                    'description' => '主任务 ID。',
                    'type' => 'string',
                    'example' => '8b2198504dd340b7b3c9842a74fc9baa',
                  ),
                  'JobCount' => 
                  array (
                    'title' => '子任务数量。',
                    'description' => '子任务数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Status' => 
                  array (
                    'title' => '任务状态。 Success: 所有子任务完成后，有一个子任务则为成功, Fail: 所有子任务失败',
                    'description' => '任务状态。 

- Success: 所有子任务完成后，有一个子任务则为成功,。
- Fail: 所有子任务失败。',
                    'type' => 'string',
                    'example' => 'Success',
                  ),
                  'TriggerSource' => 
                  array (
                    'title' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                    'description' => '任务来源。

- API: API
- WorkFlow: 工作流
- Console: 控制台',
                    'type' => 'string',
                    'example' => 'API',
                  ),
                  'Percent' => 
                  array (
                    'title' => '任务完成百分比。',
                    'description' => '任务完成百分比。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'SubmitTime' => 
                  array (
                    'title' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务提交时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'FinishTime' => 
                  array (
                    'title' => '任务结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'InputGroup' => 
                  array (
                    'title' => '任务输入组。单输入时为转码任务，多输入时为合流任务。',
                    'description' => '任务输入组。单个输入为转码任务。多个输入为音视频合流任务。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '作业输入。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                          'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'Media' => 
                        array (
                          'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                          'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                          'type' => 'string',
                          'example' => 'oss://bucket/path/to/video.mp4',
                        ),
                      ),
                    ),
                  ),
                  'OutputGroup' => 
                  array (
                    'title' => '任务输出组。',
                    'description' => '任务输出组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务输出。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Output' => 
                        array (
                          'title' => '输出媒体配置',
                          'description' => '输出媒体配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'type' => 'string',
                              'example' => 'OSS',
                            ),
                            'Media' => 
                            array (
                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                              'description' => '媒体值：
      
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4',
                            ),
                            'OutputUrl' => 
                            array (
                              'description' => '输出流地址。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4
',
                            ),
                          ),
                        ),
                        'ProcessConfig' => 
                        array (
                          'title' => '任务处理配置',
                          'description' => '任务处理配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Transcode' => 
                            array (
                              'title' => '转码配置',
                              'description' => '转码配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'TemplateId' => 
                                array (
                                  'title' => '模板 ID。',
                                  'description' => '模板 ID。',
                                  'type' => 'string',
                                  'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                ),
                                'OverwriteParams' => 
                                array (
                                  'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                  'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Video' => 
                                    array (
                                      'title' => 'video 设置',
                                      'description' => 'video 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '编码格式',
                                          'description' => '编码格式。',
                                          'type' => 'string',
                                          'example' => 'H.264',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '编码级别。
         支持baseline、main、high。
         baseline：针对移动设备。
         main：针对标准分辨率设备。
         high：针对高分辨率设备。
         默认值：high。',
                                          'description' => '编码级别。
         支持baseline、main、high。
         
- baseline：针对移动设备。
- main：针对标准分辨率设备。
- high：针对高分辨率设备。

默认值：high。',
                                          'type' => 'string',
                                          'example' => 'Main',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '视频平均码率。
         取值范围：[10，50000]。
         单位：Kbps。',
                                          'description' => '视频平均码率。
         
- 取值范围：[10，50000]。
- 单位：Kbps。',
                                          'type' => 'string',
                                          'example' => '3000',
                                        ),
                                        'Crf' => 
                                        array (
                                          'title' => '码率-质量控制因子。
         取值范围：[0，51]。
         默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
         如果设置了Crf，则Bitrate的设置失效。',
                                          'description' => '码率-质量控制因子。
         
- 取值范围：[0，51]。
- 默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
- 如果设置了Crf，则Bitrate的设置失效。',
                                          'type' => 'string',
                                          'example' => '23',
                                        ),
                                        'Width' => 
                                        array (
                                          'title' => '宽。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始宽度。',
                                          'description' => '宽。
         
- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始宽度。',
                                          'type' => 'string',
                                          'example' => '1920',
                                        ),
                                        'Height' => 
                                        array (
                                          'title' => '高。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始高度。',
                                          'description' => '高。
         
- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始高度。',
                                          'type' => 'string',
                                          'example' => '1080',
                                        ),
                                        'Fps' => 
                                        array (
                                          'title' => '帧率。
         取值范围：(0,60]。
         当输入文件帧率超过60时取60。
         默认值：取输入文件帧率',
                                          'description' => '帧率。
         
- 取值范围：(0,60]。
- 当输入文件帧率超过60时取60。
- 默认值：取输入文件帧率。',
                                          'type' => 'string',
                                          'example' => '25',
                                        ),
                                        'Gop' => 
                                        array (
                                          'title' => '关键帧间最大帧数。
         取值范围：[1，1080000]。
         默认值：250。',
                                          'description' => '关键帧间最大帧数。
         
- 取值范围：[1，1080000]。
- 默认值：250。',
                                          'type' => 'string',
                                          'example' => '250',
                                        ),
                                        'Preset' => 
                                        array (
                                          'title' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'description' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                          'type' => 'string',
                                          'example' => 'medium',
                                        ),
                                        'ScanMode' => 
                                        array (
                                          'title' => '扫描模式。
支持interlaced、progressive。',
                                          'description' => '扫描模式。
支持interlaced、progressive。',
                                          'type' => 'string',
                                          'example' => 'progressive',
                                        ),
                                        'PixFmt' => 
                                        array (
                                          'title' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'description' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                          'type' => 'string',
                                          'example' => 'yuv420p',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否去掉视频',
                                          'description' => '是否去掉视频。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Crop' => 
                                        array (
                                          'title' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'Pad' => 
                                        array (
                                          'title' => '视频贴黑边
         参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                          'description' => '视频贴黑边参数
                  
- 格式：width:height:left:top。
- 示例：1280:800:0:140',
                                          'type' => 'string',
                                          'example' => '1280:800:0:140',
                                        ),
                                        'LongShortMode' => 
                                        array (
                                          'title' => '是否开启横竖屏自适应（即：长短边模式）',
                                          'description' => '是否开启横竖屏自适应（即：长短边模式）。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Bufsize' => 
                                        array (
                                          'title' => '缓冲区大小
          值范围：[1000，128000]
          默认值：6000
          单位：Kb',
                                          'description' => '缓冲区大小值

- 取值范围：[1000，128000]
- 默认值：6000
- 单位：Kb',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                        'Maxrate' => 
                                        array (
                                          'title' => '视频码率峰值
         值范围[10，50000]，单位Kbps。',
                                          'description' => '视频码率峰值

- 取值范围：[10，50000]
- 单位：Kbps。',
                                          'type' => 'string',
                                          'example' => '9000',
                                        ),
                                        'AbrMax' => 
                                        array (
                                          'title' => 'abr 最大码率(只有窄高1有效)
值范围[10，50000]，单位Kbps。',
                                          'description' => 'abr 最大码率（只有窄高1有效）值

- 取值范围：[10，50000]，
- 单位：Kbps。',
                                          'type' => 'string',
                                          'example' => '6000',
                                        ),
                                      ),
                                    ),
                                    'Audio' => 
                                    array (
                                      'title' => 'audio 设置',
                                      'description' => 'audio 设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Codec' => 
                                        array (
                                          'title' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'description' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                          'type' => 'string',
                                          'example' => 'AAC',
                                        ),
                                        'Profile' => 
                                        array (
                                          'title' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'description' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                          'type' => 'string',
                                          'example' => 'aac_low',
                                        ),
                                        'Samplerate' => 
                                        array (
                                          'title' => '采样率。
         默认值：44100
         支持22050、32000、44100、48000、96000，
         单位：Hz',
                                          'description' => '采样率。
         
- 默认值：44100
- 支持22050、32000、44100、48000、96000，
- 单位：Hz',
                                          'type' => 'string',
                                          'example' => '44100',
                                        ),
                                        'Bitrate' => 
                                        array (
                                          'title' => '输出文件的音频码率。
         值范围：[8，1000]
         单位：Kbps
         默认值：128',
                                          'description' => '输出文件的音频码率。
         
- 值范围：[8，1000]
- 单位：Kbps
- 默认值：128',
                                          'type' => 'string',
                                          'example' => '128',
                                        ),
                                        'Channels' => 
                                        array (
                                          'title' => '声道数。
         默认值：2',
                                          'description' => '声道数。
         默认值：2',
                                          'type' => 'string',
                                          'example' => '2',
                                        ),
                                        'Remove' => 
                                        array (
                                          'title' => '是否删除音频流。',
                                          'description' => '是否删除音频流。',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                        'Volume' => 
                                        array (
                                          'title' => '音量控制',
                                          'description' => '音量控制。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Method' => 
                                            array (
                                              'title' => '音量调整方式',
                                              'description' => '音量调整方式。',
                                              'type' => 'string',
                                              'example' => 'auto',
                                            ),
                                            'IntegratedLoudnessTarget' => 
                                            array (
                                              'title' => '目标音量',
                                              'description' => '目标音量。',
                                              'type' => 'string',
                                              'example' => '-6',
                                            ),
                                            'TruePeak' => 
                                            array (
                                              'title' => '最大峰值',
                                              'description' => '最大峰值。',
                                              'type' => 'string',
                                              'example' => '-1',
                                            ),
                                            'LoudnessRangeTarget' => 
                                            array (
                                              'title' => '音量范围',
                                              'description' => '音量范围。',
                                              'type' => 'string',
                                              'example' => '8',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'Container' => 
                                    array (
                                      'title' => '封装格式设置',
                                      'description' => '封装格式设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Format' => 
                                        array (
                                          'title' => '容器格式',
                                          'description' => '容器格式。',
                                          'type' => 'string',
                                          'example' => 'mp4',
                                        ),
                                      ),
                                    ),
                                    'MuxConfig' => 
                                    array (
                                      'title' => '封装设置',
                                      'description' => '封装设置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Segment' => 
                                        array (
                                          'title' => '切片设置',
                                          'description' => '切片设置。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Duration' => 
                                            array (
                                              'title' => '切片时长',
                                              'description' => '切片时长。',
                                              'type' => 'string',
                                              'example' => '10',
                                            ),
                                            'ForceSegTime' => 
                                            array (
                                              'title' => '强制切片时间点',
                                              'description' => '强制切片时间点。',
                                              'type' => 'string',
                                              'example' => '2,3',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    'TransConfig' => 
                                    array (
                                      'description' => '条件转码参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'TransMode' => 
                                        array (
                                          'description' => '视频转码模式。取值如下：

- onepass：一般用于ABR。编码速度较twopass更快。

- twopass：一般用于VBR。编码速度较onepass更慢。

- CBR：固定码率模式。

默认值：onepass。',
                                          'type' => 'string',
                                          'example' => 'onepass',
                                        ),
                                        'IsCheckReso' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，IsCheckResoFail优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，按输入视频分辨率转码。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckResoFail' => 
                                        array (
                                          'description' => '是否检查视频分辨率。IsCheckReso和IsCheckResoFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频分辨率（宽或高）小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrate' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，IsCheckVideoBitrateFail优先级更高。

- true：检查。当输入视频码率小于输出设置时，按输入视频码率转码。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckVideoBitrateFail' => 
                                        array (
                                          'description' => '是否检查视频码率。IsCheckVideoBitrate和IsCheckVideoBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入视频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrate' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，IsCheckAudioBitrateFail优先级更高。

- true：检查。当输入音频码率小于输出设置时，按输入音频码率转码。

- false：不检查。

默认值：

- 参数为空，并且codec和输入源不一样：false。

- 参数为空，并且codec和输入源一样：true。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'IsCheckAudioBitrateFail' => 
                                        array (
                                          'description' => '是否检查音频码率。IsCheckAudioBitrate和IsCheckAudioBitrateFail只支持二选一，本参数优先级更高。

- true：检查。当输入音频码率小于输出设置时，返回转码失败。

- false：不检查。

默认值：false。',
                                          'type' => 'string',
                                          'example' => 'true',
                                        ),
                                        'AdjDarMethod' => 
                                        array (
                                          'description' => '分辨率改写方式。当Width或Height都填写时才生效，可以和LongShortMode搭配使用。

可选值：rescale、crop、pad、none。

默认值：none。',
                                          'type' => 'string',
                                          'example' => 'none',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ImageWatermarks' => 
                            array (
                              'title' => '图片水印配置',
                              'description' => '图片水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '图片水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Width' => 
                                      array (
                                        'title' => '宽',
                                        'description' => '宽。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Height' => 
                                      array (
                                        'title' => '高',
                                        'description' => '高。',
                                        'type' => 'string',
                                        'example' => '32',
                                      ),
                                      'Dx' => 
                                      array (
                                        'title' => '水印位置，x',
                                        'description' => '水印位置，x。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Dy' => 
                                      array (
                                        'title' => '水印位置，y',
                                        'description' => '水印位置，y。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'ReferPos' => 
                                      array (
                                        'title' => '参考位置: TopLeft, TopRight, BottomLeft, BottomRight  default: TopLeft',
                                        'description' => '参考位置：TopLeft, TopRight, BottomLeft, BottomRight  default: TopLeft。',
                                        'type' => 'string',
                                        'example' => 'TopLeft',
                                      ),
                                      'Timeline' => 
                                      array (
                                        'title' => '显示时间设置',
                                        'description' => '显示时间设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Start' => 
                                          array (
                                            'title' => '开始时间',
                                            'description' => '开始时间。',
                                            'type' => 'string',
                                            'example' => '00:00:05',
                                          ),
                                          'Duration' => 
                                          array (
                                            'title' => '显示时长，秒数 或者 "ToEND"',
                                            'description' => '显示时长，秒数或者 "ToEND"。',
                                            'type' => 'string',
                                            'example' => 'ToEND',
                                          ),
                                        ),
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '水印图片文件',
                                        'description' => '水印图片文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
     
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'TextWatermarks' => 
                            array (
                              'title' => '文字水印配置',
                              'description' => '文字水印配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '文字水印配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Content' => 
                                      array (
                                        'title' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码',
                                        'description' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                        'type' => 'string',
                                        'example' => '测试水印',
                                      ),
                                      'FontName' => 
                                      array (
                                        'title' => '字体',
                                        'description' => '字体。',
                                        'type' => 'string',
                                        'example' => 'SimSun',
                                      ),
                                      'FontColor' => 
                                      array (
                                        'title' => '颜色',
                                        'description' => '颜色。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'FontAlpha' => 
                                      array (
                                        'title' => '透明度',
                                        'description' => '透明度。',
                                        'type' => 'string',
                                        'example' => '1.0',
                                      ),
                                      'Top' => 
                                      array (
                                        'title' => '水印位置，距离上边距离',
                                        'description' => '水印位置，距离上边距离。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'Left' => 
                                      array (
                                        'title' => '水印位置，距离左边距离',
                                        'description' => '水印位置，距离左边距离。',
                                        'type' => 'string',
                                        'example' => '10',
                                      ),
                                      'FontSize' => 
                                      array (
                                        'title' => '字体大小',
                                        'description' => '字体大小。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '16',
                                      ),
                                      'BorderWidth' => 
                                      array (
                                        'title' => '边框宽度',
                                        'description' => '边框宽度。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '0',
                                      ),
                                      'BorderColor' => 
                                      array (
                                        'title' => '边框颜色',
                                        'description' => '边框颜色。',
                                        'type' => 'string',
                                        'example' => '#006400',
                                      ),
                                      'Adaptive' => 
                                      array (
                                        'title' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                        'description' => '根据输出视频大小调整字体 size。 true / false, default: false。',
                                        'type' => 'string',
                                        'example' => 'false',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Subtitles' => 
                            array (
                              'title' => '字幕压制配置',
                              'description' => '字幕压制配置。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '字幕压制配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18d410',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Format' => 
                                      array (
                                        'title' => '字幕文件格式',
                                        'description' => '字幕文件格式。',
                                        'type' => 'string',
                                        'example' => 'vtt',
                                      ),
                                      'CharEnc' => 
                                      array (
                                        'title' => '文件 encoding 格式',
                                        'description' => '文件 encoding 格式。',
                                        'type' => 'string',
                                        'example' => 'UTF-8',
                                      ),
                                      'File' => 
                                      array (
                                        'title' => '字幕文件',
                                        'description' => '字幕文件。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Type' => 
                                          array (
                                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                            'type' => 'string',
                                            'example' => 'OSS',
                                          ),
                                          'Media' => 
                                          array (
                                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                            'description' => '媒体值：
     
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                            'type' => 'string',
                                            'example' => 'oss://bucket/path/to/video.mp4',
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Encryption' => 
                            array (
                              'title' => '加密配置。',
                              'description' => '加密配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'EncryptType' => 
                                array (
                                  'title' => '加密类型。',
                                  'description' => '加密类型。',
                                  'type' => 'string',
                                  'example' => 'PrivateEncryption',
                                ),
                                'CipherText' => 
                                array (
                                  'title' => '标准加密的密钥密文。',
                                  'description' => '标准加密的密钥密文。',
                                  'type' => 'string',
                                  'example' => 'MTYi00NDU0LTg5O****',
                                ),
                                'DecryptKeyUri' => 
                                array (
                                  'title' => '标准加密的解密服务地址。',
                                  'description' => '标准加密的解密服务地址。',
                                  'type' => 'string',
                                  'example' => 'https://sample.com/path?CipherText=MTYi00NDU0LTg5O****',
                                ),
                                'KeyServiceType' => 
                                array (
                                  'title' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'description' => '密钥服务类型。目前仅支持KMS和Base64',
                                  'type' => 'string',
                                  'example' => 'KMS',
                                ),
                              ),
                            ),
                            'CombineConfigs' => 
                            array (
                              'title' => '多输入合流配置',
                              'description' => '多输入合流配置',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'AudioIndex' => 
                                  array (
                                    'title' => '音频流Index',
                                    'description' => '音频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'VideoIndex' => 
                                  array (
                                    'title' => '视频流Index',
                                    'description' => '视频流Index',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '0 或 exclude',
                                  ),
                                  'Start' => 
                                  array (
                                    'title' => '输入流的开始时间。 默认为0',
                                    'description' => '输入流的开始时间。 默认为0',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '0.0',
                                  ),
                                  'Duration' => 
                                  array (
                                    'title' => '输入流的持续时间。 默认为视频时长。',
                                    'description' => '输入流的持续时间。 默认为视频时长。',
                                    'type' => 'number',
                                    'format' => 'double',
                                    'example' => '20.0',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'UserData' => 
                  array (
                    'title' => '用户数据。',
                    'description' => '用户数据。',
                    'type' => 'string',
                    'example' => 'user-data',
                  ),
                  'ScheduleConfig' => 
                  array (
                    'title' => '任务调度配置。',
                    'description' => '任务调度配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PipelineId' => 
                      array (
                        'title' => '管道 ID。',
                        'description' => '管道 ID。',
                        'type' => 'string',
                        'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                      ),
                      'Priority' => 
                      array (
                        'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'description' => '任务优先级。数字越大优先级越高，取值范围：1~10。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9EDC30DC-0050-5459-B788-F761B2BE359B\\",\\n  \\"TranscodeParentJob\\": {\\n    \\"TranscodeJobList\\": [\\n      {\\n        \\"CreateTime\\": \\"2022-01-12T08:49:41Z\\",\\n        \\"Name\\": \\"transcode-job\\",\\n        \\"ParentJobId\\": \\"8b2198504dd340b7b3c9842a74fc9baa\\",\\n        \\"JobId\\": \\"7d6a7e0d4db2457a8d45ff5d43e1bf0a\\",\\n        \\"JobIndex\\": 0,\\n        \\"InputGroup\\": [\\n          {\\n            \\"Type\\": \\"OSS\\",\\n            \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n            \\"InputUrl\\": \\"oss://bucket/path/to/video.mp4\\"\\n          }\\n        ],\\n        \\"ProcessConfig\\": {\\n          \\"Transcode\\": {\\n            \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n            \\"OverwriteParams\\": {\\n              \\"Video\\": {\\n                \\"Codec\\": \\"H.264\\",\\n                \\"Profile\\": \\"Main\\",\\n                \\"Bitrate\\": \\"3000\\",\\n                \\"Crf\\": \\"23\\",\\n                \\"Width\\": \\"1920\\",\\n                \\"Height\\": \\"1080\\",\\n                \\"Fps\\": \\"25\\",\\n                \\"Gop\\": \\"250\\",\\n                \\"Preset\\": \\"medium\\",\\n                \\"ScanMode\\": \\"progressive\\",\\n                \\"PixFmt\\": \\"yuv420p\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Crop\\": \\"1280:800:0:140\\",\\n                \\"Pad\\": \\"1280:800:0:140\\",\\n                \\"LongShortMode\\": \\"false\\",\\n                \\"Bufsize\\": \\"6000\\",\\n                \\"Maxrate\\": \\"9000\\",\\n                \\"AbrMax\\": \\"6000\\"\\n              },\\n              \\"Audio\\": {\\n                \\"Codec\\": \\"AAC\\",\\n                \\"Profile\\": \\"aac_low\\",\\n                \\"Samplerate\\": \\"44100\\",\\n                \\"Bitrate\\": \\"128\\",\\n                \\"Channels\\": \\"2\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Volume\\": {\\n                  \\"Method\\": \\"auto\\",\\n                  \\"IntegratedLoudnessTarget\\": \\"-6\\",\\n                  \\"TruePeak\\": \\"-1\\",\\n                  \\"LoudnessRangeTarget\\": \\"8\\"\\n                }\\n              },\\n              \\"Container\\": {\\n                \\"Format\\": \\"mp4\\"\\n              },\\n              \\"MuxConfig\\": {\\n                \\"Segment\\": {\\n                  \\"Duration\\": \\"10\\",\\n                  \\"ForceSegTime\\": \\"2,3\\"\\n                }\\n              },\\n              \\"TransConfig\\": {\\n                \\"TransMode\\": \\"onepass\\",\\n                \\"IsCheckReso\\": \\"true\\",\\n                \\"IsCheckResoFail\\": \\"true\\",\\n                \\"IsCheckVideoBitrate\\": \\"true\\",\\n                \\"IsCheckVideoBitrateFail\\": \\"true\\",\\n                \\"IsCheckAudioBitrate\\": \\"true\\",\\n                \\"IsCheckAudioBitrateFail\\": \\"true\\",\\n                \\"AdjDarMethod\\": \\"none\\"\\n              },\\n              \\"Tags\\": {\\n                \\"key\\": \\"\\"\\n              }\\n            }\\n          },\\n          \\"ImageWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Width\\": \\"32\\",\\n                \\"Height\\": \\"32\\",\\n                \\"Dx\\": \\"10\\",\\n                \\"Dy\\": \\"10\\",\\n                \\"ReferPos\\": \\"TopLeft\\",\\n                \\"Timeline\\": {\\n                  \\"Start\\": \\"00:00:05\\",\\n                  \\"Duration\\": \\"ToEND\\"\\n                },\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"TextWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Content\\": \\"测试水印\\",\\n                \\"FontName\\": \\"SimSun\\",\\n                \\"FontColor\\": \\"#006400\\",\\n                \\"FontAlpha\\": \\"1.0\\",\\n                \\"Top\\": \\"10\\",\\n                \\"Left\\": \\"10\\",\\n                \\"FontSize\\": 16,\\n                \\"BorderWidth\\": 0,\\n                \\"BorderColor\\": \\"#006400\\",\\n                \\"Adaptive\\": \\"false\\"\\n              }\\n            }\\n          ],\\n          \\"Subtitles\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Format\\": \\"vtt\\",\\n                \\"CharEnc\\": \\"UTF-8\\",\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"Encryption\\": {\\n            \\"EncryptType\\": \\"PrivateEncryption\\",\\n            \\"CipherText\\": \\"MTYi00NDU0LTg5O****\\",\\n            \\"DecryptKeyUri\\": \\"https://sample.com/path?CipherText=MTYi00NDU0LTg5O****\\",\\n            \\"KeyServiceType\\": \\"KMS\\"\\n          },\\n          \\"CombineConfigs\\": [\\n            {\\n              \\"AudioIndex\\": \\"0 或 exclude\\",\\n              \\"VideoIndex\\": \\"0 或 exclude\\",\\n              \\"Start\\": 0,\\n              \\"Duration\\": 20\\n            }\\n          ],\\n          \\"IsInheritTags\\": true\\n        },\\n        \\"Output\\": {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n          \\"OutputUrl\\": \\"oss://bucket/path/to/{MediaId}/{JobId}.mp4\\\\n\\"\\n        },\\n        \\"UserData\\": \\"user-data\\",\\n        \\"ScheduleConfig\\": {\\n          \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n          \\"Priority\\": 5\\n        },\\n        \\"Status\\": \\"Init\\",\\n        \\"OutFileMeta\\": {\\n          \\"FileBasicInfo\\": {\\n            \\"MediaId\\": \\"486c2890096871edba6f81848c016303\\",\\n            \\"FileName\\": \\"file.m3u8\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"31737\\",\\n            \\"FileUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"hls,applehttp\\",\\n            \\"Duration\\": \\"403.039999\\",\\n            \\"Bitrate\\": \\"888.563\\",\\n            \\"Width\\": \\"848\\",\\n            \\"Height\\": \\"478\\"\\n          },\\n          \\"AudioStreamInfoList\\": [\\n            {\\n              \\"Index\\": \\"1\\",\\n              \\"CodecName\\": \\"aac\\",\\n              \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n              \\"CodecTimeBase\\": \\"1/44100\\",\\n              \\"CodecTagString\\": \\"[15][0][0][0]\\",\\n              \\"CodecTag\\": \\"0x000f\\",\\n              \\"SampleFmt\\": \\"fltp\\",\\n              \\"SampleRate\\": \\"44100\\",\\n              \\"Channels\\": \\"2\\",\\n              \\"ChannelLayout\\": \\"stereo\\",\\n              \\"Timebase\\": \\"1/90000\\",\\n              \\"StartTime\\": \\"1.473556\\",\\n              \\"Duration\\": \\"403.039989\\",\\n              \\"Bitrate\\": \\"0.f\\",\\n              \\"Lang\\": \\"cn\\"\\n            }\\n          ],\\n          \\"VideoStreamInfoList\\": [\\n            {\\n              \\"Index\\": \\"0\\",\\n              \\"Codec_name\\": \\"h264\\",\\n              \\"Codec_long_name\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n              \\"Profile\\": \\"High\\",\\n              \\"Codec_time_base\\": \\"1/50\\",\\n              \\"Codec_tag_string\\": \\"[27][0][0][0]\\",\\n              \\"Codec_tag\\": \\"0x001b\\",\\n              \\"Width\\": \\"848\\",\\n              \\"Height\\": \\"478\\",\\n              \\"Has_b_frames\\": \\"2\\",\\n              \\"Sar\\": \\"478:477\\",\\n              \\"Dar\\": \\"16:9\\",\\n              \\"PixFmt\\": \\"yuv420p\\",\\n              \\"Level\\": \\"31\\",\\n              \\"Fps\\": \\"25.0\\",\\n              \\"Avg_fps\\": \\"25.0\\",\\n              \\"Time_base\\": \\"1/90000\\",\\n              \\"Start_time\\": \\"1.473556\\",\\n              \\"Duration\\": \\"403.039989\\",\\n              \\"Bit_rate\\": \\"888.563\\",\\n              \\"NumFrames\\": \\"10040\\",\\n              \\"Lang\\": \\"cn\\",\\n              \\"Rotate\\": \\"0\\"\\n            }\\n          ]\\n        },\\n        \\"SubmitResultJson\\": {},\\n        \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n        \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n        \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\"\\n      }\\n    ],\\n    \\"CreateTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"Name\\": \\"transcode-job\\",\\n    \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n    \\"ParentJobId\\": \\"8b2198504dd340b7b3c9842a74fc9baa\\",\\n    \\"JobCount\\": 1,\\n    \\"Status\\": \\"Success\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"Percent\\": 0,\\n    \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"InputGroup\\": [\\n      {\\n        \\"Type\\": \\"OSS\\",\\n        \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n      }\\n    ],\\n    \\"OutputGroup\\": [\\n      {\\n        \\"Output\\": {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n          \\"OutputUrl\\": \\"oss://bucket/path/to/video.mp4\\\\n\\"\\n        },\\n        \\"ProcessConfig\\": {\\n          \\"Transcode\\": {\\n            \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n            \\"OverwriteParams\\": {\\n              \\"Video\\": {\\n                \\"Codec\\": \\"H.264\\",\\n                \\"Profile\\": \\"Main\\",\\n                \\"Bitrate\\": \\"3000\\",\\n                \\"Crf\\": \\"23\\",\\n                \\"Width\\": \\"1920\\",\\n                \\"Height\\": \\"1080\\",\\n                \\"Fps\\": \\"25\\",\\n                \\"Gop\\": \\"250\\",\\n                \\"Preset\\": \\"medium\\",\\n                \\"ScanMode\\": \\"progressive\\",\\n                \\"PixFmt\\": \\"yuv420p\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Crop\\": \\"1280:800:0:140\\",\\n                \\"Pad\\": \\"1280:800:0:140\\",\\n                \\"LongShortMode\\": \\"false\\",\\n                \\"Bufsize\\": \\"6000\\",\\n                \\"Maxrate\\": \\"9000\\",\\n                \\"AbrMax\\": \\"6000\\"\\n              },\\n              \\"Audio\\": {\\n                \\"Codec\\": \\"AAC\\",\\n                \\"Profile\\": \\"aac_low\\",\\n                \\"Samplerate\\": \\"44100\\",\\n                \\"Bitrate\\": \\"128\\",\\n                \\"Channels\\": \\"2\\",\\n                \\"Remove\\": \\"false\\",\\n                \\"Volume\\": {\\n                  \\"Method\\": \\"auto\\",\\n                  \\"IntegratedLoudnessTarget\\": \\"-6\\",\\n                  \\"TruePeak\\": \\"-1\\",\\n                  \\"LoudnessRangeTarget\\": \\"8\\"\\n                }\\n              },\\n              \\"Container\\": {\\n                \\"Format\\": \\"mp4\\"\\n              },\\n              \\"MuxConfig\\": {\\n                \\"Segment\\": {\\n                  \\"Duration\\": \\"10\\",\\n                  \\"ForceSegTime\\": \\"2,3\\"\\n                }\\n              },\\n              \\"TransConfig\\": {\\n                \\"TransMode\\": \\"onepass\\",\\n                \\"IsCheckReso\\": \\"true\\",\\n                \\"IsCheckResoFail\\": \\"true\\",\\n                \\"IsCheckVideoBitrate\\": \\"true\\",\\n                \\"IsCheckVideoBitrateFail\\": \\"true\\",\\n                \\"IsCheckAudioBitrate\\": \\"true\\",\\n                \\"IsCheckAudioBitrateFail\\": \\"true\\",\\n                \\"AdjDarMethod\\": \\"none\\"\\n              }\\n            }\\n          },\\n          \\"ImageWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Width\\": \\"32\\",\\n                \\"Height\\": \\"32\\",\\n                \\"Dx\\": \\"10\\",\\n                \\"Dy\\": \\"10\\",\\n                \\"ReferPos\\": \\"TopLeft\\",\\n                \\"Timeline\\": {\\n                  \\"Start\\": \\"00:00:05\\",\\n                  \\"Duration\\": \\"ToEND\\"\\n                },\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"TextWatermarks\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Content\\": \\"测试水印\\",\\n                \\"FontName\\": \\"SimSun\\",\\n                \\"FontColor\\": \\"#006400\\",\\n                \\"FontAlpha\\": \\"1.0\\",\\n                \\"Top\\": \\"10\\",\\n                \\"Left\\": \\"10\\",\\n                \\"FontSize\\": 16,\\n                \\"BorderWidth\\": 0,\\n                \\"BorderColor\\": \\"#006400\\",\\n                \\"Adaptive\\": \\"false\\"\\n              }\\n            }\\n          ],\\n          \\"Subtitles\\": [\\n            {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18d410\\",\\n              \\"OverwriteParams\\": {\\n                \\"Format\\": \\"vtt\\",\\n                \\"CharEnc\\": \\"UTF-8\\",\\n                \\"File\\": {\\n                  \\"Type\\": \\"OSS\\",\\n                  \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                }\\n              }\\n            }\\n          ],\\n          \\"Encryption\\": {\\n            \\"EncryptType\\": \\"PrivateEncryption\\",\\n            \\"CipherText\\": \\"MTYi00NDU0LTg5O****\\",\\n            \\"DecryptKeyUri\\": \\"https://sample.com/path?CipherText=MTYi00NDU0LTg5O****\\",\\n            \\"KeyServiceType\\": \\"KMS\\"\\n          },\\n          \\"CombineConfigs\\": [\\n            {\\n              \\"AudioIndex\\": \\"0 或 exclude\\",\\n              \\"VideoIndex\\": \\"0 或 exclude\\",\\n              \\"Start\\": 0,\\n              \\"Duration\\": 20\\n            }\\n          ]\\n        }\\n      }\\n    ],\\n    \\"UserData\\": \\"user-data\\",\\n    \\"ScheduleConfig\\": {\\n      \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n      \\"Priority\\": 5\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '查询转码任务',
      'summary' => '查询单个转码任务详情。',
    ),
    'ListTranscodeJobs' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务创建时间筛选条件的起始时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '任务创建时间筛选条件的起始时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务创建时间筛选条件的结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '任务创建时间筛选条件的结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-15T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'ParentJobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '按 jobId 筛选。',
            'description' => '按 jobId 筛选。',
            'type' => 'string',
            'required' => false,
            'example' => '7b38a5d86f1e47838927b6e7ccb1****',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
            'description' => '任务状态 
- Init: 已提交。
- Success: 成功。
- Fail: 失败。',
            'type' => 'string',
            'required' => false,
            'example' => 'Success',
          ),
        ),
        4 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序顺序。目前只支持两种：CreateTimeDesc: 按创建时间降序 和 CreateTimeAsc: 按创建时间升序',
            'description' => '排序顺序。目前只支持两种：
- CreateTimeDesc：按创建时间降序和。
- CreateTimeAsc：按创建时间升序。',
            'type' => 'string',
            'required' => false,
            'example' => 'CreateTimeDesc',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小。范围: 0~100，默认值：20。',
            'description' => '分页大小。范围：0~100，默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连续分页查询时下一页的标记 (第一页没有)。',
            'description' => '连续分页查询时下一页的标记（第一页没有）',
            'type' => 'string',
            'required' => false,
            'example' => 'ab4802364a2e49208c99efab82df****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 id',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'Jobs' => 
              array (
                'description' => '任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '任务信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreateTime' => 
                    array (
                      'title' => '任务创建时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                      'description' => '任务创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                      'type' => 'string',
                      'example' => '2022-01-12T08:49:41Z',
                    ),
                    'Name' => 
                    array (
                      'title' => '任务名。',
                      'description' => '任务名。',
                      'type' => 'string',
                      'example' => 'transcode-job',
                    ),
                    'RequestId' => 
                    array (
                      'title' => '提交任务时请求 ID。',
                      'description' => '提交任务时请求 ID。',
                      'type' => 'string',
                      'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
                    ),
                    'ParentJobId' => 
                    array (
                      'title' => '主任务 ID。',
                      'description' => '主任务 ID。',
                      'type' => 'string',
                      'example' => '8b2198504dd340b7b3c9842a74fc****',
                    ),
                    'JobCount' => 
                    array (
                      'title' => '子任务数量。',
                      'description' => '子任务数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Status' => 
                    array (
                      'title' => '任务状态。 Success: 所有子任务完成后，有一个子任务则为成功, Fail: 所有子任务失败',
                      'description' => '任务状态。 
- Success: 所有子任务完成后，有一个子任务则为成功。 
- Fail: 所有子任务失败。',
                      'type' => 'string',
                      'example' => 'Success',
                    ),
                    'TriggerSource' => 
                    array (
                      'title' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                      'description' => '任务来源。 

- API: API。
- WorkFlow: 工作流, 
- Console: 控制台。',
                      'type' => 'string',
                      'example' => 'API',
                    ),
                    'Percent' => 
                    array (
                      'title' => '任务完成百分比。',
                      'description' => '任务完成百分比。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'SubmitTime' => 
                    array (
                      'title' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                      'description' => '任务提交时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                      'type' => 'string',
                      'example' => '2022-01-12T08:49:41Z',
                    ),
                    'FinishTime' => 
                    array (
                      'title' => '任务结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                      'description' => '任务结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                      'type' => 'string',
                      'example' => '2022-01-12T08:49:41Z',
                    ),
                    'InputGroup' => 
                    array (
                      'title' => '任务输入组。单输入时为转码任务，多输入时为合流任务。',
                      'description' => '任务输入组。单个输入为转码任务。多个输入为音视频合流任务。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '任务输入。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Type' => 
                          array (
                            'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                            'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                            'type' => 'string',
                            'example' => 'OSS',
                          ),
                          'Media' => 
                          array (
                            'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                            'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                            'type' => 'string',
                            'example' => 'oss://bucket/path/to/video.mp4',
                          ),
                          'InputUrl' => 
                          array (
                            'description' => '媒资流地址，只有当对媒资流进行转码时填写此参数。',
                            'type' => 'string',
                            'example' => 'oss://bucket/path/to/video.mp4',
                          ),
                        ),
                      ),
                    ),
                    'OutputGroup' => 
                    array (
                      'title' => '任务输出组。',
                      'description' => '任务输出组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '任务输出。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Output' => 
                          array (
                            'title' => '输出媒体配置',
                            'description' => '输出媒体配置',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Type' => 
                              array (
                                'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                'type' => 'string',
                                'example' => 'OSS',
                              ),
                              'Media' => 
                              array (
                                'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                'type' => 'string',
                                'example' => 'oss://bucket/path/to/video.mp4',
                              ),
                              'OutputUrl' => 
                              array (
                                'description' => '转码输出流地址，仅当输出到媒资流时需要填此参数',
                                'type' => 'string',
                                'example' => 'oss://bucket/path/to/{MediaId}/{JobId}.mp4',
                              ),
                            ),
                          ),
                          'ProcessConfig' => 
                          array (
                            'title' => '任务处理配置',
                            'description' => '任务处理配置。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Transcode' => 
                              array (
                                'title' => '转码配置',
                                'description' => '转码配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TemplateId' => 
                                  array (
                                    'title' => '模板 ID。',
                                    'description' => '模板 ID。',
                                    'type' => 'string',
                                    'example' => '9547c6ad97cb4f2aaa29683ebd18****',
                                  ),
                                  'OverwriteParams' => 
                                  array (
                                    'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                    'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Video' => 
                                      array (
                                        'title' => 'video 设置',
                                        'description' => 'video 设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Codec' => 
                                          array (
                                            'title' => '编码格式',
                                            'description' => '编码格式。',
                                            'type' => 'string',
                                            'example' => 'H.264',
                                          ),
                                          'Profile' => 
                                          array (
                                            'title' => '编码级别。
         支持baseline、main、high。
         baseline：针对移动设备。
         main：针对标准分辨率设备。
         high：针对高分辨率设备。
         默认值：high。',
                                            'description' => '编码级别。支持baseline、main、high。
- baseline：针对移动设备。
- main：针对标准分辨率设备。
- high：针对高分辨率设备。

默认值：high。',
                                            'type' => 'string',
                                            'example' => 'Main',
                                          ),
                                          'Bitrate' => 
                                          array (
                                            'title' => '视频平均码率。
         取值范围：[10，50000]。
         单位：Kbps。',
                                            'description' => '视频平均码率。

- 取值范围：[10，50000]。
- 单位：Kbps。',
                                            'type' => 'string',
                                            'example' => '3000',
                                          ),
                                          'Crf' => 
                                          array (
                                            'title' => '码率-质量控制因子。
         取值范围：[0，51]。
         默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。
         如果设置了Crf，则Bitrate的设置失效。',
                                            'description' => '码率-质量控制因子。

- 取值范围：[0，51]。
- 默认值：编码格式为H264，默认值为23。编码格式为H265，默认值为26。

如果设置了Crf，则Bitrate的设置失效。',
                                            'type' => 'string',
                                            'example' => '23',
                                          ),
                                          'Width' => 
                                          array (
                                            'title' => '宽。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始宽度。',
                                            'description' => '宽。

- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始宽度。',
                                            'type' => 'string',
                                            'example' => '1920',
                                          ),
                                          'Height' => 
                                          array (
                                            'title' => '高。
         取值范围：[128,4096]。
         单位：px。
         默认值：视频原始高度。',
                                            'description' => '高。

- 取值范围：[128,4096]。
- 单位：px。
- 默认值：视频原始高度。',
                                            'type' => 'string',
                                            'example' => '1080',
                                          ),
                                          'Fps' => 
                                          array (
                                            'title' => '帧率。
         取值范围：(0,60]。
         当输入文件帧率超过60时取60。
         默认值：取输入文件帧率',
                                            'description' => '帧率。

- 取值范围：(0,60]。
- 当输入文件帧率超过60时取60。
- 默认值：取输入文件帧率。',
                                            'type' => 'string',
                                            'example' => '25',
                                          ),
                                          'Gop' => 
                                          array (
                                            'title' => '关键帧间最大帧数。
         取值范围：[1，1080000]。
         默认值：250。',
                                            'description' => '关键帧间最大帧数。

- 取值范围：[1，1080000]。
- 默认值：250。',
                                            'type' => 'string',
                                            'example' => '250',
                                          ),
                                          'Preset' => 
                                          array (
                                            'title' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                            'description' => '视频算法器预置。只有H264支持该参数。
支持veryfast、fast、medium、slow、slower。
默认值：medium。',
                                            'type' => 'string',
                                            'example' => 'medium',
                                          ),
                                          'ScanMode' => 
                                          array (
                                            'title' => '扫描模式。
支持interlaced、progressive。',
                                            'description' => '扫描模式。
支持interlaced、progressive。',
                                            'type' => 'string',
                                            'example' => 'progressive',
                                          ),
                                          'PixFmt' => 
                                          array (
                                            'title' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                            'description' => '视频颜色格式。
         范围：yuv420p，yuvj420p等标准颜色格式。',
                                            'type' => 'string',
                                            'example' => 'yuv420p',
                                          ),
                                          'Remove' => 
                                          array (
                                            'title' => '是否去掉视频',
                                            'description' => '是否去掉视频。',
                                            'type' => 'string',
                                            'example' => 'false',
                                          ),
                                          'Crop' => 
                                          array (
                                            'title' => '视频画面裁切
         支持2种方式。
         自动检测黑边并裁切，设置为“border”
         自定义裁切，参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                            'description' => '视频画面裁切。
         支持2种方式。
         
- 自动检测黑边并裁切，设置为“border”
- 自定义裁切，参数格式：width:height:left:top。
        示例：1280:800:0:140',
                                            'type' => 'string',
                                            'example' => '1280:800:0:140',
                                          ),
                                          'Pad' => 
                                          array (
                                            'title' => '视频贴黑边
         参数格式：width:height:left:top。
         示例：1280:800:0:140',
                                            'description' => '视频贴黑边。

- 参数格式：width:height:left:top。
- 示例：1280:800:0:140',
                                            'type' => 'string',
                                            'example' => '1280:800:0:140',
                                          ),
                                          'LongShortMode' => 
                                          array (
                                            'title' => '是否开启横竖屏自适应（即：长短边模式）',
                                            'description' => '是否开启横竖屏自适应（即：长短边模式）',
                                            'type' => 'string',
                                            'example' => 'false',
                                          ),
                                          'Bufsize' => 
                                          array (
                                            'title' => '缓冲区大小
          值范围：[1000，128000]
          默认值：6000
          单位：Kb',
                                            'description' => '缓冲区大小。

- 值范围：[1000，128000]
- 默认值：6000
- 单位：Kb',
                                            'type' => 'string',
                                            'example' => '6000',
                                          ),
                                          'Maxrate' => 
                                          array (
                                            'title' => '视频码率峰值
         值范围[10，50000]，单位Kbps。',
                                            'description' => '视频码率峰值。
         值范围[10，50000]，单位Kbps。',
                                            'type' => 'string',
                                            'example' => '9000',
                                          ),
                                          'AbrMax' => 
                                          array (
                                            'title' => 'abr 最大码率(只有窄高1有效)
值范围[10，50000]，单位Kbps。',
                                            'description' => 'abr 最大码率（只有窄高1有效）
值范围[10，50000]，单位Kbps。',
                                            'type' => 'string',
                                            'example' => '6000',
                                          ),
                                        ),
                                      ),
                                      'Audio' => 
                                      array (
                                        'title' => 'audio 设置',
                                        'description' => 'audio 设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Codec' => 
                                          array (
                                            'title' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                            'description' => '音频编解码格式，AAC、MP3、VORBIS、FLAC。
         默认值：AAC',
                                            'type' => 'string',
                                            'example' => 'AAC',
                                          ),
                                          'Profile' => 
                                          array (
                                            'title' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                            'description' => '音频编码预置。
         当Codec为 AAC时，范围aac_low、aac_he、aac_he_v2、aac_ld、aac_eld。',
                                            'type' => 'string',
                                            'example' => 'aac_low',
                                          ),
                                          'Samplerate' => 
                                          array (
                                            'title' => '采样率。
         默认值：44100
         支持22050、32000、44100、48000、96000，
         单位：Hz',
                                            'description' => '采样率。

- 默认值：44100
- 支持22050、32000、44100、48000、96000，
- 单位：Hz',
                                            'type' => 'string',
                                            'example' => '44100',
                                          ),
                                          'Bitrate' => 
                                          array (
                                            'title' => '输出文件的音频码率。
         值范围：[8，1000]
         单位：Kbps
         默认值：128',
                                            'description' => '输出文件的音频码率。

- 值范围：[8，1000]
- 单位：Kbps
- 默认值：128',
                                            'type' => 'string',
                                            'example' => '128',
                                          ),
                                          'Channels' => 
                                          array (
                                            'title' => '声道数。
         默认值：2',
                                            'description' => '声道数。
         默认值：2',
                                            'type' => 'string',
                                            'example' => '2',
                                          ),
                                          'Remove' => 
                                          array (
                                            'title' => '是否删除音频流。',
                                            'description' => '是否删除音频流。',
                                            'type' => 'string',
                                            'example' => 'false',
                                          ),
                                          'Volume' => 
                                          array (
                                            'title' => '音量控制',
                                            'description' => '音量控制。',
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'Method' => 
                                              array (
                                                'title' => '音量调整方式',
                                                'description' => '音量调整方式。',
                                                'type' => 'string',
                                                'example' => 'auto',
                                              ),
                                              'IntegratedLoudnessTarget' => 
                                              array (
                                                'title' => '目标音量',
                                                'description' => '目标音量。',
                                                'type' => 'string',
                                                'example' => '-6',
                                              ),
                                              'TruePeak' => 
                                              array (
                                                'title' => '最大峰值',
                                                'description' => '最大峰值。',
                                                'type' => 'string',
                                                'example' => '-1',
                                              ),
                                              'LoudnessRangeTarget' => 
                                              array (
                                                'title' => '音量范围',
                                                'description' => '音量范围。',
                                                'type' => 'string',
                                                'example' => '8',
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                      'Container' => 
                                      array (
                                        'title' => '封装格式设置',
                                        'description' => '封装格式设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Format' => 
                                          array (
                                            'title' => '容器格式',
                                            'description' => '容器格式。',
                                            'type' => 'string',
                                            'example' => 'mp4',
                                          ),
                                        ),
                                      ),
                                      'MuxConfig' => 
                                      array (
                                        'title' => '封装设置',
                                        'description' => '封装设置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Segment' => 
                                          array (
                                            'title' => '切片设置',
                                            'description' => '切片设置。',
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'Duration' => 
                                              array (
                                                'title' => '切片时长',
                                                'description' => '切片时长。',
                                                'type' => 'string',
                                                'example' => '10',
                                              ),
                                              'ForceSegTime' => 
                                              array (
                                                'title' => '强制切片时间点',
                                                'description' => '强制切片时间点。',
                                                'type' => 'string',
                                                'example' => '2,3',
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                      'Tags' => 
                                      array (
                                        'type' => 'object',
                                        'additionalProperties' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                              'ImageWatermarks' => 
                              array (
                                'title' => '图片水印配置',
                                'description' => '图片水印配置。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '图片水印配置。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'TemplateId' => 
                                    array (
                                      'title' => '模板 ID。',
                                      'description' => '模板 ID。',
                                      'type' => 'string',
                                      'example' => '9547c6ad97cb4f2aaa29683ebd18****',
                                    ),
                                    'OverwriteParams' => 
                                    array (
                                      'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                      'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Width' => 
                                        array (
                                          'title' => '宽',
                                          'description' => '宽。',
                                          'type' => 'string',
                                          'example' => '32',
                                        ),
                                        'Height' => 
                                        array (
                                          'title' => '高',
                                          'description' => '高。',
                                          'type' => 'string',
                                          'example' => '32',
                                        ),
                                        'Dx' => 
                                        array (
                                          'title' => '水印位置，x',
                                          'description' => '水印位置，x',
                                          'type' => 'string',
                                          'example' => '10',
                                        ),
                                        'Dy' => 
                                        array (
                                          'title' => '水印位置，y',
                                          'description' => '水印位置，y',
                                          'type' => 'string',
                                          'example' => '10',
                                        ),
                                        'ReferPos' => 
                                        array (
                                          'title' => '参考位置: TopLeft, TopRight, BottomLeft, BottomRight  default: TopLeft',
                                          'description' => '参考位置：TopLeft, TopRight, BottomLeft, BottomRight  default: TopLeft',
                                          'type' => 'string',
                                          'example' => 'TopLeft',
                                        ),
                                        'Timeline' => 
                                        array (
                                          'title' => '显示时间设置',
                                          'description' => '显示时间设置。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Start' => 
                                            array (
                                              'title' => '开始时间',
                                              'description' => '开始时间。',
                                              'type' => 'string',
                                              'example' => '00:00:05',
                                            ),
                                            'Duration' => 
                                            array (
                                              'title' => '显示时长，秒数 或者 "ToEND"',
                                              'description' => '显示时长，秒数或者 "ToEND"',
                                              'type' => 'string',
                                              'example' => 'ToEND',
                                            ),
                                          ),
                                        ),
                                        'File' => 
                                        array (
                                          'title' => '水印图片文件',
                                          'description' => '水印图片文件。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Type' => 
                                            array (
                                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                              'type' => 'string',
                                              'example' => 'OSS',
                                            ),
                                            'Media' => 
                                            array (
                                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                              'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                              'type' => 'string',
                                              'example' => 'oss://bucket/path/to/video.mp4',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                              'TextWatermarks' => 
                              array (
                                'title' => '文字水印配置',
                                'description' => '文字水印配置。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '文字水印配置。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'TemplateId' => 
                                    array (
                                      'title' => '模板 ID。',
                                      'description' => '模板 ID。',
                                      'type' => 'string',
                                      'example' => '9547c6ad97cb4f2aaa29683ebd18****',
                                    ),
                                    'OverwriteParams' => 
                                    array (
                                      'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                      'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Content' => 
                                        array (
                                          'title' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码',
                                          'description' => '水印文本，不需要 base64 encode，字符串需要 utf-8 编码。',
                                          'type' => 'string',
                                          'example' => '测试水印',
                                        ),
                                        'FontName' => 
                                        array (
                                          'title' => '字体',
                                          'description' => '字体。',
                                          'type' => 'string',
                                          'example' => 'SimSun',
                                        ),
                                        'FontColor' => 
                                        array (
                                          'title' => '颜色',
                                          'description' => '颜色。',
                                          'type' => 'string',
                                          'example' => '#006400',
                                        ),
                                        'FontAlpha' => 
                                        array (
                                          'title' => '透明度',
                                          'description' => '透明度。',
                                          'type' => 'string',
                                          'example' => '1.0',
                                        ),
                                        'Top' => 
                                        array (
                                          'title' => '水印位置，距离上边距离',
                                          'description' => '水印位置，距离上边距离。',
                                          'type' => 'string',
                                          'example' => '10',
                                        ),
                                        'Left' => 
                                        array (
                                          'title' => '水印位置，距离左边距离',
                                          'description' => '水印位置，距离左边距离。',
                                          'type' => 'string',
                                          'example' => '10',
                                        ),
                                        'FontSize' => 
                                        array (
                                          'title' => '字体大小',
                                          'description' => '字体大小。',
                                          'type' => 'integer',
                                          'format' => 'int32',
                                          'example' => '16',
                                        ),
                                        'BorderWidth' => 
                                        array (
                                          'title' => '边框宽度',
                                          'description' => '边框宽度。',
                                          'type' => 'integer',
                                          'format' => 'int32',
                                          'example' => '0',
                                        ),
                                        'BorderColor' => 
                                        array (
                                          'title' => '边框颜色',
                                          'description' => '边框颜色。',
                                          'type' => 'string',
                                          'example' => '#006400',
                                        ),
                                        'Adaptive' => 
                                        array (
                                          'title' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                          'description' => '根据输出视频大小调整字体 size。 true / false, default: false',
                                          'type' => 'string',
                                          'example' => 'false',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                              'Subtitles' => 
                              array (
                                'title' => '字幕压制配置',
                                'description' => '字幕压制配置。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '字幕压制配置。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'TemplateId' => 
                                    array (
                                      'title' => '模板 ID。',
                                      'description' => '模板 ID。',
                                      'type' => 'string',
                                      'example' => '9547c6ad97cb4f2aaa29683ebd18****',
                                    ),
                                    'OverwriteParams' => 
                                    array (
                                      'title' => '覆盖参数, 若填写会覆盖模板对应参数',
                                      'description' => '覆盖参数, 若填写会覆盖模板对应参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Format' => 
                                        array (
                                          'title' => '字幕文件格式',
                                          'description' => '字幕文件格式。',
                                          'type' => 'string',
                                          'example' => 'vtt',
                                        ),
                                        'CharEnc' => 
                                        array (
                                          'title' => '文件 encoding 格式',
                                          'description' => '文件 encoding 格式。',
                                          'type' => 'string',
                                          'example' => 'UTF-8',
                                        ),
                                        'File' => 
                                        array (
                                          'title' => '字幕文件',
                                          'description' => '字幕文件。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Type' => 
                                            array (
                                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                              'type' => 'string',
                                              'example' => 'OSS',
                                            ),
                                            'Media' => 
                                            array (
                                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                              'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                              'type' => 'string',
                                              'example' => 'oss://bucket/path/to/video.mp4',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                              'Encryption' => 
                              array (
                                'title' => '加密配置。',
                                'description' => '加密配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'EncryptType' => 
                                  array (
                                    'title' => '加密类型。',
                                    'description' => '加密类型。',
                                    'type' => 'string',
                                    'example' => 'PrivateEncryption',
                                  ),
                                  'CipherText' => 
                                  array (
                                    'title' => '标准加密的密钥密文。',
                                    'description' => '标准加密的密钥密文。',
                                    'type' => 'string',
                                    'example' => 'MTYi00NDU0LTg5O****',
                                  ),
                                  'DecryptKeyUri' => 
                                  array (
                                    'title' => '标准加密的解密服务地址。',
                                    'description' => '标准加密的解密服务地址。',
                                    'type' => 'string',
                                    'example' => 'https://sample.com/path?CipherText=MTYi00NDU0LTg5O****',
                                  ),
                                ),
                              ),
                              'CombineConfigs' => 
                              array (
                                'title' => '多输入合流配置',
                                'description' => '多输入合流配置',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'AudioIndex' => 
                                    array (
                                      'title' => '音频流Index',
                                      'description' => '音频流Index',
                                      'type' => 'string',
                                      'required' => true,
                                      'example' => '0 或 exclude',
                                    ),
                                    'VideoIndex' => 
                                    array (
                                      'title' => '视频流Index',
                                      'description' => '视频流Index',
                                      'type' => 'string',
                                      'required' => true,
                                      'example' => '0 或 exclude',
                                    ),
                                    'Start' => 
                                    array (
                                      'title' => '输入流的开始时间。 默认为0',
                                      'description' => '输入流的开始时间。 默认为0',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '0.0',
                                    ),
                                    'Duration' => 
                                    array (
                                      'title' => '输入流的持续时间。 默认为视频时长。',
                                      'description' => '输入流的持续时间。 默认为视频时长。',
                                      'type' => 'number',
                                      'format' => 'double',
                                      'example' => '20.0',
                                    ),
                                  ),
                                ),
                              ),
                              'IsInheritTags' => 
                              array (
                                'description' => '是否继承输入流的 tag。 当输入不是媒资是该参数不生效。 默认值：false',
                                'type' => 'boolean',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'UserData' => 
                    array (
                      'title' => '用户数据。',
                      'description' => '用户数据。',
                      'type' => 'string',
                      'example' => 'user-data',
                    ),
                    'ScheduleConfig' => 
                    array (
                      'title' => '任务调度配置。',
                      'description' => '任务调度配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PipelineId' => 
                        array (
                          'title' => '管道 ID。',
                          'description' => '管道 ID。',
                          'type' => 'string',
                          'example' => 'e37ebee5d98b4781897f6086e89f****',
                        ),
                        'Priority' => 
                        array (
                          'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                          'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'NextPageToken' => 
              array (
                'title' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
                'description' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
                'type' => 'string',
                'example' => '019daf5780f74831b0e1a767c9f1****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"Jobs\\": [\\n    {\\n      \\"CreateTime\\": \\"2022-01-12T08:49:41Z\\",\\n      \\"Name\\": \\"transcode-job\\",\\n      \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n      \\"ParentJobId\\": \\"8b2198504dd340b7b3c9842a74fc****\\",\\n      \\"JobCount\\": 1,\\n      \\"Status\\": \\"Success\\",\\n      \\"TriggerSource\\": \\"API\\",\\n      \\"Percent\\": 0,\\n      \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n      \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n      \\"InputGroup\\": [\\n        {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n          \\"InputUrl\\": \\"oss://bucket/path/to/video.mp4\\"\\n        }\\n      ],\\n      \\"OutputGroup\\": [\\n        {\\n          \\"Output\\": {\\n            \\"Type\\": \\"OSS\\",\\n            \\"Media\\": \\"oss://bucket/path/to/video.mp4\\",\\n            \\"OutputUrl\\": \\"oss://bucket/path/to/{MediaId}/{JobId}.mp4\\"\\n          },\\n          \\"ProcessConfig\\": {\\n            \\"Transcode\\": {\\n              \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18****\\",\\n              \\"OverwriteParams\\": {\\n                \\"Video\\": {\\n                  \\"Codec\\": \\"H.264\\",\\n                  \\"Profile\\": \\"Main\\",\\n                  \\"Bitrate\\": \\"3000\\",\\n                  \\"Crf\\": \\"23\\",\\n                  \\"Width\\": \\"1920\\",\\n                  \\"Height\\": \\"1080\\",\\n                  \\"Fps\\": \\"25\\",\\n                  \\"Gop\\": \\"250\\",\\n                  \\"Preset\\": \\"medium\\",\\n                  \\"ScanMode\\": \\"progressive\\",\\n                  \\"PixFmt\\": \\"yuv420p\\",\\n                  \\"Remove\\": \\"false\\",\\n                  \\"Crop\\": \\"1280:800:0:140\\",\\n                  \\"Pad\\": \\"1280:800:0:140\\",\\n                  \\"LongShortMode\\": \\"false\\",\\n                  \\"Bufsize\\": \\"6000\\",\\n                  \\"Maxrate\\": \\"9000\\",\\n                  \\"AbrMax\\": \\"6000\\"\\n                },\\n                \\"Audio\\": {\\n                  \\"Codec\\": \\"AAC\\",\\n                  \\"Profile\\": \\"aac_low\\",\\n                  \\"Samplerate\\": \\"44100\\",\\n                  \\"Bitrate\\": \\"128\\",\\n                  \\"Channels\\": \\"2\\",\\n                  \\"Remove\\": \\"false\\",\\n                  \\"Volume\\": {\\n                    \\"Method\\": \\"auto\\",\\n                    \\"IntegratedLoudnessTarget\\": \\"-6\\",\\n                    \\"TruePeak\\": \\"-1\\",\\n                    \\"LoudnessRangeTarget\\": \\"8\\"\\n                  }\\n                },\\n                \\"Container\\": {\\n                  \\"Format\\": \\"mp4\\"\\n                },\\n                \\"MuxConfig\\": {\\n                  \\"Segment\\": {\\n                    \\"Duration\\": \\"10\\",\\n                    \\"ForceSegTime\\": \\"2,3\\"\\n                  }\\n                },\\n                \\"Tags\\": {\\n                  \\"key\\": \\"\\"\\n                }\\n              }\\n            },\\n            \\"ImageWatermarks\\": [\\n              {\\n                \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18****\\",\\n                \\"OverwriteParams\\": {\\n                  \\"Width\\": \\"32\\",\\n                  \\"Height\\": \\"32\\",\\n                  \\"Dx\\": \\"10\\",\\n                  \\"Dy\\": \\"10\\",\\n                  \\"ReferPos\\": \\"TopLeft\\",\\n                  \\"Timeline\\": {\\n                    \\"Start\\": \\"00:00:05\\",\\n                    \\"Duration\\": \\"ToEND\\"\\n                  },\\n                  \\"File\\": {\\n                    \\"Type\\": \\"OSS\\",\\n                    \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                  }\\n                }\\n              }\\n            ],\\n            \\"TextWatermarks\\": [\\n              {\\n                \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18****\\",\\n                \\"OverwriteParams\\": {\\n                  \\"Content\\": \\"测试水印\\",\\n                  \\"FontName\\": \\"SimSun\\",\\n                  \\"FontColor\\": \\"#006400\\",\\n                  \\"FontAlpha\\": \\"1.0\\",\\n                  \\"Top\\": \\"10\\",\\n                  \\"Left\\": \\"10\\",\\n                  \\"FontSize\\": 16,\\n                  \\"BorderWidth\\": 0,\\n                  \\"BorderColor\\": \\"#006400\\",\\n                  \\"Adaptive\\": \\"false\\"\\n                }\\n              }\\n            ],\\n            \\"Subtitles\\": [\\n              {\\n                \\"TemplateId\\": \\"9547c6ad97cb4f2aaa29683ebd18****\\",\\n                \\"OverwriteParams\\": {\\n                  \\"Format\\": \\"vtt\\",\\n                  \\"CharEnc\\": \\"UTF-8\\",\\n                  \\"File\\": {\\n                    \\"Type\\": \\"OSS\\",\\n                    \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n                  }\\n                }\\n              }\\n            ],\\n            \\"Encryption\\": {\\n              \\"EncryptType\\": \\"PrivateEncryption\\",\\n              \\"CipherText\\": \\"MTYi00NDU0LTg5O****\\",\\n              \\"DecryptKeyUri\\": \\"https://sample.com/path?CipherText=MTYi00NDU0LTg5O****\\"\\n            },\\n            \\"CombineConfigs\\": [\\n              {\\n                \\"AudioIndex\\": \\"0 或 exclude\\",\\n                \\"VideoIndex\\": \\"0 或 exclude\\",\\n                \\"Start\\": 0,\\n                \\"Duration\\": 20\\n              }\\n            ],\\n            \\"IsInheritTags\\": true\\n          }\\n        }\\n      ],\\n      \\"UserData\\": \\"user-data\\",\\n      \\"ScheduleConfig\\": {\\n        \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f****\\",\\n        \\"Priority\\": 5\\n      }\\n    }\\n  ],\\n  \\"NextPageToken\\": \\"019daf5780f74831b0e1a767c9f1****\\"\\n}","type":"json"}]',
      'title' => '查询转码任务列表',
      'summary' => '查询转码任务列表。',
    ),
    'SubmitPackageJob' => 
    array (
      'summary' => '提交打包任务接口。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'job-name',
          ),
        ),
        1 => 
        array (
          'name' => 'Inputs',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务输入。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '任务输入。',
              'type' => 'object',
              'properties' => 
              array (
                'Input' => 
                array (
                  'title' => '打包播放流文件信息',
                  'description' => '打包播放流文件信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                      'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'OSS',
                    ),
                    'Media' => 
                    array (
                      'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                      'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'oss://bucket/path/to/video.mp4',
                    ),
                  ),
                  'required' => true,
                ),
              ),
              'required' => false,
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Output',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务输出。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                'type' => 'string',
                'required' => true,
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/path/to/video.mp4',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '调度配置。',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'title' => '管道 ID。',
                'description' => '管道 ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'e37ebee5d98b4781897f6086e89f9c56',
              ),
              'Priority' => 
              array (
                'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '5',
              ),
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义信息。',
            'type' => 'string',
            'required' => false,
            'example' => '{"param": "value"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 id',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'JobId' => 
              array (
                'title' => '打包任务ID',
                'description' => '打包任务ID',
                'type' => 'string',
                'example' => '2d705f385b704ee5b*******a36d93e0',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"JobId\\": \\"2d705f385b704ee5b*******a36d93e0\\"\\n}","type":"json"}]',
      'title' => '提交打包任务',
    ),
    'GetPackageJob' => 
    array (
      'summary' => '获取单个打包任务信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务 ID',
            'description' => '任务 ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ab4802364a2e49208c99efab82df****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 id。',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'PackageJob' => 
              array (
                'title' => '打包任务信息',
                'description' => '打包任务信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'string',
                    'example' => 'ab4802364a2e49208c99efab82df****',
                  ),
                  'TriggerSource' => 
                  array (
                    'description' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                    'type' => 'string',
                  ),
                  'Name' => 
                  array (
                    'description' => '任务名称。',
                    'type' => 'string',
                    'example' => 'job-name',
                  ),
                  'Inputs' => 
                  array (
                    'description' => '任务输入。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务输入。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Input' => 
                        array (
                          'title' => '打包播放流文件信息',
                          'description' => '打包播放流文件信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'type' => 'string',
                              'example' => 'OSS',
                            ),
                            'Media' => 
                            array (
                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                              'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Output' => 
                  array (
                    'description' => '任务输出。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                        'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。',
                        'type' => 'string',
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                        'type' => 'string',
                        'example' => 'oss://bucket/path/to/video.m3u8',
                      ),
                    ),
                  ),
                  'OutputUrl' => 
                  array (
                    'description' => '输出文件地址。',
                    'type' => 'string',
                    'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/output.m3u8',
                  ),
                  'PipelineId' => 
                  array (
                    'description' => '管道 ID。',
                    'type' => 'string',
                    'example' => '36f3fee40aa047c0b067d0fb85ed****',
                  ),
                  'Priority' => 
                  array (
                    'description' => '任务优先级。数字越大优先级越高，取值范围：1~10。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态。',
                    'type' => 'string',
                    'example' => 'Init',
                  ),
                  'Code' => 
                  array (
                    'description' => '错误码。',
                    'type' => 'string',
                    'example' => 'InvalidParameter',
                  ),
                  'Message' => 
                  array (
                    'description' => '错误消息。',
                    'type' => 'string',
                    'example' => 'Resource content bad.',
                  ),
                  'SubmitTime' => 
                  array (
                    'description' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-09-08T11:34:05Z',
                  ),
                  'FinishTime' => 
                  array (
                    'description' => '任务结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-09-08T11:44:05Z',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户自定义信息。',
                    'type' => 'string',
                    'example' => '{"param": "value"}',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-09-08T11:34:05Z
',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '最后一次修改时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-09-08T11:44:05Z
',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"PackageJob\\": {\\n    \\"JobId\\": \\"ab4802364a2e49208c99efab82df****\\",\\n    \\"TriggerSource\\": \\"\\",\\n    \\"Name\\": \\"job-name\\",\\n    \\"Inputs\\": [\\n      {\\n        \\"Input\\": {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n        }\\n      }\\n    ],\\n    \\"Output\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"oss://bucket/path/to/video.m3u8\\"\\n    },\\n    \\"OutputUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/output.m3u8\\",\\n    \\"PipelineId\\": \\"36f3fee40aa047c0b067d0fb85ed****\\",\\n    \\"Priority\\": 6,\\n    \\"Status\\": \\"Init\\",\\n    \\"Code\\": \\"InvalidParameter\\",\\n    \\"Message\\": \\"Resource content bad.\\",\\n    \\"SubmitTime\\": \\"2022-09-08T11:34:05Z\\",\\n    \\"FinishTime\\": \\"2022-09-08T11:44:05Z\\",\\n    \\"UserData\\": \\"{\\\\\\"param\\\\\\": \\\\\\"value\\\\\\"}\\",\\n    \\"CreateTime\\": \\"2022-09-08T11:34:05Z\\\\n\\",\\n    \\"ModifiedTime\\": \\"2022-09-08T11:44:05Z\\\\n\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取单个打包任务信息',
    ),
    'ListPackageJobs' => 
    array (
      'summary' => '获取打包任务列表接口。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务创建时间筛选条件的起始时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '任务创建时间筛选条件的起始时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务创建时间筛选条件的结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '任务创建时间筛选条件的结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-15T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '按 jobId 筛选。',
            'description' => '按 jobId 筛选。',
            'type' => 'string',
            'required' => false,
            'example' => '7b38a5d86f1e47838927b6e7ccb11cbe',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
            'description' => '任务状态 

- Init: 已提交, 
- Success: 成功, 
- Fail: 失败',
            'type' => 'string',
            'required' => false,
            'example' => 'Success',
          ),
        ),
        4 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序顺序。目前只支持两种：CreateTimeDesc: 按创建时间降序 和 CreateTimeAsc: 按创建时间升序',
            'description' => '排序顺序。目前只支持两种：CreateTimeDesc: 按创建时间降序和 CreateTimeAsc: 按创建时间升序',
            'type' => 'string',
            'required' => false,
            'example' => 'CreateTimeDesc',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小。范围: 0~100，默认值：20。',
            'description' => '分页大小。范围：0~100，默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连续分页查询时下一页的标记 (第一页没有)。',
            'description' => '连续分页查询时下一页的标记（第一页没有）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ab4802364a2e49208c99efab82dfa8e8',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 id。',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'PackageJobList' => 
              array (
                'title' => '打包任务列表',
                'description' => '打包任务列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'PackageJobs' => 
                  array (
                    'description' => '打包任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '单个打包任务。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JobId' => 
                        array (
                          'description' => '任务ID。',
                          'type' => 'string',
                          'example' => '7b38a5d86f1e47838927b6e7ccb11cbe',
                        ),
                        'TriggerSource' => 
                        array (
                          'description' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                          'type' => 'string',
                          'example' => 'API',
                        ),
                        'Name' => 
                        array (
                          'description' => '任务名称。',
                          'type' => 'string',
                          'example' => 'job-name',
                        ),
                        'Inputs' => 
                        array (
                          'description' => '任务输入。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '任务输入。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Input' => 
                              array (
                                'title' => '打包播放流文件信息',
                                'description' => '打包播放流文件信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Type' => 
                                  array (
                                    'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                    'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                                    'type' => 'string',
                                    'example' => 'OSS',
                                  ),
                                  'Media' => 
                                  array (
                                    'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                                    'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                                    'type' => 'string',
                                    'example' => 'oss://bucket/path/to/video.mp4',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Output' => 
                        array (
                          'description' => '任务输出。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                              'type' => 'string',
                              'example' => 'OSS',
                            ),
                            'Media' => 
                            array (
                              'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                              'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                              'type' => 'string',
                              'example' => 'oss://bucket/path/to/video.mp4',
                            ),
                          ),
                        ),
                        'PipelineId' => 
                        array (
                          'description' => '管道ID。',
                          'type' => 'string',
                          'example' => '5b40833e4c3e4d4e95a866abb9a42510',
                        ),
                        'Priority' => 
                        array (
                          'description' => '任务优先级。数字越大优先级越高，取值范围：1~10。默认为6。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '6',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务状态。',
                          'type' => 'string',
                          'example' => 'Success',
                        ),
                        'Code' => 
                        array (
                          'description' => '错误码。',
                          'type' => 'string',
                          'example' => 'InvalidParameter',
                        ),
                        'Message' => 
                        array (
                          'description' => '错误消息。',
                          'type' => 'string',
                          'example' => 'Resource content bad. ',
                        ),
                        'SubmitTime' => 
                        array (
                          'description' => '任务提交时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                          'type' => 'string',
                          'example' => '2022-07-07T14:00:32Z',
                        ),
                        'FinishTime' => 
                        array (
                          'description' => '任务结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                          'type' => 'string',
                          'example' => '2022-07-07T15:00:32Z',
                        ),
                        'UserData' => 
                        array (
                          'description' => '用户自定义信息。',
                          'type' => 'string',
                          'example' => '{"param": "value"}',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                          'type' => 'string',
                          'example' => '2022-07-07T14:00:32Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'description' => '最后修改时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                          'type' => 'string',
                          'example' => '2022-07-07T15:00:32Z',
                        ),
                      ),
                    ),
                  ),
                  'NextPageToken' => 
                  array (
                    'title' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
                    'description' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
                    'type' => 'string',
                    'example' => '019daf5780f74831b0e1a767c9f1c178',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"PackageJobList\\": {\\n    \\"PackageJobs\\": [\\n      {\\n        \\"JobId\\": \\"7b38a5d86f1e47838927b6e7ccb11cbe\\",\\n        \\"TriggerSource\\": \\"API\\",\\n        \\"Name\\": \\"job-name\\",\\n        \\"Inputs\\": [\\n          {\\n            \\"Input\\": {\\n              \\"Type\\": \\"OSS\\",\\n              \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n            }\\n          }\\n        ],\\n        \\"Output\\": {\\n          \\"Type\\": \\"OSS\\",\\n          \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n        },\\n        \\"PipelineId\\": \\"5b40833e4c3e4d4e95a866abb9a42510\\",\\n        \\"Priority\\": 6,\\n        \\"Status\\": \\"Success\\",\\n        \\"Code\\": \\"InvalidParameter\\",\\n        \\"Message\\": \\"Resource content bad. \\",\\n        \\"SubmitTime\\": \\"2022-07-07T14:00:32Z\\",\\n        \\"FinishTime\\": \\"2022-07-07T15:00:32Z\\",\\n        \\"UserData\\": \\"{\\\\\\"param\\\\\\": \\\\\\"value\\\\\\"}\\",\\n        \\"CreateTime\\": \\"2022-07-07T14:00:32Z\\",\\n        \\"ModifiedTime\\": \\"2022-07-07T15:00:32Z\\"\\n      }\\n    ],\\n    \\"NextPageToken\\": \\"019daf5780f74831b0e1a767c9f1c178\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取打包任务列表',
    ),
    'GenerateKMSDataKey' => 
    array (
      'summary' => '生成一个随机的KMS数据密钥，用于对视频进行标准加密转码。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'DataKey' => 
              array (
                'description' => '数据密钥信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'KeyId' => 
                  array (
                    'description' => '主密钥的全局唯一标识符。',
                    'type' => 'string',
                    'example' => '7906979c-8e06-46a2-be2d-68e3ccbc****
',
                  ),
                  'Plaintext' => 
                  array (
                    'description' => '数据密钥的明文经过Base64编码后的值。',
                    'type' => 'string',
                    'example' => 'QmFzZTY0IGVuY29kZWQgcGxhaW50****
',
                  ),
                  'CiphertextBlob' => 
                  array (
                    'description' => '数据密钥被加密后的密文。用于在发起转码时填入CipherText参数。',
                    'type' => 'string',
                    'example' => '	
ODZhOWVmZDktM2QxNi00ODk0LWJkNGYtMWZjNDNmM2YyYWJmS7FmDBBQ0BkKsQrtRnidtPwirmDcS0ZuJCU41xxAAWk4Z8qsADfbV0b+i6kQmlvj79dJdGOvtX69Uycs901qOjop4bTS****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"DataKey\\": {\\n    \\"KeyId\\": \\"7906979c-8e06-46a2-be2d-68e3ccbc****\\\\n\\",\\n    \\"Plaintext\\": \\"QmFzZTY0IGVuY29kZWQgcGxhaW50****\\\\n\\",\\n    \\"CiphertextBlob\\": \\"\\\\t\\\\nODZhOWVmZDktM2QxNi00ODk0LWJkNGYtMWZjNDNmM2YyYWJmS7FmDBBQ0BkKsQrtRnidtPwirmDcS0ZuJCU41xxAAWk4Z8qsADfbV0b+i6kQmlvj79dJdGOvtX69Uycs901qOjop4bTS****\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建KMS数据密钥',
    ),
    'DecryptKMSDataKey' => 
    array (
      'summary' => '解密KMS数据密钥中的CiphertextBlob密文。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CiphertextBlob',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待解密的密文。',
            'type' => 'string',
            'required' => true,
            'example' => 'ODZhOWVmZDktM2QxNi00ODk0LWJkNGYtMWZjNDNmM2YyYWJmS7FmDBBQ0BkKsQrtRnidtPwirmDcS0ZuJCU41xxAAWk4Z8qsADfbV0b+i6kQmlvj79dJdGOvtX69Uycs901qOjop4bTS****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'DataKey' => 
              array (
                'description' => '解密结果信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'KeyId' => 
                  array (
                    'description' => '解密密文使用的主密钥ID。',
                    'type' => 'string',
                    'example' => '202b9877-5a25-46e3-a763-e20791b5****
',
                  ),
                  'Plaintext' => 
                  array (
                    'description' => '解密后的明文。',
                    'type' => 'string',
                    'example' => 'tRYXuCwgja12xxO1N/gZERDDCLw9doZEQiPDk/Bv****
',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"DataKey\\": {\\n    \\"KeyId\\": \\"202b9877-5a25-46e3-a763-e20791b5****\\\\n\\",\\n    \\"Plaintext\\": \\"tRYXuCwgja12xxO1N/gZERDDCLw9doZEQiPDk/Bv****\\\\n\\"\\n  }\\n}","type":"json"}]',
      'title' => '解密KMS数据密钥密文',
    ),
    'SubmitSnapshotJob' => 
    array (
      'summary' => '提交截图任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'SampleJob',
          ),
        ),
        1 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '截图输入。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输入类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'example' => 'Media',
              ),
              'Media' => 
              array (
                'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：

1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。

> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/object.mp4',
              ),
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Output',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '截图输出。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输出类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'description' => '输出媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。
截取多张静态截图时，object必须要带有”{Count}“占位符；截取雪碧图时，object必须要带有“{TileCount}”占位符。WebVTT截图object的后缀必须是“.vtt”。

> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://test-bucket/output-{Count}.jpg',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '截图模板配置。',
            'type' => 'object',
            'properties' => 
            array (
              'TemplateId' => 
              array (
                'description' => '模板ID。',
                'type' => 'string',
                'required' => true,
                'example' => '****96e8864746a0b6f3****
',
              ),
              'OverwriteParams' => 
              array (
                'description' => '覆盖参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '截图类型。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Sprite',
                  ),
                  'FrameType' => 
                  array (
                    'title' => '截图公共参数',
                    'description' => '帧类型。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'intra',
                  ),
                  'Count' => 
                  array (
                    'description' => '截图数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '5',
                  ),
                  'Interval' => 
                  array (
                    'description' => '截图间隔时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '10',
                  ),
                  'Time' => 
                  array (
                    'description' => '截图开始时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '1000',
                  ),
                  'Width' => 
                  array (
                    'description' => '输出图片宽度。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '720',
                  ),
                  'Height' => 
                  array (
                    'description' => '输出图片高度。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '480',
                  ),
                  'BlackLevel' => 
                  array (
                    'description' => '多帧截图针对首帧过滤黑屏图片判定阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '30',
                  ),
                  'PixelBlackThreshold' => 
                  array (
                    'description' => '判断像素点是否为黑色点的阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '70',
                  ),
                  'SpriteSnapshotConfig' => 
                  array (
                    'title' => '雪碧图配置',
                    'description' => '雪碧图配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CellWidth' => 
                      array (
                        'description' => '单图片宽度。默认截图输出分辨率宽度。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '720',
                      ),
                      'CellHeight' => 
                      array (
                        'description' => '单图片高度。默认截图输出分辨率高度。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '480',
                      ),
                      'Padding' => 
                      array (
                        'description' => '图片间距，默认0，单位px',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '20',
                      ),
                      'Margin' => 
                      array (
                        'description' => '外框宽度，默认0，单位px',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '20',
                      ),
                      'Columns' => 
                      array (
                        'description' => '图片拼合列数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '20',
                      ),
                      'Lines' => 
                      array (
                        'description' => '图片拼合行数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '20',
                      ),
                      'Color' => 
                      array (
                        'description' => '背景颜色。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '#000000',
                      ),
                    ),
                    'required' => false,
                  ),
                  'IsSptFrag' => 
                  array (
                    'title' => 'Webvtt截图配置:是否拼合输出',
                    'description' => 'Webvtt截图配置：是否拼合输出',
                    'type' => 'boolean',
                    'required' => false,
                    'example' => 'true',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '调度配置',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'description' => '管道ID。',
                'type' => 'string',
                'required' => false,
                'example' => '****96e8864746a0b6f3****
',
              ),
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义数据。',
            'type' => 'string',
            'required' => false,
            'example' => '{"test parameter": "test value"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<SnapshotJobDTO>',
            'description' => 'PlainResponse<SnapshotJobDTO>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'description' => '任务ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","type":"json"}]',
      'title' => '提交截图任务',
    ),
    'SubmitDynamicImageJob' => 
    array (
      'summary' => '提交动图任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称',
            'type' => 'string',
            'required' => false,
            'example' => 'SampleJob',
          ),
        ),
        1 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务输入',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输入类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'Media' => '媒资ID',
                  'OSS' => 'oss地址',
                ),
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。

> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/object.mp4',
              ),
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Output',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务输出',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输出类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'Media' => '媒资ID',
                  'OSS' => 'oss地址',
                ),
                'example' => 'Media',
              ),
              'Media' => 
              array (
                'description' => '输出媒体，支持OSS地址和媒资ID两种。
OSS地址规则为

- oss://bucket/object
- http(s)://bucket.oss-[regionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。

> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。',
                'type' => 'string',
                'required' => true,
                'example' => '****96e8864746a0b6f3****',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '截图模板配置',
            'type' => 'object',
            'properties' => 
            array (
              'TemplateId' => 
              array (
                'description' => '模板ID',
                'type' => 'string',
                'required' => true,
                'example' => '****96e8864746a0b6f3****
',
              ),
              'OverwriteParams' => 
              array (
                'description' => '覆盖参数',
                'type' => 'object',
                'properties' => 
                array (
                  'Format' => 
                  array (
                    'description' => '动图格式，取值：
- **gif**。
- **webp**。',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'gif' => 'gif',
                      'webp' => 'webp',
                    ),
                    'example' => 'gif',
                  ),
                  'Width' => 
                  array (
                    'description' => '输出动图宽度。取值范围：[128, 4096]。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '1024',
                  ),
                  'Height' => 
                  array (
                    'description' => '输出动图高度。取值范围：[128, 4096]。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '720',
                  ),
                  'Fps' => 
                  array (
                    'description' => '帧率。取值范围：[1, 60]。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '15',
                  ),
                  'ScanMode' => 
                  array (
                    'description' => '扫描模式。可取值：

- **interlaced**：交叉扫描。

- **progressive**：顺序扫描。默认值。',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'progressive' => '顺序扫描',
                      'interlaced' => '交叉扫描',
                    ),
                    'example' => 'progressive',
                  ),
                  'LongShortMode' => 
                  array (
                    'description' => '是否开启横竖屏自适应（长短边模式）。取值：

- **true**：开启横竖屏自适应。
- **false**：关闭横竖屏自适应。

默认值：**true**。
> 转码输出的宽对应输入片源的长边（竖屏为片源的高），高对应输入视频的短边（竖屏为片源的宽）。
',
                    'type' => 'boolean',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'true' => 'true',
                      'false' => 'false',
                    ),
                    'example' => 'false',
                  ),
                  'TimeSpan' => 
                  array (
                    'title' => '时间线参数',
                    'description' => '时间线参数',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Seek' => 
                      array (
                        'description' => '开始时间点。  

- 格式：`hh:mm:ss[.SSS]`或`sssss[.SSS]`。
- 取值范围 ：`[00:00:00.000,23:59:59.999]`或`[0.000，86399.999]`。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '01:59:59.999 或 32000.23',
                      ),
                      'Duration' => 
                      array (
                        'description' => '持续时长。
- 格式：`hh:mm:ss[.SSS]`或`sssss[.SSS]`。
- 取值范围 ：`[00:00:00.000,23:59:59.999]`或`[0.000，86399.999]`。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '01:59:59.999 或 32000.23',
                      ),
                      'End' => 
                      array (
                        'description' => '截尾时长，表示切掉尾部的若干时长。设置此值时，参数Duration失效。
- 格式：`hh:mm:ss[.SSS]`或`sssss[.SSS]`。
- 取值范围 ：`[00:00:00.000,23:59:59.999]`或`[0.000，86399.999]`。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '01:59:59.999 或 32000.23',
                      ),
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '调度配置',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'description' => '管道ID',
                'type' => 'string',
                'required' => false,
                'example' => '****96e8864746a0b6f3****
',
              ),
              'Priority' => 
              array (
                'description' => '优先级，1-10，默认6。数值越大，优先级越高。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '6',
              ),
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"SampleKey": "SampleValue"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<SnapshotJobDTO>',
            'description' => 'PlainResponse<SnapshotJobDTO>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'description' => '任务ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","type":"json"}]',
      'title' => '提交动图任务',
    ),
    'GetSnapshotUrls' => 
    array (
      'summary' => '获取截图任务输出图片的可访问URL。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数目',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为10，最大值为30。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排列顺序。取值：Asc，Desc',
            'description' => '排列顺序。取值：Asc，Desc',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Asc' => '顺序排列',
              'Desc' => '逆序排列',
            ),
            'example' => 'Asc',
          ),
        ),
        4 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '鉴权超时时间',
            'description' => '鉴权超时时间。单位：秒。默认值：3600。最大值：129600（36小时）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3600',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Total' => 
              array (
                'title' => '截图总数量',
                'description' => '截图总数量',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '30',
              ),
              'SnapshotUrls' => 
              array (
                'title' => '截图URL',
                'description' => '截图URL列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '截图URL',
                  'type' => 'string',
                  'example' => 'http://test-bucket.oss-cn-shanghai.aliyuncs.com/ouoput-00001.jpg',
                ),
              ),
              'WebVTTUrl' => 
              array (
                'title' => 'WebVTT文件URL',
                'description' => 'WebVTT文件URL',
                'type' => 'string',
                'example' => 'http://test-bucket.oss-cn-shanghai.aliyuncs.com/ouoput.vtt',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Total\\": 30,\\n  \\"SnapshotUrls\\": [\\n    \\"http://test-bucket.oss-cn-shanghai.aliyuncs.com/ouoput-00001.jpg\\"\\n  ],\\n  \\"WebVTTUrl\\": \\"http://test-bucket.oss-cn-shanghai.aliyuncs.com/ouoput.vtt\\"\\n}","type":"json"}]',
      'title' => '获取截图任务输出URL',
    ),
    'GetSnapshotJob' => 
    array (
      'summary' => '查询截图任务详细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '截图任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****d80e4e4044975745c14b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<SnapshotJobDTO>',
            'description' => 'PlainResponse<SnapshotJobDTO>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'SnapshotJob' => 
              array (
                'title' => '截图任务信息',
                'description' => '截图任务信息',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '任务ID',
                    'type' => 'string',
                    'example' => '****d80e4e4044975745c14b****',
                  ),
                  'TriggerSource' => 
                  array (
                    'description' => '请求触发来源',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Console' => '控制台',
                      'Workflow' => '工作流',
                      'API' => 'API',
                    ),
                    'example' => 'API',
                  ),
                  'Name' => 
                  array (
                    'description' => '任务名称',
                    'type' => 'string',
                    'example' => '测试任务',
                  ),
                  'Type' => 
                  array (
                    'description' => '截图类型',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'WebVtt' => 'WebVTT截图',
                      'Sprite' => '雪碧图截图',
                      'Normal' => '普通静态截图',
                    ),
                    'example' => 'Sprite',
                  ),
                  'Input' => 
                  array (
                    'description' => '任务输入',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '输入类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                        'type' => 'string',
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                        'type' => 'string',
                        'example' => 'oss://test-bucket/object.mp4',
                      ),
                      'OssFile' => 
                      array (
                        'title' => '输入类型为媒资ID时的OSS地址',
                        'description' => 'OSS三元组',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Bucket' => 
                          array (
                            'description' => 'OSS Bucket',
                            'type' => 'string',
                            'example' => 'test-bucket',
                          ),
                          'Location' => 
                          array (
                            'description' => 'OSS Location',
                            'type' => 'string',
                            'example' => 'oss-cn-shanghai',
                          ),
                          'Object' => 
                          array (
                            'description' => 'OSS Object',
                            'type' => 'string',
                            'example' => 'object.mp4',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Output' => 
                  array (
                    'description' => '任务输出',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '输出类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                        'type' => 'string',
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'description' => '输出媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。
截取多张静态截图时，object必须要带有”{Count}“占位符；截取雪碧图时，object必须要带有“{TileCount}”占位符。WebVTT截图object的后缀必须是“.vtt”。',
                        'type' => 'string',
                        'example' => 'http://test-bucket.oss-cn-shanghai.aliyuncs.com/output-{Count}.jpg',
                      ),
                      'OssFile' => 
                      array (
                        'title' => '输出类型为媒资ID时的OSS地址',
                        'description' => 'OSS三元组',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Bucket' => 
                          array (
                            'description' => 'OSS Bucket',
                            'type' => 'string',
                            'example' => 'test-bucket',
                          ),
                          'Location' => 
                          array (
                            'description' => 'OSS Location',
                            'type' => 'string',
                            'example' => 'oss-cn-shanghai',
                          ),
                          'Object' => 
                          array (
                            'description' => 'OSS Object',
                            'type' => 'string',
                            'example' => 'output-{Count}.jpg',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Count' => 
                  array (
                    'description' => '截图数量',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8',
                  ),
                  'Async' => 
                  array (
                    'description' => '是否异步截图。默认：true',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '模板ID',
                    'type' => 'string',
                    'example' => '****d80e4e4044975745c14b****',
                  ),
                  'TemplateConfig' => 
                  array (
                    'description' => '截图模板配置',
                    'type' => 'string',
                    'example' => '{"Type":"Normal","FrameType":"normal","Time":0,"Count":10}',
                  ),
                  'PipelineId' => 
                  array (
                    'description' => '管道ID',
                    'type' => 'string',
                    'example' => '****d80e4e4044975745c14b****',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Init' => '已提交',
                      'Success' => '成功',
                      'Fail' => '失败',
                    ),
                    'example' => 'Success',
                  ),
                  'Code' => 
                  array (
                    'description' => '错误码',
                    'type' => 'string',
                    'example' => 'ResourceNotFound',
                  ),
                  'Message' => 
                  array (
                    'description' => '错误消息',
                    'type' => 'string',
                    'example' => 'The specified resource for "Pipeline" could not be found.',
                  ),
                  'SubmitTime' => 
                  array (
                    'description' => '任务提交时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                  'FinishTime' => 
                  array (
                    'description' => '任务完成时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:30:54Z',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户自定义参数。',
                    'type' => 'string',
                    'example' => '{"test parameter": "test value"}',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '最后修改时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:30:54Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"SnapshotJob\\": {\\n    \\"JobId\\": \\"****d80e4e4044975745c14b****\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"Name\\": \\"测试任务\\",\\n    \\"Type\\": \\"Sprite\\",\\n    \\"Input\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"oss://test-bucket/object.mp4\\",\\n      \\"OssFile\\": {\\n        \\"Bucket\\": \\"test-bucket\\",\\n        \\"Location\\": \\"oss-cn-shanghai\\",\\n        \\"Object\\": \\"object.mp4\\"\\n      }\\n    },\\n    \\"Output\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"http://test-bucket.oss-cn-shanghai.aliyuncs.com/output-{Count}.jpg\\",\\n      \\"OssFile\\": {\\n        \\"Bucket\\": \\"test-bucket\\",\\n        \\"Location\\": \\"oss-cn-shanghai\\",\\n        \\"Object\\": \\"output-{Count}.jpg\\"\\n      }\\n    },\\n    \\"Count\\": 8,\\n    \\"Async\\": true,\\n    \\"TemplateId\\": \\"****d80e4e4044975745c14b****\\",\\n    \\"TemplateConfig\\": \\"{\\\\\\"Type\\\\\\":\\\\\\"Normal\\\\\\",\\\\\\"FrameType\\\\\\":\\\\\\"normal\\\\\\",\\\\\\"Time\\\\\\":0,\\\\\\"Count\\\\\\":10}\\",\\n    \\"PipelineId\\": \\"****d80e4e4044975745c14b****\\",\\n    \\"Status\\": \\"Success\\",\\n    \\"Code\\": \\"ResourceNotFound\\",\\n    \\"Message\\": \\"The specified resource for \\\\\\"Pipeline\\\\\\" could not be found.\\",\\n    \\"SubmitTime\\": \\"2022-07-12T16:17:54Z\\",\\n    \\"FinishTime\\": \\"2022-07-12T16:30:54Z\\",\\n    \\"UserData\\": \\"{\\\\\\"test parameter\\\\\\": \\\\\\"test value\\\\\\"}\\",\\n    \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n    \\"ModifiedTime\\": \\"2022-07-12T16:30:54Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询截图任务详细信息',
    ),
    'GetDynamicImageJob' => 
    array (
      'summary' => '查询动图任务详细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '动图任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => '****d80e4e4044975745c14b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<DynamicImageJobDTO>',
            'description' => 'PlainResponse<DynamicImageJobDTO>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******36-3C1E-4417-BDB2-1E034F******',
              ),
              'DynamicImageJob' => 
              array (
                'title' => '截图任务信息',
                'description' => '截图任务信息',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '任务ID',
                    'type' => 'string',
                    'example' => '****d80e4e4044975745c14b****
',
                  ),
                  'TriggerSource' => 
                  array (
                    'description' => '请求触发来源',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Console' => '控制台',
                      'Workflow' => '工作流',
                      'API' => 'API',
                    ),
                    'example' => 'API',
                  ),
                  'Name' => 
                  array (
                    'description' => '任务名称',
                    'type' => 'string',
                    'example' => 'SampleJob',
                  ),
                  'Input' => 
                  array (
                    'description' => '任务输入',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '输入类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                        'type' => 'string',
                        'enumValueTitles' => 
                        array (
                          'Media' => '媒资ID',
                          'OSS' => 'oss文件地址',
                        ),
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. OSS://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。',
                        'type' => 'string',
                        'example' => 'oss://test-bucket/sample-input.mp4',
                      ),
                      'OssFile' => 
                      array (
                        'title' => '输入类型为媒资ID时的OSS地址',
                        'description' => 'OSS三元组',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Bucket' => 
                          array (
                            'description' => 'OSS Bucket',
                            'type' => 'string',
                            'example' => 'test-bucket',
                          ),
                          'Location' => 
                          array (
                            'description' => 'OSS Location',
                            'type' => 'string',
                            'example' => 'oss-cn-shanghai',
                          ),
                          'Object' => 
                          array (
                            'description' => 'OSS Object',
                            'type' => 'string',
                            'example' => 'sample-input.mp4',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Output' => 
                  array (
                    'description' => '任务输出',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '输入类型，取值：
OSS：oss文件地址
Media：媒资ID',
                        'type' => 'string',
                        'enumValueTitles' => 
                        array (
                          'Media' => '媒资ID',
                          'OSS' => 'oss文件地址',
                        ),
                        'example' => 'Media',
                      ),
                      'Media' => 
                      array (
                        'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. OSS://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。',
                        'type' => 'string',
                        'example' => '****d80e4e4044975745c14b****',
                      ),
                      'OssFile' => 
                      array (
                        'title' => '输出类型为媒资ID时的OSS地址',
                        'description' => 'OSS三元组',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Bucket' => 
                          array (
                            'description' => 'OSS Bucket',
                            'type' => 'string',
                            'example' => 'sample-bucket',
                          ),
                          'Location' => 
                          array (
                            'description' => 'OSS Location',
                            'type' => 'string',
                            'example' => 'oss-cn-shanghai',
                          ),
                          'Object' => 
                          array (
                            'description' => 'OSS Object',
                            'type' => 'string',
                            'example' => 'path/to/object',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'OutputUrl' => 
                  array (
                    'description' => '输出动图的URL地址',
                    'type' => 'string',
                    'example' => 'http://test-bucket.oss-cn-shanghai.aliyuncs.com/output.gif',
                  ),
                  'TemplateConfig' => 
                  array (
                    'description' => '动图模板配置',
                    'type' => 'string',
                    'example' => '{"Format":"gif","Fps":5,"Height":1080,"Width":1920}',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '模板ID',
                    'type' => 'string',
                    'example' => '****d80e4e4044975745c14b****',
                  ),
                  'PipelineId' => 
                  array (
                    'description' => '管道ID',
                    'type' => 'string',
                    'example' => '****d80e4e4044975745c14b****',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Init' => '已提交',
                      'Success' => '成功',
                      'Fail' => '失败',
                    ),
                    'example' => 'Success',
                  ),
                  'Code' => 
                  array (
                    'description' => '错误码',
                    'type' => 'string',
                    'example' => 'ResourceNotFound',
                  ),
                  'Message' => 
                  array (
                    'description' => '错误消息',
                    'type' => 'string',
                    'example' => 'The specified resource for "CustomTemplate" could not be found.',
                  ),
                  'SubmitTime' => 
                  array (
                    'description' => '任务提交时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                  'FinishTime' => 
                  array (
                    'description' => '任务完成时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:30:54Z',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户自定义数据',
                    'type' => 'string',
                    'example' => '{"sampleParam": "sampleValue"}',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:17:54Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '最后一次修改时间',
                    'type' => 'string',
                    'example' => '2022-07-12T16:30:54Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******36-3C1E-4417-BDB2-1E034F******\\",\\n  \\"DynamicImageJob\\": {\\n    \\"JobId\\": \\"****d80e4e4044975745c14b****\\\\n\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"Name\\": \\"SampleJob\\",\\n    \\"Input\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"oss://test-bucket/sample-input.mp4\\",\\n      \\"OssFile\\": {\\n        \\"Bucket\\": \\"test-bucket\\",\\n        \\"Location\\": \\"oss-cn-shanghai\\",\\n        \\"Object\\": \\"sample-input.mp4\\"\\n      }\\n    },\\n    \\"Output\\": {\\n      \\"Type\\": \\"Media\\",\\n      \\"Media\\": \\"****d80e4e4044975745c14b****\\",\\n      \\"OssFile\\": {\\n        \\"Bucket\\": \\"sample-bucket\\",\\n        \\"Location\\": \\"oss-cn-shanghai\\",\\n        \\"Object\\": \\"path/to/object\\"\\n      }\\n    },\\n    \\"OutputUrl\\": \\"http://test-bucket.oss-cn-shanghai.aliyuncs.com/output.gif\\",\\n    \\"TemplateConfig\\": \\"{\\\\\\"Format\\\\\\":\\\\\\"gif\\\\\\",\\\\\\"Fps\\\\\\":5,\\\\\\"Height\\\\\\":1080,\\\\\\"Width\\\\\\":1920}\\",\\n    \\"TemplateId\\": \\"****d80e4e4044975745c14b****\\",\\n    \\"PipelineId\\": \\"****d80e4e4044975745c14b****\\",\\n    \\"Status\\": \\"Success\\",\\n    \\"Code\\": \\"ResourceNotFound\\",\\n    \\"Message\\": \\"The specified resource for \\\\\\"CustomTemplate\\\\\\" could not be found.\\",\\n    \\"SubmitTime\\": \\"2022-07-12T16:17:54Z\\",\\n    \\"FinishTime\\": \\"2022-07-12T16:30:54Z\\",\\n    \\"UserData\\": \\"{\\\\\\"sampleParam\\\\\\": \\\\\\"sampleValue\\\\\\"}\\",\\n    \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n    \\"ModifiedTime\\": \\"2022-07-12T16:30:54Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询动图任务详细信息',
    ),
    'ListSnapshotJobs' => 
    array (
      'summary' => '获取截图任务列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间筛选条件的起始时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-12T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间筛选条件的结束时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-14T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Init' => '已提交',
              'Success' => '成功',
              'Fail' => '失败',
            ),
            'example' => 'Success',
          ),
        ),
        3 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序顺序：CreateTimeDesc 和 CreateTimeAsc',
            'description' => '排序顺序。取值：
1. CreateTimeAsc
2. CreateTimeDesc',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'CreateTimeDesc' => '创建时间逆序排列',
              'CreateTimeAsc' => '创建时间顺序排列',
            ),
            'example' => 'CreateTimeDesc',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为20，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连续分页查询时下一页的标记',
            'description' => '连续分页查询时下一页的标记。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Jobs' => 
              array (
                'description' => '任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '截图任务信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'description' => '任务ID',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'TriggerSource' => 
                    array (
                      'description' => '请求触发来源',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Console' => '控制台',
                        'Workflow' => '工作流',
                        'API' => 'API',
                      ),
                      'example' => 'API',
                    ),
                    'Name' => 
                    array (
                      'description' => '任务名称',
                      'type' => 'string',
                      'example' => 'SampleJob',
                    ),
                    'Type' => 
                    array (
                      'description' => '任务类型',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'WebVtt' => 'WebVTT截图',
                        'Sprite' => '雪碧图截图',
                        'Normal' => '普通静态截图',
                      ),
                      'example' => 'Sprite',
                    ),
                    'Input' => 
                    array (
                      'description' => '任务输入',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '输入类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'Media' => 
                        array (
                          'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1.OSS://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。',
                          'type' => 'string',
                          'example' => 'oss://bucket/object.mp4',
                        ),
                      ),
                    ),
                    'Output' => 
                    array (
                      'description' => '任务输出',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '输出类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'Media' => 
                        array (
                          'description' => '输出媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. OSS://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。
截取多张静态截图时，object必须要带有”{Count}“占位符；截取雪碧图时，object必须要带有“{TileCount}”占位符。WebVTT截图object的后缀必须是“.vtt”。',
                          'type' => 'string',
                          'example' => 'http://test-bucket.oss-cn-shanghai.aliyuncs.com/output-{Count}.jpg',
                        ),
                      ),
                    ),
                    'Count' => 
                    array (
                      'description' => '截图数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'Async' => 
                    array (
                      'description' => '是否异步截图',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'TemplateId' => 
                    array (
                      'description' => '模板ID',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'PipelineId' => 
                    array (
                      'description' => '管道ID',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'Status' => 
                    array (
                      'description' => '任务状态。

- **Success**：成功

- **Fail**：失败

- **Init**：已提交',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Init' => '已提交',
                        'Success' => '成功',
                        'Fail' => '失败',
                      ),
                      'example' => 'Success',
                    ),
                    'SubmitTime' => 
                    array (
                      'description' => '任务提交时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                    'FinishTime' => 
                    array (
                      'description' => '任务完成时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:30:54Z',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '最后修改时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:30:54Z',
                    ),
                  ),
                ),
              ),
              'NextPageToken' => 
              array (
                'description' => '查询下一页标识',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Jobs\\": [\\n    {\\n      \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"TriggerSource\\": \\"API\\",\\n      \\"Name\\": \\"SampleJob\\",\\n      \\"Type\\": \\"Sprite\\",\\n      \\"Input\\": {\\n        \\"Type\\": \\"OSS\\",\\n        \\"Media\\": \\"oss://bucket/object.mp4\\"\\n      },\\n      \\"Output\\": {\\n        \\"Type\\": \\"OSS\\",\\n        \\"Media\\": \\"http://test-bucket.oss-cn-shanghai.aliyuncs.com/output-{Count}.jpg\\"\\n      },\\n      \\"Count\\": 10,\\n      \\"Async\\": true,\\n      \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"PipelineId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"Status\\": \\"Success\\",\\n      \\"SubmitTime\\": \\"2022-07-12T16:17:54Z\\",\\n      \\"FinishTime\\": \\"2022-07-12T16:30:54Z\\",\\n      \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n      \\"ModifiedTime\\": \\"2022-07-12T16:30:54Z\\"\\n    }\\n  ],\\n  \\"NextPageToken\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","type":"json"}]',
      'title' => '获取截图任务列表',
    ),
    'ListDynamicImageJobs' => 
    array (
      'summary' => '获取动图任务列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间筛选条件的起始时间',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-12T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务创建时间筛选条件的结束时间',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-14T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Init' => '已提交',
              'Success' => '成功',
              'Fail' => '失败',
            ),
            'example' => 'Success',
          ),
        ),
        3 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序顺序：CreateTimeDesc 和 CreateTimeAsc',
            'description' => '排序顺序。取值： 
1. CreateTimeAsc： 按照创建时间顺序排列
2. CreateTimeDesc： 按照创建时间逆序排列',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'CreateTimeDesc' => '创建时间逆序排列',
              'CreateTimeAsc' => '创建时间顺序排列',
            ),
            'example' => 'CreateTimeDesc',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务ID',
            'description' => '任务ID',
            'type' => 'string',
            'required' => false,
            'example' => '****cdb3e74639973036bc84****',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为20，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连续分页查询时下一页的标记',
            'description' => '连续分页查询时下一页的标记',
            'type' => 'string',
            'required' => false,
            'example' => 'cdb3e74639973036bc84',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<List<DynamicImageJobDTO>>',
            'description' => 'PlainResponse<List<DynamicImageJobDTO>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Jobs' => 
              array (
                'description' => '任务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '动图任务信息',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'description' => '动图任务ID',
                      'type' => 'string',
                      'example' => '****cdb3e74639973036bc84****',
                    ),
                    'TriggerSource' => 
                    array (
                      'description' => '请求触发来源',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Console' => '控制台',
                        'Workflow' => '工作流',
                        'API' => 'API',
                      ),
                      'example' => 'API',
                    ),
                    'Name' => 
                    array (
                      'description' => '任务名称',
                      'type' => 'string',
                      'example' => 'SampleJob',
                    ),
                    'Input' => 
                    array (
                      'description' => '任务输入',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '输入类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'Media' => '媒资ID',
                            'OSS' => 'oss地址',
                          ),
                          'example' => 'OSS',
                        ),
                        'Media' => 
                        array (
                          'description' => '输入媒体，支持OSS地址和媒资ID两种。
OSS地址规则为
1. OSS://bucket/object
2. http(s)://bucket.oss-[regionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。',
                          'type' => 'string',
                          'example' => 'oss://bucket/object',
                        ),
                      ),
                    ),
                    'Output' => 
                    array (
                      'description' => '任务输出',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '输出类型，取值：
1. OSS：oss文件地址
2. Media：媒资ID',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'Media' => '媒资ID',
                            'OSS' => 'oss地址',
                          ),
                          'example' => 'Media',
                        ),
                        'Media' => 
                        array (
                          'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. OSS://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的OSS bucket名称，object为文件路径。',
                          'type' => 'string',
                          'example' => '****cdb3e74639973036bc84****',
                        ),
                      ),
                    ),
                    'TemplateId' => 
                    array (
                      'description' => '模板ID',
                      'type' => 'string',
                      'example' => '****cdb3e74639973036bc84****',
                    ),
                    'PipelineId' => 
                    array (
                      'description' => '管道ID',
                      'type' => 'string',
                      'example' => '****cdb3e74639973036bc84****',
                    ),
                    'Status' => 
                    array (
                      'description' => '任务状态。

- **Success**：成功

- **Fail**：失败

- **Init**：已提交',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Init' => '已提交',
                        'Success' => '成功',
                        'Fail' => '失败',
                      ),
                      'example' => 'Success',
                    ),
                    'SubmitTime' => 
                    array (
                      'description' => '任务提交时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                    'FinishTime' => 
                    array (
                      'description' => '任务完成时间。',
                      'type' => 'string',
                      'example' => '2022-07-12T16:30:54Z',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:17:54Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '最后修改时间',
                      'type' => 'string',
                      'example' => '2022-07-12T16:30:54Z',
                    ),
                  ),
                ),
              ),
              'NextPageToken' => 
              array (
                'description' => '查询下一页标识',
                'type' => 'string',
                'example' => '****cdb3e74639973036bc84****
',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Jobs\\": [\\n    {\\n      \\"JobId\\": \\"****cdb3e74639973036bc84****\\",\\n      \\"TriggerSource\\": \\"API\\",\\n      \\"Name\\": \\"SampleJob\\",\\n      \\"Input\\": {\\n        \\"Type\\": \\"OSS\\",\\n        \\"Media\\": \\"oss://bucket/object\\"\\n      },\\n      \\"Output\\": {\\n        \\"Type\\": \\"Media\\",\\n        \\"Media\\": \\"****cdb3e74639973036bc84****\\"\\n      },\\n      \\"TemplateId\\": \\"****cdb3e74639973036bc84****\\",\\n      \\"PipelineId\\": \\"****cdb3e74639973036bc84****\\",\\n      \\"Status\\": \\"Success\\",\\n      \\"SubmitTime\\": \\"2022-07-12T16:17:54Z\\",\\n      \\"FinishTime\\": \\"2022-07-12T16:30:54Z\\",\\n      \\"CreateTime\\": \\"2022-07-12T16:17:54Z\\",\\n      \\"ModifiedTime\\": \\"2022-07-12T16:30:54Z\\"\\n    }\\n  ],\\n  \\"NextPageToken\\": \\"****cdb3e74639973036bc84****\\\\n\\"\\n}","type":"json"}]',
      'title' => '获取动图任务列表',
    ),
    'SubmitSyncMediaInfoJob' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务名字',
            'description' => '任务名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'job-name',
          ),
        ),
        1 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '任务输入',
            'description' => '任务输入。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                'description' => '媒体对象类型。
 - OSS：OSS 文件, 
- Media：媒资 ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                'description' => '媒体值：
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议。
> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。

- type 为 Media 时，为媒资 ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/path/to/video.mp4',
              ),
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户数据',
            'description' => '用户数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'user-data',
          ),
        ),
        3 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '调度参数',
            'description' => '调度参数。可不填。',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'title' => '管道 ID。',
                'description' => '管道 ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'e37ebee5d98b4781897f6086e89f9c56',
              ),
              'Priority' => 
              array (
                'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '5',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'MediaInfoJob' => 
              array (
                'title' => 'MediaInfoJobDTO',
                'description' => 'MediaInfoJobDTO',
                'type' => 'object',
                'properties' => 
                array (
                  'Name' => 
                  array (
                    'title' => '任务名字。',
                    'description' => '任务名字。',
                    'type' => 'string',
                    'example' => 'job-name',
                  ),
                  'TriggerSource' => 
                  array (
                    'title' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                    'description' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                    'type' => 'string',
                    'example' => 'API',
                  ),
                  'JobId' => 
                  array (
                    'title' => '任务 ID。',
                    'description' => '任务 ID。',
                    'type' => 'string',
                    'example' => 'ab4802364a2e49208c99efab82dfa8e8',
                  ),
                  'Input' => 
                  array (
                    'title' => '任务输入。',
                    'description' => '任务输入。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                        'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                        'type' => 'string',
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'type' => 'string',
                        'example' => 'oss://bucket/path/to/video.mp4',
                      ),
                    ),
                  ),
                  'Async' => 
                  array (
                    'title' => '是否异步处理。',
                    'description' => '是否异步处理。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UserData' => 
                  array (
                    'title' => '用户数据。',
                    'description' => '用户数据。',
                    'type' => 'string',
                    'example' => 'user-data',
                  ),
                  'ScheduleConfig' => 
                  array (
                    'title' => '调度信息。',
                    'description' => '调度信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PipelineId' => 
                      array (
                        'title' => '管道 ID。',
                        'description' => '管道 ID。',
                        'type' => 'string',
                        'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                      ),
                      'Priority' => 
                      array (
                        'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                  'Status' => 
                  array (
                    'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                    'description' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                    'type' => 'string',
                    'example' => 'Init',
                  ),
                  'SubmitResultJson' => 
                  array (
                    'title' => '任务提交信息。',
                    'description' => '任务提交信息。',
                    'type' => 'object',
                    'example' => '{}',
                  ),
                  'MediaInfoProperty' => 
                  array (
                    'title' => '媒体信息详情。',
                    'description' => '媒体信息详情。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FileBasicInfo' => 
                      array (
                        'title' => '基础文件信息',
                        'description' => '基础文件信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'MediaId' => 
                          array (
                            'title' => '媒资 ID。',
                            'description' => '媒资ID',
                            'type' => 'string',
                            'example' => '999e68259c924f52a6be603cbb3f91cc',
                          ),
                          'FileName' => 
                          array (
                            'title' => '文件名。',
                            'description' => '文件名。',
                            'type' => 'string',
                            'example' => 'file.m3u8',
                          ),
                          'FileStatus' => 
                          array (
                            'title' => '文件状态。',
                            'description' => '文件状态。 
取值：
- Normal',
                            'type' => 'string',
                            'example' => 'Normal',
                          ),
                          'FileType' => 
                          array (
                            'title' => '文件类型。取值: source_file, transcode_file',
                            'description' => '文件类型。',
                            'type' => 'string',
                            'example' => 'source_file',
                          ),
                          'FileSize' => 
                          array (
                            'title' => '文件大小。单位：Byte。',
                            'description' => '文件大小。单位：Byte。',
                            'type' => 'string',
                            'example' => '31737',
                          ),
                          'FileUrl' => 
                          array (
                            'title' => '文件 URL。',
                            'description' => '文件 URL。',
                            'type' => 'string',
                            'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8',
                          ),
                          'Region' => 
                          array (
                            'title' => '文件所在区域。',
                            'description' => '文件所在区域。',
                            'type' => 'string',
                            'example' => 'cn-shanghai',
                          ),
                          'FormatName' => 
                          array (
                            'title' => '视频格式名称。',
                            'description' => '视频格式名称。',
                            'type' => 'string',
                            'example' => 'hls,applehttp',
                          ),
                          'Duration' => 
                          array (
                            'title' => '视频时长（单位: 秒）。',
                            'description' => '视频时长（单位：秒）。',
                            'type' => 'string',
                            'example' => '403.039999',
                          ),
                          'Bitrate' => 
                          array (
                            'title' => '视频码率。',
                            'description' => '视频码率。',
                            'type' => 'string',
                            'example' => '888.563',
                          ),
                          'Width' => 
                          array (
                            'title' => '宽。',
                            'description' => '宽。',
                            'type' => 'string',
                            'example' => '848',
                          ),
                          'Height' => 
                          array (
                            'title' => '高。',
                            'description' => '高。',
                            'type' => 'string',
                            'example' => '478',
                          ),
                        ),
                      ),
                      'AudioStreamInfoList' => 
                      array (
                        'title' => '音频流信息',
                        'description' => '音频流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '音频流信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Index' => 
                            array (
                              'title' => '流序号。',
                              'description' => '流序号。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'CodecName' => 
                            array (
                              'title' => '编码格式。',
                              'description' => '编码格式。',
                              'type' => 'string',
                              'example' => 'aac',
                            ),
                            'CodecLongName' => 
                            array (
                              'title' => '编码格式名。',
                              'description' => '编码格式名。',
                              'type' => 'string',
                              'example' => 'AAC (Advanced Audio Coding)',
                            ),
                            'CodecTimeBase' => 
                            array (
                              'title' => '编码器时间基。',
                              'description' => '编码器时间基。',
                              'type' => 'string',
                              'example' => '1/44100',
                            ),
                            'CodecTagString' => 
                            array (
                              'title' => '编码器标签名。',
                              'description' => '编码器标签名。',
                              'type' => 'string',
                              'example' => '[15][0][0][0]',
                            ),
                            'CodecTag' => 
                            array (
                              'title' => '编码器标签。',
                              'description' => '编码器标签。',
                              'type' => 'string',
                              'example' => '0x000f',
                            ),
                            'SampleFmt' => 
                            array (
                              'title' => '采样格式。',
                              'description' => '采样格式。',
                              'type' => 'string',
                              'example' => 'fltp',
                            ),
                            'SampleRate' => 
                            array (
                              'title' => '采样率（单位: Hz）。',
                              'description' => '采样率（单位：Hz）。',
                              'type' => 'string',
                              'example' => '44100',
                            ),
                            'Channels' => 
                            array (
                              'title' => '声道数。',
                              'description' => '声道数。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'ChannelLayout' => 
                            array (
                              'title' => '声道布局。',
                              'description' => '声道布局。',
                              'type' => 'string',
                              'example' => 'stereo',
                            ),
                            'Timebase' => 
                            array (
                              'title' => '时间基。',
                              'description' => '时间基。',
                              'type' => 'string',
                              'example' => '1/90000',
                            ),
                            'StartTime' => 
                            array (
                              'title' => '开始时间。',
                              'description' => '开始时间。',
                              'type' => 'string',
                              'example' => '1.473556',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长（单位: 秒）。',
                              'description' => '时长。',
                              'type' => 'string',
                              'example' => '403.039989',
                            ),
                            'Bitrate' => 
                            array (
                              'title' => '码率。',
                              'description' => '码率。',
                              'type' => 'string',
                              'example' => '0.f',
                            ),
                            'Lang' => 
                            array (
                              'title' => '语言。',
                              'description' => '语言。',
                              'type' => 'string',
                              'example' => 'us',
                            ),
                          ),
                        ),
                      ),
                      'VideoStreamInfoList' => 
                      array (
                        'title' => '视频流信息',
                        'description' => '视频流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '视频流信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Index' => 
                            array (
                              'title' => '流序号。',
                              'description' => '流序号。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Codec_name' => 
                            array (
                              'title' => '编码格式。',
                              'description' => '编码格式。',
                              'type' => 'string',
                              'example' => 'h264',
                            ),
                            'Codec_long_name' => 
                            array (
                              'title' => '编码格式名。',
                              'description' => '编码格式名。',
                              'type' => 'string',
                              'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                            ),
                            'Profile' => 
                            array (
                              'title' => '编码器预设。',
                              'description' => '编码器预设。',
                              'type' => 'string',
                              'example' => 'High',
                            ),
                            'Codec_time_base' => 
                            array (
                              'description' => '编码时基。',
                              'type' => 'string',
                              'example' => '1/50',
                            ),
                            'Codec_tag_string' => 
                            array (
                              'title' => '编码格式标记文本。',
                              'description' => '编码格式标记文本。',
                              'type' => 'string',
                              'example' => '[27][0][0][0]',
                            ),
                            'Codec_tag' => 
                            array (
                              'title' => '编码格式标记。',
                              'description' => '编码格式标记。',
                              'type' => 'string',
                              'example' => '0x001b',
                            ),
                            'Width' => 
                            array (
                              'title' => '宽。',
                              'description' => '宽。',
                              'type' => 'string',
                              'example' => '848',
                            ),
                            'Height' => 
                            array (
                              'title' => '高。',
                              'description' => '高。',
                              'type' => 'string',
                              'example' => '478',
                            ),
                            'Has_b_frames' => 
                            array (
                              'title' => '是否有B帧。
取值: 
- 0: 没有 B 帧, 
- 1: 有一个 B 帧, 
- 2: 有多个连续 B 帧。',
                              'description' => '是否有B帧。
取值：
- 0：没有 B 帧, 
- 1：有一个 B 帧, 
- 2：有多个连续 B 帧。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'Sar' => 
                            array (
                              'title' => '采集点数宽高比。',
                              'description' => '采集点数宽高比。',
                              'type' => 'string',
                              'example' => '478:477',
                            ),
                            'Dar' => 
                            array (
                              'title' => '图像显示宽高比。',
                              'description' => '图像显示宽高比。',
                              'type' => 'string',
                              'example' => '16:9',
                            ),
                            'PixFmt' => 
                            array (
                              'title' => '颜色存储格式。',
                              'description' => '颜色存储格式。',
                              'type' => 'string',
                              'example' => 'yuv420p',
                            ),
                            'Level' => 
                            array (
                              'title' => '编码等级。',
                              'description' => '编码等级。',
                              'type' => 'string',
                              'example' => '31',
                            ),
                            'Fps' => 
                            array (
                              'title' => '帧率。',
                              'description' => '帧率。',
                              'type' => 'string',
                              'example' => '25.0',
                            ),
                            'Avg_fps' => 
                            array (
                              'title' => '平均帧率。',
                              'description' => '平均帧率。',
                              'type' => 'string',
                              'example' => '25.0',
                            ),
                            'Time_base' => 
                            array (
                              'title' => '时基。',
                              'description' => '时基。',
                              'type' => 'string',
                              'example' => '1/90000',
                            ),
                            'Start_time' => 
                            array (
                              'title' => '起始时间。',
                              'description' => '起始时间。',
                              'type' => 'string',
                              'example' => '1.473556',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长（单位: 秒）。',
                              'description' => '时长。',
                              'type' => 'string',
                              'example' => '403.039989',
                            ),
                            'Bit_rate' => 
                            array (
                              'title' => '码率。',
                              'description' => '码率。',
                              'type' => 'string',
                              'example' => '888.563',
                            ),
                            'NumFrames' => 
                            array (
                              'title' => '总帧数。',
                              'description' => '总帧数。',
                              'type' => 'string',
                              'example' => '10040',
                            ),
                            'Lang' => 
                            array (
                              'title' => '语言。',
                              'description' => '语言。',
                              'type' => 'string',
                              'example' => 'zh',
                            ),
                            'Rotate' => 
                            array (
                              'title' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                              'description' => '视频画面旋转角度。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'SubmitTime' => 
                  array (
                    'title' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'FinishTime' => 
                  array (
                    'title' => '任务完成时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'description' => '任务完成时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'RequestId' => 
                  array (
                    'title' => '请求 ID。',
                    'description' => '请求 ID。',
                    'type' => 'string',
                    'example' => '4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"MediaInfoJob\\": {\\n    \\"Name\\": \\"job-name\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"JobId\\": \\"ab4802364a2e49208c99efab82dfa8e8\\",\\n    \\"Input\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n    },\\n    \\"Async\\": true,\\n    \\"UserData\\": \\"user-data\\",\\n    \\"ScheduleConfig\\": {\\n      \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n      \\"Priority\\": 5\\n    },\\n    \\"Status\\": \\"Init\\",\\n    \\"SubmitResultJson\\": {},\\n    \\"MediaInfoProperty\\": {\\n      \\"FileBasicInfo\\": {\\n        \\"MediaId\\": \\"999e68259c924f52a6be603cbb3f91cc\\",\\n        \\"FileName\\": \\"file.m3u8\\",\\n        \\"FileStatus\\": \\"Normal\\",\\n        \\"FileType\\": \\"source_file\\",\\n        \\"FileSize\\": \\"31737\\",\\n        \\"FileUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8\\",\\n        \\"Region\\": \\"cn-shanghai\\",\\n        \\"FormatName\\": \\"hls,applehttp\\",\\n        \\"Duration\\": \\"403.039999\\",\\n        \\"Bitrate\\": \\"888.563\\",\\n        \\"Width\\": \\"848\\",\\n        \\"Height\\": \\"478\\"\\n      },\\n      \\"AudioStreamInfoList\\": [\\n        {\\n          \\"Index\\": \\"1\\",\\n          \\"CodecName\\": \\"aac\\",\\n          \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n          \\"CodecTimeBase\\": \\"1/44100\\",\\n          \\"CodecTagString\\": \\"[15][0][0][0]\\",\\n          \\"CodecTag\\": \\"0x000f\\",\\n          \\"SampleFmt\\": \\"fltp\\",\\n          \\"SampleRate\\": \\"44100\\",\\n          \\"Channels\\": \\"2\\",\\n          \\"ChannelLayout\\": \\"stereo\\",\\n          \\"Timebase\\": \\"1/90000\\",\\n          \\"StartTime\\": \\"1.473556\\",\\n          \\"Duration\\": \\"403.039989\\",\\n          \\"Bitrate\\": \\"0.f\\",\\n          \\"Lang\\": \\"us\\"\\n        }\\n      ],\\n      \\"VideoStreamInfoList\\": [\\n        {\\n          \\"Index\\": \\"0\\",\\n          \\"Codec_name\\": \\"h264\\",\\n          \\"Codec_long_name\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n          \\"Profile\\": \\"High\\",\\n          \\"Codec_time_base\\": \\"1/50\\",\\n          \\"Codec_tag_string\\": \\"[27][0][0][0]\\",\\n          \\"Codec_tag\\": \\"0x001b\\",\\n          \\"Width\\": \\"848\\",\\n          \\"Height\\": \\"478\\",\\n          \\"Has_b_frames\\": \\"2\\",\\n          \\"Sar\\": \\"478:477\\",\\n          \\"Dar\\": \\"16:9\\",\\n          \\"PixFmt\\": \\"yuv420p\\",\\n          \\"Level\\": \\"31\\",\\n          \\"Fps\\": \\"25.0\\",\\n          \\"Avg_fps\\": \\"25.0\\",\\n          \\"Time_base\\": \\"1/90000\\",\\n          \\"Start_time\\": \\"1.473556\\",\\n          \\"Duration\\": \\"403.039989\\",\\n          \\"Bit_rate\\": \\"888.563\\",\\n          \\"NumFrames\\": \\"10040\\",\\n          \\"Lang\\": \\"zh\\",\\n          \\"Rotate\\": \\"0\\"\\n        }\\n      ]\\n    },\\n    \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"RequestId\\": \\"4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168\\"\\n  }\\n}","type":"json"}]',
      'title' => '提交同步媒体信息任务',
      'summary' => '调用SubmitSyncMediaInfoJob以同步模式提交媒体文件进行媒体信息分析。',
      'description' => '您可以调用本接口以同步模式对输入的文件进行媒体分析，适用于实时性要求较高且并发量较小的场景。
如果遇到片源获取MediaInfo需要耗时比较久的情况，可能会因请求超时获取不到信息或者信息不准确，推荐通过[SubmitMediaInfoJob - 提交异步媒体信息任务](~~441222~~)接口获取媒体信息。',
    ),
    'SubmitMediaInfoJob' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务名字',
            'description' => '任务名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'job-name',
          ),
        ),
        1 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '任务输入',
            'description' => '任务输入。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'title' => '媒体对象类型。取值： OSS: OSS文件, Media: 媒资 ID',
                'description' => '媒体对象类型 - OSS: oss文件, Media: 媒资 ID',
                'type' => 'string',
                'required' => true,
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                'description' => '媒体值：
- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议。
> URL中的 OSS bucket 需要先添加到IMS[存储管理](~~440592~~)后再使用。

- type 为 Media 时，为媒资 ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/path/to/video.mp4',
              ),
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户数据',
            'description' => '用户数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'user-data',
          ),
        ),
        3 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '调度参数',
            'description' => '调度参数。',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'title' => '管道 ID。',
                'description' => '管道 ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'e37ebee5d98b4781897f6086e89f9c56',
              ),
              'Priority' => 
              array (
                'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '5',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 id。',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'MediaInfoJob' => 
              array (
                'title' => 'MediaInfoJobDTO',
                'description' => 'MediaInfoJobDTO',
                'type' => 'object',
                'properties' => 
                array (
                  'Name' => 
                  array (
                    'title' => '任务名字',
                    'description' => '任务名字。',
                    'type' => 'string',
                    'example' => 'job-name',
                  ),
                  'TriggerSource' => 
                  array (
                    'title' => '任务来源 - API, WorkFlow, Console',
                    'description' => '任务来源 - API, WorkFlow, Console',
                    'type' => 'string',
                    'example' => 'API',
                  ),
                  'JobId' => 
                  array (
                    'title' => '任务 id',
                    'description' => '任务 id。',
                    'type' => 'string',
                    'example' => 'ab4802364a2e49208c99efab82dfa8e8',
                  ),
                  'Input' => 
                  array (
                    'title' => '任务输入',
                    'description' => '任务输入。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => '媒体对象类型。取值： OSS: OSS文件, Media: 媒资 ID',
                        'description' => '媒体对象类型。取值： OSS: OSS文件, Media: 媒资 ID',
                        'type' => 'string',
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'type' => 'string',
                        'example' => 'oss://bucket/path/to/video.mp4',
                      ),
                    ),
                  ),
                  'Async' => 
                  array (
                    'title' => '是否异步处理',
                    'description' => '是否异步处理。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UserData' => 
                  array (
                    'title' => '用户数据',
                    'description' => '用户数据。',
                    'type' => 'string',
                    'example' => 'user-data',
                  ),
                  'ScheduleConfig' => 
                  array (
                    'title' => '调度信息',
                    'description' => '调度信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PipelineId' => 
                      array (
                        'title' => '管道 ID。',
                        'description' => '管道 ID。',
                        'type' => 'string',
                        'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                      ),
                      'Priority' => 
                      array (
                        'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                  'Status' => 
                  array (
                    'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                    'description' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                    'type' => 'string',
                    'example' => 'Init',
                  ),
                  'SubmitResultJson' => 
                  array (
                    'title' => '任务提交信息',
                    'description' => '任务提交信息。',
                    'type' => 'object',
                    'example' => '{}',
                  ),
                  'MediaInfoProperty' => 
                  array (
                    'title' => '媒体信息详情',
                    'description' => '媒体信息详情。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FileBasicInfo' => 
                      array (
                        'title' => '基础文件信息',
                        'description' => '基础文件信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'MediaId' => 
                          array (
                            'title' => '媒资 ID。',
                            'description' => '媒资ID。',
                            'type' => 'string',
                            'example' => '2b36bd19c13f4145b094c0cad80dbce5',
                          ),
                          'FileName' => 
                          array (
                            'title' => '文件名。',
                            'description' => '文件名。',
                            'type' => 'string',
                            'example' => 'file.m3u8',
                          ),
                          'FileStatus' => 
                          array (
                            'title' => '文件状态。',
                            'description' => '文件状态。',
                            'type' => 'string',
                            'example' => 'Normal',
                          ),
                          'FileType' => 
                          array (
                            'title' => '文件类型。取值: source_file, transcode_file',
                            'description' => '文件类型。',
                            'type' => 'string',
                            'example' => 'source_file',
                          ),
                          'FileSize' => 
                          array (
                            'title' => '文件大小。单位：Byte。',
                            'description' => '文件大小。',
                            'type' => 'string',
                            'example' => '31737',
                          ),
                          'FileUrl' => 
                          array (
                            'title' => '文件url。',
                            'description' => '文件 URL。',
                            'type' => 'string',
                            'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8',
                          ),
                          'Region' => 
                          array (
                            'title' => '文件所在区域。',
                            'description' => '文件所在区域。',
                            'type' => 'string',
                            'example' => 'cn-shanghai',
                          ),
                          'FormatName' => 
                          array (
                            'title' => '视频格式名称。',
                            'description' => '视频格式名称。',
                            'type' => 'string',
                            'example' => 'hls,applehttp',
                          ),
                          'Duration' => 
                          array (
                            'title' => '视频时长（单位: 秒）。',
                            'description' => '视频时长。',
                            'type' => 'string',
                            'example' => '403.039999',
                          ),
                          'Bitrate' => 
                          array (
                            'title' => '视频码率。',
                            'description' => '视频码率。',
                            'type' => 'string',
                            'example' => '888.563',
                          ),
                          'Width' => 
                          array (
                            'title' => '宽。',
                            'description' => '宽。',
                            'type' => 'string',
                            'example' => '848',
                          ),
                          'Height' => 
                          array (
                            'title' => '高。',
                            'description' => '高。',
                            'type' => 'string',
                            'example' => '478',
                          ),
                        ),
                      ),
                      'AudioStreamInfoList' => 
                      array (
                        'title' => '音频流信息',
                        'description' => '音频流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '音频流信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Index' => 
                            array (
                              'title' => '流序号。',
                              'description' => '流序号。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'CodecName' => 
                            array (
                              'title' => '编码格式。',
                              'description' => '编码格式。',
                              'type' => 'string',
                              'example' => 'aac',
                            ),
                            'CodecLongName' => 
                            array (
                              'title' => '编码格式名。',
                              'description' => '编码格式名。',
                              'type' => 'string',
                              'example' => 'AAC (Advanced Audio Coding)',
                            ),
                            'CodecTimeBase' => 
                            array (
                              'title' => '编码器时间基。',
                              'description' => '编码器时间基。',
                              'type' => 'string',
                              'example' => '1/44100',
                            ),
                            'CodecTagString' => 
                            array (
                              'title' => '编码器标签名。',
                              'description' => '编码器标签名。',
                              'type' => 'string',
                              'example' => '[15][0][0][0]',
                            ),
                            'CodecTag' => 
                            array (
                              'title' => '编码器标签。',
                              'description' => '编码器标签。',
                              'type' => 'string',
                              'example' => '0x000f',
                            ),
                            'SampleFmt' => 
                            array (
                              'title' => '采样格式。',
                              'description' => '采样格式。',
                              'type' => 'string',
                              'example' => 'fltp',
                            ),
                            'SampleRate' => 
                            array (
                              'title' => '采样率（单位: Hz）。',
                              'description' => '采样率（单位：Hz）。',
                              'type' => 'string',
                              'example' => '44100',
                            ),
                            'Channels' => 
                            array (
                              'title' => '声道数。',
                              'description' => '声道数。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'ChannelLayout' => 
                            array (
                              'title' => '声道布局。',
                              'description' => '声道布局。',
                              'type' => 'string',
                              'example' => 'stereo',
                            ),
                            'Timebase' => 
                            array (
                              'title' => '时间基。',
                              'description' => '时间基。',
                              'type' => 'string',
                              'example' => '1/90000',
                            ),
                            'StartTime' => 
                            array (
                              'title' => '开始时间。',
                              'description' => '开始时间。',
                              'type' => 'string',
                              'example' => '1.473556',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长（单位: 秒）。',
                              'description' => '时长（单位：秒）。',
                              'type' => 'string',
                              'example' => '403.039989',
                            ),
                            'Bitrate' => 
                            array (
                              'title' => '码率。',
                              'description' => '码率。',
                              'type' => 'string',
                              'example' => '0.f',
                            ),
                            'Lang' => 
                            array (
                              'title' => '语言。',
                              'description' => '语言。',
                              'type' => 'string',
                              'example' => 'us',
                            ),
                          ),
                        ),
                      ),
                      'VideoStreamInfoList' => 
                      array (
                        'title' => '视频流信息',
                        'description' => '视频流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '视频流信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Index' => 
                            array (
                              'title' => '流序号。',
                              'description' => '流序号。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Codec_name' => 
                            array (
                              'title' => '编码格式。',
                              'description' => '编码格式。',
                              'type' => 'string',
                              'example' => 'h264',
                            ),
                            'Codec_long_name' => 
                            array (
                              'title' => '编码格式名。',
                              'description' => '编码格式名。',
                              'type' => 'string',
                              'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                            ),
                            'Profile' => 
                            array (
                              'title' => '编码器预设。',
                              'description' => '编码器预设。',
                              'type' => 'string',
                              'example' => 'High',
                            ),
                            'Codec_time_base' => 
                            array (
                              'description' => '编码时基。',
                              'type' => 'string',
                              'example' => '1/50',
                            ),
                            'Codec_tag_string' => 
                            array (
                              'title' => '编码格式标记文本。',
                              'description' => '编码格式标记文本。',
                              'type' => 'string',
                              'example' => '[27][0][0][0]',
                            ),
                            'Codec_tag' => 
                            array (
                              'title' => '编码格式标记。',
                              'description' => '编码格式标记。',
                              'type' => 'string',
                              'example' => '0x001b',
                            ),
                            'Width' => 
                            array (
                              'title' => '宽。',
                              'description' => '宽。',
                              'type' => 'string',
                              'example' => '848',
                            ),
                            'Height' => 
                            array (
                              'title' => '高。',
                              'description' => '高。',
                              'type' => 'string',
                              'example' => '478',
                            ),
                            'Has_b_frames' => 
                            array (
                              'description' => '是否有B帧。
取值：
- 0：没有 B 帧, 
- 1：有一个 B 帧, 
- 2：有多个连续 B 帧。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'Sar' => 
                            array (
                              'title' => '采集点数宽高比。',
                              'description' => '采集点数宽高比。',
                              'type' => 'string',
                              'example' => '478:477',
                            ),
                            'Dar' => 
                            array (
                              'title' => '图像显示宽高比。',
                              'description' => '图像显示宽高比。',
                              'type' => 'string',
                              'example' => '16:9',
                            ),
                            'PixFmt' => 
                            array (
                              'title' => '颜色存储格式。',
                              'description' => '颜色存储格式。',
                              'type' => 'string',
                              'example' => 'yuv420p',
                            ),
                            'Level' => 
                            array (
                              'title' => '编码等级。',
                              'description' => '编码等级。',
                              'type' => 'string',
                              'example' => '31',
                            ),
                            'Fps' => 
                            array (
                              'title' => '帧率。',
                              'description' => '帧率。',
                              'type' => 'string',
                              'example' => '25.0',
                            ),
                            'Avg_fps' => 
                            array (
                              'description' => '平均帧率。',
                              'type' => 'string',
                              'example' => '25.0',
                            ),
                            'Time_base' => 
                            array (
                              'description' => '时基。',
                              'type' => 'string',
                              'example' => '1/90000',
                            ),
                            'Start_time' => 
                            array (
                              'title' => '起始时间。',
                              'description' => '起始时间。',
                              'type' => 'string',
                              'example' => '1.473556',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长（单位: 秒）。',
                              'description' => '时长。',
                              'type' => 'string',
                              'example' => '403.039989',
                            ),
                            'Bit_rate' => 
                            array (
                              'description' => '码率。',
                              'type' => 'string',
                              'example' => '888.563',
                            ),
                            'NumFrames' => 
                            array (
                              'title' => '总帧数。',
                              'description' => '总帧数。',
                              'type' => 'string',
                              'example' => '10040',
                            ),
                            'Lang' => 
                            array (
                              'title' => '语言。',
                              'description' => '语言。',
                              'type' => 'string',
                              'example' => 'zh',
                            ),
                            'Rotate' => 
                            array (
                              'title' => '视频画面旋转角度。取值 0, 90, 180, 270。默认值 0',
                              'description' => '视频画面旋转角度。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'SubmitTime' => 
                  array (
                    'title' => '任务提交时间',
                    'description' => '任务提交时间。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'FinishTime' => 
                  array (
                    'title' => '任务完成时间',
                    'description' => '任务完成时间。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'RequestId' => 
                  array (
                    'title' => '请求 id',
                    'description' => '请求 id。',
                    'type' => 'string',
                    'example' => '4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"MediaInfoJob\\": {\\n    \\"Name\\": \\"job-name\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"JobId\\": \\"ab4802364a2e49208c99efab82dfa8e8\\",\\n    \\"Input\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n    },\\n    \\"Async\\": true,\\n    \\"UserData\\": \\"user-data\\",\\n    \\"ScheduleConfig\\": {\\n      \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n      \\"Priority\\": 5\\n    },\\n    \\"Status\\": \\"Init\\",\\n    \\"SubmitResultJson\\": {},\\n    \\"MediaInfoProperty\\": {\\n      \\"FileBasicInfo\\": {\\n        \\"MediaId\\": \\"2b36bd19c13f4145b094c0cad80dbce5\\",\\n        \\"FileName\\": \\"file.m3u8\\",\\n        \\"FileStatus\\": \\"Normal\\",\\n        \\"FileType\\": \\"source_file\\",\\n        \\"FileSize\\": \\"31737\\",\\n        \\"FileUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8\\",\\n        \\"Region\\": \\"cn-shanghai\\",\\n        \\"FormatName\\": \\"hls,applehttp\\",\\n        \\"Duration\\": \\"403.039999\\",\\n        \\"Bitrate\\": \\"888.563\\",\\n        \\"Width\\": \\"848\\",\\n        \\"Height\\": \\"478\\"\\n      },\\n      \\"AudioStreamInfoList\\": [\\n        {\\n          \\"Index\\": \\"1\\",\\n          \\"CodecName\\": \\"aac\\",\\n          \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n          \\"CodecTimeBase\\": \\"1/44100\\",\\n          \\"CodecTagString\\": \\"[15][0][0][0]\\",\\n          \\"CodecTag\\": \\"0x000f\\",\\n          \\"SampleFmt\\": \\"fltp\\",\\n          \\"SampleRate\\": \\"44100\\",\\n          \\"Channels\\": \\"2\\",\\n          \\"ChannelLayout\\": \\"stereo\\",\\n          \\"Timebase\\": \\"1/90000\\",\\n          \\"StartTime\\": \\"1.473556\\",\\n          \\"Duration\\": \\"403.039989\\",\\n          \\"Bitrate\\": \\"0.f\\",\\n          \\"Lang\\": \\"us\\"\\n        }\\n      ],\\n      \\"VideoStreamInfoList\\": [\\n        {\\n          \\"Index\\": \\"0\\",\\n          \\"Codec_name\\": \\"h264\\",\\n          \\"Codec_long_name\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n          \\"Profile\\": \\"High\\",\\n          \\"Codec_time_base\\": \\"1/50\\",\\n          \\"Codec_tag_string\\": \\"[27][0][0][0]\\",\\n          \\"Codec_tag\\": \\"0x001b\\",\\n          \\"Width\\": \\"848\\",\\n          \\"Height\\": \\"478\\",\\n          \\"Has_b_frames\\": \\"2\\",\\n          \\"Sar\\": \\"478:477\\",\\n          \\"Dar\\": \\"16:9\\",\\n          \\"PixFmt\\": \\"yuv420p\\",\\n          \\"Level\\": \\"31\\",\\n          \\"Fps\\": \\"25.0\\",\\n          \\"Avg_fps\\": \\"25.0\\",\\n          \\"Time_base\\": \\"1/90000\\",\\n          \\"Start_time\\": \\"1.473556\\",\\n          \\"Duration\\": \\"403.039989\\",\\n          \\"Bit_rate\\": \\"888.563\\",\\n          \\"NumFrames\\": \\"10040\\",\\n          \\"Lang\\": \\"zh\\",\\n          \\"Rotate\\": \\"0\\"\\n        }\\n      ]\\n    },\\n    \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"RequestId\\": \\"4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168\\"\\n  }\\n}","type":"json"}]',
      'title' => '提交媒体信息异步任务',
      'summary' => '提交媒体信息异步任务。',
      'description' => '您可以调用本接口，通过回调或者再次查询的方式，对输入的文件进行媒体分析，适用于时效性需求相对较弱，或并发量高的场景。',
    ),
    'GetMediaInfoJob' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务 ID',
            'description' => '任务 id',
            'type' => 'string',
            'required' => false,
            'example' => 'ab4802364a2e49208c99efab82dfa8e8',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 id',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'MediaInfoJob' => 
              array (
                'title' => 'MediaInfoJobDTO',
                'description' => 'MediaInfoJobDTO',
                'type' => 'object',
                'properties' => 
                array (
                  'Name' => 
                  array (
                    'title' => '任务名字',
                    'description' => '任务名字。',
                    'type' => 'string',
                    'example' => 'job-name',
                  ),
                  'TriggerSource' => 
                  array (
                    'title' => '任务来源 - API, WorkFlow, Console',
                    'description' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台。',
                    'type' => 'string',
                    'example' => 'API',
                  ),
                  'JobId' => 
                  array (
                    'title' => '任务 id',
                    'description' => '任务 ID',
                    'type' => 'string',
                    'example' => 'ab4802364a2e49208c99efab82dfa8e8',
                  ),
                  'Input' => 
                  array (
                    'title' => '任务输入',
                    'description' => '任务输入。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                        'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                        'type' => 'string',
                        'example' => 'OSS',
                      ),
                      'Media' => 
                      array (
                        'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'description' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                        'type' => 'string',
                        'example' => 'oss://bucket/path/to/video.mp4',
                      ),
                    ),
                  ),
                  'Async' => 
                  array (
                    'title' => '是否异步处理',
                    'description' => '是否异步处理。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UserData' => 
                  array (
                    'title' => '用户数据',
                    'description' => '用户数据。',
                    'type' => 'string',
                    'example' => 'user-data',
                  ),
                  'ScheduleConfig' => 
                  array (
                    'title' => '调度信息',
                    'description' => '调度信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PipelineId' => 
                      array (
                        'title' => '管道 ID。',
                        'description' => '管道 ID。',
                        'type' => 'string',
                        'example' => 'e37ebee5d98b4781897f6086e89f9c56',
                      ),
                      'Priority' => 
                      array (
                        'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                  'Status' => 
                  array (
                    'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                    'description' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                    'type' => 'string',
                    'example' => 'Init',
                  ),
                  'SubmitResultJson' => 
                  array (
                    'title' => '任务提交信息',
                    'description' => '任务提交信息。',
                    'type' => 'object',
                  ),
                  'MediaInfoProperty' => 
                  array (
                    'title' => '媒体信息详情',
                    'description' => '媒体信息详情。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FileBasicInfo' => 
                      array (
                        'title' => '基础文件信息',
                        'description' => '基础文件信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'MediaId' => 
                          array (
                            'title' => '媒资 ID。',
                            'description' => '媒资ID。',
                            'type' => 'string',
                            'example' => 'e520090207114cc7a392d44f0b211574',
                          ),
                          'FileName' => 
                          array (
                            'title' => '文件名。',
                            'description' => '文件名。',
                            'type' => 'string',
                            'example' => 'file.m3u8',
                          ),
                          'FileStatus' => 
                          array (
                            'title' => '文件状态。',
                            'description' => '文件状态。',
                            'type' => 'string',
                            'example' => 'Normal',
                          ),
                          'FileType' => 
                          array (
                            'title' => '文件类型。取值: source_file, transcode_file',
                            'description' => '文件类型。',
                            'type' => 'string',
                            'example' => 'source_file',
                          ),
                          'FileSize' => 
                          array (
                            'title' => '文件大小。单位：Byte。',
                            'description' => '文件大小。',
                            'type' => 'string',
                            'example' => '31737',
                          ),
                          'FileUrl' => 
                          array (
                            'title' => '文件 URL。',
                            'description' => '文件 URL。',
                            'type' => 'string',
                            'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8',
                          ),
                          'Region' => 
                          array (
                            'title' => '文件所在区域。',
                            'description' => '文件所在区域。',
                            'type' => 'string',
                            'example' => 'cn-shanghai',
                          ),
                          'FormatName' => 
                          array (
                            'title' => '视频格式名称。',
                            'description' => '视频格式名称。',
                            'type' => 'string',
                            'example' => 'hls,applehttp',
                          ),
                          'Duration' => 
                          array (
                            'title' => '视频时长（单位: 秒）。',
                            'description' => '视频时长（单位： 秒）。',
                            'type' => 'string',
                            'example' => '403.039999',
                          ),
                          'Bitrate' => 
                          array (
                            'title' => '视频码率。',
                            'description' => '视频码率。',
                            'type' => 'string',
                            'example' => '888.563',
                          ),
                          'Width' => 
                          array (
                            'title' => '宽。',
                            'description' => '宽。',
                            'type' => 'string',
                            'example' => '848',
                          ),
                          'Height' => 
                          array (
                            'title' => '高。',
                            'description' => '高。',
                            'type' => 'string',
                            'example' => '478',
                          ),
                        ),
                      ),
                      'AudioStreamInfoList' => 
                      array (
                        'title' => '音频流信息',
                        'description' => '音频流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Index' => 
                            array (
                              'title' => '流序号。',
                              'description' => '流序号。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'CodecName' => 
                            array (
                              'title' => '编码格式。',
                              'description' => '编码格式。',
                              'type' => 'string',
                              'example' => 'aac',
                            ),
                            'CodecLongName' => 
                            array (
                              'title' => '编码格式名。',
                              'description' => '编码格式名。',
                              'type' => 'string',
                              'example' => 'AAC (Advanced Audio Coding)',
                            ),
                            'CodecTimeBase' => 
                            array (
                              'title' => '编码器时间基。',
                              'description' => '编码器时间基。',
                              'type' => 'string',
                              'example' => '1/44100',
                            ),
                            'CodecTagString' => 
                            array (
                              'title' => '编码器标签名。',
                              'description' => '编码器标签名。',
                              'type' => 'string',
                              'example' => '[15][0][0][0]',
                            ),
                            'CodecTag' => 
                            array (
                              'title' => '编码器标签。',
                              'description' => '编码器标签。',
                              'type' => 'string',
                              'example' => '0x000f',
                            ),
                            'SampleFmt' => 
                            array (
                              'title' => '采样格式。',
                              'description' => '采样格式。',
                              'type' => 'string',
                              'example' => 'fltp',
                            ),
                            'SampleRate' => 
                            array (
                              'title' => '采样率（单位: Hz）。',
                              'description' => '采样率（单位：Hz）。',
                              'type' => 'string',
                              'example' => '44100',
                            ),
                            'Channels' => 
                            array (
                              'title' => '声道数。',
                              'description' => '声道数。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'ChannelLayout' => 
                            array (
                              'title' => '声道布局。',
                              'description' => '声道布局。',
                              'type' => 'string',
                              'example' => 'stereo',
                            ),
                            'Timebase' => 
                            array (
                              'title' => '时间基。',
                              'description' => '时间基。',
                              'type' => 'string',
                              'example' => '1/90000',
                            ),
                            'StartTime' => 
                            array (
                              'title' => '开始时间。',
                              'description' => '开始时间。',
                              'type' => 'string',
                              'example' => '1.473556',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长（单位: 秒）。',
                              'description' => '时长（单位：秒）。',
                              'type' => 'string',
                              'example' => '403.039989',
                            ),
                            'Bitrate' => 
                            array (
                              'title' => '码率。',
                              'description' => '码率。',
                              'type' => 'string',
                              'example' => '0.f',
                            ),
                            'Lang' => 
                            array (
                              'title' => '语言。',
                              'description' => '语言。',
                              'type' => 'string',
                              'example' => 'us',
                            ),
                          ),
                        ),
                      ),
                      'VideoStreamInfoList' => 
                      array (
                        'title' => '视频流信息',
                        'description' => '视频流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Index' => 
                            array (
                              'title' => '流序号。',
                              'description' => '流序号。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Codec_name' => 
                            array (
                              'title' => '编码格式。',
                              'description' => '编码格式。',
                              'type' => 'string',
                              'example' => 'h264',
                            ),
                            'Codec_long_name' => 
                            array (
                              'title' => '编码格式名。',
                              'description' => '编码格式名。',
                              'type' => 'string',
                              'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                            ),
                            'Profile' => 
                            array (
                              'title' => '编码器预设。',
                              'description' => '编码器预设。',
                              'type' => 'string',
                              'example' => 'High',
                            ),
                            'Codec_time_base' => 
                            array (
                              'description' => '编码时基。',
                              'type' => 'string',
                              'example' => '1/50',
                            ),
                            'Codec_tag_string' => 
                            array (
                              'title' => '编码格式标记文本。',
                              'description' => '编码格式标记文本。',
                              'type' => 'string',
                              'example' => '[27][0][0][0]',
                            ),
                            'Codec_tag' => 
                            array (
                              'title' => '编码格式标记。',
                              'description' => '编码格式标记。',
                              'type' => 'string',
                              'example' => '0x001b',
                            ),
                            'Width' => 
                            array (
                              'title' => '宽。',
                              'description' => '宽。',
                              'type' => 'string',
                              'example' => '848',
                            ),
                            'Height' => 
                            array (
                              'title' => '高。',
                              'description' => '高。',
                              'type' => 'string',
                              'example' => '478',
                            ),
                            'Has_b_frames' => 
                            array (
                              'title' => '是否有B帧。
取值: 
- 0: 没有 B 帧, 
- 1: 有一个 B 帧, 
- 2: 有多个连续 B 帧。',
                              'description' => '是否有B帧。
取值：
- 0：没有 B 帧, 
- 1：有一个 B 帧, 
- 2：有多个连续 B 帧。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'Sar' => 
                            array (
                              'title' => '采集点数宽高比。',
                              'description' => '采集点数宽高比。',
                              'type' => 'string',
                              'example' => '478:477',
                            ),
                            'Dar' => 
                            array (
                              'title' => '图像显示宽高比。',
                              'description' => '图像显示宽高比。',
                              'type' => 'string',
                              'example' => '16:9',
                            ),
                            'PixFmt' => 
                            array (
                              'title' => '颜色存储格式。',
                              'description' => '颜色存储格式。',
                              'type' => 'string',
                              'example' => 'yuv420p',
                            ),
                            'Level' => 
                            array (
                              'title' => '编码等级。',
                              'description' => '编码等级。',
                              'type' => 'string',
                              'example' => '31',
                            ),
                            'Fps' => 
                            array (
                              'title' => '帧率。',
                              'description' => '帧率。',
                              'type' => 'string',
                              'example' => '25.0',
                            ),
                            'Avg_fps' => 
                            array (
                              'title' => '平均帧率。',
                              'description' => '平均帧率。',
                              'type' => 'string',
                              'example' => '25.0',
                            ),
                            'Time_base' => 
                            array (
                              'title' => '时基。',
                              'description' => '时基。',
                              'type' => 'string',
                              'example' => '1/90000',
                            ),
                            'Start_time' => 
                            array (
                              'title' => '起始时间。',
                              'description' => '起始时间。',
                              'type' => 'string',
                              'example' => '1.473556',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长（单位: 秒）。',
                              'description' => '时长。',
                              'type' => 'string',
                              'example' => '403.039989',
                            ),
                            'Bit_rate' => 
                            array (
                              'title' => '码率。',
                              'description' => '码率。',
                              'type' => 'string',
                              'example' => '888.563',
                            ),
                            'NumFrames' => 
                            array (
                              'title' => '总帧数。',
                              'description' => '总帧数。',
                              'type' => 'string',
                              'example' => '10040',
                            ),
                            'Lang' => 
                            array (
                              'title' => '语言。',
                              'description' => '语言。',
                              'type' => 'string',
                              'example' => 'zh',
                            ),
                            'Rotate' => 
                            array (
                              'title' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                              'description' => '视频画面旋转角度。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'SubmitTime' => 
                  array (
                    'title' => '任务提交时间',
                    'description' => '任务提交时间。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'FinishTime' => 
                  array (
                    'title' => '任务完成时间',
                    'description' => '任务完成时间。',
                    'type' => 'string',
                    'example' => '2022-01-12T08:49:41Z',
                  ),
                  'RequestId' => 
                  array (
                    'title' => '请求 id',
                    'description' => '请求ID。',
                    'type' => 'string',
                    'example' => '4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"MediaInfoJob\\": {\\n    \\"Name\\": \\"job-name\\",\\n    \\"TriggerSource\\": \\"API\\",\\n    \\"JobId\\": \\"ab4802364a2e49208c99efab82dfa8e8\\",\\n    \\"Input\\": {\\n      \\"Type\\": \\"OSS\\",\\n      \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n    },\\n    \\"Async\\": true,\\n    \\"UserData\\": \\"user-data\\",\\n    \\"ScheduleConfig\\": {\\n      \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f9c56\\",\\n      \\"Priority\\": 5\\n    },\\n    \\"Status\\": \\"Init\\",\\n    \\"SubmitResultJson\\": {\\n      \\"test\\": \\"test\\",\\n      \\"test2\\": 1\\n    },\\n    \\"MediaInfoProperty\\": {\\n      \\"FileBasicInfo\\": {\\n        \\"MediaId\\": \\"e520090207114cc7a392d44f0b211574\\",\\n        \\"FileName\\": \\"file.m3u8\\",\\n        \\"FileStatus\\": \\"Normal\\",\\n        \\"FileType\\": \\"source_file\\",\\n        \\"FileSize\\": \\"31737\\",\\n        \\"FileUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8\\",\\n        \\"Region\\": \\"cn-shanghai\\",\\n        \\"FormatName\\": \\"hls,applehttp\\",\\n        \\"Duration\\": \\"403.039999\\",\\n        \\"Bitrate\\": \\"888.563\\",\\n        \\"Width\\": \\"848\\",\\n        \\"Height\\": \\"478\\"\\n      },\\n      \\"AudioStreamInfoList\\": [\\n        {\\n          \\"Index\\": \\"1\\",\\n          \\"CodecName\\": \\"aac\\",\\n          \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n          \\"CodecTimeBase\\": \\"1/44100\\",\\n          \\"CodecTagString\\": \\"[15][0][0][0]\\",\\n          \\"CodecTag\\": \\"0x000f\\",\\n          \\"SampleFmt\\": \\"fltp\\",\\n          \\"SampleRate\\": \\"44100\\",\\n          \\"Channels\\": \\"2\\",\\n          \\"ChannelLayout\\": \\"stereo\\",\\n          \\"Timebase\\": \\"1/90000\\",\\n          \\"StartTime\\": \\"1.473556\\",\\n          \\"Duration\\": \\"403.039989\\",\\n          \\"Bitrate\\": \\"0.f\\",\\n          \\"Lang\\": \\"us\\"\\n        }\\n      ],\\n      \\"VideoStreamInfoList\\": [\\n        {\\n          \\"Index\\": \\"0\\",\\n          \\"Codec_name\\": \\"h264\\",\\n          \\"Codec_long_name\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n          \\"Profile\\": \\"High\\",\\n          \\"Codec_time_base\\": \\"1/50\\",\\n          \\"Codec_tag_string\\": \\"[27][0][0][0]\\",\\n          \\"Codec_tag\\": \\"0x001b\\",\\n          \\"Width\\": \\"848\\",\\n          \\"Height\\": \\"478\\",\\n          \\"Has_b_frames\\": \\"2\\",\\n          \\"Sar\\": \\"478:477\\",\\n          \\"Dar\\": \\"16:9\\",\\n          \\"PixFmt\\": \\"yuv420p\\",\\n          \\"Level\\": \\"31\\",\\n          \\"Fps\\": \\"25.0\\",\\n          \\"Avg_fps\\": \\"25.0\\",\\n          \\"Time_base\\": \\"1/90000\\",\\n          \\"Start_time\\": \\"1.473556\\",\\n          \\"Duration\\": \\"403.039989\\",\\n          \\"Bit_rate\\": \\"888.563\\",\\n          \\"NumFrames\\": \\"10040\\",\\n          \\"Lang\\": \\"zh\\",\\n          \\"Rotate\\": \\"0\\"\\n        }\\n      ]\\n    },\\n    \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n    \\"RequestId\\": \\"4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168\\"\\n  }\\n}","type":"json"}]',
      'title' => '媒体信息任务查询',
      'summary' => '查询媒体信息。',
    ),
    'ListMediaInfoJobs' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务创建时间筛选条件的起始时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '任务创建时间筛选条件的起始时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndOfCreateTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务创建时间筛选条件的结束时间。格式为: yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '任务创建时间筛选条件的结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-15T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '按 jobId 筛选。',
            'description' => '按 jobId 筛选。',
            'type' => 'string',
            'required' => false,
            'example' => '7b38a5d86f1e47838927b6e7ccb1****',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
            'description' => '任务状态 

- Init: 已提交, 
- Success: 成功, 
- Fail: 失败',
            'type' => 'string',
            'required' => false,
            'example' => 'Success',
          ),
        ),
        4 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序顺序。目前只支持两种：CreateTimeDesc: 按创建时间降序 和 CreateTimeAsc: 按创建时间升序',
            'description' => '排序顺序。目前只支持两种：
- CreateTimeDesc：按创建时间降序
- CreateTimeAsc：按创建时间升序',
            'type' => 'string',
            'required' => false,
            'example' => 'CreateTimeDesc',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小。范围: 0~100，默认值：20。',
            'description' => '分页大小 default 10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连续分页查询时下一页的标记 (第一页没有)。',
            'description' => '连续分页查询时下一页的标记 （第一页没有）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ab4802364a2e49208c99efab82df****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求 id',
                'description' => '请求 ID。',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
              'Jobs' => 
              array (
                'description' => '媒体信息任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '任务详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '任务名字。',
                      'description' => '任务名字。',
                      'type' => 'string',
                      'example' => 'job-name',
                    ),
                    'TriggerSource' => 
                    array (
                      'title' => '任务来源。 API: API, WorkFlow: 工作流, Console: 控制台',
                      'description' => '任务来源。
-  API：API
- WorkFlow：工作流
- Console：控制台',
                      'type' => 'string',
                      'example' => 'API',
                    ),
                    'JobId' => 
                    array (
                      'title' => '任务 ID。',
                      'description' => '任务 ID。',
                      'type' => 'string',
                      'example' => 'ab4802364a2e49208c99efab82df****',
                    ),
                    'Input' => 
                    array (
                      'title' => '任务输入。',
                      'description' => '任务输入。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'title' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                          'description' => '媒体对象类型。
取值： 
- OSS: OSS文件。
- Media: 媒资 ID。
',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'Media' => 
                        array (
                          'title' => '媒体值：
      type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
      type 为 Media 时，为媒资 ID。',
                          'description' => '媒体值：

- type 为 OSS 时，为 URL, 支持 OSS 协议和 HTTP 协议；
- type 为 Media 时，为媒资 ID。',
                          'type' => 'string',
                          'example' => 'oss://bucket/path/to/video.mp4',
                        ),
                      ),
                    ),
                    'Async' => 
                    array (
                      'title' => '是否异步处理。',
                      'description' => '是否异步处理。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'UserData' => 
                    array (
                      'title' => '用户数据。',
                      'description' => '用户数据。',
                      'type' => 'string',
                      'example' => 'user-data',
                    ),
                    'ScheduleConfig' => 
                    array (
                      'title' => '调度信息。',
                      'description' => '调度信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PipelineId' => 
                        array (
                          'title' => '管道 ID。',
                          'description' => '管道 ID。',
                          'type' => 'string',
                          'example' => 'e37ebee5d98b4781897f6086e89f****',
                        ),
                        'Priority' => 
                        array (
                          'title' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                          'description' => '任务优先级。数字越大优先级越高，取值范围：1~10',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                      ),
                    ),
                    'Status' => 
                    array (
                      'title' => '任务状态 - Init: 已提交, Success: 成功, Fail: 失败',
                      'description' => '任务状态 

- Init: 已提交, 
- Success: 成功, 
- Fail: 失败',
                      'type' => 'string',
                      'example' => 'Init',
                    ),
                    'SubmitResultJson' => 
                    array (
                      'title' => '任务提交信息。',
                      'description' => '任务提交信息。',
                      'type' => 'object',
                    ),
                    'MediaInfoProperty' => 
                    array (
                      'title' => '媒体信息详情。',
                      'description' => '媒体信息详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FileBasicInfo' => 
                        array (
                          'title' => '基础文件信息',
                          'description' => '基础文件信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MediaId' => 
                            array (
                              'title' => '媒资 ID。',
                              'description' => '媒资 ID。',
                              'type' => 'string',
                              'example' => '4765337007f571edbfdf81848c01****',
                            ),
                            'FileName' => 
                            array (
                              'title' => '文件名。',
                              'description' => '文件名。',
                              'type' => 'string',
                              'example' => 'file.m3u8',
                            ),
                            'FileStatus' => 
                            array (
                              'title' => '文件状态。',
                              'description' => '文件状态。',
                              'type' => 'string',
                              'example' => 'Normal',
                            ),
                            'FileType' => 
                            array (
                              'title' => '文件类型。取值: source_file, transcode_file',
                              'description' => '文件类型。取值：source_file, transcode_file',
                              'type' => 'string',
                              'example' => 'source_file',
                            ),
                            'FileSize' => 
                            array (
                              'title' => '文件大小。单位：Byte。',
                              'description' => '文件大小。单位：Byte。',
                              'type' => 'string',
                              'example' => '31737',
                            ),
                            'FileUrl' => 
                            array (
                              'title' => '文件 URL。',
                              'description' => '文件 URL。',
                              'type' => 'string',
                              'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8',
                            ),
                            'Region' => 
                            array (
                              'title' => '文件所在区域。',
                              'description' => '文件所在区域。',
                              'type' => 'string',
                              'example' => 'cn-shanghai',
                            ),
                            'FormatName' => 
                            array (
                              'title' => '视频格式名称。',
                              'description' => '视频格式名称。',
                              'type' => 'string',
                              'example' => 'hls,applehttp',
                            ),
                            'Duration' => 
                            array (
                              'title' => '视频时长（单位: 秒）。',
                              'description' => '视频时长（单位：秒）。',
                              'type' => 'string',
                              'example' => '403.039999',
                            ),
                            'Bitrate' => 
                            array (
                              'title' => '视频码率。',
                              'description' => '视频码率。',
                              'type' => 'string',
                              'example' => '888.563',
                            ),
                            'Width' => 
                            array (
                              'title' => '宽。',
                              'description' => '宽。',
                              'type' => 'string',
                              'example' => '848',
                            ),
                            'Height' => 
                            array (
                              'title' => '高。',
                              'description' => '高。',
                              'type' => 'string',
                              'example' => '478',
                            ),
                          ),
                        ),
                        'AudioStreamInfoList' => 
                        array (
                          'title' => '音频流信息',
                          'description' => '音频流信息。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '音频流信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '流序号。',
                                'description' => '流序号。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式。',
                                'description' => '编码格式。',
                                'type' => 'string',
                                'example' => 'aac',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式名。',
                                'description' => '编码格式名。',
                                'type' => 'string',
                                'example' => 'AAC (Advanced Audio Coding)',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码器时间基。',
                                'description' => '编码器时间基。',
                                'type' => 'string',
                                'example' => '1/44100',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码器标签名。',
                                'description' => '编码器标签名。',
                                'type' => 'string',
                                'example' => '[15][0][0][0]',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码器标签。',
                                'description' => '编码器标签。',
                                'type' => 'string',
                                'example' => '0x000f',
                              ),
                              'SampleFmt' => 
                              array (
                                'title' => '采样格式。',
                                'description' => '采样格式。',
                                'type' => 'string',
                                'example' => 'fltp',
                              ),
                              'SampleRate' => 
                              array (
                                'title' => '采样率（单位: Hz）。',
                                'description' => '采样率（单位：Hz）。',
                                'type' => 'string',
                                'example' => '44100',
                              ),
                              'Channels' => 
                              array (
                                'title' => '声道数。',
                                'description' => '声道数。',
                                'type' => 'string',
                                'example' => '2',
                              ),
                              'ChannelLayout' => 
                              array (
                                'title' => '声道布局。',
                                'description' => '声道布局。',
                                'type' => 'string',
                                'example' => 'stereo',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时间基。',
                                'description' => '时间基。',
                                'type' => 'string',
                                'example' => '1/90000',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '开始时间。',
                                'description' => '开始时间。',
                                'type' => 'string',
                                'example' => '1.473556',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长（单位: 秒）。',
                                'description' => '时长（单位：秒）。',
                                'type' => 'string',
                                'example' => '403.039989',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率。',
                                'description' => '码率。',
                                'type' => 'string',
                                'example' => '0.f',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言。',
                                'description' => '语言。',
                                'type' => 'string',
                                'example' => 'cn',
                              ),
                            ),
                          ),
                        ),
                        'VideoStreamInfoList' => 
                        array (
                          'title' => '视频流信息',
                          'description' => '视频流信息。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '视频流信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '流序号。',
                                'description' => '流序号。',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'Codec_name' => 
                              array (
                                'title' => '编码格式。',
                                'description' => '编码格式。',
                                'type' => 'string',
                                'example' => 'h264',
                              ),
                              'Codec_long_name' => 
                              array (
                                'title' => '编码格式名。',
                                'description' => '编码格式名。',
                                'type' => 'string',
                                'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                              ),
                              'Profile' => 
                              array (
                                'title' => '编码器预设。',
                                'description' => '编码器预设。',
                                'type' => 'string',
                                'example' => 'High',
                              ),
                              'Codec_time_base' => 
                              array (
                                'description' => '编码时基。',
                                'type' => 'string',
                                'example' => '1/50',
                              ),
                              'Codec_tag_string' => 
                              array (
                                'title' => '编码格式标记文本。',
                                'description' => '编码格式标记文本。',
                                'type' => 'string',
                                'example' => '[27][0][0][0]',
                              ),
                              'Codec_tag' => 
                              array (
                                'title' => '编码格式标记。',
                                'description' => '编码格式标记。',
                                'type' => 'string',
                                'example' => '0x001b',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽。',
                                'description' => '宽。',
                                'type' => 'string',
                                'example' => '848',
                              ),
                              'Height' => 
                              array (
                                'title' => '高。',
                                'description' => '高。',
                                'type' => 'string',
                                'example' => '478',
                              ),
                              'Has_b_frames' => 
                              array (
                                'title' => '是否有B帧。
取值: 
- 0: 没有 B 帧, 
- 1: 有一个 B 帧, 
- 2: 有多个连续 B 帧。',
                                'description' => '是否有B帧。
取值：
- 0：没有 B 帧, 
- 1：有一个 B 帧, 
- 2：有多个连续 B 帧。',
                                'type' => 'string',
                                'example' => '2',
                              ),
                              'Sar' => 
                              array (
                                'title' => '采集点数宽高比。',
                                'description' => '采集点数宽高比。',
                                'type' => 'string',
                                'example' => '478:477',
                              ),
                              'Dar' => 
                              array (
                                'title' => '图像显示宽高比。',
                                'description' => '图像显示宽高比。',
                                'type' => 'string',
                                'example' => '16:9',
                              ),
                              'PixFmt' => 
                              array (
                                'title' => '颜色存储格式。',
                                'description' => '颜色存储格式。',
                                'type' => 'string',
                                'example' => 'yuv420p',
                              ),
                              'Level' => 
                              array (
                                'title' => '编码等级。',
                                'description' => '编码等级。',
                                'type' => 'string',
                                'example' => '31',
                              ),
                              'Fps' => 
                              array (
                                'title' => '帧率。',
                                'description' => '帧率。',
                                'type' => 'string',
                                'example' => '25.0',
                              ),
                              'Avg_fps' => 
                              array (
                                'title' => '平均帧率。',
                                'description' => '平均帧率。',
                                'type' => 'string',
                                'example' => '25.0',
                              ),
                              'Time_base' => 
                              array (
                                'title' => '时基。',
                                'description' => '时基。',
                                'type' => 'string',
                                'example' => '1/90000',
                              ),
                              'Start_time' => 
                              array (
                                'title' => '起始时间。',
                                'description' => '起始时间。',
                                'type' => 'string',
                                'example' => '1.473556',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长（单位: 秒）。',
                                'description' => '时长（单位：秒）。',
                                'type' => 'string',
                                'example' => '403.039989',
                              ),
                              'Bit_rate' => 
                              array (
                                'title' => '码率。',
                                'description' => '码率。',
                                'type' => 'string',
                                'example' => '888.563',
                              ),
                              'NumFrames' => 
                              array (
                                'title' => '总帧数。',
                                'description' => '总帧数。',
                                'type' => 'string',
                                'example' => '10040',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言。',
                                'description' => '语言。',
                                'type' => 'string',
                                'example' => 'cn',
                              ),
                              'Rotate' => 
                              array (
                                'title' => '视频画面旋转角度。
取值 0, 90, 180, 270。
默认值 0',
                                'description' => '视频画面旋转角度。

- 取值 0, 90, 180, 270。
- 默认值 0',
                                'type' => 'string',
                                'example' => '0',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'SubmitTime' => 
                    array (
                      'title' => '任务提交时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                      'description' => '任务提交时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                      'type' => 'string',
                      'example' => '2022-01-12T08:49:41Z',
                    ),
                    'FinishTime' => 
                    array (
                      'title' => '任务完成时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                      'description' => '任务完成时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                      'type' => 'string',
                      'example' => '2022-01-12T08:49:41Z',
                    ),
                    'RequestId' => 
                    array (
                      'title' => '请求 ID。',
                      'description' => '请求 ID。',
                      'type' => 'string',
                      'example' => '4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168',
                    ),
                  ),
                ),
              ),
              'NextPageToken' => 
              array (
                'title' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
                'description' => '下一页标识，第一次提交时为空即可。下一页标识将在第一次查询后返回。',
                'type' => 'string',
                'example' => '019daf5780f74831b0e1a767c9f1c178',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\",\\n  \\"Jobs\\": [\\n    {\\n      \\"Name\\": \\"job-name\\",\\n      \\"TriggerSource\\": \\"API\\",\\n      \\"JobId\\": \\"ab4802364a2e49208c99efab82df****\\",\\n      \\"Input\\": {\\n        \\"Type\\": \\"OSS\\",\\n        \\"Media\\": \\"oss://bucket/path/to/video.mp4\\"\\n      },\\n      \\"Async\\": true,\\n      \\"UserData\\": \\"user-data\\",\\n      \\"ScheduleConfig\\": {\\n        \\"PipelineId\\": \\"e37ebee5d98b4781897f6086e89f****\\",\\n        \\"Priority\\": 5\\n      },\\n      \\"Status\\": \\"Init\\",\\n      \\"SubmitResultJson\\": {\\n        \\"test\\": \\"test\\",\\n        \\"test2\\": 1\\n      },\\n      \\"MediaInfoProperty\\": {\\n        \\"FileBasicInfo\\": {\\n          \\"MediaId\\": \\"4765337007f571edbfdf81848c01****\\",\\n          \\"FileName\\": \\"file.m3u8\\",\\n          \\"FileStatus\\": \\"Normal\\",\\n          \\"FileType\\": \\"source_file\\",\\n          \\"FileSize\\": \\"31737\\",\\n          \\"FileUrl\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/path/to/file.m3u8\\",\\n          \\"Region\\": \\"cn-shanghai\\",\\n          \\"FormatName\\": \\"hls,applehttp\\",\\n          \\"Duration\\": \\"403.039999\\",\\n          \\"Bitrate\\": \\"888.563\\",\\n          \\"Width\\": \\"848\\",\\n          \\"Height\\": \\"478\\"\\n        },\\n        \\"AudioStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"1\\",\\n            \\"CodecName\\": \\"aac\\",\\n            \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n            \\"CodecTimeBase\\": \\"1/44100\\",\\n            \\"CodecTagString\\": \\"[15][0][0][0]\\",\\n            \\"CodecTag\\": \\"0x000f\\",\\n            \\"SampleFmt\\": \\"fltp\\",\\n            \\"SampleRate\\": \\"44100\\",\\n            \\"Channels\\": \\"2\\",\\n            \\"ChannelLayout\\": \\"stereo\\",\\n            \\"Timebase\\": \\"1/90000\\",\\n            \\"StartTime\\": \\"1.473556\\",\\n            \\"Duration\\": \\"403.039989\\",\\n            \\"Bitrate\\": \\"0.f\\",\\n            \\"Lang\\": \\"cn\\"\\n          }\\n        ],\\n        \\"VideoStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"0\\",\\n            \\"Codec_name\\": \\"h264\\",\\n            \\"Codec_long_name\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n            \\"Profile\\": \\"High\\",\\n            \\"Codec_time_base\\": \\"1/50\\",\\n            \\"Codec_tag_string\\": \\"[27][0][0][0]\\",\\n            \\"Codec_tag\\": \\"0x001b\\",\\n            \\"Width\\": \\"848\\",\\n            \\"Height\\": \\"478\\",\\n            \\"Has_b_frames\\": \\"2\\",\\n            \\"Sar\\": \\"478:477\\",\\n            \\"Dar\\": \\"16:9\\",\\n            \\"PixFmt\\": \\"yuv420p\\",\\n            \\"Level\\": \\"31\\",\\n            \\"Fps\\": \\"25.0\\",\\n            \\"Avg_fps\\": \\"25.0\\",\\n            \\"Time_base\\": \\"1/90000\\",\\n            \\"Start_time\\": \\"1.473556\\",\\n            \\"Duration\\": \\"403.039989\\",\\n            \\"Bit_rate\\": \\"888.563\\",\\n            \\"NumFrames\\": \\"10040\\",\\n            \\"Lang\\": \\"cn\\",\\n            \\"Rotate\\": \\"0\\"\\n          }\\n        ]\\n      },\\n      \\"SubmitTime\\": \\"2022-01-12T08:49:41Z\\",\\n      \\"FinishTime\\": \\"2022-01-12T08:49:41Z\\",\\n      \\"RequestId\\": \\"4879B9DE-E4B6-19DC-91F5-9D5F4DCE4168\\"\\n    }\\n  ],\\n  \\"NextPageToken\\": \\"019daf5780f74831b0e1a767c9f1c178\\"\\n}","type":"json"}]',
      'title' => '查询媒体信息任务列表',
      'summary' => '查询媒体信息任务列表。',
    ),
    'CreateLiveTranscodeTemplate' => 
    array (
      'summary' => '调用CreateLiveTranscodeTemplate创建实时转码模板，便于提交实时转码任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模版类型。
- normal - 普通
- narrow-band - 窄高
- audio-only - 纯音频
- origin - 原画',
            'type' => 'string',
            'required' => true,
            'example' => 'normal',
            'enum' => 
            array (
              0 => 'normal',
              1 => 'narrow-band',
              2 => 'audio-only',
              3 => 'origin',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'my template',
            'maxLength' => 20,
            'minLength' => 1,
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '模版配置。',
            'type' => 'object',
            'properties' => 
            array (
              'VideoParams' => 
              array (
                'description' => '视频参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Codec' => 
                  array (
                    'description' => '编码类型。可选值：

- H.264
- H.265',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'H.264',
                    'enum' => 
                    array (
                      0 => 'H.264',
                      1 => 'H.265',
                    ),
                  ),
                  'Height' => 
                  array (
                    'description' => '转码视频高度。取值：
Height ≥ 128
max（Height,Width）≤ 2560
min（Height,Width）≤ 1440

注意265窄带高清模板不得超过1280×720。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '720',
                  ),
                  'Width' => 
                  array (
                    'description' => '转码视频宽度。取值：
Width ≥ 128
max（Height,Width）≤ 2560
min（Height,Width）≤ 1440

注意265窄带高清模板不得超过1280×720。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '1280',
                  ),
                  'Fps' => 
                  array (
                    'description' => '转码视频帧率。单位：FPS，取值：1~60。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '25',
                  ),
                  'Bitrate' => 
                  array (
                    'description' => '转码视频比特率。单位：kbps，取值：1~6000。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '2500',
                  ),
                  'Gop' => 
                  array (
                    'description' => '视频GOP（Group of Picture）。单位：帧，取值：1~3000。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '1000',
                  ),
                  'Profile' => 
                  array (
                    'description' => '编码级别。视频支持的一组特定的编码功能，一般值越大得到的画面质量越好，同时编解码消耗的资源也越高。取值：
1：baseline（适合移动设备）。
2：main（适合标准分辨率设备）。
3：high（适合高分辨率设备）。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '2',
                    'enum' => 
                    array (
                      0 => '1',
                      1 => '2',
                      2 => '3',
                    ),
                  ),
                ),
                'required' => false,
              ),
              'AudioParams' => 
              array (
                'description' => '音频参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Codec' => 
                  array (
                    'description' => '音频编码格式。取值：

- AAC
- MP3',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'AAC',
                    'enum' => 
                    array (
                      0 => 'AAC',
                      1 => 'MP3',
                    ),
                  ),
                  'Bitrate' => 
                  array (
                    'description' => '转码音频比特率。单位：kbps，取值：1~1000。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '100',
                  ),
                  'Samplerate' => 
                  array (
                    'description' => '音频采样率。取值：22050~96000。

注意如果AudioProfile取值为aac_ld，则采样率不能超过44100。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '44100',
                  ),
                  'Channels' => 
                  array (
                    'description' => '音频声道数。取值
1：单声道。
2：双声道。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '2',
                  ),
                  'Profile' => 
                  array (
                    'description' => '音频编码预置。当Codec为AAC时，取值：
- aac_low
- aac_he
- aac_he\\_v2
- aac_ld',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'aaclow',
                    'enum' => 
                    array (
                      0 => 'aac_low',
                      1 => 'aac_he',
                      2 => 'aac_he_v2',
                      3 => 'aac_ld',
                    ),
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'TemplateId' => 
              array (
                'description' => '模版ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.Height',
            'errorMessage' => 'Invalid Parameters: Height',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParam.Width',
            'errorMessage' => 'Invalid Parameters: Width',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParam.Fps',
            'errorMessage' => 'Invalid Parameters: Fps',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","type":"json"}]',
      'title' => '创建实时媒体转码模版',
    ),
    'GetLiveTranscodeTemplate' => 
    array (
      'summary' => '调用GetLiveTranscodeTemplate获取单个实时转码模板。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287666****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'TemplateContent' => 
              array (
                'description' => '模版内容。',
                'type' => 'object',
                'properties' => 
                array (
                  'Name' => 
                  array (
                    'description' => '模板名称。',
                    'type' => 'string',
                    'example' => 'my-template',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '模板ID。',
                    'type' => 'string',
                    'example' => 'bcfa57950bc649b2abfb476ecd36ea4f',
                  ),
                  'Type' => 
                  array (
                    'description' => '模板类型。',
                    'type' => 'string',
                    'example' => 'normal',
                  ),
                  'Category' => 
                  array (
                    'description' => '模版类别。
- system: 系统
- customized: 自定义',
                    'type' => 'string',
                    'example' => 'customized',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '模版创建时间。',
                    'type' => 'string',
                    'example' => '2022-07-25T06:15:14Z',
                  ),
                  'TemplateConfig' => 
                  array (
                    'description' => '模版配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VideoParams' => 
                      array (
                        'description' => '视频参数。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Codec' => 
                          array (
                            'description' => '编码类型。',
                            'type' => 'string',
                            'example' => 'H.264',
                          ),
                          'Height' => 
                          array (
                            'description' => '转码视频高度。',
                            'type' => 'string',
                            'example' => '720',
                          ),
                          'Width' => 
                          array (
                            'description' => '转码视频宽度。',
                            'type' => 'string',
                            'example' => '1280',
                          ),
                          'Fps' => 
                          array (
                            'description' => '转码视频帧率。',
                            'type' => 'string',
                            'example' => '30',
                          ),
                          'Bitrate' => 
                          array (
                            'description' => '转码视频比特率。',
                            'type' => 'string',
                            'example' => '2500',
                          ),
                          'Gop' => 
                          array (
                            'description' => '视频GOP（Group of Picture）',
                            'type' => 'string',
                            'example' => '1000',
                          ),
                          'Profile' => 
                          array (
                            'description' => '编码级别。',
                            'type' => 'string',
                            'example' => '2',
                          ),
                        ),
                      ),
                      'AudioParams' => 
                      array (
                        'description' => '音频参数。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Codec' => 
                          array (
                            'description' => '音频编码格式。',
                            'type' => 'string',
                            'example' => 'AAC',
                          ),
                          'Bitrate' => 
                          array (
                            'description' => '转码音频比特率。',
                            'type' => 'string',
                            'example' => '1000',
                          ),
                          'Samplerate' => 
                          array (
                            'description' => '音频采样率。',
                            'type' => 'string',
                            'example' => '44100',
                          ),
                          'Channels' => 
                          array (
                            'description' => '声道数。',
                            'type' => 'string',
                            'example' => '2',
                          ),
                          'Profile' => 
                          array (
                            'description' => '音频编码预置。',
                            'type' => 'string',
                            'example' => '1',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"TemplateContent\\": {\\n    \\"Name\\": \\"my-template\\",\\n    \\"TemplateId\\": \\"bcfa57950bc649b2abfb476ecd36ea4f\\",\\n    \\"Type\\": \\"normal\\",\\n    \\"Category\\": \\"customized\\",\\n    \\"CreateTime\\": \\"2022-07-25T06:15:14Z\\",\\n    \\"TemplateConfig\\": {\\n      \\"VideoParams\\": {\\n        \\"Codec\\": \\"H.264\\",\\n        \\"Height\\": \\"720\\",\\n        \\"Width\\": \\"1280\\",\\n        \\"Fps\\": \\"30\\",\\n        \\"Bitrate\\": \\"2500\\",\\n        \\"Gop\\": \\"1000\\",\\n        \\"Profile\\": \\"2\\"\\n      },\\n      \\"AudioParams\\": {\\n        \\"Codec\\": \\"AAC\\",\\n        \\"Bitrate\\": \\"1000\\",\\n        \\"Samplerate\\": \\"44100\\",\\n        \\"Channels\\": \\"2\\",\\n        \\"Profile\\": \\"1\\"\\n      }\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '获取单个实时媒体转码模版',
    ),
    'UpdateLiveTranscodeTemplate' => 
    array (
      'summary' => '更新实时转码模板。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板ID。可以通过台[智能媒体服务控制台](https://ims.console.aliyun.com/summary)>模板管理>实时转码模板或[创建实时转码模板](~~449217~~)的返回参数中获取。',
            'type' => 'string',
            'required' => true,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => '模板1130-2',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '模版配置。',
            'type' => 'object',
            'properties' => 
            array (
              'VideoParams' => 
              array (
                'description' => '视频参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Codec' => 
                  array (
                    'description' => '编码类型。可选值：

- H.264
- H.265',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'H.264' => 'H.264',
                      'H.265' => 'H.265',
                    ),
                    'example' => 'H.264',
                    'enum' => 
                    array (
                    ),
                  ),
                  'Height' => 
                  array (
                    'description' => '转码视频高度。取值：

- Height ≥ 128
- max（Height,Width）≤ 2560
- min（Height,Width）≤ 1440

> H.265窄带高清模板不得超过1280×720。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '720',
                  ),
                  'Width' => 
                  array (
                    'description' => '转码视频宽度。取值：
- Width ≥ 128
- max（Height,Width）≤ 2560
- min（Height,Width）≤ 1440

>H.265窄带高清模板不得超过1280×720。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '1280',
                  ),
                  'Fps' => 
                  array (
                    'description' => '转码视频帧率。单位：FPS，取值：1~60。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '30',
                  ),
                  'Bitrate' => 
                  array (
                    'description' => '转码视频比特率。单位：kbps，取值：1~6000。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '2500',
                  ),
                  'Gop' => 
                  array (
                    'description' => '视频GOP（Group of Picture）。单位：帧，取值：1~3000。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '1000',
                  ),
                  'Profile' => 
                  array (
                    'description' => '编码级别。视频支持的一组特定的编码功能，一般值越大得到的画面质量越好，同时编解码消耗的资源也越高。取值：
- 1：baseline（适合移动设备）。
- 2：main（适合标准分辨率设备）。
- 3：high（适合高分辨率设备）。',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      1 => '1',
                      2 => '2',
                      3 => '3',
                    ),
                    'example' => '2',
                  ),
                ),
                'required' => false,
              ),
              'AudioParams' => 
              array (
                'description' => '音频参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Codec' => 
                  array (
                    'description' => '音频编码格式。取值：
AAC
MP3',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'MP3' => 'MP3',
                      'AAC' => 'AAC',
                    ),
                    'example' => 'AAC',
                    'enum' => 
                    array (
                    ),
                  ),
                  'Bitrate' => 
                  array (
                    'description' => '转码音频比特率。单位：kbps，取值：1~1000。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '100',
                  ),
                  'Samplerate' => 
                  array (
                    'description' => '音频采样率。取值：22050~96000。

注意如果AudioProfile取值为aac_ld，则采样率不能超过44100。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '44100',
                  ),
                  'Channels' => 
                  array (
                    'description' => '音频声道数。取值
1：单声道。
2：双声道。',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      1 => '1',
                      2 => '2',
                    ),
                    'example' => '2',
                  ),
                  'Profile' => 
                  array (
                    'description' => '音频编码预置。当Codec为AAC时，取值：

- aac_low
- aac_he
- aac_he\\_v2
- aac_ld',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'aac_low',
                    'enum' => 
                    array (
                    ),
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.TemplateIdInuse',
            'errorMessage' => 'Parameters: templateId is inuse.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\"\\n}","type":"json"}]',
      'title' => '更新实时媒体转码模版',
    ),
    'DeleteLiveTranscodeTemplate' => 
    array (
      'summary' => '删除实时转码模板。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模板ID。可以通过[智能媒体服务控制台](https://ice.console.aliyun.com/summary)>模板管理>实时转码模板或[创建实时转码模板](~~449217~~)的返回参数中获取。',
            'type' => 'string',
            'required' => true,
            'example' => '****d80e4e4044975745c14b****',
            'enum' => 
            array (
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam',
            'errorMessage' => 'Parameters: templateId is inuse.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\"\\n}","type":"json"}]',
      'title' => '删除实时媒体转码模版',
    ),
    'ListLiveTranscodeTemplates' => 
    array (
      'summary' => '调用ListLiveTranscodeTemplates获取实时媒体转码模版列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模版类型。

- normal - 普通
- narrow-band - 窄高
- audio-only - 纯音频
- origin - 原画',
            'type' => 'string',
            'required' => false,
            'example' => 'normal',
            'enum' => 
            array (
              0 => 'normal',
              1 => 'narrow-band',
              2 => 'audio-only',
              3 => 'origin',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'VideoCodec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频编码。可选值：

- H.264
- H.265',
            'type' => 'string',
            'required' => false,
            'example' => 'H.264',
            'enum' => 
            array (
              0 => 'H.264',
              1 => 'H.265',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '20',
            'default' => '50',
          ),
        ),
        4 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序，按CreateTime排序，默认是desc。

- asc - 正序
- desc - 倒序',
            'type' => 'string',
            'required' => false,
            'example' => 'asc',
            'default' => 'desc',
            'enum' => 
            array (
              0 => 'asc',
              1 => 'desc',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词。模板ID/名称，名称支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'my_template',
          ),
        ),
        6 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模版类别。
- system: 系统
- customized: 自定义',
            'type' => 'string',
            'required' => false,
            'example' => 'customized',
            'enum' => 
            array (
              0 => 'system',
              1 => 'customized',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'TotalCount' => 
              array (
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'TemplateContentList' => 
              array (
                'description' => '转码模版列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'description' => '模版名称。',
                      'type' => 'string',
                      'example' => 'my_template',
                    ),
                    'TemplateId' => 
                    array (
                      'description' => '模板ID。',
                      'type' => 'string',
                      'example' => '9b1571b513cb44f7a1ba6ae561ff46f7',
                    ),
                    'Type' => 
                    array (
                      'description' => '模板类型。',
                      'type' => 'string',
                      'example' => 'normal',
                    ),
                    'Category' => 
                    array (
                      'description' => '模版类别。',
                      'type' => 'string',
                      'example' => 'system',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-07-20T03:26:36Z',
                    ),
                    'TemplateConfig' => 
                    array (
                      'description' => '模版配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VideoParams' => 
                        array (
                          'description' => '视频参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Codec' => 
                            array (
                              'description' => '编码格式',
                              'type' => 'string',
                              'example' => '264',
                            ),
                            'Height' => 
                            array (
                              'description' => '视频分辨率高。',
                              'type' => 'string',
                              'example' => '1280',
                            ),
                            'Width' => 
                            array (
                              'description' => '视频分辨率宽。',
                              'type' => 'string',
                              'example' => '720',
                            ),
                            'Fps' => 
                            array (
                              'description' => '视频帧率',
                              'type' => 'string',
                              'example' => '30',
                            ),
                            'Bitrate' => 
                            array (
                              'description' => '视频码率。',
                              'type' => 'string',
                              'example' => '2500',
                            ),
                            'Gop' => 
                            array (
                              'description' => '视频Gop，单位：帧',
                              'type' => 'string',
                              'example' => '1000',
                            ),
                            'Profile' => 
                            array (
                              'description' => '编码级别。',
                              'type' => 'string',
                              'example' => '3',
                            ),
                          ),
                        ),
                        'AudioParams' => 
                        array (
                          'description' => '音频参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Codec' => 
                            array (
                              'description' => '音频编码。',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'AAC',
                            ),
                            'Bitrate' => 
                            array (
                              'description' => '音频码率。',
                              'type' => 'string',
                              'example' => '1000',
                            ),
                            'Samplerate' => 
                            array (
                              'description' => '音频采样率。',
                              'type' => 'string',
                              'example' => '44100',
                            ),
                            'Channels' => 
                            array (
                              'description' => '声道数。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'Profile' => 
                            array (
                              'description' => '编码级别。',
                              'type' => 'string',
                              'example' => 'aac_low',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"TotalCount\\": 100,\\n  \\"TemplateContentList\\": [\\n    {\\n      \\"Name\\": \\"my_template\\",\\n      \\"TemplateId\\": \\"9b1571b513cb44f7a1ba6ae561ff46f7\\",\\n      \\"Type\\": \\"normal\\",\\n      \\"Category\\": \\"system\\",\\n      \\"CreateTime\\": \\"2022-07-20T03:26:36Z\\",\\n      \\"TemplateConfig\\": {\\n        \\"VideoParams\\": {\\n          \\"Codec\\": \\"264\\",\\n          \\"Height\\": \\"1280\\",\\n          \\"Width\\": \\"720\\",\\n          \\"Fps\\": \\"30\\",\\n          \\"Bitrate\\": \\"2500\\",\\n          \\"Gop\\": \\"1000\\",\\n          \\"Profile\\": \\"3\\"\\n        },\\n        \\"AudioParams\\": {\\n          \\"Codec\\": \\"AAC\\",\\n          \\"Bitrate\\": \\"1000\\",\\n          \\"Samplerate\\": \\"44100\\",\\n          \\"Channels\\": \\"2\\",\\n          \\"Profile\\": \\"aac_low\\"\\n        }\\n      }\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取实时媒体转码模版列表',
    ),
    'SubmitLiveTranscodeJob' => 
    array (
      'summary' => '调用SubmitLiveTranscodeJob提交实时转码任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'task1',
            'maxLength' => 128,
            'minLength' => 1,
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        2 => 
        array (
          'name' => 'StartMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动模式。

- 0 - 立即启动
- 1 - 定时启动',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'StreamInput',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '流输入信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '流输入类型。目前只支持rtmp。',
                'type' => 'string',
                'required' => true,
                'example' => 'rtmp',
                'enum' => 
                array (
                  0 => 'rtmp',
                ),
              ),
              'InputUrl' => 
              array (
                'description' => '输入流地址。',
                'type' => 'string',
                'required' => true,
                'example' => 'rtmp://mydomain/app/stream1',
              ),
            ),
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'TranscodeOutput',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '转码输出信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输出流类型。
LiveCenter - 阿里云视频直播域名生成地址
目前只支持LiveCenter
',
                'type' => 'string',
                'required' => true,
                'example' => 'LiveCenter',
              ),
              'DomainName' => 
              array (
                'description' => '视频直播播流域名。',
                'type' => 'string',
                'required' => false,
                'example' => 'mydomain',
              ),
            ),
            'required' => true,
          ),
        ),
        5 => 
        array (
          'name' => 'TimedConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '定时任务配置。
当StartMode=1时该参数必填。',
            'type' => 'object',
            'properties' => 
            array (
              'StartTime' => 
              array (
                'description' => '转码任务启动时间。
注意：启动时间与当前时间的跨度不可超过7天。',
                'type' => 'string',
                'required' => false,
                'example' => '2022-02-21T00:00:00Z',
              ),
              'EndTime' => 
              array (
                'description' => '转码任务停止时间。
注意：停止时间与当前时间的跨度不可超过7天。',
                'type' => 'string',
                'required' => false,
                'example' => '2022-07-20T08:20:32Z',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'JobId' => 
              array (
                'description' => '转码任务ID。',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","type":"json"}]',
      'title' => '提交实时媒体转码任务',
      'description' => '- 提交立即生效的转码任务时，请确保输入的原始流在可播流
- 提交延时转码任务时，请确保在指定时间前原始流可播流',
    ),
    'SendLiveTranscodeJobCommand' => 
    array (
      'summary' => '发送实时转码任务指令。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '转码任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
            'enum' => 
            array (
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'Command',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作指令。当前仅支持stop。用于关闭转码任务。',
            'type' => 'string',
            'required' => true,
            'example' => 'stop',
            'enum' => 
            array (
              0 => 'stop',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\"\\n}","type":"json"}]',
      'title' => '发送实时转码任务指令',
    ),
    'GetLiveTranscodeJob' => 
    array (
      'summary' => '调用GetLiveTranscodeJob获取单个实时转码任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '转码任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
            'enum' => 
            array (
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Job' => 
              array (
                'description' => '转码任务信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Name' => 
                  array (
                    'description' => '转码任务名称。',
                    'type' => 'string',
                    'example' => 'task1',
                  ),
                  'JobId' => 
                  array (
                    'description' => '转码任务ID。',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'TemplateType' => 
                  array (
                    'description' => '模板类型',
                    'type' => 'string',
                    'example' => 'normal',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '模板ID',
                    'type' => 'string',
                    'example' => 'b6491d5b3e514b7d895d14b5453ea119',
                  ),
                  'TemplateName' => 
                  array (
                    'description' => '模板名称。',
                    'type' => 'string',
                    'example' => 'basic',
                  ),
                  'StartMode' => 
                  array (
                    'description' => '启动模式。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态。

- 0 - 未启动
- 1 - 运行中
- 2 - 已停止',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'StreamInput' => 
                  array (
                    'description' => '输入流信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '流输入类型。',
                        'type' => 'string',
                        'example' => 'rtmp',
                      ),
                      'InputUrl' => 
                      array (
                        'description' => '输入流地址。',
                        'type' => 'string',
                        'example' => 'rtmp://mydomain/app/stream1',
                      ),
                    ),
                  ),
                  'OutputStream' => 
                  array (
                    'description' => '输出流信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'StreamInfos' => 
                      array (
                        'description' => '输出流信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '输出流协议类型。
目前只支持rtmp协议。',
                              'type' => 'string',
                              'example' => 'rtmp',
                            ),
                            'OutputUrl' => 
                            array (
                              'description' => '输出流地址。',
                              'type' => 'string',
                              'example' => 'rtmp://mydomain/app/mytranscode1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-07-20T02:48:58Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Job\\": {\\n    \\"Name\\": \\"task1\\",\\n    \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"TemplateType\\": \\"normal\\",\\n    \\"TemplateId\\": \\"b6491d5b3e514b7d895d14b5453ea119\\",\\n    \\"TemplateName\\": \\"basic\\",\\n    \\"StartMode\\": 0,\\n    \\"Status\\": 1,\\n    \\"StreamInput\\": {\\n      \\"Type\\": \\"rtmp\\",\\n      \\"InputUrl\\": \\"rtmp://mydomain/app/stream1\\"\\n    },\\n    \\"OutputStream\\": {\\n      \\"StreamInfos\\": [\\n        {\\n          \\"Type\\": \\"rtmp\\",\\n          \\"OutputUrl\\": \\"rtmp://mydomain/app/mytranscode1\\"\\n        }\\n      ]\\n    },\\n    \\"CreateTime\\": \\"2022-07-20T02:48:58Z\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取单个实施媒体转码任务',
    ),
    'UpdateLiveTranscodeJob' => 
    array (
      'summary' => '调用UpdateLiveTranscodeJob更新实时转码任务信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'mytest3',
            'maxLength' => 128,
            'minLength' => 1,
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        2 => 
        array (
          'name' => 'StreamInput',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '流输入信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '流输入类型。目前只支持rtmp。',
                'type' => 'string',
                'required' => true,
                'example' => 'rtmp',
                'enum' => 
                array (
                  0 => 'rtmp',
                ),
              ),
              'InputUrl' => 
              array (
                'description' => '输入流地址。',
                'type' => 'string',
                'required' => true,
                'example' => 'rtmp://mydomain/app/stream1',
              ),
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'TranscodeOutput',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '转码输出信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输出流类型。
LiveCenter - 阿里云视频直播域名生成地址
目前只支持LiveCenter',
                'type' => 'string',
                'required' => true,
                'example' => 'LiveCenter',
              ),
              'DomainName' => 
              array (
                'description' => '视频直播播流域名。',
                'type' => 'string',
                'required' => true,
                'example' => 'mydomain',
              ),
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'TimedConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '定时任务配置。',
            'type' => 'object',
            'properties' => 
            array (
              'StartTime' => 
              array (
                'description' => '转码任务启动时间。
注意：启动时间与当前时间的跨度不可超过7天。',
                'type' => 'string',
                'required' => false,
                'example' => '2022-06-19T02:16:41Z
',
              ),
              'EndTime' => 
              array (
                'description' => '转码任务停止时间。
注意：停止时间与当前时间的跨度不可超过7天。',
                'type' => 'string',
                'required' => false,
                'example' => '2022-08-05T06:08:31Z',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\"\\n}","type":"json"}]',
      'title' => '更新实时媒体转码任务',
      'description' => '- 非定时启动的任务，只能修改Name，所有状态均可。
- 定时启动的任务，Name、StreamInput、TranscodeOutput、TimedConfig都可以修改，但StreamInput、TranscodeOutput、TimedConfig仅允许未启动状态下的修改。',
    ),
    'DeleteLiveTranscodeJob' => 
    array (
      'summary' => '删除指定转码任务',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '转码任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
            'enum' => 
            array (
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\"\\n}","type":"json"}]',
      'title' => '删除实时媒体转码任务',
    ),
    'ListLiveTranscodeJobs' => 
    array (
      'summary' => '调用ListLiveTranscodeJobs获取实时媒体转码任务列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '转码任务对应的模版类型。

- normal - 普通
- narrow-band - 窄高
- audio-only - 纯音频
- origin - 原画',
            'type' => 'string',
            'required' => false,
            'example' => 'normal',
            'enum' => 
            array (
              0 => 'normal',
              1 => 'narrow-band',
              2 => 'audio-only',
              3 => 'origin',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'StartMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动模式。

- 0 - 立即启动
- 1 - 定时启动',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enumValueTitles' => 
            array (
              0 => '0',
              1 => '1',
            ),
            'example' => '0',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态。

0 - 未启动
1 - 运行中
2 - 已停止',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enumValueTitles' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
            ),
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '20',
            'default' => '50',
          ),
        ),
        5 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序，按CreateTime排序，默认是desc。

- asc - 正序
- desc - 倒序',
            'type' => 'string',
            'required' => false,
            'example' => 'asc',
            'default' => 'desc',
            'enum' => 
            array (
              0 => 'asc',
              1 => 'desc',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词。任务ID/名称，名称支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => '24ecbb5c-4f98-4194-9400-f17102e27fc5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'TotalCount' => 
              array (
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'JobList' => 
              array (
                'description' => '转码任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'description' => '转码任务名称。',
                      'type' => 'string',
                      'example' => 'mytask',
                    ),
                    'JobId' => 
                    array (
                      'description' => '任务ID。',
                      'type' => 'string',
                      'example' => '****a046-263c-3560-978a-fb287782****',
                    ),
                    'TemplateType' => 
                    array (
                      'description' => '转码任务对应转码模版的类型。',
                      'type' => 'string',
                      'example' => 'normal',
                    ),
                    'TemplateId' => 
                    array (
                      'description' => '转码任务对应的模板ID。',
                      'type' => 'string',
                      'example' => '****a046-263c-3560-978a-fb287666****',
                    ),
                    'TemplateName' => 
                    array (
                      'description' => '模板名称。',
                      'type' => 'string',
                      'example' => '模板1',
                    ),
                    'StartMode' => 
                    array (
                      'description' => '启动模式。
',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'Status' => 
                    array (
                      'description' => '任务状态。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'StreamInput' => 
                    array (
                      'description' => '输入流信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '输入流类型。',
                          'type' => 'string',
                          'example' => 'rtmp',
                        ),
                        'InputUrl' => 
                        array (
                          'description' => '输入流地址。',
                          'type' => 'string',
                          'example' => 'rtmp://mydomain/app/stream1',
                        ),
                      ),
                    ),
                    'OutputStream' => 
                    array (
                      'description' => '输出流信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StreamInfos' => 
                        array (
                          'description' => '播放地址列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Type' => 
                              array (
                                'description' => '输出流协议类型。
目前只支持rtmp协议。',
                                'type' => 'string',
                                'example' => 'rtmp',
                              ),
                              'OutputUrl' => 
                              array (
                                'description' => '输出流地址。',
                                'type' => 'string',
                                'example' => 'rtmp://mydomain/app/mytranscode1',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-07-20T02:48:58Z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"TotalCount\\": 100,\\n  \\"JobList\\": [\\n    {\\n      \\"Name\\": \\"mytask\\",\\n      \\"JobId\\": \\"****a046-263c-3560-978a-fb287782****\\",\\n      \\"TemplateType\\": \\"normal\\",\\n      \\"TemplateId\\": \\"****a046-263c-3560-978a-fb287666****\\",\\n      \\"TemplateName\\": \\"模板1\\",\\n      \\"StartMode\\": 0,\\n      \\"Status\\": 1,\\n      \\"StreamInput\\": {\\n        \\"Type\\": \\"rtmp\\",\\n        \\"InputUrl\\": \\"rtmp://mydomain/app/stream1\\"\\n      },\\n      \\"OutputStream\\": {\\n        \\"StreamInfos\\": [\\n          {\\n            \\"Type\\": \\"rtmp\\",\\n            \\"OutputUrl\\": \\"rtmp://mydomain/app/mytranscode1\\"\\n          }\\n        ]\\n      },\\n      \\"CreateTime\\": \\"2022-07-20T02:48:58Z\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取实时媒体转码任务列表',
    ),
    'CreateLiveRecordTemplate' => 
    array (
      'summary' => '调用CreateLiveRecordTemplate创建实时录制模板，便于提交实时录制任务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RecordFormat',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '录制格式',
            'description' => '录制格式列表',
            'type' => 'array',
            'items' => 
            array (
              'title' => '格式',
              'description' => '录制格式',
              'type' => 'object',
              'properties' => 
              array (
                'Format' => 
                array (
                  'title' => '格式',
                  'description' => '格式。

>如果选择m3u8格式，必须同时设置请求参数SliceOssObjectPrefix和SliceDuration。
',
                  'type' => 'string',
                  'deprecated' => false,
                  'required' => true,
                  'example' => 'm3u8',
                  'pattern' => '',
                  'default' => '',
                  'enum' => 
                  array (
                    0 => 'm3u8',
                    1 => 'mp4',
                    2 => 'flv',
                  ),
                ),
                'SliceDuration' => 
                array (
                  'title' => '切片时长',
                  'description' => '单个切片时长。单位：秒。
>当Format（格式）设为m3u8时，本参数才有效。

不填则默认为30秒。取值范围：5s~30s。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'deprecated' => false,
                  'required' => false,
                  'example' => '30',
                  'pattern' => '',
                  'default' => '',
                ),
                'OssObjectPrefix' => 
                array (
                  'title' => 'Oss对象名',
                  'description' => 'OSS存储的录制文件名。

- 文件名小于256字节，支持变量匹配，包含{JobId}、{Sequence}、{StartTime}、{EndTime}、{EscapedStartTime}、{EscapedEndTime}。

- 参数值必须要有{StartTime}或{EscapedStartTime}和{EndTime}或{EscapedEndTime}。',
                  'type' => 'string',
                  'deprecated' => false,
                  'required' => false,
                  'example' => 'record/{JobId}/{Sequence}_{EscapedStartTime}_{EscapedEndTime}',
                  'pattern' => '',
                  'default' => '',
                ),
                'SliceOssObjectPrefix' => 
                array (
                  'title' => '切片Oss对象名',
                  'description' => 'TS切片名称。

>当Format（格式）设为m3u8时，本参数才需要配置。

- 默认30秒一片，小于256字节，支持变量匹配，包含{JobId}、{UnixTimestamp}、{Sequence}。
- 参数值必须包含{UnixTimestamp}和{Sequence}变量。',
                  'type' => 'string',
                  'deprecated' => false,
                  'required' => false,
                  'example' => 'record/{JobId}/{UnixTimestamp}_{Sequence}',
                  'pattern' => '',
                  'default' => '',
                ),
                'CycleDuration' => 
                array (
                  'description' => '周期录制时长。单位：秒。不填则默认为6小时。

> - 如果在一个录制周期内，直播流发生了断流，但是在3分钟内，该直播流又正常推流，那么仍会在同一个录制文件中继续录制。
- 一条直播流必须断流超过3分钟，才会生成最后一个录制文件。如果您需要修改默认的3分钟断流时间，可以提交工单进行修改。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'deprecated' => false,
                  'required' => false,
                  'example' => '3600',
                ),
              ),
              'deprecated' => false,
              'required' => false,
            ),
            'deprecated' => false,
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '资源名称',
            'description' => '模板名称。',
            'type' => 'string',
            'deprecated' => false,
            'required' => true,
            'pattern' => '',
            'default' => '',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'TemplateId' => 
              array (
                'title' => '资源一级ID',
                'description' => '模板ID',
                'type' => 'string',
                'deprecated' => false,
                'example' => '****96e8864746a0b6f3****',
                'pattern' => '',
                'readOnly' => true,
                'default' => '',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '0622C702-41BE-467E-AF2E-883D4517962E',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TemplateId\\": \\"****96e8864746a0b6f3****\\",\\n  \\"RequestId\\": \\"0622C702-41BE-467E-AF2E-883D4517962E\\"\\n}","type":"json"}]',
      'title' => '创建实时录制模板',
      'description' => '实时录制需指定录制模板。录制模板可以设置录制文件的输出格式（m3u8、mp4、flv）、录制文件时长等信息。',
    ),
    'GetLiveRecordTemplate' => 
    array (
      'summary' => '调用GetLiveRecordTemplate获取实时录制模板明细或任务模板快照。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录制任务ID。传入JobId获取该任务使用的模板快照。',
            'type' => 'string',
            'required' => false,
            'example' => 'ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RecordTemplate' => 
              array (
                'title' => '录制模板',
                'description' => '录制模板。',
                'type' => 'object',
                'properties' => 
                array (
                  'RecordFormatList' => 
                  array (
                    'title' => '录制格式',
                    'description' => '录制格式列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'title' => '格式',
                      'description' => '录制格式。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Format' => 
                        array (
                          'title' => '格式',
                          'description' => '格式。',
                          'type' => 'string',
                          'deprecated' => false,
                          'example' => 'm3u8',
                          'pattern' => '',
                          'default' => '',
                          'enum' => 
                          array (
                            0 => 'm3u8',
                            1 => 'mp4',
                            2 => 'flv',
                          ),
                        ),
                        'OssObjectPrefix' => 
                        array (
                          'title' => 'Oss对象名',
                          'description' => 'OSS存储的录制文件名。',
                          'type' => 'string',
                          'deprecated' => false,
                          'example' => 'record/{JobId}/{Sequence}{EscapedStartTime}{EscapedEndTime}',
                          'pattern' => '',
                          'default' => '',
                        ),
                        'SliceOssObjectPrefix' => 
                        array (
                          'title' => '切片Oss对象名',
                          'description' => 'TS切片名称。',
                          'type' => 'string',
                          'deprecated' => false,
                          'example' => 'record/{JobId}/{UnixTimestamp}_{Sequence}',
                          'pattern' => '',
                          'default' => '',
                        ),
                        'CycleDuration' => 
                        array (
                          'description' => '周期录制时长。单位：秒。不填则默认为6小时。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'deprecated' => false,
                          'example' => '7200',
                        ),
                        'SliceDuration' => 
                        array (
                          'description' => '单个切片时长。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '30',
                        ),
                      ),
                      'deprecated' => false,
                    ),
                    'deprecated' => false,
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间。',
                    'type' => 'string',
                    'format' => 'iso8601',
                    'example' => '2022-07-20T03:26:36Z',
                  ),
                  'LastModified' => 
                  array (
                    'title' => '创建时间',
                    'description' => '最后修改时间。',
                    'type' => 'string',
                    'format' => 'iso8601',
                    'example' => '2022-07-20T03:26:36Z',
                  ),
                  'TemplateId' => 
                  array (
                    'title' => '资源一级ID',
                    'description' => '模板ID。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'Name' => 
                  array (
                    'title' => '资源名称',
                    'description' => '模板名称。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => 'test template',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'Type' => 
                  array (
                    'title' => '资源名称',
                    'description' => '模板类型。',
                    'type' => 'string',
                    'deprecated' => false,
                    'enumValueTitles' => 
                    array (
                      'system' => 'system',
                      'custom' => 'custom',
                    ),
                    'example' => 'custom',
                    'pattern' => '',
                    'default' => '',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C892855F-95DF-50D6-A28C-279ABDB76810',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RecordTemplate\\": {\\n    \\"RecordFormatList\\": [\\n      {\\n        \\"Format\\": \\"m3u8\\",\\n        \\"OssObjectPrefix\\": \\"record/{JobId}/{Sequence}{EscapedStartTime}{EscapedEndTime}\\",\\n        \\"SliceOssObjectPrefix\\": \\"record/{JobId}/{UnixTimestamp}_{Sequence}\\",\\n        \\"CycleDuration\\": 7200,\\n        \\"SliceDuration\\": 30\\n      }\\n    ],\\n    \\"CreateTime\\": \\"2022-07-20T03:26:36Z\\",\\n    \\"LastModified\\": \\"2022-07-20T03:26:36Z\\",\\n    \\"TemplateId\\": \\"69e1f9fe-1e97-11ed-ba64-0c42a1b73d66\\",\\n    \\"Name\\": \\"test template\\",\\n    \\"Type\\": \\"custom\\"\\n  },\\n  \\"RequestId\\": \\"C892855F-95DF-50D6-A28C-279ABDB76810\\"\\n}","type":"json"}]',
      'title' => '获取实时录制模板明细',
    ),
    'UpdateLiveRecordTemplate' => 
    array (
      'summary' => '调用UpdateLiveRecordTemplate更新实时录制模板。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RecordFormat',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '录制格式',
            'description' => '录制格式列表',
            'type' => 'array',
            'items' => 
            array (
              'title' => '格式',
              'description' => '录制格式',
              'type' => 'object',
              'properties' => 
              array (
                'Format' => 
                array (
                  'title' => '格式',
                  'description' => '格式。
>如果选择m3u8格式，必须同时设置请求参数SliceOssObjectPrefix和SliceDuration。',
                  'type' => 'string',
                  'deprecated' => false,
                  'required' => true,
                  'example' => 'm3u8',
                  'pattern' => '',
                  'default' => '',
                  'enum' => 
                  array (
                    0 => 'm3u8',
                    1 => 'mp4',
                    2 => 'flv',
                  ),
                ),
                'SliceDuration' => 
                array (
                  'title' => '切片时长',
                  'description' => '单个切片时长。单位：秒。

>当Format（格式）设为m3u8时，本参数才有效。

不填则默认为30秒。取值范围：5s~30s。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'deprecated' => false,
                  'required' => false,
                  'example' => '30',
                  'pattern' => '',
                  'default' => '',
                ),
                'OssObjectPrefix' => 
                array (
                  'title' => 'Oss对象名',
                  'description' => 'OSS存储的录制文件名。

- 文件名小于256字节，支持变量匹配，包含{JobId}、{Sequence}、{StartTime}、{EndTime}、{EscapedStartTime}、{EscapedEndTime}。

- 参数值必须要有{StartTime}或{EscapedStartTime}和{EndTime}或{EscapedEndTime}。',
                  'type' => 'string',
                  'deprecated' => false,
                  'required' => false,
                  'example' => 'record/{JobId}/{Sequence}_{EscapedStartTime}_{EscapedEndTime}',
                  'pattern' => '',
                  'default' => '',
                ),
                'SliceOssObjectPrefix' => 
                array (
                  'title' => '切片Oss对象名',
                  'description' => 'TS切片名称。

>当Format（格式）设为m3u8时，本参数才需要配置。
默认30秒一片，小于256字节，支持变量匹配，包含{JobId}、{UnixTimestamp}、{Sequence}。

参数值必须包含{UnixTimestamp}和{Sequence}变量。',
                  'type' => 'string',
                  'deprecated' => false,
                  'required' => false,
                  'example' => 'record/{JobId}/{UnixTimestamp}_{Sequence}
',
                  'pattern' => '',
                  'default' => '',
                ),
                'CycleDuration' => 
                array (
                  'description' => '周期录制时长。单位：秒。不填则默认为6小时。

> - 如果在一个录制周期内，直播流发生了断流，但是在3分钟内，该直播流又正常推流，那么仍会在同一个录制文件中继续录制。
- 一条直播流必须断流超过3分钟，才会生成最后一个录制文件。如果您需要修改默认的3分钟断流时间，可以提交工单进行修改。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'deprecated' => false,
                  'required' => false,
                  'example' => '3600',
                ),
              ),
              'deprecated' => false,
              'required' => false,
            ),
            'deprecated' => false,
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '资源一级ID',
            'description' => '模板ID。',
            'type' => 'string',
            'deprecated' => false,
            'required' => true,
            'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
            'pattern' => '',
            'default' => '',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '资源名称',
            'description' => '模板名称。',
            'type' => 'string',
            'deprecated' => false,
            'required' => true,
            'example' => 'test template',
            'pattern' => '',
            'default' => '',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '资源一级ID',
                'description' => '资源一级ID',
                'type' => 'string',
                'deprecated' => false,
                'example' => '0F3D5C03-4B6E-5F40-B7F6-B1956776E7D3',
                'pattern' => '',
                'readOnly' => true,
                'default' => '',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0F3D5C03-4B6E-5F40-B7F6-B1956776E7D3\\"\\n}","type":"json"}]',
      'title' => '更新实时录制模板',
      'description' => '仅能更新用户创建的模板，系统预置模板不能更新。',
    ),
    'DeleteLiveRecordTemplate' => 
    array (
      'summary' => '调用DeleteLiveRecordTemplate删除实时录制模板，不影响现有任务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源一级ID',
            'description' => '模板ID。',
            'type' => 'string',
            'properties' => 
            array (
            ),
            'deprecated' => false,
            'required' => true,
            'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
            'pattern' => '',
            'readOnly' => true,
            'default' => '',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3E5330CF-B4C8-5BEF-AA6B-8E70BD20FAEE',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3E5330CF-B4C8-5BEF-AA6B-8E70BD20FAEE\\"\\n}","type":"json"}]',
      'title' => '删除实时录制模板',
    ),
    'ListLiveRecordTemplates' => 
    array (
      'summary' => '调用ListLiveRecordTemplates获取实时录制模板列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词，可以根据模板ID和名称搜索。名称支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test template',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板类型。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'system' => '系统预置',
              'custom' => '自定义',
            ),
            'example' => 'custom',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'description' => '模板ID。',
              'type' => 'string',
              'required' => false,
              'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页的页码。最小值：1。默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。1～100。默认值10。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序参数，默认按创建时间倒序。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'asc' => 'asc',
              'desc' => 'desc',
            ),
            'example' => 'desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RecordTemplateList' => 
              array (
                'title' => '数组，返回示例目录。',
                'description' => '录制模板列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => 'LiveRecordTemplateItemType',
                  'description' => '录制模板。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '资源名称',
                      'description' => '模板名称。',
                      'type' => 'string',
                      'deprecated' => false,
                      'example' => 'test template',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'Type' => 
                    array (
                      'title' => '资源名称',
                      'description' => '模板类型。',
                      'type' => 'string',
                      'deprecated' => false,
                      'example' => 'custom',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'LastModified' => 
                    array (
                      'title' => '最后修改时间',
                      'description' => '最后修改时间。',
                      'type' => 'string',
                      'format' => 'iso8601',
                      'deprecated' => false,
                      'example' => '2022-07-20T03:26:36Z',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'TemplateId' => 
                    array (
                      'title' => '资源一级ID',
                      'description' => '模板ID。',
                      'type' => 'string',
                      'deprecated' => false,
                      'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'RecordFormatList' => 
                    array (
                      'title' => '录制格式',
                      'description' => '录制格式列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'title' => '格式',
                        'description' => '录制格式。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Format' => 
                          array (
                            'title' => '格式',
                            'description' => '格式。',
                            'type' => 'string',
                            'deprecated' => false,
                            'example' => 'm3u8',
                            'pattern' => '',
                            'default' => '',
                            'enum' => 
                            array (
                              0 => 'm3u8',
                              1 => 'mp4',
                              2 => 'flv',
                            ),
                          ),
                          'SliceDuration' => 
                          array (
                            'title' => '切片时长',
                            'description' => '单个切片时长。单位：秒。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'deprecated' => false,
                            'example' => '30',
                            'pattern' => '',
                            'default' => '',
                          ),
                          'OssObjectPrefix' => 
                          array (
                            'title' => 'Oss对象名',
                            'description' => 'OSS存储的录制文件名。',
                            'type' => 'string',
                            'deprecated' => false,
                            'example' => 'record/{JobId}/{Sequence}_{EscapedStartTime}_{EscapedEndTime}',
                            'pattern' => '',
                            'default' => '',
                          ),
                          'SliceOssObjectPrefix' => 
                          array (
                            'title' => '切片Oss对象名',
                            'description' => 'TS切片名称。',
                            'type' => 'string',
                            'deprecated' => false,
                            'example' => 'record/{JobId}/{UnixTimestamp}_{Sequence}',
                            'pattern' => '',
                            'default' => '',
                          ),
                          'CycleDuration' => 
                          array (
                            'description' => '周期录制时间。单位：秒。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'deprecated' => false,
                            'example' => '21600',
                          ),
                        ),
                        'deprecated' => false,
                      ),
                      'deprecated' => false,
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间。',
                      'type' => 'string',
                      'format' => 'iso8601',
                      'example' => '2022-07-20T02:48:58Z',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BEA98A0C-7870-15FE-B96F-8880BB600A2C',
              ),
              'TotalCount' => 
              array (
                'title' => '总记录数。',
                'description' => '总记录数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'PageNo' => 
              array (
                'description' => '分页的页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'SortBy' => 
              array (
                'description' => '排序参数，默认按创建时间倒序。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'asc' => 'asc',
                  'desc' => 'desc',
                ),
                'example' => 'desc',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RecordTemplateList\\": [\\n    {\\n      \\"Name\\": \\"test template\\",\\n      \\"Type\\": \\"custom\\",\\n      \\"LastModified\\": \\"2022-07-20T03:26:36Z\\",\\n      \\"TemplateId\\": \\"69e1f9fe-1e97-11ed-ba64-0c42a1b73d66\\",\\n      \\"RecordFormatList\\": [\\n        {\\n          \\"Format\\": \\"m3u8\\",\\n          \\"SliceDuration\\": 30,\\n          \\"OssObjectPrefix\\": \\"record/{JobId}/{Sequence}_{EscapedStartTime}_{EscapedEndTime}\\",\\n          \\"SliceOssObjectPrefix\\": \\"record/{JobId}/{UnixTimestamp}_{Sequence}\\",\\n          \\"CycleDuration\\": 21600\\n        }\\n      ],\\n      \\"CreateTime\\": \\"2022-07-20T02:48:58Z\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"BEA98A0C-7870-15FE-B96F-8880BB600A2C\\",\\n  \\"TotalCount\\": 5,\\n  \\"PageNo\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"SortBy\\": \\"desc\\"\\n}","type":"json"}]',
      'title' => '获取实时录制模板列表',
    ),
    'SubmitLiveRecordJob' => 
    array (
      'summary' => '调用SubmitLiveRecordJob提交实时录制任务，对直播流进行录制。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NotifyUrl',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '回调地址',
            'description' => '回调地址',
            'type' => 'string',
            'deprecated' => false,
            'required' => false,
            'example' => 'https://example.com/imsnotify',
            'pattern' => '',
            'default' => '',
          ),
        ),
        1 => 
        array (
          'name' => 'StreamInput',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '直播流地址。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '直播流地址类型。目前支持rtmp。',
                'type' => 'string',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'rtmp' => 'rtmp',
                ),
                'example' => 'rtmp',
              ),
              'Url' => 
              array (
                'description' => '直播流地址。',
                'type' => 'string',
                'required' => false,
                'example' => 'rtmp://example.com/live/stream1',
              ),
            ),
            'deprecated' => false,
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'RecordOutput',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '录制存储地址。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '存储地址类型。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss',
              ),
              'Bucket' => 
              array (
                'description' => '存储空间名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'imsbucket1',
              ),
              'Endpoint' => 
              array (
                'description' => '存储服务地址。',
                'type' => 'string',
                'required' => false,
                'example' => 'oss-cn-hangzhou.aliyuncs.com',
              ),
            ),
            'deprecated' => false,
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '录制模板ID',
            'description' => '录制模板ID。',
            'type' => 'string',
            'deprecated' => false,
            'required' => true,
            'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
            'pattern' => '',
            'default' => '',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '资源名称',
            'description' => '录制任务名称。',
            'type' => 'string',
            'deprecated' => false,
            'required' => true,
            'example' => 'live stream record 1',
            'pattern' => '',
            'default' => '',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BEA98A0C-7870-15FE-B96F-8880BB600A2C',
              ),
              'JobId' => 
              array (
                'title' => '若创建接口为异步实现，则需返回明确的JobId。',
                'description' => '录制任务ID。',
                'type' => 'string',
                'example' => 'ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"BEA98A0C-7870-15FE-B96F-8880BB600A2C\\",\\n  \\"JobId\\": \\"ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66\\"\\n}","type":"json"}]',
      'title' => '提交实时录制任务',
      'description' => '该接口目前支持阿里云直播或第三方RTMP直播流录制。建议先推流再调用本接口提交录制任务。如果直播流地址拉不到流，任务会尝试拉流3分钟。超时后录制服务将停止录制。

提交录制任务前，需准备好阿里云OSS或VOD存储空间。建议使用在智能媒体服务中配置的存储地址，便于对录制生成的文件进行管理和处理。

如果系统预置的录制模板不符合需求，可自行创建定制录制模板。',
    ),
    'GetLiveRecordJob' => 
    array (
      'summary' => '调用GetLiveRecordJob获取单个实时录制任务明细。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '录制任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RecordJob' => 
              array (
                'title' => '录制任务',
                'description' => '录制任务。',
                'type' => 'object',
                'properties' => 
                array (
                  'NotifyUrl' => 
                  array (
                    'title' => '回调地址',
                    'description' => '回调地址。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => 'https://example.com/imsnotify',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间。',
                    'type' => 'string',
                    'format' => 'iso8601',
                    'example' => '2022-07-20T02:48:58Z',
                  ),
                  'StreamInput' => 
                  array (
                    'description' => '直播流地址。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '直播流类型，目前支持rtmp。',
                        'type' => 'string',
                        'enumValueTitles' => 
                        array (
                          'rtmp' => 'rtmp',
                        ),
                        'example' => 'rtmp',
                      ),
                      'Url' => 
                      array (
                        'description' => '直播流地址。',
                        'type' => 'string',
                        'example' => 'rtmp://example.com/app/stream',
                      ),
                    ),
                    'deprecated' => false,
                  ),
                  'RecordOutput' => 
                  array (
                    'description' => '录制存储地址。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => '存储地址类型。',
                        'type' => 'string',
                        'enumValueTitles' => 
                        array (
                          'vod' => 'vod',
                          'oss' => 'oss',
                        ),
                        'example' => 'oss',
                      ),
                      'Bucket' => 
                      array (
                        'description' => '存储空间名称。',
                        'type' => 'string',
                        'example' => 'imsbucket1',
                      ),
                      'Endpoint' => 
                      array (
                        'description' => '存储服务地址。',
                        'type' => 'string',
                        'example' => 'oss-cn-shanghai.aliyuncs.com',
                      ),
                    ),
                    'deprecated' => false,
                  ),
                  'TemplateId' => 
                  array (
                    'title' => '录制模板ID',
                    'description' => '录制模板ID。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'TemplateName' => 
                  array (
                    'title' => '录制模板ID',
                    'description' => '录制模板名称。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => 'test template',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'Name' => 
                  array (
                    'title' => '资源名称',
                    'description' => '录制任务名称。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => '直播活动录制任务1',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'JobId' => 
                  array (
                    'title' => '资源名称',
                    'description' => '录制任务ID。',
                    'type' => 'string',
                    'deprecated' => false,
                    'example' => 'ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66',
                    'pattern' => '',
                    'default' => '',
                  ),
                  'Status' => 
                  array (
                    'title' => '资源名称',
                    'description' => '录制任务状态。',
                    'type' => 'string',
                    'deprecated' => false,
                    'enumValueTitles' => 
                    array (
                      'paused' => 'paused',
                      'initial' => 'initial',
                      'started' => 'started',
                    ),
                    'example' => 'paused',
                    'pattern' => '',
                    'default' => '',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B57A046C-CE33-5FBB-B57A-D2B89ACF6907',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RecordJob\\": {\\n    \\"NotifyUrl\\": \\"https://example.com/imsnotify\\",\\n    \\"CreateTime\\": \\"2022-07-20T02:48:58Z\\",\\n    \\"StreamInput\\": {\\n      \\"Type\\": \\"rtmp\\",\\n      \\"Url\\": \\"rtmp://example.com/app/stream\\"\\n    },\\n    \\"RecordOutput\\": {\\n      \\"Type\\": \\"oss\\",\\n      \\"Bucket\\": \\"imsbucket1\\",\\n      \\"Endpoint\\": \\"oss-cn-shanghai.aliyuncs.com\\"\\n    },\\n    \\"TemplateId\\": \\"69e1f9fe-1e97-11ed-ba64-0c42a1b73d66\\",\\n    \\"TemplateName\\": \\"test template\\",\\n    \\"Name\\": \\"直播活动录制任务1\\",\\n    \\"JobId\\": \\"ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66\\",\\n    \\"Status\\": \\"paused\\"\\n  },\\n  \\"RequestId\\": \\"B57A046C-CE33-5FBB-B57A-D2B89ACF6907\\"\\n}","type":"json"}]',
      'title' => '获取实时录制任务明细',
    ),
    'DeleteLiveRecordFiles' => 
    array (
      'summary' => '调用DeleteLiveRecordFiles删除实时录制文件，可选择只删除记录或同时删除原始OSS文件。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RecordIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '文件ID集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'UUID格式的文件ID。',
              'type' => 'string',
              'required' => false,
              'example' => '13cbb83e-043c-4728-ac35-****',
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'RemoveFile',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除OSS中的文件。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '13cbb83e-043c-4728-ac35-*****',
              ),
              'DeleteFileInfoList' => 
              array (
                'description' => '删除失败的文件列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '删除失败的文件。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Code' => 
                    array (
                      'description' => '标识删除结果的Code。',
                      'type' => 'string',
                      'example' => 'OK',
                    ),
                    'Message' => 
                    array (
                      'description' => '描述删除结果。',
                      'type' => 'string',
                      'example' => 'OK',
                    ),
                    'RecordId' => 
                    array (
                      'description' => '被删除的录制的文件的ID。',
                      'type' => 'string',
                      'example' => '13cbb83e-043c-4728-ac35-*****',
                    ),
                  ),
                ),
              ),
              'Message' => 
              array (
                'description' => '全局返回状态描述。',
                'type' => 'string',
                'example' => 'OK',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"13cbb83e-043c-4728-ac35-*****\\",\\n  \\"DeleteFileInfoList\\": [\\n    {\\n      \\"Code\\": \\"OK\\",\\n      \\"Message\\": \\"OK\\",\\n      \\"RecordId\\": \\"13cbb83e-043c-4728-ac35-*****\\"\\n    }\\n  ],\\n  \\"Message\\": \\"OK\\"\\n}","type":"json"}]',
      'title' => '删除实时录制文件',
    ),
    'ListLiveRecordJobs' => 
    array (
      'summary' => '调用ListLiveRecordJobs获取实时录制任务列表，可分页获取。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词，可以根据任务ID和名称搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66',
          ),
        ),
        1 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询开始时间。格式为yyyy-mm-ddthh:mm:ssz（UTC时间）。',
            'type' => 'string',
            'format' => 'iso8601',
            'required' => false,
            'example' => '2022-07-15T08:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结束时间，与StartTime相差不超过30天。格式为yyyy-mm-ddthh:mm:ssz（UTC时间）。',
            'type' => 'string',
            'format' => 'iso8601',
            'required' => false,
            'example' => '2022-07-11T08:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态。默认不过滤状态。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'paused' => 'paused',
              'initial' => 'initial',
              'started' => 'started',
            ),
            'example' => 'started',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。默认值：10。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序参数，默认按创建时间倒序。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'asc' => 'asc',
              'desc' => 'desc',
            ),
            'example' => 'desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A27DFFA4-F272-5563-8363-CB0BC42740BA',
              ),
              'LiveRecordJobs' => 
              array (
                'title' => '数组，返回示例目录。',
                'description' => '实时录制任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => 'LiveRecordJobItemType',
                  'description' => 'LiveRecordJobItemType',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RecordOutput' => 
                    array (
                      'description' => '录制存储地址。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '存储地址类型。',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'vod' => 'vod',
                            'oss' => 'oss',
                          ),
                          'example' => 'oss',
                        ),
                        'Bucket' => 
                        array (
                          'description' => '存储空间名称。',
                          'type' => 'string',
                          'example' => 'imsbucket1',
                        ),
                        'Endpoint' => 
                        array (
                          'description' => '存储服务地址。',
                          'type' => 'string',
                          'example' => 'oss-cn-hangzhou.aliyuncs.com',
                        ),
                      ),
                      'deprecated' => false,
                    ),
                    'Name' => 
                    array (
                      'title' => '资源名称',
                      'description' => '录制任务名称。',
                      'type' => 'string',
                      'deprecated' => false,
                      'example' => '直播活动录制任务1',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'NotifyUrl' => 
                    array (
                      'title' => '回调地址',
                      'description' => '回调地址。',
                      'type' => 'string',
                      'deprecated' => false,
                      'example' => 'https://example.com/imsnotify',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'TemplateId' => 
                    array (
                      'title' => '录制模板ID',
                      'description' => '录制模板ID。',
                      'type' => 'string',
                      'deprecated' => false,
                      'example' => '69e1f9fe-1e97-11ed-ba64-0c42a1b73d66',
                      'pattern' => '',
                      'default' => '',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间。',
                      'type' => 'string',
                      'format' => 'iso8601',
                      'example' => '2022-07-20T03:26:36Z',
                    ),
                    'StreamInput' => 
                    array (
                      'description' => '直播流地址。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '直播流地址类型。',
                          'type' => 'string',
                          'example' => 'rtmp',
                        ),
                        'Url' => 
                        array (
                          'description' => '直播流地址。',
                          'type' => 'string',
                          'example' => 'rtmp://example-live.com/live/stream1',
                        ),
                      ),
                      'deprecated' => false,
                    ),
                    'JobId' => 
                    array (
                      'description' => '录制任务ID。',
                      'type' => 'string',
                      'example' => 'ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66',
                    ),
                    'Status' => 
                    array (
                      'description' => '录制任务状态。',
                      'type' => 'string',
                      'example' => 'paused',
                    ),
                    'TemplateName' => 
                    array (
                      'description' => '录制模板名称。',
                      'type' => 'string',
                      'example' => 'test template',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'title' => '总记录数。',
                'description' => '总记录数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '180',
              ),
              'PageNo' => 
              array (
                'description' => '分页的页码。默认值：1。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。默认值10。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'SortBy' => 
              array (
                'description' => '排序参数，默认根据创建时间倒序。',
                'type' => 'string',
                'example' => 'desc',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"A27DFFA4-F272-5563-8363-CB0BC42740BA\\",\\n  \\"LiveRecordJobs\\": [\\n    {\\n      \\"RecordOutput\\": {\\n        \\"Type\\": \\"oss\\",\\n        \\"Bucket\\": \\"imsbucket1\\",\\n        \\"Endpoint\\": \\"oss-cn-hangzhou.aliyuncs.com\\"\\n      },\\n      \\"Name\\": \\"直播活动录制任务1\\",\\n      \\"NotifyUrl\\": \\"https://example.com/imsnotify\\",\\n      \\"TemplateId\\": \\"69e1f9fe-1e97-11ed-ba64-0c42a1b73d66\\",\\n      \\"CreateTime\\": \\"2022-07-20T03:26:36Z\\",\\n      \\"StreamInput\\": {\\n        \\"Type\\": \\"rtmp\\",\\n        \\"Url\\": \\"rtmp://example-live.com/live/stream1\\"\\n      },\\n      \\"JobId\\": \\"ab0e3e76-1e9d-11ed-ba64-0c42a1b73d66\\",\\n      \\"Status\\": \\"paused\\",\\n      \\"TemplateName\\": \\"test template\\"\\n    }\\n  ],\\n  \\"TotalCount\\": 180,\\n  \\"PageNo\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"SortBy\\": \\"desc\\"\\n}","type":"json"}]',
      'title' => '获取实时录制任务列表',
    ),
    'ListLiveRecordFiles' => 
    array (
      'summary' => '调用ListLiveRecordFiles查询某个时间段内的所有录制索引文件。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。与StartTime间隔时间不能超过4天。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-12-22T08:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-12-21T08:00:01Z',
          ),
        ),
        2 => 
        array (
          'name' => 'JobIds',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '任务ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '录制任务ID。',
              'type' => 'string',
              'required' => false,
              'example' => '9E83D5D0-8D72-5E7D-B61A-****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页大小。取值范围：5~30，默认值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序。取值：

asc（默认值）：升序。

desc：降序。',
            'type' => 'string',
            'required' => false,
            'example' => 'asc',
          ),
        ),
        6 => 
        array (
          'name' => 'RecordFormat',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录制文件格式。取值：

m3u8， flv， mp4',
            'type' => 'string',
            'required' => false,
            'example' => 'm3u8',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE24625C-7C0F-4020-8448-****',
              ),
              'PageNo' => 
              array (
                'description' => '分页的页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'SortBy' => 
              array (
                'description' => '排序。',
                'type' => 'string',
                'example' => 'asc',
              ),
              'PageSize' => 
              array (
                'description' => '每页大小。',
                'type' => 'string',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '符合条件的总个数。',
                'type' => 'string',
                'example' => '100',
              ),
              'Files' => 
              array (
                'description' => '索引文件列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RecordUrl' => 
                    array (
                      'description' => '索引文件地址。',
                      'type' => 'string',
                      'example' => 'http://****/atestObject****.m3u8',
                    ),
                    'StartTime' => 
                    array (
                      'description' => '开始时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                      'type' => 'string',
                      'example' => '2015-12-01T07:36:00Z',
                    ),
                    'EndTime' => 
                    array (
                      'description' => '结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                      'type' => 'string',
                      'example' => '2015-12-01T07:36:10Z',
                    ),
                    'Duration' => 
                    array (
                      'description' => '录制时长。单位：秒。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '100.0',
                    ),
                    'Width' => 
                    array (
                      'description' => '视频宽。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '480',
                    ),
                    'Height' => 
                    array (
                      'description' => '视频高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '640',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => 'UTC格式创建时间。',
                      'type' => 'string',
                      'example' => '2016-05-27T09:40:56Z',
                    ),
                    'RecordOutput' => 
                    array (
                      'description' => '录制文件的储存相关信息。',
                      'type' => 'string',
                      'example' => '{ "Type": "oss", "Endpoint":"oss-cn-shanghai.aliyuncs.com", "Bucket": "test-bucket" }',
                    ),
                    'RecordId' => 
                    array (
                      'description' => '索引文件ID。',
                      'type' => 'string',
                      'example' => 'c4d7f0a4-b506-43f9-8de3-07732c3f****',
                    ),
                    'StreamUrl' => 
                    array (
                      'description' => '直播流名。',
                      'type' => 'string',
                      'example' => 'LiveStream***',
                    ),
                    'JobName' => 
                    array (
                      'description' => '录制任务名称。',
                      'type' => 'string',
                      'example' => 'LiveRecordJob***',
                    ),
                    'Format' => 
                    array (
                      'description' => '录制文件格式。',
                      'type' => 'string',
                      'example' => 'm3u8',
                    ),
                    'JobId' => 
                    array (
                      'description' => '录制任务ID。',
                      'type' => 'string',
                      'example' => 'c4d7f0a4-b506-43f9-8de3-07732c3f****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DE24625C-7C0F-4020-8448-****\\",\\n  \\"PageNo\\": 1,\\n  \\"SortBy\\": \\"asc\\",\\n  \\"PageSize\\": \\"10\\",\\n  \\"TotalCount\\": \\"100\\",\\n  \\"Files\\": [\\n    {\\n      \\"RecordUrl\\": \\"http://****/atestObject****.m3u8\\",\\n      \\"StartTime\\": \\"2015-12-01T07:36:00Z\\",\\n      \\"EndTime\\": \\"2015-12-01T07:36:10Z\\",\\n      \\"Duration\\": 100,\\n      \\"Width\\": 480,\\n      \\"Height\\": 640,\\n      \\"CreateTime\\": \\"2016-05-27T09:40:56Z\\",\\n      \\"RecordOutput\\": \\"{ \\\\\\"Type\\\\\\": \\\\\\"oss\\\\\\", \\\\\\"Endpoint\\\\\\":\\\\\\"oss-cn-shanghai.aliyuncs.com\\\\\\", \\\\\\"Bucket\\\\\\": \\\\\\"test-bucket\\\\\\" }\\",\\n      \\"RecordId\\": \\"c4d7f0a4-b506-43f9-8de3-07732c3f****\\",\\n      \\"StreamUrl\\": \\"LiveStream***\\",\\n      \\"JobName\\": \\"LiveRecordJob***\\",\\n      \\"Format\\": \\"m3u8\\",\\n      \\"JobId\\": \\"c4d7f0a4-b506-43f9-8de3-07732c3f****\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询所有录制索引文件',
    ),
    'CreateLiveSnapshotTemplate' => 
    array (
      'summary' => '调用CreateLiveSnapshotTemplate创建实时截图模板，模板便于创建截图任务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateName',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板名称。
',
            'description' => '模板名称。
- 最大长度为128。
',
            'type' => 'string',
            'required' => true,
            'example' => '模板1',
          ),
        ),
        1 => 
        array (
          'name' => 'OverwriteFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '覆盖截图文件格式，不能以“/”开头，目前只支持.jpg后缀，最大长度为255。
支持占位符：
{JobId}：截图任务ID
不允许填写{UnixTimestamp}、{Sequence}、{Date}等占位符
覆盖截图和序列截图的文件格式至少要设置一个。',
            'description' => '覆盖截图文件格式。

- 不能以“/”开头，目前只支持.jpg后缀。
- 最大长度为255。
- 支持占位符： {JobId}：截图任务ID
- 不允许填写{UnixTimestamp}、{Sequence}、{Date}等占位符。
- 覆盖截图和序列截图的文件格式至少要设置一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'snapshot/{JobId}.jpg',
          ),
        ),
        2 => 
        array (
          'name' => 'SequenceFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '序列截图文件格式，不能以“/”开头，目前只支持.jpg后缀，最大长度为255。
支持占位符：
{JobId}：截图任务ID
{Date}：截图日期
{UnixTimestamp}：时间戳
{Sequence}：序列号
其中{UnixTimestamp}、{Sequence}至少要填写一个。
覆盖截图和序列截图的文件格式至少要设置一个。',
            'description' => '序列截图文件格式。
- 不能以“/”开头，目前只支持.jpg后缀。
- 最大长度为255。
- 支持占位符：{JobId}：截图任务ID、{Date}：截图日期、{UnixTimestamp}：时间戳、{Sequence}：序列号，其中{UnixTimestamp}、{Sequence}至少要填写一个。
- 覆盖截图和序列截图的文件格式至少要设置一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'snapshot/{JobId}/{UnixTimestamp}.jpg',
          ),
        ),
        3 => 
        array (
          'name' => 'TimeInterval',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '截图时间间隔，取值范围是[5, 3600]。',
            'description' => '截图时间间隔，单位：秒。
- 取值范围是[5, 3600]。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'TemplateId' => 
              array (
                'title' => '模板ID。',
                'description' => '模板ID。',
                'type' => 'string',
                'example' => '****a046-263c-3560-978a-fb287782****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"TemplateId\\": \\"****a046-263c-3560-978a-fb287782****\\"\\n}","type":"json"}]',
      'title' => '创建实时截图模板',
    ),
    'GetLiveSnapshotTemplate' => 
    array (
      'summary' => '调用GetLiveSnapshotTemplate获取单个实时截图模板。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID。',
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'TemplateId' => 
              array (
                'title' => '模板ID。',
                'description' => '模板ID。',
                'type' => 'string',
                'example' => '****a046-263c-3560-978a-fb287782****',
              ),
              'TemplateName' => 
              array (
                'title' => '模板名称。',
                'description' => '模板名称。',
                'type' => 'string',
                'example' => '模板1',
              ),
              'Type' => 
              array (
                'title' => '模板类型。
custom：自定义
system：系统预置',
                'description' => '模板类型。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'system' => '系统预置',
                  'custom' => '自定义',
                ),
                'example' => 'custom',
              ),
              'OverwriteFormat' => 
              array (
                'title' => '覆盖截图文件格式。',
                'description' => '覆盖截图文件格式。',
                'type' => 'string',
                'example' => 'snapshot/{JobId}.jpg',
              ),
              'SequenceFormat' => 
              array (
                'title' => '序列截图文件格式。',
                'description' => '序列截图文件格式。',
                'type' => 'string',
                'example' => 'snapshot/{JobId}/{UnixTimestamp}.jpg',
              ),
              'TimeInterval' => 
              array (
                'title' => '截图时间间隔。',
                'description' => '截图时间间隔。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'LastModified' => 
              array (
                'title' => '创建时间。',
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2022-02-02T22:22:22Z',
              ),
              'CreateTime' => 
              array (
                'title' => '修改时间。',
                'description' => '修改时间。',
                'type' => 'string',
                'example' => '2022-02-02T22:22:22Z',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'TemplateNotFound',
            'errorMessage' => 'No such template.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"TemplateId\\": \\"****a046-263c-3560-978a-fb287782****\\",\\n  \\"TemplateName\\": \\"模板1\\",\\n  \\"Type\\": \\"custom\\",\\n  \\"OverwriteFormat\\": \\"snapshot/{JobId}.jpg\\",\\n  \\"SequenceFormat\\": \\"snapshot/{JobId}/{UnixTimestamp}.jpg\\",\\n  \\"TimeInterval\\": 5,\\n  \\"LastModified\\": \\"2022-02-02T22:22:22Z\\",\\n  \\"CreateTime\\": \\"2022-02-02T22:22:22Z\\"\\n}","type":"json"}]',
      'title' => '获取实时截图模板',
    ),
    'UpdateLiveSnapshotTemplate' => 
    array (
      'summary' => '更新实时截图模板。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板ID。',
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateName',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板名称。',
            'description' => '模板名称。
- 最大长度为128。',
            'type' => 'string',
            'required' => true,
            'example' => '模板1',
          ),
        ),
        2 => 
        array (
          'name' => 'OverwriteFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '覆盖截图文件格式，不能以“/”开头，目前只支持.jpg后缀，最大长度为255。
支持占位符：
{JobId}：截图任务ID
不允许填写{UnixTimestamp}、{Sequence}等占位符
覆盖截图和序列截图的文件格式至少要设置一个。',
            'description' => '覆盖截图文件格式。

- 不能以“/”开头，目前只支持.jpg后缀。
- 最大长度为255。
- 支持占位符： {JobId}：截图任务ID
- 不允许填写{UnixTimestamp}、{Sequence}、{Date}等占位符。
- 覆盖截图和序列截图的文件格式至少要设置一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'snapshot/{JobId}.jpg',
          ),
        ),
        3 => 
        array (
          'name' => 'SequenceFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '序列截图文件格式，不能以“/”开头，目前只支持.jpg后缀，最大长度为255。
支持占位符：
{JobId}：截图任务ID
{Date}：截图日期
{UnixTimestamp}：时间戳
{Sequence}：序列号
其中{UnixTimestamp}、{Sequence}至少要填写一个。
覆盖截图和序列截图的文件格式至少要设置一个。',
            'description' => '序列截图文件格式。
- 不能以“/”开头，目前只支持.jpg后缀。
- 最大长度为255。
- 支持占位符：{JobId}：截图任务ID、{Date}：截图日期、{UnixTimestamp}：时间戳、{Sequence}：序列号，其中{UnixTimestamp}、{Sequence}至少要填写一个。
- 覆盖截图和序列截图的文件格式至少要设置一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'snapshot/{JobId}/{UnixTimestamp}.jpg',
          ),
        ),
        4 => 
        array (
          'name' => 'TimeInterval',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '截图时间间隔，[5, 3600]。',
            'description' => '截图时间间隔，单位：秒。
- 取值范围是[5, 3600]。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'TemplateNotFound',
            'errorMessage' => 'No such template.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\"\\n}","type":"json"}]',
      'title' => '更新实时截图模板',
    ),
    'DeleteLiveSnapshotTemplate' => 
    array (
      'summary' => '删除实时截图模板。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板ID。',
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'TemplateNotFound',
            'errorMessage' => 'No such template.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\"\\n}","type":"json"}]',
      'title' => '删除实时截图模板',
    ),
    'ListLiveSnapshotTemplates' => 
    array (
      'summary' => '调用ListLiveSnapshotTemplates获取实时截图模板列表，可分页获取。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchKeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索关键词，模板ID/名称，名称支持模糊搜索。',
            'description' => '搜索关键词，模板ID/名称，名称支持模糊搜索。
- 最大长度为128。',
            'type' => 'string',
            'required' => false,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '指定模板ID查询，如果指定SearchKeyWord，该条件不生效。',
            'description' => '指定模板ID查询。
- 如果指定SearchKeyWord，该条件不生效。
- 数组长度最大为200。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
              'example' => '****a046-263c-3560-978a-fb287782****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型，默认是查询全部。
custom：自定义
system：系统预置',
            'description' => '模板类型，默认是查询全部。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'system' => '系统预置',
              'custom' => '自定义',
            ),
            'example' => 'custom',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页码，[1, n)，默认是1。',
            'description' => '页码，[1, n)，默认是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页宽，[1, 100]，默认是10。',
            'description' => '页宽，[1, 100]，默认是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序，默认按CreateTime排序，默认是desc。
asc：升序
desc：倒序',
            'description' => '排序，默认按CreateTime排序，默认是desc。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'asc' => '按CreateTime升序',
              'desc' => '按CreateTime倒序',
            ),
            'example' => 'desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'TemplateList' => 
              array (
                'title' => '模板列表。',
                'description' => '模板列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TemplateId' => 
                    array (
                      'title' => '模板ID。',
                      'description' => '模板ID。',
                      'type' => 'string',
                      'example' => '****a046-263c-3560-978a-fb287782****',
                    ),
                    'TemplateName' => 
                    array (
                      'title' => '模板名称。',
                      'description' => '模板名称。',
                      'type' => 'string',
                      'example' => '模板1',
                    ),
                    'Type' => 
                    array (
                      'title' => '模板类型。
custom：自定义
system：系统预置',
                      'description' => '模板类型。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'system' => '系统预置',
                        'custom' => '自定义',
                      ),
                      'example' => 'custom',
                    ),
                    'TimeInterval' => 
                    array (
                      'title' => '截图时间间隔。',
                      'description' => '截图时间间隔，单位：秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '创建时间。',
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-07-20T02:48:58Z',
                    ),
                  ),
                ),
              ),
              'PageNo' => 
              array (
                'title' => '页码。',
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'title' => '页宽。',
                'description' => '页宽。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'SortBy' => 
              array (
                'title' => '排序。',
                'description' => '排序。',
                'type' => 'string',
                'example' => 'desc',
              ),
              'TotalCount' => 
              array (
                'title' => '总数。',
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"TemplateList\\": [\\n    {\\n      \\"TemplateId\\": \\"****a046-263c-3560-978a-fb287782****\\",\\n      \\"TemplateName\\": \\"模板1\\",\\n      \\"Type\\": \\"custom\\",\\n      \\"TimeInterval\\": 10,\\n      \\"CreateTime\\": \\"2022-07-20T02:48:58Z\\"\\n    }\\n  ],\\n  \\"PageNo\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"SortBy\\": \\"desc\\",\\n  \\"TotalCount\\": 100\\n}","type":"json"}]',
      'title' => '获取实时截图模板列表',
    ),
    'SubmitLiveSnapshotJob' => 
    array (
      'summary' => '调用SubmitLiveSnapshotJob提交实时截图任务。如果在推流中提交，则会自动异步启动任务，否则为未启动状态。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobName',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '任务名称。',
            'description' => '任务名称。
- 最大长度为128。',
            'type' => 'string',
            'required' => true,
            'example' => '截图任务1',
          ),
        ),
        1 => 
        array (
          'name' => 'StreamInput',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '流输入信息。',
            'description' => '流输入信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Url' => 
              array (
                'title' => '流输入地址。',
                'description' => '流输入地址。
- 最大长度为255。',
                'type' => 'string',
                'required' => true,
                'example' => 'rtmp://www.aliyun.com/stream',
              ),
              'Type' => 
              array (
                'title' => '流输入类型。',
                'description' => '流输入类型。目前只支持rtmp。',
                'type' => 'string',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'rtmp' => 'rtmp',
                ),
                'example' => 'rtmp',
              ),
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'SnapshotOutput',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '截图输出信息。',
            'description' => '截图输出信息。',
            'type' => 'object',
            'properties' => 
            array (
              'StorageType' => 
              array (
                'title' => '截图存储类型。',
                'description' => '截图存储类型。目前只支持oss。',
                'type' => 'string',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'oss' => 'oss',
                ),
                'example' => 'oss',
              ),
              'Endpoint' => 
              array (
                'title' => '截图输出终端。',
                'description' => '截图输出终端。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss-cn-shanghai.aliyuncs.com',
              ),
              'Bucket' => 
              array (
                'title' => '截图输出终端的Bucket。',
                'description' => '截图输出终端的Bucket。',
                'type' => 'string',
                'required' => true,
                'example' => 'testbucket',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板ID。',
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        4 => 
        array (
          'name' => 'CallbackUrl',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '截图回调地址。',
            'description' => '截图回调地址。
- 最大长度为255。
- 支持http/https',
            'type' => 'string',
            'required' => false,
            'example' => 'http://www.aliyun.com/snapshot/callback',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'title' => '任务ID。',
                'description' => '任务ID。',
                'type' => 'string',
                'example' => '****a046-263c-3560-978a-fb287666****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.	',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'TemplateNotFound',
            'errorMessage' => 'No such template.	',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****a046-263c-3560-978a-fb287666****\\"\\n}","type":"json"}]',
      'title' => '提交实时截图任务',
    ),
    'SendLiveSnapshotJobCommand' => 
    array (
      'summary' => '发送实时截图任务指令。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '截图任务ID。',
            'description' => '截图任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        1 => 
        array (
          'name' => 'Command',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '操作指令：start，stop，restart。',
            'description' => '操作指令：start，stop，restart。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'stop' => '停止任务',
              'restart' => '重启任务',
              'start' => '启动任务',
            ),
            'example' => 'start',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'JobLimitExceeded',
            'errorMessage' => 'Job limit exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'StreamNotFound',
            'errorMessage' => 'No such stream.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'JobNotFound',
            'errorMessage' => 'No such job.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'JobAlreadyStarted',
            'errorMessage' => 'Job is already started.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\"\\n}","type":"json"}]',
      'title' => '发送实时截图任务指令',
    ),
    'GetLiveSnapshotJob' => 
    array (
      'summary' => '调用GetLiveSnapshotJob获取单个实时截图任务。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务ID。',
            'description' => '任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'title' => '任务ID。',
                'description' => '任务ID。',
                'type' => 'string',
                'example' => '****a046-263c-3560-978a-fb287782****',
              ),
              'JobName' => 
              array (
                'title' => '任务名称。',
                'description' => '任务名称。',
                'type' => 'string',
                'example' => '截图任务1',
              ),
              'TemplateId' => 
              array (
                'title' => '模板ID。',
                'description' => '模板ID。',
                'type' => 'string',
                'example' => '****a046-263c-3560-978a-fb287666****',
              ),
              'TemplateName' => 
              array (
                'title' => '模板名称。',
                'description' => '模板名称。',
                'type' => 'string',
                'example' => '模板1',
              ),
              'Status' => 
              array (
                'title' => '任务状态。
init：未启动
started：执行中
paused：已停止',
                'description' => '任务状态。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'init' => '未启动',
                  'paused' => '已停止',
                  'started' => '执行中',
                ),
                'example' => 'started',
              ),
              'StreamInput' => 
              array (
                'title' => '输入信息。',
                'description' => '输入信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Url' => 
                  array (
                    'title' => '输入地址。',
                    'description' => '输入地址。',
                    'type' => 'string',
                    'example' => 'rtmp://www.aliyun.com/stream',
                  ),
                  'Type' => 
                  array (
                    'title' => '输入类型，rtmp、hls、flv。',
                    'description' => '输入类型，目前只支持rtmp。',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'rtmp' => 'rtmp',
                    ),
                    'example' => 'rtmp',
                  ),
                ),
              ),
              'SnapshotOutput' => 
              array (
                'title' => '输出信息。',
                'description' => '输出信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'StorageType' => 
                  array (
                    'title' => '存储类型，目前只支持oss。',
                    'description' => '存储类型，目前只支持oss。',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'oss' => 'oss',
                    ),
                    'example' => 'oss',
                  ),
                  'Endpoint' => 
                  array (
                    'title' => '输出终端，type=oss时返回OSS域名。',
                    'description' => '输出终端，type=oss时返回OSS域名。',
                    'type' => 'string',
                    'example' => 'oss-cn-shanghai.aliyuncs.com',
                  ),
                  'Bucket' => 
                  array (
                    'title' => '输出终端的Bucket，type=oss时返回OSS Bucket。',
                    'description' => '输出终端的Bucket，type=oss时返回OSS Bucket。',
                    'type' => 'string',
                    'example' => 'testbucket',
                  ),
                ),
              ),
              'OverwriteFormat' => 
              array (
                'title' => '覆盖截图格式。',
                'description' => '覆盖截图格式。',
                'type' => 'string',
                'example' => 'snapshot/{JobId}.jpg',
              ),
              'SequenceFormat' => 
              array (
                'title' => '序列截图格式。',
                'description' => '序列截图格式。',
                'type' => 'string',
                'example' => 'snapshot/{JobId}/{UnixTimestamp}.jpg',
              ),
              'TimeInterval' => 
              array (
                'title' => '截图时间间隔。',
                'description' => '截图时间间隔。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'CallbackUrl' => 
              array (
                'title' => '截图回调地址。',
                'description' => '截图回调地址。',
                'type' => 'string',
                'example' => 'http://www.aliyun.com/snapshot/callback',
              ),
              'LastModified' => 
              array (
                'title' => '最后修改时间。',
                'description' => '最后修改时间。',
                'type' => 'string',
                'example' => '2022-02-02T22:22:22Z',
              ),
              'CreateTime' => 
              array (
                'title' => '创建时间。',
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2022-02-02T22:22:22Z',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'JobNotFound',
            'errorMessage' => 'No such job.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****a046-263c-3560-978a-fb287782****\\",\\n  \\"JobName\\": \\"截图任务1\\",\\n  \\"TemplateId\\": \\"****a046-263c-3560-978a-fb287666****\\",\\n  \\"TemplateName\\": \\"模板1\\",\\n  \\"Status\\": \\"started\\",\\n  \\"StreamInput\\": {\\n    \\"Url\\": \\"rtmp://www.aliyun.com/stream\\",\\n    \\"Type\\": \\"rtmp\\"\\n  },\\n  \\"SnapshotOutput\\": {\\n    \\"StorageType\\": \\"oss\\",\\n    \\"Endpoint\\": \\"oss-cn-shanghai.aliyuncs.com\\",\\n    \\"Bucket\\": \\"testbucket\\"\\n  },\\n  \\"OverwriteFormat\\": \\"snapshot/{JobId}.jpg\\",\\n  \\"SequenceFormat\\": \\"snapshot/{JobId}/{UnixTimestamp}.jpg\\",\\n  \\"TimeInterval\\": 5,\\n  \\"CallbackUrl\\": \\"http://www.aliyun.com/snapshot/callback\\",\\n  \\"LastModified\\": \\"2022-02-02T22:22:22Z\\",\\n  \\"CreateTime\\": \\"2022-02-02T22:22:22Z\\"\\n}","type":"json"}]',
      'title' => '获取实时截图任务',
    ),
    'DeleteLiveSnapshotFiles' => 
    array (
      'summary' => '调用DeleteLiveSnapshotFiles删除实时截图文件，可选择只删除记录或同时删除原始OSS文件。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '截图任务ID。',
            'description' => '截图任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        1 => 
        array (
          'name' => 'CreateTimestampList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '创建时间戳列表。',
            'description' => '创建时间戳列表。单次最多删除200个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
              'required' => true,
              'example' => '1660638613798',
            ),
            'required' => true,
            'maxItems' => 200,
          ),
        ),
        2 => 
        array (
          'name' => 'DeleteOriginalFile',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否删除原始文件，默认是false。',
            'description' => '是否删除原始文件，默认是false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****2876-6263-4B75-8F2C-CD0F7FCF****',
              ),
              'DeleteFileResultList' => 
              array (
                'title' => '删除结果列表。',
                'description' => '删除结果列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '',
                  'description' => '',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Result' => 
                    array (
                      'title' => 'OK表示删除成功，其他表示删除失败。',
                      'description' => 'OK表示删除成功，其他表示删除失败。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'OK' => '成功',
                        'NotFound' => '图片不存在',
                      ),
                      'example' => 'OK',
                    ),
                    'CreateTimestamp' => 
                    array (
                      'title' => '创建时间戳。',
                      'description' => '创建时间戳。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1660638613798',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'OverlayNotSupported',
            'errorMessage' => 'Not Sopport to remove overlay snapshot, please remove overlay snapshot from OSS console.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'BucketNotAuthorized',
            'errorMessage' => 'Bucket is not authorised.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'JobNotFound',
            'errorMessage' => 'No such job.',
          ),
          1 => 
          array (
            'errorCode' => 'NoValidSnapshot',
            'errorMessage' => 'No snapshots found with given parameters.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****2876-6263-4B75-8F2C-CD0F7FCF****\\",\\n  \\"DeleteFileResultList\\": [\\n    {\\n      \\"Result\\": \\"OK\\",\\n      \\"CreateTimestamp\\": 1660638613798\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '删除实时截图文件',
    ),
    'ListLiveSnapshotJobs' => 
    array (
      'summary' => '调用ListLiveSnapshotJobs获取实时截图任务列表，可分页获取。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询开始时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。默认为7天前，StartTime与EndTime间隔不能超过30天。',
            'description' => '查询开始时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。
- 默认为7天前。
- StartTime与EndTime间隔不能超过30天。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-02T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询结束时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。默认为StartTime+7天，StartTime与EndTime间隔不能超过30天。',
            'description' => '查询结束时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。
- 默认为StartTime+7天。
- StartTime与EndTime间隔不能超过30天。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-02T23:59:59Z',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchKeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索关键词，任务ID/名称，名称支持模糊搜索。',
            'description' => '搜索关键词，任务ID/名称，名称支持模糊搜索。
- 最大长度为128。',
            'type' => 'string',
            'required' => false,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务状态过滤，默认查询全部。
init：未启动
started：执行中
paused：已停止',
            'description' => '任务状态过滤，默认查询全部。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'init' => '未启动',
              'paused' => '已停止',
              'started' => '执行中',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页码，[1, n)，默认是1。',
            'description' => '页码，[1, n)，默认是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页宽，[1, 100]，默认是10。',
            'description' => '页宽，[1, 100]，默认是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序，默认按CreateTime排序，默认是desc。
asc：升序
desc：倒序',
            'description' => '排序，按CreateTime排序，默认是desc。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'asc' => '升序',
              'desc' => '倒序',
            ),
            'example' => 'desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '返回数据。',
            'description' => '返回数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobList' => 
              array (
                'title' => '任务列表。',
                'description' => '任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'title' => '任务ID。',
                      'description' => '任务ID。',
                      'type' => 'string',
                      'example' => '****a046-263c-3560-978a-fb287782****',
                    ),
                    'JobName' => 
                    array (
                      'title' => '任务名称。',
                      'description' => '任务名称。',
                      'type' => 'string',
                      'example' => '截图任务1',
                    ),
                    'TemplateId' => 
                    array (
                      'title' => '模板ID。',
                      'description' => '模板ID。',
                      'type' => 'string',
                      'example' => '****a046-263c-3560-978a-fb287666****',
                    ),
                    'TemplateName' => 
                    array (
                      'title' => '模板名称。',
                      'description' => '模板名称。',
                      'type' => 'string',
                      'example' => '模板1',
                    ),
                    'Status' => 
                    array (
                      'title' => '任务状态。
init：未启动
started：执行中
paused：已停止',
                      'description' => '任务状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'init' => '未启动',
                        'paused' => '已停止',
                        'started' => '执行中',
                      ),
                      'example' => 'started',
                    ),
                    'SnapshotOutput' => 
                    array (
                      'title' => '输出信息。',
                      'description' => '输出信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StorageType' => 
                        array (
                          'title' => '存储类型，目前只支持oss。',
                          'description' => '存储类型，目前只支持oss。',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Endpoint' => 
                        array (
                          'title' => '输出终端，type=oss时返回OSS域名。',
                          'description' => '输出终端，type=oss时返回OSS域名。',
                          'type' => 'string',
                          'example' => 'oss-cn-shanghai.aliyuncs.com',
                        ),
                        'Bucket' => 
                        array (
                          'title' => '输出终端的Bucket，type=oss时返回OSS Bucket。',
                          'description' => '输出终端的Bucket，type=oss时返回OSS Bucket。',
                          'type' => 'string',
                          'example' => 'testbucket',
                        ),
                      ),
                    ),
                    'TimeInterval' => 
                    array (
                      'title' => '截图时间间隔。',
                      'description' => '截图时间间隔，单位：秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '5',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '创建时间。',
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-07-20T02:48:58Z',
                    ),
                  ),
                ),
              ),
              'PageNo' => 
              array (
                'title' => '页码。',
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'title' => '页宽。',
                'description' => '页宽。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'SortBy' => 
              array (
                'title' => '排序。',
                'description' => '排序。',
                'type' => 'string',
                'example' => 'desc',
              ),
              'TotalCount' => 
              array (
                'title' => '总数。',
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MalformedStartTime',
            'errorMessage' => 'Specified parameter StartTime is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'MalformedEndTime',
            'errorMessage' => 'Specified parameter EndTime is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'EndTimeMismatch',
            'errorMessage' => 'Specified end time does not math the specified start time.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobList\\": [\\n    {\\n      \\"JobId\\": \\"****a046-263c-3560-978a-fb287782****\\",\\n      \\"JobName\\": \\"截图任务1\\",\\n      \\"TemplateId\\": \\"****a046-263c-3560-978a-fb287666****\\",\\n      \\"TemplateName\\": \\"模板1\\",\\n      \\"Status\\": \\"started\\",\\n      \\"SnapshotOutput\\": {\\n        \\"StorageType\\": \\"oss\\",\\n        \\"Endpoint\\": \\"oss-cn-shanghai.aliyuncs.com\\",\\n        \\"Bucket\\": \\"testbucket\\"\\n      },\\n      \\"TimeInterval\\": 5,\\n      \\"CreateTime\\": \\"2022-07-20T02:48:58Z\\"\\n    }\\n  ],\\n  \\"PageNo\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"SortBy\\": \\"desc\\",\\n  \\"TotalCount\\": 100\\n}","type":"json"}]',
      'title' => '获取实时截图任务列表',
    ),
    'ListLiveSnapshotFiles' => 
    array (
      'summary' => '调用ListLiveSnapshotFiles获取实时截图文件列表，可分页获取。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '截图任务ID。',
            'description' => '截图任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****a046-263c-3560-978a-fb287782****',
          ),
        ),
        1 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'description' => '开始时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-02-02T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结束时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。EndTime和StartTime之间的间隔不能超过1天。',
            'description' => '结束时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。
- EndTime和StartTime之间的间隔不能超过1天。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-02-02T23:59:59Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Limit',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每次获取数量，[1, 100]，默认为10。',
            'description' => '每次获取数量，[1, 100]，默认为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序，默认为asc。
asc：按时间升序
desc：按时间倒序',
            'description' => '排序，默认为asc。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'asc' => '按时间升序',
              'desc' => '按时间倒序',
            ),
            'example' => 'desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应数据。',
            'description' => '响应数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'FileList' => 
              array (
                'title' => '文件列表。',
                'description' => '文件列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'OssEndpoint' => 
                    array (
                      'title' => 'OSS域名。',
                      'description' => 'OSS域名。',
                      'type' => 'string',
                      'example' => 'oss-cn-shanghai.aliyuncs.com',
                    ),
                    'OssBucket' => 
                    array (
                      'title' => 'OSS bucket。',
                      'description' => 'OSS bucket。',
                      'type' => 'string',
                      'example' => 'testbucket',
                    ),
                    'OssObject' => 
                    array (
                      'title' => 'OSS存储对象位置。',
                      'description' => 'OSS存储对象位置。',
                      'type' => 'string',
                      'example' => 'snapshot/****a046-263c-3560-978a-fb287782****/1660638613798.jpg',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '创建时间。',
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-02-02T22:22:22Z',
                    ),
                    'CreateTimestamp' => 
                    array (
                      'title' => '创建时间戳，用于删除传参。',
                      'description' => '创建时间戳，用于删除接口传参。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1619503516000',
                    ),
                    'IsOverlay' => 
                    array (
                      'title' => '是否覆盖截图。',
                      'description' => '是否覆盖截图。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
              'NextStartTime' => 
              array (
                'title' => '下一页的开始时间，没有返回则表示结束翻页。',
                'description' => '下一页的开始时间，没有返回则表示结束翻页。',
                'type' => 'string',
                'example' => '2022-02-02T22:22:22Z',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MalformedStartTime',
            'errorMessage' => 'Specified parameter StartTime is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'MalformedEndTime',
            'errorMessage' => 'Specified parameter EndTime is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'EndTimeMismatch',
            'errorMessage' => 'Specified end time does not math the specified start time.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserDisable',
            'errorMessage' => 'User is disable.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Your account has not enabled the ICE service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'JobNotFound',
            'errorMessage' => 'No such job.',
          ),
          1 => 
          array (
            'errorCode' => 'NoValidSnapshot',
            'errorMessage' => 'No snapshots found with given parameters.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"FileList\\": [\\n    {\\n      \\"OssEndpoint\\": \\"oss-cn-shanghai.aliyuncs.com\\",\\n      \\"OssBucket\\": \\"testbucket\\",\\n      \\"OssObject\\": \\"snapshot/****a046-263c-3560-978a-fb287782****/1660638613798.jpg\\",\\n      \\"CreateTime\\": \\"2022-02-02T22:22:22Z\\",\\n      \\"CreateTimestamp\\": 1619503516000,\\n      \\"IsOverlay\\": true\\n    }\\n  ],\\n  \\"NextStartTime\\": \\"2022-02-02T22:22:22Z\\"\\n}","type":"json"}]',
      'title' => '获取实时截图文件列表',
    ),
    'CreateEditingProject' => 
    array (
      'summary' => '创建云剪辑工程，支持设置标题、描述、时间线和工程封面等。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程标题',
            'description' => '云剪辑工程标题',
            'type' => 'string',
            'required' => true,
            'example' => 'example',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程描述',
            'description' => '云剪辑工程描述',
            'type' => 'string',
            'required' => false,
            'example' => '描述',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeline',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '云剪辑工程时间线，Json格式',
            'description' => '云剪辑工程时间线，Json格式',
            'type' => 'string',
            'required' => false,
            'example' => '{"VideoTracks":[{"VideoTrackClips":[{"MediaId":"****4d7cf14dc7b83b0e801c****"},{"MediaId":"****4d7cf14dc7b83b0e801c****"}]}]}',
          ),
        ),
        3 => 
        array (
          'name' => 'CoverURL',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程封面',
            'description' => '云剪辑工程封面。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://example.com/example.png',
          ),
        ),
        4 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模板Id，用于快速低门槛的构建时间线。注：Timeline、TemplateId有且只有一个非空。当TemplateId不为空时，ClipsParam不能为空。',
            'type' => 'string',
            'required' => false,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        5 => 
        array (
          'name' => 'ClipsParam',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板素材参数',
            'description' => '模板对应的素材参数，Json格式，当TemplateId不为空时，ClipsParam不能为空。具体格式见 [普通模板创建及使用](https://help.aliyun.com/document_detail/328557.html)、[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)。',
            'type' => 'string',
            'required' => false,
            'example' => '见模板使用文档',
          ),
        ),
        6 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型',
            'description' => '模板类型，创建基于模板的云剪辑工程需要填写，默认值：Timeline。
取值范围：
- Timeline 普通模板
- VETemplate 高级模板',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Timeline' => '普通模板',
              'VETemplate' => '高级模板',
            ),
            'example' => 'Timeline',
          ),
        ),
        7 => 
        array (
          'name' => 'MaterialMaps',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '工程关联素材，多个素材以逗号（,）分隔；每种类型最多支持10个素材ID',
            'description' => '工程关联素材，多个素材以逗号（,）分隔；每种类型最多支持10个素材ID.
',
            'type' => 'string',
            'required' => false,
            'example' => '{"video":"*****2e057304fcd9b145c5cafc*****", "image":"****8021a8d493da643c8acd98*****,*****cb6307a4edea614d8b3f3c*****", "liveStream": "[{\\"appName\\":\\"testrecord\\",\\"domainName\\":\\"test.alivecdn.com\\",\\"liveUrl\\":\\"rtmp://test.alivecdn.com/testrecord/teststream\\",\\"streamName\\":\\"teststream\\"}]", "editingProject": "*****9b145c5cafc2e057304fcd*****"}',
          ),
        ),
        8 => 
        array (
          'name' => 'BusinessConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '工程业务配置。如果是直播剪辑工程必填OutputMediaConfig.StorageLocation,   Path 不填默认合成的直播片段存储在根路径下 OutputMediaTarget 不填默认oss-object，可以填vod-media 表示存储到vod  OutputMediaTarget 为vod-media 时，Path不生效。',
            'description' => '工程业务配置。一般剪辑工程可忽略。

如果是直播剪辑工程OutputMediaConfig.StorageLocation 必填, OutputMediaConfig.Path 不填默认合成的直播片段存储在根路径下 

OutputMediaTarget 可选填vod-media/oss-object, 不填默认oss-object

OutputMediaTarget 为vod-media 时，Path不生效。',
            'type' => 'string',
            'required' => false,
            'example' => '{ "OutputMediaConfig" : { "StorageLocation": "test-bucket.oss-cn-shanghai.aliyuncs.com", "Path": "test-path" }, "OutputMediaTarget": "oss-object", "ReservationTime": "2021-06-21T08:05:00Z" }',
          ),
        ),
        9 => 
        array (
          'name' => 'ProjectType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '剪辑工程类型，EditingProject: 普通剪辑工程；LiveEditingProject: 直播剪辑工程',
            'description' => '剪辑工程类型，EditingProject: 普通剪辑工程；LiveEditingProject: 直播剪辑工程',
            'type' => 'string',
            'required' => false,
            'example' => 'LiveEditingProject',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Project' => 
              array (
                'description' => '云剪辑工程',
                'type' => 'object',
                'properties' => 
                array (
                  'ProjectId' => 
                  array (
                    'title' => '云剪辑工程ID',
                    'description' => '云剪辑工程ID',
                    'type' => 'string',
                    'example' => '****01bf24bf41c78b2754cb3187****',
                  ),
                  'Title' => 
                  array (
                    'title' => '云剪辑工程标题',
                    'description' => '云剪辑工程标题',
                    'type' => 'string',
                    'example' => 'example_title',
                  ),
                  'Description' => 
                  array (
                    'title' => '云剪辑工程描述',
                    'description' => '工程描述',
                    'type' => 'string',
                    'example' => 'example_description',
                  ),
                  'Timeline' => 
                  array (
                    'title' => '云剪辑工程时间线，Json格式',
                    'description' => '云剪辑工程时间线，Json格式。具体结构定义参见配置[TimeLine](https://help.aliyun.com/document_detail/198823.htm?spm=a2c4g.11186623.2.9.90dc653dF67srN#topic-2024662)说明。当该字段为空时，则创建一个空的时间线，且云剪辑工程的总时长为0。',
                    'type' => 'string',
                    'example' => '{"VideoTracks":[{"VideoTrackClips":[{"MediaId":"****4d7cf14dc7b83b0e801c****"},{"MediaId":"****4d7cf14dc7b83b0e801c****"}]}]}',
                  ),
                  'TemplateId' => 
                  array (
                    'title' => '模板Id',
                    'description' => '模板Id',
                    'type' => 'string',
                    'example' => '****96e8864746a0b6f3****',
                  ),
                  'ClipsParam' => 
                  array (
                    'title' => '模板素材参数',
                    'description' => '模板素材参数',
                    'type' => 'string',
                    'example' => '见模板使用文档',
                  ),
                  'CoverURL' => 
                  array (
                    'title' => '云剪辑工程封面。',
                    'description' => '云剪辑工程封面',
                    'type' => 'string',
                    'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                  ),
                  'Status' => 
                  array (
                    'title' => '云剪辑工程状态。  所有云剪辑工程状态列表：  -1:Draft  -2:Editing  -3:Producing  -4:Produced  -5:ProduceFailed  -7:Deleted',
                    'description' => '云剪辑工程状态。

所有云剪辑工程状态列表：

\\-1:Draft

\\-2:Editing

\\-3:Producing

\\-4:Produced

\\-5:ProduceFailed

\\-7:Deleted',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'StatusName' => 
                  array (
                    'title' => '云剪辑状态名称，对应状态列表中状态名称。',
                    'description' => '云剪辑状态名称，对应状态列表中状态名称。',
                    'type' => 'string',
                    'example' => 'Editing',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '云剪辑工程创建时间',
                    'description' => '云剪辑工程创建时间',
                    'type' => 'string',
                    'example' => '2021-01-08T16:52:07Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '云剪辑工程编辑时间',
                    'description' => '云剪辑工程编辑时间',
                    'type' => 'string',
                    'example' => '2021-01-08T16:52:07Z',
                  ),
                  'Duration' => 
                  array (
                    'title' => '云剪辑工程时长',
                    'description' => '云剪辑工程时长',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '3.4200000',
                  ),
                  'CreateSource' => 
                  array (
                    'title' => '云剪辑工程创建方式  -OpenAPI  -AliyunConsole  -WebSDK -LiveEditingOpenAPI -LiveEditingConsole',
                    'description' => '云剪辑工程创建方式

\\-OpenAPI

\\-AliyunConsole

\\-WebSDK

\\-LiveEditingOpenAPI 

\\-LiveEditingConsole',
                    'type' => 'string',
                    'example' => 'WebSDK',
                  ),
                  'ModifiedSource' => 
                  array (
                    'title' => '云剪辑工程创建方式  -OpenAPI  -AliyunConsole  -WebSDK -LiveEditingOpenAPI -LiveEditingConsole',
                    'description' => '云剪辑工程编辑方式

\\-OpenAPI

\\-AliyunConsole

\\-WebSDK

\\-LiveEditingOpenAPI 

\\-LiveEditingConsole',
                    'type' => 'string',
                    'example' => 'WebSDK',
                  ),
                  'TemplateType' => 
                  array (
                    'description' => '云剪辑工程模版类型

\\-Timeline

\\-VETemplate',
                    'type' => 'string',
                    'example' => 'Timeline',
                  ),
                  'BusinessConfig' => 
                  array (
                    'title' => '工程业务配置',
                    'description' => '工程业务配置，一般剪辑工程可忽略',
                    'type' => 'string',
                    'example' => '{ "OutputMediaConfig" :    { "StorageLocation": "test-bucket.oss-cn-shanghai.aliyuncs.com", "Path": "test-path"   }, "OutputMediaTarget": "oss-object", "ReservationTime": "2021-06-21T08:05:00Z" }',
                  ),
                  'ProjectType' => 
                  array (
                    'title' => '剪辑工程类型，EditingProject: 普通剪辑工程；LiveEditingProject: 直播剪辑工程',
                    'description' => '剪辑工程类型，默认EditingProject

\\- EditingProject: 普通剪辑工程

\\- LiveEditingProject: 直播剪辑工程',
                    'type' => 'string',
                    'example' => 'LiveEditingProject',
                  ),
                  'BusinessStatus' => 
                  array (
                    'title' => '业务状态，业务状态 /** 预约中 **/ RESERVING(0, "Reserving"), /** 预约取消 **/ RESERVATION_CANCELED(1, "ReservationCanceled"), /** 直播中 **/ BROADCASTING(3, "BroadCasting"), /** 加载失败 **/ LOADING_FAILED(4, "LoadingFailed"), /** 直播结束 **/ LIVE_FINISHED(5, "LiveFinished");',
                    'description' => '工程业务状态，一般剪辑工程可忽略
- 预约中：Reserving
- 预约取消：ReservationCanceled 
- 直播中：BroadCasting
- 加载失败：LoadingFailed
- 直播结束：LiveFinished',
                    'type' => 'string',
                    'example' => 'Reserving',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Project\\": {\\n    \\"ProjectId\\": \\"****01bf24bf41c78b2754cb3187****\\",\\n    \\"Title\\": \\"example_title\\",\\n    \\"Description\\": \\"example_description\\",\\n    \\"Timeline\\": \\"{\\\\\\"VideoTracks\\\\\\":[{\\\\\\"VideoTrackClips\\\\\\":[{\\\\\\"MediaId\\\\\\":\\\\\\"****4d7cf14dc7b83b0e801c****\\\\\\"},{\\\\\\"MediaId\\\\\\":\\\\\\"****4d7cf14dc7b83b0e801c****\\\\\\"}]}]}\\",\\n    \\"TemplateId\\": \\"****96e8864746a0b6f3****\\",\\n    \\"ClipsParam\\": \\"见模板使用文档\\",\\n    \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n    \\"Status\\": 2,\\n    \\"StatusName\\": \\"Editing\\",\\n    \\"CreateTime\\": \\"2021-01-08T16:52:07Z\\",\\n    \\"ModifiedTime\\": \\"2021-01-08T16:52:07Z\\",\\n    \\"Duration\\": 3.42,\\n    \\"CreateSource\\": \\"WebSDK\\",\\n    \\"ModifiedSource\\": \\"WebSDK\\",\\n    \\"TemplateType\\": \\"Timeline\\",\\n    \\"BusinessConfig\\": \\"{ \\\\\\"OutputMediaConfig\\\\\\" :    { \\\\\\"StorageLocation\\\\\\": \\\\\\"test-bucket.oss-cn-shanghai.aliyuncs.com\\\\\\", \\\\\\"Path\\\\\\": \\\\\\"test-path\\\\\\"   }, \\\\\\"OutputMediaTarget\\\\\\": \\\\\\"oss-object\\\\\\", \\\\\\"ReservationTime\\\\\\": \\\\\\"2021-06-21T08:05:00Z\\\\\\" }\\",\\n    \\"ProjectType\\": \\"LiveEditingProject\\",\\n    \\"BusinessStatus\\": \\"Reserving\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateEditingProjectResponse>\\n    <RequestId>******3B-0E1A-586A-AC29-742247******</RequestId>\\n    <Project>\\n        <ProjectId>****01bf24bf41c78b2754cb3187****</ProjectId>\\n        <Title>example_title</Title>\\n        <Description>example_description</Description>\\n        <Timeline>{\\"VideoTracks\\":[{\\"VideoTrackClips\\":[{\\"MediaId\\":\\"****4d7cf14dc7b83b0e801c****\\"},{\\"MediaId\\":\\"****4d7cf14dc7b83b0e801c****\\"}]}]}</Timeline>\\n        <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n        <Status>2</Status>\\n        <StatusName>Editing</StatusName>\\n        <CreateTime>2021-01-08T16:52:07Z</CreateTime>\\n        <ModifiedTime>2021-01-08T16:52:07Z</ModifiedTime>\\n        <Duration>3.42</Duration>\\n        <CreateSource>WebSDK</CreateSource>\\n        <ModifiedSource>WebSDK</ModifiedSource>\\n        <TemplateType>Timeline</TemplateType>\\n    </Project>\\n</CreateEditingProjectResponse>","errorExample":""}]',
      'title' => '创建云剪辑工程',
    ),
    'GetEditingProject' => 
    array (
      'summary' => '查询单个云剪辑工程的信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程ID',
            'description' => '云剪辑工程ID',
            'type' => 'string',
            'required' => true,
            'example' => '****fb2101bf24b2754cb318787dc****',
          ),
        ),
        1 => 
        array (
          'name' => 'RequestSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求来源标识

-OpenAPI：默认，不会做timeline转换操作。

-WebSDK：若传入该字段，则会自动将工程timeline转换为前端风格，并将timleine中关联素材和工程绑定，供前端websdk预览。',
            'type' => 'string',
            'required' => false,
            'example' => 'WebSDK',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Project' => 
              array (
                'description' => '云剪辑工程。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProjectId' => 
                  array (
                    'title' => '云剪辑工程ID',
                    'description' => '云剪辑工程ID。',
                    'type' => 'string',
                    'example' => '****fb2101bf24b2754cb318787dc****',
                  ),
                  'Title' => 
                  array (
                    'title' => '云剪辑工程标题',
                    'description' => '云剪辑工程标题。',
                    'type' => 'string',
                    'example' => '样本title',
                  ),
                  'Timeline' => 
                  array (
                    'title' => '云剪辑工程时间线',
                    'description' => '云剪辑工程时间线。',
                    'type' => 'string',
                    'example' => '{"VideoTracks":[{"VideoTrackClips":[{"MediaId":"****9b4d7cf14dc7b83b0e801cbe****"},{"MediaId":"****9b4d7cf14dc7b83b0e801cbe****"},{"MediaId":"****1656bca4474999c961a6d2a2****"}]}]}',
                  ),
                  'TemplateId' => 
                  array (
                    'title' => '模板Id',
                    'description' => '模板ID',
                    'type' => 'string',
                    'example' => '****96e8864746a0b6f3****',
                  ),
                  'ClipsParam' => 
                  array (
                    'title' => '模板素材参数',
                    'description' => '模板对应的素材参数，Json格式，当TemplateId不为空时，ClipsParam不能为空。具体格式见 [普通模板创建及使用](https://help.aliyun.com/document_detail/328557.html)、[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)。',
                    'type' => 'string',
                    'example' => '见模板使用文档',
                  ),
                  'Description' => 
                  array (
                    'title' => '云剪辑工程描述',
                    'description' => '云剪辑工程描述。',
                    'type' => 'string',
                    'example' => '示例描述',
                  ),
                  'CoverURL' => 
                  array (
                    'title' => '云剪辑工程封面',
                    'description' => '云剪辑工程封面。',
                    'type' => 'string',
                    'example' => 'oss://example-bucket/example.jpg',
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '云剪辑工程创建时间',
                    'description' => '云剪辑工程创建时间。',
                    'type' => 'string',
                    'example' => '2020-12-20T12:00:00Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '云剪辑工程最新修改时间',
                    'description' => '云剪辑工程最新修改时间。',
                    'type' => 'string',
                    'example' => '2020-12-20T13:00:00Z',
                  ),
                  'Duration' => 
                  array (
                    'title' => '云剪辑工程总时长',
                    'description' => '云剪辑工程总时长。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '24.120000',
                  ),
                  'Status' => 
                  array (
                    'title' => '云剪辑工程状态',
                    'description' => '云剪辑工程状态。
所有云剪辑工程状态列表：

\\-Draft

\\-Editing

\\-Producing

\\-Produced

\\-ProduceFailed

\\-Deleted',
                    'type' => 'string',
                    'example' => 'Editing',
                  ),
                  'CreateSource' => 
                  array (
                    'title' => '云剪辑工程创建来源',
                    'description' => '云剪辑工程创建方式

\\-OpenAPI

\\-AliyunConsole

\\-WebSDK

\\-LiveEditingOpenAPI

\\-LiveEditingConsole',
                    'type' => 'string',
                    'example' => 'OpenAPI',
                  ),
                  'TemplateType' => 
                  array (
                    'title' => '云剪辑工程模板类型',
                    'description' => '云剪辑工程模版类型

\\-Timeline

\\-VETemplate',
                    'type' => 'string',
                    'example' => 'Timeline',
                  ),
                  'ModifiedSource' => 
                  array (
                    'title' => '云剪辑工程修改来源',
                    'description' => '云剪辑工程编辑方式

\\-OpenAPI

\\-AliyunConsole

\\-WebSDK

\\-LiveEditingOpenAPI

\\-LiveEditingConsole',
                    'type' => 'string',
                    'example' => 'OpenAPI',
                  ),
                  'ProjectType' => 
                  array (
                    'description' => '剪辑工程类型，默认EditingProject

\\- EditingProject: 普通剪辑工程

\\- LiveEditingProject: 直播剪辑工程',
                    'type' => 'string',
                    'example' => 'EditingProject',
                  ),
                  'BusinessConfig' => 
                  array (
                    'description' => '工程业务配置，一般剪辑工程可忽略。',
                    'type' => 'string',
                    'example' => '{ "OutputMediaConfig" : { "StorageLocation": "test-bucket.oss-cn-shanghai.aliyuncs.com", "Path": "test-path" }, "OutputMediaTarget": "oss-object", "ReservationTime": "2021-06-21T08:05:00Z" }',
                  ),
                  'BusinessStatus' => 
                  array (
                    'description' => '工程业务状态，一般剪辑工程可忽略

预约中：Reserving

预约取消：ReservationCanceled

直播中：BroadCasting

加载失败：LoadingFailed

直播结束：LiveFinished',
                    'type' => 'string',
                    'example' => 'Reserving',
                  ),
                  'TimelineConvertStatus' => 
                  array (
                    'description' => '工程转换状态，api风格timeline转换为前端风格timeline是一个异步过程，只有在设置RequestSource:WebSDK时生效。

-Unconverted：未进行Timeline转换

-Converting：工程正在转换中

-Converted：工程转换完成

-ConvertFailed：工程转换失败',
                    'type' => 'string',
                    'example' => 'Converted',
                  ),
                  'TimelineConvertErrorMessage' => 
                  array (
                    'description' => '工程转换失败信息，只有TimelineConvertStatus为ConvertFailed时返回，工程转换的详细失败信息。',
                    'type' => 'string',
                    'example' => 'The StorageLocation must be in the same division(apiRegion) as ICE service access point.',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Project\\": {\\n    \\"ProjectId\\": \\"****fb2101bf24b2754cb318787dc****\\",\\n    \\"Title\\": \\"样本title\\",\\n    \\"Timeline\\": \\"{\\\\\\"VideoTracks\\\\\\":[{\\\\\\"VideoTrackClips\\\\\\":[{\\\\\\"MediaId\\\\\\":\\\\\\"****9b4d7cf14dc7b83b0e801cbe****\\\\\\"},{\\\\\\"MediaId\\\\\\":\\\\\\"****9b4d7cf14dc7b83b0e801cbe****\\\\\\"},{\\\\\\"MediaId\\\\\\":\\\\\\"****1656bca4474999c961a6d2a2****\\\\\\"}]}]}\\",\\n    \\"TemplateId\\": \\"****96e8864746a0b6f3****\\",\\n    \\"ClipsParam\\": \\"见模板使用文档\\",\\n    \\"Description\\": \\"示例描述\\",\\n    \\"CoverURL\\": \\"oss://example-bucket/example.jpg\\",\\n    \\"CreateTime\\": \\"2020-12-20T12:00:00Z\\",\\n    \\"ModifiedTime\\": \\"2020-12-20T13:00:00Z\\",\\n    \\"Duration\\": 24.12,\\n    \\"Status\\": \\"Editing\\",\\n    \\"CreateSource\\": \\"OpenAPI\\",\\n    \\"TemplateType\\": \\"Timeline\\",\\n    \\"ModifiedSource\\": \\"OpenAPI\\",\\n    \\"ProjectType\\": \\"EditingProject\\",\\n    \\"BusinessConfig\\": \\"{ \\\\\\"OutputMediaConfig\\\\\\" : { \\\\\\"StorageLocation\\\\\\": \\\\\\"test-bucket.oss-cn-shanghai.aliyuncs.com\\\\\\", \\\\\\"Path\\\\\\": \\\\\\"test-path\\\\\\" }, \\\\\\"OutputMediaTarget\\\\\\": \\\\\\"oss-object\\\\\\", \\\\\\"ReservationTime\\\\\\": \\\\\\"2021-06-21T08:05:00Z\\\\\\" }\\",\\n    \\"BusinessStatus\\": \\"Reserving\\",\\n    \\"TimelineConvertStatus\\": \\"Converted\\",\\n    \\"TimelineConvertErrorMessage\\": \\"The StorageLocation must be in the same division(apiRegion) as ICE service access point.\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEditingProjectResponse>\\n    <RequestId>****63E8B7C7-4812-46AD-0FA56029AC86****</RequestId>\\n    <Project>\\n        <ProjectId>****fb2101bf24b2754cb318787dc****</ProjectId>\\n        <Title>样本title</Title>\\n        <Timeline>{\\"VideoTracks\\":[{\\"VideoTrackClips\\":[{\\"MediaId\\":\\"****9b4d7cf14dc7b83b0e801cbe****\\"},{\\"MediaId\\":\\"****9b4d7cf14dc7b83b0e801cbe****\\"},{\\"MediaId\\":\\"****1656bca4474999c961a6d2a2****\\"}]}]}</Timeline>\\n        <Description>示例描述</Description>\\n        <CoverURL>oss://example-bucket/example.jpg</CoverURL>\\n        <CreateTime>2020-12-20T12:00:00Z</CreateTime>\\n        <ModifiedTime>2020-12-20T13:00:00Z</ModifiedTime>\\n        <Status>2</Status>\\n        <CreateSource>OpenAPI</CreateSource>\\n        <TemplateType>Timeline</TemplateType>\\n        <ModifiedSource>OpenAPI</ModifiedSource>\\n    </Project>\\n</GetEditingProjectResponse>","errorExample":""}]',
      'title' => '获取单个云剪辑工程',
    ),
    'UpdateEditingProject' => 
    array (
      'summary' => '修改云剪辑工程，支持修改标题、时间线和封面等。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程标题',
            'description' => '云剪辑工程标题',
            'type' => 'string',
            'required' => false,
            'example' => 'testtimeline',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程描述',
            'description' => '云剪辑工程描述',
            'type' => 'string',
            'required' => false,
            'example' => 'testtimeline001desciption',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeline',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '云剪辑工程时间线，Json格式',
            'description' => '云剪辑工程时间线，Json格式',
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模板Id，用于快速低门槛的构建时间线。注：ProjectId、Timeline、TemplateId有且只有一个非空。当TemplateId不为空时，ClipsParam不能为空。',
            'type' => 'string',
            'required' => false,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClipsParam',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板对应的素材参数',
            'description' => '模板对应的素材参数，Json格式，当TemplateId不为空时，ClipsParam不能为空。具体格式见 [普通模板创建及使用](~~328557~~)、[高级模板创建及使用](~~291418~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '见模板使用文档',
          ),
        ),
        5 => 
        array (
          'name' => 'CoverURL',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程封面',
            'description' => '云剪辑工程封面',
            'type' => 'string',
            'required' => false,
            'example' => 'https://****.com/6AB4D0E1E1C7446888****.png',
          ),
        ),
        6 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程ID',
            'description' => '云剪辑工程ID',
            'type' => 'string',
            'required' => true,
            'example' => '****4ee4b97e27b525142a6b2****',
          ),
        ),
        7 => 
        array (
          'name' => 'BusinessStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工程业务状态，一般剪辑工程可忽略。支持修改工程的预约状态：

- Reserving: 预约中
- ReservationCanceled: 预约取消
',
            'type' => 'string',
            'required' => false,
            'example' => 'Reserving',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****25818875-5F78-4AF6-D7393642CA58****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectNotFound',
            'errorMessage' => 'The specified project not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****25818875-5F78-4AF6-D7393642CA58****\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateEditingProjectResponse>\\n    <RequestId>****25818875-5F78-4AF6-D7393642CA58****</RequestId>\\n</UpdateEditingProjectResponse>","errorExample":""}]',
      'title' => '修改云剪辑工程',
    ),
    'DeleteEditingProjects' => 
    array (
      'summary' => '删除云剪辑工程，支持批量删除。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectIds',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程ID。支持多个云剪辑工程，以逗号分隔。',
            'description' => '云剪辑工程ID。支持多个云剪辑工程，以逗号分隔。',
            'type' => 'string',
            'required' => true,
            'example' => '****fb2101bf24bf41cb318787dc****,****87dcfb2101bf24bf41cb3187****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****25818875-5F78-4AF6-D7393642CA58****',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****25818875-5F78-4AF6-D7393642CA58****\\",\\n  \\"IgnoredList\\": \\"****fb2101bf24bf41cb318787dc****\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteEditingProjectsResponse>\\n    <RequestId>****25818875-5F78-4AF6-D7393642CA58****</RequestId>\\n    <IgnoredList>****fb2101bf24bf41cb318787dc****</IgnoredList>\\n</DeleteEditingProjectsResponse>","errorExample":""}]',
      'title' => '删除云剪辑工程',
    ),
    'SearchEditingProject' => 
    array (
      'summary' => '支持按创建时间、状态搜索。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'CreateTime（创建时间）的开始时间',
            'description' => 'CreationTime（创建时间）的开始时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-01-11T12:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'CreationTime（创建时间）的结束时间',
            'description' => 'CreationTime（创建时间）的结束时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-01-11T12:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程状态。多个用逗号分隔',
            'description' => '云剪辑工程状态。多个用英文逗号（,）分隔。默认获取所有云剪辑工程。

取值范围：

\\-Draft：草稿。

\\-Producing：合成中。

\\-Produced：合成成功。

\\-ProduceFailed：合成失败。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Draft' => '草稿',
              'Produced' => '合成成功',
              'Producing' => '合成中',
              'ProduceFailed' => '合成失败',
            ),
            'example' => 'Producing',
          ),
        ),
        3 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结果排序方式',
            'description' => '结果排序方式。取值范围：

\\-CreationTime:Desc（默认值）：按创建时间倒序。

\\-CreationTime:Asc：按创建时间升序。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'CreationTime:Asc' => '按创建时间升序',
              'CreationTime:Desc' => '按创建时间倒序',
            ),
            'example' => 'CreationTime:Desc',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页参数',
            'description' => '分页的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'deprecated' => false,
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页参数',
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'CreateSource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '创建来源',
            'description' => '创建来源：

\\-OpenAPI

\\-AliyunConsole

\\-WebSDK',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'AliyunConsole' => '通过阿里云控制台创建',
              'WebSDK' => '通过WebSDK创建',
              'OpenAPI' => '通过OpenAPI创建',
            ),
            'example' => 'WebSDK',
          ),
        ),
        7 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型',
            'description' => '模板类型：

\\-Timeline

\\-VETemplate',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Timeline' => '普通模板',
              'VETemplate' => '高级模板',
              'None' => '未使用模板',
            ),
            'example' => 'Timeline',
          ),
        ),
        8 => 
        array (
          'name' => 'ProjectType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑工程类型，默认EditingProject

- EditingProject: 普通剪辑工程

- LiveEditingProject: 直播剪辑工程',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'LiveEditingProject' => '直播剪辑工程',
              'EditingProject' => '普通剪辑工程',
            ),
            'example' => 'EditingProject',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****9262E3DA-07FA-4862-FCBB6BC61D08*****',
              ),
              'ProjectList' => 
              array (
                'title' => '云剪辑工程列表',
                'description' => '云剪辑工程列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ProjectId' => 
                    array (
                      'title' => '云剪辑工程ID',
                      'description' => '云剪辑工程ID。',
                      'type' => 'string',
                      'example' => '****fddd7748b58bf1d47e95****',
                    ),
                    'Title' => 
                    array (
                      'title' => '云剪辑工程标题',
                      'description' => '云剪辑工程标题。',
                      'type' => 'string',
                      'example' => 'title',
                    ),
                    'Timeline' => 
                    array (
                      'title' => '云剪辑工程时间线',
                      'description' => '云剪辑工程时间线。',
                      'type' => 'string',
                      'example' => '{"VideoTracks":[{"VideoTrackClips":[{"MediaId":"****4d7cf14dc7b83b0e801c****"},{"MediaId":"****4d7cf14dc7b83b0e801c****"}]}]}',
                    ),
                    'Description' => 
                    array (
                      'title' => '云剪辑工程描述',
                      'description' => '云剪辑工程描述。',
                      'type' => 'string',
                      'example' => 'sample description',
                    ),
                    'CoverURL' => 
                    array (
                      'title' => '云剪辑工程封面',
                      'description' => '云剪辑工程封面。',
                      'type' => 'string',
                      'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example-cover.jpg',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '云剪辑工程创建时间',
                      'description' => '云剪辑工程创建时间。',
                      'type' => 'string',
                      'example' => '2017-01-11T12:00:00Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'title' => '云剪辑工程最新修改时间',
                      'description' => '云剪辑工程最新修改时间。',
                      'type' => 'string',
                      'example' => '2017-01-11T12:00:00Z',
                    ),
                    'Duration' => 
                    array (
                      'title' => '云剪辑工程总时长',
                      'description' => '云剪辑工程总时长，单位：秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '30.100000',
                    ),
                    'Status' => 
                    array (
                      'title' => '云剪辑工程状态',
                      'description' => '所有云剪辑工程状态列表：

\\-Draft

\\-Editing

\\-Producing

\\-Produced

\\-ProduceFailed',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Draft' => '草稿',
                        'Produced' => '合成完成',
                        'Editing' => '编辑中',
                        'Producing' => '合成中',
                        'ProduceFailed' => '合成失败',
                      ),
                      'example' => 'PRODUCE_FAILED',
                    ),
                    'ErrorCode' => 
                    array (
                      'title' => '云剪辑工程合成失败的错误码',
                      'description' => '云剪辑工程合成失败的错误码。',
                      'type' => 'string',
                      'example' => 'InvalidParameter',
                    ),
                    'ErrorMessage' => 
                    array (
                      'title' => '云剪辑工程合成失败的消息',
                      'description' => '云剪辑工程合成失败的消息。',
                      'type' => 'string',
                      'example' => '"EventTime":"2021-08-12T10:04:15Z","ErrorCode":"InvalidParameter","ErrorMessage":"The specified parameter \\"LiveStreamConfig\\" is not valid. specified parameter example is not valid.',
                    ),
                    'CreateSource' => 
                    array (
                      'title' => '创建来源',
                      'description' => '云剪辑工程编辑方式：

\\-OpenAPI

\\-AliyunConsole

\\-WebSDK',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'AliyunConsole' => '通过阿里云控制台创建',
                        'WebSDK' => '通过WebSDK创建',
                        'OpenAPI' => '通过OpenAPI创建',
                      ),
                      'example' => 'OpenAPI',
                    ),
                    'ModifiedSource' => 
                    array (
                      'title' => '最后一次修改来源',
                      'description' => '最后一次修改来源。',
                      'type' => 'string',
                      'example' => '2017-01-11T12:00:00Z',
                    ),
                    'TemplateType' => 
                    array (
                      'title' => '模板类型',
                      'description' => '模板类型。',
                      'type' => 'string',
                      'example' => 'Timeline',
                    ),
                    'ProjectType' => 
                    array (
                      'description' => '剪辑工程类型。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'LiveEditingProject' => '直播剪辑工程',
                        'EditingProject' => '普通剪辑工程',
                      ),
                      'example' => 'EditingProject',
                    ),
                    'BusinessConfig' => 
                    array (
                      'description' => '工程业务配置，一般剪辑工程可忽略。',
                      'type' => 'string',
                      'example' => '{ "OutputMediaConfig" : { "StorageLocation": "test-bucket.oss-cn-shanghai.aliyuncs.com", "Path": "test-path" }, "OutputMediaTarget": "oss-object", "ReservationTime": "2021-06-21T08:05:00Z" }',
                    ),
                    'BusinessStatus' => 
                    array (
                      'description' => '工程业务状态，一般剪辑工程可忽略',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'BroadCasting' => '直播中',
                        'ReservationCanceled' => '预约取消',
                        'LiveFinished' => '直播结束',
                        'LoadingFailed' => '加载失败',
                        'Reserving' => '预约中',
                      ),
                      'example' => 'Reserving',
                    ),
                  ),
                ),
              ),
              'MaxResults' => 
              array (
                'title' => '云剪辑工程总数',
                'description' => '本次请求所返回的最大记录条数，最后一页前每页记录条数为MaxResults取值。

例如：

正例：10,10,5，反例：10,5,10',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '本次请求条件下的数据总量，此参数为可选参数，默认可不返回。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '110',
              ),
              'NextToken' => 
              array (
                'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
                'type' => 'string',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****9262E3DA-07FA-4862-FCBB6BC61D08*****\\",\\n  \\"ProjectList\\": [\\n    {\\n      \\"ProjectId\\": \\"****fddd7748b58bf1d47e95****\\",\\n      \\"Title\\": \\"title\\",\\n      \\"Timeline\\": \\"{\\\\\\"VideoTracks\\\\\\":[{\\\\\\"VideoTrackClips\\\\\\":[{\\\\\\"MediaId\\\\\\":\\\\\\"****4d7cf14dc7b83b0e801c****\\\\\\"},{\\\\\\"MediaId\\\\\\":\\\\\\"****4d7cf14dc7b83b0e801c****\\\\\\"}]}]}\\",\\n      \\"Description\\": \\"sample description\\",\\n      \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example-cover.jpg\\",\\n      \\"CreateTime\\": \\"2017-01-11T12:00:00Z\\",\\n      \\"ModifiedTime\\": \\"2017-01-11T12:00:00Z\\",\\n      \\"Duration\\": 30.1,\\n      \\"Status\\": \\"PRODUCE_FAILED\\",\\n      \\"ErrorCode\\": \\"InvalidParameter\\",\\n      \\"ErrorMessage\\": \\"\\\\\\"EventTime\\\\\\":\\\\\\"2021-08-12T10:04:15Z\\\\\\",\\\\\\"ErrorCode\\\\\\":\\\\\\"InvalidParameter\\\\\\",\\\\\\"ErrorMessage\\\\\\":\\\\\\"The specified parameter \\\\\\\\\\\\\\"LiveStreamConfig\\\\\\\\\\\\\\" is not valid. specified parameter example is not valid.\\",\\n      \\"CreateSource\\": \\"OpenAPI\\",\\n      \\"ModifiedSource\\": \\"2017-01-11T12:00:00Z\\",\\n      \\"TemplateType\\": \\"Timeline\\",\\n      \\"ProjectType\\": \\"EditingProject\\",\\n      \\"BusinessConfig\\": \\"{ \\\\\\"OutputMediaConfig\\\\\\" : { \\\\\\"StorageLocation\\\\\\": \\\\\\"test-bucket.oss-cn-shanghai.aliyuncs.com\\\\\\", \\\\\\"Path\\\\\\": \\\\\\"test-path\\\\\\" }, \\\\\\"OutputMediaTarget\\\\\\": \\\\\\"oss-object\\\\\\", \\\\\\"ReservationTime\\\\\\": \\\\\\"2021-06-21T08:05:00Z\\\\\\" }\\",\\n      \\"BusinessStatus\\": \\"Reserving\\"\\n    }\\n  ],\\n  \\"MaxResults\\": 10,\\n  \\"TotalCount\\": 110,\\n  \\"NextToken\\": \\"null\\"\\n}","errorExample":""},{"type":"xml","example":"<SearchEditingProjectResponse>\\n    <RequestId>****9262E3DA-07FA-4862-FCBB6BC61D08*****</RequestId>\\n    <ProjectList>\\n        <ProjectId>****fddd7748b58bf1d47e95****</ProjectId>\\n        <Title>title</Title>\\n        <Timeline>{\\"VideoTracks\\":[{\\"VideoTrackClips\\":[{\\"MediaId\\":\\"****4d7cf14dc7b83b0e801c****\\"},{\\"MediaId\\":\\"****4d7cf14dc7b83b0e801c****\\"}]}]}</Timeline>\\n        <Description>sample description</Description>\\n        <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example-cover.jpg</CoverURL>\\n        <CreateTime>2017-01-11T12:00:00Z</CreateTime>\\n        <ModifiedTime>2017-01-11T12:00:00Z</ModifiedTime>\\n        <Status>PRODUCE_FAILED</Status>\\n        <ErrorCode>InvalidParameter</ErrorCode>\\n        <ErrorMessage>\\"EventTime\\":\\"2021-08-12T10:04:15Z\\",\\"ErrorCode\\":\\"InvalidParameter\\",\\"ErrorMessage\\":\\"The specified parameter \\\\\\"LiveStreamConfig\\\\\\" is not valid. specified parameter example is not valid.</ErrorMessage>\\n        <CreateSource>OpenAPI</CreateSource>\\n        <ModifiedSource>2017-01-11T12:00:00Z</ModifiedSource>\\n        <TemplateType>Timeline</TemplateType>\\n        <ProjectType>EditingProject</ProjectType>\\n    </ProjectList>\\n    <MaxResults>10</MaxResults>\\n    <TotalCount>110</TotalCount>\\n    <NextToken>null</NextToken>\\n</SearchEditingProjectResponse>","errorExample":""}]',
      'title' => '搜索云剪辑工程',
    ),
    'AddEditingProjectMaterials' => 
    array (
      'summary' => '将一个或多个素材添加到剪辑工程中。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程ID',
            'description' => '云剪辑工程ID',
            'type' => 'string',
            'required' => true,
            'example' => '*****b2101cb318c*****',
          ),
        ),
        1 => 
        array (
          'name' => 'MaterialMaps',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '素材ID',
            'description' => '素材ID，多个素材以逗号（,）分隔；每种类型最多支持10个素材ID
- "video": 视频
- "audio": 音频
- "image": 图片
- "liveStream": 直播流
- "editingProject": 剪辑工程',
            'type' => 'string',
            'required' => true,
            'example' => '{"video":"*****2e057304fcd9b145c5cafc*****", "image":"****8021a8d493da643c8acd98*****,*****cb6307a4edea614d8b3f3c*****", "liveStream": "[{\\"appName\\":\\"testrecord\\",\\"domainName\\":\\"test.alivecdn.com\\",\\"liveUrl\\":\\"rtmp://test.alivecdn.com/testrecord/teststream\\",\\"streamName\\":\\"teststream\\"}]", "editingProject": "*****9b145c5cafc2e057304fcd*****"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '*****ACB-44F2-5F2D-88D7-1283E70*****',
              ),
              'ProjectId' => 
              array (
                'description' => '云剪辑项目ID',
                'type' => 'string',
                'example' => '*****67ae06542b9b93e0d1c387*****',
              ),
              'MediaInfos' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID',
                      'type' => 'string',
                      'example' => '*****5cb2e35433198daae94a72*****',
                    ),
                    'MediaBasicInfo' => 
                    array (
                      'title' => 'BasicInfo',
                      'description' => '媒资基础信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => 'MediaId',
                          'description' => '媒资ID号',
                          'type' => 'string',
                          'example' => '*****5cb2e35433198daae94a72*****',
                        ),
                        'InputURL' => 
                        array (
                          'title' => '待注册的媒资在相应系统中的地址',
                          'description' => '待注册的媒资在相应系统中的地址',
                          'type' => 'string',
                          'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/file.mp4',
                        ),
                        'MediaType' => 
                        array (
                          'title' => '媒资媒体类型',
                          'description' => '媒资媒体类型',
                          'type' => 'string',
                          'example' => 'Video',
                        ),
                        'BusinessType' => 
                        array (
                          'title' => '媒资业务类型',
                          'description' => '媒资业务类型',
                          'type' => 'string',
                          'example' => 'general',
                        ),
                        'Source' => 
                        array (
                          'title' => '来源',
                          'description' => '来源',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Title' => 
                        array (
                          'title' => '标题',
                          'description' => '标题',
                          'type' => 'string',
                          'example' => 'default_title_2020-12-23T03:32:59Z',
                        ),
                        'Description' => 
                        array (
                          'title' => '内容描述',
                          'description' => '内容描述',
                          'type' => 'string',
                          'example' => 'sample_description',
                        ),
                        'Category' => 
                        array (
                          'title' => '分类',
                          'description' => '分类',
                          'type' => 'string',
                          'example' => 'audio',
                        ),
                        'MediaTags' => 
                        array (
                          'title' => '标签',
                          'description' => '标签',
                          'type' => 'string',
                          'example' => 'sample_tag',
                        ),
                        'CoverURL' => 
                        array (
                          'title' => '封面地址',
                          'description' => '封面地址',
                          'type' => 'string',
                          'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据',
                          'type' => 'string',
                          'example' => 'userData',
                        ),
                        'Snapshots' => 
                        array (
                          'title' => '截图',
                          'description' => '截图',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'Status' => 
                        array (
                          'title' => '资源状态',
                          'description' => '媒资状态

\\-Init

\\-Preparing

\\-PrepareFail

\\-Normal',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'TranscodeStatus' => 
                        array (
                          'title' => '转码状态',
                          'description' => '转码状态',
                          'type' => 'string',
                          'example' => 'Init',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '媒资创建时间',
                          'description' => '媒资创建时间',
                          'type' => 'string',
                          'example' => '2020-12-23T03:32:59Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'title' => '媒资修改时间',
                          'description' => '媒资修改时间',
                          'type' => 'string',
                          'example' => '2020-12-23T03:32:59Z',
                        ),
                        'DeletedTime' => 
                        array (
                          'title' => '媒资删除时间',
                          'description' => '媒资删除时间',
                          'type' => 'string',
                          'example' => '2020-12-23T03:32:59Z',
                        ),
                        'SpriteImages' => 
                        array (
                          'title' => '雪碧图',
                          'description' => '雪碧图',
                          'type' => 'string',
                          'example' => 'http://outin-example.oss-cn-shanghai.aliyuncs.com/test.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                        ),
                      ),
                    ),
                    'FileInfoList' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => 'FileInfos',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'FileBasicInfo' => 
                          array (
                            'title' => '文件基础信息，包含时长，大小等',
                            'description' => '文件基础信息，包含时长，大小等',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FileName' => 
                              array (
                                'title' => '文件名',
                                'description' => '文件名',
                                'type' => 'string',
                                'example' => 'example.mp4',
                              ),
                              'FileStatus' => 
                              array (
                                'title' => '文件状态',
                                'description' => '文件状态

\\-Uploading

\\-Normal

\\-UploadFail

\\-Disable

\\-Deleted',
                                'type' => 'string',
                                'example' => 'Normal',
                              ),
                              'FileType' => 
                              array (
                                'title' => '文件类型',
                                'description' => '文件类型',
                                'type' => 'string',
                                'example' => 'source_file',
                              ),
                              'FileSize' => 
                              array (
                                'title' => '文件大小（字节）',
                                'description' => '文件大小（字节）',
                                'type' => 'string',
                                'example' => '30611502',
                              ),
                              'FileUrl' => 
                              array (
                                'title' => '文件oss地址',
                                'description' => '文件OSS地址',
                                'type' => 'string',
                                'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                              ),
                              'Region' => 
                              array (
                                'title' => '文件存储区域',
                                'description' => '文件存储区域',
                                'type' => 'string',
                                'example' => 'cn-shanghai',
                              ),
                              'FormatName' => 
                              array (
                                'title' => '封装格式',
                                'description' => '封装格式',
                                'type' => 'string',
                                'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '216.206667',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '1132.68',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽',
                                'type' => 'string',
                                'example' => '960',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高',
                                'type' => 'string',
                                'example' => '540',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'LiveMaterials' => 
              array (
                'description' => '直播流关联素材',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AppName' => 
                    array (
                      'description' => '直播播流应用名',
                      'type' => 'string',
                      'example' => 'testrecord',
                    ),
                    'StreamName' => 
                    array (
                      'description' => '直播播流流名',
                      'type' => 'string',
                      'example' => 'teststream',
                    ),
                    'DomainName' => 
                    array (
                      'description' => '直播播流域名',
                      'type' => 'string',
                      'example' => 'test.alivecdn.com',
                    ),
                    'LiveUrl' => 
                    array (
                      'description' => '直播流地址',
                      'type' => 'string',
                      'example' => 'rtmp://test.alivecdn.com/testrecord/teststream',
                    ),
                  ),
                ),
              ),
              'ProjectMaterials' => 
              array (
                'description' => '剪辑工程关联素材。直播工程在直播结束后会关联到一个普通剪辑工程',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '直播剪辑工程关联的普通剪辑工程ID',
                  'type' => 'string',
                  'example' => '*****c38767ae06542b9b93e0d1*****',
                ),
                'example' => '*****9b145c5cafc2e057304fcd*****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectNotFound',
            'errorMessage' => 'The specified project not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"*****ACB-44F2-5F2D-88D7-1283E70*****\\",\\n  \\"ProjectId\\": \\"*****67ae06542b9b93e0d1c387*****\\",\\n  \\"MediaInfos\\": [\\n    {\\n      \\"MediaId\\": \\"*****5cb2e35433198daae94a72*****\\",\\n      \\"MediaBasicInfo\\": {\\n        \\"MediaId\\": \\"*****5cb2e35433198daae94a72*****\\",\\n        \\"InputURL\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/file.mp4\\",\\n        \\"MediaType\\": \\"Video\\",\\n        \\"BusinessType\\": \\"general\\",\\n        \\"Source\\": \\"oss\\",\\n        \\"Title\\": \\"default_title_2020-12-23T03:32:59Z\\",\\n        \\"Description\\": \\"sample_description\\",\\n        \\"Category\\": \\"audio\\",\\n        \\"MediaTags\\": \\"sample_tag\\",\\n        \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n        \\"UserData\\": \\"userData\\",\\n        \\"Snapshots\\": \\"null\\",\\n        \\"Status\\": \\"Normal\\",\\n        \\"TranscodeStatus\\": \\"Init\\",\\n        \\"CreateTime\\": \\"2020-12-23T03:32:59Z\\",\\n        \\"ModifiedTime\\": \\"2020-12-23T03:32:59Z\\",\\n        \\"DeletedTime\\": \\"2020-12-23T03:32:59Z\\",\\n        \\"SpriteImages\\": \\"http://outin-example.oss-cn-shanghai.aliyuncs.com/test.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\"\\n      },\\n      \\"FileInfoList\\": [\\n        {\\n          \\"FileBasicInfo\\": {\\n            \\"FileName\\": \\"example.mp4\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"30611502\\",\\n            \\"FileUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n            \\"Duration\\": \\"216.206667\\",\\n            \\"Bitrate\\": \\"1132.68\\",\\n            \\"Width\\": \\"960\\",\\n            \\"Height\\": \\"540\\"\\n          }\\n        }\\n      ]\\n    }\\n  ],\\n  \\"LiveMaterials\\": [\\n    {\\n      \\"AppName\\": \\"testrecord\\",\\n      \\"StreamName\\": \\"teststream\\",\\n      \\"DomainName\\": \\"test.alivecdn.com\\",\\n      \\"LiveUrl\\": \\"rtmp://test.alivecdn.com/testrecord/teststream\\"\\n    }\\n  ],\\n  \\"ProjectMaterials\\": [\\n    \\"*****c38767ae06542b9b93e0d1*****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<AddEditingProjectMaterialsResponse>\\n    <RequestId>*****ACB-44F2-5F2D-88D7-1283E70*****</RequestId>\\n    <ProjectId>*****67ae06542b9b93e0d1c387*****</ProjectId>\\n    <MediaInfos>\\n        <MediaId>*****5cb2e35433198daae94a72*****</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>*****5cb2e35433198daae94a72*****</MediaId>\\n            <InputURL>http://bucket.oss-cn-shanghai.aliyuncs.com/file.mp4</InputURL>\\n            <MediaType>Video</MediaType>\\n            <BusinessType>general</BusinessType>\\n            <Source>oss</Source>\\n            <Title>default_title_2020-12-23T03:32:59Z</Title>\\n            <Description>sample_description</Description>\\n            <Category>audio</Category>\\n            <MediaTags>sample_tag</MediaTags>\\n            <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n            <UserData>userData</UserData>\\n            <Snapshots>null</Snapshots>\\n            <Status>Normal</Status>\\n            <TranscodeStatus>Init</TranscodeStatus>\\n            <CreateTime>2020-12-23T03:32:59Z</CreateTime>\\n            <ModifiedTime>2020-12-23T03:32:59Z</ModifiedTime>\\n            <DeletedTime>2020-12-23T03:32:59Z</DeletedTime>\\n            <SpriteImages>http://outin-example.oss-cn-shanghai.aliyuncs.com/test.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</SpriteImages>\\n        </MediaBasicInfo>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example.mp4</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>30611502</FileSize>\\n                <FileUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mov,mp4,m4a,3gp,3g2,mj2</FormatName>\\n                <Duration>216.206667</Duration>\\n                <Bitrate>1132.68</Bitrate>\\n                <Width>960</Width>\\n                <Height>540</Height>\\n            </FileBasicInfo>\\n        </FileInfoList>\\n    </MediaInfos>\\n    <LiveMaterials>\\n        <AppName>testrecord</AppName>\\n        <StreamName>teststream</StreamName>\\n        <DomainName>test.alivecdn.com</DomainName>\\n        <LiveUrl>rtmp://test.alivecdn.com/testrecord/teststream</LiveUrl>\\n    </LiveMaterials>\\n    <ProjectMaterials>*****c38767ae06542b9b93e0d1*****</ProjectMaterials>\\n</AddEditingProjectMaterialsResponse>","errorExample":""}]',
      'title' => '增加剪辑工程关联素材',
    ),
    'GetEditingProjectMaterials' => 
    array (
      'summary' => '获取当前工程绑定的所有素材。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程ID',
            'description' => '云剪辑工程ID。',
            'type' => 'string',
            'required' => true,
            'example' => '*****fb2101cb318*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******89-C21D-4B78-AE24-3788B8******',
              ),
              'ProjectId' => 
              array (
                'description' => '项目ID号。',
                'type' => 'string',
                'example' => '*****67ae06542b9b93e0d1c387*****',
              ),
              'MediaInfos' => 
              array (
                'title' => '符合要求的媒资集合',
                'description' => '符合要求的媒资集合。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MediaId' => 
                    array (
                      'title' => '媒资ID',
                      'description' => '媒资ID。',
                      'type' => 'string',
                      'example' => '*****64623a94eca8516569c8fe*****',
                    ),
                    'MediaBasicInfo' => 
                    array (
                      'title' => 'BasicInfo',
                      'description' => '媒资基础信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => 'MediaId',
                          'description' => '媒资ID。',
                          'type' => 'string',
                          'example' => '*****64623a94eca8516569c8f*****',
                        ),
                        'InputURL' => 
                        array (
                          'title' => '待注册的媒资在相应系统中的地址',
                          'description' => '待注册的媒资在相应系统中的地址。',
                          'type' => 'string',
                          'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/file.mp4',
                        ),
                        'MediaType' => 
                        array (
                          'title' => '媒资媒体类型',
                          'description' => '媒资媒体类型。',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'BusinessType' => 
                        array (
                          'title' => '媒资业务类型',
                          'description' => '媒资业务类型。',
                          'type' => 'string',
                          'example' => 'general',
                        ),
                        'Source' => 
                        array (
                          'title' => '来源',
                          'description' => '来源。',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'Title' => 
                        array (
                          'title' => '标题',
                          'description' => '标题。',
                          'type' => 'string',
                          'example' => 'file.mp4',
                        ),
                        'Description' => 
                        array (
                          'title' => '内容描述',
                          'description' => '内容描述。',
                          'type' => 'string',
                          'example' => 'sample_description',
                        ),
                        'Category' => 
                        array (
                          'title' => '分类',
                          'description' => '分类。',
                          'type' => 'string',
                          'example' => 'video',
                        ),
                        'MediaTags' => 
                        array (
                          'title' => '标签',
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => '标签,tag1',
                        ),
                        'CoverURL' => 
                        array (
                          'title' => '封面地址',
                          'description' => '封面地址。',
                          'type' => 'string',
                          'example' => 'http://sample-bucket.oss-cn-shanghai.aliyuncs.com/sample-corver.jpg?Expires=1628670610&OSSAccessKeyId=AK&Signature=signature',
                        ),
                        'UserData' => 
                        array (
                          'title' => '用户数据',
                          'description' => '用户数据。',
                          'type' => 'string',
                          'example' => 'userData',
                        ),
                        'Snapshots' => 
                        array (
                          'title' => '截图',
                          'description' => '截图。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'Status' => 
                        array (
                          'title' => '资源状态',
                          'description' => '资源状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'TranscodeStatus' => 
                        array (
                          'title' => '转码状态',
                          'description' => '转码状态。',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'TranscodeSuccess' => '转码完成',
                            'TranscodeFailed' => '转码失败',
                            'Init' => '初始化',
                            'Transcoding' => '转码中',
                          ),
                          'example' => 'Init',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '媒资创建时间',
                          'description' => '媒资创建时间。',
                          'type' => 'string',
                          'example' => '2020-12-26T04:11:08Z',
                        ),
                        'ModifiedTime' => 
                        array (
                          'title' => '媒资修改时间',
                          'description' => '媒资修改时间。',
                          'type' => 'string',
                          'example' => '2020-12-26T04:11:08Z',
                        ),
                        'DeletedTime' => 
                        array (
                          'title' => '媒资删除时间',
                          'description' => '媒资删除时间。',
                          'type' => 'string',
                          'example' => '2020-12-26T04:11:08Z',
                        ),
                        'SpriteImages' => 
                        array (
                          'title' => '雪碧图',
                          'description' => '雪碧图。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                      ),
                    ),
                    'FileInfoList' => 
                    array (
                      'title' => 'FileInfos',
                      'description' => '文件信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'FileBasicInfo' => 
                          array (
                            'title' => '文件基础信息，包含时长，大小等',
                            'description' => '文件基础信息，包含时长，大小等。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'FileName' => 
                              array (
                                'title' => '文件名',
                                'description' => '文件名。',
                                'type' => 'string',
                                'example' => 'example.mp4',
                              ),
                              'FileStatus' => 
                              array (
                                'title' => '文件状态',
                                'description' => '文件状态。',
                                'type' => 'string',
                                'example' => 'Normal',
                              ),
                              'FileType' => 
                              array (
                                'title' => '文件类型',
                                'description' => '文件类型。',
                                'type' => 'string',
                                'example' => 'source_file',
                              ),
                              'FileSize' => 
                              array (
                                'title' => '文件大小（字节）',
                                'description' => '文件大小（字节）。',
                                'type' => 'string',
                                'example' => '30611502',
                              ),
                              'FileUrl' => 
                              array (
                                'title' => '文件oss地址',
                                'description' => '文件OSS地址。',
                                'type' => 'string',
                                'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                              ),
                              'Region' => 
                              array (
                                'title' => '文件存储区域',
                                'description' => '文件存储区域。',
                                'type' => 'string',
                                'example' => 'cn-shanghai',
                              ),
                              'FormatName' => 
                              array (
                                'title' => '封装格式',
                                'description' => '封装格式。',
                                'type' => 'string',
                                'example' => 'mov,mp4,m4a,3gp,3g2,mj2',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长。',
                                'type' => 'string',
                                'example' => '216.206667',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率。',
                                'type' => 'string',
                                'example' => '1132.68',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽。',
                                'type' => 'string',
                                'example' => '960',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高。',
                                'type' => 'string',
                                'example' => '540',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'LiveMaterials' => 
              array (
                'description' => '直播流关联素材。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AppName' => 
                    array (
                      'description' => '直播播流应用名。',
                      'type' => 'string',
                      'example' => 'testrecord',
                    ),
                    'StreamName' => 
                    array (
                      'description' => '直播播流流名。',
                      'type' => 'string',
                      'example' => 'testrecord',
                    ),
                    'DomainName' => 
                    array (
                      'description' => '直播播流域名。',
                      'type' => 'string',
                      'example' => 'test.alivecdn.com',
                    ),
                    'LiveUrl' => 
                    array (
                      'description' => '直播播流地址。',
                      'type' => 'string',
                      'example' => 'rtmp://test.alivecdn.com/testrecord/teststream',
                    ),
                  ),
                ),
              ),
              'ProjectMaterials' => 
              array (
                'description' => '剪辑工程关联素材。直播工程在直播结束后会关联到一个普通剪辑工程。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '直播剪辑工程关联的普通剪辑工程ID。',
                  'type' => 'string',
                  'example' => '*****c38767ae06542b9b93e0d1*****',
                ),
                'example' => '*****9b145c5cafc2e057304fcd*****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectNotFound',
            'errorMessage' => 'The specified project not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******89-C21D-4B78-AE24-3788B8******\\",\\n  \\"ProjectId\\": \\"*****67ae06542b9b93e0d1c387*****\\",\\n  \\"MediaInfos\\": [\\n    {\\n      \\"MediaId\\": \\"*****64623a94eca8516569c8fe*****\\",\\n      \\"MediaBasicInfo\\": {\\n        \\"MediaId\\": \\"*****64623a94eca8516569c8f*****\\",\\n        \\"InputURL\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/file.mp4\\",\\n        \\"MediaType\\": \\"video\\",\\n        \\"BusinessType\\": \\"general\\",\\n        \\"Source\\": \\"oss\\",\\n        \\"Title\\": \\"file.mp4\\",\\n        \\"Description\\": \\"sample_description\\",\\n        \\"Category\\": \\"video\\",\\n        \\"MediaTags\\": \\"标签,tag1\\",\\n        \\"CoverURL\\": \\"http://sample-bucket.oss-cn-shanghai.aliyuncs.com/sample-corver.jpg?Expires=1628670610&OSSAccessKeyId=AK&Signature=signature\\",\\n        \\"UserData\\": \\"userData\\",\\n        \\"Snapshots\\": \\"null\\",\\n        \\"Status\\": \\"Normal\\",\\n        \\"TranscodeStatus\\": \\"Init\\",\\n        \\"CreateTime\\": \\"2020-12-26T04:11:08Z\\",\\n        \\"ModifiedTime\\": \\"2020-12-26T04:11:08Z\\",\\n        \\"DeletedTime\\": \\"2020-12-26T04:11:08Z\\",\\n        \\"SpriteImages\\": \\"null\\"\\n      },\\n      \\"FileInfoList\\": [\\n        {\\n          \\"FileBasicInfo\\": {\\n            \\"FileName\\": \\"example.mp4\\",\\n            \\"FileStatus\\": \\"Normal\\",\\n            \\"FileType\\": \\"source_file\\",\\n            \\"FileSize\\": \\"30611502\\",\\n            \\"FileUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n            \\"Region\\": \\"cn-shanghai\\",\\n            \\"FormatName\\": \\"mov,mp4,m4a,3gp,3g2,mj2\\",\\n            \\"Duration\\": \\"216.206667\\",\\n            \\"Bitrate\\": \\"1132.68\\",\\n            \\"Width\\": \\"960\\",\\n            \\"Height\\": \\"540\\"\\n          }\\n        }\\n      ]\\n    }\\n  ],\\n  \\"LiveMaterials\\": [\\n    {\\n      \\"AppName\\": \\"testrecord\\",\\n      \\"StreamName\\": \\"testrecord\\",\\n      \\"DomainName\\": \\"test.alivecdn.com\\",\\n      \\"LiveUrl\\": \\"rtmp://test.alivecdn.com/testrecord/teststream\\"\\n    }\\n  ],\\n  \\"ProjectMaterials\\": [\\n    \\"*****c38767ae06542b9b93e0d1*****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetEditingProjectMaterialsResponse>\\n    <RequestId>******89-C21D-4B78-AE24-3788B8******</RequestId>\\n    <ProjectId>*****67ae06542b9b93e0d1c387*****</ProjectId>\\n    <MediaInfos>\\n        <MediaId>*****64623a94eca8516569c8fe*****</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>*****64623a94eca8516569c8f*****</MediaId>\\n            <InputURL>http://bucket.oss-cn-shanghai.aliyuncs.com/file.mp4</InputURL>\\n            <MediaType>video</MediaType>\\n            <BusinessType>general</BusinessType>\\n            <Source>oss</Source>\\n            <Title>file.mp4</Title>\\n            <Description>sample_description</Description>\\n            <Category>video</Category>\\n            <MediaTags>标签,tag1</MediaTags>\\n            <CoverURL>http://sample-bucket.oss-cn-shanghai.aliyuncs.com/sample-corver.jpg?Expires=1628670610&amp;OSSAccessKeyId=AK&amp;Signature=signature</CoverURL>\\n            <UserData>userData</UserData>\\n            <Snapshots>null</Snapshots>\\n            <Status>Normal</Status>\\n            <TranscodeStatus>Init</TranscodeStatus>\\n            <CreateTime>2020-12-26T04:11:08Z</CreateTime>\\n            <ModifiedTime>2020-12-26T04:11:08Z</ModifiedTime>\\n            <DeletedTime>2020-12-26T04:11:08Z</DeletedTime>\\n            <SpriteImages>null</SpriteImages>\\n        </MediaBasicInfo>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example.mp4</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>30611502</FileSize>\\n                <FileUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mov,mp4,m4a,3gp,3g2,mj2</FormatName>\\n                <Duration>216.206667</Duration>\\n                <Bitrate>1132.68</Bitrate>\\n                <Width>960</Width>\\n                <Height>540</Height>\\n            </FileBasicInfo>\\n        </FileInfoList>\\n    </MediaInfos>\\n    <LiveMaterials>\\n        <AppName>testrecord</AppName>\\n        <StreamName>testrecord</StreamName>\\n        <DomainName>test.alivecdn.com</DomainName>\\n        <LiveUrl>rtmp://test.alivecdn.com/testrecord/teststream</LiveUrl>\\n    </LiveMaterials>\\n    <ProjectMaterials>*****c38767ae06542b9b93e0d1*****</ProjectMaterials>\\n</GetEditingProjectMaterialsResponse>","errorExample":""}]',
      'title' => '获取剪辑工程关联素材',
    ),
    'DeleteEditingProjectMaterials' => 
    array (
      'summary' => '将一个或多个素材从剪辑工程中删除。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云剪辑工程ID',
            'description' => '云剪辑工程ID',
            'type' => 'string',
            'required' => true,
            'example' => '*****fb2101cb318*****',
          ),
        ),
        1 => 
        array (
          'name' => 'MaterialIds',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '素材ID',
            'description' => '素材ID，多个素材以逗号（,）分隔；最多支持10个素材ID',
            'type' => 'string',
            'required' => true,
            'example' => '*****cbd721b418a89a7dafb1dc*****,*****86f5d534c95997c55c96f*****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaterialType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '素材类型',
            'description' => '素材类型：

\\-video

\\-image

\\-audio

\\-subtitle

\\-text
',
            'type' => 'string',
            'required' => true,
            'example' => 'video',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID号',
                'type' => 'string',
                'example' => '******36-3C1E-4417-BDB2-1E034F******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectNotFound',
            'errorMessage' => 'The specified project not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******36-3C1E-4417-BDB2-1E034F******\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteEditingProjectMaterialsResponse>\\n    <RequestId>******36-3C1E-4417-BDB2-1E034F******</RequestId>\\n</DeleteEditingProjectMaterialsResponse>","errorExample":""}]',
      'title' => '删除剪辑工程关联素材',
    ),
    'GetLiveEditingIndexFile' => 
    array (
      'summary' => '获取直播流的索引文件，用于控制台剪辑预览。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '直播播流应用名',
            'type' => 'string',
            'required' => false,
            'example' => 'testrecord',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '直播播流域名',
            'type' => 'string',
            'required' => false,
            'example' => 'test.alivecdn.com',
          ),
        ),
        2 => 
        array (
          'name' => 'StreamName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '直播播流流名',
            'type' => 'string',
            'required' => false,
            'example' => 'teststream',
          ),
        ),
        3 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '直播剪辑工程ID',
            'type' => 'string',
            'required' => false,
            'example' => '*****cb6307a4edea614d8b3f3c*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
              'IndexFile' => 
              array (
                'description' => '索引文件地址',
                'type' => 'string',
                'example' => 'https://bucket.oss-cn-shanghai.aliyuncs.com/test/live1.m3u8?<鉴权>&x-oss-process=hls/sign',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\",\\n  \\"IndexFile\\": \\"https://bucket.oss-cn-shanghai.aliyuncs.com/test/live1.m3u8?<鉴权>&x-oss-process=hls/sign\\"\\n}","errorExample":""},{"type":"xml","example":"<GetLiveEditingIndexFileResponse>\\n    <RequestId>4E84BE44-58A7-****-****-FBEBEA16EF94</RequestId>\\n    <IndexFile>https://bucket.oss-cn-shanghai.aliyuncs.com/test/live1.m3u8?&lt;鉴权&gt;&amp;x-oss-process=hls/sign</IndexFile>\\n</GetLiveEditingIndexFileResponse>","errorExample":""}]',
      'title' => '获取直播剪辑索引文件',
    ),
    'SubmitMediaProducingJob' => 
    array (
      'summary' => '将一个或多个视频、音频、图片、字幕素材合成为成品。可以通过时间线(Timeline)参数直接提交剪辑设置，也可以先创建云剪辑工程，使用工程ID提交剪辑任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑工程ld。
><notice>必须填写ProgectId、Timeline、TempalteId三个参数中的一个，剩余两个参数填写为空。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'xxxxxfb2101cb318xxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'Timeline',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '云剪辑任务时间线。具体结构定义，请参见[Timeline配置说明](https://help.aliyun.com/document_detail/198823.htm?spm=a2c4g.11186623.2.5.92447a40M5rR1I#topic-2024662)。><notice>必须填写ProgectId、Timeline、TempalteId三个参数中的一个，剩余两个参数填写为空。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '{"VideoTracks":[{"VideoTrackClips":[{"MediaId":"****4d7cf14dc7b83b0e801c****"},{"MediaId":"****4d7cf14dc7b83b0e801c****"}]}]}',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板Id，用于快速低门槛的构建时间线。><notice>必须填写ProgectId、Timeline、TempalteId三个参数中的一个，剩余两个参数填写为空。
当TemplateId不为空时，ClipsParam不能为空。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '****96e8864746a0b6f3****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClipsParam',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板对应的素材参数，Json格式，当TemplateId不为空时，ClipsParam不能为空。具体格式见 [普通模板创建及使用](https://help.aliyun.com/document_detail/328557.html)、[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)。',
            'type' => 'string',
            'required' => false,
            'example' => '见模板使用文档',
          ),
        ),
        4 => 
        array (
          'name' => 'ProjectMetadata',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑工程的元数据信息，Json格式。具体结构定义参见[ProjectMetadata](https://help.aliyun.com/document_detail/357745.html#title-yvp-81k-wff)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"Description":"剪辑视频描述","Title":"剪辑标题测试"}',
          ),
        ),
        5 => 
        array (
          'name' => 'OutputMediaTarget',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输出成品的目标类型。取值：

- oss-object（客户在阿里云oss bucket下的oss object）

- vod-media（阿里云vod的媒资）',
            'type' => 'string',
            'required' => false,
            'example' => 'oss-object',
          ),
        ),
        6 => 
        array (
          'name' => 'OutputMediaConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输出成品的目标配置，Json格式。可以设置输出成品的在OSS 上的URL，或者VOD Bucket 中的存储位置。

输出到OSS时，输出目标的 MediaURL 必填；输出到VOD 时，StorageLocation 和 FileName 两个参数必填。

[OutputMediaConfig 参数示例](https://help.aliyun.com/document_detail/357745.html#title-4j6-ve7-g31)。',
            'type' => 'string',
            'required' => true,
            'example' => '{"MediaURL":"https://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4"}',
          ),
        ),
        7 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义设置，Json格式，长度限制为512字节。支持[自定义回调地址配置](~~451631~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotifyAddress":"http://xx.xx.xxx"}或{"NotifyAddress":"https://xx.xx.xxx"}或{"NotifyAddress":"ice-callback-demo"}',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。',
            'type' => 'string',
            'required' => false,
            'example' => '****12e8864746a0a398****',
          ),
        ),
        9 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑合成请求来源，取值范围：

- OpenAPI：API 直接请求。

- AliyunConsole：请求来自于阿里云控制台。

- WebSDK：请求来自于集成了WebSDK的前端页面。',
            'type' => 'string',
            'required' => false,
            'example' => 'OPENAPI',
          ),
        ),
        10 => 
        array (
          'name' => 'EditingProduceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑合成参数， [参数详情](https://help.aliyun.com/document_detail/357745.html#title-10z-t9u-n69)。

- AutoRegisterInputVodMedia：是否需要将您时间线中的VOD媒资自动注册至IMS，默认为true。

- OutputWebmTransparentChannel: 是否需要输出视频带透明通道，默认为false。

- CoverConfig: 自定义封面图参数。
- 等......',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "AutoRegisterInputVodMedia": "true",
      "OutputWebmTransparentChannel": "true"
}',
          ),
        ),
        11 => 
        array (
          'name' => 'MediaMetadata',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '合成视频的元数据，JSON格式。具体结构定义，请参见[MediaMetadata](https://help.aliyun.com/document_detail/357745.html?spm=a2c4g.445712.0.0.49a716dbA8hgdz#97ff26d0e3c28)。',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "Title":"test-title",
      "Tags":"test-tags1,tags2"
}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****36-3C1E-4417-BDB2-1E034F****',
              ),
              'ProjectId' => 
              array (
                'title' => '剪辑工程Id',
                'description' => '剪辑工程ID。',
                'type' => 'string',
                'example' => '****b4549d46c88681030f6e****',
              ),
              'JobId' => 
              array (
                'title' => '合成作业Id',
                'description' => '合成作业ID。',
                'type' => 'string',
                'example' => '****d80e4e4044975745c14b****',
              ),
              'MediaId' => 
              array (
                'title' => '合成ICE媒资Id',
                'description' => '合成媒资ID。',
                'type' => 'string',
                'example' => '****c469e944b5a856828dc2****',
              ),
              'VodMediaId' => 
              array (
                'title' => 'vod媒资id',
                'description' => '如果视频输出的位置为vod时，返回vod媒资id。',
                'type' => 'string',
                'example' => '****d8s4h75ci975745c14b****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectNotFound',
            'errorMessage' => 'The specified project not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****36-3C1E-4417-BDB2-1E034F****\\",\\n  \\"ProjectId\\": \\"****b4549d46c88681030f6e****\\",\\n  \\"JobId\\": \\"****d80e4e4044975745c14b****\\",\\n  \\"MediaId\\": \\"****c469e944b5a856828dc2****\\",\\n  \\"VodMediaId\\": \\"****d8s4h75ci975745c14b****\\"\\n}","errorExample":""},{"type":"xml","example":"<SubmitMediaProducingJobResponse>\\n    <RequestId>****36-3C1E-4417-BDB2-1E034F****</RequestId>\\n    <ProjectId>****b4549d46c88681030f6e****</ProjectId>\\n    <JobId>****d80e4e4044975745c14b****</JobId>\\n    <MediaId>****c469e944b5a856828dc2****</MediaId>\\n</SubmitMediaProducingJobResponse>","errorExample":""}]',
      'title' => '提交剪辑合成作业',
      'description' => '- 该接口返回合成任务的提交结果，不保证接口返回时视频已合成完毕。合成任务将进入后台排队，异步执行。    
- 云剪辑时间线中引用的素材，既可以是素材库中的媒资，也可以直接引用OSS文件，暂不支持外部地址或CDN地址。当素材为OSS文件时，MediaUrl仅支持OSS地址格式，如：https://your-bucket.oss-region-name.aliyuncs.com/your-object.ext。    
-  视频合成完成后，会自动注册媒资，此时媒资还是分析中状态，当媒资分析完成后，可以根据MediaId获取成片时长及分辨率信息。
## 使用限制
- 本接口流控值为 30 qps
- 视频轨、图片轨、字幕轨的轨道数每种均限制最多100个。    
- 素材个数无限制，素材文件总大小不能超过1 TB。  
- 输入或输出OSS Bucket所在Region，必须和使用IMS的Region保持一致。   
- 当输出为视频时，成片分辨率有以下限制：
    - 宽高都不能小于128 px。
    - 宽高都不能大于4096 px。
    - 短边不能大于2160 px。',
      'requestParamsDescription' => '## **OutputMediaConfig 参数示例**
**示例：输出到 OSS**
```
{
  "MediaURL":"https://my-test-bucket.oss-cn-shanghai.aliyuncs.com/test/xxxxxtest001xxxxx.mp4",
  "Bitrate": 2000,  
  "Width": 800,  
  "Height": 680
}
```
当输出到 OSS 时，MediaURL 必填。OutputMediaTarget 参数默认值为 "oss-object", 表示输出到 OSS。 其他参数可以选填，其中 Bitrate 用来设置输出成品的码率，通常码率越高越清晰，最大可以设置到 5000。 Width, Height 用来设置成品的分辨率。

OSS URL 的路径格式： https://bucketname.oss-region-name.aliyuncs.com/xxx/yyy.ext

bucketname 是 OSS Bucket 的名称。

oss-region-name.aliyuncs.com 是 OSS 文件的外网 Endpoint，比如上海，北京，杭州的分别是：
```
oss-cn-shanghai.aliyuncs.com
oss-cn-hangzhou.aliyuncs.com 
oss-cn-beijing.aliyuncs.com
```
**示例：输出到vod**
```
{ 
  "StorageLocation": "outin-*xxxxxx7d2a3811eb83da00163exxxxxx.oss-cn-shanghai.aliyuncs.com",  
  "FileName": "output.mp4",  
  "Bitrate": 2000,  
  "Width": 800,  
  "Height": 680
}
```
当输出到 VOD 时， StorageLocation 和 FileName 两个参数必填。OutputMediaTarget 参数设置为 "vod-media", 表示输出到点播 VOD 的存储Bucket。点播VOD可以使用的存储位置可以在 VOD 里面上传媒资后，在媒资的存储地址中看到。

**OutputMediaConfig 结构中的参数说明**

|属性名|类型|描述|
|:---|:---|:---|
|MediaURL|String|输出的媒资的 URL （当 OutputMediaTarget 的目标为 oss-object 时， 指定 OSS 文件的 HTTP URL 路径）, 如：http://xxx-bucket-name.oss-cn-shanghai.aliyuncs.com/OSS 跟调用的服务所在区域相同。|
|StorageLocation|String|当 OutputMediaTarget 的目标为 vod-media 时， 指定 storage location 来存储媒资到 VOD;storage location 是 VOD 中的文件存储位置， 不包含 http:// 的前缀， 如：outin-xxxxxx.oss-cn-shanghai.aliyuncs.com。|
|FileName|String|当 OutputMediaTarget 的目标为 vod-media 时，指定 fileName（包含文件后缀，不含路径）作为输出文件名。|
|Width|Integer|输出成品的宽。可以不填，默认值是多个素材的最大宽。|
|Height|Integer|输出成品的高。可以不填，默认值是多个素材的最大高。|
|Bitrate|Integer|输出成品的码率，单位为Kbps。可以不填，默认值是多个素材的最高码率。|
|VodTemplateGroupId|String|合成成片输出到vod，指定vod转码模板组。如不需要VOD转码，请填写 "VOD\\_NO_TRANSCODE"。|',
    ),
    'GetMediaProducingJob' => 
    array (
      'summary' => '获取剪辑合成作业的详细信息，包括剪辑合成任务的任务状态、时间线、模板及数据等。
本接口仅支持查询近一年的剪辑任务数据。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑合成作业Id',
            'type' => 'string',
            'required' => false,
            'example' => '****cdb3e74639973036bc84****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****83B7-7F87-4792-BFE9-63CD2137****',
              ),
              'MediaProducingJob' => 
              array (
                'description' => '云剪辑工程信息',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '剪辑合成作业Id',
                    'type' => 'string',
                    'example' => '****cdb3e74639973036bc84****',
                  ),
                  'ProjectId' => 
                  array (
                    'description' => '云剪辑工程Id',
                    'type' => 'string',
                    'example' => '****fddd7748b58bf1d47e95****',
                  ),
                  'MediaId' => 
                  array (
                    'description' => '输出成品的资源Id',
                    'type' => 'string',
                    'example' => '****0cc6ba49eab379332c5b****',
                  ),
                  'MediaURL' => 
                  array (
                    'description' => '输出成品的资源文件URL',
                    'type' => 'string',
                    'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4',
                  ),
                  'Timeline' => 
                  array (
                    'description' => '剪辑合成作业对应的时间线',
                    'type' => 'string',
                    'example' => '{"VideoTracks":[{"VideoTrackClips":[{"MediaId":"****4d7cf14dc7b83b0e801c****"},{"MediaId":"****4d7cf14dc7b83b0e801c****"}]}]}',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '剪辑合成作业对应的模板Id',
                    'type' => 'string',
                    'example' => '****6e76134d739cc3e85d3e****',
                  ),
                  'ClipsParam' => 
                  array (
                    'description' => '剪辑合成作业对应的模板参数',
                    'type' => 'string',
                    'example' => '{"VideoArray":["****05512043f49f697f7425****","****05512043f49f697f7425****","****05512043f49f697f7425****"]}',
                  ),
                  'Duration' => 
                  array (
                    'description' => '输出成品的时长

注：当合成任务成功且输出成品的类型为音视频时，该字段有值。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '30.500000',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '剪辑合成作业创建时间，格式为utc时间。

格式为："YYYY-MM-DD\'T\'hh:mm:ss\'Z\'"。',
                    'type' => 'string',
                    'example' => '2020-12-23T13:33:40Z',
                  ),
                  'CompleteTime' => 
                  array (
                    'description' => '剪辑合成作业完成时间，格式为utc时间。

格式为："YYYY-MM-DD\'T\'hh:mm:ss\'Z\'"。',
                    'type' => 'string',
                    'example' => '2020-12-23T13:33:52Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '剪辑合成作业修改时间，格式为utc时间。

格式为："YYYY-MM-DD\'T\'hh:mm:ss\'Z\'"。',
                    'type' => 'string',
                    'example' => '2020-12-23T13:33:49Z',
                  ),
                  'Status' => 
                  array (
                    'description' => '剪辑合成作业状态，取值可能为如下值：

\\-Init （初始状态）

\\-Queuing（排队中）

\\-Processing（处理中）

\\-Success（成功）

\\-Failed（失败）',
                    'type' => 'string',
                    'example' => 'Failed',
                  ),
                  'Code' => 
                  array (
                    'description' => '剪辑合成作业错误码

注：作业失败时关注该字段',
                    'type' => 'string',
                    'example' => 'ExceededMaximumValue',
                  ),
                  'Message' => 
                  array (
                    'description' => '剪辑合成作业错误信息

注：作业失败时关注该字段

',
                    'type' => 'string',
                    'example' => 'The specified "Width_Height" has exceeded maximum value.',
                  ),
                  'VodMediaId' => 
                  array (
                    'description' => '如果剪辑任务的成片输出到VOD，成片会注册成一个VOD的媒资，vodMediaId 即该媒资在VOD的媒资ID',
                    'type' => 'string',
                    'example' => '****332c5b0cc6ba49eab379****',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户自定义设置，JSON格式。',
                    'type' => 'string',
                    'example' => '{"NotifyAddress":"http://xx.xx.xxx","Key":"Valuexxx"}',
                  ),
                  'SubJobMaterials' => 
                  array (
                    'description' => '当该剪辑任务是批量智能一键成片的子任务，返回子任务用到的口播文案、标题等素材信息。',
                    'type' => 'string',
                    'example' => '{"Title": "标题", "SpeechText": "批量智能一键成片口播文案"}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter \\ is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'JobNotFound',
            'errorMessage' => 'The specified job not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****83B7-7F87-4792-BFE9-63CD2137****\\",\\n  \\"MediaProducingJob\\": {\\n    \\"JobId\\": \\"****cdb3e74639973036bc84****\\",\\n    \\"ProjectId\\": \\"****fddd7748b58bf1d47e95****\\",\\n    \\"MediaId\\": \\"****0cc6ba49eab379332c5b****\\",\\n    \\"MediaURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4\\",\\n    \\"Timeline\\": \\"{\\\\\\"VideoTracks\\\\\\":[{\\\\\\"VideoTrackClips\\\\\\":[{\\\\\\"MediaId\\\\\\":\\\\\\"****4d7cf14dc7b83b0e801c****\\\\\\"},{\\\\\\"MediaId\\\\\\":\\\\\\"****4d7cf14dc7b83b0e801c****\\\\\\"}]}]}\\",\\n    \\"TemplateId\\": \\"****6e76134d739cc3e85d3e****\\",\\n    \\"ClipsParam\\": \\"{\\\\\\"VideoArray\\\\\\":[\\\\\\"****05512043f49f697f7425****\\\\\\",\\\\\\"****05512043f49f697f7425****\\\\\\",\\\\\\"****05512043f49f697f7425****\\\\\\"]}\\",\\n    \\"Duration\\": 30.5,\\n    \\"CreateTime\\": \\"2020-12-23T13:33:40Z\\",\\n    \\"CompleteTime\\": \\"2020-12-23T13:33:52Z\\",\\n    \\"ModifiedTime\\": \\"2020-12-23T13:33:49Z\\",\\n    \\"Status\\": \\"Failed\\",\\n    \\"Code\\": \\"ExceededMaximumValue\\",\\n    \\"Message\\": \\"The specified \\\\\\"Width_Height\\\\\\" has exceeded maximum value.\\",\\n    \\"VodMediaId\\": \\"****332c5b0cc6ba49eab379****\\",\\n    \\"UserData\\": \\"{\\\\\\"NotifyAddress\\\\\\":\\\\\\"http://xx.xx.xxx\\\\\\",\\\\\\"Key\\\\\\":\\\\\\"Valuexxx\\\\\\"}\\",\\n    \\"SubJobMaterials\\": \\"{\\\\\\"Title\\\\\\": \\\\\\"标题\\\\\\", \\\\\\"SpeechText\\\\\\": \\\\\\"批量智能一键成片口播文案\\\\\\"}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetMediaProducingJobResponse>\\n    <RequestId>****83B7-7F87-4792-BFE9-63CD2137****</RequestId>\\n    <MediaProducingJob>\\n        <JobId>****cdb3e74639973036bc84****</JobId>\\n        <ProjectId>****fddd7748b58bf1d47e95****</ProjectId>\\n        <MediaId>****0cc6ba49eab379332c5b****</MediaId>\\n        <MediaURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4</MediaURL>\\n        <Timeline>{\\"VideoTracks\\":[{\\"VideoTrackClips\\":[{\\"MediaId\\":\\"****4d7cf14dc7b83b0e801c****\\"},{\\"MediaId\\":\\"****4d7cf14dc7b83b0e801c****\\"}]}]}</Timeline>\\n        <TemplateId>****6e76134d739cc3e85d3e****</TemplateId>\\n        <ClipsParam>{\\"VideoArray\\":[\\"****05512043f49f697f7425****\\",\\"****05512043f49f697f7425****\\",\\"****05512043f49f697f7425****\\"]}</ClipsParam>\\n        <Duration>30.5</Duration>\\n        <CreateTime>2020-12-23T13:33:40Z</CreateTime>\\n        <CompleteTime>2020-12-23T13:33:52Z</CompleteTime>\\n        <ModifiedTime>2020-12-23T13:33:49Z</ModifiedTime>\\n        <Status>Failed</Status>\\n        <Code>ExceededMaximumValue</Code>\\n        <Message>The specified \\"Width_Height\\" has exceeded maximum value.</Message>\\n    </MediaProducingJob>\\n</GetMediaProducingJobResponse>","errorExample":""}]',
      'title' => '查询剪辑合成作业',
    ),
    'SubmitLiveEditingJob' => 
    array (
      'summary' => '直播剪辑指将一个或多个直播流区间合成为成品。提交直播剪辑任务后，任务将进入后台排队，异步执行。提交后可以调用查询直播剪辑作业（GeLiveEditingJob ）接口根据 jobId 来查询作业状态。 也可调用获取媒资内容信息（GetMediaInfo）接口根据 MediaId 来查询生成媒资的信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Clips',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '剪辑片段列表，输出的成片由列表中的片段按顺序收尾拼接而成，JSON Array。

每一个片段都包含开始时间和结束时间。如果没有直播流参数，则以外层的直播流配置为准。开始和结束时间戳皆为UTC时间。参数详情请见下方 Clip 数据结构。',
            'type' => 'string',
            'required' => true,
            'example' => '[{\\"StartTime\\": \\" 2021-06-21T08:01:00Z\\",  \\"EndTime\\": \\" 2021-06-21T08:03:00Z\\" ,  "AppName": "app", "DomainName": "domain.com", "StreamName": "stream"},  {\\"StartTime\\": \\" 2021-06-21T08:05:00Z\\",  \\"EndTime\\": \\" 2021-06-21T08:09:00Z\\" }]',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '直播剪辑工程ID。若非空，读取project相关存储配置。 若为空，则以入参存储配置为准。',
            'type' => 'string',
            'required' => false,
            'example' => '****fddd7748b58bf1d47e95****',
          ),
        ),
        2 => 
        array (
          'name' => 'LiveStreamConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '直播流配置， JSON Object。需包含如下配置项：

- AppName：播流所属应用名称 

- DomainName：域名

- StreamName：直播流名',
            'type' => 'string',
            'required' => false,
            'example' => '{ "AppName": "app", "DomainName": "domain.com", "StreamName": "stream"  }',
          ),
        ),
        3 => 
        array (
          'name' => 'OutputMediaConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输出成品的目标配置，JSON Object。可以设置输出成品的在OSS 上的URL，或者VOD Bucket 中的存储位置。
- 输出到OSS时，输出目标的MediaURL必填。
- 输出到VOD时，StorageLocation和FileName两个参数必填。',
            'type' => 'string',
            'required' => false,
            'example' => '{ "MediaURL": "https://ice-auto-test.oss-cn-shanghai.aliyuncs.com/testfile.mp4" }, 或 { "StorageLocation": "bucket.oss-cn-shanghai.aliyuncs.com", "FileName": "output.mp4" }',
          ),
        ),
        4 => 
        array (
          'name' => 'MediaProduceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生成片段的合成配置，用JSON格式表示。其中，Mode为剪辑模式，取值：
- **AccurateFast**（默认值）：快速精剪，相较于Accurate模式合成速度更快。输出文件与源流分辨率一致，不支持指定输出成片宽高。
- **Accurate**：精确剪辑，可指定输出成片宽高。
- **Rough**：粗略剪辑，最小精度为一个TS分片，成片包含用户指定起止时间内所有分片，可指定输出成片宽高。
- **RoughFast**：快速粗剪，相较于Accurate模式合成速度更快，最小精度为一个TS分片，成片包含用户指定起止时间内所有分片。输出文件与源流分辨率一致，不支持指定输出成片宽高。',
            'type' => 'string',
            'required' => false,
            'example' => '{ "Mode": "AccurateFast"}',
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义设置，JSON Object，长度限制为512字节。',
            'type' => 'string',
            'required' => false,
            'example' => '{"key": "value"}',
          ),
        ),
        6 => 
        array (
          'name' => 'OutputMediaTarget',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输出成品的目标类型。取值：
- oss-object  阿里云oss bucket下的oss object
- vod-media  阿里云vod的媒资',
            'type' => 'string',
            'required' => false,
            'example' => 'oss-object',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****36-3C1E-4417-BDB2-1E034F****',
              ),
              'ProjectId' => 
              array (
                'description' => '直播剪辑工程ID。',
                'type' => 'string',
                'example' => '****fddd7748b58bf1d47e95****',
              ),
              'JobId' => 
              array (
                'description' => '直播剪辑任务ID。',
                'type' => 'string',
                'example' => '****d80e4e4044975745c14b****',
              ),
              'MediaId' => 
              array (
                'description' => '合成成片媒资ID。',
                'type' => 'string',
                'example' => '****c469e944b5a856828dc2****',
              ),
              'MediaURL' => 
              array (
                'description' => '合成成片地址。',
                'type' => 'string',
                'example' => 'http://test-bucket.cn-shanghai.aliyuncs.com/test.mp4',
              ),
              'VodMediaId' => 
              array (
                'description' => '如果视频输出的位置为vod时，返回vod媒资ID。',
                'type' => 'string',
                'example' => '****d7578s4h75ci945c14b****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****36-3C1E-4417-BDB2-1E034F****\\",\\n  \\"ProjectId\\": \\"****fddd7748b58bf1d47e95****\\",\\n  \\"JobId\\": \\"****d80e4e4044975745c14b****\\",\\n  \\"MediaId\\": \\"****c469e944b5a856828dc2****\\",\\n  \\"MediaURL\\": \\"http://test-bucket.cn-shanghai.aliyuncs.com/test.mp4\\",\\n  \\"VodMediaId\\": \\"****d7578s4h75ci945c14b****\\"\\n}","errorExample":""},{"type":"xml","example":"<SubmitLiveEditingJobResponse>\\n    <RequestId>****36-3C1E-4417-BDB2-1E034F****</RequestId>\\n    <ProjectId>****fddd7748b58bf1d47e95****</ProjectId>\\n    <JobId>****d80e4e4044975745c14b****</JobId>\\n    <MediaId>****c469e944b5a856828dc2****</MediaId>\\n    <MediaURL>http://test-bucket.cn-shanghai.aliyuncs.com/test.mp4</MediaURL>\\n</SubmitLiveEditingJobResponse>","errorExample":""}]',
      'title' => '提交直播剪辑任务',
      'description' => '当前支持对录制到OSS和VOD的直播流进行直播剪辑。多直播流混剪时，仅支持直播流都录制到OSS或直播流都录制到VOD。',
      'requestParamsDescription' => '### Clip 数据结构

| 属性名  | 类型      | 示例值      | 描述  | 是否必填
|-----------|--------|-------------|---------------|----------------|
| StartTime  |  String | 2021-06-21T08:01:00Z  |  截取片段的开始时间，格式为UTC时间戳 | 是|
| EndTime  |  String | 2021-06-21T08:05:00Z  |  截取片段的结束时间，格式为UTC时间戳 | 是|
|AppName   | String  |  app | 播流所属应用名，如果为空，以外层直播流配置为准  | 否|
|DomainName   | String  |  domain.com | 域名 ，如果为空，以外层直播流配置为准 | 否|
|StreamName   | String  |  stream | 直播流名，如果为空，以外层直播流配置为准  | 否|
|CoverTime   | String  |  2021-06-21T08:03:00Z |指定片段中的某一时间戳，作为成片的封面图，格式为UTC时间戳 。当多个clip 都设置CoverTime参数时，仅第一个生效，CoverTime 必须大于等于StartTime，小于等于Endtime。  | 否 |
|CoverUrl   | String  |   <ph>https://test.oss-cn-shanghai.aliyuncs.com<ph> | 自定义截图输出地址, OSS bucket 需与服务接入区域保持一致。仅支持自有OSS bucket，不支持VOD 托管bucket。  | 否 |
',
    ),
    'GetLiveEditingJob' => 
    array (
      'summary' => '获取剪辑合成作业的详细信息，具体包括剪辑合成任务的任务状态、时间线、模板及数据、输出成品资源ID、存储地址、时长、以及任务其他信息等。
本接口仅支持查询近一年的直播剪辑任务数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '直播剪辑JobId',
            'description' => '直播剪辑 Jobld',
            'type' => 'string',
            'required' => false,
            'example' => '****d80e4e4044975745c14b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****36-3C1E-4417-BDB2-1E034F****',
              ),
              'LiveEditingJob' => 
              array (
                'title' => '直播剪辑任务',
                'description' => '直播剪辑任务',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'title' => '直播剪辑任务ID',
                    'description' => '直播剪辑任务ID',
                    'type' => 'string',
                    'example' => '****cdb3e74639973036bc84****',
                  ),
                  'ProjectId' => 
                  array (
                    'title' => '直播剪辑工程ID',
                    'description' => '直播剪辑工程ID',
                    'type' => 'string',
                    'example' => '****fddd7748b58bf1d47e95****',
                  ),
                  'Status' => 
                  array (
                    'title' => '直播剪辑作业状态，取值可能为如下值：  -Init （初始状态）  -Queuing（排队中）  -Processing（处理中）  -Success（成功）  -Failed（失败）',
                    'description' => '直播剪辑作业状态，取值可能为如下值：  -Init （初始状态）  -Queuing（排队中）  -Processing（处理中）  -Success（成功）  -Failed（失败）',
                    'type' => 'string',
                    'example' => 'Success',
                  ),
                  'Clips' => 
                  array (
                    'title' => '剪辑片段列表',
                    'description' => '剪辑片段列表',
                    'type' => 'string',
                    'example' => '[{\\"StartTime\\": \\" 2021-06-21T08:01:00Z\\",  \\"EndTime\\": \\" 2021-06-21T08:03:00Z\\" }]',
                  ),
                  'UserData' => 
                  array (
                    'title' => '用户数据',
                    'description' => '用户数据',
                    'type' => 'string',
                    'example' => '{"key": "value\'}',
                  ),
                  'CreationTime' => 
                  array (
                    'title' => '直播剪辑作业创建时间，格式为utc时间。  格式为："2021-06-21T08:01:00Z"。',
                    'description' => '直播剪辑作业创建时间，格式为utc时间。',
                    'type' => 'string',
                    'example' => '2020-12-23T13:33:40Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '直播剪辑作业修改时间，格式为utc时间。  格式为："2021-06-21T08:01:00Z"。',
                    'description' => '直播剪辑作业修改时间，格式为utc时间。',
                    'type' => 'string',
                    'example' => '2020-12-23T13:33:49Z',
                  ),
                  'CompleteTime' => 
                  array (
                    'title' => '直播剪辑作业完成时间，格式为utc时间。  格式为："2021-06-21T08:01:00Z"。',
                    'description' => '直播剪辑作业完成时间，格式为utc时间。',
                    'type' => 'string',
                    'example' => '2020-12-23T13:33:52Z',
                  ),
                  'MediaId' => 
                  array (
                    'title' => '输出成品的资源Id',
                    'description' => '输出成品的资源Id',
                    'type' => 'string',
                    'example' => '****0cc6ba49eab379332c5b****',
                  ),
                  'MediaURL' => 
                  array (
                    'title' => '输出成品的资源文件URL',
                    'description' => '输出成品的资源文件URL',
                    'type' => 'string',
                    'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4',
                  ),
                  'Code' => 
                  array (
                    'title' => '剪辑合成作业错误码  注：作业失败时关注该字段',
                    'description' => '剪辑合成作业错误码 
注：作业失败时关注该字段',
                    'type' => 'string',
                    'example' => 'InvalidParameter',
                  ),
                  'Message' => 
                  array (
                    'title' => '剪辑合成作业错误信息  注：作业失败时关注该字段',
                    'description' => '剪辑合成作业错误信息 
注：作业失败时关注该字段',
                    'type' => 'string',
                    'example' => 'The specific parameter LiveStreamConfig is not valid.',
                  ),
                  'LiveStreamConfig' => 
                  array (
                    'title' => '直播剪辑配置',
                    'description' => '直播剪辑配置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AppName' => 
                      array (
                        'title' => '播流所属应用名称',
                        'description' => '播流所属应用名称',
                        'type' => 'string',
                        'example' => 'app',
                      ),
                      'DomainName' => 
                      array (
                        'title' => '播流所属域名',
                        'description' => '播流所属域名',
                        'type' => 'string',
                        'example' => 'domain.com',
                      ),
                      'StreamName' => 
                      array (
                        'title' => '播流所属流名',
                        'description' => '播流所属流名',
                        'type' => 'string',
                        'example' => 'streamName',
                      ),
                    ),
                  ),
                  'MediaProduceConfig' => 
                  array (
                    'title' => '直播剪辑合成配置',
                    'description' => '直播剪辑合成配置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Mode' => 
                      array (
                        'title' => '剪辑模式，默认Accurate',
                        'description' => '剪辑模式，默认Accurate',
                        'type' => 'string',
                        'example' => 'Accurate',
                      ),
                    ),
                  ),
                  'OutputMediaConfig' => 
                  array (
                    'title' => '输出成片的存储配置',
                    'description' => '输出成片的存储配置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MediaURL' => 
                      array (
                        'title' => '输出成片的文件地址',
                        'description' => '输出成片的文件地址',
                        'type' => 'string',
                        'example' => 'https://testice-testbucket.oss-cn-shanghai.aliyuncs.com/test.mp4',
                      ),
                      'StorageLocation' => 
                      array (
                        'title' => '当 OutputMediaTarget 的目标为 vod-media 时， 指定 storage location 来存储媒资到 VOD; storage location 是 VOD 中的文件存储位置， 不包含 http:// 的前缀， 如:  outin-xxxxxx.oss-cn-shanghai.aliyuncs.com',
                        'description' => '当 OutputMediaTarget 的目标为 vod-media 时， 指定 storage location 来存储媒资到 VOD; storage location 是 VOD 中的文件存储位置， 不包含 http:// 的前缀， 如：outin-xxxxxx.oss-cn-shanghai.aliyuncs.com',
                        'type' => 'string',
                        'example' => 'outin-xxxxxx.oss-cn-shanghai.aliyuncs.com',
                      ),
                      'FileName' => 
                      array (
                        'title' => '当 OutputMediaTarget 的目标为 vod-media 时，指定 fileName(包含文件后缀，不含路径）作为输出文件名',
                        'description' => '当 OutputMediaTarget 的目标为 vod-media 时，指定 fileName（包含文件后缀，不含路径）作为输出文件名',
                        'type' => 'string',
                        'example' => 'test.mp4',
                      ),
                      'Width' => 
                      array (
                        'title' => '输出成品的宽。可以不填，默认值是多个素材的最大宽',
                        'description' => '输出成品的宽。可以不填，默认值是多个素材的最大宽',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '640',
                      ),
                      'Height' => 
                      array (
                        'title' => '输出成品的高。可以不填，默认值是多个素材的最大高',
                        'description' => '输出成品的高。可以不填，默认值是多个素材的最大高',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '480',
                      ),
                      'Bitrate' => 
                      array (
                        'title' => '输出成品的码率，单位为Kbps。可以不填，默认值是多个素材的最高码率',
                        'description' => '输出成品的码率，单位为Kbps。可以不填，默认值是多个素材的最高码率',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1000',
                      ),
                      'VodTemplateGroupId' => 
                      array (
                        'title' => '合成成片输出到vod，指定vod转码模板组。如不需要VOD转码，请填写 "VOD_NO_TRANSCODE".',
                        'description' => '合成成片输出到vod，指定vod转码模板组。如不需要VOD转码，请填写 "VOD_NO_TRANSCODE".',
                        'type' => 'string',
                        'example' => 'VOD_NO_TRANSCODE',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****36-3C1E-4417-BDB2-1E034F****\\",\\n  \\"LiveEditingJob\\": {\\n    \\"JobId\\": \\"****cdb3e74639973036bc84****\\",\\n    \\"ProjectId\\": \\"****fddd7748b58bf1d47e95****\\",\\n    \\"Status\\": \\"Success\\",\\n    \\"Clips\\": \\"[{\\\\\\\\\\\\\\"StartTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\" 2021-06-21T08:01:00Z\\\\\\\\\\\\\\",  \\\\\\\\\\\\\\"EndTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\" 2021-06-21T08:03:00Z\\\\\\\\\\\\\\" }]\\",\\n    \\"UserData\\": \\"{\\\\\\"key\\\\\\": \\\\\\"value\'}\\",\\n    \\"CreationTime\\": \\"2020-12-23T13:33:40Z\\",\\n    \\"ModifiedTime\\": \\"2020-12-23T13:33:49Z\\",\\n    \\"CompleteTime\\": \\"2020-12-23T13:33:52Z\\",\\n    \\"MediaId\\": \\"****0cc6ba49eab379332c5b****\\",\\n    \\"MediaURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4\\",\\n    \\"Code\\": \\"InvalidParameter\\",\\n    \\"Message\\": \\"The specific parameter LiveStreamConfig is not valid.\\",\\n    \\"LiveStreamConfig\\": {\\n      \\"AppName\\": \\"app\\",\\n      \\"DomainName\\": \\"domain.com\\",\\n      \\"StreamName\\": \\"streamName\\"\\n    },\\n    \\"MediaProduceConfig\\": {\\n      \\"Mode\\": \\"Accurate\\"\\n    },\\n    \\"OutputMediaConfig\\": {\\n      \\"MediaURL\\": \\"https://testice-testbucket.oss-cn-shanghai.aliyuncs.com/test.mp4\\",\\n      \\"StorageLocation\\": \\"outin-xxxxxx.oss-cn-shanghai.aliyuncs.com\\",\\n      \\"FileName\\": \\"test.mp4\\",\\n      \\"Width\\": 640,\\n      \\"Height\\": 480,\\n      \\"Bitrate\\": 1000,\\n      \\"VodTemplateGroupId\\": \\"VOD_NO_TRANSCODE\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetLiveEditingJobResponse>\\n    <RequestId>****36-3C1E-4417-BDB2-1E034F****</RequestId>\\n    <LiveEditingJob>\\n        <JobId>****cdb3e74639973036bc84****</JobId>\\n        <ProjectId>****fddd7748b58bf1d47e95****</ProjectId>\\n        <Status>Success</Status>\\n        <Clips>[{\\\\\\"StartTime\\\\\\": \\\\\\" 2021-06-21T08:01:00Z\\\\\\",  \\\\\\"EndTime\\\\\\": \\\\\\" 2021-06-21T08:03:00Z\\\\\\" }]</Clips>\\n        <UserData>{\\"key\\": \\"value\'}</UserData>\\n        <CreationTime>2020-12-23T13:33:40Z</CreationTime>\\n        <ModifiedTime>2020-12-23T13:33:49Z</ModifiedTime>\\n        <CompleteTime>2020-12-23T13:33:52Z</CompleteTime>\\n        <MediaId>****0cc6ba49eab379332c5b****</MediaId>\\n        <MediaURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example2.mp4</MediaURL>\\n        <Code>InvalidParameter</Code>\\n        <Message>The specific parameter LiveStreamConfig is not valid.</Message>\\n        <LiveStreamConfig>\\n            <AppName>app</AppName>\\n            <DomainName>domain.com</DomainName>\\n            <StreamName>streamName</StreamName>\\n        </LiveStreamConfig>\\n        <MediaProduceConfig>\\n            <Mode>Accurate</Mode>\\n        </MediaProduceConfig>\\n        <OutputMediaConfig>\\n            <MediaURL>https://testice-testbucket.oss-cn-shanghai.aliyuncs.com/test.mp4</MediaURL>\\n            <StorageLocation>outin-xxxxxx.oss-cn-shanghai.aliyuncs.com</StorageLocation>\\n            <FileName>test.mp4</FileName>\\n            <Width>640</Width>\\n            <Height>480</Height>\\n            <Bitrate>1000</Bitrate>\\n            <VodTemplateGroupId>VOD_NO_TRANSCODE</VodTemplateGroupId>\\n        </OutputMediaConfig>\\n    </LiveEditingJob>\\n</GetLiveEditingJobResponse>","errorExample":""}]',
      'title' => '查询直播剪辑作业',
    ),
    'SubmitBatchMediaProducingJob' => 
    array (
      'summary' => '将多个视频、音频、图片素材进行智能混剪，一键批量合成视频。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调用方保证请求幂等性Client Token',
            'description' => '调用方保证请求幂等性Client Token',
            'type' => 'string',
            'required' => false,
            'example' => '****12e8864746a0a398****
',
          ),
        ),
        1 => 
        array (
          'name' => 'InputConfig',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '用户合成输出配置',
            'description' => '用户合成输出配置。具体结构定义，请参见[InputConfig](~~2692547#2faed1559549n~~)配置说明。',
            'type' => 'string',
            'required' => false,
            'example' => '{
  "MediaGroupArray": [{
      "GroupName": "MediaGroup1",
      "MediaArray": [
        "****9d46c886b45481030f6e****",
        "****6c886b4549d481030f6e****" ]
    }, {
      "GroupName": "MediaGroup2",
      "MediaArray": [
        "****d46c886810b454930f6e****",
        "****4549d886810b46c30f6e****" ]
  }],
  "TitleArray": [
      "回龙观盒马鲜生开业啦",
      "盒马鲜生开业啦" ],
  "SpeechTextArray": [
      "附近的商场新开了一家盒马鲜生，今天是第一天开业"
      "商场里的人不少，零食、酒水都比较便宜大家也快来看看呀" ]
}',
          ),
        ),
        2 => 
        array (
          'name' => 'EditingConfig',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '剪辑相关配置。具体结构定义，请参见[EditingConfig](~~2692547#1be9bba03b7qu~~)配置说明。',
            'type' => 'string',
            'required' => false,
            'example' => '{
  "MediaConfig": {
      "Volume": 0
  },
  "SpeechConfig": {
      "Volume": 1
  },
 "BackgroundMusicConfig": {
      "Volume": 0.3
  }
}',
          ),
        ),
        3 => 
        array (
          'name' => 'OutputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务来源',
            'description' => '输出配置。具体结构定义，请参见[OutputConfig](~~2692547#447b928fcbuoa~~)配置说明。',
            'type' => 'string',
            'required' => false,
            'example' => '{
  "MediaURL": "http://xxx.oss-cn-shanghai.aliyuncs.com/xxx_{index}.mp4",
  "Count": 20,
  "MaxDuration": 15,
  "Width": 1080,
  "Height": 1920,
  "Video": {"Crf": 27}
}',
          ),
        ),
        4 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户配置UserData',
            'description' => '用户业务配置、回调配置。具体结构定义，请参见[UserData配置说明](https://help.aliyun.com/document_detail/357745.html?spm=a2c4g.439285.0.i1#section-urj-v3f-0s1)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotifyAddress":"http://xx.xx.xxx"}或{"NotifyAddress":"https://xx.xx.xxx"}或{"NotifyAddress":"ice-callback-demo"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****36-3C1E-4417-BDB2-1E034F****',
              ),
              'JobId' => 
              array (
                'title' => '批量混剪任务jobId',
                'description' => '批量智能一键成片作业ID',
                'type' => 'string',
                'example' => '****d80e4e4044975745c14b****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****36-3C1E-4417-BDB2-1E034F****\\",\\n  \\"JobId\\": \\"****d80e4e4044975745c14b****\\"\\n}","type":"json"}]',
      'title' => '批量智能一键成片',
    ),
    'GetBatchMediaProducingJob' => 
    array (
      'summary' => '获取批量智能一键成片作业的详细信息，包括作业的输入参数、任务状态、合成的媒资ID及URL。本接口仅支持查询近一年的任务数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '207313',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceANRKXC',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SignatureNonce',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'SignatureVersion',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'SignatureMehtod',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'Signature',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'SignatureType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量智能一键成片作业ID',
            'type' => 'string',
            'required' => false,
            'example' => '****b4549d46c88681030f6e****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****36-3C1E-4417-BDB2-1E034F****',
              ),
              'EditingBatchJob' => 
              array (
                'description' => '批量智能一键成片任务信息',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '任务ID',
                    'type' => 'string',
                    'example' => '****b6b2750d4308892ac3330238****',
                  ),
                  'InputConfig' => 
                  array (
                    'description' => '用户合成输出配置。具体结构定义，请参见[InputConfig](~~2692547#2faed1559549n~~)配置说明。',
                    'type' => 'string',
                    'example' => '{
  "MediaGroupArray": [{
      "GroupName": "MediaGroup1",
      "MediaArray": [
        "****9d46c886b45481030f6e****",
        "****6c886b4549d481030f6e****" ]
    }, {
      "GroupName": "MediaGroup2",
      "MediaArray": [
        "****d46c886810b454930f6e****",
        "****4549d886810b46c30f6e****" ]
  }],
  "TitleArray": [
      "回龙观盒马鲜生开业啦",
      "盒马鲜生开业啦" ],
  "SpeechTextArray": [
      "附近的商场新开了一家盒马鲜生，今天是第一天开业"
      "商场里的人不少，零食、酒水都比较便宜大家也快来看看呀" ]
}',
                  ),
                  'EditingConfig' => 
                  array (
                    'description' => '剪辑相关配置。具体结构定义，请参见[EditingConfig](~~2692547#1be9bba03b7qu~~)配置说明。',
                    'type' => 'string',
                    'example' => '{
  "MediaConfig": {
      "Volume": 0
  },
  "SpeechConfig": {
      "Volume": 1
  },
 "BackgroundMusicConfig": {
      "Volume": 0.3
  }
}',
                  ),
                  'OutputConfig' => 
                  array (
                    'description' => '输出配置。具体结构定义，请参见[OutputConfig](~~2692547#447b928fcbuoa~~)配置说明。',
                    'type' => 'string',
                    'example' => '{
  "MediaURL": "http://xxx.oss-cn-shanghai.aliyuncs.com/xxx_{index}.mp4",
  "Count": 20,
  "MaxDuration": 15,
  "Width": 1080,
  "Height": 1920,
  "Video": {"Crf": 27}
}',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态。取值范围：

\\- Init：初始化

\\- Processing：处理中

\\- Finished: 处理完成',
                    'type' => 'string',
                    'example' => 'Finished',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户业务配置、回调配置。具体结构定义，请参见[UserData](https://help.aliyun.com/document_detail/357745.html?spm=a2c4g.439285.0.i1#section-urj-v3f-0s1)配置说明。',
                    'type' => 'string',
                    'example' => '{"NotifyAddress":"http://xx.xx.xxx"}',
                  ),
                  'Extend' => 
                  array (
                    'description' => '扩展信息。字段详情：

\\- ErrorCode: 主任务错误码

\\- ErrorMessage: 主任务错误信息',
                    'type' => 'string',
                    'example' => '{
	"ErrorCode": "InvalidMaterial.NotFound",
	"ErrorMessage": "The specified clips id not found:[\\"****30d0b5e871eebb2ff7f6c75a****\\"]"
}',
                  ),
                  'CreateTime' => 
                  array (
                    'type' => 'string',
                  ),
                  'ModifiedTime' => 
                  array (
                    'type' => 'string',
                  ),
                  'CompleteTime' => 
                  array (
                    'type' => 'string',
                  ),
                  'JobType' => 
                  array (
                    'type' => 'string',
                  ),
                  'SubJobList' => 
                  array (
                    'description' => '一键成片子任务列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '一键成片子任务信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'description' => '成片媒资ID。',
                          'type' => 'string',
                          'example' => '****1470b11171ee9d19e7e6c66a****',
                        ),
                        'JobId' => 
                        array (
                          'description' => '子任务 ID。',
                          'type' => 'string',
                          'example' => '****8e81933d44e3ae69e2f81485****',
                        ),
                        'MediaURL' => 
                        array (
                          'description' => '输出成片的文件地址',
                          'type' => 'string',
                          'example' => 'http:/xxx.oss-cn-shanghai.aliyuncs.com/xxx_0.mp4',
                        ),
                        'Status' => 
                        array (
                          'description' => '子任务状态。取值范围：

\\- Init：初始化

\\- Processing：处理中

\\- Success：成功

\\- Failed： 失败',
                          'type' => 'string',
                          'example' => 'Success',
                        ),
                        'ErrorCode' => 
                        array (
                          'description' => '失败时错误码。如果执行成功则不返回此参数。',
                          'type' => 'string',
                          'example' => 'InvalidMaterial.NotFound',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '失败时错误信息。如成功则不返回此参数。',
                          'type' => 'string',
                          'example' => 'The specified clips id not found:["****30d0b5e871eebb2ff7f6c75a****"]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****36-3C1E-4417-BDB2-1E034F****\\",\\n  \\"EditingBatchJob\\": {\\n    \\"JobId\\": \\"****b6b2750d4308892ac3330238****\\",\\n    \\"InputConfig\\": \\"{\\\\n  \\\\\\"MediaGroupArray\\\\\\": [{\\\\n      \\\\\\"GroupName\\\\\\": \\\\\\"MediaGroup1\\\\\\",\\\\n      \\\\\\"MediaArray\\\\\\": [\\\\n        \\\\\\"****9d46c886b45481030f6e****\\\\\\",\\\\n        \\\\\\"****6c886b4549d481030f6e****\\\\\\" ]\\\\n    }, {\\\\n      \\\\\\"GroupName\\\\\\": \\\\\\"MediaGroup2\\\\\\",\\\\n      \\\\\\"MediaArray\\\\\\": [\\\\n        \\\\\\"****d46c886810b454930f6e****\\\\\\",\\\\n        \\\\\\"****4549d886810b46c30f6e****\\\\\\" ]\\\\n  }],\\\\n  \\\\\\"TitleArray\\\\\\": [\\\\n      \\\\\\"回龙观盒马鲜生开业啦\\\\\\",\\\\n      \\\\\\"盒马鲜生开业啦\\\\\\" ],\\\\n  \\\\\\"SpeechTextArray\\\\\\": [\\\\n      \\\\\\"附近的商场新开了一家盒马鲜生，今天是第一天开业\\\\\\"\\\\n      \\\\\\"商场里的人不少，零食、酒水都比较便宜大家也快来看看呀\\\\\\" ]\\\\n}\\",\\n    \\"EditingConfig\\": \\"{\\\\n  \\\\\\"MediaConfig\\\\\\": {\\\\n      \\\\\\"Volume\\\\\\": 0\\\\n  },\\\\n  \\\\\\"SpeechConfig\\\\\\": {\\\\n      \\\\\\"Volume\\\\\\": 1\\\\n  },\\\\n \\\\\\"BackgroundMusicConfig\\\\\\": {\\\\n      \\\\\\"Volume\\\\\\": 0.3\\\\n  }\\\\n}\\",\\n    \\"OutputConfig\\": \\"{\\\\n  \\\\\\"MediaURL\\\\\\": \\\\\\"http://xxx.oss-cn-shanghai.aliyuncs.com/xxx_{index}.mp4\\\\\\",\\\\n  \\\\\\"Count\\\\\\": 20,\\\\n  \\\\\\"MaxDuration\\\\\\": 15,\\\\n  \\\\\\"Width\\\\\\": 1080,\\\\n  \\\\\\"Height\\\\\\": 1920,\\\\n  \\\\\\"Video\\\\\\": {\\\\\\"Crf\\\\\\": 27}\\\\n}\\",\\n    \\"Status\\": \\"Finished\\",\\n    \\"UserData\\": \\"{\\\\\\"NotifyAddress\\\\\\":\\\\\\"http://xx.xx.xxx\\\\\\"}\\",\\n    \\"Extend\\": \\"{\\\\n\\\\t\\\\\\"ErrorCode\\\\\\": \\\\\\"InvalidMaterial.NotFound\\\\\\",\\\\n\\\\t\\\\\\"ErrorMessage\\\\\\": \\\\\\"The specified clips id not found:[\\\\\\\\\\\\\\"****30d0b5e871eebb2ff7f6c75a****\\\\\\\\\\\\\\"]\\\\\\"\\\\n}\\",\\n    \\"CreateTime\\": \\"\\",\\n    \\"ModifiedTime\\": \\"\\",\\n    \\"CompleteTime\\": \\"\\",\\n    \\"JobType\\": \\"\\",\\n    \\"SubJobList\\": [\\n      {\\n        \\"MediaId\\": \\"****1470b11171ee9d19e7e6c66a****\\",\\n        \\"JobId\\": \\"****8e81933d44e3ae69e2f81485****\\",\\n        \\"MediaURL\\": \\"http:/xxx.oss-cn-shanghai.aliyuncs.com/xxx_0.mp4\\",\\n        \\"Status\\": \\"Success\\",\\n        \\"ErrorCode\\": \\"InvalidMaterial.NotFound\\",\\n        \\"ErrorMessage\\": \\"The specified clips id not found:[\\\\\\"****30d0b5e871eebb2ff7f6c75a****\\\\\\"]\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取批量智能一键成片任务信息',
    ),
    'AddTemplate' => 
    array (
      'summary' => '创建云剪辑模板。模板工厂是对剪辑合成时间线的一个封装，用户可以把常用的剪辑保存为模板，当有同样的需求出现时，只需要传入替换素材即可生产视频。调用AddTemplate接口创建模板，Config为模板描述，普通模板和高级模板Config有较大差异，参考下方使用文档。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '自定义模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => '模板名称',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型，取值范围：Timeline',
            'description' => '模板类型，目前支持：  
- Timeline：基于视频剪辑工程的Timeline（时间线内多个素材，多图层形式进行前后拼接）创建的模板，可实现图文转视频、图片相册、片头片尾、默认水印等效果。
- VETemplate：基于AE（Adobe After Effects）特效创建的模板，可实现复杂动效样式的高级媒体效果。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Timeline' => '普通模板',
              'VETemplate' => '高级模板',
            ),
            'example' => 'Timeline',
          ),
        ),
        2 => 
        array (
          'name' => 'Config',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '参见Timeline模板Config文档',
            'description' => '- 普通模板Config是基于云剪辑Timeline的封装，自定义模板Config会更加灵活。如果您有特殊需求，建议熟悉Config结构并自定义模板，详情请参见[普通模板Config详解](~~456193~~)。
- 更多模板Config示例，请参见[常见普通模板Config示例](~~451634~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '参见Timeline模板Config文档',
          ),
        ),
        3 => 
        array (
          'name' => 'CoverUrl',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板封面',
            'description' => '模板封面',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg',
          ),
        ),
        4 => 
        array (
          'name' => 'PreviewMedia',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '预览视频媒资id',
            'description' => '模板预览视频MediaId',
            'type' => 'string',
            'required' => false,
            'example' => '****01bf24bf41c78b2754cb3187****',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板状态',
            'description' => '模板状态，取值范围：
- Available
- Created
- Uploading
- Processing
- UploadFailed
- ProcessFailed',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'UploadFailed' => '上传失败',
              'ProcessFailed' => '高级模板分析失败',
              'Available' => '正常',
              'Uploading' => '上传中',
              'Created' => '已创建，还不能使用',
              'Processing' => '高级模板分析中',
            ),
            'example' => 'Available',
          ),
        ),
        6 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板创建来源，默认OpenAPI',
            'description' => '模板创建来源，取值范围：
- OpenAPI
- AliyunConsole
- WebSDK',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'AliyunConsole' => '通过阿里云控制台创建',
              'WebSDK' => '通过WebSDK创建',
              'OpenAPI' => '通过OpenAPI创建',
            ),
            'example' => 'OpenAPI',
          ),
        ),
        7 => 
        array (
          'name' => 'RelatedMediaids',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板相关素材，模板编辑器使用',
            'description' => '模板关联素材，普通模板编辑器使用',
            'type' => 'string',
            'required' => false,
            'example' => '{"video":["1805a0c6ca544fb395a06ca683619655"]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '****2876-6263-4B75-8F2C-CD0F7FCF****',
              ),
              'Template' => 
              array (
                'title' => '模板信息',
                'description' => '模板信息',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'title' => '模板Id',
                    'description' => '模板Id',
                    'type' => 'string',
                    'example' => '****01bf24bf41c78b2754cb3187****',
                  ),
                  'Name' => 
                  array (
                    'title' => '模板名称',
                    'description' => '模板名称',
                    'type' => 'string',
                    'example' => '模板名称',
                  ),
                  'Type' => 
                  array (
                    'title' => '模板类型',
                    'description' => '模板类型',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Timeline' => '普通模板',
                      'VETemplate' => '高级模板',
                    ),
                    'example' => 'Timeline',
                  ),
                  'Config' => 
                  array (
                    'title' => '参见Timeline模板Config文档',
                    'description' => '参见Timeline模板Config文档',
                    'type' => 'string',
                    'example' => '参见Config文档',
                  ),
                  'CoverUrl' => 
                  array (
                    'title' => '模板封面',
                    'description' => '模板封面',
                    'type' => 'string',
                    'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg',
                  ),
                  'PreviewMedia' => 
                  array (
                    'title' => '预览视频媒资id',
                    'description' => '预览视频媒资id',
                    'type' => 'string',
                    'example' => '****01bf24bf41c78b2754cb3187****',
                  ),
                  'Status' => 
                  array (
                    'title' => '模板状态',
                    'description' => '模板状态',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'UploadFailed' => '上传失败',
                      'ProcessFailed' => '高级模板分析失败',
                      'Available' => '正常',
                      'Uploading' => '上传中',
                      'Created' => '已创建，还不能使用',
                      'Processing' => '高级模板分析中',
                    ),
                    'example' => 'Available',
                  ),
                  'CreateSource' => 
                  array (
                    'title' => '模板创建来源',
                    'description' => '模板创建来源',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'AliyunConsole' => '通过阿里云控制台创建',
                      'WebSDK' => '通过WebSDK创建',
                      'OpenAPI' => '通过OpenAPI创建',
                    ),
                    'example' => 'OpenAPI',
                  ),
                  'ModifiedSource' => 
                  array (
                    'title' => '模板修改来源',
                    'description' => '模板修改来源',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'AliyunConsole' => '通过阿里云控制台创建',
                      'WebSDK' => '通过WebSDK创建',
                      'OpenAPI' => '通过OpenAPI创建',
                    ),
                    'example' => 'OpenAPI',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****2876-6263-4B75-8F2C-CD0F7FCF****\\",\\n  \\"Template\\": {\\n    \\"TemplateId\\": \\"****01bf24bf41c78b2754cb3187****\\",\\n    \\"Name\\": \\"模板名称\\",\\n    \\"Type\\": \\"Timeline\\",\\n    \\"Config\\": \\"参见Config文档\\",\\n    \\"CoverUrl\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg\\",\\n    \\"PreviewMedia\\": \\"****01bf24bf41c78b2754cb3187****\\",\\n    \\"Status\\": \\"Available\\",\\n    \\"CreateSource\\": \\"OpenAPI\\",\\n    \\"ModifiedSource\\": \\"OpenAPI\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AddTemplateResponse>\\n    <RequestId>****2876-6263-4B75-8F2C-CD0F7FCF****</RequestId>\\n    <Template>\\n        <TemplateId>****01bf24bf41c78b2754cb3187****</TemplateId>\\n        <Name>模板名称</Name>\\n        <Type>Timeline</Type>\\n        <Config>参见Config文档</Config>\\n        <CoverUrl>http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg</CoverUrl>\\n        <PreviewMedia>****01bf24bf41c78b2754cb3187****</PreviewMedia>\\n        <Status>Normal</Status>\\n        <CreateSource>OpenAPI</CreateSource>\\n        <ModifiedSource>OpenAPI</ModifiedSource>\\n    </Template>\\n</AddTemplateResponse>","errorExample":""}]',
      'title' => '创建模板',
      'description' => '- 使用普通模板，请参考：[普通模板快速入门](https://help.aliyun.com/document_detail/270942.html)
- 使用高级模板，请参考：[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)
- 高级模板创建后有个解析的时间，状态为Processing，此时模板不可用，当模板状态为Available方可使用。模板解析时间与模板文件大小有关，一般10s-5min。',
    ),
    'GetTemplate' => 
    array (
      'summary' => '根据模板ID获取模板信息。高级模板有解析过长，当类型为高级模板时，Status为Available时即可使用。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模板Id',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedMediaidFlag',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否返回模板关联素材，1返回，默认0，不返回',
            'description' => '相关媒体ID标记，默认值0，当值为1时返回模板关联素材，仅普通模板有效。',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回数据',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Template' => 
              array (
                'description' => '模板信息',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'title' => '模板ID',
                    'description' => '模板ID',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'Name' => 
                  array (
                    'title' => '模板名称',
                    'description' => '模板名称',
                    'type' => 'string',
                    'example' => '视频添加水印模板',
                  ),
                  'Type' => 
                  array (
                    'title' => '模板类型',
                    'description' => '模板类型，目前支持：
- Timeline
- VETemplate',
                    'type' => 'string',
                    'example' => 'Timeline',
                  ),
                  'Config' => 
                  array (
                    'title' => '模板配置',
                    'description' => '模板配置
- 普通模板配置，参考[Timeline模板配置详解](https://help.aliyun.com/document_detail/277430.html)
- 高级模板配置，参考[创建高级模板](https://help.aliyun.com/document_detail/291418.html#title-3tf-skt-eoi)',
                    'type' => 'string',
                    'example' => '参考Timeline模板配置详解',
                  ),
                  'PreviewMedia' => 
                  array (
                    'title' => '预览素材',
                    'description' => '预览素材',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'Status' => 
                  array (
                    'title' => '模板状态',
                    'description' => '模板状态，取值范围
- Available
- Created
- Uploading
- Processing
- UploadFailed
- ProcessFailed',
                    'type' => 'string',
                    'example' => 'Available',
                  ),
                  'CreateSource' => 
                  array (
                    'title' => '创建来源',
                    'description' => '创建来源，取值范围：
- AliyunConsole    
- OpenAPI
- WebSDK',
                    'type' => 'string',
                    'example' => 'OpenAPI',
                  ),
                  'ModifiedSource' => 
                  array (
                    'title' => '修改来源',
                    'description' => '修改来源，取值范围：
- AliyunConsole    
- OpenAPI
- WebSDK',
                    'type' => 'string',
                    'example' => 'OpenAPI',
                  ),
                  'PreviewMediaStatus' => 
                  array (
                    'title' => '预览素材状态',
                    'description' => '预览素材状态
- Init（初始状态：源文件未就绪）
- Preparing（源文件准备中：比如上传中或者剪辑合成中）
- PrepareFail（源文件准备失败：比如获取源文件信息失败）
- Normal（正常：源文件已就绪）',
                    'type' => 'string',
                    'example' => 'Normal',
                  ),
                  'CreationTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2020-12-26T04:11:10Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '修改时间',
                    'description' => '修改时间',
                    'type' => 'string',
                    'example' => '2020-12-26T04:11:10Z',
                  ),
                  'CoverURL' => 
                  array (
                    'title' => '封面URL',
                    'description' => '封面URL',
                    'type' => 'string',
                    'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg',
                  ),
                  'ClipsParam' => 
                  array (
                    'title' => '提交合成任务的ClipsParam参数',
                    'description' => '提交合成任务的ClipsParam参数模板，可把mediaId和text换成真实的参数来提交合成任务。使用方式参考：

- [普通模版创建及使用](https://help.aliyun.com/document_detail/328557.html)
- [高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)',
                    'type' => 'string',
                    'example' => '{"Media1":"mediaId","Text1":"text"}',
                  ),
                  'RelatedMediaids' => 
                  array (
                    'title' => '模板关联素材',
                    'description' => '模板关联素材，普通模板编辑器使用',
                    'type' => 'string',
                    'example' => '{"video":["******c04f1d4a06996144cc1a******"],"audio":["******c04f1d4a06996144cc1a******"],"image":["******c04f1d4a06996144cc1a******"]}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Template\\": {\\n    \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"Name\\": \\"视频添加水印模板\\",\\n    \\"Type\\": \\"Timeline\\",\\n    \\"Config\\": \\"参考Timeline模板配置详解\\",\\n    \\"PreviewMedia\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"Status\\": \\"Available\\",\\n    \\"CreateSource\\": \\"OpenAPI\\",\\n    \\"ModifiedSource\\": \\"OpenAPI\\",\\n    \\"PreviewMediaStatus\\": \\"Normal\\",\\n    \\"CreationTime\\": \\"2020-12-26T04:11:10Z\\",\\n    \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\",\\n    \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg\\",\\n    \\"ClipsParam\\": \\"{\\\\\\"Media1\\\\\\":\\\\\\"mediaId\\\\\\",\\\\\\"Text1\\\\\\":\\\\\\"text\\\\\\"}\\",\\n    \\"RelatedMediaids\\": \\"{\\\\\\"video\\\\\\":[\\\\\\"******c04f1d4a06996144cc1a******\\\\\\"],\\\\\\"audio\\\\\\":[\\\\\\"******c04f1d4a06996144cc1a******\\\\\\"],\\\\\\"image\\\\\\":[\\\\\\"******c04f1d4a06996144cc1a******\\\\\\"]}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetTemplateResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <Template>\\n        <TemplateId>****20b48fb04483915d4f2cd8ac****</TemplateId>\\n        <Name>视频添加水印模板</Name>\\n        <Type>Timeline</Type>\\n        <Config>参考Timeline模板配置详解</Config>\\n        <PreviewMedia>****20b48fb04483915d4f2cd8ac****</PreviewMedia>\\n        <Status>Available</Status>\\n        <CreateSource>OpenAPI</CreateSource>\\n        <ModifiedSource>OpenAPI</ModifiedSource>\\n        <PreviewMediaStatus>Normal</PreviewMediaStatus>\\n        <CreationTime>2020-12-26T04:11:10Z</CreationTime>\\n        <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n        <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg</CoverURL>\\n    </Template>\\n</GetTemplateResponse>","errorExample":""}]',
      'title' => '获取模板信息',
      'description' => '模板工厂是对剪辑合成时间线的一个封装，用户可以把常用的时间线定义成模板，当有同样的需求出现时，只需要传入关键参数及素材即可生产视频。
- 使用普通模板，请参考：[普通模板快速入门](https://help.aliyun.com/document_detail/270942.html)
- 使用高级模板，请参考：[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)',
    ),
    'UpdateTemplate' => 
    array (
      'summary' => '调用UpdateTemplate接口修改云剪辑模板，支持修改模板标题、模板配置等信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '云剪辑模板ID。可通过[智能媒体服务控制台](https://ice.console.aliyun.com/production/template/list/common)或[创建模板](~~441161~~)的返回参数中获取。',
            'type' => 'string',
            'required' => false,
            'example' => '23923ec3318f4c359e42e1e5b296****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '云剪辑模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => '云剪辑模板1',
          ),
        ),
        2 => 
        array (
          'name' => 'Config',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '参见模板Config文档',
            'description' => '模板配置。详细说明请参见[普通模板Config详解](~~456193~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{
    "VideoTracks": [
        {
            "VideoTrackClips": [
                {
                    "Sys_Type" : "ArrayItems",
                    "Sys_ArrayObject" : "$VideoArray",
                    "Sys_Template" : {
                        "MediaId" : "$MediaId"
                    }
                }
            ]
        }
    ]
}',
          ),
        ),
        3 => 
        array (
          'name' => 'CoverUrl',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板封面',
            'description' => '模板封面地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg',
          ),
        ),
        4 => 
        array (
          'name' => 'PreviewMedia',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '预览视频媒资id',
            'description' => '预览视频媒资ID。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae320b48fb04483915d4f2cd8ac****',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板状态',
            'description' => '模板状态，取值范围：
- Available：正常。
- Created：已创建，还不能使用。
- Uploading：上传中。
- Processing：高级模板分析中。
- UploadFailed：上传失败。
- ProcessFailed：高级模板分析失败。

> 高级模板创建后有解析时间，状态为Processing，此时模板不可用，当模板状态为Available方可使用。模板解析时间与模板文件大小有关，一般10s-5min。',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        6 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '修改来源，默认OpenAPI',
            'description' => '修改来源，默认OpenAPI，取值范围：
- AliyunConsole：通过阿里云控制台创建。
- OpenAPI：通过OpenAPI创建。
- WebSDK：通过WebSDK创建。',
            'type' => 'string',
            'required' => false,
            'example' => 'OpenAPI',
          ),
        ),
        7 => 
        array (
          'name' => 'RelatedMediaids',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板相关素材，模板编辑器使用',
            'description' => '模板关联素材，普通模板编辑器使用。',
            'type' => 'string',
            'required' => false,
            'example' => '{"video":["f64c6acc840247edb6b12f575c66****","9675dcf040ba4525bb037c29d156****"],"audio":["62a54019d9114009a5ae9bcfd70b****"],"image":["743ffbeb7e004c758cdc1fb34c04****"]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F8D475A5-F2EC-5755-ABD8-22D5561C****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F8D475A5-F2EC-5755-ABD8-22D5561C****\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTemplateResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n</UpdateTemplateResponse>","errorExample":""}]',
      'title' => '修改模板',
      'description' => '- 使用普通模板，请参考：[普通模板快速入门](https://help.aliyun.com/document_detail/270942.html)。
- 使用高级模板，请参考：[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)。',
    ),
    'DeleteTemplate' => 
    array (
      'summary' => '删除模板。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateIds',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板id，多个id用英文逗号隔开',
            'description' => '需要删除的模板ID，多个ID用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****,****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTemplateResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n</DeleteTemplateResponse>","errorExample":""}]',
      'title' => '删除模板',
      'description' => '模板工厂是对剪辑合成时间线的一个封装，用户可以把常用的时间线定义成模板，当有同样的需求出现时，只需要传入关键参数及素材即可生产视频。
- 使用普通模板，请参考：[普通模板快速入门](https://help.aliyun.com/document_detail/270942.html)
- 使用高级模板，请参考：[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)',
    ),
    'ListTemplates' => 
    array (
      'summary' => '列出符合条件的模板，支持根据模板状态、创建来源等信息查询。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1。',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'description' => '分页大小，每页显示条数。默认值为20，最大值为100。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板类型',
            'description' => '模板类型。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Timeline' => 'Timeline',
              'VETemplate' => 'VETemplate',
            ),
            'example' => 'Timeline',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板状态',
            'description' => '模板状态。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'UploadFailed' => '上传失败',
              'ProcessFailed' => '高级模板分析失败',
              'Available' => '正常',
              'Uploading' => '上传中',
              'Created' => '已创建，还不能使用',
              'Processing' => '高级模板分析中',
            ),
            'example' => 'Available',
          ),
        ),
        4 => 
        array (
          'name' => 'CreateSource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '创建来源',
            'description' => '创建来源。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'AliyunConsole' => '通过阿里云控制台创建',
              'WebSDK' => '通过WebSDK创建',
              'OpenAPI' => '通过OpenAPI创建',
            ),
            'example' => 'OpenAPI',
          ),
        ),
        5 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '搜索关键词，可以根据模板id和title搜索',
            'description' => '搜索关键词，可以根据模板ID和title搜索。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        6 => 
        array (
          'name' => 'SortType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序参数，默认根据创建时间倒序',
            'description' => '排序参数，默认根据创建时间倒序。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'CreationTime:ASC' => '按照创建时间正序',
              'CreationTime:Desc' => '按照创建时间倒序',
            ),
            'example' => 'CreationTime:Desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'TotalCount' => 
              array (
                'title' => '本次请求条件下的数据总量。',
                'description' => '本次请求条件下的数据总量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Templates' => 
              array (
                'description' => '模板列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '模板信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TemplateId' => 
                    array (
                      'title' => '模板ID',
                      'description' => '模板ID。',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'Name' => 
                    array (
                      'title' => '模板名称',
                      'description' => '模板名称。',
                      'type' => 'string',
                      'example' => '云剪辑模板',
                    ),
                    'Type' => 
                    array (
                      'title' => '模板类型',
                      'description' => '模板类型。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Timeline' => '普通模板',
                        'VETemplate' => '高级模板',
                      ),
                      'example' => 'Timeline',
                    ),
                    'Config' => 
                    array (
                      'title' => '模板配置',
                      'description' => '模板配置。',
                      'type' => 'string',
                      'example' => '参考Timeline模板配置详解',
                    ),
                    'PreviewMedia' => 
                    array (
                      'title' => '预览素材',
                      'description' => '预览素材。',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'Status' => 
                    array (
                      'title' => '模板状态',
                      'description' => '模板状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'UploadFailed' => '上传失败',
                        'ProcessFailed' => '高级模板分析失败',
                        'Available' => '正常',
                        'Uploading' => '上传中',
                        'Created' => '已创建，还不能使用',
                        'Processing' => '高级模板分析中',
                      ),
                      'example' => 'Available',
                    ),
                    'CreateSource' => 
                    array (
                      'title' => '创建来源',
                      'description' => '创建来源。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'AliyunConsole' => '通过阿里云控制台创建',
                        'WebSDK' => '通过WebSDK创建',
                        'OpenAPI' => '通过OpenAPI创建',
                      ),
                      'example' => 'OpenAPI',
                    ),
                    'ModifiedSource' => 
                    array (
                      'title' => '修改来源',
                      'description' => '修改来源。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'AliyunConsole' => '通过阿里云控制台创建',
                        'WebSDK' => '通过WebSDK创建',
                        'OpenAPI' => '通过OpenAPI创建',
                      ),
                      'example' => 'OpenAPI',
                    ),
                    'PreviewMediaStatus' => 
                    array (
                      'title' => '预览素材状态',
                      'description' => '预览素材状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'PrepareFail' => '媒资分析失败',
                        'Init' => '媒资初始化状态',
                        'Normal' => '媒资正常',
                        'Preparing' => '媒资分析中',
                      ),
                      'example' => 'Normal',
                    ),
                    'CreationTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2020-12-26T04:11:10Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间。',
                      'type' => 'string',
                      'example' => '2020-12-26T04:11:10Z',
                    ),
                    'CoverURL' => 
                    array (
                      'title' => '封面URL',
                      'description' => '封面URL。',
                      'type' => 'string',
                      'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg',
                    ),
                    'ClipsParam' => 
                    array (
                      'title' => 'ClipsParam',
                      'description' => '剪辑参数。',
                      'type' => 'string',
                      'example' => '{"Media1":"mediaId","Text1":"text"}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"TotalCount\\": 100,\\n  \\"Templates\\": [\\n    {\\n      \\"TemplateId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"Name\\": \\"云剪辑模板\\",\\n      \\"Type\\": \\"Timeline\\",\\n      \\"Config\\": \\"参考Timeline模板配置详解\\",\\n      \\"PreviewMedia\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"Status\\": \\"Available\\",\\n      \\"CreateSource\\": \\"OpenAPI\\",\\n      \\"ModifiedSource\\": \\"OpenAPI\\",\\n      \\"PreviewMediaStatus\\": \\"Normal\\",\\n      \\"CreationTime\\": \\"2020-12-26T04:11:10Z\\",\\n      \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\",\\n      \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg\\",\\n      \\"ClipsParam\\": \\"{\\\\\\"Media1\\\\\\":\\\\\\"mediaId\\\\\\",\\\\\\"Text1\\\\\\":\\\\\\"text\\\\\\"}\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTemplatesResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <TotalCount>100</TotalCount>\\n    <Templates>\\n        <TemplateId>****20b48fb04483915d4f2cd8ac****</TemplateId>\\n        <Name>视频添加水印模板</Name>\\n        <Type>Timeline</Type>\\n        <Config>参考Timeline模板配置详解</Config>\\n        <PreviewMedia>****20b48fb04483915d4f2cd8ac****</PreviewMedia>\\n        <Status>Available</Status>\\n        <CreateSource>OpenAPI</CreateSource>\\n        <ModifiedSource>OpenAPI</ModifiedSource>\\n        <PreviewMediaStatus>Normal</PreviewMediaStatus>\\n        <CreationTime>2020-12-26T04:11:10Z</CreationTime>\\n        <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n        <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/cover.jpg</CoverURL>\\n    </Templates>\\n</ListTemplatesResponse>","errorExample":""}]',
      'title' => '列出符合条件的模板',
      'description' => '模板工厂是对剪辑合成时间线的一个封装，用户可以把常用的时间线定义成模板，当有同样的需求出现时，只需要传入关键参数及素材即可生产视频。
- 使用普通模板，请参考：[普通模板快速入门](https://help.aliyun.com/document_detail/270942.html)
- 使用高级模板，请参考：[高级模板创建及使用](https://help.aliyun.com/document_detail/291418.html)',
    ),
    'GetTemplateMaterials' => 
    array (
      'summary' => '返回高级模板包中的素材地址，供高级模板编辑器使用，素材链接30分钟过期。FileList为所需素材数组，不填则默认返回全部素材地址，最多返回400个。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板Id',
            'description' => '模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'FileList',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '所需文件列表',
            'description' => '所需文件列表。',
            'type' => 'string',
            'required' => false,
            'example' => '["music.mp3","config.json","assets/1.jpg"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MaterialUrls' => 
              array (
                'title' => '关联素材地址',
                'description' => '关联素材地址。',
                'type' => 'string',
                'example' => '{"music.mp3":"https://bucket.oss-cn-shanghai.aliyuncs.com/music.mp3?sign=xxx","config.json":"https://bucket.oss-cn-shanghai.aliyuncs.com/config.json?sign=xxx","assets/1.jpg":"https://bucket.oss-cn-shanghai.aliyuncs.com/assets/1.jpg?sign=xxx"}',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MaterialUrls\\": \\"{\\\\\\"music.mp3\\\\\\":\\\\\\"https://bucket.oss-cn-shanghai.aliyuncs.com/music.mp3?sign=xxx\\\\\\",\\\\\\"config.json\\\\\\":\\\\\\"https://bucket.oss-cn-shanghai.aliyuncs.com/config.json?sign=xxx\\\\\\",\\\\\\"assets/1.jpg\\\\\\":\\\\\\"https://bucket.oss-cn-shanghai.aliyuncs.com/assets/1.jpg?sign=xxx\\\\\\"}\\"\\n}","errorExample":""},{"type":"xml","example":"<GetTemplateMaterialsResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <MaterialUrls>{\\"music.mp3\\":\\"https://bucket.oss-cn-shanghai.aliyuncs.com/music.mp3?sign=xxx\\",\\"config.json\\":\\"https://bucket.oss-cn-shanghai.aliyuncs.com/config.json?sign=xxx\\",\\"assets/1.jpg\\":\\"https://bucket.oss-cn-shanghai.aliyuncs.com/assets/1.jpg?sign=xxx\\"}</MaterialUrls>\\n</GetTemplateMaterialsResponse>","errorExample":""}]',
      'title' => '获取模板素材地址',
    ),
    'GetTemplateParams' => 
    array (
      'summary' => '获取模板可替换素材参数信息，包括参数名称、素材默认值、素材封面。当前仅支持高级模板。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '模板ID',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '****2876-6263-4B75-8F2C-CD0F7FCF****',
              ),
              'TemplateId' => 
              array (
                'description' => '模板Id',
                'type' => 'string',
                'example' => '******419c8741c1b4325f035b******',
              ),
              'ParamList' => 
              array (
                'description' => '参数列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '模板参数',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'title' => '模板ID',
                      'description' => '参数名称',
                      'type' => 'string',
                      'example' => 'video1',
                    ),
                    'Type' => 
                    array (
                      'description' => '素材类型',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Video' => '视频',
                        'Text' => '字幕',
                        'Image' => '图片',
                      ),
                      'example' => 'Image',
                    ),
                    'CoverUrl' => 
                    array (
                      'description' => '原始素材封面',
                      'type' => 'string',
                      'example' => 'https://ice-materials-***.alicdn.com/***/********20221****.jpg',
                    ),
                    'MediaUrl' => 
                    array (
                      'description' => '原始素材地址',
                      'type' => 'string',
                      'example' => 'https://ice-materials-***.alicdn.com/***/********2022111618012453120c2a81*******.mp4',
                    ),
                    'Content' => 
                    array (
                      'description' => '原始字幕内容',
                      'type' => 'string',
                      'example' => '字幕测试',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****2876-6263-4B75-8F2C-CD0F7FCF****\\",\\n  \\"TemplateId\\": \\"******419c8741c1b4325f035b******\\",\\n  \\"ParamList\\": [\\n    {\\n      \\"Key\\": \\"video1\\",\\n      \\"Type\\": \\"Image\\",\\n      \\"CoverUrl\\": \\"https://ice-materials-***.alicdn.com/***/********20221****.jpg\\",\\n      \\"MediaUrl\\": \\"https://ice-materials-***.alicdn.com/***/********2022111618012453120c2a81*******.mp4\\",\\n      \\"Content\\": \\"字幕测试\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取模板参数信息',
    ),
    'CreateAvatarTrainingJob' => 
    array (
      'summary' => '本接口用于创建数字人训练任务，配置数字人基础信息与训练所需要的素材信息等。
注意：本接口仅用于初始化训练任务相关信息，并不会提交训练，正式提交训练需调用 SubmitAvatarTrainingJob 接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AvatarName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 数字人名称
- 不多于 7 个字符',
            'type' => 'string',
            'required' => true,
            'example' => '小数',
            'maxLength' => 7,
          ),
        ),
        1 => 
        array (
          'name' => 'AvatarDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 数字人描述
- 不多于 1000 个字',
            'type' => 'string',
            'required' => false,
            'example' => '这是一个数字人，用于某某场景。',
            'maxLength' => 1027,
          ),
        ),
        2 => 
        array (
          'name' => 'AvatarType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数字人类型',
            'type' => 'string',
            'required' => false,
            'example' => '2DAvatar',
          ),
        ),
        3 => 
        array (
          'name' => 'Thumbnail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 缩略图 URL
- 训练成功后会将缩略图上传到这个地址中
- 必须是用户下合法的 OSS 公网 URL
- 不多于 512 个字符',
            'type' => 'string',
            'required' => false,
            'example' => 'https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png',
            'maxLength' => 512,
          ),
        ),
        4 => 
        array (
          'name' => 'Portrait',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 头像图片的媒资 Id
- 长度为 32 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '****571c704445f9a0ee011406c2****',
            'maxLength' => 32,
            'minLength' => 32,
          ),
        ),
        5 => 
        array (
          'name' => 'Video',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 训练视频媒资 ID
- 长度为 32 个字符
- 支持 mp4，mov，webm 格式
- 素材时长需在 5 分钟到 15 分钟内
- 素材分辨率需为 1920 * 1080 或 1080 * 1920',
            'type' => 'string',
            'required' => false,
            'example' => '****571c704445f9a0ee011406c2****',
            'maxLength' => 32,
            'minLength' => 32,
          ),
        ),
        6 => 
        array (
          'name' => 'Transparent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 训练视频是否支持透明通道
><notice>请严格确认当前设置与提交训练视频情况一致，否则合成数字人可能会异常></notice>',
            'type' => 'boolean',
            'required' => false,
            'example' => 'True',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '数字人训练任务 Id',
                    'type' => 'string',
                    'example' => '****d718e2ff4f018ccf419a7b71****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****d718e2ff4f018ccf419a7b71****\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建和初始化数字人训练任务',
    ),
    'UpdateAvatarTrainingJob' => 
    array (
      'summary' => '调用此接口能够修改数字人训练任务的信息，包括：
1. 修改基本信息；
2. 在训练失败后，更新 Video、Transparent 等信息后重新进行训练。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数字人训练任务 ID',
            'type' => 'string',
            'required' => true,
            'example' => '****cdb3e74639973036bc84****',
          ),
        ),
        1 => 
        array (
          'name' => 'AvatarName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 数字人名称
- 不多于 7 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '小数',
            'maxLength' => 7,
          ),
        ),
        2 => 
        array (
          'name' => 'AvatarDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 数字人描述
- 不多于 1000 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '这是一个数字人，用于某某场景。',
            'maxLength' => 1024,
          ),
        ),
        3 => 
        array (
          'name' => 'Thumbnail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 缩略图 URL
- 训练成功后会将缩略图上传到本地址中
- 必须是用户下合法的 OSS 公网 URL
- 不多于 512 个字符
- 训练成功后不允许更新',
            'type' => 'string',
            'required' => false,
            'example' => 'https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png',
            'maxLength' => 512,
          ),
        ),
        4 => 
        array (
          'name' => 'Portrait',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 头像图片媒资 ID
- 长度为 32 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '****571c704445f9a0ee011406c2****',
            'maxLength' => 32,
            'minLength' => 32,
          ),
        ),
        5 => 
        array (
          'name' => 'Video',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 训练视频媒资 ID
- 长度为 32 个字符
- 支持 mp4，mov，webm 格式
- 素材时长需在 5 分钟到 15 分钟内
- 素材分辨率需为 1920 * 1080 或 1080 * 1920',
            'type' => 'string',
            'required' => false,
            'example' => '****571c704445f9a0ee011406c2****',
            'maxLength' => 32,
            'minLength' => 32,
          ),
        ),
        6 => 
        array (
          'name' => 'Transparent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 用于标识传入的视频是否支持透明通道
- 仅允许处于「初始化」或「训练失败」状态下的任务修改本字段
><notice>请严格确认当前设置与提交训练视频情况一致，否则合成数字人可能会异常></notice>',
            'type' => 'boolean',
            'required' => false,
            'example' => 'True',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功：
- true：调用成功
- false：调用失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '数字人训练任务 ID',
                    'type' => 'string',
                    'example' => '****d718e2ff4f018ccf419a7b71****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****d718e2ff4f018ccf419a7b71****\\"\\n  }\\n}","type":"json"}]',
      'title' => '更新数字人训练任务信息',
    ),
    'SubmitAvatarTrainingJob' => 
    array (
      'summary' => '调用此接口来正式提交数字人训练任务：
1. 首次提交训练；
2. 在训练失败后重新提交训练。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数字人任务 ID',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '*****ACB-44F2-5F2D-88D7-1283E70*****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '数字人任务 ID',
                    'type' => 'string',
                    'example' => '****29faef8144638ba42eb8e037****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"*****ACB-44F2-5F2D-88D7-1283E70*****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****29faef8144638ba42eb8e037****\\"\\n  }\\n}","type":"json"}]',
      'title' => '提交数字人训练任务',
    ),
    'GetAvatarTrainingJob' => 
    array (
      'summary' => '本接口用于查询单个数字人任务的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数字人训练任务 ID',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AvatarTrainingJob' => 
                  array (
                    'description' => '数字人训练任务',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'JobId' => 
                      array (
                        'description' => '数字人任务 ID',
                        'type' => 'string',
                        'example' => '****55d86f7f4587943ce7734d6b****',
                      ),
                      'AvatarId' => 
                      array (
                        'description' => '数字人 ID',
                        'type' => 'string',
                        'example' => 'Avatar-XXXX',
                      ),
                      'AvatarName' => 
                      array (
                        'description' => '数字人名称',
                        'type' => 'string',
                        'example' => '小数',
                      ),
                      'AvatarDescription' => 
                      array (
                        'description' => '数字人描述',
                        'type' => 'string',
                        'example' => '这是一个数字人，用于某某场景。',
                      ),
                      'AvatarType' => 
                      array (
                        'description' => '数字人类型',
                        'type' => 'string',
                        'example' => '2DAvatar',
                      ),
                      'Status' => 
                      array (
                        'description' => '- 数字人训练任务状态
- 取值范围：Init（初始化、草稿）、Queuing（排队中）、Training（训练中）、Success（训练成功）、Fail（训练失败）',
                        'type' => 'string',
                        'example' => 'Success
',
                      ),
                      'Message' => 
                      array (
                        'description' => '状态描述信息',
                        'type' => 'string',
                        'example' => '训练成功',
                      ),
                      'Thumbnail' => 
                      array (
                        'description' => '缩略图 URL',
                        'type' => 'string',
                        'example' => 'https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png',
                      ),
                      'Portrait' => 
                      array (
                        'description' => '头像图片媒资 ID',
                        'type' => 'string',
                        'example' => '****571c704445f9a0ee011406c2****',
                      ),
                      'Video' => 
                      array (
                        'description' => '训练视频媒资 ID',
                        'type' => 'string',
                        'example' => '****571c704445f9a0ee011406c2****',
                      ),
                      'Transparent' => 
                      array (
                        'description' => '用于标识传入的视频是否支持透明通道',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'FirstTrainingTime' => 
                      array (
                        'description' => '- 首次发起训练时间
- 格式为 utc 时间',
                        'type' => 'string',
                        'example' => '2020-12-23T13:33:40Z',
                      ),
                      'LastTrainingTime' => 
                      array (
                        'description' => '- 最近一次训练时间
- 格式为 utc 时间',
                        'type' => 'string',
                        'example' => '2020-12-23T13:33:40Z',
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否调用成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Data\\": {\\n    \\"AvatarTrainingJob\\": {\\n      \\"JobId\\": \\"****55d86f7f4587943ce7734d6b****\\",\\n      \\"AvatarId\\": \\"Avatar-XXXX\\",\\n      \\"AvatarName\\": \\"小数\\",\\n      \\"AvatarDescription\\": \\"这是一个数字人，用于某某场景。\\",\\n      \\"AvatarType\\": \\"2DAvatar\\",\\n      \\"Status\\": \\"Success\\\\n\\",\\n      \\"Message\\": \\"训练成功\\",\\n      \\"Thumbnail\\": \\"https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png\\",\\n      \\"Portrait\\": \\"****571c704445f9a0ee011406c2****\\",\\n      \\"Video\\": \\"****571c704445f9a0ee011406c2****\\",\\n      \\"Transparent\\": true,\\n      \\"FirstTrainingTime\\": \\"2020-12-23T13:33:40Z\\",\\n      \\"LastTrainingTime\\": \\"2020-12-23T13:33:40Z\\"\\n    }\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询数字人训练任务的详细信息',
    ),
    'DeleteAvatarTrainingJob' => 
    array (
      'summary' => '调用本接口可以删除处于「初始化（草稿）」、「训练失败」状态下的任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数字人训练任务 ID',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '是否请求成功。取值：
- true： 成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '数字人训练任务 ID',
                    'type' => 'string',
                    'example' => '****d718e2ff4f018ccf419a7b71****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****d718e2ff4f018ccf419a7b71****\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除数字人训练任务',
    ),
    'ListAvatarTrainingJobs' => 
    array (
      'summary' => '调用本接口可以查询您名下的数字人训练任务信息列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '- 分页页码
- 默认值：1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 分页页面大小
- 默认值：10
- 最大值：100',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 任务状态
- 取值范围：Init（初始化、草稿）、Queuing（排队中）、Training（训练中）、Success（训练成功）、Fail（训练失败）',
            'type' => 'string',
            'required' => false,
            'example' => 'Success',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AvatarTrainingJobList' => 
                  array (
                    'description' => '数字人训练任务列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JobId' => 
                        array (
                          'description' => '数字人训练任务 ID',
                          'type' => 'string',
                          'example' => '*****aded114489ea02e0addf93*****',
                        ),
                        'AvatarId' => 
                        array (
                          'description' => '数字人 ID',
                          'type' => 'string',
                          'example' => 'Avatar-XXX',
                        ),
                        'AvatarName' => 
                        array (
                          'description' => '数字人名称',
                          'type' => 'string',
                          'example' => '小数',
                        ),
                        'AvatarDescription' => 
                        array (
                          'description' => '数字人描述',
                          'type' => 'string',
                          'example' => '这是一个数字人，用于某某场景。',
                        ),
                        'AvatarType' => 
                        array (
                          'description' => '数字人类型',
                          'type' => 'string',
                          'example' => '2DAvatar',
                        ),
                        'Status' => 
                        array (
                          'description' => '数字人训练任务状态',
                          'type' => 'string',
                          'example' => 'Success',
                        ),
                        'Message' => 
                        array (
                          'description' => '状态描述信息',
                          'type' => 'string',
                          'example' => '训练成功',
                        ),
                        'Portrait' => 
                        array (
                          'description' => '头像图片媒资 ID',
                          'type' => 'string',
                          'example' => '*****aded114489ea02e0addf93*****',
                        ),
                        'FirstTrainingTime' => 
                        array (
                          'description' => '- 首次发起训练时间
- 格式为 utc 时间',
                          'type' => 'string',
                          'example' => '2020-12-23T13:33:40Z',
                        ),
                        'LastTrainingTime' => 
                        array (
                          'description' => '- 最近一次训练时间
- 格式为 utc 时间',
                          'type' => 'string',
                          'example' => '2020-12-23T13:33:40Z',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '- 任务创建时间
- 格式为 utc 时间',
                          'type' => 'string',
                          'example' => '2020-12-23T13:33:40Z',
                        ),
                      ),
                    ),
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- true：成功
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Data\\": {\\n    \\"AvatarTrainingJobList\\": [\\n      {\\n        \\"JobId\\": \\"*****aded114489ea02e0addf93*****\\",\\n        \\"AvatarId\\": \\"Avatar-XXX\\",\\n        \\"AvatarName\\": \\"小数\\",\\n        \\"AvatarDescription\\": \\"这是一个数字人，用于某某场景。\\",\\n        \\"AvatarType\\": \\"2DAvatar\\",\\n        \\"Status\\": \\"Success\\",\\n        \\"Message\\": \\"训练成功\\",\\n        \\"Portrait\\": \\"*****aded114489ea02e0addf93*****\\",\\n        \\"FirstTrainingTime\\": \\"2020-12-23T13:33:40Z\\",\\n        \\"LastTrainingTime\\": \\"2020-12-23T13:33:40Z\\",\\n        \\"CreateTime\\": \\"2020-12-23T13:33:40Z\\"\\n      }\\n    ],\\n    \\"TotalCount\\": 3\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询数字人训练任务列表',
    ),
    'GetAvatar' => 
    array (
      'summary' => '调用本接口，可以查询某个已经训练成功的数字人的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AvatarId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 数字人 ID',
            'type' => 'string',
            'required' => true,
            'example' => 'Avatar-XXXX',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'Avatar' => 
                  array (
                    'description' => '数字人',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AvatarId' => 
                      array (
                        'description' => '数字人 ID',
                        'type' => 'string',
                        'example' => 'Avatar-XXXX',
                      ),
                      'AvatarName' => 
                      array (
                        'description' => '数字人名称',
                        'type' => 'string',
                        'example' => '小数',
                      ),
                      'AvatarDescription' => 
                      array (
                        'description' => '数字人描述',
                        'type' => 'string',
                        'example' => '这是一个数字人，用于某某场景。',
                      ),
                      'AvatarType' => 
                      array (
                        'description' => '数字人类型',
                        'type' => 'string',
                        'example' => '2DAvatar',
                      ),
                      'Thumbnail' => 
                      array (
                        'description' => '缩略图 URL',
                        'type' => 'string',
                        'example' => 'https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png',
                      ),
                      'Portrait' => 
                      array (
                        'description' => '头像图片媒资 ID',
                        'type' => 'string',
                        'example' => '****571c704445f9a0ee011406c2****',
                      ),
                      'Transparent' => 
                      array (
                        'description' => '用于标识当前数字人是否支持透明通道',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'Width' => 
                      array (
                        'description' => '数字人形象的宽（单位：像素）',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1080',
                      ),
                      'Height' => 
                      array (
                        'description' => '数字人形象的高（单位：像素）',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1920',
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Data\\": {\\n    \\"Avatar\\": {\\n      \\"AvatarId\\": \\"Avatar-XXXX\\",\\n      \\"AvatarName\\": \\"小数\\",\\n      \\"AvatarDescription\\": \\"这是一个数字人，用于某某场景。\\",\\n      \\"AvatarType\\": \\"2DAvatar\\",\\n      \\"Thumbnail\\": \\"https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png\\",\\n      \\"Portrait\\": \\"****571c704445f9a0ee011406c2****\\",\\n      \\"Transparent\\": true,\\n      \\"Width\\": 1080,\\n      \\"Height\\": 1920\\n    }\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => ' 查询数字人',
    ),
    'ListAvatars' => 
    array (
      'summary' => '调用本接口，可以查询到您名下所有已经训练成功的数字人信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '- 分页页码
- 默认值：1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 分页页面大小
- 默认值：10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'AvatarType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 数字人类型
- 2DAvatar',
            'type' => 'string',
            'required' => false,
            'example' => '2DAvatar',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'AvatarList' => 
                  array (
                    'description' => '数字人列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AvatarId' => 
                        array (
                          'description' => '数字人 ID',
                          'type' => 'string',
                          'example' => 'Avatar-XXX',
                        ),
                        'AvatarName' => 
                        array (
                          'description' => '数字人名称',
                          'type' => 'string',
                          'example' => '小数',
                        ),
                        'AvatarDescription' => 
                        array (
                          'description' => '数字人描述',
                          'type' => 'string',
                          'example' => '这是一个数字人，用于某某场景。',
                        ),
                        'AvatarType' => 
                        array (
                          'description' => '数字人类型',
                          'type' => 'string',
                          'example' => '2DAvatar',
                        ),
                        'Thumbnail' => 
                        array (
                          'description' => '缩略图 URL',
                          'type' => 'string',
                          'example' => 'https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png',
                        ),
                        'Portrait' => 
                        array (
                          'description' => '头像图片媒资 ID',
                          'type' => 'string',
                          'example' => '****571c704445f9a0ee011406c2****',
                        ),
                        'Transparent' => 
                        array (
                          'description' => '当前数字人形象是否支持透明通道',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- true：成功
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Data\\": {\\n    \\"AvatarList\\": [\\n      {\\n        \\"AvatarId\\": \\"Avatar-XXX\\",\\n        \\"AvatarName\\": \\"小数\\",\\n        \\"AvatarDescription\\": \\"这是一个数字人，用于某某场景。\\",\\n        \\"AvatarType\\": \\"2DAvatar\\",\\n        \\"Thumbnail\\": \\"https://your-bucket.oss-cn-hangzhou.aliyuncs.com/thumbnail.png\\",\\n        \\"Portrait\\": \\"****571c704445f9a0ee011406c2****\\",\\n        \\"Transparent\\": true\\n      }\\n    ],\\n    \\"TotalCount\\": 1\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询数字人列表',
    ),
    'CreateCustomizedVoiceJob' => 
    array (
      'summary' => '创建人声克隆任务，用于初始化配置人声克隆任务的基础信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VoiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义的声音 Id （声音的英文或拼音）

- 不能和您其他的定制声音 Id 重名
- 不超过 32 个字符
- 仅支持字母和数字',
            'type' => 'string',
            'required' => true,
            'example' => 'xiaozhuan',
            'maxLength' => 32,
            'minLength' => 0,
          ),
        ),
        1 => 
        array (
          'name' => 'VoiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '声音名字（一般为中文名）
- 不超过 32 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '小专',
            'maxLength' => 32,
            'minLength' => 0,
          ),
        ),
        2 => 
        array (
          'name' => 'VoiceDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '声音描述
- 不超过 256 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '这是一个个性化声音',
            'maxLength' => 256,
            'minLength' => 0,
          ),
        ),
        3 => 
        array (
          'name' => 'Gender',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '性别，取值范围：
- female：女性
- male：男性',
            'type' => 'string',
            'required' => true,
            'example' => 'female',
            'enum' => 
            array (
              0 => 'female',
              1 => 'male',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Scenario',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景，取值范围：
- story：故事
- interaction：交互
- navigation：导航',
            'type' => 'string',
            'required' => true,
            'example' => 'story',
            'enum' => 
            array (
              0 => 'story',
              1 => 'interaction',
              2 => 'navigation',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true：调用成功。false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'VoiceId' => 
                  array (
                    'description' => '声音 Id',
                    'type' => 'string',
                    'example' => 'xiaozhuan',
                  ),
                  'JobId' => 
                  array (
                    'description' => '人声克隆任务 Id',
                    'type' => 'string',
                    'example' => '****29faef8144638ba42eb8e037****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"VoiceId\\": \\"xiaozhuan\\",\\n    \\"JobId\\": \\"****29faef8144638ba42eb8e037****\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建人声克隆任务（基础版）',
    ),
    'GetDemonstrationForCustomizedVoiceJob' => 
    array (
      'summary' => '通过本接口来获取训练个性化人声所需要朗读的文本及示例音频。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Scenario',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '示范场景。

可以取以下的一个值：

- **story**：故事
- **interaction**：交互
- **navigation**：导航',
            'type' => 'string',
            'required' => true,
            'example' => 'story',
            'enum' => 
            array (
              0 => 'story',
              1 => 'interaction',
              2 => 'navigation',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功，取值：
- true：成功
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'DemonstrationList' => 
                  array (
                    'description' => '示范列表，返回 20 条需要朗读的文本及对应语音示例',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DemoAudio' => 
                        array (
                          'description' => '示例音频 URL
- OSS 地址
><notice>音频文件过期时间为 12 小时></notice>',
                          'type' => 'string',
                          'example' => 'http://bucket.oss-cn-shanghai.aliyuncs.com/1.wav',
                        ),
                        'Text' => 
                        array (
                          'description' => '需要朗读的文本内容',
                          'type' => 'string',
                          'example' => '不行，他想了一下，我不能这样对国王说，这是在撒谎。',
                        ),
                        'AudioId' => 
                        array (
                          'description' => '该文本的序号，对应音频检测时需要传入的 AduioRecordId 字段',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        201 => 
        array (
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"DemonstrationList\\": [\\n      {\\n        \\"DemoAudio\\": \\"http://bucket.oss-cn-shanghai.aliyuncs.com/1.wav\\",\\n        \\"Text\\": \\"不行，他想了一下，我不能这样对国王说，这是在撒谎。\\",\\n        \\"AudioId\\": 2\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取需要朗读的示范文本及音频（基础版）',
    ),
    'DetectAudioForCustomizedVoiceJob' => 
    array (
      'summary' => '本接口用来检测用户的朗读是否有明显的发音错误、嘈杂的环境等。
云端在进行完音频检测后，对于检测合格的音频会暂存在云端，供后续训练声音时使用，请勿省略该步骤。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VoiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声 Id',
            'type' => 'string',
            'required' => true,
            'example' => 'xiaozhuan',
          ),
        ),
        1 => 
        array (
          'name' => 'RecordUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '录音文件 URL 地址
><notice>必须是您账号下的 OSS 地址，并且 OSS Bucket 的所在区域要与调用本接口时服务所在的区域相同></notice>
><notice>音频格式要求：音频文件必须是 wav 或 pcm 格式，且为单声道（mono）16 bit 采样位数音频。音频采样率为 48000 Hz></notice>',
            'type' => 'string',
            'required' => true,
            'example' => 'https://your-bucket.oss-cn-hangzhou.aliyuncs.com/record1.wav',
          ),
        ),
        2 => 
        array (
          'name' => 'AudioRecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'RecordUrl 对应的音频序号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '20',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：true：成功。false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'Pass' => 
                  array (
                    'description' => '是否通过检测，取值：

- true：检测成功。
- false：检测失败。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'Reason' => 
                  array (
                    'description' => '检测失败时给出具体原因',
                    'type' => 'string',
                    'example' => '发音错误，请准确读出文案中的内容',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Pass\\": false,\\n    \\"Reason\\": \\"发音错误，请准确读出文案中的内容\\"\\n  }\\n}","type":"json"}]',
      'title' => '提交音频检测（基础版）',
    ),
    'SubmitCustomizedVoiceJob' => 
    array (
      'summary' => '提交人声克隆任务，VoiceId 需要与音频检测时传递的一致，云端依赖此参数寻找暂存的音频进行训练。  
调用此接口后，会同步返回 JobId，训练过程为异步过程。  
在训练期间，您可以通过调用 GetCustomizedVoiceJob - 查询人声克隆任务接口来获取当前任务是否完成或训练状态等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VoiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声 Id',
            'type' => 'string',
            'required' => true,
            'example' => 'xiaozhuan',
            'maxLength' => 32,
            'minLength' => 0,
          ),
        ),
        1 => 
        array (
          'name' => 'DemoAudioMediaURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '示例音频输出地址  
- 如果传入此参数，则会在训练成功后在此参数表示的 OSS 地址生成示例音频  
- 如果不传入此参数，则不会生成示例音频
><notice>需要是您账号下合法的 OSS 公网地址></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'https://your-bucket.oss-cn-shanghai.aliyuncs.com/demo.MP3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功，取值：
- true：调用成功                  
-  false：调用失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '人声克隆任务 Id',
                    'type' => 'string',
                    'example' => '****d718e2ff4f018ccf419a7b71****',
                  ),
                  'VoiceId' => 
                  array (
                    'description' => '声音 Id',
                    'type' => 'string',
                    'example' => 'xiaozhuan',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****d718e2ff4f018ccf419a7b71****\\",\\n    \\"VoiceId\\": \\"xiaozhuan\\"\\n  }\\n}","type":"json"}]',
      'title' => '提交人声克隆任务（基础版）',
    ),
    'SubmitStandardCustomizedVoiceJob' => 
    array (
      'summary' => '提交大众版本的人声克隆任务。调用此接口后，会同步返回 JobId，训练过程为异步过程。在训练期间，您可以通过调用 GetCustomizedVoiceJob - 查询人声克隆训练任务接口来获取当前任务是否完成或训练状态等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VoiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '声音名字
- 不超过 32 个字符',
            'type' => 'string',
            'required' => false,
            'example' => '小专',
          ),
        ),
        1 => 
        array (
          'name' => 'Gender',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '性别，取值范围：
- female：女性
- male：男性',
            'type' => 'string',
            'required' => false,
            'example' => 'female',
          ),
        ),
        2 => 
        array (
          'name' => 'Authentication',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 认证音频媒资 Id
- 请您上传一段音频验证本人身份，声纹与训练音频不符将定制失败
><notice>请清晰朗读并录制如下文案：我确认进行人声克隆定制，训练音频为本人提供，本人承诺对定制内容负责，保证不进行违法违规的内容创作。></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '****571c704445f9a0ee011406c2****',
          ),
        ),
        3 => 
        array (
          'name' => 'Audios',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 训练声音素材媒资 Id 列表
- 多个素材 MediaId 用英文逗号分割

><notice>所有素材的总时长需要介于 15 - 30 分钟内，单个素材的时长需要大于 1 分钟></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '****571c704445f9a0ee011406c2****,****571c704445f9a0ee011406c2****,****571c704445f9a0ee011406c2****',
          ),
        ),
        4 => 
        array (
          'name' => 'DemoAudioMediaURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '示例音频输出地址  
- 如果传入此参数，则会在训练成功后在此参数表示的 OSS 地址生成示例音频  
- 如果不传入此参数，则不会生成示例音频
><notice>需要是您账号下合法的 OSS 公网地址></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'https://your-bucket.oss-cn-shanghai.aliyuncs.com/demo.mp3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Success' => 
              array (
                'description' => '是否请求成功。取值：
- true： 成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '人声克隆任务 Id',
                    'type' => 'string',
                    'example' => '****d718e2ff4f018ccf419a7b71****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****d718e2ff4f018ccf419a7b71****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<SubmitStandardCustomizedVoiceJobResponse>\\n    <RequestId>****63E8B7C7-4812-46AD-0FA56029AC86****</RequestId>\\n    <Success>true</Success>\\n    <Data>\\n        <JobId>****d718e2ff4f018ccf419a7b71****</JobId>\\n    </Data>\\n</SubmitStandardCustomizedVoiceJobResponse>","errorExample":""}]',
      'title' => '提交人声克隆任务（大众版）',
    ),
    'GetCustomizedVoiceJob' => 
    array (
      'summary' => '查询单个人声克隆任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声克隆任务 Id',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据',
                'type' => 'object',
                'properties' => 
                array (
                  'CustomizedVoiceJob' => 
                  array (
                    'description' => '人声克隆任务',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'JobId' => 
                      array (
                        'description' => '人声克隆任务 Id',
                        'type' => 'string',
                        'example' => '****571c704445f9a0ee011406c2****',
                      ),
                      'VoiceId' => 
                      array (
                        'description' => '声音 Id',
                        'type' => 'string',
                        'example' => 'xiaozhuan',
                      ),
                      'Status' => 
                      array (
                        'description' => '任务状态，取值范围：
- Initialization 初始化
- AudioDetecting 音频检测中
- PreTraining 提交训练，待训练
- Training 训练中
- Success 训练成功
- Fail 训练失败',
                        'type' => 'string',
                        'example' => 'Fail',
                      ),
                      'Message' => 
                      array (
                        'description' => '状态附加描述信息',
                        'type' => 'string',
                        'example' => '训练失败',
                      ),
                      'Type' => 
                      array (
                        'description' => '人声克隆任务类型，取值范围：

- Basic 基础版
- Standard 大众版',
                        'type' => 'string',
                        'example' => 'Standard',
                      ),
                      'VoiceName' => 
                      array (
                        'description' => '声音名称',
                        'type' => 'string',
                        'example' => '小专',
                      ),
                      'VoiceDesc' => 
                      array (
                        'description' => '声音描述',
                        'type' => 'string',
                        'example' => '这是一个专属人声',
                      ),
                      'Scenario' => 
                      array (
                        'description' => '场景，取值范围：
- story：故事
- interaction：交互
- navigation：导航',
                        'type' => 'string',
                        'example' => 'story',
                      ),
                      'Gender' => 
                      array (
                        'description' => '性别，取值范围如下：

- female：女性

- male：男性',
                        'type' => 'string',
                        'example' => 'female',
                      ),
                      'CreateTime' => 
                      array (
                        'description' => '创建时间，UTC 时间格式',
                        'type' => 'string',
                        'example' => '2023-06-07T02:27:08Z',
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功：
- true：调用成功
- false：调用失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Data\\": {\\n    \\"CustomizedVoiceJob\\": {\\n      \\"JobId\\": \\"****571c704445f9a0ee011406c2****\\",\\n      \\"VoiceId\\": \\"xiaozhuan\\",\\n      \\"Status\\": \\"Fail\\",\\n      \\"Message\\": \\"训练失败\\",\\n      \\"Type\\": \\"Standard\\",\\n      \\"VoiceName\\": \\"小专\\",\\n      \\"VoiceDesc\\": \\"这是一个专属人声\\",\\n      \\"Scenario\\": \\"story\\",\\n      \\"Gender\\": \\"female\\",\\n      \\"CreateTime\\": \\"2023-06-07T02:27:08Z\\"\\n    }\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询人声克隆任务',
    ),
    'DeleteCustomizedVoiceJob' => 
    array (
      'summary' => '调用此接口可以删除处于非“训练中”与“训练成功”的人声克隆任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声克隆任务 Id',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- true：成功
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除人声克隆任务',
    ),
    'ListCustomizedVoiceJobs' => 
    array (
      'summary' => '列出当前用户的所有人声克隆训练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声克隆任务类型（版本），取值范围：
- Basic 基础版
- Standard 大众版

><notice>不填默认为查找 Basic 基础版></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Standard',
            'enum' => 
            array (
              0 => 'Basic',
              1 => 'Standard',
              2 => 'Premium',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'CustomizedVoiceJobList' => 
                  array (
                    'description' => '人声克隆任务列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '人声克隆任务',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'JobId' => 
                        array (
                          'description' => '人声克隆任务 Id',
                          'type' => 'string',
                          'example' => '2245ab99a7fd4116a4fd3f499b7a56c5',
                        ),
                        'VoiceId' => 
                        array (
                          'description' => '声音 Id',
                          'type' => 'string',
                          'example' => 'xiaozhuan',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务状态，取值：
- Initialization 初始化
- AudioDetecting 音频检测中
- PreTraining 提交训练，待训练
- Training 训练中
- Success 训练成功
- Fail 训练失败',
                          'type' => 'string',
                          'example' => 'Success',
                        ),
                        'Message' => 
                        array (
                          'description' => '状态附加描述信息',
                          'type' => 'string',
                          'example' => '训练成功',
                        ),
                        'VoiceName' => 
                        array (
                          'description' => '声音名字（一般为中文名）
- 不超过 32 个字符',
                          'type' => 'string',
                          'example' => '小专',
                        ),
                        'VoiceDesc' => 
                        array (
                          'description' => '声音描述
- 不超过 256 个字符',
                          'type' => 'string',
                          'example' => '这是这个声音的描述',
                        ),
                        'Type' => 
                        array (
                          'description' => '- 声音类型，取值范围：
  - Basic 基础版
  - Standard 大众版',
                          'type' => 'string',
                          'example' => 'Standard',
                        ),
                        'Gender' => 
                        array (
                          'description' => '性别，取值范围：
- female：女性
- male：男性',
                          'type' => 'string',
                          'example' => 'female',
                        ),
                        'Scenario' => 
                        array (
                          'description' => '场景，取值范围：
- story：故事
- interaction：交互
- navigation：导航',
                          'type' => 'string',
                          'example' => 'story',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '- 任务创建时间
- 格式为 UTC 时间',
                          'type' => 'string',
                          'example' => '2023-04-01T06:23:59Z',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'string',
                          'example' => '2022-06-27T02:42:28Z',
                        ),
                      ),
                    ),
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '271',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：true：成功。false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Data\\": {\\n    \\"CustomizedVoiceJobList\\": [\\n      {\\n        \\"JobId\\": \\"2245ab99a7fd4116a4fd3f499b7a56c5\\",\\n        \\"VoiceId\\": \\"xiaozhuan\\",\\n        \\"Status\\": \\"Success\\",\\n        \\"Message\\": \\"训练成功\\",\\n        \\"VoiceName\\": \\"小专\\",\\n        \\"VoiceDesc\\": \\"这是这个声音的描述\\",\\n        \\"Type\\": \\"Standard\\",\\n        \\"Gender\\": \\"female\\",\\n        \\"Scenario\\": \\"story\\",\\n        \\"CreateTime\\": \\"2023-04-01T06:23:59Z\\",\\n        \\"GmtCreate\\": \\"2022-06-27T02:42:28Z\\"\\n      }\\n    ],\\n    \\"TotalCount\\": 271\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询人声克隆任务列表 ',
    ),
    'GetCustomizedVoice' => 
    array (
      'summary' => '调用本接口可以查询特定的个性化人声信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VoiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声 Id',
            'type' => 'string',
            'required' => false,
            'example' => 'xiaozhuan',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'CustomizedVoice' => 
                  array (
                    'description' => '个性化人声',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VoiceId' => 
                      array (
                        'description' => '声音 Id',
                        'type' => 'string',
                        'example' => 'xiaozhuan',
                      ),
                      'VoiceName' => 
                      array (
                        'description' => '声音名字',
                        'type' => 'string',
                        'example' => '小专',
                      ),
                      'VoiceDesc' => 
                      array (
                        'description' => '声音描述',
                        'type' => 'string',
                        'example' => '这是一个个性化人声',
                      ),
                      'Gender' => 
                      array (
                        'description' => '性别，取值范围如下：

- female：女性

- male：男性',
                        'type' => 'string',
                        'example' => 'female',
                      ),
                      'Scenario' => 
                      array (
                        'description' => '示范场景。

可以取以下的一个值：

- **story**：故事
- **interaction**：交互
- **navigation**：导航',
                        'type' => 'string',
                        'example' => 'interaction',
                      ),
                      'DemoAudioMediaId' => 
                      array (
                        'description' => '示例音频媒资 Id',
                        'type' => 'string',
                        'example' => '****42d3c312402982be65975f5b****',
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '是否请求成功。取值：
- true： 成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"Data\\": {\\n    \\"CustomizedVoice\\": {\\n      \\"VoiceId\\": \\"xiaozhuan\\",\\n      \\"VoiceName\\": \\"小专\\",\\n      \\"VoiceDesc\\": \\"这是一个个性化人声\\",\\n      \\"Gender\\": \\"female\\",\\n      \\"Scenario\\": \\"interaction\\",\\n      \\"DemoAudioMediaId\\": \\"****42d3c312402982be65975f5b****\\"\\n    }\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询个性化人声',
    ),
    'UpdateCustomizedVoice' => 
    array (
      'summary' => '调用此接口可以修改个性化人声的信息，目前仅支持修改示例音频媒资 Id 「DemoMediaId」，以支持自行维护示例音频。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VoiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '人声 Id',
            'type' => 'string',
            'required' => true,
            'example' => 'xiaozhuan',
          ),
        ),
        1 => 
        array (
          'name' => 'DemoAudioMediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '示例音频媒资 Id',
            'type' => 'string',
            'required' => false,
            'example' => '****4d5e829d498aaf966b119348****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '4E84BE44-58A7-****-****-FBEBEA16EF94',
              ),
              'Success' => 
              array (
                'description' => '是否请求成功。取值：
- true： 成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E84BE44-58A7-****-****-FBEBEA16EF94\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新个性化人声信息',
    ),
    'ListCustomizedVoices' => 
    array (
      'summary' => '列出当前用户的所有的个性化人声。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 声音类型，取值范围：
  - Basic 基础版
  - Standard 大众版
- 不填默认为 Basic，查询基础版',
            'type' => 'string',
            'required' => false,
            'example' => 'Standard',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Data' => 
              array (
                'description' => '返回结果',
                'type' => 'object',
                'properties' => 
                array (
                  'CustomizedVoiceList' => 
                  array (
                    'description' => '个性化人声列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '个性化人声',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VoiceId' => 
                        array (
                          'description' => '声音 Id',
                          'type' => 'string',
                          'example' => 'xiaozhuan',
                        ),
                        'VoiceName' => 
                        array (
                          'description' => '声音名字（一般为中文名）',
                          'type' => 'string',
                          'example' => '小专',
                        ),
                        'VoiceDesc' => 
                        array (
                          'description' => '声音描述',
                          'type' => 'string',
                          'example' => '这是一个个性化人声小专',
                        ),
                        'Gender' => 
                        array (
                          'description' => '性别，取值范围：
- female：女性
- male：男性',
                          'type' => 'string',
                          'example' => 'male',
                        ),
                        'Scenario' => 
                        array (
                          'description' => '场景，取值范围：
- story：故事
- interaction：交互
- navigation：导航',
                          'type' => 'string',
                          'example' => 'story',
                        ),
                        'DemoAudioMediaId' => 
                        array (
                          'description' => '示例音频媒资 Id',
                          'type' => 'string',
                          'example' => '****4d5e829d498aaf966b119348****',
                        ),
                        'Type' => 
                        array (
                          'description' => '- 声音类型，取值范围：
  - Basic 基础版
  - Standard 大众版',
                          'type' => 'string',
                          'example' => 'Standard',
                        ),
                      ),
                    ),
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '41',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- true：成功
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Data\\": {\\n    \\"CustomizedVoiceList\\": [\\n      {\\n        \\"VoiceId\\": \\"xiaozhuan\\",\\n        \\"VoiceName\\": \\"小专\\",\\n        \\"VoiceDesc\\": \\"这是一个个性化人声小专\\",\\n        \\"Gender\\": \\"male\\",\\n        \\"Scenario\\": \\"story\\",\\n        \\"DemoAudioMediaId\\": \\"****4d5e829d498aaf966b119348****\\",\\n        \\"Type\\": \\"Standard\\"\\n      }\\n    ],\\n    \\"TotalCount\\": 41\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询个性化人声列表 ',
    ),
    'SubmitASRJob' => 
    array (
      'summary' => '根据视频语音提取时间起止点及对应文字信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InputFile',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '输入配置，支持OSS地址和内容库素材ID',
            'description' => '输入配置，支持OSS地址和内容库素材ID',
            'type' => 'string',
            'required' => false,
            'example' => 'oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4 或 ****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        1 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义设置，为JSON字符串',
            'description' => '用户自定义设置，可传入客户业务信息，如业务方环境、任务信息，JSON字符串格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "user": "data",
      "env": "prod"
}',
          ),
        ),
        2 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务标题',
            'description' => '任务标题，长度不超过128字节',
            'type' => 'string',
            'required' => false,
            'example' => '测试标题',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务描述',
            'description' => '任务描述，长度不超过128字节',
            'type' => 'string',
            'required' => false,
            'example' => '测试描述',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始时间',
            'description' => '开始时间',
            'type' => 'string',
            'required' => false,
            'example' => '00:00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '持续时间',
            'description' => '持续时间',
            'type' => 'string',
            'required' => false,
            'example' => '00:00:10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求Id',
                'description' => '请求Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'title' => '智能任务Id',
                'description' => '智能任务Id',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'State' => 
              array (
                'title' => '任务状态',
                'description' => '任务状态
- Created
- Executing
- Finished
- Failed',
                'type' => 'string',
                'example' => 'Finished',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"State\\": \\"Finished\\"\\n}","errorExample":""},{"type":"xml","example":"<SubmitASRJobResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <JobId>****20b48fb04483915d4f2cd8ac****</JobId>\\n    <State>Finished</State>\\n</SubmitASRJobResponse>","errorExample":""}]',
      'title' => '提交ASR智能字幕任务',
      'responseParamsDescription' => 'ASR任务执行结果可以用ASR任务JobId通过[获取智能任务结果](https://help.aliyun.com/document_detail/203429.html)接口查询任务执行详细信息，任务执行成功时[获取智能任务结果](https://help.aliyun.com/document_detail/203429.html)接口返回结果示例如下。


```
{
  "RequestId": "******2D-443C-5043-B0E4-867070******",
  "JobResult": {
    "AiResult": "[{\\"content\\":\\"提起\\",\\"from\\":0.0,\\"to\\":0.846},{\\"content\\":\\"现在可以说是红的发紫了\\",\\"from\\":0.846,\\"to\\":3.386},{\\"content\\":\\"常常票价很高\\",\\"from\\":3.386,\\"to\\":4.402},{\\"content\\":\\"但是一开手就被疯抢一空\\",\\"from\\":4.402,\\"to\\":6.265},{\\"content\\":\\"还参加各种相声综艺节目点评新人表演演员已经\\",\\"from\\":6.265,\\"to\\":10.33}]"
  },
  "State": "Finished",
  "Output": "[{\\"content\\":\\"提起\\",\\"from\\":0.0,\\"to\\":0.846},{\\"content\\":\\"现在的可以说是红的发紫了\\",\\"from\\":0.846,\\"to\\":3.386},{\\"content\\":\\"常常票价很高\\",\\"from\\":3.386,\\"to\\":4.402},{\\"content\\":\\"但是一开手就被疯抢一空\\",\\"from\\":4.402,\\"to\\":6.265},{\\"content\\":\\"还参加各种相声综艺节目点评新人表演演员已经\\",\\"from\\":6.265,\\"to\\":10.33}]",
  "JobId": "******042d5e4db6866f6289d1******",
  "SmartJobInfo": {
    "JobType": "ASR",
    "ModifiedTime": "2022-01-21T06:15:08Z",
    "UserId": 1234562230123456,
    "CreateTime": "2022-01-21T06:15:02Z",
    "Title": "default_title_2022-01-21T06:15:02Z",
    "InputConfig": {
      "JobParameters": "{\\"duration\\":\\"00:30:00\\",\\"start_time\\":\\"00:00:00\\",\\"request_params\\":\\"&enable_word_level_result=true\\"}",
      "InputFile": "oss://your-bucket.oss-cn-shanghai.aliyuncs.com/your-video.mp4"
    }
  }
}
```',
    ),
    'SubmitAvatarVideoJob' => 
    array (
      'summary' => '以人声音频或文本作为输入，渲染虚拟人视频。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '虚拟人任务输入参数。支持以文本、音频OSS文件、媒资作为输入。音频仅支持mp3或wav格式。
><notice>Text 的输入内容长度不能少于 5 个字></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '{"Text": "君不见黄河之水天上来，奔流到海不复回。君不见高堂明镜悲白发，朝如青丝暮成雪。"}',
          ),
        ),
        1 => 
        array (
          'name' => 'EditingConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '虚拟人任务配置信息，支持设置虚拟人id、人声、语速等信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"AvatarId":"yunqiao"}',
          ),
        ),
        2 => 
        array (
          'name' => 'OutputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务输出信息，支持设置输出地址、成片分辨率信息',
            'type' => 'string',
            'required' => false,
            'example' => '{"MediaURL":"https://your-bucket.oss-cn-shanghai.aliyuncs.com/xxx.mp4","Width":1920,"Height":1080}',
          ),
        ),
        3 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务标题',
            'description' => '任务标题，长度不超过128字节',
            'type' => 'string',
            'required' => false,
            'example' => '测试标题',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务描述',
            'description' => '任务描述，长度不超过128字节',
            'type' => 'string',
            'required' => false,
            'example' => '测试描述',
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义设置，为JSON字符串',
            'description' => '用户自定义设置，可传入客户业务信息，如业务方环境、任务信息，JSON字符串格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"user":"data","env":"prod"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******
',
              ),
              'JobId' => 
              array (
                'description' => '智能任务Id',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****
',
              ),
              'MediaId' => 
              array (
                'description' => '成片媒资id',
                'type' => 'string',
                'example' => '******70dcc471edaf00e6f6f4******',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\\\n\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\\\n\\",\\n  \\"MediaId\\": \\"******70dcc471edaf00e6f6f4******\\"\\n}","type":"json"}]',
      'title' => '提交数字人渲染任务',
      'description' => '- 目前仅支持输入为文本或人声音频作为输入，音频仅支持mp3或wav格式。
- 支持输出mp4和webm格式。当输出为mp4时，成片为带绿幕背景的视频，同时输出虚拟人的蒙版视频，供后续使用，推荐用这个方案。当输出为webm时，成片为带透明通道的webm，可用于前端展示，由于webm编码问题，合成会慢一些。
- 输出结果中包含人声的句子时间戳，供后续在剪辑中使用。',
      'requestParamsDescription' => '### InputConfig示例：
输入为音频地址：
```
{
  "InputFile": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/xxx.mp3"
}
```

输入为文本：
```
{
  "Text": "君不见黄河之水天上来，奔流到海不复回。君不见高堂明镜悲白发，朝如青丝暮成雪。"
}
```

输入为MediaId：
```
{
  "MediaId": "4aef0c80cc0071edbf92f6e7c44b6302"
}
```

### EditingConfig示例：
AvatarId：虚拟人形象Id，必填 ，取值：[数字人官方形象](https://help.aliyun.com/document_detail/2254005.html)  
Voice：发音人，仅输入为Text有效，选填，取值：[智能语音效果示例](https://help.aliyun.com/document_detail/449563.html)   
CustomizedVoice：个性化人声。如果需要使用通过人声克隆生成的个性化人声作为发音人，请使用此字段，而不是 Voice 字段  
LoopMotion: 是否首尾同帧，如果设置此值为 true，则生成的数字人视频图像的首帧与尾帧相同，循环播放视频时人物形象的动作和表情不会有“跳变”现象，取值范围：{true, false}，默认值：false  
SpeechRate：语速，仅当输入为文本类型有效，取值范围：-500～500，默认值：0   
PitchRate：音调，仅当输入为文本类型有效，取值范围：-500～500，默认值：0   
Volume：音量，仅当输入为文本类型有效，取值范围：0~100，默认值50   
BackgroundUrl：背景图，默认是绿幕，选填，仅支持jpg、png格式
```
{
  "AvatarId": "xinxin-marketing_standing", 
  "BackgroundUrl": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/xxx.jpg",
  "Voice" : "zhichu",
  "LoopMotion": true,
  "SpeechRate": 100,
  "PitchRate": 10, 
  "Volume": 10 
}
```

### OutputConfig示例：
```
{
  "MediaURL": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/xxx.mp4",
  "Width": 1080,
  "Height": 1920
}
```',
      'responseParamsDescription' => '可以通过[获取智能任务结果](https://help.aliyun.com/document_detail/203429.html)接口查询任务执行状态和任务结果，任务执行成功时接口返回结果示例如下.  
```
{
	"RequestId": "2014D1A8-4143-164F-94B4-32B8F39B706D",
	"JobId": "d9367da8c7184ec7a3f24de530ac5b9a",
	"State": "Finished",
	"SmartJobInfo": {
		"Title": "default_title_2023-03-28T13:37:47Z",
		"EditingConfig": "null",
		"JobType": "AvatarVideo",
		"CreateTime": "2023-03-28T13:37:47Z",
		"ModifiedTime": "2023-03-28T13:37:47Z",
		"UserId": 1833202230108227,
		"outputConfig": {
			"mediaUrl": "https://oushu-test-shanghai.oss-cn-shanghai.aliyuncs.com/avatar/222.mp4",
			"width": 1920,
			"height": 1080
		}
	},
	"JobResult": {
		"MediaId": "4aef0c80cc0071edbf92f6e7c44b6302",
		"AiResult": "{\\"outputVideoUrl\\":\\"https://oushu-test-shanghai.oss-cn-shanghai.aliyuncs.com/avatar/222.mp4\\",\\"maskVideoUrl\\":\\"https://oushu-test-shanghai.oss-cn-shanghai.aliyuncs.com/avatar/222_mask.mp4\\",\\"subtitleClips\\":\\"[{\\\\\\"from\\\\\\":0.0,\\\\\\"to\\\\\\":4.692,\\\\\\"content\\\\\\":\\\\\\"君不见黄河之水天上来，奔流到海不复回。\\\\\\"},{\\\\\\"from\\\\\\":4.692,\\\\\\"to\\\\\\":9.061,\\\\\\"content\\\\\\":\\\\\\"君不见高堂明镜悲白发，朝如青丝暮成雪。\\\\\\"}]\\"}"
	}
}
```

其中，AiResult格式如下：   
outputVideoUrl 为输出成片地址，mp4格式   
maskVideoUrl 为蒙版视频，mp4格式   
subtitleClips 字幕句子时间戳   
```
{
	"outputVideoUrl": "https://oushu-test-shanghai.oss-cn-shanghai.aliyuncs.com/avatar/222.mp4",
	"maskVideoUrl": "https://oushu-test-shanghai.oss-cn-shanghai.aliyuncs.com/avatar/222_mask.mp4",
	"subtitleClips": "[{\\"from\\":0.0,\\"to\\":4.692,\\"content\\":\\"君不见黄河之水天上来，奔流到海不复回。\\"},{\\"from\\":4.692,\\"to\\":9.061,\\"content\\":\\"君不见高堂明镜悲白发，朝如青丝暮成雪。\\"}]"
}
```',
    ),
    'SubmitAudioProduceJob' => 
    array (
      'summary' => '将文本内容转化成语音文件。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EditingConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '音频生产配置',
            'description' => '音频生产配置：
- voice [声音类型](https://help.aliyun.com/document_detail/402424.html)
- customizedVoice 人声克隆的 VoiceId
- format 输出文件格式，支持：PCM/WAV/MP3
- volume 音量，取值0~100，默认值50
- speech_rate 语速，取值范围：-500～500，默认值：0
- pitch_rate 语调，取值范围：-500～500，默认值：0

> 如果同时传入voice和customizedVoice会优先使用customizedVoice。',
            'type' => 'string',
            'required' => true,
            'example' => '{"voice":"Siqi","format":"MP3","volume":50}',
          ),
        ),
        1 => 
        array (
          'name' => 'OutputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '音频输出配置',
            'description' => '音频输出配置',
            'type' => 'string',
            'required' => true,
            'example' => '例如将输出的语音存至：http://my_bucket.oss-cn-shanghai.aliyuncs.com/target_audio.mp3，则此参数配置为：
{
      "bucket": "my_bucket",
      "object": "target_audio"
}',
          ),
        ),
        2 => 
        array (
          'name' => 'InputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文本内容。  最大支持300个汉字',
            'description' => '文本内容，最大支持2000个汉字。支持[SSML标记语言](https://help.aliyun.com/document_detail/2672807.html)。',
            'type' => 'string',
            'required' => true,
            'example' => '测试文本',
          ),
        ),
        3 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务标题',
            'description' => '任务标题。若不提供，根据日期自动生成默认title
- 长度不超过128字节
- UTF8编码

',
            'type' => 'string',
            'required' => false,
            'example' => '任务标题。
若不提供，根据日期自动生成默认title 
长度不超过128字节  UTF8编码',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务描述',
            'description' => '任务描述：
- 长度不超过1024字节
- UTF8编码',
            'type' => 'string',
            'required' => false,
            'example' => '任务描述长度不超过1024字节  UTF8编码',
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义数据',
            'description' => '自定义设置，Json 格式，长度限制为 512 字节。支持[自定义回调地址配置](https://help.aliyun.com/document_detail/451631.html)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotifyAddress":"http://xx.xx.xxx"}或{"NotifyAddress":"https://xx.xx.xxx"}或{"NotifyAddress":"ice-callback-demo"}',
          ),
        ),
        6 => 
        array (
          'name' => 'Overwrite',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否覆盖现有OSS文件',
            'description' => '是否覆盖现有OSS文件。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求Id',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'title' => '任务ID',
                'description' => '任务ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'State' => 
              array (
                'title' => '任务状态',
                'description' => '任务状态：
- Created
- Executing
- Finished
- Failed',
                'type' => 'string',
                'example' => 'Created',
              ),
              'MediaId' => 
              array (
                'title' => '媒资Id',
                'description' => '媒资Id',
                'type' => 'string',
                'example' => '****2bcbfcfa30fccb36f72dca22****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"State\\": \\"Created\\",\\n  \\"MediaId\\": \\"****2bcbfcfa30fccb36f72dca22****\\"\\n}","errorExample":""},{"type":"xml","example":"<SubmitAudioProduceJobResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <JobId>****20b48fb04483915d4f2cd8ac****</JobId>\\n    <State>Created</State>\\n</SubmitAudioProduceJobResponse>","errorExample":""}]',
      'title' => '提交智能语音任务',
      'responseParamsDescription' => '智能语音任务执行结果可以用智能语音任务JobId通过[获取智能任务结果接口](https://help.aliyun.com/document_detail/203429.html)查询任务执行详细信息，任务执行成功时[获取智能任务结果接口](https://help.aliyun.com/document_detail/203429.html)返回结果示例如下。
```
{
  "RequestId": "******2D-443C-5043-B0E4-867070******",
  "JobId": "******042d5e4db6866f6289d1******",
  "State": "Finished",
  "SmartJobInfo": {
    "Title": "default_title_2022-01-21T06:15:07Z",
    "JobType": "TextToSpeech",
    "CreateTime": "2022-01-21T06:15:07Z",
    "ModifiedTime": "2022-01-21T06:15:07Z",
    "InputConfig": {
      "InputFile": "提起郭德纲，现在可以说是红的发紫了，常常票价很高，但是一开手就被疯抢一空，还参加各种相声综艺节目点评新人表演演员已经"
    },
    "EditingConfig": "{\\"format\\":\\"MP3\\",\\"pitch_rate\\":0,\\"sample_rate\\":16000,\\"speech_rate\\":0,\\"voice\\":\\"Siqi\\",\\"volume\\":50}",
    "OutputConfig": {
      "Bucket": "your-bucket",
      "Object": "your-audio"
    }
  },
  "JobResult": {
    "MediaId": "******bf47c94e82b3b2014361******",
    "AiResult": "[{\\"content\\":\\"提起\\",\\"from\\":0.0,\\"to\\":0.846},{\\"content\\":\\"现在可以说是红的发紫了\\",\\"from\\":0.846,\\"to\\":3.386},{\\"content\\":\\"常常票价很高\\",\\"from\\":3.386,\\"to\\":4.402},{\\"content\\":\\"但是一开手就被疯抢一空\\",\\"from\\":4.402,\\"to\\":6.265},{\\"content\\":\\"还参加各种相声综艺节目点评新人表演演员已经\\",\\"from\\":6.265,\\"to\\":10.33}]"
  }
}
```',
    ),
    'SubmitTextGenerateJob' => 
    array (
      'summary' => '根据提交的关键词、字数、文案数，扩写出营销文案。由于中文的特殊性，输出文案字数可能跟需求字数有出入。提交任务成功后，根据JobId调用GetSmartHandleJob接口获取任务状态和结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '209430',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务标题

\\- 长度不超过128字节。

\\- UTF8编码。',
            'type' => 'string',
            'required' => false,
            'example' => '测试标题',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务描述 长度不超过1024字节 UTF8编码',
            'type' => 'string',
            'required' => false,
            'example' => '测试描述',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务类型',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'MarketingCopy' => '营销文案',
              'Title' => '短视频标题',
            ),
            'example' => 'MarketingCopy',
          ),
        ),
        3 => 
        array (
          'name' => 'GenerateConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生成配置，包括关键词、字数、输出文案数',
            'type' => 'string',
            'required' => false,
            'example' => '{"keywords":"新开店蛋糕，动物奶油","textLength":100,"targetCount":3}',
          ),
        ),
        4 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义设置，Json 格式，长度限制为 512 字节。支持[自定义回调地址配置](https://help.aliyun.com/document_detail/451631.html)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotifyAddress":"http://xx.xx.xxx"}或{"NotifyAddress":"https://xx.xx.xxx"}或{"NotifyAddress":"ice-callback-demo"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'description' => '智能任务ID',
                'type' => 'string',
                'example' => '****d80e4e4044975745c14b****',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****d80e4e4044975745c14b****\\"\\n}","type":"json"}]',
      'title' => '提交关键词扩写任务',
    ),
    'SubmitVideoTranslationJob' => 
    array (
      'summary' => '通过本节课，您可以提交视频翻译任务，当前支持字幕级翻译，即将视频中出现的字幕翻译为指定语言。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '222559',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREice405U0J',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 视频翻译任务的输入参数
- 支持以视频、字幕文件作为输入
- 符合 JSON 格式',
            'type' => 'string',
            'required' => false,
            'example' => '{"Type":"Video","Media":"https://your-bucket.oss-cn-shanghai.aliyuncs.com/xxx.mp4"}',
          ),
        ),
        1 => 
        array (
          'name' => 'EditingConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 视频翻译任务的配置参数
- 符合 JSON 格式',
            'type' => 'string',
            'required' => false,
            'example' => '{"SourceLanguage":"zh","TargetLanguage":"en","DetextArea":"Auto"}',
          ),
        ),
        2 => 
        array (
          'name' => 'OutputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 视频翻译任务的输出参数‘
- 支持以视频类型、字幕文件类型输出',
            'type' => 'string',
            'required' => false,
            'example' => '{"MediaURL": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/your-object.mp4"}',
          ),
        ),
        3 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 任务标题',
            'type' => 'string',
            'required' => false,
            'example' => '测试标题',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 任务描述',
            'type' => 'string',
            'required' => false,
            'example' => '测试描述',
          ),
        ),
        5 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 自定义信息',
            'type' => 'string',
            'required' => false,
            'example' => '测试 UserData',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- ClientToken',
            'type' => 'string',
            'required' => false,
            'example' => '测试 ClientToken',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求 ID',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'Success' => 
              array (
                'description' => '调用是否成功。

取值：
- true： 成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '响应数据',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '视频翻译任务 ID',
                    'type' => 'string',
                    'example' => '****d718e2ff4f018ccf419a7b71****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"****d718e2ff4f018ccf419a7b71****\\"\\n  }\\n}","type":"json"}]',
      'title' => '提交视频翻译任务',
      'description' => '提交视频翻译任务，返回 JobId，后续可通过 JobId 调用 GetSmartHandleJob 接口来获取任务的状态及结果信息。',
      'requestParamsDescription' => '### InputConfig
#### 参数说明

1. Type：输入类型，取值范围：
    - Video：输入为视频
    - Subtitle：输入为字幕文件
2. Media：视频素材，Type 为 Video 时设置，支持：
    - IMS 媒资 ID
    - OSS 地址
3. Subtitle：SRT 字幕文件，Type 为 Subtitle 时设置，支持：
    - OSS 地址

#### 参数示例
输入为视频，MediaId：
```
{
    "Type": "Video",
    "Media": "*****c80cc0071edbf92f6e7c44*****"
}
```
输入为视频，OSS 地址：
```
{
    "Type": "Video",
    "Media": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/video.mp4"
}
```
输入为字幕文件，OSS 地址：
```
{
    "Type": "Subtitle",
    "Media": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/subtitle.srt"
}
```

### EditingConfig
#### 参数说明
- SourceLanguage：原语言，取值范围：
    - cn：中文
- TargetLanguage：目标语言，取值范围：
    - en：英文
- DetextArea：字幕擦除区域，如不填，则不做字幕擦除。
    - Auto：智能识别字幕并擦除
    - [x, y, width, height]：指定擦除范围，其中：
        - x：字幕框左上角距离视频左上角的横向距离比例，取值范围：[0, 1]
        - y：字幕框左上角距离视频左上角的竖向距离比例，取值范围：[0, 1]
        - width：字幕框宽度相对于视频宽度的比例，取值范围：[0, 1]
        - height：字幕框高度相对于视频高度的比例，取值范围：[0, 1]
- SupportEditing：是否开启支持二次剪辑，取值范围：
    - true：开启，保留处理过程中产生的所有中间文件，并生成剪辑工程用于二次创作
    - false：不开启，默认值，不保留中间文件与生成剪辑工程
#### 参数示例
输入中文，输出英文，智能字幕擦除
```
{
    "SourceLanguage": "zh",
    "TargetLanguage": "en",
    "DetextArea": "Auto"
}
```
输入中文，输出英文，指定字幕擦除位置
```
{
    "SourceLanguage": "zh",
    "TargetLanguage": "en",
    "DetextArea": "[0.1,0.85,0.8,0.15]"
}
```

### OutputConfig
#### 参数说明
- MediaURL：输出文件地址，支持输出视频格式或字幕文件格式

#### 参数示例
输出视频格式
```
{
    "MediaURL": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/video.mp4"
}
```
输出字幕格式
```
{
    "MediaURL": "https://your-bucket.oss-cn-shanghai.aliyuncs.com/subtitle.srt"
}
```',
    ),
    'GetSmartHandleJob' => 
    array (
      'summary' => '获取智能任务结果，可以根据任务ID，获取智能任务信息及执行结果。
本接口仅支持查询近一年的剪辑任务数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务Id',
            'description' => '任务Id',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求Id',
                'description' => '请求Id。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'title' => '任务Id',
                'description' => '任务Id。',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'Output' => 
              array (
                'title' => '任务结果',
                'description' => '任务结果。',
                'type' => 'string',
                'example' => '{}',
              ),
              'JobResult' => 
              array (
                'description' => '任务结果',
                'type' => 'object',
                'properties' => 
                array (
                  'MediaId' => 
                  array (
                    'title' => '媒资Id',
                    'description' => '媒资Id',
                    'type' => 'string',
                    'example' => '****20b48fb04483915d4f2cd8ac****',
                  ),
                  'AiResult' => 
                  array (
                    'title' => '智能分析结果',
                    'description' => '智能分析结果',
                    'type' => 'string',
                    'example' => '拆条或智能标签信息',
                  ),
                  'Usage' => 
                  array (
                    'description' => 'Token使用量，仅在关键词扩写任务会返回',
                    'type' => 'string',
                    'example' => '{"total_tokens":100}',
                  ),
                ),
              ),
              'State' => 
              array (
                'title' => '任务状态',
                'description' => '任务状态。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'Finished' => '执行成功',
                  'Failed' => '执行失败',
                  'Executing' => '执行中',
                  'Created' => '任务提交成功',
                ),
                'example' => 'Finished',
              ),
              'UserData' => 
              array (
                'title' => '用户自定义信息',
                'description' => '用户自定义信息。',
                'type' => 'string',
                'example' => '{"user":"data"}',
              ),
              'SmartJobInfo' => 
              array (
                'title' => '智能任务信息',
                'description' => '智能任务信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Title' => 
                  array (
                    'title' => '任务标题',
                    'description' => '任务标题。',
                    'type' => 'string',
                    'example' => '测试标题',
                  ),
                  'Description' => 
                  array (
                    'title' => '任务描述',
                    'description' => '任务描述。',
                    'type' => 'string',
                    'example' => '测试描述',
                  ),
                  'UserId' => 
                  array (
                    'title' => 'userid',
                    'description' => 'userid。',
                    'type' => 'string',
                    'example' => '1974526429******',
                  ),
                  'InputConfig' => 
                  array (
                    'title' => '输入参数',
                    'description' => '输入参数。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InputFile' => 
                      array (
                        'title' => 'OSS地址 或 内容库素材ID',
                        'description' => 'OSS地址或内容库素材ID。',
                        'type' => 'string',
                        'example' => 'oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4 或 ******11-DB8D-4A9A-875B-275798******',
                      ),
                    ),
                  ),
                  'OutputConfig' => 
                  array (
                    'title' => '输出配置',
                    'description' => '输出配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Bucket' => 
                      array (
                        'title' => 'OSS Bucket',
                        'description' => 'OSS Bucket',
                        'type' => 'string',
                        'example' => 'test-bucket',
                      ),
                      'Object' => 
                      array (
                        'title' => 'OSS Object',
                        'description' => 'OSS Object',
                        'type' => 'string',
                        'example' => 'test-object',
                      ),
                    ),
                  ),
                  'CreateTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2020-12-26T04:11:10Z',
                  ),
                  'ModifiedTime' => 
                  array (
                    'title' => '修改时间',
                    'description' => '修改时间。',
                    'type' => 'string',
                    'example' => '2020-12-26T04:11:10Z',
                  ),
                  'JobType' => 
                  array (
                    'title' => '任务类型',
                    'description' => '任务类型。',
                    'type' => 'string',
                    'example' => 'ASR',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"Output\\": \\"{}\\",\\n  \\"JobResult\\": {\\n    \\"MediaId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n    \\"AiResult\\": \\"拆条或智能标签信息\\",\\n    \\"Usage\\": \\"{\\\\\\"total_tokens\\\\\\":100}\\"\\n  },\\n  \\"State\\": \\"Finished\\",\\n  \\"UserData\\": \\"{\\\\\\"user\\\\\\":\\\\\\"data\\\\\\"}\\",\\n  \\"SmartJobInfo\\": {\\n    \\"Title\\": \\"测试标题\\",\\n    \\"Description\\": \\"测试描述\\",\\n    \\"UserId\\": \\"1974526429******\\",\\n    \\"InputConfig\\": {\\n      \\"InputFile\\": \\"oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4 或 ******11-DB8D-4A9A-875B-275798******\\"\\n    },\\n    \\"OutputConfig\\": {\\n      \\"Bucket\\": \\"test-bucket\\",\\n      \\"Object\\": \\"test-object\\"\\n    },\\n    \\"CreateTime\\": \\"2020-12-26T04:11:10Z\\",\\n    \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\",\\n    \\"JobType\\": \\"ASR\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSmartHandleJobResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <JobId>****20b48fb04483915d4f2cd8ac****</JobId>\\n    <Output>{}</Output>\\n    <State>Finished</State>\\n    <UserData>{\\"user\\":\\"data\\"}</UserData>\\n    <SmartJobInfo>\\n        <Title>测试标题</Title>\\n        <Description>测试描述</Description>\\n        <UserId>1974526429******</UserId>\\n        <InputConfig>\\n            <InputFile>oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4 或 ******11-DB8D-4A9A-875B-275798******</InputFile>\\n        </InputConfig>\\n        <OutputConfig>\\n            <Bucket>test-bucket</Bucket>\\n            <Object>test-object</Object>\\n        </OutputConfig>\\n        <CreateTime>2020-12-26T04:11:10Z</CreateTime>\\n        <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n        <JobType>ASR</JobType>\\n    </SmartJobInfo>\\n</GetSmartHandleJobResponse>","errorExample":""}]',
      'title' => '获取智能任务结果',
      'responseParamsDescription' => '每一种类型的智能任务在获取执行结果时返回内容在格式上有所不同，以下为您展示各种智能任务执行结果的具体示例。
## ASR智能字幕任务
```
{
  "RequestId": "******2D-443C-5043-B0E4-867070******",
  "JobId": "******042d5e4db6866f6289d1******",
  "State": "Finished",
  "SmartJobInfo": {
    "JobType": "ASR",
    "ModifiedTime": "2022-01-21T06:15:08Z",
    "CreateTime": "2022-01-21T06:15:02Z",
    "Title": "default_title_2022-01-21T06:15:02Z",
    "InputConfig": {
      "JobParameters": "{\\"duration\\":\\"00:30:00\\",\\"start_time\\":\\"00:00:00\\",\\"request_params\\":\\"&enable_word_level_result=true\\"}",
      "InputFile": "oss://your-bucket.oss-cn-shanghai.aliyuncs.com/your-video.mp4"
    }
  },
  "JobResult": {
    "AiResult": "[{\\"content\\":\\"提起\\",\\"from\\":0.0,\\"to\\":0.846},{\\"content\\":\\"现在可以说是红的发紫了\\",\\"from\\":0.846,\\"to\\":3.386},{\\"content\\":\\"常常票价很高\\",\\"from\\":3.386,\\"to\\":4.402},{\\"content\\":\\"但是一开手就被疯抢一空\\",\\"from\\":4.402,\\"to\\":6.265},{\\"content\\":\\"还参加各种相声综艺节目点评新人表演演员已经\\",\\"from\\":6.265,\\"to\\":10.33}]"
  }
}
```

## 智能语音任务
```
{
  "RequestId": "******2D-443C-5043-B0E4-867070******",
  "JobId": "******042d5e4db6866f6289d1******",
  "State": "Finished",
  "SmartJobInfo": {
    "Title": "default_title_2022-01-21T06:15:07Z",
    "JobType": "TextToSpeech",
    "CreateTime": "2022-01-21T06:15:07Z",
    "ModifiedTime": "2022-01-21T06:15:07Z",
    "InputConfig": {
      "InputFile": "提起，现在可以说是红的发紫了，常常票价很高，但是一开手就被疯抢一空，还参加各种相声综艺节目点评新人表演演员已经"
    },
    "EditingConfig": "{\\"format\\":\\"MP3\\",\\"pitch_rate\\":0,\\"sample_rate\\":16000,\\"speech_rate\\":0,\\"voice\\":\\"Siqi\\",\\"volume\\":50}",
    "OutputConfig": {
      "Bucket": "your-bucket",
      "Object": "your-audio"
    }
  },
  "JobResult": {
    "MediaId": "******bf47c94e82b3b2014361******",
    "AiResult": "[{\\"content\\":\\"提起\\",\\"from\\":0.0,\\"to\\":0.846},{\\"content\\":\\"现在可以说是红的发紫了\\",\\"from\\":0.846,\\"to\\":3.386},{\\"content\\":\\"常常票价很高\\",\\"from\\":3.386,\\"to\\":4.402},{\\"content\\":\\"但是一开手就被疯抢一空\\",\\"from\\":4.402,\\"to\\":6.265},{\\"content\\":\\"还参加各种相声综艺节目点评新人表演演员已经\\",\\"from\\":6.265,\\"to\\":10.33}]"
  }
}
```

## 关键词扩写任务
```
{
	"RequestId":"******AC-5A01-1116-87A4-BF86F2******",
	"UserData":"{\\"NotifyAddress\\":\\"https://****\\"}",
	"JobResult":{
		"AiResult":"[\\"新开店蛋糕，选用纯正动物奶油，口感醇厚如丝般顺滑，每一口都是甜蜜的惊喜，让味蕾在新鲜与纯粹中翩翩起舞！\\",\\"探索甜品新世界，我们的新开店蛋糕精选优质动物奶油，低甜不腻，层次丰富，每一款都承载着匠心独运的甜蜜故事，静待您来品味。\\",\\"献给懂生活的你，新开业蛋糕店，严选动物奶油，拒绝人工添加，纯正奶香四溢，轻盈绵密，每一口都是对美好生活的独特礼赞。\\"]",
    "Usage": "{\\"total_tokens\\":200}"
	},
	"State":"Finished",
	"JobId":"******8c784f461db57c99c9d9******",
	"SmartJobInfo":{
		"JobType":"TextGenerate",
		"ModifiedTime":"2024-01-17T08:46:17Z",
		"CreateTime":"2024-01-17T08:46:17Z",
		"Title":"default_title_2024-01-17T08:46:17Z",
		"EditingConfig":"{\\"Type\\":\\"MarketingCopy\\",\\"GenerateConfig\\":\\"{\\\\\\"keywords\\\\\\":\\\\\\"新开店蛋糕，动物奶油\\\\\\",\\\\\\"textLength\\\\\\":100,\\\\\\"targetCount\\\\\\":3}\\"}"
	}
}
```',
    ),
    'DeleteSmartJob' => 
    array (
      'summary' => '用户可以根据任务ID删除智能任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务id，多个任务id用英文逗号分割',
            'description' => '任务ID，多个任务ID用英文逗号分割。',
            'type' => 'string',
            'required' => false,
            'example' => '******b48fb04483915d4f2cd8******,******042d5e4db6866f6289d1******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => 'RequestId',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSmartJobResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n</DeleteSmartJobResponse>","errorExample":""}]',
      'title' => '删除智能任务',
    ),
    'ListSmartJobs' => 
    array (
      'summary' => '根据用户所给参数，返回所有符合条件的任务列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前开始读取的位置',
            'description' => '当前开始读取的位置',
            'type' => 'string',
            'required' => false,
            'example' => '****73f33c91-d59383e8280b****',
          ),
        ),
        1 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小。最大不超过100。  默认值：10',
            'description' => '本次请求所返回的最大记录条数。

最大值：100，默认值：10',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前页码。默认值为1。',
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'JobType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务类型',
            'description' => '任务类型',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'ASR' => 'ASR任务',
              'DynamicChart' => '动态图表任务',
              'TextToSpeech' => '智能语音任务',
            ),
            'example' => 'ASR',
          ),
        ),
        5 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序参数，默认根据创建时间倒序',
            'description' => '排序参数，默认根据创建时间倒序',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'CreationTime:Asc' => '按照创建时间正序',
              'CreationTime:Desc' => '按照创建时间倒序',
            ),
            'example' => 'CreationTime:Desc',
          ),
        ),
        6 => 
        array (
          'name' => 'JobState',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务状态',
            'description' => '任务状态',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Finished' => '执行完成',
              'Failed' => '执行失败',
              'Executing' => '任务执行中',
              'Created' => '任务已创建',
            ),
            'example' => 'Finished',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '****9262E3DA-07FA-4862-FCBB6BC61D08*****',
              ),
              'SmartJobList' => 
              array (
                'description' => '智能任务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '智能任务',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'title' => '任务Id',
                      'description' => '任务Id',
                      'type' => 'string',
                      'example' => '****20b48fb04483915d4f2cd8ac****',
                    ),
                    'Title' => 
                    array (
                      'title' => '任务标题',
                      'description' => '任务标题',
                      'type' => 'string',
                      'example' => '测试标题',
                    ),
                    'Description' => 
                    array (
                      'title' => '任务描述',
                      'description' => '任务描述',
                      'type' => 'string',
                      'example' => '测试描述',
                    ),
                    'UserId' => 
                    array (
                      'title' => '用户Id',
                      'description' => '用户Id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1084506228******',
                    ),
                    'JobType' => 
                    array (
                      'title' => '任务类型',
                      'description' => '任务类型',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'ASR' => 'ASR任务',
                        'DynamicChart' => '动态图表任务',
                        'TextToSpeech' => '智能语音任务',
                      ),
                      'example' => 'ASR',
                    ),
                    'EditingConfig' => 
                    array (
                      'title' => '输入配置',
                      'description' => '输入配置',
                      'type' => 'string',
                      'example' => '{"AudioConfig":{},"InputConfig":""}',
                    ),
                    'UserData' => 
                    array (
                      'title' => '用户自定义字段',
                      'description' => '用户自定义字段',
                      'type' => 'string',
                      'example' => '{"user":"data"}',
                    ),
                    'JobState' => 
                    array (
                      'title' => '任务状态',
                      'description' => '任务状态',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Finished' => '执行完成',
                        'Failed' => '执行失败',
                        'Executing' => '任务执行中',
                        'Created' => '任务已创建',
                      ),
                      'example' => 'Finished',
                    ),
                    'CreateTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-12-26T04:11:10Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'title' => '最后修改时间',
                      'description' => '最后修改时间',
                      'type' => 'string',
                      'example' => '2020-12-26T04:11:10Z',
                    ),
                    'InputConfig' => 
                    array (
                      'title' => '任务输入配置',
                      'description' => '任务输入配置',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InputFile' => 
                        array (
                          'title' => '文件信息',
                          'description' => '文件信息',
                          'type' => 'string',
                          'example' => 'oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4',
                        ),
                        'Keyword' => 
                        array (
                          'title' => '关键词信息',
                          'description' => '关键词信息',
                          'type' => 'string',
                          'example' => '测试关键词',
                        ),
                      ),
                    ),
                    'OutputConfig' => 
                    array (
                      'title' => '任务输出配置',
                      'description' => '任务输出配置',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Bucket' => 
                        array (
                          'title' => 'OSS Bucket',
                          'description' => 'OSS Bucket',
                          'type' => 'string',
                          'example' => 'test-bucket',
                        ),
                        'Object' => 
                        array (
                          'title' => 'OSS Object',
                          'description' => 'OSS Object',
                          'type' => 'string',
                          'example' => 'test-object',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'title' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
                'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
                'type' => 'string',
                'example' => 'CBB6BC61D08',
              ),
              'MaxResults' => 
              array (
                'title' => '本次请求所返回的最大记录条数，最后一页前每页记录条数为MaxResults取值。  例如：  正例：10,10,5，反例：10,5,10',
                'description' => '本次请求所返回的最大记录条数，最后一页前每页记录条数为MaxResults取值。  例如：  正例：10,10,5，反例：10,5,10',
                'type' => 'string',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'title' => '本次请求条件下的数据总量，此参数为可选参数，默认可不返回。',
                'description' => '本次请求条件下的数据总量，此参数为可选参数，默认可不返回。',
                'type' => 'string',
                'example' => '110',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****9262E3DA-07FA-4862-FCBB6BC61D08*****\\",\\n  \\"SmartJobList\\": [\\n    {\\n      \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n      \\"Title\\": \\"测试标题\\",\\n      \\"Description\\": \\"测试描述\\",\\n      \\"UserId\\": 0,\\n      \\"JobType\\": \\"ASR\\",\\n      \\"EditingConfig\\": \\"{\\\\\\"AudioConfig\\\\\\":{},\\\\\\"InputConfig\\\\\\":\\\\\\"\\\\\\"}\\",\\n      \\"UserData\\": \\"{\\\\\\"user\\\\\\":\\\\\\"data\\\\\\"}\\",\\n      \\"JobState\\": \\"Finished\\",\\n      \\"CreateTime\\": \\"2020-12-26T04:11:10Z\\",\\n      \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\",\\n      \\"InputConfig\\": {\\n        \\"InputFile\\": \\"oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4\\",\\n        \\"Keyword\\": \\"测试关键词\\"\\n      },\\n      \\"OutputConfig\\": {\\n        \\"Bucket\\": \\"test-bucket\\",\\n        \\"Object\\": \\"test-object\\"\\n      }\\n    }\\n  ],\\n  \\"NextToken\\": \\"CBB6BC61D08\\",\\n  \\"MaxResults\\": \\"10\\",\\n  \\"TotalCount\\": \\"110\\"\\n}","errorExample":""},{"type":"xml","example":"<ListSmartJobsResponse>\\n    <RequestId>****9262E3DA-07FA-4862-FCBB6BC61D08*****</RequestId>\\n    <SmartJobList>\\n        <JobId>****20b48fb04483915d4f2cd8ac****</JobId>\\n        <Title>测试标题</Title>\\n        <Description>测试描述</Description>\\n        <JobType>ASR</JobType>\\n        <EditingConfig>{\\"AudioConfig\\":{},\\"InputConfig\\":\\"\\"}</EditingConfig>\\n        <UserData>{\\"user\\":\\"data\\"}</UserData>\\n        <JobState>Finished</JobState>\\n        <CreateTime>2020-12-26T04:11:10Z</CreateTime>\\n        <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n        <InputConfig>\\n            <InputFile>oss://example-bucket.oss-cn-shanghai.aliyuncs.com/example.mp4</InputFile>\\n            <Keyword>测试关键词</Keyword>\\n        </InputConfig>\\n        <OutputConfig>\\n            <Bucket>test-bucket</Bucket>\\n            <Object>test-object</Object>\\n        </OutputConfig>\\n    </SmartJobList>\\n    <NextToken>CBB6BC61D08</NextToken>\\n    <MaxResults>10</MaxResults>\\n    <TotalCount>110</TotalCount>\\n</ListSmartJobsResponse>","errorExample":""}]',
      'title' => '获取任务列表',
    ),
    'ListSmartSysAvatarModels' => 
    array (
      'summary' => '获取系统数字人列表，支持分页查询。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '172912',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。默认值为1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，每页显示条数。默认值为10，最大值为100。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SdkVersion',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****63E8B7C7-4812-46AD-0FA56029AC86****',
              ),
              'SmartSysAvatarModelList' => 
              array (
                'description' => '数字人信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数字人信息列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AvatarName' => 
                    array (
                      'description' => '数字人名称',
                      'type' => 'string',
                      'example' => '云乔',
                    ),
                    'AvatarId' => 
                    array (
                      'description' => '数字人Id，用于提交单独数字人渲染任务或者智能时间线中使用数字人形象',
                      'type' => 'string',
                      'example' => 'yunqiao',
                    ),
                    'CoverUrl' => 
                    array (
                      'description' => '数字人示例封面地址',
                      'type' => 'string',
                      'example' => 'http://ice-pub-media.myalicdn.com/smart/avatarModel/coverDemo/yunqiao.mp4',
                    ),
                    'VideoUrl' => 
                    array (
                      'description' => '数字人示例视频地址',
                      'type' => 'string',
                      'example' => 'http://ice-pub-media.myalicdn.com/smart/avatarModel/videoDemo/yunqiao.mp4',
                    ),
                    'Width' => 
                    array (
                      'description' => '视频分辨率宽。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1080',
                    ),
                    'Height' => 
                    array (
                      'description' => '视频分辨率高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1920',
                    ),
                    'Bitrate' => 
                    array (
                      'description' => '视频码率。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '4000',
                    ),
                    'OutputMask' => 
                    array (
                      'description' => '是否支持渲染人像遮罩。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'title' => '虚拟人总数',
                'description' => '系统数字人形象总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"****63E8B7C7-4812-46AD-0FA56029AC86****\\",\\n  \\"SmartSysAvatarModelList\\": [\\n    {\\n      \\"AvatarName\\": \\"云乔\\",\\n      \\"AvatarId\\": \\"yunqiao\\",\\n      \\"CoverUrl\\": \\"http://ice-pub-media.myalicdn.com/smart/avatarModel/coverDemo/yunqiao.mp4\\",\\n      \\"VideoUrl\\": \\"http://ice-pub-media.myalicdn.com/smart/avatarModel/videoDemo/yunqiao.mp4\\",\\n      \\"Width\\": 1080,\\n      \\"Height\\": 1920,\\n      \\"Bitrate\\": 4000,\\n      \\"OutputMask\\": false\\n    }\\n  ],\\n  \\"TotalCount\\": 4\\n}","type":"json"}]',
      'title' => '获取系统数字人列表',
    ),
    'ListSmartVoiceGroups' => 
    array (
      'summary' => '列出智能语音发音人信息，包括发音人名称、性别、示例音频，列表按照场景进行分组。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '147883',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '627B30EB-1D0A-5C6D-8467-431626E0FA10',
              ),
              'VoiceGroups' => 
              array (
                'description' => '发音人组结果集',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '发音人组',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'description' => '发音人组名称',
                      'type' => 'string',
                      'example' => '超高清',
                    ),
                    'VoiceList' => 
                    array (
                      'description' => '发音人列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '发音人',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'description' => '发音人名称',
                            'type' => 'string',
                            'example' => '知甜',
                          ),
                          'VoiceType' => 
                          array (
                            'description' => '发音人类型',
                            'type' => 'string',
                            'enumValueTitles' => 
                            array (
                              'Male' => 'Male',
                              'Female' => 'Female',
                              'Boy' => 'Boy',
                              'Girl' => 'Girl',
                            ),
                            'example' => 'Female',
                          ),
                          'Voice' => 
                          array (
                            'description' => '发音人id',
                            'type' => 'string',
                            'example' => 'zhitian',
                          ),
                          'Desc' => 
                          array (
                            'description' => '发音人描述',
                            'type' => 'string',
                            'example' => '甜美女声',
                          ),
                          'Tag' => 
                          array (
                            'description' => '发音人类型标签',
                            'type' => 'string',
                            'example' => '通用场景',
                          ),
                          'Remark' => 
                          array (
                            'description' => '发音人备注',
                            'type' => 'string',
                            'example' => '中文及中英文混合场景',
                          ),
                          'VoiceUrl' => 
                          array (
                            'description' => '发音人示例音频',
                            'type' => 'string',
                            'example' => 'https://***.com/zhitian.mp3',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"627B30EB-1D0A-5C6D-8467-431626E0FA10\\",\\n  \\"VoiceGroups\\": [\\n    {\\n      \\"Type\\": \\"超高清\\",\\n      \\"VoiceList\\": [\\n        {\\n          \\"Name\\": \\"知甜\\",\\n          \\"VoiceType\\": \\"Female\\",\\n          \\"Voice\\": \\"zhitian\\",\\n          \\"Desc\\": \\"甜美女声\\",\\n          \\"Tag\\": \\"通用场景\\",\\n          \\"Remark\\": \\"中文及中英文混合场景\\",\\n          \\"VoiceUrl\\": \\"https://***.com/zhitian.mp3\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '列出智能语音发音人信息',
    ),
    'SubmitSmarttagJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频标题，支持中英文、数字、中划线（-），不能以特殊符号开头，长度不能超过256B。

',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'example-title-****	
',
          ),
        ),
        1 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '视频内容描述，支持中英文、数字、中划线（-），不能以特殊符号开头，长度不能超过1KB。

',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'example content ****	
',
          ),
        ),
        2 => 
        array (
          'name' => 'ContentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已废弃',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'ContentAddr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已废弃',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Params',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '额外的请求参数，使用JSON字符串表示，例如：{"needAsrData":true, "needOcrData":false}。字段说明：

- needAsrData：boolean值，分析结果中是否需要包含原始ASR结果，默认false（不包含），可选true（包含）

- needOcrData：boolean值，分析结果中是否需要包含原始OCR结果，默认false（不包含），可选true（包含）

- needMetaData：boolean值，分析结果中是否需要包含Meta信息，默认false（不包含），可选true（包含）

- nlpParams: JsonObject值，nlp算子的输入参数，默认为空（不使用nlp算子），详见请求参数补充说明。',
            'type' => 'string',
            'required' => false,
            'example' => '{"needAsrData":true, "needOcrData":false, "nlpParams":{"sourceLanguage":"cn"}}
',
          ),
        ),
        5 => 
        array (
          'name' => 'NotifyUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Callback路径，目前仅支持http/https。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://example.com/endpoint/aliyun/ai?id=76401125000***',
          ),
        ),
        6 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过MNS回调时透传回来的信息，长度不能超过1KB。如何设置MNS回调队列，请参见更新管道。

',
            'type' => 'string',
            'required' => false,
            'example' => '{“a”:"test"}',
          ),
        ),
        7 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'input',
            'description' => 'input',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '媒体类型，一下两种类型二选一：

- OSS

- Media

- URL',
                'type' => 'string',
                'required' => false,
                'example' => 'Media',
              ),
              'Media' => 
              array (
                'description' => '上面的Type为OSS的话，写OSS地址，例如：OSS://test-bucket/video/202208/test.mp4

Type为Media的话写mediaId：c5c62d8f0361337cab312dce8e77dc6d

Type为URL的话写http url，例如：https://zc-test.oss-cn-shanghai.aliyuncs.com/test/unknowFace.mp4',
                'type' => 'string',
                'required' => false,
                'example' => 'c5c62d8f0361337cab312dce8e77dc6d',
              ),
            ),
            'required' => false,
            'docRequired' => true,
          ),
        ),
        8 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板ID用于指定分析算法，模板相关操作参见[统一模版配置](~~445702~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '39f8e0bc005e4f309379701645f4
',
          ),
        ),
        9 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'scheduleConfig',
            'description' => 'scheduleConfig',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'description' => '道ID，用于区分业务，绑定消息通知。表示默认管道。默认管道并发为2，需要提升并发数请提交工单。',
                'type' => 'string',
                'required' => false,
                'example' => 'acdbfe4323bcfdae',
              ),
              'Priority' => 
              array (
                'description' => '优先级，暂时未实现，可以不填或随便填。',
                'type' => 'string',
                'required' => false,
                'example' => '4',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'description' => '智能标签作业ID。建议您保存此ID便于后续调用其他接口时使用。

',
                'type' => 'string',
                'example' => '****d80e4e4044975745c14b****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****d80e4e4044975745c14b****\\"\\n}","type":"json"}]',
      'title' => '提交智能标签作业',
      'summary' => '提交智能标签作业。',
      'description' => '通过本接口提交智能标签作业时，需要先通过模板配置分析类型。具体操作请参见添加模板。
智能标签功能，目前开通的地域为华北2（北京）、华东2（上海）、华东1（杭州），其他地域暂不支持。
目前智能标签管道默认并发数为2，如有更高需求，请提交工单联系阿里云客服进行评估配置。',
      'requestParamsDescription' => '### nlpParams说明
| 功能 | 名称 | 类型 | 必填 | 描述 | 示例值 |
| --- | --- | --- | --- | --- | --- |
| | nlpParams | object | 是 | 该参数包含了所有nlp处理的相关参数，template分析类型包含nlp的时候必填，否则任务失败。 | {"sourceLanguage":"cn"}|
|  转录| sourceLanguage | string | 是 | 转写使用的源语言模型，可选：cn（中文）、en（英文）、 yue（粤语）、 fspk（中英文自由说）。 | "cn" |
|  | diarizationEnabled | boolean | 否 | 是否开启说话人分离功能，默认false。 | true |
|  | speakerCount | integer | 否 | 设置说话人分离参数。 不设置：不使用说话人角色区分。0：说话人角色区分结果为不定人数。2：说话人角色区分结果为2人。 | 2 |
| 摘要 | summarizationEnabled | boolean | 否 | 是否启用摘要功能，开启后会可以生成全文摘要、发言人总结等结果。| true |
|  | summarizationTypes | string | 否 | 开启摘要功能时，需传入期望的摘要类型：Paragraph（全文摘要）、Conversational（发言人总结）、QuestionsAnswering（问答摘要）。| "Paragraph,Conversational,QuestionsAnswering" |
| 翻译 | translationEnabled | boolean | 否 | 是否启用翻译功能。 | true |
|  | targetLanguages | string | 否 | 开启翻译功能后的目标语言，可选：cn（中文）、en（英文）、 yue（粤语）、 fspk（中英文自由说）。| "en,cn" |
| 章节识别 | autoChaptersEnabled | boolean | 否 | 是否启用章节速览功能，结果包含章节标题、章节摘要。 | true |
| 智能纪要 | meetingAssistanceEnabled | boolean | 否 | 是否开启会议协助功能，结果包含分类、关键词、关键句、待办事项。 | true |',
      'extraInfo' => '访问错误中心查看更多错误码。',
    ),
    'QuerySmarttagJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的智能标签作业ID。可以从提交智能标签作业的返回参数中获取。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '88c6ca184c0e47098a5b665e2****',
          ),
        ),
        1 => 
        array (
          'name' => 'Params',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '额外的请求参数，使用JSON字符串表示，例如：{"labelResultType":"auto"}。其中，labelResultType为String类型，可取值：

- auto：机器打标结果

- hmi：人机协同结果',
            'type' => 'string',
            'required' => false,
            'example' => '{"labelResultType":"auto"}	
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'JobStatus' => 
              array (
                'description' => '任务状态，可取值：

- **Success**：处理成功。

- **Fail**：处理失败。

- **Processing**：处理中。

- **Submitted**：已提交等待处理。
',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'UserData' => 
              array (
                'description' => '通过MNS回调时透传回来的信息。消息格式请参见下文回调消息格式定义。

',
                'type' => 'string',
                'example' => '{"userId":"123432412831"}',
              ),
              'Results' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '分析结果对象数组。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '分析结果的类型。

- [ ] - 标签1.0分析结果类型：


1. TextLabel：文本标签
2. VideoLabel：视频标签
3. ASR：语音识别原始结果（默认不返回）
4. OCR：文字识别原始结果（默认不返回）
5. NLP：NLP处理结果（默认不返回）


- [ ] - 标签2.0分析结果类型：

1. CPVLabel
2. Meta：视频标题等信息（默认不返回）

- [ ] - 标签2.0-custom分析结果类型：

1. CPVLabel
2. Meta：视频标题等信息（默认不返回）',
                          'type' => 'string',
                          'example' => 'Meta',
                        ),
                        'Data' => 
                        array (
                          'description' => '分析结果的具体数据，以JSON字符串表示。不同Type的数据结构见下文Result参数说明。

',
                          'type' => 'string',
                          'example' => '{"title":"example-title-****"}	
',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"JobStatus\\": \\"Success\\",\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"UserData\\": \\"{\\\\\\"userId\\\\\\":\\\\\\"123432412831\\\\\\"}\\",\\n  \\"Results\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Type\\": \\"Meta\\",\\n        \\"Data\\": \\"{\\\\\\"title\\\\\\":\\\\\\"example-title-****\\\\\\"}\\\\t\\\\n\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '智能标签任务查询接口',
      'summary' => '查询智能标签任务。',
      'responseParamsDescription' => '**回调消息格式定义**
当智能标签任务执行状态改变时，mps会发送消息到用户指定的queue中（如何指定回调queue详见mps的更新管道接口）。消息体是一个JSON字符串，包含字段如下：
| 名称          | 类型   |描述|
|---------------|--------|-----------|
|Type |String |固定字符串“smarttag”，表示智能标签任务 |
|JobId | String|任务唯一ID |
|State | String| 任务当前状态，与QuerySmarttagJob中的JobStatus一致|
|State | String|任务当前状态，与QuerySmarttagJob中的JobStatus一致|
|UserData |String | 用户在SubmitSmarttagJob中传入的UserData|
|UserData |String |用户在SubmitSmarttagJob中传入的UserData|

**Result参数说明**

**VideoLabel**数据结构
| 名称          | 类型   |描述|
|---------------|--------|-----------|
| persons|JSONArray | 检测到的人物结果|
|persons.name |String | 识别到的人物名称|
| persons.category| String|人物类型，取值如下：`celebrity`（名人）；`politician`（政治人物）；`sensitive`（敏感人物）；`unknown`（未知人物）；自定义人物库ID（识别到的人物为自定义人物时返回） |
|persons.ratio | double| 人物出现率，取值：0~1|
| persons.occurrences| JSONArray| 人物出场详细信息|
|persons.occurrences.score | double| 置信度得分|
|persons.occurrences.from | double|检测到人物的起始时间，单位（秒） |
|persons.occurrences.to |double |检测到人物的结束时间，单位（秒） |
| persons.occurrences.position|JSONObject |人脸坐标 |
|persons.occurrences.position.leftTop |int[] |左上角x，y坐标 |
| persons.occurrences.position.rightBottom|int[] |右下角x，y坐标 |
| persons.occurrences.timestamp| double|人脸坐标所在的时间戳，单位为秒 |
|persons.occurrences.scene |String |人物镜头，包括：`closeUp`（特写）；`medium-closeUp`（近景）；`medium`（中景）；`medium-long`（全景） |
|tags | JSONArray| 检测到的物体场景等标签，详见下表举例|
|tags.mainTagName |String |主标签 |
| tags.subTagName| String| 子标签|
|tags.ratio |double |出现率，取值：0~1 |
|tags.occurrences | JSONArray|出现详细信息 |
|tags.occurrences.score |double |置信度得分 |
|tags.occurrences.from | double|起始时间，单位（秒） |
|tags.occurrences.to |double | 结束时间，单位（秒）|
| classifications| JSONArray| 视频分类信息|
|classifications.score |double |置信度得分 |
| classifications.category1| String|一级分类，比如：生活、动漫、汽车等等 |
|classifications.category2 |String | 二级分类，比如生活下面细分为：健康、家居等等|

视频Tags标签举例说明
| mainTagName|subTagName |
|---------------|--------|
|节目 | 比如：爸爸去哪儿、欢乐喜剧人等|
|人物角色 | 比如：医生、护士、教师等|
| 物体|比如：钢琴、水杯、桌子、西红柿炒鸡蛋、小汽车、化妆品等 |
| 标识| 比如：CCTV1、CCTV2、优酷、东方卫视等|
| 动作事件| 比如：跳舞、接吻、拥抱、会晤、唱歌、打电话、骑马、打斗等|
|地域 |比如：北京天安门、自由女神像、乐山大佛、中国、美国等 |
| 场景| 比如：卧室、地铁站、梯田、海滩、沙漠等|

**ImageLabel**数据结构
|名称 |类型 |描述|
|----------|--------|----|
|persons | JSONArray| 检测到的人物结果|
|persons.name | String|识别到的人物名称 |
|persons.category | String|人物类型，取值如下：celebrity（名人）；politician（政治人物）；sensitive（敏感人物） |
|persons.score | double|人物置信度得分 |
| persons.position| JSONObject| 人脸坐标|
| persons.position.leftTop| int[]| 左上角x，y坐标|
| persons.position.rightBottom|int[] |右下角x，y坐标 |
|persons.scene | String|人物镜头，包括：closeUp（特写）；medium-closeUp（近景）；medium（中景）；medium-long（全景） |
| tags|JSONArray |检测到的物体场景等标签，详见下表举例 |
| tags.mainTagName|String |主标签 |
|tags.subTagName | String|子标签 |
|tags.score |double |置信度得分 |

图片tags标签举例说明
| mainTagName|subTagName |
|---------------|--------|
|人物角色| 比如：医生、护士、教师等|
|地域 | 比如：北京天安门、自由女神像、乐山大佛、中国、美国等|
| 动作事件|比如：讲话等 |
| 标识| 比如：CCTV1、CCTV2、优酷、东方卫视等|
| 动作事件| 比如：跳舞、接吻、拥抱、会晤、唱歌、打电话、骑马、打斗等|
|物体 |比如：钢琴、水杯、桌子、西红柿炒鸡蛋、小汽车、化妆品等 |
| 场景| 比如：卧室、地铁站、梯田、海滩、沙漠等|

TextLabel数据结构（来源于ASR和OCR）
|名称 |类型 |描述|
|----------|--------|----|
|tags |JSONArray |文本标签信息，详见下表举例 |
| tags.name| String|标签类别 |
|tags.value |String |标签值，可能有多个标签值，以半角逗号（,）分割 |

图片tags标签举例说明
| name|value |
|---------------|--------|
|地域| 比如：北京天安门、自由女神像、乐山大佛、中国、美国等|
|组织机构 |比如：中国生动物保护协会、中央广播电视台等 |
|标识 | 比如：耐克、李宁|
|关键词 |比如：中坚力量 |

**CPVLabel**数据结构
- cates：类目（一级类目、二级类目、三级类目）
- entities：类目属性（带有知识图谱信息）
- hotwords：热点词（用户关注的名单）
- freeTags：自由标签（关键词）

| 名称          | 类型   |示例值|说明|
|---------------|--------|-----------|------|
|type|String|hmi|结果类型。取值：hmi（人机协同结果）、autp（机器打标结果）|
|cates|JSONArray|-|分类类目结果|
|cates.labelLevel1|String|旅游|一级标签|
| cates.labelLevel2 |String  | 旅游风光 |二级标签  |
| cates.label | String | "" |标签名称，算法可能返回空  |
| cates.appearanceProbability | double | 0.96 | 出现率 |
|cates.detailInfo  |JSONArray  |-  |  -|
| cates.detailInfo.score |  double|0.9  | 置信度 |
|cates.detailInfo.startTime  |double  | 0.021 | 开始时间 |
|cates.detailInfo.endTime |double |29.021 |结束时间 |
| entities| JSONArray|- | -|
|entities.labelLevel1 |String | 地域|一级标签 |
| entities.labelLevel2| String| 地标|二级标签 |
| entities.label|String | 黄果树瀑布| 标签名称|
|entities.appearanceProbability | double|0.067 |出现率 |
|entities.knowledgeInfo |String |{"name": "黄果树瀑布", "nameEn": "Huangguoshu Waterfall", "description": "亚洲四大瀑布之一"} |知识图谱信息，全部字段后附表：影视综IP图谱、音乐图谱、人物图谱、地标图谱、物体图谱。 |
| entities.detailInfo|JSONArray |- |- |
| entities.detailInfo.score| double|0.33292606472969055 | 置信度|
|entities.detailInfo.startTime |double |6.021 | 开始时间|
|entities.detailInfo.endTime |double |8.021 | 结束时间|
|entities.detailInfo.trackData |JSONArray |- |实体标签结构化信息 |
| entities.detailInfo.trackData.score| double|0.32 | 置信度|
|entities.detailInfo.trackData.bbox |integer[] | 23，43，45，67| 坐标框|
|entities.detailInfo.trackData.timestamp | double| 7.9|时间戳 |
|hotwords |JSONArray | -|- |
|hotwords.labelLevel1 | String|关键词 | 一级标签|
|hotwords.labelLevel1 | String|关键词 |二级标签 |
|hotwords.labelLevel2 |String |"" |二级标签 |
|hotwords.label |String |中国气象局 |看点词内容 |
| hotwords.appearanceProbability|double | 0.96|出现率 |
|hotwords.detailInfo | JSONArray| | |
| hotwords.detailInfo.score|double | 1.0| 置信度|
|hotwords.detailInfo.startTime | double|0.021 |开始时间 |
|hotwords.detailInfo.endTime | double| 29.021|结束时间 |
| freeTags|JSONArray | | |
|freeTags.labelLevel1 |String |关键词 |一级标签 |
|freeTags.labelLevel2 | String| ""| 二级标签|
|freeTags.label |String |中央气象台 |看点词内容 |
|freeTags.appearanceProbability |double |0.96 | 出现率|
|freeTags.detailInfo | JSONArray| | |
|freeTags.detailInfo.score |double |0.9 | 置信度|
| freeTags.detailInfo.startTime|double | 0.021| 开始时间|
|freeTags.detailInfo.endTime |double | 29.021|结束时间 |

**语音识别ASR结果**
|名称 | 类型| 描述|
|---------------|--------|-----------|
| details|JSONArray | 任务详细结果|
| details.from| double|开始时间戳，单位（秒） |
|details.to |double |结束时间戳，单位（秒） |
| details.content|String |识别出的文本内容 |

**文本识别OCR结果**
|名称 |类型 |描述 |
|---------------|--------|-----------|
|details |JSONArray |任务详细结果 |
|details.timestamp |double | 时间戳信息，单位（秒）|
|details.info | JSONArray|该时间点识别出的具体信息 |
|details.info.score |double |置信度得分 |
|details.info.position |JSONObject |文字坐标 |
|details.info.position.leftTop |int[] | 左上角x，y坐标|
|details.info.position.rightBottom |int[] |右下角x，y坐标 |
| details.info.content| String|识别出的文本内容 |

**Meta标注结果**
> 如果客户没有使用人机标注，在使用[SubmitSmarttagJob](~~163486~~)提交任务时如果指定了needMetaData，目前QuerySmarttagJob返回结果时会返回原始客户输入的标题。

|名称 | 类型|描述 |
|---------------|--------|-----------|
|title | String| 标题|

**字幕提取结果Subtitle**
|名称 |类型 |描述 |
|---------------|--------|-----------|
|details |JSONArray |任务详细结果 |
|details.allResultUrl|String|全部字幕结果URL，URL有效期为任务完成后半年内可有效访问 |
|details.chResultUrl|String|中文结果URL，URL有效期为任务完成后半年内可有效访问 |
|details.engResultUrl|String|英文结果URL，URL有效期为任务完成后半年内可有效访问|
> 字幕结果URL内容：`序号+时间段+字幕内容（每句字幕为一行）`。

**NLP处理结果**
| 参数名 | 类型 | 说明 |
| --- | --- | --- |
| transcription | object | 语音转写结果 |
| autoChapters  | object | 章节速览结果 |
| summarization | object | 大模型摘要结果 |
| meetingAssistance | object | 智能纪要结果 |
| translation | object | 文本翻译结果 |

**transcription（语音转录）**
| 参数名 | 类型 | 说明 |
| --- | --- | --- |
| transcription | object | 语音转写结果对象。 |
| transcription.paragraphs | list[] | 语音转写结构以段落形式组织的集合。 |
| transcription.paragraphs[i].paragraphId | string | 段落级别id。 |
| transcription.paragraphs[i].speakerId | string | 发言人id。 |
| transcription.paragraphs[i].words | list[] | 该段落包含的word信息。 |
| transcription.paragraphs[i].words[i].id | int | word序号，通常无须关注。 |
| transcription.paragraphs[i].words[i].sentenceId | int | 句子id，同属于一个SentenceId的word信息可以组装成一句话。 |
| transcription.paragraphs[i].words[i].start | long | 该word相对于音频起始时间的开始时间，相对时间戳，单位毫秒。 |
| transcription.paragraphs[i].words[i].end | long | 该word相对于音频起始时间的结束时间，相对时间戳，单位毫秒。 |
| transcription.paragraphs[i].words[i].text | string | word文本。 |

**summarization（全文摘要、发言人总结、提问摘要）**
| 参数名 | 类型 | 说明 |
| --- | --- | --- |
| summarization | object | 摘要结果对象，可能包含0个或多个不同摘要类型的结果。 |
| summarization.paragraphSummary | string | 全文摘要结果。 |
| summarization.conversationalSummary | list[] | 发言总结摘要结果列表。 |
| summarization.conversationalSummary[i].speakerId | string | 发言人id。 |
| summarization.conversationalSummary[i].speakerName | string | 发言人名字。 |
| summarization.conversationalSummary[i].summary | string | 该发言人对应的总结。 |
| summarization.questionsAnsweringSummary | list[] | 问答摘要结果列表。 |
| summarization.questionsAnsweringSummary[i].question | string | 问题 |
| summarization.questionsAnsweringSummary[i].sentenceIdsOfQuestion | list[] | 提炼出该问题对应的原语音转写的SentenceId列表。 |
| summarization.questionsAnsweringSummary[i].answer | string | 问题对应的答案。 |
| summarization.questionsAnsweringSummary[i].sentenceIdsOfAnswer | list[] | 总结出该答案对应的原语音转写的SentenceId列表。 |

 **translation（全文翻译）**
| 参数名 | 类型 | 说明 |
| --- | --- | --- |
| translation | object | 翻译结果对象。 |
| translation.paragraphs | list[] | 翻译结果以段落形式组织的集合，和语音识别结果报文对应。 |
| translation.paragraphs.paragraphId | string | 段落分段id标识，和语音识别结果中的ParagraphId对应。 |
| translation.paragraphs.sentences | list[] | 翻译文本集合。 |
| translation.paragraphs.sentences[i].sentenctId | long | 句子id。 |
| translation.paragraphs.sentences[i].start | long | 该段相对于音频起始时间的开始时间，相对时间戳，单位毫秒。 |
| translation.paragraphs.sentences[i].end | long | 该段相对于音频起始时间的结束时间，相对时间戳，单位毫秒。 |
| translation.paragraphs.sentences[i].text | string | 翻译文本，和语音识别结果报文对应。 |

**autoChapters（章节识别）**
| 参数名 | 类型 | 说明 |
| --- | --- | --- |
| autoChapters | list[] | 章节速览集合， 含有0个、1个或多个章节速览信息。 |
| autoChapters[i].id | int | 该章节序号。 |
| autoChapters[i].start | long | 该章节相对于音频起始时间的开始时间，相对时间戳，单位毫秒。 |
| autoChapters[i].end | long | 该章节相对于音频起始时间的结束时间，相对时间戳，单位毫秒。 |
| autoChapters[i].headline | string | 该章节的一句话标题。 |
| autoChapters[i].summary | string | 章节总结。 |

**meetingAssistance（智能纪要提取，包含关键词、关键句、待办事项提取）**
| 参数名 | 类型 | 说明 |
| --- | --- | --- |
| meetingAssistance | object | 智能纪要结果对象，可能包含0个或多个不同类型的结果。 |
| meetingAssistance.keywords | list[] | 关键词提取结果。 |
| meetingAssistance.keySentences | list[] | 关键句提取结果，也称为重点内容。 |
| meetingAssistance.keySentences[i].id | long | 关键句序号。 |
| meetingAssistance.keySentences[i].sentenceId | long | 该关键句在原ASR转写中对应的句子Id。 |
| meetingAssistance.keySentences[i].start | long | 相对于音频起始时间的开始时间，相对时间戳，单位毫秒。 |
| meetingAssistance.keySentences[i].end | long | 相对于音频起始时间的结束时间，相对时间戳，单位毫秒。 |
| meetingAssistance.keySentences[i].text | string | 关键句信息。 |
| meetingAssistance.actions | list[] | 待办内容、待办摘要的集合。 |
| meetingAssistance.actions[i].id | long | 待办序号。 |
| meetingAssistance.actions[i].sentenceId | long | 该关键句在原ASR转写中对应的句子Id。 |
| meetingAssistance.actions[i].start | long | 相对于音频起始时间的开始时间，相对时间戳，单位毫秒。 |
| meetingAssistance.actions[i].end | long | 相对于音频起始时间的结束时间，相对时间戳，单位毫秒。 |
| meetingAssistance.actions[i].text | string | 待办内容。 |
| meetingAssistance.classifications | object | 场景分类，目前只有3中场景分类。 |
| meetingAssistance.classifications.interview | float | 面试场景置信度得分。 |
| meetingAssistance.classifications.lecture | float | 演讲场景置信度得分。 |
| meetingAssistance.classifications.meeting | float | 会议场景置信度得分。 |',
    ),
    'SubmitIProductionJob' => 
    array (
      'summary' => '调用SubmitIProductionJob提交智能生产任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称，长度不超过100字符。',
            'type' => 'string',
            'required' => false,
            'example' => '测试任务',
          ),
        ),
        1 => 
        array (
          'name' => 'FunctionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要使用的算法功能名称。取值：

- **Cover**：智能封面

- **VideoClip**：视频摘要

- **VideoDelogo**：视频去图标

- **VideoDetext**：视频去字幕
',
            'type' => 'string',
            'required' => true,
            'example' => 'Cover',
          ),
        ),
        2 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '输入媒体，支持OSS或媒资ID。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '媒体类型：

- OSS：OSS路径

- Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'description' => '输入媒体，支持OSS地址和媒资ID两种。
oss地址规则为
1. oss://bucket/object
2. http(s)://bucket.oss-[regionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/object',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Output',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '输出媒体，支持OSS或媒资ID。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '媒体类型：

- OSS：OSS路径

- Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'example' => 'OSS',
              ),
              'Media' => 
              array (
                'description' => '输出媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                'type' => 'string',
                'required' => true,
                'example' => 'oss://bucket/object',
              ),
            ),
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板ID',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        5 => 
        array (
          'name' => 'JobParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '算法作业参数，JSON对象，不同算法对应参数内容不同。详见补充说明。',
            'type' => 'string',
            'required' => false,
            'example' => '{"Model":"gif"}',
          ),
        ),
        6 => 
        array (
          'name' => 'ScheduleConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务调度配置信息',
            'type' => 'object',
            'properties' => 
            array (
              'PipelineId' => 
              array (
                'description' => '管道ID',
                'type' => 'string',
                'required' => false,
                'example' => '5246b8d12a62433ab77845074039c3dc',
              ),
              'Priority' => 
              array (
                'description' => '取值范围为1到10，数值越小优先级越高。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '6',
              ),
            ),
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义数据，获取结果时原样返回。长度不超过1024字节。',
            'type' => 'string',
            'required' => false,
            'example' => '{"test":1}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C1849434-FC47-5DC1-92B6-F7EAAFE3851E',
              ),
              'JobId' => 
              array (
                'description' => '智能任务ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C1849434-FC47-5DC1-92B6-F7EAAFE3851E\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","type":"json"}]',
      'title' => '提交智能生产任务',
      'requestParamsDescription' => '### JobParams的JSON字段说明

#### Cover

* Model：String类型，智能封面模型，为空时输出图片封面，为gif时输出动图封面。

#### VideoDelogo

- LogoModel：String类型，去除的logo类型，取值：tv（通用台标 - 电视台），internet（通用台标 - 网络媒体），该字段可多选，通过逗号分隔。
* Boxes：String类型，目标logo框位置，以左上角为原点的归一化距离，[xmin, ymin, width, height]，目前最多支持两个目标logo框，例如："[[0, 0, 0.3, 0.3], [0.7, 0, 0.3, 0.3]]"。

#### VideoDetext

* Boxes：String类型，目标text框位置，以左上角为原点的归一化距离，[xmin, ymin, width, height]，目前最多支持两个目标logo框，例如："[[0, 0, 0.3, 0.3], [0.7, 0, 0.3, 0.3]]"。

',
    ),
    'QueryIProductionJob' => 
    array (
      'summary' => '调用QueryIProductionJob查询智能生产任务状态与结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '幂等参数',
            'description' => '幂等参数',
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能任务ID',
            'type' => 'string',
            'required' => true,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
              ),
              'JobId' => 
              array (
                'description' => '任务ID',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
              'Name' => 
              array (
                'description' => '任务名称',
                'type' => 'string',
                'example' => '测试任务',
              ),
              'FunctionName' => 
              array (
                'description' => '需要使用的算法功能名称。取值：

- **Cover**：智能封面

- **VideoClip**：视频摘要

- **VideoDelogo**：视频去图标

- **VideoDetext**：视频去字幕',
                'type' => 'string',
                'example' => 'Cover',
              ),
              'Input' => 
              array (
                'description' => '输入媒体',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '输入类型，取值：
1. OSS：OSS文件地址
2. Media：媒资ID',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                    ),
                    'example' => 'OSS',
                  ),
                  'Media' => 
                  array (
                    'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                    'type' => 'string',
                    'example' => 'oss://bucket/object',
                  ),
                ),
              ),
              'Output' => 
              array (
                'description' => '输出媒体',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '媒体类型：
- OSS：OSS路径
- Media：媒资ID',
                    'type' => 'string',
                    'example' => 'OSS',
                  ),
                  'Media' => 
                  array (
                    'description' => '输入媒体。当Type为OSS时填入OSS地址，Type为Media时填入媒资ID。
OSS地址规则为：
1. oss://bucket/object
2. http(s)://bucket.oss-[RegionId].aliyuncs.com/object
其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                    'type' => 'string',
                    'example' => 'oss://bucket/object',
                  ),
                ),
              ),
              'TemplateId' => 
              array (
                'description' => '模板ID',
                'type' => 'string',
                'example' => '****96e8864746a0b6f3****',
              ),
              'JobParams' => 
              array (
                'description' => '算法作业参数，JSON对象，不同算法对应参数内容不同。',
                'type' => 'string',
                'example' => '{"Model":"gif"}',
              ),
              'ScheduleConfig' => 
              array (
                'description' => '任务配置信息',
                'type' => 'object',
                'properties' => 
                array (
                  'PipelineId' => 
                  array (
                    'description' => '管道ID',
                    'type' => 'string',
                    'example' => 'a54fdc9c9aab413caef0d1150f565e86',
                  ),
                  'Priority' => 
                  array (
                    'description' => '任务在其对应管道内的优先级。

- 最高优先级：10。

- 默认值：**6**。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                ),
              ),
              'UserData' => 
              array (
                'description' => '用户自定义数据，获取结果时原样返回',
                'type' => 'string',
                'example' => '{"test":1}',
              ),
              'Result' => 
              array (
                'description' => '算法输出的结果信息，不同FunctionName的输出不同，以JSON格式输出，详见下面的补充说明',
                'type' => 'string',
                'example' => '{}',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间，GMT时间',
                'type' => 'string',
                'example' => '2022-07-07T07:16:11Z',
              ),
              'FinishTime' => 
              array (
                'description' => '完成时间，GMT时间',
                'type' => 'string',
                'example' => '2021-11-26T14:50:25Z',
              ),
              'Status' => 
              array (
                'description' => '作业状态。取值：
- Queuing：排队中。
- Analysing：分析中。
- Fail：失败。
- Success：成功。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'OutputFiles' => 
              array (
                'description' => '输出文件数组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '生成的文件路径与名称',
                  'type' => 'string',
                  'example' => 'output/xxx.mp4',
                ),
              ),
              'OutputUrls' => 
              array (
                'description' => '输出文件URL数组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '生成的文件可访问URL路径',
                  'type' => 'string',
                  'example' => 'http://xxx',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\",\\n  \\"Name\\": \\"测试任务\\",\\n  \\"FunctionName\\": \\"Cover\\",\\n  \\"Input\\": {\\n    \\"Type\\": \\"OSS\\",\\n    \\"Media\\": \\"oss://bucket/object\\"\\n  },\\n  \\"Output\\": {\\n    \\"Type\\": \\"OSS\\",\\n    \\"Media\\": \\"oss://bucket/object\\"\\n  },\\n  \\"TemplateId\\": \\"****96e8864746a0b6f3****\\",\\n  \\"JobParams\\": \\"{\\\\\\"Model\\\\\\":\\\\\\"gif\\\\\\"}\\",\\n  \\"ScheduleConfig\\": {\\n    \\"PipelineId\\": \\"a54fdc9c9aab413caef0d1150f565e86\\",\\n    \\"Priority\\": 6\\n  },\\n  \\"UserData\\": \\"{\\\\\\"test\\\\\\":1}\\",\\n  \\"Result\\": \\"{}\\",\\n  \\"CreateTime\\": \\"2022-07-07T07:16:11Z\\",\\n  \\"FinishTime\\": \\"2021-11-26T14:50:25Z\\",\\n  \\"Status\\": \\"Success\\",\\n  \\"OutputFiles\\": [\\n    \\"output/xxx.mp4\\"\\n  ],\\n  \\"OutputUrls\\": [\\n    \\"http://xxx\\"\\n  ]\\n}","type":"json"}]',
      'title' => '查询智能生产任务',
      'responseParamsDescription' => '### Result示例说明

#### Cover

示例：[{"Score":8.270855992569906,"Time":"28278.25","Url":"cover/test-00001.jpg"},{"Score":7.474117489692728,"Time":"25942.583333333332","Url":"cover/test-00002.jpg"}]

其中Score为封面结果置信度，Time为封面帧时间戳，Url为封面文件路径。

#### VideoClip

示例：{"VideoSummaryList":[{"EndTime":"5.28","StartTime":"0.28"}]}

其中VideoSummaryList是个列表，表示从原视频中截取的时间段，单位为秒

#### VideoDelogo

示例：{}

算法无额外信息输出

#### VideoDetext

示例：{}

算法无额外信息输出',
    ),
    'CreateDNADB' => 
    array (
      'summary' => '调用CreateDNADB创建DNA库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA库名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example name',
          ),
        ),
        1 => 
        array (
          'name' => 'Model',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA库模型。包含：
- **Video**：视频
- **Audio**：音频
- **Image**：图片
- **Text**：文本【仅上海区域支持】',
            'type' => 'string',
            'required' => false,
            'example' => 'Video',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA库描述。',
            'type' => 'string',
            'required' => false,
            'example' => '这是一个视频DNA库。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
              'DBInfo' => 
              array (
                'description' => 'DNA库详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Description' => 
                  array (
                    'description' => 'DNA库描述。',
                    'type' => 'string',
                    'example' => '这是一个视频DNA库。',
                  ),
                  'Name' => 
                  array (
                    'description' => 'DNA库名称。',
                    'type' => 'string',
                    'example' => 'example name',
                  ),
                  'Status' => 
                  array (
                    'description' => 'DNA库的状态。新建成功后默认为offline状态，待后台处理完成后会自动转换成active状态。',
                    'type' => 'string',
                    'example' => 'offline',
                  ),
                  'DBId' => 
                  array (
                    'description' => 'DNA库ID。建议您保存此ID便于后续调用其他相关接口时使用。',
                    'type' => 'string',
                    'example' => '88c6ca184c0e47098a5b665e2a12****',
                  ),
                  'Model' => 
                  array (
                    'description' => 'DNA库模型。',
                    'type' => 'string',
                    'example' => 'Video',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\",\\n  \\"DBInfo\\": {\\n    \\"Description\\": \\"这是一个视频DNA库。\\",\\n    \\"Name\\": \\"example name\\",\\n    \\"Status\\": \\"offline\\",\\n    \\"DBId\\": \\"88c6ca184c0e47098a5b665e2a12****\\",\\n    \\"Model\\": \\"Video\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建DNA库',
      'description' => '- 单个用户默认可以创建指纹库个数为5个，如需提高，请提交工单申请。无用指纹库可以调用DeleteDNADB接口删除。',
    ),
    'DeleteDNADB' => 
    array (
      'summary' => '调用DeleteDNADB删除DNA库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DBId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除的DNA库Id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fb712a6890464059b1b2ea7c8647****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\"\\n}","type":"json"}]',
      'title' => '删除DNA库',
    ),
    'ListDNADB' => 
    array (
      'summary' => '调用ListDNADB查询DNA库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DBIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA库ID列表。⼀次建议最多查10个，ID之间⽤半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '2288c6ca184c0e47098a5b665e2a12****,78dc866518b843259669df58ed30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DBList' => 
              array (
                'description' => 'DNA库列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DBInfo',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => 'DNA库状态。默认值：**offline**（离线）。**active**表示DNA库可用。可取值：
- **offline**：离线。
- **active**：在线。
- **deleted**：删除。',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'Description' => 
                    array (
                      'description' => 'DNA库描述。',
                      'type' => 'string',
                      'example' => '这是一个视频DNA库。',
                    ),
                    'Name' => 
                    array (
                      'description' => 'DNA库名称。',
                      'type' => 'string',
                      'example' => 'example-name',
                    ),
                    'Model' => 
                    array (
                      'description' => 'DNA库模型。包含：
- **Video**：视频
- **Audio**：音频
- **Image**：图片
- **Text**：文本【仅上海区域支持】',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => 'Video',
                    ),
                    'DBId' => 
                    array (
                      'description' => 'DNA库Id。',
                      'type' => 'string',
                      'example' => '88c6ca184c0e47098a5b665e2a12****',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DBList\\": [\\n    {\\n      \\"Status\\": \\"active\\",\\n      \\"Description\\": \\"这是一个视频DNA库。\\",\\n      \\"Name\\": \\"example-name\\",\\n      \\"Model\\": 0,\\n      \\"DBId\\": \\"88c6ca184c0e47098a5b665e2a12****\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\"\\n}","type":"json"}]',
      'title' => '查询DNA库',
    ),
    'SubmitDNAJob' => 
    array (
      'summary' => '调用SubmitDNAJob提交DNA作业。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '输入DNA文件。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '输入文件类型，取值：
1. OSS：OSS文件地址
2. Media：媒资ID',
                'type' => 'string',
                'required' => true,
                'example' => 'Media',
              ),
              'Media' => 
              array (
                'description' => '输入文件信息，支持OSS地址和媒资ID两种。
OSS地址规则为：

1、oss://bucket/object

2、http(s)://bucket.oss-[regionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                'type' => 'string',
                'required' => true,
                'example' => '1b1b9cd148034739af413150fded****',
              ),
            ),
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'PipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管道ID。',
            'type' => 'string',
            'required' => false,
            'example' => '5246b8d12a62433ab77845074039****',
          ),
        ),
        2 => 
        array (
          'name' => 'Config',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA配置，JSON对象。
若填写，会覆盖模板参数。',
            'type' => 'string',
            'required' => false,
            'example' => '{"SaveType": "save","MediaType"":"video"}',
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模版ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'S00000101-100060',
          ),
        ),
        4 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义数据，最大长度128个字节。',
            'type' => 'string',
            'required' => false,
            'example' => 'userData',
          ),
        ),
        5 => 
        array (
          'name' => 'PrimaryKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '唯一的视频主键，唯一性由用户保证。',
            'type' => 'string',
            'required' => true,
            'example' => '3ca84a39a9024f19853b21be9cf9****',
          ),
        ),
        6 => 
        array (
          'name' => 'DBId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA库Id。',
            'type' => 'string',
            'required' => true,
            'example' => '2288c6ca184c0e47098a5b665e2a12****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
              'JobId' => 
              array (
                'description' => '视频DNA作业ID。建议您保存此ID便于后续调用其他相关接口时使用。',
                'type' => 'string',
                'example' => '88c6ca184c0e47098a5b665e2****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\",\\n  \\"JobId\\": \\"88c6ca184c0e47098a5b665e2****\\"\\n}","type":"json"}]',
      'title' => '提交DNA作业',
      'description' => '- 本接口为异步接口。不保证接口返回时结果已经生成。

- 本接口目前支持使用的地域为华北2（北京）、华东1（杭州）、华东2（上海）。

- 提交文本DNA作业目前仅支持华东2（上海）地域使用。',
      'requestParamsDescription' => 'DNA配置Config参数包括：SaveType和MediaType字段。

其中，SaveType表示存储类型，包括：

- **nosave**: 仅搜索不入库。
- **save**: 去重入库。
- **forcesave**: 强制入库。
- **onlysave**: 仅入库不搜索。

MediaType表示输入文件媒体类型，包括：
- **video**: 视频。
- **audio**: 音频。
- **image**: 图片。
- **text**: 长文本。
- **asr**: asr识别文本。',
    ),
    'CancelDNAJob' => 
    array (
      'summary' => '调用CancelDNAJob取消DNA作业。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消DNA作业ID。',
            'type' => 'string',
            'required' => true,
            'example' => '2288c6ca184c0e47098a5b665e2a12****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
              'JobId' => 
              array (
                'description' => '作业ID。',
                'type' => 'string',
                'example' => '2288c6ca184c0e47098a5b665e2a12****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\",\\n  \\"JobId\\": \\"2288c6ca184c0e47098a5b665e2a12****\\"\\n}","type":"json"}]',
      'title' => '取消DNA作业',
      'description' => '- 本接口只能取消状态处于“排队中”状态的作业；

- 建议先调用更新管道接口（**UpdatePipeline**）将管道状态置为Paused，暂停作业调度，再调用取消作业接口取消作业；取消完后需要恢复管道状态为Active，管道中的作业才会被调度执行。',
    ),
    'DeleteDNAFiles' => 
    array (
      'summary' => '调用DeleteDNAFiles删除DNA文件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DBId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除文件的DNA库ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fb712a6890464059b1b2ea7c8647****',
          ),
        ),
        1 => 
        array (
          'name' => 'PrimaryKeys',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除的文件主键，用半角逗号（,）分隔，一次最多删除50个。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '41e6536e4f2250e2e9bf26cdea19****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '31E30781-9495-5E2D-A84D-759B0A01E262',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31E30781-9495-5E2D-A84D-759B0A01E262\\"\\n}","type":"json"}]',
      'title' => '删除DNA文件',
    ),
    'ListDNAFiles' => 
    array (
      'summary' => '调用ListDNAFiles查询DNA文件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询。请求第一页时，NextPageToken为空；请求后续文件时需传入前一页查询结果中的NextPageToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'ae0fd49c0840e14daf0d66a75b83****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单页数据个数，默认为20，最大100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'DBId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNA库Id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2288c6ca184c0e47098a5b665e2a12****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2AE89FA5-E620-56C7-9B80-75D09757385A',
              ),
              'NextPageToken' => 
              array (
                'description' => '下一页Token。',
                'type' => 'string',
                'example' => 'ae0fd49c0840e14daf0d66a75b83****',
              ),
              'FileList' => 
              array (
                'description' => '文件列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DNAFile',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PrimaryKey' => 
                    array (
                      'description' => 'DNA文件用户主键。',
                      'type' => 'string',
                      'example' => 'ae0fd49c0840e14daf0d66a75b83****',
                    ),
                    'InputFile' => 
                    array (
                      'description' => '输入文件OSS信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Object' => 
                        array (
                          'description' => '输入文件的OSS Object。',
                          'type' => 'string',
                          'example' => 'example-****.mp4',
                        ),
                        'Location' => 
                        array (
                          'description' => '输入文件的OSS Location。',
                          'type' => 'string',
                          'example' => 'oss-cn-beijing',
                        ),
                        'Bucket' => 
                        array (
                          'description' => '输入文件的OSS Bucket。',
                          'type' => 'string',
                          'example' => 'example-bucket',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2AE89FA5-E620-56C7-9B80-75D09757385A\\",\\n  \\"NextPageToken\\": \\"ae0fd49c0840e14daf0d66a75b83****\\",\\n  \\"FileList\\": [\\n    {\\n      \\"PrimaryKey\\": \\"ae0fd49c0840e14daf0d66a75b83****\\",\\n      \\"InputFile\\": {\\n        \\"Object\\": \\"example-****.mp4\\",\\n        \\"Location\\": \\"oss-cn-beijing\\",\\n        \\"Bucket\\": \\"example-bucket\\"\\n      }\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询DNA文件',
      'description' => '本接口通过DNA库ID查询文件列表，支持分页查询。',
    ),
    'QueryDNAJobList' => 
    array (
      'summary' => '调用QueryDNAJobList查询DNA作业。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的DNA作业ID列表。一次最多建议查询10个，用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '88c6ca184c0e47098a5b665e2a12****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25818875-5F78-4A13-BEF6-D7393642CA58',
              ),
              'JobList' => 
              array (
                'description' => 'DNA作业信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DNAJob',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DNAResult' => 
                    array (
                      'description' => 'DNA结果链接。',
                      'type' => 'string',
                      'example' => 'http://test_bucket.oss-cn-shanghai.aliyuncs.com/fingerprint/video/search_result/5/5.txt',
                    ),
                    'PrimaryKey' => 
                    array (
                      'description' => '唯一的视频主键，唯一性由用户保证。',
                      'type' => 'string',
                      'example' => '3ca84a39a9024f19853b21be9cf9****',
                    ),
                    'DBId' => 
                    array (
                      'description' => 'DNA库Id。',
                      'type' => 'string',
                      'example' => '2288c6ca184c0e47098a5b665e2a12****',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '作业创建时间。',
                      'type' => 'string',
                      'example' => '2022-12-28T03:21:37Z',
                    ),
                    'FinishTime' => 
                    array (
                      'description' => '作业完成时间。',
                      'type' => 'string',
                      'example' => '2022-12-28T03:21:44Z',
                    ),
                    'Status' => 
                    array (
                      'description' => '作业状态，可取值：

- **Queuing**：排队中。
- **Analysing**：分析中。
- **Success**：成功。
- **Fail**：失败。',
                      'type' => 'string',
                      'example' => 'Queuing',
                    ),
                    'Message' => 
                    array (
                      'description' => '作业执行错误信息。',
                      'type' => 'string',
                      'example' => '"The resource operated \\"a887d0b***d805ef6f7f6786302\\" cannot be found"',
                    ),
                    'Config' => 
                    array (
                      'description' => 'DNA配置。',
                      'type' => 'string',
                      'example' => '{"SaveType": "save","MediaType"":"video"}',
                    ),
                    'UserData' => 
                    array (
                      'description' => '用户自定义数据。',
                      'type' => 'string',
                      'example' => 'testdna',
                    ),
                    'Code' => 
                    array (
                      'description' => '作业执行错误码。',
                      'type' => 'string',
                      'example' => '"InvalidParameter.ResourceNotFound"',
                    ),
                    'Input' => 
                    array (
                      'description' => '输入文件。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '输入文件类型，取值：
1. OSS：OSS文件地址
2. Media：媒资ID',
                          'type' => 'string',
                          'example' => 'Media',
                        ),
                        'Media' => 
                        array (
                          'description' => '输入文件信息，支持OSS地址和媒资ID两种。
OSS地址规则为

1、oss://bucket/object

2、http(s)://bucket.oss-[regionId].aliyuncs.com/object

其中bucket为和当前项目处于同一区域的oss bucket名称，object为文件路径。',
                          'type' => 'string',
                          'example' => '1b1b9cd148034739af413150fded****',
                        ),
                      ),
                    ),
                    'Id' => 
                    array (
                      'description' => '作业ID。',
                      'type' => 'string',
                      'example' => '88c6ca184c0e47098a5b665e2a12****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25818875-5F78-4A13-BEF6-D7393642CA58\\",\\n  \\"JobList\\": [\\n    {\\n      \\"DNAResult\\": \\"http://test_bucket.oss-cn-shanghai.aliyuncs.com/fingerprint/video/search_result/5/5.txt\\",\\n      \\"PrimaryKey\\": \\"3ca84a39a9024f19853b21be9cf9****\\",\\n      \\"DBId\\": \\"2288c6ca184c0e47098a5b665e2a12****\\",\\n      \\"CreationTime\\": \\"2022-12-28T03:21:37Z\\",\\n      \\"FinishTime\\": \\"2022-12-28T03:21:44Z\\",\\n      \\"Status\\": \\"Queuing\\",\\n      \\"Message\\": \\"\\\\\\"The resource operated \\\\\\\\\\\\\\"a887d0b***d805ef6f7f6786302\\\\\\\\\\\\\\" cannot be found\\\\\\"\\",\\n      \\"Config\\": \\"{\\\\\\"SaveType\\\\\\": \\\\\\"save\\\\\\",\\\\\\"MediaType\\\\\\"\\\\\\":\\\\\\"video\\\\\\"}\\",\\n      \\"UserData\\": \\"testdna\\",\\n      \\"Code\\": \\"\\\\\\"InvalidParameter.ResourceNotFound\\\\\\"\\",\\n      \\"Input\\": {\\n        \\"Type\\": \\"Media\\",\\n        \\"Media\\": \\"1b1b9cd148034739af413150fded****\\"\\n      },\\n      \\"Id\\": \\"88c6ca184c0e47098a5b665e2a12****\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询DNA作业列表',
      'responseParamsDescription' => 'DNAResult的内容为Array of VideoMatchInfo，其中：

**VideoMatchInfo详情**

| 名称| 类型 |描述 | 
| ---------| --------- | ----------- | 
| PrimaryKey | String  |   匹配文件唯一主键。 |   
| GlobalSimilarity | Double |整体相似度。  |  
| VideoMatchSegments	| Array of VideoMatchSegment	| 视频/图搜视频匹配片段信息。| 
| AudioMatchSegments| Array of AudioMatchSegment	| 音频搜音频匹配片段信息。| 
| TextMatchSegments	| Array of TextMatchSegment | 	文本搜文本匹配片段信息。|

**VideoMatchSegment/AudioMatchSegment详情**

|名称	|类型	|描述|
| ---------| --------- | ----------- | 
|StartTime |Double|	输入视频/音频的开始时间。|
|EndTime|Double	|输入视频/音频的结束时间。|
|MasterStartTime|	Double	|库中视频/音频的开始时间。|
|MasterEndTime|	Double	|库中视频/音频的结束时间。|
|Similarity|	Double	|匹配片段的置信度。|

**TextMatchSegment详情**
|名称	|类型	|描述|
| ---------| --------- | ----------- | 
Start	|Double	|查询匹配片段起始时间。
End|	Double|	查询匹配片段结束时间。
QueryText|	String	|查询匹配的文本片段。
MasterText|	String|	底库匹配的文本片段。
Similarity	|Double	|匹配片段的置信度。',
    ),
    'DescribeMeterImsMediaConvertUHDUsage' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '146742',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1654403036',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1656995036',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目前该字段暂未生效，默认返回全部region用量。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询时间粒度，枚举值：3600（小时粒度），86400（天粒度）。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => '3600
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BEA98A0C-7870-15FE-B96F-8880BB600A2C',
              ),
              'Data' => 
              array (
                'description' => 'IMS的MPS转码UHD计量数据。

',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Time' => 
                    array (
                      'description' => '时间段开始时间戳，10位。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1656950400',
                    ),
                    'Specification' => 
                    array (
                      'description' => '转码规格。

',
                      'type' => 'string',
                      'example' => 'SuperResolution.Standard.1080P
',
                    ),
                    'Duration' => 
                    array (
                      'description' => '时长，单位min。

',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '308028',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ParamError',
            'errorMessage' => 'Param Error:%s,Please Check Again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.AuthError',
            'errorMessage' => 'Authentication Failed,Please Try Again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ServerInternalError',
            'errorMessage' => 'The Request Processing Has Failed Due To Some Unknown Error.',
          ),
          1 => 
          array (
            'errorCode' => 'Meter.DataSourceQueryError',
            'errorMessage' => 'Data Source Error:%s,Please Try Again.',
          ),
        ),
        502 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ReadyTsError',
            'errorMessage' => 'Get ReadyTs Failed,Please Try Again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"BEA98A0C-7870-15FE-B96F-8880BB600A2C\\",\\n  \\"Data\\": [\\n    {\\n      \\"Time\\": 1656950400,\\n      \\"Specification\\": \\"SuperResolution.Standard.1080P\\\\n\\",\\n      \\"Duration\\": 308028\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'IMS的MPS转码UHD计量查询',
      'summary' => 'IMS的MPS转码UHD计量查询，最大查询范围31天，最远可查90天内的数据。',
    ),
    'DescribeMeterImsMediaConvertUsage' => 
    array (
      'summary' => 'IMS的点播转码计量查询，最大查询范围31天，最远可查90天内的数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '146741',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，10位。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1654403036',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，10位。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1656995036',
          ),
        ),
        2 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目前该字段暂未生效，默认返回全部region用量。

',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai
',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询时间粒度，枚举值：3600（小时粒度），86400（天粒度）。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '86400',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FBBB5210-2B78-58FB-A6FE-9DD887BB2C61',
              ),
              'Data' => 
              array (
                'description' => 'IMS的点播转码计量数据。

',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Time' => 
                    array (
                      'description' => '时间段开始时间戳，10位。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1656950400',
                    ),
                    'Specification' => 
                    array (
                      'description' => '转码规格。',
                      'type' => 'string',
                      'example' => 'H264.HD
',
                    ),
                    'Duration' => 
                    array (
                      'description' => '时长，单位min。

',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ParamError',
            'errorMessage' => 'Param Error:%s,Please Check Again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.AuthError',
            'errorMessage' => 'Authentication Failed,Please Try Again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ServerInternalError',
            'errorMessage' => 'The Request Processing Has Failed Due To Some Unknown Error.',
          ),
          1 => 
          array (
            'errorCode' => 'Meter.DataSourceQueryError',
            'errorMessage' => 'Data Source Error:%s,Please Try Again.',
          ),
        ),
        502 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ReadyTsError',
            'errorMessage' => 'Get ReadyTs Failed,Please Try Again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"FBBB5210-2B78-58FB-A6FE-9DD887BB2C61\\",\\n  \\"Data\\": [\\n    {\\n      \\"Time\\": 1656950400,\\n      \\"Specification\\": \\"H264.HD\\\\n\\",\\n      \\"Duration\\": 20\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'IMS的点播转码计量查询',
    ),
    'DescribeMeterImsEditUsage' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '146735',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1654403036',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1656995036',
          ),
        ),
        2 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询时间粒度，枚举值：3600（小时粒度），86400（天粒度）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '86400',
          ),
        ),
        3 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目前该字段暂未生效，默认返回全部region用量。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F3AE2C6-5CC6-5712-BAC5-5A735A157687',
              ),
              'Data' => 
              array (
                'description' => 'IMS点播视频剪辑用量数据。

',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Time' => 
                    array (
                      'description' => '时间段开始时间戳，10位。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1656950400',
                    ),
                    'Duration' => 
                    array (
                      'description' => '时长，单位min。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1.23',
                    ),
                    'Profile' => 
                    array (
                      'description' => '规格。',
                      'type' => 'string',
                      'example' => '1080P',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ParamError',
            'errorMessage' => 'Param Error:%s,Please Check Again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.AuthError',
            'errorMessage' => 'Authentication Failed,Please Try Again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ServerInternalError',
            'errorMessage' => 'The Request Processing Has Failed Due To Some Unknown Error.',
          ),
          1 => 
          array (
            'errorCode' => 'Meter.DataSourceQueryError',
            'errorMessage' => 'Data Source Error:%s,Please Try Again.',
          ),
        ),
        502 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ReadyTsError',
            'errorMessage' => 'Get ReadyTs Failed,Please Try Again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7F3AE2C6-5CC6-5712-BAC5-5A735A157687\\",\\n  \\"Data\\": [\\n    {\\n      \\"Time\\": 1656950400,\\n      \\"Duration\\": 1.23,\\n      \\"Profile\\": \\"1080P\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'IMS点播视频剪辑用量查询',
      'summary' => 'IMS点播视频剪辑用量查询，最大查询范围31天，最远可查90天内的数据。',
    ),
    'DescribeMeterImsSummary' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '146724',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1654403036',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1656995036',
          ),
        ),
        2 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目前该字段暂未生效，默认返回全部region用量。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BEA98A0C-7870-15FE-B96F-8880BB600A2C',
              ),
              'Data' => 
              array (
                'description' => 'IMS点播用量统计数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MpsTranscodeDuration' => 
                    array (
                      'description' => '点播转码时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '17337',
                    ),
                    'MpsTranscodeUHDDuration' => 
                    array (
                      'description' => '音画增强时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '300',
                    ),
                    'LiveTranscodeDuration' => 
                    array (
                      'description' => '直播转码时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12356',
                    ),
                    'EditingDuration' => 
                    array (
                      'description' => '视频剪辑时长。',
                      'type' => 'string',
                      'example' => '8722',
                    ),
                    'MpsAiDuration' => 
                    array (
                      'description' => '视频AI时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                    'LiveRecordDuration' => 
                    array (
                      'description' => '直播录制时长',
                      'type' => 'string',
                      'example' => '100',
                    ),
                    'LiveEditDuration' => 
                    array (
                      'description' => '直播剪辑时长',
                      'type' => 'string',
                      'example' => '2000',
                    ),
                    'LiveSnapshotCount' => 
                    array (
                      'description' => '直播截图数量',
                      'type' => 'string',
                      'example' => '100',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ParamError',
            'errorMessage' => 'Param Error:%s,Please Check Again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.AuthError',
            'errorMessage' => 'Authentication Failed,Please Try Again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ServerInternalError',
            'errorMessage' => 'The Request Processing Has Failed Due To Some Unknown Error.',
          ),
          1 => 
          array (
            'errorCode' => 'Meter.DataSourceQueryError',
            'errorMessage' => 'Data Source Error:%s,Please Try Again.',
          ),
        ),
        502 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ReadyTsError',
            'errorMessage' => 'Get ReadyTs Failed,Please Try Again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"BEA98A0C-7870-15FE-B96F-8880BB600A2C\\",\\n  \\"Data\\": [\\n    {\\n      \\"MpsTranscodeDuration\\": 17337,\\n      \\"MpsTranscodeUHDDuration\\": 300,\\n      \\"LiveTranscodeDuration\\": 12356,\\n      \\"EditingDuration\\": \\"8722\\",\\n      \\"MpsAiDuration\\": 0,\\n      \\"LiveRecordDuration\\": \\"100\\",\\n      \\"LiveEditDuration\\": \\"2000\\",\\n      \\"LiveSnapshotCount\\": \\"100\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'IMS点播用量统计查询',
      'summary' => 'IMS点播用量统计查询，最大查询范围31天，最远可查90天内的数据。',
    ),
    'DescribeMeterImsMpsAiUsage' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '146716',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，10位。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1654403036',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，10位。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1656995036',
          ),
        ),
        2 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '枚举值：3600（小时粒度），86400（天粒度）。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '86400',
          ),
        ),
        3 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目前该字段暂未生效，默认返回全部region用量。

',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0622C702-41BE-467E-AF2E-883D4517962E',
              ),
              'Data' => 
              array (
                'description' => 'IMS的MPS-AI计量数据。

',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Time' => 
                    array (
                      'description' => '时间段开始时间戳，10位。

',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1656950400',
                    ),
                    'Type' => 
                    array (
                      'description' => 'AI类型。',
                      'type' => 'string',
                      'example' => 'Censor：审核类型
Product：生产类型',
                    ),
                    'Duration' => 
                    array (
                      'description' => '时长，单位min。

',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '644',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ParamError',
            'errorMessage' => 'Param Error:%s,Please Check Again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.AuthError',
            'errorMessage' => 'Authentication Failed,Please Try Again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ServerInternalError',
            'errorMessage' => 'The Request Processing Has Failed Due To Some Unknown Error.',
          ),
          1 => 
          array (
            'errorCode' => 'Meter.DataSourceQueryError',
            'errorMessage' => 'Data Source Error:%s,Please Try Again.',
          ),
        ),
        502 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ReadyTsError',
            'errorMessage' => 'Get ReadyTs Failed,Please Try Again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0622C702-41BE-467E-AF2E-883D4517962E\\",\\n  \\"Data\\": [\\n    {\\n      \\"Time\\": 1656950400,\\n      \\"Type\\": \\"Censor：审核类型\\\\nProduct：生产类型\\",\\n      \\"Duration\\": 644\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'IMS的MPS-AI计量查询',
      'summary' => 'IMS的MPS-AI用量查询，最大查询范围31天，最远可查90天内的数据。',
    ),
    'SetEventCallback' => 
    array (
      'summary' => '设置特定事件的通知机制。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CallbackType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回调方式，取值：
- **HTTP**
- **MNS**',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'MNS' => 'MNS',
              'HTTP' => 'HTTP',
            ),
            'example' => 'HTTP',
          ),
        ),
        1 => 
        array (
          'name' => 'CallbackQueueName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '所在区域的MNS队列名称，必须以 ice-callback- 开头',
            'type' => 'string',
            'required' => false,
            'example' => 'ice-callback-queue',
          ),
        ),
        2 => 
        array (
          'name' => 'CallbackURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回调地址。回调方式为**HTTP**时，需设置此参数。
回调地址URL的长度不能超过256个字节，不支持设置多个回调地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://xxx.yyy/callback',
          ),
        ),
        3 => 
        array (
          'name' => 'EventTypeList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回调事件类型, 支持多值，以逗号分隔。
ProduceMediaComplete：剪辑合成作业完成',
            'type' => 'string',
            'required' => false,
            'example' => 'ProduceMediaComplete',
          ),
        ),
        4 => 
        array (
          'name' => 'AuthSwitch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP回调的鉴权开关，回调方式设置为**HTTP**时，此参数有效。取值：
- **on**（启用）
- **off**（不启用）',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'off' => 'off',
              'on' => 'on',
            ),
            'example' => 'on',
          ),
        ),
        5 => 
        array (
          'name' => 'AuthKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权Key，最长32位，必须同时包含大小写字母和数字。回调方式为**HTTP**时，可设置此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestKey001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'Success' => 
              array (
                'title' => '是否设置成功',
                'description' => '是否设置成功。取值：true：成功。false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetEventCallbackResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <Success>true</Success>\\n</SetEventCallbackResponse>","errorExample":""}]',
      'title' => '设置事件回调',
    ),
    'GetEventCallback' => 
    array (
      'summary' => '调用GetEventCallback获取事件回调配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'CallbackType' => 
              array (
                'description' => '回调方式，取值：
- **HTTP**
- **MNS**',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'MNS' => 'MNS',
                  'HTTP' => 'HTTP',
                ),
                'example' => 'HTTP',
              ),
              'CallbackQueueName' => 
              array (
                'description' => '回调MNS队列名称。',
                'type' => 'string',
                'example' => 'ice-callback-queue',
              ),
              'CallbackURL' => 
              array (
                'description' => '事件通知回调地址。',
                'type' => 'string',
                'example' => 'http://xxx.yyy/callback',
              ),
              'EventTypeList' => 
              array (
                'description' => '回调事件类型，多值以逗号分隔。事件类型参考 [事件通知内容](https://help.aliyun.com/document_detail/441362.html) 。

',
                'type' => 'string',
                'example' => 'ProduceMediaComplete,TranscodeComplete',
              ),
              'AuthSwitch' => 
              array (
                'description' => 'HTTP回调的鉴权开关，回调方式设置为**HTTP**时，此参数有效。取值：
- **on**（启用）
- **off**（不启用）',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'off' => 'off',
                  'on' => 'on',
                ),
                'example' => 'on',
              ),
              'AuthKey' => 
              array (
                'description' => '回调方式选择HTTP时，鉴权Key。',
                'type' => 'string',
                'example' => 'TestKey001',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"CallbackType\\": \\"HTTP\\",\\n  \\"CallbackQueueName\\": \\"ice-callback-queue\\",\\n  \\"CallbackURL\\": \\"http://xxx.yyy/callback\\",\\n  \\"EventTypeList\\": \\"ProduceMediaComplete,TranscodeComplete\\",\\n  \\"AuthSwitch\\": \\"on\\",\\n  \\"AuthKey\\": \\"TestKey001\\"\\n}","errorExample":""},{"type":"xml","example":"<GetEventCallbackResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <CallbackQueueName>ice-callback-queue</CallbackQueueName>\\n    <EventTypeList>ProduceMediaComplete</EventTypeList>\\n</GetEventCallbackResponse>","errorExample":""}]',
      'title' => '获取事件回调',
    ),
    'StartWorkflow' => 
    array (
      'summary' => '通过调用StartWorkflow接口，您可以提交工作流模板任务，从而实现基于工作流模板的自动化媒体处理流程。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'WorkflowId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板ID',
            'description' => '工作流模板ID。您可通过[智能媒体服务控制台](https://ims.console.aliyun.com/settings/workflow/list)> 配置管理 > 工作流模板，查看模板ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '******f0e54971ecbffd472190******',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskInput',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名称',
            'description' => '工作流输入，目前仅支持媒资类型。',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "Type": "Media",
      "Media": "******30706071edbfe290b488******"
}',
          ),
        ),
        2 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义设置，Json格式，长度限制为512字节。支持[自定义回调地址配置](https://help.aliyun.com/document_detail/451631.htm)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotifyAddress":"https://xx.xx.xxx"}或{"NotifyAddress":"ice-callback-demo"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '******42-E8E1-4FBB-8E52-F4225C******',
              ),
              'TaskId' => 
              array (
                'description' => '工作流任务ID。',
                'type' => 'string',
                'example' => '******22dad741d086a50325f9******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******42-E8E1-4FBB-8E52-F4225C******\\",\\n  \\"TaskId\\": \\"******22dad741d086a50325f9******\\"\\n}","type":"json"}]',
      'title' => '提交工作流任务',
      'description' => '- 目前只支持智能媒体服务媒资/视频点播媒资作为工作流输入。
- 发起工作流任务时，需指定工作流模板，可通过[智能媒体服务控制台](https://ims.console.aliyun.com/settings/workflow/list)创建工作流模板，或使用系统预置的工作流模板。',
    ),
    'GetWorkflowTask' => 
    array (
      'summary' => '根据任务ID查询工作流任务，包括工作流Id、工作流任务状态、工作流任务结果。
本接口仅支持查询近一年的工作流任务数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工作流任务Id',
            'type' => 'string',
            'required' => false,
            'example' => '******4215e042b3966ca5441e******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '******0C-7870-15FE-B96F-8880BB******',
              ),
              'WorkflowTask' => 
              array (
                'description' => '工作流任务信息',
                'type' => 'object',
                'properties' => 
                array (
                  'TaskId' => 
                  array (
                    'description' => '工作流任务ID',
                    'type' => 'string',
                    'example' => '******4215e042b3966ca5441e******',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'Init' => '任务初始化',
                      'Failed' => '失败',
                      'Canceled' => '任务已取消',
                      'Processing' => '任务执行中',
                      'Succeed' => '成功',
                    ),
                    'example' => 'Succeed',
                  ),
                  'TaskInput' => 
                  array (
                    'description' => '工作流任务输入',
                    'type' => 'string',
                    'example' => '{
      "Type": "Media",
      "Media": "******30706071edbfe290b488******"
}',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '任务创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2023-01-04T02:05:17Z',
                  ),
                  'FinishTime' => 
                  array (
                    'description' => '任务完成时间。格式为: yyyy-MM-ddTHH:mm:ssZ 。',
                    'type' => 'string',
                    'example' => '2023-01-04T02:06:19Z',
                  ),
                  'Workflow' => 
                  array (
                    'description' => '工作流信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'WorkflowId' => 
                      array (
                        'description' => '工作流ID',
                        'type' => 'string',
                        'example' => '******63dca94c609de02ac0d1******',
                      ),
                      'Name' => 
                      array (
                        'description' => '工作流名称',
                        'type' => 'string',
                        'example' => '超分转码工作流',
                      ),
                      'Status' => 
                      array (
                        'description' => '工作流状态',
                        'type' => 'string',
                        'enumValueTitles' => 
                        array (
                          'Active' => '启用',
                          'Inactive' => '禁用',
                        ),
                        'example' => 'Active',
                      ),
                      'Type' => 
                      array (
                        'description' => '工作流类型',
                        'type' => 'string',
                        'enumValueTitles' => 
                        array (
                          'Customize' => '定制工作流',
                          'System' => '系统工作流',
                          'Common' => '用户创建工作流',
                        ),
                        'example' => 'Common',
                      ),
                      'CreateTime' => 
                      array (
                        'description' => '工作流创建时间',
                        'type' => 'string',
                        'example' => '2022-11-27T10:02:12Z',
                      ),
                      'ModifiedTime' => 
                      array (
                        'description' => '工作流最后修改时间',
                        'type' => 'string',
                        'example' => '2022-11-29T02:06:19Z
',
                      ),
                    ),
                  ),
                  'ActivityResults' => 
                  array (
                    'description' => '工作流任务各节点结果。',
                    'type' => 'string',
                    'example' => 'Json格式，内容根据工作流配置有变化。',
                  ),
                  'UserData' => 
                  array (
                    'description' => '用户提交工作流任务时设置的自定义字段。',
                    'type' => 'string',
                    'example' => '{"NotifyAddress":"http://xx.xx.xxx"}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******0C-7870-15FE-B96F-8880BB******\\",\\n  \\"WorkflowTask\\": {\\n    \\"TaskId\\": \\"******4215e042b3966ca5441e******\\",\\n    \\"Status\\": \\"Succeed\\",\\n    \\"TaskInput\\": \\"{\\\\n      \\\\\\"Type\\\\\\": \\\\\\"Media\\\\\\",\\\\n      \\\\\\"Media\\\\\\": \\\\\\"******30706071edbfe290b488******\\\\\\"\\\\n}\\",\\n    \\"CreateTime\\": \\"2023-01-04T02:05:17Z\\",\\n    \\"FinishTime\\": \\"2023-01-04T02:06:19Z\\",\\n    \\"Workflow\\": {\\n      \\"WorkflowId\\": \\"******63dca94c609de02ac0d1******\\",\\n      \\"Name\\": \\"超分转码工作流\\",\\n      \\"Status\\": \\"Active\\",\\n      \\"Type\\": \\"Common\\",\\n      \\"CreateTime\\": \\"2022-11-27T10:02:12Z\\",\\n      \\"ModifiedTime\\": \\"2022-11-29T02:06:19Z\\\\n\\"\\n    },\\n    \\"ActivityResults\\": \\"Json格式，内容根据工作流配置有变化。\\",\\n    \\"UserData\\": \\"{\\\\\\"NotifyAddress\\\\\\":\\\\\\"http://xx.xx.xxx\\\\\\"}\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询工作流任务',
    ),
    'SetContentAnalyzeConfig' => 
    array (
      'summary' => '调用SetContentAnalyzeConfig 设置智能内容分析的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Auto',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '媒资注册完成后是否自动发起智能内容分析。

取值：
- true：开启
- false：不开启，默认为false',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'SaveType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分析结果入库类型，仅当Auto = true 时可配置。默认值为空。
- TEXT: 标签
- FACE：人脸
- DNA：相似图

支持多值，多值以半角逗号（,）分隔。如果此字段为空，智能内容分析的结果默认不入任何搜索库，后续也无法进行任何形式的内容搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'TEXT,FACE',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能内容分析模板ID。各模板包含以下AI分析功能：
- S00000101-100040 : 文字识别
- S00000101-100060 : 视频分类+人脸识别
- S00000101-100070 : 文字识别+视频分类+人脸识别',
            'type' => 'string',
            'required' => false,
            'example' => 'S00000101-100070',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '953CFD27-4A2C-54AD-857F-B79EF3A338E0',
              ),
              'Success' => 
              array (
                'title' => '是否设置成功',
                'description' => '是否设置成功。取值：
- true： 成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"953CFD27-4A2C-54AD-857F-B79EF3A338E0\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '设置智能内容分析配置',
    ),
    'GetContentAnalyzeConfig' => 
    array (
      'summary' => '调用GetContentAnalyzeConfig获取智能内容分析的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '31FEC819-2344-5771-9366-9172DB0D26C9',
              ),
              'ContentAnalyzeConfig' => 
              array (
                'description' => '智能内容分析配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'Auto' => 
                  array (
                    'description' => '媒资注册完成后是否自动发起智能内容分析。

取值：
- true：开启
- false：不开启，默认为false',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'SaveType' => 
                  array (
                    'description' => '分析结果入库类型，仅当Auto = true 时可配置。默认值为空。
- TEXT: 标签
- FACE：人脸
- DNA：相似图

支持多值，多值以半角逗号（,）分隔。如果此字段为空，智能内容分析的结果默认不入任何搜索库，后续也无法进行任何形式的内容搜索。',
                    'type' => 'string',
                    'example' => 'TEXT,FACE',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '智能内容分析模板ID。各模板包含以下AI分析功能：
- S00000101-100040 : 文字识别
- S00000101-100060 : 视频分类+人脸识别
- S00000101-100070 : 文字识别+视频分类+人脸识别',
                    'type' => 'string',
                    'example' => 'S00000101-100070',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31FEC819-2344-5771-9366-9172DB0D26C9\\",\\n  \\"ContentAnalyzeConfig\\": {\\n    \\"Auto\\": true,\\n    \\"SaveType\\": \\"TEXT,FACE\\",\\n    \\"TemplateId\\": \\"S00000101-100070\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取智能内容分析配置',
    ),
    'SetDefaultStorageLocation' => 
    array (
      'summary' => '设置临时文件的默认存储路径。默认存储地址用于ICE在线编辑器及集成webSDK使用时，剪辑过程产生的临时文件存储，如智能配置生成的音频文件等；设置默认存储地址，可避免在编辑过程中申请填写各类临时资源的存储路径时，对使用者造成困扰；如果通过API接入ICE剪辑能力，可在接口中灵活设置路径，此默认路径不生效。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StorageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储类型：
- vod\\_oss\\_bucket: vod托管Bucket。
支持添加点播系统Bucket和在点播系统中添加的OSS自有Bucket。如果没有可用的，您也可以到视频点播控制台新增Bucket，视频点播系统会在每一个存储地域分配一个存储地址，开通视频点播服务后需要启用该地址才能使用，详细操作请参见[管理存储Bucket](~~86097~~)。
- user\\_oss\\_bucket: 用户私有Bucket。添加对象存储地址前，您需要开通对象存储OSS服务并创建存储Bucket，详细操作请参见[控制台创建存储空间](~~31885~~)。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'user_oss_bucket' => '用户私有bucket',
              'vod_oss_bucket' => 'vod托管bucket',
            ),
            'example' => 'user_oss_bucket',
          ),
        ),
        1 => 
        array (
          'name' => 'Bucket',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您创建的OSS的Bucket名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'oss-test-bucket',
          ),
        ),
        2 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当storageType为user_oss_bucket时，临时文件会被存储到这个路径下，path为空或/时表示存储在根目录。
- 对于vod存储该字段不生效。',
            'type' => 'string',
            'required' => false,
            'example' => 'ims/dir',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******5A-CAAC-4850-A3AF-B74606******',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：true：成功。false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******5A-CAAC-4850-A3AF-B74606******\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetDefaultStorageLocationResponse>\\n    <RequestId>******5A-CAAC-4850-A3AF-B74606******</RequestId>\\n    <Success>true</Success>\\n</SetDefaultStorageLocationResponse>","errorExample":""}]',
      'title' => '设置默认存储位置',
      'description' => '-智能媒体服务可使用对象存储或视频点播存储，请根据您所需存储类型，开通对应服务。二者区别如下：
- 视频点播存储：视频点播提供视频存储、媒资管理、CDN播放服务等一站式音视频解决方案。存储至视频点播，智能媒体服务为点播提供能力加持，可基于视频点播提供的API实现视频业务的快速开发上线。
- 对象存储：对象存储是阿里云提供的海量、安全、低成本、高持久性的云存储服务。可基于智能媒体服务和对象存储的能力实现多场景音视频业务的开发。

-您还可通过控制台配置存储地址，详情请参见[配置存储地址](~~609918~~)。

-存储费用根据您配置的存储地址在OSS或视频点播（VOD）中计费。详情请参见：[媒资存储计费](~~440701~~)。',
    ),
    'GetDefaultStorageLocation' => 
    array (
      'summary' => '本文为您介绍获取默认存储配置API请求参数及示例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'StorageType' => 
              array (
                'title' => '存储类型',
                'description' => '存储类型',
                'type' => 'string',
                'example' => 'user_oss_bucket',
              ),
              'Bucket' => 
              array (
                'title' => 'oss bucket 名称',
                'description' => 'oss bucket 名称',
                'type' => 'string',
                'example' => 'oss-test-bucket',
              ),
              'Path' => 
              array (
                'title' => '路径',
                'description' => '路径',
                'type' => 'string',
                'example' => 'ice/dir',
              ),
              'Status' => 
              array (
                'title' => '状态',
                'description' => 'bucket状态：
- normal：bucket状态正常
- notExist：bucket 不存在',
                'type' => 'string',
                'example' => 'normal',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"StorageType\\": \\"user_oss_bucket\\",\\n  \\"Bucket\\": \\"oss-test-bucket\\",\\n  \\"Path\\": \\"ice/dir\\",\\n  \\"Status\\": \\"normal\\"\\n}","errorExample":""},{"type":"xml","example":"<GetDefaultStorageLocationResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <StorageType>user_oss_bucket</StorageType>\\n    <Bucket>oss-test-bucket</Bucket>\\n    <Path>ice/dir</Path>\\n    <Status>normal</Status>\\n</GetDefaultStorageLocationResponse>","errorExample":""}]',
      'title' => '获取默认存储位置',
    ),
    'DescribePlayList' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '146436',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'TraceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '播放器的TraceId。',
            'type' => 'string',
            'required' => false,
            'example' => '0bc5e70516766285805381012d271e',
          ),
        ),
        3 => 
        array (
          'name' => 'BeginTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，默认查询当天的时间。',
            'type' => 'string',
            'required' => true,
            'example' => '1676170500011',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，不能超过24小时。',
            'type' => 'string',
            'required' => true,
            'example' => '1682474405173',
          ),
        ),
        5 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序类型。取值：
- DESC：倒序 
- ASC：正序',
            'type' => 'string',
            'required' => false,
            'example' => 'DESC',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序名称。取值：
- FirstFrameDuration：首帧耗时
- PlayDuration：播放时长
- VideoDuration：视频时长
- StuckDuration：卡顿时长',
            'type' => 'string',
            'required' => false,
            'example' => 'FirstFrameDuration',
          ),
        ),
        7 => 
        array (
          'name' => 'PlayType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '播放类型。取值：
- vod：点播',
            'type' => 'string',
            'required' => false,
            'example' => 'vod',
          ),
        ),
        8 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '播放状态。取值：
- complete：播放完成
- playing：播放中
- unusual：播放异常',
            'type' => 'string',
            'required' => false,
            'example' => 'complete',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'TotalNum' => 
              array (
                'description' => '总播放次数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '49',
              ),
              'RequestId' => 
              array (
                'title' => 'Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B960580D-26FA-5547-8AFC-3CDC812DBF27',
              ),
              'PageNum' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。默认值20。最大值100。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PlayList' => 
              array (
                'description' => '播放记录列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '播放记录',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '播放状态',
                      'type' => 'string',
                      'example' => 'complete',
                    ),
                    'VideoId' => 
                    array (
                      'description' => '视频ID',
                      'type' => 'string',
                      'example' => '250314203f0171eebff17035d0b20102',
                    ),
                    'StuckDuration' => 
                    array (
                      'description' => '卡顿时长',
                      'type' => 'string',
                      'example' => '20',
                    ),
                    'PlayDuration' => 
                    array (
                      'description' => '播放时长',
                      'type' => 'string',
                      'example' => '1000',
                    ),
                    'FirstFrameDuration' => 
                    array (
                      'description' => '首帧耗时',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'TraceId' => 
                    array (
                      'description' => '播放器TraceId',
                      'type' => 'string',
                      'example' => '0b736abf16724820210842673d9543',
                    ),
                    'PlayType' => 
                    array (
                      'description' => '播放类型',
                      'type' => 'string',
                      'example' => 'vod',
                    ),
                    'SessionId' => 
                    array (
                      'description' => '播放器会话ID',
                      'type' => 'string',
                      'example' => '91488be2-8381-40c9-8494-e8afe22c4a2d',
                    ),
                    'VideoDuration' => 
                    array (
                      'description' => '视频时长',
                      'type' => 'string',
                      'example' => '2000',
                    ),
                    'PlayTs' => 
                    array (
                      'description' => '启播时间戳',
                      'type' => 'string',
                      'example' => '1675922209572',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ParamError',
            'errorMessage' => 'Param Error:%s,Please Check Again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.AuthError',
            'errorMessage' => 'Authentication Failed,Please Try Again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ServerInternalError',
            'errorMessage' => 'The Request Processing Has Failed Due To Some Unknown Error.',
          ),
          1 => 
          array (
            'errorCode' => 'Meter.DataSourceQueryError',
            'errorMessage' => 'Data Source Error:%s,Please Try Again.',
          ),
        ),
        502 => 
        array (
          0 => 
          array (
            'errorCode' => 'Meter.ReadyTsError',
            'errorMessage' => 'Get ReadyTs Failed,Please Try Again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TotalNum\\": 49,\\n  \\"RequestId\\": \\"B960580D-26FA-5547-8AFC-3CDC812DBF27\\",\\n  \\"PageNum\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"PlayList\\": [\\n    {\\n      \\"Status\\": \\"complete\\",\\n      \\"VideoId\\": \\"250314203f0171eebff17035d0b20102\\",\\n      \\"StuckDuration\\": \\"20\\",\\n      \\"PlayDuration\\": \\"1000\\",\\n      \\"FirstFrameDuration\\": \\"200\\",\\n      \\"TraceId\\": \\"0b736abf16724820210842673d9543\\",\\n      \\"PlayType\\": \\"vod\\",\\n      \\"SessionId\\": \\"91488be2-8381-40c9-8494-e8afe22c4a2d\\",\\n      \\"VideoDuration\\": \\"2000\\",\\n      \\"PlayTs\\": \\"1675922209572\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '播放记录列表接口',
      'summary' => '通过播放器TraceId来获取播放记录列表，该接口有分页。',
      'responseParamsDescription' => '{
	"code":"200",
	"data":{
		"PlayList":[
			{
				"Status":"unusual",
				"PlayTs":1700533661526,
				"PlayDuration":0.0000,
				"VideoId":"11222223333",
				"VideoDuration":227285.0000,
				"PlayType":"vod",
				"TraceId":"1840527851",
				"SessionId":"c031504c-c43c-5628-a1b7-3cddddjhd34370",
				"FirstFrameDuration":220,
				"StuckDuration":0.0000
			}
		],
		"TotalNum":1,
		"RequestId":"54D95240-6BE7-1BCB-B8FB-27141AE6A5E6",
		"PageNum":1,
		"PageSize":1
	},
	"httpStatusCode":"200",
	"requestId":"54D95240-6BE7-1BCB-B8FB-27141AE6A5E6",
	"successResponse":true
}',
    ),
    'AddFavoritePublicMedia' => 
    array (
      'summary' => '根据输入的mediaId 列表，将所有媒资加入收藏。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IMS媒资ID。
- 多个用英文逗号分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'icepublic-****7213c6050cbc66750b469701****,icepublic-****0b4697017213c6050cbc6675****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'IgnoredList' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '没有收藏成功的ID。',
                  'type' => 'string',
                  'example' => 'icepublic-****7213c6050cbc66750b469701****',
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"IgnoredList\\": [\\n    \\"icepublic-****7213c6050cbc66750b469701****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<AddFavoritePublicMediaResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <IgnoredList>icepublic-****7213c6050cbc66750b469701****</IgnoredList>\\n</AddFavoritePublicMediaResponse>","errorExample":""}]',
      'title' => '收藏公共版权媒资',
    ),
    'CancelFavoritePublicMedia' => 
    array (
      'summary' => '根据输入的mediaId 列表，将所有媒资取消收藏。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IMS媒资ID。
- 多个用英文逗号分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'icepublic-****7213c6050cbc66750b469701****,icepublic-****0b4697017213c6050cbc6675****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'IgnoredList' => 
              array (
                'description' => '取消收藏不成功的ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '取消收藏不成功的ID列表。',
                  'type' => 'string',
                  'example' => 'icepublic-****7213c6050cbc66750b469701****',
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"IgnoredList\\": [\\n    \\"icepublic-****7213c6050cbc66750b469701****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CancelFavoritePublicMediaResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <IgnoredList>icepublic-****7213c6050cbc66750b469701****</IgnoredList>\\n</CancelFavoritePublicMediaResponse>","errorExample":""}]',
      'title' => '取消收藏公共版权媒资',
    ),
    'GetPublicMediaInfo' => 
    array (
      'summary' => '根据ICE公共版权媒资的 mediaId，获取并返回媒资信息。接口返回的URL为版权媒资的试听或试看地址，合成时会使用正式素材。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'Anonymous' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '104901',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceFEJXOS',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IMS媒资ID',
            'type' => 'string',
            'required' => false,
            'example' => 'icepublic-****14e501538aeef0a3140176f6****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => 'RequestId',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaInfo' => 
              array (
                'description' => '媒资信息',
                'type' => 'object',
                'properties' => 
                array (
                  'MediaId' => 
                  array (
                    'title' => '媒资ID',
                    'description' => '媒资ID',
                    'type' => 'string',
                    'example' => 'icepublic-****14e501538aeef0a3140176f6****',
                  ),
                  'MediaBasicInfo' => 
                  array (
                    'title' => 'BasicInfo',
                    'description' => 'BasicInfo',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MediaId' => 
                      array (
                        'title' => 'MediaId',
                        'description' => 'MediaId',
                        'type' => 'string',
                        'example' => 'icepublic-****14e501538aeef0a3140176f6****',
                      ),
                      'MediaType' => 
                      array (
                        'title' => '媒资媒体类型',
                        'description' => '媒资媒体类型',
                        'type' => 'string',
                        'example' => 'video',
                      ),
                      'BusinessType' => 
                      array (
                        'title' => '媒资业务类型',
                        'description' => '媒资业务类型',
                        'type' => 'string',
                        'example' => 'general',
                      ),
                      'Source' => 
                      array (
                        'title' => '来源',
                        'description' => '来源',
                        'type' => 'string',
                        'example' => 'oss',
                      ),
                      'Title' => 
                      array (
                        'title' => '标题',
                        'description' => '标题',
                        'type' => 'string',
                        'example' => 'title',
                      ),
                      'Description' => 
                      array (
                        'title' => '内容描述',
                        'description' => '内容描述',
                        'type' => 'string',
                        'example' => 'description',
                      ),
                      'Category' => 
                      array (
                        'title' => '分类',
                        'description' => '分类',
                        'type' => 'string',
                        'example' => 'category',
                      ),
                      'MediaTags' => 
                      array (
                        'title' => '标签',
                        'description' => '标签',
                        'type' => 'string',
                        'example' => '标签,tag1',
                      ),
                      'CoverURL' => 
                      array (
                        'title' => '封面地址',
                        'description' => '封面地址',
                        'type' => 'string',
                        'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                      ),
                      'UserData' => 
                      array (
                        'title' => '用户数据',
                        'description' => '用户数据',
                        'type' => 'string',
                        'example' => '{"key":"value"}',
                      ),
                      'Status' => 
                      array (
                        'title' => '资源状态',
                        'description' => '资源状态',
                        'type' => 'string',
                        'example' => 'Normal',
                      ),
                      'CreateTime' => 
                      array (
                        'title' => '媒资创建时间',
                        'description' => '媒资创建时间',
                        'type' => 'string',
                        'example' => '2020-12-26T04:11:08Z',
                      ),
                      'ModifiedTime' => 
                      array (
                        'title' => '媒资修改时间',
                        'description' => '媒资修改时间',
                        'type' => 'string',
                        'example' => '2020-12-26T04:11:10Z',
                      ),
                      'DeletedTime' => 
                      array (
                        'title' => '媒资删除时间',
                        'description' => '媒资删除时间',
                        'type' => 'string',
                        'example' => '2020-12-26T04:11:15Z',
                      ),
                      'SpriteImages' => 
                      array (
                        'title' => '雪碧图',
                        'description' => '雪碧图',
                        'type' => 'string',
                        'example' => '[{"bucket":"example-bucket","count":"32","iceJobId":"******83ec44d58b2069def2e******","location":"oss-cn-shanghai","snapshotRegular":"example/example-{Count}.jpg","spriteRegular":"example/example-{TileCount}.jpg","templateId":"******e438b14ff39293eaec25******","tileCount":"1"}]',
                      ),
                    ),
                  ),
                  'DynamicMetaData' => 
                  array (
                    'title' => '公共媒资动态元数据',
                    'description' => '公共媒资动态元数据',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => '类型',
                        'description' => '类型。取值范围：

- "ai": AI原始结果统一化处理后的AI数据
- "user-defined": 用户自定义元数据
- "system": 系统自带',
                        'type' => 'string',
                        'example' => 'system',
                      ),
                      'Data' => 
                      array (
                        'title' => '元数据json',
                        'description' => '元数据json',
                        'type' => 'string',
                        'example' => '{"AuditionUrl": "http://example-bucket.cdn.domain.com/example.mp4", "AuditionCount": 3}',
                      ),
                    ),
                  ),
                  'FileInfoList' => 
                  array (
                    'title' => 'FileInfos',
                    'description' => 'FileInfos',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FileBasicInfo' => 
                        array (
                          'title' => '文件基础信息，包含时长，大小等',
                          'description' => '文件基础信息，包含时长，大小等',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FileName' => 
                            array (
                              'title' => '文件名',
                              'description' => '文件名',
                              'type' => 'string',
                              'example' => 'example.mp4',
                            ),
                            'FileStatus' => 
                            array (
                              'title' => '文件状态',
                              'description' => '文件状态',
                              'type' => 'string',
                              'example' => 'Normal',
                            ),
                            'FileType' => 
                            array (
                              'title' => '文件类型',
                              'description' => '文件类型',
                              'type' => 'string',
                              'example' => 'source_file',
                            ),
                            'FileSize' => 
                            array (
                              'title' => '文件大小（字节）',
                              'description' => '文件大小（字节）',
                              'type' => 'string',
                              'example' => '27007',
                            ),
                            'FileUrl' => 
                            array (
                              'title' => '文件oss地址',
                              'description' => '版权媒资试听或试看地址。',
                              'type' => 'string',
                              'example' => 'http://example-bucket.cdn.domain.com/example.mp4',
                            ),
                            'Region' => 
                            array (
                              'title' => '文件存储区域',
                              'description' => '文件存储区域',
                              'type' => 'string',
                              'example' => 'cn-shanghai',
                            ),
                            'FormatName' => 
                            array (
                              'title' => '封装格式',
                              'description' => '封装格式',
                              'type' => 'string',
                              'example' => 'mp4',
                            ),
                            'Duration' => 
                            array (
                              'title' => '时长',
                              'description' => '时长',
                              'type' => 'string',
                              'example' => '16.2',
                            ),
                            'Bitrate' => 
                            array (
                              'title' => '码率',
                              'description' => '码率',
                              'type' => 'string',
                              'example' => '192.0',
                            ),
                            'Width' => 
                            array (
                              'title' => '宽',
                              'description' => '宽',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Height' => 
                            array (
                              'title' => '高',
                              'description' => '高',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                        'AudioStreamInfoList' => 
                        array (
                          'title' => '音频流信息，一个媒资可能有多条音频流',
                          'description' => '音频流信息，一个媒资可能有多条音频流',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '音频流序号',
                                'description' => '音频流序号',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式简述名',
                                'description' => '编码格式简述名',
                                'type' => 'string',
                                'example' => 'aac',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式长述名',
                                'description' => '编码格式长述名',
                                'type' => 'string',
                                'example' => 'AAC (Advanced Audio Coding)',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码时基',
                                'description' => '编码时基',
                                'type' => 'string',
                                'example' => '1/44100',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码格式标记文本',
                                'description' => '编码格式标记文本',
                                'type' => 'string',
                                'example' => 'mp4a',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码格式标记',
                                'description' => '编码格式标记',
                                'type' => 'string',
                                'example' => '0x6134706d',
                              ),
                              'Profile' => 
                              array (
                                'title' => '编码预置',
                                'description' => '编码预置',
                                'type' => 'string',
                                'example' => 'High',
                              ),
                              'SampleFmt' => 
                              array (
                                'title' => '采样格式',
                                'description' => '采样格式',
                                'type' => 'string',
                                'example' => 'fltp',
                              ),
                              'SampleRate' => 
                              array (
                                'title' => '采样率',
                                'description' => '采样率',
                                'type' => 'string',
                                'example' => '44100',
                              ),
                              'Channels' => 
                              array (
                                'title' => '声道数',
                                'description' => '声道数',
                                'type' => 'string',
                                'example' => '2',
                              ),
                              'ChannelLayout' => 
                              array (
                                'title' => '声道输出样式',
                                'description' => '声道输出样式',
                                'type' => 'string',
                                'example' => 'stereo',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时基',
                                'description' => '时基',
                                'type' => 'string',
                                'example' => '1/44100',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '起始时间',
                                'description' => '起始时间',
                                'type' => 'string',
                                'example' => '0.000000',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '16.2',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '192.0',
                              ),
                              'Fps' => 
                              array (
                                'title' => '音频帧率',
                                'description' => '音频帧率',
                                'type' => 'string',
                                'example' => '10',
                              ),
                              'NumFrames' => 
                              array (
                                'title' => '总帧数',
                                'description' => '总帧数',
                                'type' => 'string',
                                'example' => '162',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言',
                                'description' => '语言',
                                'type' => 'string',
                                'example' => 'und',
                              ),
                            ),
                          ),
                        ),
                        'VideoStreamInfoList' => 
                        array (
                          'title' => '视频流信息，一个媒资可能有多条视频流',
                          'description' => '视频流信息，一个媒资可能有多条视频流',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '视频流序号',
                                'description' => '视频流序号',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式简述名',
                                'description' => '编码格式简述名',
                                'type' => 'string',
                                'example' => 'h264',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式长述名',
                                'description' => '编码格式长述名',
                                'type' => 'string',
                                'example' => 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
                              ),
                              'Profile' => 
                              array (
                                'title' => '编码预置',
                                'description' => '编码预置',
                                'type' => 'string',
                                'example' => 'High',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码时基',
                                'description' => '编码时基',
                                'type' => 'string',
                                'example' => '1/48',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码格式标记文本',
                                'description' => '编码格式标记文本',
                                'type' => 'string',
                                'example' => '[0][0][0][0]',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码格式标记',
                                'description' => '编码格式标记',
                                'type' => 'string',
                                'example' => '0x0000',
                              ),
                              'Width' => 
                              array (
                                'title' => '宽',
                                'description' => '宽',
                                'type' => 'string',
                                'example' => '960',
                              ),
                              'Height' => 
                              array (
                                'title' => '高',
                                'description' => '高',
                                'type' => 'string',
                                'example' => '540',
                              ),
                              'HasBFrames' => 
                              array (
                                'title' => '是否有B帧',
                                'description' => '是否有B帧',
                                'type' => 'string',
                                'example' => '2',
                              ),
                              'Sar' => 
                              array (
                                'title' => '编码信号分辨率比',
                                'description' => '编码信号分辨率比',
                                'type' => 'string',
                                'example' => '0:1',
                              ),
                              'Dar' => 
                              array (
                                'title' => '编码显示分辨率比',
                                'description' => '编码显示分辨率比',
                                'type' => 'string',
                                'example' => '0:1',
                              ),
                              'PixFmt' => 
                              array (
                                'title' => '像素格式',
                                'description' => '像素格式',
                                'type' => 'string',
                                'example' => 'yuv420p',
                              ),
                              'Level' => 
                              array (
                                'title' => '编码等级',
                                'description' => '编码等级',
                                'type' => 'string',
                                'example' => '30',
                              ),
                              'Fps' => 
                              array (
                                'title' => '视频帧率',
                                'description' => '视频帧率',
                                'type' => 'string',
                                'example' => '24.0',
                              ),
                              'AvgFPS' => 
                              array (
                                'title' => '平均帧率',
                                'description' => '平均帧率',
                                'type' => 'string',
                                'example' => '24.0',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时基',
                                'description' => '时基',
                                'type' => 'string',
                                'example' => '1/12288',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '起始时间',
                                'description' => '起始时间',
                                'type' => 'string',
                                'example' => '0.081706',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '216.206706',
                              ),
                              'Bitrate' => 
                              array (
                                'title' => '码率',
                                'description' => '码率',
                                'type' => 'string',
                                'example' => '1001.594',
                              ),
                              'NumFrames' => 
                              array (
                                'title' => '总帧数',
                                'description' => '总帧数',
                                'type' => 'string',
                                'example' => '5184',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言',
                                'description' => '语言',
                                'type' => 'string',
                                'example' => 'und',
                              ),
                              'Rotate' => 
                              array (
                                'title' => '旋转',
                                'description' => '旋转',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'Nb_frames' => 
                              array (
                                'title' => '总帧数',
                                'description' => '总帧数',
                                'type' => 'string',
                                'example' => '5184',
                              ),
                            ),
                          ),
                        ),
                        'SubtitleStreamInfoList' => 
                        array (
                          'title' => '字幕流信息，一个媒资可能有多条字幕流',
                          'description' => '字幕流信息，一个媒资可能有多条字幕流',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Index' => 
                              array (
                                'title' => '音频流序号',
                                'description' => '字幕流序号',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'CodecName' => 
                              array (
                                'title' => '编码格式简述名',
                                'description' => '编码格式简述名',
                                'type' => 'string',
                                'example' => 'srt',
                              ),
                              'CodecLongName' => 
                              array (
                                'title' => '编码格式长述名',
                                'description' => '编码格式长述名',
                                'type' => 'string',
                                'example' => 'SubRip Text',
                              ),
                              'CodecTimeBase' => 
                              array (
                                'title' => '编码时基',
                                'description' => '编码时基',
                                'type' => 'string',
                                'example' => '29.97',
                              ),
                              'CodecTagString' => 
                              array (
                                'title' => '编码格式标记文本',
                                'description' => '编码格式标记文本',
                                'type' => 'string',
                                'example' => 'unicode',
                              ),
                              'CodecTag' => 
                              array (
                                'title' => '编码格式标记',
                                'description' => '编码格式标记',
                                'type' => 'string',
                                'example' => 'unicode',
                              ),
                              'Timebase' => 
                              array (
                                'title' => '时基',
                                'description' => '时基',
                                'type' => 'string',
                                'example' => '30',
                              ),
                              'StartTime' => 
                              array (
                                'title' => '起始时间',
                                'description' => '起始时间',
                                'type' => 'string',
                                'example' => '0',
                              ),
                              'Duration' => 
                              array (
                                'title' => '时长',
                                'description' => '时长',
                                'type' => 'string',
                                'example' => '1',
                              ),
                              'Lang' => 
                              array (
                                'title' => '语言',
                                'description' => '语言',
                                'type' => 'string',
                                'example' => 'und',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaInfo\\": {\\n    \\"MediaId\\": \\"icepublic-****14e501538aeef0a3140176f6****\\",\\n    \\"MediaBasicInfo\\": {\\n      \\"MediaId\\": \\"icepublic-****14e501538aeef0a3140176f6****\\",\\n      \\"MediaType\\": \\"video\\",\\n      \\"BusinessType\\": \\"general\\",\\n      \\"Source\\": \\"oss\\",\\n      \\"Title\\": \\"title\\",\\n      \\"Description\\": \\"description\\",\\n      \\"Category\\": \\"category\\",\\n      \\"MediaTags\\": \\"标签,tag1\\",\\n      \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n      \\"UserData\\": \\"{\\\\\\"key\\\\\\":\\\\\\"value\\\\\\"}\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"CreateTime\\": \\"2020-12-26T04:11:08Z\\",\\n      \\"ModifiedTime\\": \\"2020-12-26T04:11:10Z\\",\\n      \\"DeletedTime\\": \\"2020-12-26T04:11:15Z\\",\\n      \\"SpriteImages\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"32\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******83ec44d58b2069def2e******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-shanghai\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example/example-{Count}.jpg\\\\\\",\\\\\\"spriteRegular\\\\\\":\\\\\\"example/example-{TileCount}.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e438b14ff39293eaec25******\\\\\\",\\\\\\"tileCount\\\\\\":\\\\\\"1\\\\\\"}]\\"\\n    },\\n    \\"DynamicMetaData\\": {\\n      \\"Type\\": \\"system\\",\\n      \\"Data\\": \\"{\\\\\\"AuditionUrl\\\\\\": \\\\\\"http://example-bucket.cdn.domain.com/example.mp4\\\\\\", \\\\\\"AuditionCount\\\\\\": 3}\\"\\n    },\\n    \\"FileInfoList\\": [\\n      {\\n        \\"FileBasicInfo\\": {\\n          \\"FileName\\": \\"example.mp4\\",\\n          \\"FileStatus\\": \\"Normal\\",\\n          \\"FileType\\": \\"source_file\\",\\n          \\"FileSize\\": \\"27007\\",\\n          \\"FileUrl\\": \\"http://example-bucket.cdn.domain.com/example.mp4\\",\\n          \\"Region\\": \\"cn-shanghai\\",\\n          \\"FormatName\\": \\"mp4\\",\\n          \\"Duration\\": \\"16.2\\",\\n          \\"Bitrate\\": \\"192.0\\",\\n          \\"Width\\": \\"0\\",\\n          \\"Height\\": \\"0\\"\\n        },\\n        \\"AudioStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"1\\",\\n            \\"CodecName\\": \\"aac\\",\\n            \\"CodecLongName\\": \\"AAC (Advanced Audio Coding)\\",\\n            \\"CodecTimeBase\\": \\"1/44100\\",\\n            \\"CodecTagString\\": \\"mp4a\\",\\n            \\"CodecTag\\": \\"0x6134706d\\",\\n            \\"Profile\\": \\"High\\",\\n            \\"SampleFmt\\": \\"fltp\\",\\n            \\"SampleRate\\": \\"44100\\",\\n            \\"Channels\\": \\"2\\",\\n            \\"ChannelLayout\\": \\"stereo\\",\\n            \\"Timebase\\": \\"1/44100\\",\\n            \\"StartTime\\": \\"0.000000\\",\\n            \\"Duration\\": \\"16.2\\",\\n            \\"Bitrate\\": \\"192.0\\",\\n            \\"Fps\\": \\"10\\",\\n            \\"NumFrames\\": \\"162\\",\\n            \\"Lang\\": \\"und\\"\\n          }\\n        ],\\n        \\"VideoStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"0\\",\\n            \\"CodecName\\": \\"h264\\",\\n            \\"CodecLongName\\": \\"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\\",\\n            \\"Profile\\": \\"High\\",\\n            \\"CodecTimeBase\\": \\"1/48\\",\\n            \\"CodecTagString\\": \\"[0][0][0][0]\\",\\n            \\"CodecTag\\": \\"0x0000\\",\\n            \\"Width\\": \\"960\\",\\n            \\"Height\\": \\"540\\",\\n            \\"HasBFrames\\": \\"2\\",\\n            \\"Sar\\": \\"0:1\\",\\n            \\"Dar\\": \\"0:1\\",\\n            \\"PixFmt\\": \\"yuv420p\\",\\n            \\"Level\\": \\"30\\",\\n            \\"Fps\\": \\"24.0\\",\\n            \\"AvgFPS\\": \\"24.0\\",\\n            \\"Timebase\\": \\"1/12288\\",\\n            \\"StartTime\\": \\"0.081706\\",\\n            \\"Duration\\": \\"216.206706\\",\\n            \\"Bitrate\\": \\"1001.594\\",\\n            \\"NumFrames\\": \\"5184\\",\\n            \\"Lang\\": \\"und\\",\\n            \\"Rotate\\": \\"0\\",\\n            \\"Nb_frames\\": \\"5184\\"\\n          }\\n        ],\\n        \\"SubtitleStreamInfoList\\": [\\n          {\\n            \\"Index\\": \\"1\\",\\n            \\"CodecName\\": \\"srt\\",\\n            \\"CodecLongName\\": \\"SubRip Text\\",\\n            \\"CodecTimeBase\\": \\"29.97\\",\\n            \\"CodecTagString\\": \\"unicode\\",\\n            \\"CodecTag\\": \\"unicode\\",\\n            \\"Timebase\\": \\"30\\",\\n            \\"StartTime\\": \\"0\\",\\n            \\"Duration\\": \\"1\\",\\n            \\"Lang\\": \\"und\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetPublicMediaInfoResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <MediaInfo>\\n        <MediaId>icepublic-****14e501538aeef0a3140176f6****</MediaId>\\n        <MediaBasicInfo>\\n            <MediaId>icepublic-****14e501538aeef0a3140176f6****</MediaId>\\n            <MediaType>video</MediaType>\\n            <BusinessType>general</BusinessType>\\n            <Source>oss</Source>\\n            <Title>title</Title>\\n            <Description>description</Description>\\n            <Category>category</Category>\\n            <MediaTags>标签,tag1</MediaTags>\\n            <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n            <UserData>{\\"key\\":\\"value\\"}</UserData>\\n            <Status>Normal</Status>\\n            <CreateTime>2020-12-26T04:11:08Z</CreateTime>\\n            <ModifiedTime>2020-12-26T04:11:10Z</ModifiedTime>\\n            <DeletedTime>2020-12-26T04:11:15Z</DeletedTime>\\n            <SpriteImages>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"32\\",\\"iceJobId\\":\\"******83ec44d58b2069def2e******\\",\\"location\\":\\"oss-cn-shanghai\\",\\"snapshotRegular\\":\\"example/example-{Count}.jpg\\",\\"spriteRegular\\":\\"example/example-{TileCount}.jpg\\",\\"templateId\\":\\"******e438b14ff39293eaec25******\\",\\"tileCount\\":\\"1\\"}]</SpriteImages>\\n        </MediaBasicInfo>\\n        <DynamicMetaData>\\n            <Type>system</Type>\\n            <Data>{\\"AuditionUrl\\": \\"http://example-bucket.cdn.domain.com/example.mp4\\", \\"AuditionCount\\": 3}</Data>\\n        </DynamicMetaData>\\n        <FileInfoList>\\n            <FileBasicInfo>\\n                <FileName>example.mp4</FileName>\\n                <FileStatus>Normal</FileStatus>\\n                <FileType>source_file</FileType>\\n                <FileSize>27007</FileSize>\\n                <FileUrl>http://example-bucket.cdn.domain.com/example.mp4</FileUrl>\\n                <Region>cn-shanghai</Region>\\n                <FormatName>mp4</FormatName>\\n                <Duration>16.2</Duration>\\n                <Bitrate>192.0</Bitrate>\\n                <Width>0</Width>\\n                <Height>0</Height>\\n            </FileBasicInfo>\\n            <AudioStreamInfoList>\\n                <Index>1</Index>\\n                <CodecName>aac</CodecName>\\n                <CodecLongName>AAC (Advanced Audio Coding)</CodecLongName>\\n                <CodecTimeBase>1/44100</CodecTimeBase>\\n                <CodecTagString>mp4a</CodecTagString>\\n                <CodecTag>0x6134706d</CodecTag>\\n                <Profile>High</Profile>\\n                <SampleFmt>fltp</SampleFmt>\\n                <SampleRate>44100</SampleRate>\\n                <Channels>2</Channels>\\n                <ChannelLayout>stereo</ChannelLayout>\\n                <Timebase>1/44100</Timebase>\\n                <StartTime>0.000000</StartTime>\\n                <Duration>16.2</Duration>\\n                <Bitrate>192.0</Bitrate>\\n                <Fps>10</Fps>\\n                <NumFrames>162</NumFrames>\\n                <Lang>und</Lang>\\n            </AudioStreamInfoList>\\n            <VideoStreamInfoList>\\n                <Index>0</Index>\\n                <CodecName>h264</CodecName>\\n                <CodecLongName>H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10</CodecLongName>\\n                <Profile>High</Profile>\\n                <CodecTimeBase>1/48</CodecTimeBase>\\n                <CodecTagString>[0][0][0][0]</CodecTagString>\\n                <CodecTag>0x0000</CodecTag>\\n                <Width>960</Width>\\n                <Height>540</Height>\\n                <HasBFrames>2</HasBFrames>\\n                <Sar>0:1</Sar>\\n                <Dar>0:1</Dar>\\n                <PixFmt>yuv420p</PixFmt>\\n                <Level>30</Level>\\n                <Fps>24.0</Fps>\\n                <AvgFPS>24.0</AvgFPS>\\n                <Timebase>1/12288</Timebase>\\n                <StartTime>0.081706</StartTime>\\n                <Duration>216.206706</Duration>\\n                <Bitrate>1001.594</Bitrate>\\n                <NumFrames>5184</NumFrames>\\n                <Lang>und</Lang>\\n                <Rotate>0</Rotate>\\n                <Nb_frames>5184</Nb_frames>\\n            </VideoStreamInfoList>\\n            <SubtitleStreamInfoList>\\n                <Index>1</Index>\\n                <CodecName>srt</CodecName>\\n                <CodecLongName>SubRip Text</CodecLongName>\\n                <CodecTimeBase>29.97</CodecTimeBase>\\n                <CodecTagString>unicode</CodecTagString>\\n                <CodecTag>unicode</CodecTag>\\n                <Timebase>30</Timebase>\\n                <StartTime>0</StartTime>\\n                <Duration>1</Duration>\\n                <Lang>und</Lang>\\n            </SubtitleStreamInfoList>\\n        </FileInfoList>\\n    </MediaInfo>\\n</GetPublicMediaInfoResponse>","errorExample":""}]',
      'title' => '获取公共版权媒资',
    ),
    'SearchPublicMediaInfo' => 
    array (
      'summary' => '根据用户所给参数，搜索符合条件的媒资。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MediaIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IMS媒资ID。
- 多个用英文逗号分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****,****15d4a4b0448391508f2cb486****',
          ),
        ),
        1 => 
        array (
          'name' => 'DynamicMetaDataMatchFields',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '动态元数据搜索匹配条件',
            'type' => 'string',
            'required' => false,
            'example' => '"ApprovalStatus=\'Available\'&amp;MaterialBags=\'boutiquemusic\'&amp;Mood=\'Nervous\'"',
          ),
        ),
        2 => 
        array (
          'name' => 'Favorite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户是否收藏了该媒资。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'Authorized',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户是否已购买了包含此媒资的资源包。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结果排序方式 <field>:<order>。取值范围：

field:
- "UsageCount" 使用量
- "UnitPrice" 单价

order:
- "Desc" 倒序
- "Asc" 正序',
            'type' => 'string',
            'required' => false,
            'example' => 'UsageCount:Desc,UnitPrice:Asc',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页行数大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'EntityId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实体ID，用来标识不同种类的公共版权媒资。取值：
- Copyright_Music: 公共版权音乐',
            'type' => 'string',
            'required' => false,
            'example' => 'Copyright_Music',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '****3CFB-2767-54FD-B311-BD15A4C1****',
              ),
              'TotalCount' => 
              array (
                'description' => '本次请求条件下的数据总量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'PublicMediaInfos' => 
              array (
                'description' => '公共版权媒资信息',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Authorized' => 
                    array (
                      'description' => '是否已购买包含该媒资的资源包。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Favorite' => 
                    array (
                      'description' => '是否收藏了该媒资。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'RemainingAuthTime' => 
                    array (
                      'description' => '资源包剩余有效时间（天）',
                      'type' => 'string',
                      'example' => '100',
                    ),
                    'MediaInfo' => 
                    array (
                      'description' => '媒资信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MediaId' => 
                        array (
                          'title' => '媒资ID',
                          'description' => '媒资ID',
                          'type' => 'string',
                          'example' => 'icepublic-****87b921bb4a55908a72a0537e****',
                        ),
                        'MediaBasicInfo' => 
                        array (
                          'title' => 'BasicInfo',
                          'description' => 'BasicInfo',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MediaId' => 
                            array (
                              'title' => 'MediaId',
                              'description' => 'MediaId',
                              'type' => 'string',
                              'example' => 'icepublic-****87b921bb4a55908a72a0537e****',
                            ),
                            'MediaType' => 
                            array (
                              'title' => '媒资媒体类型',
                              'description' => '媒资媒体类型',
                              'type' => 'string',
                              'example' => 'audio',
                            ),
                            'BusinessType' => 
                            array (
                              'title' => '媒资业务类型',
                              'description' => '媒资业务类型',
                              'type' => 'string',
                              'example' => 'general',
                            ),
                            'Source' => 
                            array (
                              'title' => '来源',
                              'description' => '来源',
                              'type' => 'string',
                              'example' => 'oss',
                            ),
                            'Title' => 
                            array (
                              'title' => '标题',
                              'description' => '标题',
                              'type' => 'string',
                              'example' => 'title',
                            ),
                            'Description' => 
                            array (
                              'title' => '内容描述',
                              'description' => '内容描述',
                              'type' => 'string',
                              'example' => 'description',
                            ),
                            'Category' => 
                            array (
                              'title' => '分类',
                              'description' => '分类',
                              'type' => 'string',
                              'example' => 'category',
                            ),
                            'MediaTags' => 
                            array (
                              'title' => '标签',
                              'description' => '标签',
                              'type' => 'string',
                              'example' => '标签,tag1',
                            ),
                            'CoverURL' => 
                            array (
                              'title' => '封面地址',
                              'description' => '封面地址',
                              'type' => 'string',
                              'example' => 'http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>',
                            ),
                            'UserData' => 
                            array (
                              'title' => '用户数据',
                              'description' => '用户数据',
                              'type' => 'string',
                              'example' => 'userDataTest',
                            ),
                            'Status' => 
                            array (
                              'title' => '资源状态',
                              'description' => '资源状态',
                              'type' => 'string',
                              'example' => 'Normal',
                            ),
                            'CreateTime' => 
                            array (
                              'title' => '媒资创建时间',
                              'description' => '媒资创建时间',
                              'type' => 'string',
                              'example' => '2020-12-26T06:04:49Z',
                            ),
                            'ModifiedTime' => 
                            array (
                              'title' => '媒资修改时间',
                              'description' => '媒资修改时间',
                              'type' => 'string',
                              'example' => '2020-12-26T06:04:50Z',
                            ),
                            'DeletedTime' => 
                            array (
                              'title' => '媒资删除时间',
                              'description' => '媒资删除时间',
                              'type' => 'string',
                              'example' => '2020-12-29T06:04:49Z',
                            ),
                            'SpriteImages' => 
                            array (
                              'title' => '雪碧图',
                              'description' => '雪碧图',
                              'type' => 'string',
                              'example' => '[{"bucket":"example-bucket","count":"32","iceJobId":"******83ec44d58b2069def2e******","location":"oss-cn-shanghai","snapshotRegular":"example/example-{Count}.jpg","spriteRegular":"example/example-{TileCount}.jpg","templateId":"******e438b14ff39293eaec25******","tileCount":"1"}]',
                            ),
                          ),
                        ),
                        'DynamicMetaData' => 
                        array (
                          'description' => '动态元数据',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Data' => 
                            array (
                              'description' => '元数据json string',
                              'type' => 'string',
                              'example' => '"{\\"AuditionUrl\\": \\"http://xxx\\", \\"AuditionCount\\": 3...}"',
                            ),
                            'Type' => 
                            array (
                              'description' => '类型。取值范围：

- "ai": AI原始结果统一化处理后的AI数据
- "user-defined": 用户自定义元数据
- "system": 系统自带
',
                              'type' => 'string',
                              'example' => 'system',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"****3CFB-2767-54FD-B311-BD15A4C1****\\",\\n  \\"TotalCount\\": 100,\\n  \\"PublicMediaInfos\\": [\\n    {\\n      \\"Authorized\\": true,\\n      \\"Favorite\\": true,\\n      \\"RemainingAuthTime\\": \\"100\\",\\n      \\"MediaInfo\\": {\\n        \\"MediaId\\": \\"icepublic-****87b921bb4a55908a72a0537e****\\",\\n        \\"MediaBasicInfo\\": {\\n          \\"MediaId\\": \\"icepublic-****87b921bb4a55908a72a0537e****\\",\\n          \\"MediaType\\": \\"audio\\",\\n          \\"BusinessType\\": \\"general\\",\\n          \\"Source\\": \\"oss\\",\\n          \\"Title\\": \\"title\\",\\n          \\"Description\\": \\"description\\",\\n          \\"Category\\": \\"category\\",\\n          \\"MediaTags\\": \\"标签,tag1\\",\\n          \\"CoverURL\\": \\"http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=<ExpireTime>&OSSAccessKeyId=<OSSAccessKeyId>&Signature=<Signature>&security-token=<SecurityToken>\\",\\n          \\"UserData\\": \\"userDataTest\\",\\n          \\"Status\\": \\"Normal\\",\\n          \\"CreateTime\\": \\"2020-12-26T06:04:49Z\\",\\n          \\"ModifiedTime\\": \\"2020-12-26T06:04:50Z\\",\\n          \\"DeletedTime\\": \\"2020-12-29T06:04:49Z\\",\\n          \\"SpriteImages\\": \\"[{\\\\\\"bucket\\\\\\":\\\\\\"example-bucket\\\\\\",\\\\\\"count\\\\\\":\\\\\\"32\\\\\\",\\\\\\"iceJobId\\\\\\":\\\\\\"******83ec44d58b2069def2e******\\\\\\",\\\\\\"location\\\\\\":\\\\\\"oss-cn-shanghai\\\\\\",\\\\\\"snapshotRegular\\\\\\":\\\\\\"example/example-{Count}.jpg\\\\\\",\\\\\\"spriteRegular\\\\\\":\\\\\\"example/example-{TileCount}.jpg\\\\\\",\\\\\\"templateId\\\\\\":\\\\\\"******e438b14ff39293eaec25******\\\\\\",\\\\\\"tileCount\\\\\\":\\\\\\"1\\\\\\"}]\\"\\n        },\\n        \\"DynamicMetaData\\": {\\n          \\"Data\\": \\"\\\\\\"{\\\\\\\\\\\\\\"AuditionUrl\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"http://xxx\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"AuditionCount\\\\\\\\\\\\\\": 3...}\\\\\\"\\",\\n          \\"Type\\": \\"system\\"\\n        }\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<SearchPublicMediaInfoResponse>\\n    <RequestId>****3CFB-2767-54FD-B311-BD15A4C1****</RequestId>\\n    <TotalCount>100</TotalCount>\\n    <PublicMediaInfos>\\n        <Authorized>true</Authorized>\\n        <Favorite>true</Favorite>\\n        <RemainingAuthTime>100</RemainingAuthTime>\\n        <MediaInfo>\\n            <MediaId>icepublic-****87b921bb4a55908a72a0537e****</MediaId>\\n            <MediaBasicInfo>\\n                <MediaId>icepublic-****87b921bb4a55908a72a0537e****</MediaId>\\n                <MediaType>audio</MediaType>\\n                <BusinessType>general</BusinessType>\\n                <Source>oss</Source>\\n                <Title>title</Title>\\n                <Description>description</Description>\\n                <Category>category</Category>\\n                <MediaTags>标签,tag1</MediaTags>\\n                <CoverURL>http://example-bucket.oss-cn-shanghai.aliyuncs.com/example.png?Expires=&lt;ExpireTime&gt;&amp;OSSAccessKeyId=&lt;OSSAccessKeyId&gt;&amp;Signature=&lt;Signature&gt;&amp;security-token=&lt;SecurityToken&gt;</CoverURL>\\n                <UserData>userDataTest</UserData>\\n                <Status>Normal</Status>\\n                <CreateTime>2020-12-26T06:04:49Z</CreateTime>\\n                <ModifiedTime>2020-12-26T06:04:50Z</ModifiedTime>\\n                <DeletedTime>2020-12-29T06:04:49Z</DeletedTime>\\n                <SpriteImages>[{\\"bucket\\":\\"example-bucket\\",\\"count\\":\\"32\\",\\"iceJobId\\":\\"******83ec44d58b2069def2e******\\",\\"location\\":\\"oss-cn-shanghai\\",\\"snapshotRegular\\":\\"example/example-{Count}.jpg\\",\\"spriteRegular\\":\\"example/example-{TileCount}.jpg\\",\\"templateId\\":\\"******e438b14ff39293eaec25******\\",\\"tileCount\\":\\"1\\"}]</SpriteImages>\\n            </MediaBasicInfo>\\n            <DynamicMetaData>\\n                <Data>\\"{\\\\\\"AuditionUrl\\\\\\": \\\\\\"http://xxx\\\\\\", \\\\\\"AuditionCount\\\\\\": 3...}\\"</Data>\\n                <Type>system</Type>\\n            </DynamicMetaData>\\n        </MediaInfo>\\n    </PublicMediaInfos>\\n</SearchPublicMediaInfoResponse>","errorExample":""}]',
      'title' => '搜索公共版权媒资',
    ),
    'SubmitDynamicChartJob' => 
    array (
      'summary' => '根据Excel生成折线图、饼图、柱状图等视频，支持修改线条颜色、字体等信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ChartType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '图表类型',
            'description' => '图表类型',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'Line' => 'Line',
              'Histogram' => 'Histogram',
              'Pie' => 'Pie',
            ),
            'example' => 'Line',
          ),
        ),
        1 => 
        array (
          'name' => 'Input',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '图表输入数据',
            'description' => '图表输入数据',
            'type' => 'string',
            'required' => true,
            'example' => '{"XlsFile":"https://your-bucket.oss-cn-shanghai.aliyuncs.com/obj.xls"}',
          ),
        ),
        2 => 
        array (
          'name' => 'OutputConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '输出设置',
            'description' => '输出设置',
            'type' => 'string',
            'required' => true,
            'example' => '{"MediaURL":"https://your-bucket.oss-cn-shanghai.aliyuncs.com/obj.mp4","Bitrate":2000,"Width":800,"Height":680}',
          ),
        ),
        3 => 
        array (
          'name' => 'ChartConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '图表配置',
            'description' => '图表配置',
            'type' => 'string',
            'required' => false,
            'example' => '{"Style":"Normal","TitleStartTime":"3000","ChartStartTime":"3000","VideoDuration":"15000"}',
          ),
        ),
        4 => 
        array (
          'name' => 'ChartTitle',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '主标题',
            'description' => '主标题',
            'type' => 'string',
            'required' => false,
            'example' => '{"Text":"主标题","FontSize":"30","FontColor":"#000000","FontFile":"Microsoft YaHei"}',
          ),
        ),
        5 => 
        array (
          'name' => 'Subtitle',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '副标题',
            'description' => '副标题',
            'type' => 'string',
            'required' => false,
            'example' => '{"Text":"副标题","FontSize":"30","FontColor":"#000000","FontFile":"Microsoft YaHei"}',
          ),
        ),
        6 => 
        array (
          'name' => 'Unit',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '单位',
            'description' => '单位',
            'type' => 'string',
            'required' => false,
            'example' => '{"Text":"单位","FontSize":"30","FontColor":"#000000","FontFile":"Microsoft YaHei"}',
          ),
        ),
        7 => 
        array (
          'name' => 'DataSource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '数据来源',
            'description' => '数据来源',
            'type' => 'string',
            'required' => false,
            'example' => '{"Text":"数据来源","FontSize":"30","FontColor":"#000000","FontFile":"Microsoft YaHei"}',
          ),
        ),
        8 => 
        array (
          'name' => 'Background',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '图表背景',
            'description' => '图表背景',
            'type' => 'string',
            'required' => false,
            'example' => '{"Color":"#000000","ImageUrl":"http://your-bucket.oss-cn-shanghai.aliyuncs.com/obj.jpg"}',
          ),
        ),
        9 => 
        array (
          'name' => 'AxisParams',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '坐标样式。XAxisFontInterval不传或为0则算法自动计算间距',
            'description' => '坐标样式。XAxisFontInterval不传或为0则算法自动计算间距',
            'type' => 'string',
            'required' => false,
            'example' => '{"FontFile":"Microsoft YaHei","XAxisFontSize":"30","YAxisFontSize":"30","XAxisFontInterval":"30","AxisColor":"30"}',
          ),
        ),
        10 => 
        array (
          'name' => 'Title',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务标题',
            'description' => '任务标题',
            'type' => 'string',
            'required' => false,
            'example' => '任务标题',
          ),
        ),
        11 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务描述',
            'description' => '任务描述',
            'type' => 'string',
            'required' => false,
            'example' => '任务描述',
          ),
        ),
        12 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义数据，JSON格式',
            'description' => '自定义数据，JSON格式',
            'type' => 'string',
            'required' => false,
            'example' => '{"user":"data"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求Id',
                'description' => '请求Id',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'JobId' => 
              array (
                'title' => '任务Id',
                'description' => '任务Id',
                'type' => 'string',
                'example' => '****20b48fb04483915d4f2cd8ac****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"JobId\\": \\"****20b48fb04483915d4f2cd8ac****\\"\\n}","errorExample":""},{"type":"xml","example":"<SubmitDynamicChartJobResponse>\\n    <RequestId>******11-DB8D-4A9A-875B-275798******</RequestId>\\n    <JobId>****20b48fb04483915d4f2cd8ac****</JobId>\\n</SubmitDynamicChartJobResponse>","errorExample":""}]',
      'title' => '提交动态图表任务',
      'description' => '根据Excel数据生成图表视频，目前支持折线图、柱状图、饼图，目前仅在上海区域可用。
- 支持设置图表标题、子标题、数据来源、单位等文案，支持设置文案字体、字号，目前支持字体：[字体列表](https://help.aliyun.com/document_detail/285596.html)。
- 支持内置5种风格，风格枚举值：Normal / Mystery / Lively / Business / Green。
- 支持设置背景颜色、背景图片。
- 支持设置视频时长、尺寸、码率。

参考示例：
- 折线图：[Excel示例](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/line.xlsx)，[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/line.mp4)。
- 柱状图：[Excel示例](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/histgram.xlsx)，[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/histgram.mp4)。
- 饼图：[Excel示例](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/pie.xlsx)，[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/pie.mp4)。
- Normal风格：[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/Normal.mp4)。
- Mystery风格：[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/Mystery.mp4)。
- Lively风格：[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/Lively.mp4)。
- Business风格：[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/Business.mp4)。
- Green风格：[合成效果](https://ice-public-media.oss-cn-shanghai.aliyuncs.com/smart/dynamicChart/Green.mp4)。
',
      'responseParamsDescription' => '动态图表任务执行结果可以用任务JobId通过[获取智能任务结果接口](https://help.aliyun.com/document_detail/203429.html)查询任务执行详细信息，任务执行成功时[获取智能任务结果接口](https://help.aliyun.com/document_detail/203429.html)返回结果示例如下。
```
{
  "RequestId": "******2D-443C-5043-B0E4-867070******",
  "JobResult": {
    "MediaId": "******bf47c94e82b3b2014361******"
  },
  "State": "Finished",
  "JobId": "******042d5e4db6866f6289d1******",
  "SmartJobInfo": {
    "JobType": "DynamicChart",
    "ModifiedTime": "2022-01-21T07:02:02Z",
    "UserId": 1234562230123456,
    "CreateTime": "2022-01-21T07:02:02Z",
    "Title": "欧叔的动态图表用例1",
    "EditingConfig": "null"
  }
}
```',
    ),
    'ListMediaProducingJobs' => 
    array (
      'summary' => '列出符合条件的合成任务，可根据任务状态、类型查询。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '12624',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceM55707',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询以下状态的合成任务，支持多值，以英文逗号分隔',
            'description' => '合成任务状态',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Init' => '任务初始化',
              'Failed' => '合成失败',
              'Success' => '合成成功',
              'Processing' => '合成中',
            ),
            'example' => 'Success',
          ),
        ),
        1 => 
        array (
          'name' => 'JobType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务类型',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'LiveEditingJob' => '直播剪辑任务',
              'EditingJob' => '普通剪辑任务',
              'VETemplateJob' => '高级模板剪辑任务',
            ),
            'example' => 'EditingJob',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-01-11T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结束时间，与StartTime相差不超过30天。格式为yyyy-mm-ddthh:mm:ssz（UTC时间）。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-02T23:59:59Z',
          ),
        ),
        4 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词，可以根据任务ID搜索。',
            'type' => 'string',
            'required' => false,
            'example' => '****20b48fb04483915d4f2cd8ac****',
          ),
        ),
        5 => 
        array (
          'name' => 'MasterJobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '一键成片任务Id，当此条件不为空时，为查询一键成片任务的子任务。',
            'type' => 'string',
            'required' => false,
            'example' => '******8750b54e3c976a47da6f******',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前开始读取的位置',
            'type' => 'string',
            'required' => false,
            'example' => '8EqYpQbZ6Eh7+Zz8DxVYoQ==',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次请求所返回的最大记录条数。

最大值：100，默认值：10',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        8 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序参数，默认按创建时间倒序。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'CreationTime:Asc' => '按照创建时间正序',
              'CreationTime:Desc' => '按照创建时间倒序',
            ),
            'example' => 'CreationTime:Desc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '******11-DB8D-4A9A-875B-275798******',
              ),
              'MediaProducingJobList' => 
              array (
                'description' => '剪辑任务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '剪辑任务列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'description' => '云剪辑任务id',
                      'type' => 'string',
                      'example' => '******8750b54e3c976a47da6f******',
                    ),
                    'ProjectId' => 
                    array (
                      'description' => '云剪辑工程id',
                      'type' => 'string',
                      'example' => '******faa3b542f5a6135217e3******',
                    ),
                    'MediaId' => 
                    array (
                      'description' => '输出成品的资源id',
                      'type' => 'string',
                      'example' => '0ce4ea70f52471edab61f7e7d6786302',
                    ),
                    'MediaURL' => 
                    array (
                      'description' => '输出成品的资源文件URL',
                      'type' => 'string',
                      'example' => 'http://your-bucket.oss-cn-shanghai.aliyuncs.com/your-video.mp4',
                    ),
                    'TemplateId' => 
                    array (
                      'description' => '云剪辑模板ID',
                      'type' => 'string',
                      'example' => 'cb786a39c5d44cecb23d8c864facffc1',
                    ),
                    'ClipsParam' => 
                    array (
                      'description' => '模板素材参数',
                      'type' => 'string',
                      'example' => '{"Text1":"text","Text0":"text","Media1":"mediaId","Media0":"mediaId"}',
                    ),
                    'Duration' => 
                    array (
                      'description' => '输出成品的时长，单位：秒。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '15.5',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '任务创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ 。',
                      'type' => 'string',
                      'example' => '2022-03-21T16:40:00Z',
                    ),
                    'CompleteTime' => 
                    array (
                      'description' => '剪辑合成作业完成时间，格式为utc时间。',
                      'type' => 'string',
                      'example' => '2022-03-21T16:40:30Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '最后更新时间。',
                      'type' => 'string',
                      'example' => '2022-03-21T16:41:00Z',
                    ),
                    'Status' => 
                    array (
                      'description' => '剪辑合成作业状态',
                      'type' => 'string',
                      'example' => 'Sucess',
                    ),
                    'Code' => 
                    array (
                      'description' => '剪辑合成作业失败错误码',
                      'type' => 'string',
                      'example' => 'Success',
                    ),
                    'Message' => 
                    array (
                      'description' => '剪辑合成作业错误信息注：作业失败时关注该字段',
                      'type' => 'string',
                      'example' => 'The resource operated InputFile is bad',
                    ),
                    'UserData' => 
                    array (
                      'description' => '用户自定义设置',
                      'type' => 'string',
                      'example' => '{"key":"value"}',
                    ),
                  ),
                ),
              ),
              'MaxResults' => 
              array (
                'description' => '本次请求所返回的最大记录条数。

最大值：100，默认值：10',
                'type' => 'string',
                'example' => '100',
              ),
              'NextToken' => 
              array (
                'description' => '当前开始读取的位置',
                'type' => 'string',
                'example' => '8EqYpQbZ6Eh7+Zz8DxVYoQ==',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******11-DB8D-4A9A-875B-275798******\\",\\n  \\"MediaProducingJobList\\": [\\n    {\\n      \\"JobId\\": \\"******8750b54e3c976a47da6f******\\",\\n      \\"ProjectId\\": \\"******faa3b542f5a6135217e3******\\",\\n      \\"MediaId\\": \\"0ce4ea70f52471edab61f7e7d6786302\\",\\n      \\"MediaURL\\": \\"http://your-bucket.oss-cn-shanghai.aliyuncs.com/your-video.mp4\\",\\n      \\"TemplateId\\": \\"cb786a39c5d44cecb23d8c864facffc1\\",\\n      \\"ClipsParam\\": \\"{\\\\\\"Text1\\\\\\":\\\\\\"text\\\\\\",\\\\\\"Text0\\\\\\":\\\\\\"text\\\\\\",\\\\\\"Media1\\\\\\":\\\\\\"mediaId\\\\\\",\\\\\\"Media0\\\\\\":\\\\\\"mediaId\\\\\\"}\\",\\n      \\"Duration\\": 15.5,\\n      \\"CreateTime\\": \\"2022-03-21T16:40:00Z\\",\\n      \\"CompleteTime\\": \\"2022-03-21T16:40:30Z\\",\\n      \\"ModifiedTime\\": \\"2022-03-21T16:41:00Z\\",\\n      \\"Status\\": \\"Sucess\\",\\n      \\"Code\\": \\"Success\\",\\n      \\"Message\\": \\"The resource operated InputFile is bad\\",\\n      \\"UserData\\": \\"{\\\\\\"key\\\\\\":\\\\\\"value\\\\\\"}\\"\\n    }\\n  ],\\n  \\"MaxResults\\": \\"100\\",\\n  \\"NextToken\\": \\"8EqYpQbZ6Eh7+Zz8DxVYoQ==\\"\\n}","type":"json"}]',
      'title' => '列出符合条件的剪辑合成任务',
    ),
    'ListBatchMediaProducingJobs' => 
    array (
      'summary' => '列出符合条件的一键成片任务，可以根据任务类型、状态等条件查询。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '216608',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREiceANRKXC',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '一键成片任务Id',
            'type' => 'string',
            'required' => false,
            'example' => '****d80e4e4044975745c14b****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务类型',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Script' => '脚本化素材混剪',
              'Smart_Mix' => '智能混编素材混剪',
            ),
            'example' => 'Script',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Finished' => '处理完成',
              'Init' => '初始化',
              'Failed' => '失败',
              'Processing' => '处理中',
            ),
            'example' => 'Finished',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-02T00:00:00Z',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。UTC时间，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-06-05T15:59:59Z',
          ),
        ),
        5 => 
        array (
          'name' => 'SortBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结果排序。取值：

- desc（默认值）：按创建时间倒序。
- asc：按创建时间升序。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'asc' => '按照创建时间正序',
              'desc' => '按照创建时间倒序',
            ),
            'example' => 'desc',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕',
            'type' => 'string',
            'required' => false,
            'example' => 'mRZkKAovub0xWVfH14he4Q==',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次请求所返回的最大记录条数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '******3B-0E1A-586A-AC29-742247******',
              ),
              'EditingBatchJobList' => 
              array (
                'description' => '一键成片任务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '一键成片任务列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'description' => '一键成片任务 Id',
                      'type' => 'string',
                      'example' => '******7ecbee4c6d9b8474498e******',
                    ),
                    'InputConfig' => 
                    array (
                      'description' => '用户合成输出配置。',
                      'type' => 'string',
                      'example' => '{
  "MediaGroupArray": [{
      "MediaArray": [
        "****9d46c886b45481030f6e****",
        "****6c886b4549d481030f6e****" ]
    }, {
      "MediaArray": [
        "****d46c886810b454930f6e****",
        "****4549d886810b46c30f6e****" ]
  }],
  "TitleArray": [
      "回龙观盒马鲜生开业啦"],
  "SpeechTextArray": [
      "附近的商场新开了一家盒马鲜生，今天是第一天开业"]
}',
                    ),
                    'EditingConfig' => 
                    array (
                      'description' => '剪辑相关配置。具体结构定义，请参见[EditingConfig](~~2692547#1be9bba03b7qu~~)配置说明。',
                      'type' => 'string',
                      'example' => '{
  "MediaConfig": {
      "Volume": 0
  },
  "SpeechConfig": {
      "Volume": 1
  },
 "BackgroundMusicConfig": {
      "Volume": 0.3
  }
}',
                    ),
                    'OutputConfig' => 
                    array (
                      'description' => '输出配置。具体结构定义，请参见[OutputConfig](~~2692547#447b928fcbuoa~~)配置说明。',
                      'type' => 'string',
                      'example' => '{
  "MediaURL": "http://xxx.oss-cn-shanghai.aliyuncs.com/xxx_{index}.mp4",
  "Count": 20,
  "MaxDuration": 15,
  "Width": 1080,
  "Height": 1920,
  "Video": {"Crf": 27}
}',
                    ),
                    'Status' => 
                    array (
                      'description' => '任务状态。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Finished' => '处理完成',
                        'Init' => '初始化',
                        'Failed' => '失败',
                        'Processing' => '处理中',
                      ),
                      'example' => 'Finished',
                    ),
                    'UserData' => 
                    array (
                      'description' => '自定义设置，Json 格式，长度限制为 512 字节。支持[自定义回调地址配置](https://help.aliyun.com/zh/ims/use-cases/to-configure-a-callback-when-a-clip-completes)。',
                      'type' => 'string',
                      'example' => '{"NotifyAddress":"http://xx.xx.xxx"}或{"NotifyAddress":"https://xx.xx.xxx"}或{"NotifyAddress":"ice-callback-demo"}',
                    ),
                    'Extend' => 
                    array (
                      'description' => '任务扩展信息',
                      'type' => 'string',
                      'example' => '{}',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间，UTC 时间格式',
                      'type' => 'string',
                      'example' => '2023-06-09T06:36:48Z',
                    ),
                    'ModifiedTime' => 
                    array (
                      'description' => '最后修改时间',
                      'type' => 'string',
                      'example' => '2023-06-09T06:37:58Z',
                    ),
                    'CompleteTime' => 
                    array (
                      'description' => '完成时间。格式为：<i>yyyy-MM-dd</i>T<i>HH:mm:ss</i>Z（UTC时间）。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                      ),
                      'example' => '2023-06-09T06:38:09Z
',
                    ),
                    'JobType' => 
                    array (
                      'description' => '任务类型',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Script' => '脚本化素材混剪',
                        'Smart_Mix' => '智能混编素材混剪',
                      ),
                      'example' => 'Script',
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'description' => '下一次查询的开始Token。',
                'type' => 'string',
                'example' => '8EqYpQbZ6Eh7+Zz8DxVYoQ==',
              ),
              'MaxResults' => 
              array (
                'description' => '分页大小。最大不超过100。

默认值：10',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"******3B-0E1A-586A-AC29-742247******\\",\\n  \\"EditingBatchJobList\\": [\\n    {\\n      \\"JobId\\": \\"******7ecbee4c6d9b8474498e******\\",\\n      \\"InputConfig\\": \\"{\\\\n  \\\\\\"MediaGroupArray\\\\\\": [{\\\\n      \\\\\\"MediaArray\\\\\\": [\\\\n        \\\\\\"****9d46c886b45481030f6e****\\\\\\",\\\\n        \\\\\\"****6c886b4549d481030f6e****\\\\\\" ]\\\\n    }, {\\\\n      \\\\\\"MediaArray\\\\\\": [\\\\n        \\\\\\"****d46c886810b454930f6e****\\\\\\",\\\\n        \\\\\\"****4549d886810b46c30f6e****\\\\\\" ]\\\\n  }],\\\\n  \\\\\\"TitleArray\\\\\\": [\\\\n      \\\\\\"回龙观盒马鲜生开业啦\\\\\\"],\\\\n  \\\\\\"SpeechTextArray\\\\\\": [\\\\n      \\\\\\"附近的商场新开了一家盒马鲜生，今天是第一天开业\\\\\\"]\\\\n}\\",\\n      \\"EditingConfig\\": \\"{\\\\n  \\\\\\"MediaConfig\\\\\\": {\\\\n      \\\\\\"Volume\\\\\\": 0\\\\n  },\\\\n  \\\\\\"SpeechConfig\\\\\\": {\\\\n      \\\\\\"Volume\\\\\\": 1\\\\n  },\\\\n \\\\\\"BackgroundMusicConfig\\\\\\": {\\\\n      \\\\\\"Volume\\\\\\": 0.3\\\\n  }\\\\n}\\",\\n      \\"OutputConfig\\": \\"{\\\\n  \\\\\\"MediaURL\\\\\\": \\\\\\"http://xxx.oss-cn-shanghai.aliyuncs.com/xxx_{index}.mp4\\\\\\",\\\\n  \\\\\\"Count\\\\\\": 20,\\\\n  \\\\\\"MaxDuration\\\\\\": 15,\\\\n  \\\\\\"Width\\\\\\": 1080,\\\\n  \\\\\\"Height\\\\\\": 1920,\\\\n  \\\\\\"Video\\\\\\": {\\\\\\"Crf\\\\\\": 27}\\\\n}\\",\\n      \\"Status\\": \\"Finished\\",\\n      \\"UserData\\": \\"{\\\\\\"NotifyAddress\\\\\\":\\\\\\"http://xx.xx.xxx\\\\\\"}或{\\\\\\"NotifyAddress\\\\\\":\\\\\\"https://xx.xx.xxx\\\\\\"}或{\\\\\\"NotifyAddress\\\\\\":\\\\\\"ice-callback-demo\\\\\\"}\\",\\n      \\"Extend\\": \\"{}\\",\\n      \\"CreateTime\\": \\"2023-06-09T06:36:48Z\\",\\n      \\"ModifiedTime\\": \\"2023-06-09T06:37:58Z\\",\\n      \\"CompleteTime\\": \\"2023-06-09T06:38:09Z\\\\n\\",\\n      \\"JobType\\": \\"Script\\"\\n    }\\n  ],\\n  \\"NextToken\\": \\"8EqYpQbZ6Eh7+Zz8DxVYoQ==\\",\\n  \\"MaxResults\\": 100\\n}","type":"json"}]',
      'title' => '列出符合条件的一键成片任务',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'ice.cn-beijing.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'ice.cn-hangzhou.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'ice.cn-shanghai.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'ice.cn-shenzhen.aliyuncs.com',
    ),
  ),
);