<?php

declare(strict_types=1);

namespace Dew\Acs\Tdsr;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result addScene(array $arguments = [])
 * @method \Http\Promise\Promise addSceneAsync($arguments = [])
 * @method \Dew\Acs\Result dropScene(array $arguments = [])
 * @method \Http\Promise\Promise dropSceneAsync($arguments = [])
 * @method \Dew\Acs\Result scenePublish(array $arguments = [])
 * @method \Http\Promise\Promise scenePublishAsync($arguments = [])
 * @method \Dew\Acs\Result updateScene(array $arguments = [])
 * @method \Http\Promise\Promise updateSceneAsync($arguments = [])
 * @method \Dew\Acs\Result detailScene(array $arguments = [])
 * @method \Http\Promise\Promise detailSceneAsync($arguments = [])
 * @method \Dew\Acs\Result listScene(array $arguments = [])
 * @method \Http\Promise\Promise listSceneAsync($arguments = [])
 * @method \Dew\Acs\Result addSubScene(array $arguments = [])
 * @method \Http\Promise\Promise addSubSceneAsync($arguments = [])
 * @method \Dew\Acs\Result dropSubScene(array $arguments = [])
 * @method \Http\Promise\Promise dropSubSceneAsync($arguments = [])
 * @method \Dew\Acs\Result updateSubScene(array $arguments = [])
 * @method \Http\Promise\Promise updateSubSceneAsync($arguments = [])
 * @method \Dew\Acs\Result detailSubScene(array $arguments = [])
 * @method \Http\Promise\Promise detailSubSceneAsync($arguments = [])
 * @method \Dew\Acs\Result listSubScene(array $arguments = [])
 * @method \Http\Promise\Promise listSubSceneAsync($arguments = [])
 * @method \Dew\Acs\Result addProject(array $arguments = [])
 * @method \Http\Promise\Promise addProjectAsync($arguments = [])
 * @method \Dew\Acs\Result dropProject(array $arguments = [])
 * @method \Http\Promise\Promise dropProjectAsync($arguments = [])
 * @method \Dew\Acs\Result updateProject(array $arguments = [])
 * @method \Http\Promise\Promise updateProjectAsync($arguments = [])
 * @method \Dew\Acs\Result detailProject(array $arguments = [])
 * @method \Http\Promise\Promise detailProjectAsync($arguments = [])
 * @method \Dew\Acs\Result listProject(array $arguments = [])
 * @method \Http\Promise\Promise listProjectAsync($arguments = [])
 * @method \Dew\Acs\Result addMosaics(array $arguments = [])
 * @method \Http\Promise\Promise addMosaicsAsync($arguments = [])
 * @method \Dew\Acs\Result getHotspotConfig(array $arguments = [])
 * @method \Http\Promise\Promise getHotspotConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getHotspotTag(array $arguments = [])
 * @method \Http\Promise\Promise getHotspotTagAsync($arguments = [])
 * @method \Dew\Acs\Result getWindowConfig(array $arguments = [])
 * @method \Http\Promise\Promise getWindowConfigAsync($arguments = [])
 * @method \Dew\Acs\Result publishHotspot(array $arguments = [])
 * @method \Http\Promise\Promise publishHotspotAsync($arguments = [])
 * @method \Dew\Acs\Result saveHotspotConfig(array $arguments = [])
 * @method \Http\Promise\Promise saveHotspotConfigAsync($arguments = [])
 * @method \Dew\Acs\Result saveHotspotTag(array $arguments = [])
 * @method \Http\Promise\Promise saveHotspotTagAsync($arguments = [])
 * @method \Dew\Acs\Result tempPreviewStatus(array $arguments = [])
 * @method \Http\Promise\Promise tempPreviewStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getSingleConnData(array $arguments = [])
 * @method \Http\Promise\Promise getSingleConnDataAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result rectVertical(array $arguments = [])
 * @method \Http\Promise\Promise rectVerticalAsync($arguments = [])
 * @method \Dew\Acs\Result getLayoutData(array $arguments = [])
 * @method \Http\Promise\Promise getLayoutDataAsync($arguments = [])
 * @method \Dew\Acs\Result tempPreview(array $arguments = [])
 * @method \Http\Promise\Promise tempPreviewAsync($arguments = [])
 * @method \Dew\Acs\Result labelBuild(array $arguments = [])
 * @method \Http\Promise\Promise labelBuildAsync($arguments = [])
 * @method \Dew\Acs\Result getOssPolicy(array $arguments = [])
 * @method \Http\Promise\Promise getOssPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result predictionWallLine(array $arguments = [])
 * @method \Http\Promise\Promise predictionWallLineAsync($arguments = [])
 * @method \Dew\Acs\Result getSceneBuildTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getSceneBuildTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateConnData(array $arguments = [])
 * @method \Http\Promise\Promise updateConnDataAsync($arguments = [])
 * @method \Dew\Acs\Result predImage(array $arguments = [])
 * @method \Http\Promise\Promise predImageAsync($arguments = [])
 * @method \Dew\Acs\Result getRectifyImage(array $arguments = [])
 * @method \Http\Promise\Promise getRectifyImageAsync($arguments = [])
 * @method \Dew\Acs\Result getOriginLayoutData(array $arguments = [])
 * @method \Http\Promise\Promise getOriginLayoutDataAsync($arguments = [])
 * @method \Dew\Acs\Result rectifyImage(array $arguments = [])
 * @method \Http\Promise\Promise rectifyImageAsync($arguments = [])
 * @method \Dew\Acs\Result linkImage(array $arguments = [])
 * @method \Http\Promise\Promise linkImageAsync($arguments = [])
 * @method \Dew\Acs\Result optimizeRightAngle(array $arguments = [])
 * @method \Http\Promise\Promise optimizeRightAngleAsync($arguments = [])
 * @method \Dew\Acs\Result getConnData(array $arguments = [])
 * @method \Http\Promise\Promise getConnDataAsync($arguments = [])
 * @method \Dew\Acs\Result updateLayoutData(array $arguments = [])
 * @method \Http\Promise\Promise updateLayoutDataAsync($arguments = [])
 * @method \Dew\Acs\Result getSubSceneTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getSubSceneTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result publishScene(array $arguments = [])
 * @method \Http\Promise\Promise publishSceneAsync($arguments = [])
 * @method \Dew\Acs\Result addRelativePosition(array $arguments = []) {@deprecated 2020-01-01}
 * @method \Http\Promise\Promise addRelativePositionAsync($arguments = []) {@deprecated 2020-01-01}
 * @method \Dew\Acs\Result getScenePreviewInfo(array $arguments = [])
 * @method \Http\Promise\Promise getScenePreviewInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getHotspotSceneData(array $arguments = [])
 * @method \Http\Promise\Promise getHotspotSceneDataAsync($arguments = [])
 * @method \Dew\Acs\Result recoveryOriginImage(array $arguments = [])
 * @method \Http\Promise\Promise recoveryOriginImageAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackSubScene(array $arguments = [])
 * @method \Http\Promise\Promise rollbackSubSceneAsync($arguments = [])
 * @method \Dew\Acs\Result publishStatus(array $arguments = [])
 * @method \Http\Promise\Promise publishStatusAsync($arguments = [])
 * @method \Dew\Acs\Result addRoomPlan(array $arguments = [])
 * @method \Http\Promise\Promise addRoomPlanAsync($arguments = [])
 * @method \Dew\Acs\Result getScenePreviewData(array $arguments = [])
 * @method \Http\Promise\Promise getScenePreviewDataAsync($arguments = [])
 * @method \Dew\Acs\Result checkUserProperty(array $arguments = [])
 * @method \Http\Promise\Promise checkUserPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result getScenePreviewResource(array $arguments = [])
 * @method \Http\Promise\Promise getScenePreviewResourceAsync($arguments = [])
 * @method \Dew\Acs\Result getPackSceneTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getPackSceneTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getScenePackUrl(array $arguments = [])
 * @method \Http\Promise\Promise getScenePackUrlAsync($arguments = [])
 * @method \Dew\Acs\Result packScene(array $arguments = [])
 * @method \Http\Promise\Promise packSceneAsync($arguments = [])
 * @method \Dew\Acs\Result getCopySceneTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getCopySceneTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateSubSceneSeq(array $arguments = [])
 * @method \Http\Promise\Promise updateSubSceneSeqAsync($arguments = [])
 * @method \Dew\Acs\Result copyScene(array $arguments = [])
 * @method \Http\Promise\Promise copySceneAsync($arguments = [])
 * @method \Dew\Acs\Result getSourcePackStatus(array $arguments = [])
 * @method \Http\Promise\Promise getSourcePackStatusAsync($arguments = [])
 * @method \Dew\Acs\Result packSource(array $arguments = [])
 * @method \Http\Promise\Promise packSourceAsync($arguments = [])
 * @method \Dew\Acs\Result saveHotspotTagList(array $arguments = [])
 * @method \Http\Promise\Promise saveHotspotTagListAsync($arguments = [])
 * @method \Dew\Acs\Result saveModelConfig(array $arguments = [])
 * @method \Http\Promise\Promise saveModelConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createUploadPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createUploadPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result publishHotspotConfig(array $arguments = [])
 * @method \Http\Promise\Promise publishHotspotConfigAsync($arguments = [])
 * @method \Dew\Acs\Result addHotspotFile(array $arguments = [])
 * @method \Http\Promise\Promise addHotspotFileAsync($arguments = [])
 * @method \Dew\Acs\Result saveMinimap(array $arguments = [])
 * @method \Http\Promise\Promise saveMinimapAsync($arguments = [])
 */
final class TdsrClient extends AcsClient
{
    //
}
