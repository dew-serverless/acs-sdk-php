<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'BssOpenApi',
    'version' => '2017-12-14',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 179160,
      'title' => '资金流水',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryAccountBalance',
        1 => 'QueryAccountTransactionDetails',
        2 => 'QueryAccountTransactions',
      ),
    ),
    1 => 
    array (
      'id' => 116853,
      'title' => '财务关联',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryRelationList',
        1 => 'QueryPermissionList',
        2 => 'GetAccountRelation',
        3 => 'AddAccountRelation',
        4 => 'ModifyAccountRelation',
        5 => 'ConfirmRelation',
        6 => 'RelieveAccountRelation',
      ),
    ),
    2 => 
    array (
      'id' => 116859,
      'title' => '资源标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryInstanceByTag',
        1 => 'TagResources',
        2 => 'UntagResources',
      ),
    ),
    3 => 
    array (
      'id' => 116863,
      'title' => '卡券',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryPrepaidCards',
        1 => 'QueryRedeem',
        2 => 'QueryCashCoupons',
      ),
    ),
    4 => 
    array (
      'id' => 116874,
      'title' => '节省计划',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSavingsPlansInstance',
        1 => 'QuerySavingsPlansInstance',
        2 => 'QuerySavingsPlansDeductLog',
        3 => 'DescribeSavingsPlansUsageTotal',
        4 => 'DescribeSavingsPlansUsageDetail',
        5 => 'DescribeSavingsPlansCoverageTotal',
        6 => 'DescribeSavingsPlansCoverageDetail',
        7 => 'QuerySavingsPlansDiscount',
      ),
    ),
    5 => 
    array (
      'id' => 116881,
      'title' => '虚商配额',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateResellerUserQuota',
        1 => 'SetResellerUserQuota',
        2 => 'ChangeResellerConsumeAmount',
        3 => 'QueryResellerAvailableQuota',
        4 => 'SetResellerUserAlarmThreshold',
        5 => 'QueryResellerUserAlarmThreshold',
        6 => 'SetResellerUserStatus',
      ),
    ),
    6 => 
    array (
      'id' => 116886,
      'title' => '虚商账号',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateAgAccount',
        1 => 'GetCustomerAccountInfo',
        2 => 'GetCustomerList',
      ),
    ),
    7 => 
    array (
      'id' => 116890,
      'title' => '资源包',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryResourcePackageInstances',
        1 => 'QueryDPUtilizationDetail',
        2 => 'QueryRIUtilizationDetail',
        3 => 'DescribeResourceUsageTotal',
        4 => 'DescribeResourceUsageDetail',
        5 => 'DescribeResourceCoverageTotal',
        6 => 'DescribeResourceCoverageDetail',
        7 => 'DescribeResourcePackageProduct',
        8 => 'GetResourcePackagePrice',
        9 => 'CreateResourcePackage',
        10 => 'RenewResourcePackage',
        11 => 'UpgradeResourcePackage',
      ),
    ),
    8 => 
    array (
      'id' => 116904,
      'title' => '财务账单',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SubscribeBillToOSS',
        1 => 'UnsubscribeBillToOSS',
        2 => 'QueryBillToOSSSubscription',
        3 => 'QueryBillOverview',
        4 => 'QueryBill',
        5 => 'QueryAccountBill',
        6 => 'QuerySettleBill',
        7 => 'QueryInstanceBill',
        8 => 'DescribeInstanceBill',
        9 => 'QueryInstanceGaapCost',
        10 => 'DescribeInstanceAmortizedCostByAmortizationPeriod',
        11 => 'DescribeProductAmortizedCostByAmortizationPeriod',
        12 => 'DescribeInstanceAmortizedCostByConsumePeriod',
        13 => 'DescribeProductAmortizedCostByConsumePeriod',
        14 => 'DescribeSplitItemBill',
        15 => 'QuerySplitItemBill',
      ),
    ),
    9 => 
    array (
      'id' => 116920,
      'title' => '询价',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'InquiryPriceRefundInstance',
        1 => 'GetPayAsYouGoPrice',
        2 => 'GetSubscriptionPrice',
      ),
    ),
    10 => 
    array (
      'id' => 116924,
      'title' => '实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryAvailableInstances',
        1 => 'ReleaseInstance',
        2 => 'CreateInstance',
        3 => 'ModifyInstance',
        4 => 'SetRenewal',
        5 => 'ConvertChargeType',
        6 => 'RenewInstance',
        7 => 'RefundInstance',
      ),
    ),
    11 => 
    array (
      'id' => 116931,
      'title' => '订单',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GetOrderDetail',
        1 => 'QueryOrders',
        2 => 'CancelOrder',
      ),
    ),
    12 => 
    array (
      'id' => 116935,
      'title' => '财务单元',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCostUnit',
        1 => 'AllocateCostUnitResource',
        2 => 'DeleteCostUnit',
        3 => 'ModifyCostUnit',
        4 => 'QueryCostUnit',
        5 => 'QueryCostUnitResource',
        6 => 'QueryFinancialAccountInfo',
      ),
    ),
    13 => 
    array (
      'id' => 116943,
      'title' => '发票',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryEvaluateList',
        1 => 'QueryCustomerAddressList',
        2 => 'QueryInvoicingCustomerList',
        3 => 'ApplyInvoice',
      ),
    ),
    14 => 
    array (
      'id' => 116949,
      'title' => '产品',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QuerySkuPriceList',
        1 => 'QueryCommodityList',
        2 => 'QueryPriceEntityList',
        3 => 'DescribePricingModule',
        4 => 'QueryProductList',
      ),
    ),
    15 => 
    array (
      'id' => 169993,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryUserOmsData',
        1 => 'SetAllExpirationDay',
        2 => 'DescribeCostBudgetsSummary',
        3 => 'RenewChangeInstance',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'QueryAccountBalance' => 
    array (
      'summary' => '查询用户账户余额信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '16176743-6DC7-4CB3-BB25-A13982D8DFAD',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'AvailableAmount' => 
                  array (
                    'description' => '可用额度。',
                    'type' => 'string',
                    'example' => '10000.00',
                  ),
                  'CreditAmount' => 
                  array (
                    'description' => '信控余额。',
                    'type' => 'string',
                    'example' => '0.00',
                  ),
                  'MybankCreditAmount' => 
                  array (
                    'description' => '网商银行信用额度。',
                    'type' => 'string',
                    'example' => '0.00',
                  ),
                  'Currency' => 
                  array (
                    'description' => '币种。取值范围：
- CNY：人民币。
- USD：美元。
- JPY：日元。',
                    'type' => 'string',
                    'example' => 'CNY',
                  ),
                  'AvailableCashAmount' => 
                  array (
                    'description' => '现金余额。',
                    'type' => 'string',
                    'example' => '10000.00',
                  ),
                  'QuotaLimit' => 
                  array (
                    'description' => '生态客户Quota限额',
                    'type' => 'string',
                    'example' => '10000.00
',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '  Some parameters arte mandatoryfor this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Some parametersare not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specifiedowner doesn’t belong to caller',
          ),
          5 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"16176743-6DC7-4CB3-BB25-A13982D8DFAD\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"AvailableAmount\\": \\"10000.00\\",\\n    \\"CreditAmount\\": \\"0.00\\",\\n    \\"MybankCreditAmount\\": \\"0.00\\",\\n    \\"Currency\\": \\"CNY\\",\\n    \\"AvailableCashAmount\\": \\"10000.00\\",\\n    \\"QuotaLimit\\": \\"10000.00\\\\n\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryAccountBalanceResponse>\\n    <Message>success</Message>\\n    <RequestId>16176743-6DC7-4CB3-BB25-A13982D8DFAD</RequestId>\\n    <Data>\\n        <AvailableCashAmount>0.00</AvailableCashAmount>\\n        <MybankCreditAmount>0.00</MybankCreditAmount>\\n        <Currency>CNY</Currency>\\n        <AvailableAmount>-11.19</AvailableAmount>\\n        <CreditAmount>0.00</CreditAmount>\\n    </Data>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</QueryAccountBalanceResponse>","errorExample":""}]',
      'title' => '查询用户账户余额信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryAccountTransactionDetails' => 
    array (
      'summary' => '查询用户收支明细。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransactionNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易编号',
            'type' => 'string',
            'required' => false,
            'example' => '410874027490089',
          ),
        ),
        1 => 
        array (
          'name' => 'RecordID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单号/账单号',
            'type' => 'string',
            'required' => false,
            'example' => '2022120336190912',
          ),
        ),
        2 => 
        array (
          'name' => 'TransactionChannelSN',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易渠道流水号',
            'type' => 'string',
            'required' => false,
            'example' => '2022112122001470591458665933',
          ),
        ),
        3 => 
        array (
          'name' => 'CreateTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间起始',
            'type' => 'string',
            'required' => false,
            'example' => '2022-01-20',
          ),
        ),
        4 => 
        array (
          'name' => 'CreateTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间终止',
            'type' => 'string',
            'required' => false,
            'example' => '2022-12-20',
          ),
        ),
        5 => 
        array (
          'name' => 'TransactionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易类型。 传入以下交易类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。


充值：Payment。

提现：Withdraw。

退款：Refund。

消费：Consumption。

转账：Transfer。

调账：Adjust。',
            'type' => 'string',
            'required' => false,
            'example' => 'Payment',
          ),
        ),
        6 => 
        array (
          'name' => 'TransactionChannel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易渠道。 传入以下交易渠道类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。

用户余额：AccountBalance。

银行转账： BankTransfer。

支付宝：Alipay。

支付宝花呗：AntCreditPay。

线下汇款：OfflineRemittance。

信控额度退款：RegularBankCreditRefund。

信用卡：CreditCard。

网商银行信任付：MyBankCredit。

华夏银行分期付：HuaxiaBankCInstallment。

苹果支付：ApplePay',
            'type' => 'string',
            'required' => false,
            'example' => 'AccountBalance',
          ),
        ),
        7 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询token',
            'type' => 'string',
            'required' => false,
            'example' => 'ABEDSDS124DASA',
          ),
        ),
        8 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无效参数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口返回结果',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '结果描述',
                'type' => 'string',
                'example' => 'SUCCESS',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'asadadad-edafafafaasd',
              ),
              'Success' => 
              array (
                'description' => '是否成功标识',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '请求结果内容',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '分页标识',
                    'type' => 'string',
                    'example' => 'ASHDADS',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '查询结果总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '无效参数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '账户名',
                    'type' => 'string',
                    'example' => 'yidi',
                  ),
                  'AccountTransactionsList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AccountTransactionsList' => 
                      array (
                        'description' => '明细列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '结果',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BillingCycle' => 
                            array (
                              'description' => '账期',
                              'type' => 'string',
                              'example' => '2022-10',
                            ),
                            'TransactionChannel' => 
                            array (
                              'description' => '交易渠道',
                              'type' => 'string',
                              'example' => 'Alipay',
                            ),
                            'RecordID' => 
                            array (
                              'description' => '订单号/账单号',
                              'type' => 'string',
                              'example' => '2022120336190912',
                            ),
                            'Remarks' => 
                            array (
                              'description' => '备注',
                              'type' => 'string',
                              'example' => '测试',
                            ),
                            'Amount' => 
                            array (
                              'description' => '金额',
                              'type' => 'string',
                              'example' => '1.00',
                            ),
                            'TransactionAccount' => 
                            array (
                              'description' => '对应交易账号',
                              'type' => 'string',
                              'example' => 'fortune_test@xxx.com',
                            ),
                            'TransactionTime' => 
                            array (
                              'description' => '交易时间',
                              'type' => 'string',
                              'example' => '2022-10-01',
                            ),
                            'TransactionType' => 
                            array (
                              'description' => '交易类型。 传入以下交易类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。

充值：Payment。
提现：Withdraw。
退款：Refund。
消费：Consumption。
转账：Transfer。
调账：Adjust。',
                              'type' => 'string',
                              'example' => 'Consumption',
                            ),
                            'TransactionFlow' => 
                            array (
                              'description' => '收支类型。 传入以下收支类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。

收入：Income。
支出：Expense',
                              'type' => 'string',
                              'example' => 'Income',
                            ),
                            'FundType' => 
                            array (
                              'description' => '资金形式。

现金：Cash。
保证金：Deposit。
信控额度退款：RegularBankCreditRefund。
订单直接支付：DirectPay。',
                              'type' => 'string',
                              'example' => 'Cash',
                            ),
                            'TransactionChannelSN' => 
                            array (
                              'description' => '交易渠道流水号',
                              'type' => 'string',
                              'example' => '123232434343532',
                            ),
                            'TransactionNumber' => 
                            array (
                              'description' => '交易编号',
                              'type' => 'string',
                              'example' => '43342334',
                            ),
                            'Balance' => 
                            array (
                              'description' => '余额',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"SUCCESS\\",\\n  \\"RequestId\\": \\"asadadad-edafafafaasd\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"ASHDADS\\",\\n    \\"TotalCount\\": 100,\\n    \\"MaxResults\\": 0,\\n    \\"AccountName\\": \\"yidi\\",\\n    \\"AccountTransactionsList\\": {\\n      \\"AccountTransactionsList\\": [\\n        {\\n          \\"BillingCycle\\": \\"2022-10\\",\\n          \\"TransactionChannel\\": \\"Alipay\\",\\n          \\"RecordID\\": \\"2022120336190912\\",\\n          \\"Remarks\\": \\"测试\\",\\n          \\"Amount\\": \\"1.00\\",\\n          \\"TransactionAccount\\": \\"fortune_test@xxx.com\\",\\n          \\"TransactionTime\\": \\"2022-10-01\\",\\n          \\"TransactionType\\": \\"Consumption\\",\\n          \\"TransactionFlow\\": \\"Income\\",\\n          \\"FundType\\": \\"Cash\\",\\n          \\"TransactionChannelSN\\": \\"123232434343532\\",\\n          \\"TransactionNumber\\": \\"43342334\\",\\n          \\"Balance\\": \\"0\\"\\n        }\\n      ]\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '查询账户交易明细',
    ),
    'QueryAccountTransactions' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransactionNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易编号。',
            'type' => 'string',
            'required' => false,
            'example' => '133314076',
          ),
        ),
        1 => 
        array (
          'name' => 'RecordID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单/账单号。',
            'type' => 'string',
            'required' => false,
            'example' => '20200302',
          ),
        ),
        2 => 
        array (
          'name' => 'TransactionChannelSN',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易渠道流水号。',
            'type' => 'string',
            'required' => false,
            'example' => '12342134',
          ),
        ),
        3 => 
        array (
          'name' => 'CreateTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间段起，格式例：2018-01-01T00:00:00Z。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-05T01:46:09Z',
          ),
        ),
        4 => 
        array (
          'name' => 'CreateTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间段止，默认查询时间往前一个月。格式例：2018-01-01T00:00:00Z。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-06T01:55:00Z',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。不填默认1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示条数。不填默认20',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'TransactionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易类型。
传入以下交易类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。
- 充值：Payment。
- 提现：Withdraw。
- 退款：Refund。
- 消费：Consumption。
- 转账：Transfer。
- 调账：Adjust。',
            'type' => 'string',
            'required' => false,
            'example' => 'Payment',
            'enum' => 
            array (
              0 => 'Adjust',
              1 => 'Payment',
              2 => 'Refund',
              3 => 'Withdraw',
              4 => 'Consumption',
              5 => 'Pay_Fail_Refund',
              6 => 'Transfer',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'TransactionFlow',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '收支类型。
传入以下收支类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。
- 收入：Income。
- 支出：Expense。',
            'type' => 'string',
            'required' => false,
            'example' => 'Income',
            'enum' => 
            array (
              0 => 'Income',
              1 => 'Expense',
            ),
          ),
        ),
        9 => 
        array (
          'name' => 'TransactionChannel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交易渠道。
传入以下交易渠道类型，查询返回对应类型结果，不存在时结果为空。不传默认返回所有类型。
- 用户余额：AccountBalance。
- 银行转账： BankTransfer。
- 支付宝：Alipay。
- 支付宝花呗：AntCreditPay。
- 线下汇款：OfflineRemittance。
- 信控额度退款：RegularBankCreditRefund。
- 信用卡：CreditCard。
- 网商银行信任付：MyBankCredit。
- 华夏银行分期付：HuaxiaBankCInstallment。
- 苹果支付：ApplePay',
            'type' => 'string',
            'required' => false,
            'example' => 'AccountBalance',
            'enum' => 
            array (
              0 => 'Alipay',
              1 => 'AntCreditPay',
              2 => 'MyBankCredit',
              3 => 'HuaxiaBankCInstallment',
              4 => 'BankTransfer',
              5 => 'OfflineRemittance',
              6 => 'CreditCard',
              7 => 'AccountBalance',
              8 => 'RegularBankCreditRefund',
              9 => 'ApplePay',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8634E02D-0942-4B1D-8295-5352FE9A1F39',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'AccountTransactionsList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AccountTransactionsList' => 
                      array (
                        'description' => '流水信息集合。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BillingCycle' => 
                            array (
                              'description' => '账期，格式：YYYY-MM。',
                              'type' => 'string',
                              'example' => '2020-03',
                            ),
                            'TransactionChannel' => 
                            array (
                              'description' => '交易渠道。
- 用户余额：AccountBalance。
- 银行转账： BankTransfer。
- 支付宝：Alipay。
- 支付宝花呗：AntCreditPay。
- 线下汇款：OfflineRemittance。
- 信控额度退款：RegularBankCreditRefund。
- 信用卡：CreditCard。
- 网商银行信任付：MyBankCredit。
- 华夏银行分期付：HuaxiaBankCInstallment。
- 苹果支付：ApplePay。',
                              'type' => 'string',
                              'example' => 'AccountBalance',
                            ),
                            'RecordID' => 
                            array (
                              'description' => '订单号/账单号。',
                              'type' => 'string',
                              'example' => '2020030242',
                            ),
                            'Remarks' => 
                            array (
                              'description' => '交易备注。',
                              'type' => 'string',
                              'example' => 'NAT_GW',
                            ),
                            'Amount' => 
                            array (
                              'description' => '金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'TransactionAccount' => 
                            array (
                              'description' => '对应交易账号，比如支付宝充值账号或转账对端账号。',
                              'type' => 'string',
                              'example' => '213562146',
                            ),
                            'TransactionTime' => 
                            array (
                              'description' => '交易时间。',
                              'type' => 'string',
                              'example' => '2020-03-10T02:03:20Z',
                            ),
                            'TransactionType' => 
                            array (
                              'description' => '交易类型。
- 充值：Payment。
- 提现：Withdraw。
- 退款：Refund。
- 消费：Consumption。
- 转账：Transfer。
- 调账：Adjust。',
                              'type' => 'string',
                              'example' => 'Consumption',
                            ),
                            'TransactionFlow' => 
                            array (
                              'description' => '收支类型。
- 收入：Income。
- 支出：Expense。',
                              'type' => 'string',
                              'example' => 'Expense',
                            ),
                            'FundType' => 
                            array (
                              'description' => '资金形式。
- 现金：Cash。
- 保证金：Deposit。
- 信控额度退款：RegularBankCreditRefund。
- 订单直接支付：DirectPay。',
                              'type' => 'string',
                              'example' => 'Cash',
                            ),
                            'TransactionChannelSN' => 
                            array (
                              'description' => '交易渠道流水号。',
                              'type' => 'string',
                              'example' => '1234354325',
                            ),
                            'TransactionNumber' => 
                            array (
                              'description' => '交易编号。',
                              'type' => 'string',
                              'example' => '43342334',
                            ),
                            'Balance' => 
                            array (
                              'description' => '余额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"8634E02D-0942-4B1D-8295-5352FE9A1F39\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 10,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"AccountTransactionsList\\": {\\n      \\"AccountTransactionsList\\": [\\n        {\\n          \\"BillingCycle\\": \\"2020-03\\",\\n          \\"TransactionChannel\\": \\"AccountBalance\\",\\n          \\"RecordID\\": \\"2020030242\\",\\n          \\"Remarks\\": \\"NAT_GW\\",\\n          \\"Amount\\": \\"0\\",\\n          \\"TransactionAccount\\": \\"213562146\\",\\n          \\"TransactionTime\\": \\"2020-03-10T02:03:20Z\\",\\n          \\"TransactionType\\": \\"Consumption\\",\\n          \\"TransactionFlow\\": \\"Expense\\",\\n          \\"FundType\\": \\"Cash\\",\\n          \\"TransactionChannelSN\\": \\"1234354325\\",\\n          \\"TransactionNumber\\": \\"43342334\\",\\n          \\"Balance\\": \\"0\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryAccountTransactionsResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>8C451EDE-8F92-4896-B4E6-68159A27B0F5</RequestId>\\n    <Data>\\n        <TotalCount>1</TotalCount>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <AccountTransactionsList>\\n            <AccountTransactionsList>\\n                <TransactionType>Consumption</TransactionType>\\n                <BillingCycle>2020-03</BillingCycle>\\n                <TransactionNumber>133xxxxxx90112</TransactionNumber>\\n                <Amount>0.81</Amount>\\n                <TransactionAccount/>\\n                <TransactionTime>2020-03-10T02:03:20Z</TransactionTime>\\n                <TransactionChannelSN/>\\n                <Remarks>NAT_GW</Remarks>\\n                <FundType>Cash</FundType>\\n                <TransactionFlow>Expense</TransactionFlow>\\n                <RecordID>2020xxxxx706693</RecordID>\\n                <Balance>0.00</Balance>\\n                <TransactionChannel>AccountBalance</TransactionChannel>\\n            </AccountTransactionsList>\\n        </AccountTransactionsList>\\n        <AccountName>test@test.aliyunid.com</AccountName>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryAccountTransactionsResponse>","errorExample":""}]',
      'title' => '账户流水收支明细查询接口',
      'summary' => '查询用户账户流水信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryRelationList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号UID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1990699401005016',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页大小，默认20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'StatusList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '关系状态列表，状态是RelationshipStatusEnum的枚举值。默认不传值查询当前生效状态。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
              'example' => 'RELATED',
            ),
            'required' => false,
            'example' => 'RELATED',
            'maxItems' => 8,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '消息说明。
',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => '7FC5D662-37FD-40A6-85B1-33442D815184',
              ),
              'Success' => 
              array (
                'description' => '是否成功。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '消息体',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页大小',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'FinancialRelationInfoList' => 
                  array (
                    'description' => '关系列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '关系失效时间。为空表示没有失效',
                          'type' => 'string',
                          'example' => '2021-03-08T15:12Z',
                        ),
                        'RelationType' => 
                        array (
                          'description' => '关系策略：FinancialManagement表示财务管理，FinancialTrusteeship表示财务托管',
                          'type' => 'string',
                          'example' => 'FinancialManagement',
                        ),
                        'AccountNickName' => 
                        array (
                          'description' => '用户显示名称',
                          'type' => 'string',
                          'example' => 'test4',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '关系生效时间。符合ISO8601标准的utc时间格式，如2016-05-23T12:00:00Z（为北京时间2016年5月23日20点0分0秒）',
                          'type' => 'string',
                          'example' => '2021-03-02T15:12Z',
                        ),
                        'State' => 
                        array (
                          'description' => '关系状态。取值是RelationshipStatusEnum的枚举值。',
                          'type' => 'string',
                          'example' => 'RELATED',
                        ),
                        'AccountId' => 
                        array (
                          'description' => '阿里云账号UID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1851253838840762',
                        ),
                        'SetupTime' => 
                        array (
                          'description' => '关系建立时间。符合ISO8601标准的utc时间格式，如2016-05-23T12:00:00Z（为北京时间2016年5月23日20点0分0秒）',
                          'type' => 'string',
                          'example' => '2021-03-02T15:12Z',
                        ),
                        'AccountType' => 
                        array (
                          'description' => '企业财务账号类型：MASTER和MEMBER。',
                          'type' => 'string',
                          'example' => 'MEMBER',
                        ),
                        'AccountName' => 
                        array (
                          'description' => '阿里云账号登录名',
                          'type' => 'string',
                          'example' => 'caiwuyun_test4',
                        ),
                        'RelationId' => 
                        array (
                          'description' => '关系ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '51463',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"7FC5D662-37FD-40A6-85B1-33442D815184\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 100,\\n    \\"FinancialRelationInfoList\\": [\\n      {\\n        \\"EndTime\\": \\"2021-03-08T15:12Z\\",\\n        \\"RelationType\\": \\"FinancialManagement\\",\\n        \\"AccountNickName\\": \\"test4\\",\\n        \\"StartTime\\": \\"2021-03-02T15:12Z\\",\\n        \\"State\\": \\"RELATED\\",\\n        \\"AccountId\\": 1851253838840762,\\n        \\"SetupTime\\": \\"2021-03-02T15:12Z\\",\\n        \\"AccountType\\": \\"MEMBER\\",\\n        \\"AccountName\\": \\"caiwuyun_test4\\",\\n        \\"RelationId\\": 51463\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Successful!</Message>\\n<RequestId>7FC5D662-37FD-40A6-85B1-33442D815184</RequestId>\\n<Data>\\n    <TotalCount>100</TotalCount>\\n    <PageSize>20</PageSize>\\n    <PageNum>1</PageNum>\\n    <FinancialRelationInfoList>\\n        <AccountId>1851253838840762</AccountId>\\n        <EndTime/>\\n        <State>RELATED</State>\\n        <RelationType>FinancialManagement</RelationType>\\n        <StartTime>2021-03-02T15:12Z</StartTime>\\n        <SetupTime>2021-03-02T15:12Z</SetupTime>\\n        <RelationId>51463</RelationId>\\n        <AccountNickName>test4</AccountNickName>\\n        <AccountType>MEMBER</AccountType>\\n        <AccountName>caiwuyun_test4</AccountName>\\n    </FinancialRelationInfoList>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询企业财务关系列表',
      'summary' => '查询有主子关系权限的账号的成员账号关系列表。',
      'requestParamsDescription' => 'RelationshipStatusEnum类型定义：

|枚举值|描述|备注|
|--|:--:|--:|
|INITIAL|初始化状态|关系未生效|
|CONFIRMING|邀约状态|关系未生效 |
|REJECTED|被拒绝状态|关系未生效|
|CONNECTION_CANCELED|关系解除状态|关系未生效|
|RELATED|已关联状态|关系已生效|
|CHANGE_CONFIRMING|生效后变更待确认状态|关系已生效|
|CONNECTION_MASTER_CANCEL|取消确认状态|关系未生效|




',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryPermissionList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RelationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系ID。取值从QueryRelationList接口返回的结果字段relationId获取。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '51463',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '消息说明。
',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => 'F6E29451-A3CD-4705-806D-0112D08F5C49',
              ),
              'Success' => 
              array (
                'description' => '是否成功。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '消息体。
',
                'type' => 'object',
                'properties' => 
                array (
                  'EndTime' => 
                  array (
                    'description' => '关系生效时间。为空表示还没有失效，故没有失效时间。',
                    'type' => 'string',
                    'example' => '2021-03-06T15:12Z',
                  ),
                  'RelationType' => 
                  array (
                    'description' => '关系策略：FinancialManagement表示财务管理，FinancialTrusteeship表示财务托管',
                    'type' => 'string',
                    'example' => 'FinancialManagement',
                  ),
                  'StartTime' => 
                  array (
                    'description' => '关系生效时间。符合ISO8601标准的utc时间格式，如2016-05-23T12:00:00Z（为北京时间2016年5月23日20点0分0秒）',
                    'type' => 'string',
                    'example' => '2021-03-02T15:12Z',
                  ),
                  'State' => 
                  array (
                    'description' => '关系状态。取值是RelationshipStatusEnum的枚举值。',
                    'type' => 'string',
                    'example' => 'RELATED',
                  ),
                  'MasterId' => 
                  array (
                    'description' => '主账号Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1990699401005016',
                  ),
                  'MemberId' => 
                  array (
                    'description' => '成员账号Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1851253838840762',
                  ),
                  'SetupTime' => 
                  array (
                    'description' => '关系建立时间。符合ISO8601标准的utc时间格式，如2016-05-23T12:00:00Z（为北京时间2016年5月23日20点0分0秒）',
                    'type' => 'string',
                    'example' => '2021-03-02T15:12Z',
                  ),
                  'PermissionList' => 
                  array (
                    'description' => '权限列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '权限失效时间。为空表示权限目前还是生效的。符合ISO8601标准的utc时间格式，如2016-05-23T12:00:00Z（为北京时间2016年5月23日20点0分0秒）',
                          'type' => 'string',
                          'example' => '2021-03-05T15:12Z',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '权限生效时间。符合ISO8601标准的utc时间格式，如2016-05-23T12:00:00Z（为北京时间2016年5月23日20点0分0秒）',
                          'type' => 'string',
                          'example' => '2021-03-02T15:12Z',
                        ),
                        'PermissionCode' => 
                        array (
                          'description' => '权限Code',
                          'type' => 'string',
                          'example' => 'allow_synchronize_finance_identity',
                        ),
                        'PermissionName' => 
                        array (
                          'description' => '权限名',
                          'type' => 'string',
                          'example' => '主账号 子账号共享主账号信控身份',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"F6E29451-A3CD-4705-806D-0112D08F5C49\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"EndTime\\": \\"2021-03-06T15:12Z\\",\\n    \\"RelationType\\": \\"FinancialManagement\\",\\n    \\"StartTime\\": \\"2021-03-02T15:12Z\\",\\n    \\"State\\": \\"RELATED\\",\\n    \\"MasterId\\": 1990699401005016,\\n    \\"MemberId\\": 1851253838840762,\\n    \\"SetupTime\\": \\"2021-03-02T15:12Z\\",\\n    \\"PermissionList\\": [\\n      {\\n        \\"EndTime\\": \\"2021-03-05T15:12Z\\",\\n        \\"StartTime\\": \\"2021-03-02T15:12Z\\",\\n        \\"PermissionCode\\": \\"allow_synchronize_finance_identity\\",\\n        \\"PermissionName\\": \\"主账号 子账号共享主账号信控身份\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Successful!</Message>\\n<RequestId>F6E29451-A3CD-4705-806D-0112D08F5C49</RequestId>\\n<Data>\\n    <MemberId>1851253838840762</MemberId>\\n    <EndTime/>\\n    <State>RELATED</State>\\n    <RelationType>FinancialManagement</RelationType>\\n    <StartTime>2021-03-02T15:12Z</StartTime>\\n    <SetupTime>2021-03-02T15:12Z</SetupTime>\\n    <MasterId>1990699401005016</MasterId>\\n    <PermissionList>\\n        <EndTime/>\\n        <PermissionName>主账号允许子账号共享主账号信控身份</PermissionName>\\n        <StartTime>2021-03-02T15:12Z</StartTime>\\n        <PermissionCode>allow_synchronize_finance_identity</PermissionCode>\\n    </PermissionList>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询权限详情',
      'summary' => '根据关系ID查询有主子关系权限的关系的权限列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => 'RelationshipStatusEnum类型定义：

|枚举值|描述|备注|
|--|:--:|--:|
|INITIAL|初始化状态|关系未生效|
|CONFIRMING|邀约状态|关系未生效 |
|REJECTED|被拒绝状态|关系未生效|
|CONNECTION_CANCELED|关系解除状态|关系未生效|
|RELATED|已关联状态|关系已生效|
|CHANGE_CONFIRMING|生效后变更待确认状态|关系已生效|
|CONNECTION_MASTER_CANCEL|取消确认状态|关系未生效|
',
      'extraInfo' => ' ',
    ),
    'GetAccountRelation' => 
    array (
      'summary' => '查询财务关联详情。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RelationId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'relationId',
            'description' => '账号关联id',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => 'AddAccountRelation接口返回值',
          ),
        ),
        1 => 
        array (
          'name' => 'RequestId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'requestId',
            'description' => '请求唯一标识，用于标记一次请求，便于定位问题',
            'type' => 'string',
            'required' => false,
            'example' => 'requestId',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'result',
            'description' => 'result',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => 'message',
                'description' => '提示信息',
                'type' => 'string',
                'example' => '提示信息',
              ),
              'RequestId' => 
              array (
                'title' => 'requestId',
                'description' => '请求标识',
                'type' => 'string',
                'example' => 'RequestId',
              ),
              'Data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'title' => 'id',
                    'description' => '关联',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '关联id',
                  ),
                  'ParentUserId' => 
                  array (
                    'title' => 'parentUserId',
                    'description' => '父账号uid',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '主账号的阿里云UID',
                  ),
                  'ChildUserId' => 
                  array (
                    'description' => '子账号uid',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '子账号的阿里云账号UID',
                  ),
                  'StartTime' => 
                  array (
                    'description' => '账号关联开始时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2021-11-01',
                  ),
                  'EndTime' => 
                  array (
                    'description' => '账号关联结束时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2021-12-01',
                  ),
                  'Type' => 
                  array (
                    'title' => 'type',
                    'description' => '关联关系类型',
                    'type' => 'string',
                    'example' => 'enterprise_group',
                  ),
                  'Status' => 
                  array (
                    'description' => '账号关联状态：
RELATED 【已建立关联】
CONFIRMING 【待对方确认】
REJECTED 【对方拒绝】
CONNECTION_CANCELED 【财务子账号取消申请】
CONNECTION_MASTER_CANCEL【财务主账号取消邀请】
CHANGE_CONFIRMING 【关系变更待确认中】
INITIAL 【初始新建关联状态】',
                    'type' => 'string',
                    'example' => 'RELATED 【已建立关联】',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '账号关联更新时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2021-12-01',
                  ),
                ),
              ),
              'Code' => 
              array (
                'title' => 'code',
                'description' => '请求状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => 'success',
                'description' => '请求是否成功标识',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"提示信息\\",\\n  \\"RequestId\\": \\"RequestId\\",\\n  \\"Data\\": {\\n    \\"Id\\": 0,\\n    \\"ParentUserId\\": 0,\\n    \\"ChildUserId\\": 0,\\n    \\"StartTime\\": 0,\\n    \\"EndTime\\": 0,\\n    \\"Type\\": \\"enterprise_group\\",\\n    \\"Status\\": \\"RELATED 【已建立关联】\\",\\n    \\"GmtModified\\": 0\\n  },\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询财务关联',
    ),
    'AddAccountRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RelationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系类型，目前仅支持enterprise_group',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'enterprise_group',
          ),
        ),
        1 => 
        array (
          'name' => 'ParentUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主账号的阿里云UID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1738376485192612',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '显示名称，用于页面显示，便于明确账号使用场景',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'xxx项目',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子账号的阿里云账号UID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1512996702208737',
          ),
        ),
        4 => 
        array (
          'name' => 'RequestId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求唯一标识，用于标记一次请求，便于定位问题',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '32324242444',
          ),
        ),
        5 => 
        array (
          'name' => 'PermissionCodes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '授予子账号的权限数据，权限点如下：

- 允许同步信控身份给关联账号:SYNCHRONIZE\\_FINANCE\\_IDENTITY
- 允许同步优惠给关联账号:SYNCHRONIZE\\_FINANCE\\_DISCOUNT\\_POLICY\\_TO\\_TARGET
- 禁止关联账户余额提现:FORBID\\_WITHDRAW\\_CASH
- 禁止关联账户管理发票:FORBID\\_MANAGE\\_INVOICE
- 请求查看财务关联信息:CHECK\\_FINANCE\\_INFO
- 允许管理目标发票:MANAGE\\_TARGET\\_INVOICE
- 允许查看关联账户消费信息:CHECK\\_TARGET\\_CONSUMPTION',
            'type' => 'array',
            'items' => 
            array (
              'description' => '权限点。',
              'type' => 'string',
              'required' => false,
              'example' => 'SYNCHRONIZE_FINANCE_IDENTITY',
            ),
            'required' => false,
            'example' => 'CHECK_TARGET_CONSUMPTION',
            'maxItems' => 100,
          ),
        ),
        6 => 
        array (
          'name' => 'RoleCodes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '授予子账号角色，目前仅支持财务托管角色(trusteeship)',
            'type' => 'array',
            'items' => 
            array (
              'description' => '财务托管角色。',
              'type' => 'string',
              'required' => false,
              'example' => 'trusteeship',
            ),
            'required' => false,
            'example' => 'trusteeship',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => '返回信息',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识',
                'type' => 'string',
                'example' => '请求标识',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'description' => '请求来源ip',
                    'type' => 'string',
                    'example' => 'HostId',
                  ),
                  'RelationId' => 
                  array (
                    'description' => '关联关系id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => 'RelationId',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"返回信息\\",\\n  \\"RequestId\\": \\"请求标识\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostId\\": \\"HostId\\",\\n    \\"RelationId\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message/>\\n<RequestId/>\\n<Data>\\n    <HostId/>\\n</Data>\\n<Code/>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '创建财务关联',
      'summary' => '创建一个财务关联关系。',
      'description' => '1、具体财务关联业务规则参见（[中国站]( https://help.aliyun.com/document_detail/100376.html?spm=a2c4g.11186623.6.563.52a83908ypl4yE) [国际站]( https://www.alibabacloud.com/help/en/doc-detail/116383.html)）
2、如果邀约主、子账号实名认证一致，则不需要子账号通过OpenAPI再次确认，否则需要调用ConfirmRelation确认',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyAccountRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RelationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系类型，目前仅支持enterprise_group',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'enterprise_group',
          ),
        ),
        1 => 
        array (
          'name' => 'RelationOperation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改动作
- 添加：ADD
- 删除：DELETE',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ADD',
          ),
        ),
        2 => 
        array (
          'name' => 'ParentUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主账号的阿里云UID
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1738376485192612',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '显示名称，用于页面显示，便于明确账号使用场景',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '用户昵称',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子账号的阿里云账号UID
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1512996702208737',
          ),
        ),
        5 => 
        array (
          'name' => 'RequestId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求唯一标识，用于标记一次请求，便于定位问题
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'request_id',
          ),
        ),
        6 => 
        array (
          'name' => 'RoleCodes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '暂时不支持角色修改',
            'type' => 'array',
            'items' => 
            array (
              'description' => '角色 Code。',
              'type' => 'string',
              'required' => false,
              'example' => 'trusteeship',
            ),
            'required' => false,
            'example' => 'trusteeship',
            'maxItems' => 200,
          ),
        ),
        7 => 
        array (
          'name' => 'PermissionCodes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '支持修改的权限点如下：

- 允许同步信控身份给关联账号：SYNCHRONIZE\\_FINANCE\\_IDENTITY
- 允许同步优惠给关联账号：SYNCHRONIZE\\_FINANCE\\_DISCOUNT\\_POLICY\\_TO\\_TARGET
- 禁止关联账户余额提现：FORBID\\_WITHDRAW\\_CASH
- 禁止关联账户管理发票：FORBID\\_MANAGE\\_INVOICE
- 请求查看财务关联信息：CHECK\\_FINANCE\\_INFO
- 允许管理目标发票：MANAGE\\_TARGET\\_INVOICE
- 允许查看关联账户消费信息：CHECK\\_TARGET\\_CONSUMPTION',
            'type' => 'array',
            'items' => 
            array (
              'description' => '权限点。',
              'type' => 'string',
              'required' => false,
              'example' => 'SYNCHRONIZE_FINANCE_IDENTITY',
            ),
            'required' => false,
            'example' => 'SYNCHRONIZE_FINANCE_IDENTITY',
            'maxItems' => 100,
          ),
        ),
        8 => 
        array (
          'name' => 'RelationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系ID。取值从QueryRelationList接口返回的结果字段relationId获取。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '51463',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回消息',
                'type' => 'string',
                'example' => '返回消息',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求标识',
                'type' => 'string',
                'example' => '48602faf-abbe-4d46-8029-654cc5aead5d',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'description' => '请求来源IP',
                    'type' => 'string',
                    'example' => '127.0.0.1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"返回消息\\",\\n  \\"RequestId\\": \\"48602faf-abbe-4d46-8029-654cc5aead5d\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostId\\": \\"127.0.0.1\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message/>\\n<RequestId/>\\n<Data>\\n    <HostId/>\\n</Data>\\n<Code/>\\n<Success/>","errorExample":""}]',
      'title' => '修改财务关联权限点',
      'summary' => '支持添加、删除财务关联权限点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ConfirmRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RelationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系类型，目前仅支持enterprise_group',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '关系类型',
          ),
        ),
        1 => 
        array (
          'name' => 'ParentUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主账号阿里云UID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1738376485192612',
          ),
        ),
        2 => 
        array (
          'name' => 'ConfirmCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '确认动作：

- 子账号同意：child_agree
- 子账号拒绝：child_disagree
- 主账号取消确认：主账号取消确认',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'child_agree',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子账号阿里云UID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1512996702208737',
          ),
        ),
        4 => 
        array (
          'name' => 'RequestId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调用请求唯一标识',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'request_id',
          ),
        ),
        5 => 
        array (
          'name' => 'PermissionCodes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '授予子账号的权限数据，权限点如下：
- 允许同步信控身份给关联账号：SYNCHRONIZE_FINANCE_IDENTITY
- 允许同步优惠给关联账号：SYNCHRONIZE_FINANCE_DISCOUNT_POLICY_TO_TARGET
- 禁止关联账户余额提现：FORBID_WITHDRAW_CASH
- 禁止关联账户管理发票：FORBID_MANAGE_INVOICE
- 请求查看财务关联信息：CHECK_FINANCE_INFO
- 允许管理目标发票：MANAGE_TARGET_INVOICE
- 允许查看关联账户消费信息：CHECK_TARGET_CONSUMPTION',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
              'example' => 'SYNCHRONIZE_FINANCE_IDENTITY',
            ),
            'required' => true,
            'example' => 'SYNCHRONIZE_FINANCE_IDENTITY',
            'maxItems' => 100,
          ),
        ),
        6 => 
        array (
          'name' => 'RelationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系ID。取值从QueryRelationList接口返回的结果字段relationId获取。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '51463',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务后台状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => '返回信息',
              ),
              'RequestId' => 
              array (
                'description' => '调用请求唯一标识',
                'type' => 'string',
                'example' => 'request_id',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'description' => 'HostId',
                    'type' => 'string',
                    'example' => 'HostId',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"返回信息\\",\\n  \\"RequestId\\": \\"request_id\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostId\\": \\"HostId\\"\\n  }\\n}","errorExample":""}]',
      'title' => '确认财务关联',
      'summary' => '子账号确认主账号发起的邀约。',
      'description' => '1、目前只有财务管理关联，在主、子实名认证不一致的情形下，才需要子账号确认
2、确认的权限点，必须与主账号发起邀约权限点一致才可以确认成功',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RelieveAccountRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RelationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关系类型，目前仅支持enterprise_group',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'enterprise_group',
          ),
        ),
        1 => 
        array (
          'name' => 'ParentUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主账号的阿里云UID，【parentUserId，childUserId，RelationType】  或者【relationId】必须填写一组',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1738376485192612',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子账号的阿里云账号UID，【parentUserId，childUserId，RelationType】  或者【relationId】必须填写一组',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-9223372036854775808',
            'example' => '1512996702208737',
          ),
        ),
        3 => 
        array (
          'name' => 'RequestId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求唯一标识，用于标记一次请求，便于定位问题',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'request_id',
          ),
        ),
        4 => 
        array (
          'name' => 'RelationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账号关联id，【parentUserId，childUserId，RelationType】  或者【relationId】必须填写一组',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => 'RelationId',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回消息',
                'type' => 'string',
                'example' => '返回消息',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求业务标识',
                'type' => 'string',
                'example' => 'request_id',
              ),
              'Success' => 
              array (
                'description' => '请求处理是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'description' => 'hostid',
                    'type' => 'string',
                    'example' => 'HostId',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"返回消息\\",\\n  \\"RequestId\\": \\"request_id\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostId\\": \\"HostId\\"\\n  }\\n}","type":"json"}]',
      'title' => '解除账号关联',
      'summary' => '解除主、子账号关联。',
    ),
    'QueryInstanceByTag' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型
instance 节省计划实例',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源id列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源 ID',
              'type' => 'string',
              'required' => false,
              'example' => 'spn-XXXXXX',
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签键值对',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ecs',
                ),
                'Value' => 
                array (
                  'description' => '标签值',
                  'type' => 'string',
                  'required' => false,
                  'example' => '001',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回值',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'PARAM_ERROR',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'param is null',
              ),
              'NextToken' => 
              array (
                'description' => '查询凭证（Token），取值为上一次API调用返回的NextToken参数值。',
                'type' => 'string',
                'example' => 'CAESEgoQCg4KCm',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '9EC6C0B7-3397-5FAE-9915-8972CDDB1211',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagResource' => 
              array (
                'description' => '实例信息的列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例信息',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ResourceId' => 
                    array (
                      'description' => '资源ID',
                      'type' => 'string',
                      'example' => 'spn-xxxxx',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '资源类型
instance 节省计划实例',
                      'type' => 'string',
                      'example' => 'instance',
                    ),
                    'Tag' => 
                    array (
                      'description' => '标签列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签键值对',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键',
                            'type' => 'string',
                            'example' => 'tag1',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值',
                            'type' => 'string',
                            'example' => '10',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"PARAM_ERROR\\",\\n  \\"Message\\": \\"param is null\\",\\n  \\"NextToken\\": \\"CAESEgoQCg4KCm\\",\\n  \\"RequestId\\": \\"9EC6C0B7-3397-5FAE-9915-8972CDDB1211\\",\\n  \\"Success\\": true,\\n  \\"TagResource\\": [\\n    {\\n      \\"ResourceId\\": \\"spn-xxxxx\\",\\n      \\"ResourceType\\": \\"instance\\",\\n      \\"Tag\\": [\\n        {\\n          \\"Key\\": \\"tag1\\",\\n          \\"Value\\": \\"10\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '按标签查询实例',
      'summary' => '根据标签信息查询实例列表。',
    ),
    'TagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型
instance 节省计划实例',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源id列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源id',
              'type' => 'string',
              'required' => false,
              'example' => 'spn-XXXXXX',
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键对应的标签值。可以同时创建n个标签值，n的取值范围：1~20。允许传入空字符串。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'tag1',
                ),
                'Value' => 
                array (
                  'description' => '标签值，n的取值范围：1~20。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '001',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'InternalError',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'This API is not applicable for caller.',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '1537A007-72D7-4165-8A26-8694A38E219A',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"InternalError\\",\\n  \\"Message\\": \\"This API is not applicable for caller.\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"1537A007-72D7-4165-8A26-8694A38E219A\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '为资源添加标签',
      'summary' => '支持添加资源上配置的标签。',
    ),
    'UntagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型
instance 节省计划实例',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否全部删除，仅当未传入tagkey.n时有效。取值范围：-true-false',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源id列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID',
              'type' => 'string',
              'required' => false,
              'example' => 'spn-xxxxxx',
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        3 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签键。N的取值范围为1~20。',
              'type' => 'string',
              'required' => false,
              'example' => 'codename',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回值信息',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'PARAM_ERROR',
              ),
              'Message' => 
              array (
                'description' => '错误信息
',
                'type' => 'string',
                'example' => 'This API is not applicable for caller.',
              ),
              'Data' => 
              array (
                'description' => '返回数据
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C7C15585-8349-4C62-BEE4-5A391841B9BE',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"PARAM_ERROR\\",\\n  \\"Message\\": \\"This API is not applicable for caller.\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"C7C15585-8349-4C62-BEE4-5A391841B9BE\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '取消资源的标签',
      'summary' => '取消资源上配置的标签。',
    ),
    'QueryPrepaidCards' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ExpiryTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '卡包过期时间止，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2018-08-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'ExpiryTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '卡包过期时间起，格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2018-08-01T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'EffectiveOrNot',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '卡包是否生效。取值范围：
- true。
- false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7EA6C02D-06D0-4213-9C3B-E67910F7D1EB',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PrepaidCard' => 
                  array (
                    'description' => '返回数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '取值：
- Available：有效。
- Expired：过期。
- Cancelled：作废。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'ExpiryTime' => 
                        array (
                          'description' => '卡包失效时间。',
                          'type' => 'string',
                          'example' => '2019-08-04T01:39:11Z',
                        ),
                        'GrantedTime' => 
                        array (
                          'description' => '卡包发放时间。',
                          'type' => 'string',
                          'example' => '2018-08-03T01:39:11Z',
                        ),
                        'NominalValue' => 
                        array (
                          'description' => '面额。',
                          'type' => 'string',
                          'example' => '100.00',
                        ),
                        'EffectiveTime' => 
                        array (
                          'description' => '卡包生效时间。',
                          'type' => 'string',
                          'example' => '2018-08-03T01:39:11Z',
                        ),
                        'PrepaidCardNo' => 
                        array (
                          'description' => '卡包编码。',
                          'type' => 'string',
                          'example' => 'Q-7edaab979fc9',
                        ),
                        'ApplicableScenarios' => 
                        array (
                          'description' => '适用场景描述。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'PrepaidCardId' => 
                        array (
                          'description' => '卡包ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '213432432',
                        ),
                        'ApplicableProducts' => 
                        array (
                          'description' => '适用产品描述。',
                          'type' => 'string',
                          'example' => '通用',
                        ),
                        'Balance' => 
                        array (
                          'description' => '剩余金额。',
                          'type' => 'string',
                          'example' => '100.00',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '  Some parameters arte mandatoryfor this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Some parameters are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specifiedowner doesn’t belong to caller',
          ),
          5 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"7EA6C02D-06D0-4213-9C3B-E67910F7D1EB\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PrepaidCard\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"ExpiryTime\\": \\"2019-08-04T01:39:11Z\\",\\n        \\"GrantedTime\\": \\"2018-08-03T01:39:11Z\\",\\n        \\"NominalValue\\": \\"100.00\\",\\n        \\"EffectiveTime\\": \\"2018-08-03T01:39:11Z\\",\\n        \\"PrepaidCardNo\\": \\"Q-7edaab979fc9\\",\\n        \\"ApplicableScenarios\\": \\"test\\",\\n        \\"PrepaidCardId\\": 213432432,\\n        \\"ApplicableProducts\\": \\"通用\\",\\n        \\"Balance\\": \\"100.00\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryPrepaidCardsResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>7EA6C02D-06D0-4213-9C3B-E67910F7D1EB</RequestId>\\n    <Data>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryPrepaidCardsResponse>","errorExample":""}]',
      'title' => '账户卡包查询',
      'summary' => '查询用户卡包信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryRedeem' => 
    array (
      'summary' => '查询用户提货券信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ExpiryTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '失效开始时间。格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2018-08-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'ExpiryTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '失效结束时间。格式：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2018-08-01T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'EffectiveOrNot',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提货券是否生效：
- true。
- false。

默认false。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E503DC7B-E4F0-4B3C-BC89-BCECF1338F0B',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'Redeem' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Redeem' => 
                      array (
                        'description' => '提货券详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ExpiryTime' => 
                            array (
                              'description' => '提货券失效时间。',
                              'type' => 'string',
                              'example' => '2018-06-13 20:25:00',
                            ),
                            'GrantedTime' => 
                            array (
                              'description' => '提货券发行时间。',
                              'type' => 'string',
                              'example' => '2018-05-14 20:25:00',
                            ),
                            'Status' => 
                            array (
                              'description' => '提货券状态，取值：
- Generated：已生成。
- CallBack：已回调。
- RefundPending：提货券退款中。
- Canceled：提货券已作废。
- Order_Canceled：提货券已作废。
- ActivePending：激活中，请稍后。
- ActiveSuccess：激活成功。
- ExchangePending：兑换中。
- ExchangeSuccess：兑换成功。
- Expired：已过期。
- Invalid：已作废。',
                              'type' => 'string',
                              'example' => 'Generated',
                            ),
                            'Specification' => 
                            array (
                              'description' => '提货券规格。',
                              'type' => 'string',
                              'example' => '无',
                            ),
                            'NominalValue' => 
                            array (
                              'description' => '面额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'EffectiveTime' => 
                            array (
                              'description' => '提货券生效时间。',
                              'type' => 'string',
                              'example' => '2018-05-14 20:25:00',
                            ),
                            'RedeemId' => 
                            array (
                              'description' => '提货券ID。',
                              'type' => 'string',
                              'example' => '1342',
                            ),
                            'RedeemNo' => 
                            array (
                              'description' => '提货券Number。',
                              'type' => 'string',
                              'example' => '4889*****1610',
                            ),
                            'ApplicableProducts' => 
                            array (
                              'description' => '适用产品。',
                              'type' => 'string',
                              'example' => '云服务器',
                            ),
                            'Balance' => 
                            array (
                              'description' => '余额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.	',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.	',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.	',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"E503DC7B-E4F0-4B3C-BC89-BCECF1338F0B\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 1,\\n    \\"Redeem\\": {\\n      \\"Redeem\\": [\\n        {\\n          \\"ExpiryTime\\": \\"2018-06-13 20:25:00\\",\\n          \\"GrantedTime\\": \\"2018-05-14 20:25:00\\",\\n          \\"Status\\": \\"Generated\\",\\n          \\"Specification\\": \\"无\\",\\n          \\"NominalValue\\": \\"0\\",\\n          \\"EffectiveTime\\": \\"2018-05-14 20:25:00\\",\\n          \\"RedeemId\\": \\"1342\\",\\n          \\"RedeemNo\\": \\"4889*****1610\\",\\n          \\"ApplicableProducts\\": \\"云服务器\\",\\n          \\"Balance\\": \\"0\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryRedeemResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>E503DC7B-E4F0-4B3C-BC89-BCECF1338F0B</RequestId>\\n    <Data>\\n        <TotalCount>0</TotalCount>\\n        <PageSize>10</PageSize>\\n        <PageNum>1</PageNum>\\n        <Redeem>\\n        </Redeem>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryRedeemResponse>","errorExample":""}]',
      'title' => '查询提货券服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryCashCoupons' => 
    array (
      'summary' => '查询用户代金券信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ExpiryTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '代金券终止过期时间，格式：yyyy-MM-ddTHH:mm:ssZ',
            'type' => 'string',
            'required' => false,
            'example' => '2018-08-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'ExpiryTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '代金券起始过期时间，格式：yyyy-MM-ddTHH:mm:ssZ',
            'type' => 'string',
            'required' => false,
            'example' => '2018-09-01T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'EffectiveOrNot',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '代金券是否生效。取值范围：
- true
- false',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '执行结果说明',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '147B566E-DB4C-4E43-BDBB-5DB1D9D268DB',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。true：调用成功，false：调用失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CashCoupon' => 
                  array (
                    'description' => '返回数据',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '取值：
- Available：有效
- Expired：过期
- Cancelled：作废',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'ExpiryTime' => 
                        array (
                          'description' => '代金券过期时间',
                          'type' => 'string',
                          'example' => '2018-08-10T00:00:00Z',
                        ),
                        'GrantedTime' => 
                        array (
                          'description' => '代金券发放时间',
                          'type' => 'string',
                          'example' => '2018-08-02T15:15:50Z',
                        ),
                        'NominalValue' => 
                        array (
                          'description' => '面额',
                          'type' => 'string',
                          'example' => '100.00',
                        ),
                        'EffectiveTime' => 
                        array (
                          'description' => '代金券生效时间',
                          'type' => 'string',
                          'example' => '2018-08-02T15:15:50Z',
                        ),
                        'ApplicableScenarios' => 
                        array (
                          'description' => '适用场景描述',
                          'type' => 'string',
                          'example' => '阿里云按量付费账单,阿里云新购',
                        ),
                        'CashCouponId' => 
                        array (
                          'description' => '代金券ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '34534253254325',
                        ),
                        'ApplicableProducts' => 
                        array (
                          'description' => '适用产品描述',
                          'type' => 'string',
                          'example' => '通用',
                        ),
                        'CashCouponNo' => 
                        array (
                          'description' => '代金券编码',
                          'type' => 'string',
                          'example' => 'Q-b1485def8f04a',
                        ),
                        'Balance' => 
                        array (
                          'description' => '余额',
                          'type' => 'string',
                          'example' => '100.00',
                        ),
                        'Description' => 
                        array (
                          'description' => '备注',
                          'type' => 'string',
                          'example' => '该代金券用于产品功能验证的测试',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => '  Some parameters arte mandatoryfor this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Some parameter sare not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specifiedowner doesn’t belong to caller',
          ),
          5 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"147B566E-DB4C-4E43-BDBB-5DB1D9D268DB\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CashCoupon\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"ExpiryTime\\": \\"2018-08-10T00:00:00Z\\",\\n        \\"GrantedTime\\": \\"2018-08-02T15:15:50Z\\",\\n        \\"NominalValue\\": \\"100.00\\",\\n        \\"EffectiveTime\\": \\"2018-08-02T15:15:50Z\\",\\n        \\"ApplicableScenarios\\": \\"阿里云按量付费账单,阿里云新购\\",\\n        \\"CashCouponId\\": 34534253254325,\\n        \\"ApplicableProducts\\": \\"通用\\",\\n        \\"CashCouponNo\\": \\"Q-b1485def8f04a\\",\\n        \\"Balance\\": \\"100.00\\",\\n        \\"Description\\": \\"该代金券用于产品功能验证的测试\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询用户代金券信息',
    ),
    'CreateSavingsPlansInstance' => 
    array (
      'summary' => '新购一个节省计划，并自动完成支付，创建节省计划实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SpecType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'specType',
            'description' => '规格类型，和Specification字段配合使用，当不为通用型时需要指定该字段：

- group 规格套餐

- family 规格族',
            'type' => 'string',
            'required' => false,
            'example' => 'family',
          ),
        ),
        1 => 
        array (
          'name' => 'PayMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'payMode',
            'description' => '支付方式：

- total 全预付

- half 部分预付

- zero 0预付',
            'type' => 'string',
            'required' => true,
            'example' => 'total',
            'enum' => 
            array (
              0 => 'total',
              1 => 'half',
              2 => 'zero',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'Specification',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'specification',
            'description' => '规格信息，和SpecType字段配合使用',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs.g6',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'type',
            'description' => '节省计划类型：

- universal 通用型

- ecs 计算型

- elasticy 弹性版',
            'type' => 'string',
            'required' => true,
            'example' => 'universal',
            'enum' => 
            array (
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'PoolValue',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'poolValue',
            'description' => '承付款，单位元',
            'type' => 'string',
            'required' => true,
            'example' => '0.1',
          ),
        ),
        5 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'duration',
            'description' => '购买时长，和PricingCycle配合使用',
            'type' => 'string',
            'required' => true,
            'example' => '1',
            'minLength' => 1,
          ),
        ),
        6 => 
        array (
          'name' => 'CommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'commodityCode',
            'description' => '购买商品',
            'type' => 'string',
            'required' => true,
            'example' => 'savingplan_common_public_cn',
          ),
        ),
        7 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'pricingCycle',
            'description' => '购买时长单位，和duration字段配合使用

- Year 年

- Month 月',
            'type' => 'string',
            'required' => true,
            'example' => 'Year',
            'enum' => 
            array (
              0 => 'Year',
              1 => 'Month',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region',
            'description' => '抵扣地域，当购买非通用型时需要指定抵扣地域',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        9 => 
        array (
          'name' => 'EffectiveDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'effectiveDate',
            'description' => '指定生效时间，日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ',
            'type' => 'string',
            'required' => false,
            'example' => '2021-12-31T00:00:00Z',
          ),
        ),
        10 => 
        array (
          'name' => 'ExtendMap',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '扩展参数Map',
            'type' => 'object',
            'required' => false,
            'additionalProperties' => 
            array (
              'type' => 'string',
              'example' => 'TEST:123',
              'description' => '扩展参数键值对',
            ),
            'enumValueTitles' => 
            array (
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'result',
            'description' => '结果',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => 'message',
                'description' => '错误信息',
                'type' => 'string',
                'example' => '参数不能为空',
              ),
              'RequestId' => 
              array (
                'title' => 'requestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '26dabb0c-8ca0-4aa0-8143-30499f3fe304',
              ),
              'Data' => 
              array (
                'title' => 'data',
                'description' => '返回结果',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'title' => 'orderId',
                    'description' => '订单号',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '202110260001',
                  ),
                ),
              ),
              'Code' => 
              array (
                'title' => 'code',
                'description' => '错误码',
                'type' => 'string',
                'example' => 'PARAM_ERROR',
              ),
              'Success' => 
              array (
                'title' => 'success',
                'description' => '是否调用成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"参数不能为空\\",\\n  \\"RequestId\\": \\"26dabb0c-8ca0-4aa0-8143-30499f3fe304\\",\\n  \\"Data\\": {\\n    \\"OrderId\\": 202110260001\\n  },\\n  \\"Code\\": \\"PARAM_ERROR\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSavingsPlansInstanceResponse>\\n    <RequestId>26dabb0c-8ca0-4aa0-8143-30499f3fe304</RequestId>\\n    <Data>\\n        <OrderId>202110260001</OrderId>\\n    </Data>\\n    <Success>true</Success>\\n</CreateSavingsPlansInstanceResponse>","errorExample":""}]',
      'title' => '节省计划实例创建',
    ),
    'QuerySavingsPlansInstance' => 
    array (
      'summary' => '查询当前用户保有的节省计划实例信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        1 => 
        array (
          'name' => 'Locale',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多语言信息

- ZH 中文
- EN 英文',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ZH',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节省计划实例ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'spn-xxxxxxx',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，格式 yyyy-MM-dd HH:mm:ss',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2020-01-01 00:00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，格式 yyyy-MM-dd HH:mm:ss',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签元素列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签元素',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签查询键',
                  'type' => 'string',
                  'required' => false,
                  'example' => '测试标签',
                ),
                'Value' => 
                array (
                  'description' => '标签查询值',
                  'type' => 'string',
                  'required' => false,
                  'example' => '测试标签',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        7 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态：
NORMAL:有效
RELEASE 失效',
            'type' => 'string',
            'required' => false,
            'example' => 'NORMAL',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回值对象',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '61293E7A-3406-4447-8620-EC88B0AA66AD',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回元素',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '查询页数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Items' => 
                  array (
                    'description' => '实例信息列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '当前状态

- NORMAL 正常状态

- LIMIT 欠费停机

- RELEASE 释放',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'Cycle' => 
                        array (
                          'description' => '购买年限',
                          'type' => 'string',
                          'example' => '1:Year',
                        ),
                        'StartTimestamp' => 
                        array (
                          'description' => '开始时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1663135741039',
                        ),
                        'SavingsType' => 
                        array (
                          'description' => '节省计划类型：

- unversal 通用型
-  ecs 计算型',
                          'type' => 'string',
                          'example' => 'ECS',
                        ),
                        'Utilization' => 
                        array (
                          'description' => '总使用率',
                          'type' => 'string',
                          'example' => '1.0',
                        ),
                        'PrepayFee' => 
                        array (
                          'description' => '预付金额',
                          'type' => 'string',
                          'example' => '8760.00',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '节省计划实例ID',
                          'type' => 'string',
                          'example' => 'spn-xxxxxxxx',
                        ),
                        'Currency' => 
                        array (
                          'description' => '货币单位：CNY人民币 USD美元',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'EndTimestamp' => 
                        array (
                          'description' => '结束时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1663135741039',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '实例失效时间，格式 yyyy-MM-dd HH:mm:ss',
                          'type' => 'string',
                          'example' => '2021-01-01 00:00:00',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '实例生效时间，格式 yyyy-MM-dd HH:mm:ss',
                          'type' => 'string',
                          'example' => '2020-01-01 00:00:00',
                        ),
                        'AllocationStatus' => 
                        array (
                          'description' => '分配状态：
- unallocated 未分配
- allocated 分配中
- beAllocated 被分配中
',
                          'type' => 'string',
                          'example' => 'unallocated',
                        ),
                        'InstanceFamily' => 
                        array (
                          'description' => '如果是ECS型实例，表示对应的规格族信息或者规格族套餐信息',
                          'type' => 'string',
                          'example' => 'ecs.g6',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域信息',
                          'type' => 'string',
                          'example' => 'cn-zhangjiakou-na62-a01',
                        ),
                        'LastBillTotalUsage' => 
                        array (
                          'description' => '上一周期抵扣总金额',
                          'type' => 'string',
                          'example' => '100.0',
                        ),
                        'LastBillUtilization' => 
                        array (
                          'description' => '上一周期使用率',
                          'type' => 'string',
                          'example' => '0.8',
                        ),
                        'TotalSave' => 
                        array (
                          'description' => '总节省金额',
                          'type' => 'string',
                          'example' => '20.00',
                        ),
                        'PoolValue' => 
                        array (
                          'description' => '承付款',
                          'type' => 'string',
                          'example' => '1.00',
                        ),
                        'PayMode' => 
                        array (
                          'description' => '付款类型：

- total 全预付
- half 半预付
- zero 0预付',
                          'type' => 'string',
                          'example' => 'total',
                        ),
                        'Tags' => 
                        array (
                          'description' => '标签信息列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '标签元素',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Key' => 
                              array (
                                'description' => '标签键',
                                'type' => 'string',
                                'example' => '标签1',
                              ),
                              'Value' => 
                              array (
                                'description' => '标签值',
                                'type' => 'string',
                                'example' => '标签1',
                              ),
                            ),
                          ),
                        ),
                        'DeductCycleType' => 
                        array (
                          'description' => '抵扣周期类型：
HOUR：小时
DAY：天
ONCE：一次性（总量递减）',
                          'type' => 'string',
                          'example' => 'HOUR',
                        ),
                        'RestPoolValue' => 
                        array (
                          'description' => '弹性版，按月，按天保底当前周期剩余金额',
                          'type' => 'string',
                          'example' => '100.0',
                        ),
                        'CommodityCode' => 
                        array (
                          'description' => '商品Code',
                          'type' => 'string',
                          'example' => 'savingplan_common_public_cn',
                        ),
                        'CurrentPoolValue' => 
                        array (
                          'description' => '按月周期型当前周期池额度',
                          'type' => 'string',
                          'example' => '100.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner does not belong to caller.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
          3 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'The specified API is not applicable for the user.',
          ),
          4 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'The user is not authorized for the specified API.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"61293E7A-3406-4447-8620-EC88B0AA66AD\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 100,\\n    \\"Items\\": [\\n      {\\n        \\"Status\\": \\"NORMAL\\",\\n        \\"Cycle\\": \\"1:Year\\",\\n        \\"StartTimestamp\\": 1663135741039,\\n        \\"SavingsType\\": \\"ECS\\",\\n        \\"Utilization\\": \\"1.0\\",\\n        \\"PrepayFee\\": \\"8760.00\\",\\n        \\"InstanceId\\": \\"spn-xxxxxxxx\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"EndTimestamp\\": 1663135741039,\\n        \\"EndTime\\": \\"2021-01-01 00:00:00\\",\\n        \\"StartTime\\": \\"2020-01-01 00:00:00\\",\\n        \\"AllocationStatus\\": \\"unallocated\\",\\n        \\"InstanceFamily\\": \\"ecs.g6\\",\\n        \\"Region\\": \\"cn-zhangjiakou-na62-a01\\",\\n        \\"LastBillTotalUsage\\": \\"100.0\\",\\n        \\"LastBillUtilization\\": \\"0.8\\",\\n        \\"TotalSave\\": \\"20.00\\",\\n        \\"PoolValue\\": \\"1.00\\",\\n        \\"PayMode\\": \\"total\\",\\n        \\"Tags\\": [\\n          {\\n            \\"Key\\": \\"标签1\\",\\n            \\"Value\\": \\"标签1\\"\\n          }\\n        ],\\n        \\"DeductCycleType\\": \\"HOUR\\",\\n        \\"RestPoolValue\\": \\"100.0\\",\\n        \\"CommodityCode\\": \\"savingplan_common_public_cn\\",\\n        \\"CurrentPoolValue\\": \\"100.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Successful</Message>\\n<RequestId>61293E7A-3406-4447-8620-EC88B0AA66AD</RequestId>\\n<Data>\\n    <TotalCount>100</TotalCount>\\n    <PageSize>20</PageSize>\\n    <PageNum>1</PageNum>\\n    <Items>\\n        <Status>NORMAL</Status>\\n        <AllocationStatus>unallocated</AllocationStatus>\\n        <EndTime>2021-01-01 00:00:00</EndTime>\\n        <InstanceFamily>ecs.g6</InstanceFamily>\\n        <InstanceId>spn-xxxxxxxx</InstanceId>\\n        <StartTime>2020-01-01 00:00:00</StartTime>\\n        <TotalSave>20.00</TotalSave>\\n        <PrepayFee>8760.00</PrepayFee>\\n        <PayMode>total</PayMode>\\n        <Utilization>1.0</Utilization>\\n        <Currency>CNY</Currency>\\n        <PoolValue>1.00</PoolValue>\\n        <Region>cn-zhangjiakou-na62-a01</Region>\\n        <SavingsType>ECS</SavingsType>\\n        <Tags>\\n            <Value>标签1</Value>\\n            <Key>标签1</Key>\\n        </Tags>\\n    </Items>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '节省计划实例查询',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySavingsPlansDeductLog' => 
    array (
      'summary' => '查询节省计划抵扣的明细数据',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询类型：

- spn 节省计划实例

- product 抵扣云产品实例',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'spn',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数量',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'Locale',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多语言选项，默认返回中文
ZH 中文
EN 英文',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ZH',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'spn-XXXXXXX',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询开始时间',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2022-01-01 00:00:00',
          ),
        ),
        6 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结束时间',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2022-01-05 00:00:00',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回值',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'PARAM_ERROR',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => '请校验入参正确性',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '61293E7A-3406-4447-8620-EC88B0AA66AD',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回元素',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '查询页数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Items' => 
                  array (
                    'description' => '抵扣明细列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '抵扣明细数据',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '结束时间',
                          'type' => 'string',
                          'example' => '2020-12-01 01:00:00',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'string',
                          'example' => '2020-12-01 00:00:00',
                        ),
                        'SavingsType' => 
                        array (
                          'description' => '节省计划类型：

- universal 通用型 
- ecs 计算型',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1906589291020438',
                        ),
                        'DiscountRate' => 
                        array (
                          'description' => '当前抵扣使用的折扣率',
                          'type' => 'string',
                          'example' => '0.069',
                        ),
                        'BillModule' => 
                        array (
                          'description' => '抵扣计费项',
                          'type' => 'string',
                          'example' => '云服务器配置',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '节省计划实例ID',
                          'type' => 'string',
                          'example' => 'spn-xxxxxxx',
                        ),
                        'DeductInstanceId' => 
                        array (
                          'description' => '被抵扣云产品实例ID',
                          'type' => 'string',
                          'example' => 'i-XXXXXXXXX',
                        ),
                        'DeductCommodity' => 
                        array (
                          'description' => '抵扣商品',
                          'type' => 'string',
                          'example' => '云服务器ECS-按量付费',
                        ),
                        'DeductRate' => 
                        array (
                          'description' => '抵扣率',
                          'type' => 'string',
                          'example' => '1.0',
                        ),
                        'DeductFee' => 
                        array (
                          'description' => '抵扣费用',
                          'type' => 'string',
                          'example' => '0.52',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => '所有者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1906589291020438',
                        ),
                        'BillingCycle' => 
                        array (
                          'title' => '账期',
                          'description' => '账期',
                          'type' => 'string',
                          'example' => '202312',
                        ),
                        'Region' => 
                        array (
                          'title' => '被抵扣实例地域',
                          'description' => '被抵扣实例地域',
                          'type' => 'string',
                          'example' => 'cn-shanghai-eu13-a01',
                        ),
                        'InstanceSpec' => 
                        array (
                          'title' => '被抵扣实例规格',
                          'description' => '被抵扣实例规格',
                          'type' => 'string',
                          'example' => 'ecs.g7.xlarge',
                        ),
                        'InstanceTypeFamily' => 
                        array (
                          'title' => '被抵扣实例规格族',
                          'description' => '被抵扣实例规格族',
                          'type' => 'string',
                          'example' => 'ecs.g7',
                        ),
                        'BillingOfficialPrice' => 
                        array (
                          'title' => '被抵扣账单的官网价',
                          'description' => '被抵扣账单的官网价',
                          'type' => 'string',
                          'example' => '375.35',
                        ),
                        'DeductedOfficialPrice' => 
                        array (
                          'title' => '被抵扣部分官网价',
                          'description' => '被抵扣部分官网价',
                          'type' => 'string',
                          'example' => '375.37',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner does not belong to caller.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
          3 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'The specified API is not applicable for the user.',
          ),
          4 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'The user is not authorized for the specified API.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"PARAM_ERROR\\",\\n  \\"Message\\": \\"请校验入参正确性\\",\\n  \\"RequestId\\": \\"61293E7A-3406-4447-8620-EC88B0AA66AD\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 20,\\n    \\"Items\\": [\\n      {\\n        \\"EndTime\\": \\"2020-12-01 01:00:00\\",\\n        \\"StartTime\\": \\"2020-12-01 00:00:00\\",\\n        \\"SavingsType\\": \\"ecs\\",\\n        \\"UserId\\": 1906589291020438,\\n        \\"DiscountRate\\": \\"0.069\\",\\n        \\"BillModule\\": \\"云服务器配置\\",\\n        \\"InstanceId\\": \\"spn-xxxxxxx\\",\\n        \\"DeductInstanceId\\": \\"i-XXXXXXXXX\\",\\n        \\"DeductCommodity\\": \\"云服务器ECS-按量付费\\",\\n        \\"DeductRate\\": \\"1.0\\",\\n        \\"DeductFee\\": \\"0.52\\",\\n        \\"OwnerId\\": 1906589291020438,\\n        \\"BillingCycle\\": \\"202312\\",\\n        \\"Region\\": \\"cn-shanghai-eu13-a01\\",\\n        \\"InstanceSpec\\": \\"ecs.g7.xlarge\\",\\n        \\"InstanceTypeFamily\\": \\"ecs.g7\\",\\n        \\"BillingOfficialPrice\\": \\"375.35\\",\\n        \\"DeductedOfficialPrice\\": \\"375.37\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '节省计划抵扣明细查询',
    ),
    'DescribeSavingsPlansUsageTotal' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的时间范围的开始。开始时间包含在时​​间范围内。时间格式 yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的时间范围的结束时间。不包含结束时间。如果不设置该参数，则结束时间为当前时间。时间格式 yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-02 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询使用情况摘要的时间粒度。有效值枚举：MONTH、DAY、HOUR。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'success',
              ),
              'Message' => 
              array (
                'description' => '接口调用信息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '接口调用是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的查询数据',
                'type' => 'object',
                'properties' => 
                array (
                  'PeriodCoverage' => 
                  array (
                    'description' => '每个时间端的使用率数据',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Percentage' => 
                        array (
                          'description' => '使用率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '1',
                        ),
                        'Period' => 
                        array (
                          'description' => '数据所属时间段，格式 yyyyMMddHH.',
                          'type' => 'string',
                          'example' => '2021041500',
                        ),
                      ),
                    ),
                  ),
                  'TotalUsage' => 
                  array (
                    'description' => '总使用率概览',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PostpaidCost' => 
                      array (
                        'description' => '后付费价格',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '200',
                      ),
                      'SavedCost' => 
                      array (
                        'description' => '节省的金额',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '100',
                      ),
                      'UsagePercentage' => 
                      array (
                        'description' => '总使用率',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                      'PoolValue' => 
                      array (
                        'description' => '节省计划的总量',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '100',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PeriodCoverage\\": [\\n      {\\n        \\"Percentage\\": 1,\\n        \\"Period\\": \\"2021041500\\"\\n      }\\n    ],\\n    \\"TotalUsage\\": {\\n      \\"PostpaidCost\\": 200,\\n      \\"SavedCost\\": 100,\\n      \\"UsagePercentage\\": 1,\\n      \\"PoolValue\\": 100\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSavingsPlansUsageTotalResponse>\\n    <Code>success</Code>\\n    <Message>Successful!</Message>\\n    <RequestId>79EE7556-0CFD-44EB-9CD6-B3B526E3A85F</RequestId>\\n    <Success>true</Success>\\n    <Data>\\n        <PeriodCoverage>\\n            <Percentage>1</Percentage>\\n            <Period>2021041500</Period>\\n        </PeriodCoverage>\\n        <TotalUsage>\\n            <PostpaidCost>200</PostpaidCost>\\n            <SavedCost>100</SavedCost>\\n            <UsagePercentage>1</UsagePercentage>\\n            <PoolValue>100</PoolValue>\\n        </TotalUsage>\\n    </Data>\\n</DescribeSavingsPlansUsageTotalResponse>","errorExample":""}]',
      'title' => '节省计划使用率汇总',
      'summary' => '节省计划使用率汇总查询',
    ),
    'DescribeSavingsPlansUsageDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss； 查询逻辑为包括该时间',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；查询逻辑为不包括该时间；为空表示截止到当前时间',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-02 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MONTH：月维度； DAY：天维度； HOUR：小时维度；',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页token，首页查询时传空，查询结果中返回下一页token地址。当结果token为空时表示全部查完。',
            'type' => 'string',
            'required' => false,
            'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '300',
          ),
        ),
        5 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '如果为空查询当前账号及其托管子账号的数据，可传入托管子账号ID，明确查询该子账号数据。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalCount' => 
                  array (
                    'description' => '总数据个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'NextToken' => 
                  array (
                    'description' => '下一页token',
                    'type' => 'string',
                    'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2ldhsSI6MTB9',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '当前状态

-1: 欠费、1: 生效',
                          'type' => 'string',
                          'example' => '-1',
                        ),
                        'Type' => 
                        array (
                          'description' => '类型：通用型、ECS计算型',
                          'type' => 'string',
                          'example' => '通用型',
                        ),
                        'UsagePercentage' => 
                        array (
                          'description' => '使用率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.9',
                        ),
                        'UserId' => 
                        array (
                          'description' => '账号ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123745698925000',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID',
                          'type' => 'string',
                          'example' => 'spn-a1fhs54c243hP22',
                        ),
                        'Currency' => 
                        array (
                          'description' => '币种',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'PostpaidCost' => 
                        array (
                          'description' => '按量标准费用',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '4.2',
                        ),
                        'DeductValue' => 
                        array (
                          'description' => '节省计划已支出，即已使用承付款',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '3.94',
                        ),
                        'StartPeriod' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'string',
                          'example' => '2021-08-01 00:00:00',
                        ),
                        'SavedCost' => 
                        array (
                          'description' => '节省净额',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.08',
                        ),
                        'PoolValue' => 
                        array (
                          'description' => '节省计划总金额',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '29.84',
                        ),
                        'UserName' => 
                        array (
                          'description' => '账号名称',
                          'type' => 'string',
                          'example' => 'test13@test.aliyun.com',
                        ),
                        'EndPeriod' => 
                        array (
                          'description' => '结束时间',
                          'type' => 'string',
                          'example' => '2021-08-09 00:00:00',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalCount\\": 1000,\\n    \\"NextToken\\": \\"eyJwYWdlTnVtIjoyLCJwYWdlU2ldhsSI6MTB9\\",\\n    \\"Items\\": [\\n      {\\n        \\"Status\\": \\"-1\\",\\n        \\"Type\\": \\"通用型\\",\\n        \\"UsagePercentage\\": 0.9,\\n        \\"UserId\\": 123745698925000,\\n        \\"InstanceId\\": \\"spn-a1fhs54c243hP22\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"PostpaidCost\\": 4.2,\\n        \\"DeductValue\\": 3.94,\\n        \\"StartPeriod\\": \\"2021-08-01 00:00:00\\",\\n        \\"SavedCost\\": 0.08,\\n        \\"PoolValue\\": 29.84,\\n        \\"UserName\\": \\"test13@test.aliyun.com\\",\\n        \\"EndPeriod\\": \\"2021-08-09 00:00:00\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""}]',
      'title' => '节省计划使用率明细',
      'summary' => '节省计划使用率明细查询',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSavingsPlansCoverageTotal' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss； 查询逻辑为包括该时间',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-07-15 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；查询逻辑为不包括该时间；为空表示截止到当前时间',
            'type' => 'string',
            'required' => false,
            'example' => '2021-07-20 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MONTH：月维度； DAY：天维度； HOUR：小时维度；',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PeriodCoverage' => 
                  array (
                    'description' => '时段覆盖率',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Percentage' => 
                        array (
                          'description' => '覆盖率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '1',
                        ),
                        'Period' => 
                        array (
                          'description' => '时段
yyyyMMddHH',
                          'type' => 'string',
                          'example' => '2021071500',
                        ),
                      ),
                    ),
                  ),
                  'TotalCoverage' => 
                  array (
                    'description' => '总覆盖率',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CoveragePercentage' => 
                      array (
                        'description' => '总覆盖率',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                      'DeductAmount' => 
                      array (
                        'description' => '总抵扣金额',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '100',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PeriodCoverage\\": [\\n      {\\n        \\"Percentage\\": 1,\\n        \\"Period\\": \\"2021071500\\"\\n      }\\n    ],\\n    \\"TotalCoverage\\": {\\n      \\"CoveragePercentage\\": 1,\\n      \\"DeductAmount\\": 100\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '节省计划覆盖率汇总',
      'summary' => '节省计划覆盖率汇总查询。',
    ),
    'DescribeSavingsPlansCoverageDetail' => 
    array (
      'summary' => '节省计划覆盖率明细查询。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的时间范围的开始。开始时间包含在时​​间范围内。时间格式 yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的时间范围的结束时间。不包含结束时间。如果不设置该参数，则结束时间为当前时间。时间格式 yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询使用情况摘要的时间粒度。有效值枚举：MONTH、DAY、HOUR。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页token，首页查询时传空，查询结果中返回下一页token地址。当结果token为空时表示全部查完。',
            'type' => 'string',
            'required' => false,
            'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果的最大个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'success',
              ),
              'Message' => 
              array (
                'description' => '接口调用信息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '接口调用是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的查询数据',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalCount' => 
                  array (
                    'description' => '总数据个数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'NextToken' => 
                  array (
                    'description' => '下一页的token',
                    'type' => 'string',
                    'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UserId' => 
                        array (
                          'description' => '用户id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1906589291020438',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => '被抵扣商品所有者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1906589291020438',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例id',
                          'type' => 'string',
                          'example' => 'i-bp1d9x623987rlj0dx4xx',
                        ),
                        'Currency' => 
                        array (
                          'description' => '币种',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '实例规格。',
                          'type' => 'string',
                          'example' => 'ecs.sn1ne.3xlarge',
                        ),
                        'PostpaidCost' => 
                        array (
                          'description' => '按量成本',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '200',
                        ),
                        'CoveragePercentage' => 
                        array (
                          'description' => '覆盖率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.9',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域',
                          'type' => 'string',
                          'example' => '华东1（杭州）',
                        ),
                        'DeductAmount' => 
                        array (
                          'description' => '抵扣金额',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '5.5',
                        ),
                        'StartPeriod' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'string',
                          'example' => '2023-04-01 00:00:00',
                        ),
                        'TotalAmount' => 
                        array (
                          'description' => '总支出',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '6.11',
                        ),
                        'UserName' => 
                        array (
                          'description' => '用户账号名',
                          'type' => 'string',
                          'example' => 'xxx@test.aliyunid.com',
                        ),
                        'EndPeriod' => 
                        array (
                          'description' => '结束时间',
                          'type' => 'string',
                          'example' => '2023-05-01 00:00:00',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalCount\\": 100,\\n    \\"NextToken\\": \\"eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9\\",\\n    \\"Items\\": [\\n      {\\n        \\"UserId\\": 1906589291020438,\\n        \\"OwnerId\\": 1906589291020438,\\n        \\"InstanceId\\": \\"i-bp1d9x623987rlj0dx4xx\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"InstanceSpec\\": \\"ecs.sn1ne.3xlarge\\",\\n        \\"PostpaidCost\\": 200,\\n        \\"CoveragePercentage\\": 0.9,\\n        \\"Region\\": \\"华东1（杭州）\\",\\n        \\"DeductAmount\\": 5.5,\\n        \\"StartPeriod\\": \\"2023-04-01 00:00:00\\",\\n        \\"TotalAmount\\": 6.11,\\n        \\"UserName\\": \\"xxx@test.aliyunid.com\\",\\n        \\"EndPeriod\\": \\"2023-05-01 00:00:00\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '节省计划覆盖率明细',
    ),
    'QuerySavingsPlansDiscount' => 
    array (
      'summary' => '查询节省计划折扣信息列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ModuleCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'moduleCode',
            'description' => '模块CODE',
            'type' => 'string',
            'required' => false,
            'example' => 'instance_type',
          ),
        ),
        1 => 
        array (
          'name' => 'PayMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'payMode',
            'description' => '付费类型:
total 全预付
half 半预付
zero 0预付',
            'type' => 'string',
            'required' => true,
            'example' => 'total',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'pageSize',
            'description' => '每页个数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'SpnType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'spnType',
            'description' => '节省计划类型:
ecs 计算型
universal 通用型',
            'type' => 'string',
            'required' => true,
            'example' => 'universal',
          ),
        ),
        4 => 
        array (
          'name' => 'Locale',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'locale',
            'description' => '多语言标识',
            'type' => 'string',
            'required' => false,
            'example' => 'ZH',
          ),
        ),
        5 => 
        array (
          'name' => 'Cycle',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'cycle',
            'description' => '查询周期',
            'type' => 'string',
            'required' => true,
            'example' => '1:Year',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'pageNum',
            'description' => '查询页数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'spec',
            'description' => '资源类型',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs.g6',
          ),
        ),
        8 => 
        array (
          'name' => 'CommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'commodityCode',
            'description' => '商品CODE',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        9 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region',
            'description' => '地域信息',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'result',
            'description' => '结果',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => 'message',
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'This API is not applicable for caller.',
              ),
              'RequestId' => 
              array (
                'title' => 'requestId',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'title' => 'hostId',
                    'description' => '请求IP',
                    'type' => 'string',
                    'example' => '100.104.180.109',
                  ),
                  'Items' => 
                  array (
                    'description' => '折扣信息列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '折扣明细',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CommodityName' => 
                        array (
                          'description' => '产品明细
',
                          'type' => 'string',
                          'example' => '云服务器ECS-按量付费',
                        ),
                        'ModuleName' => 
                        array (
                          'description' => '计价模块名称。',
                          'type' => 'string',
                          'example' => '实例',
                        ),
                        'SpnType' => 
                        array (
                          'description' => '节省计划类型',
                          'type' => 'string',
                          'example' => 'universal',
                        ),
                        'PayMode' => 
                        array (
                          'description' => '付款类型：

- total 全预付
- half 半预付
- zero 0预付',
                          'type' => 'string',
                          'example' => 'total',
                        ),
                        'Cycle' => 
                        array (
                          'description' => '查询周期',
                          'type' => 'string',
                          'example' => '1:Year',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域信息',
                          'type' => 'string',
                          'example' => '张家口',
                        ),
                        'RegionCode' => 
                        array (
                          'description' => '实例所在地域ID，您可以调用[DescribeDBInstanceAttribute](~~26231~~)查询。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Spec' => 
                        array (
                          'description' => '资源类型',
                          'type' => 'string',
                          'example' => 'ecs.g6',
                        ),
                        'DiscountRate' => 
                        array (
                          'description' => '官网折扣率',
                          'type' => 'string',
                          'example' => '0.85',
                        ),
                        'ContractDiscountRate' => 
                        array (
                          'description' => '合同折扣率',
                          'type' => 'string',
                          'example' => '0.85',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'title' => 'code',
                'description' => '错误码',
                'type' => 'string',
                'example' => 'PARAM_ERROR',
              ),
              'Success' => 
              array (
                'title' => 'success',
                'description' => '调用是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"This API is not applicable for caller.\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Data\\": {\\n    \\"HostId\\": \\"100.104.180.109\\",\\n    \\"Items\\": [\\n      {\\n        \\"CommodityName\\": \\"云服务器ECS-按量付费\\",\\n        \\"ModuleName\\": \\"实例\\",\\n        \\"SpnType\\": \\"universal\\",\\n        \\"PayMode\\": \\"total\\",\\n        \\"Cycle\\": \\"1:Year\\",\\n        \\"Region\\": \\"张家口\\",\\n        \\"RegionCode\\": \\"cn-hangzhou\\",\\n        \\"Spec\\": \\"ecs.g6\\",\\n        \\"DiscountRate\\": \\"0.85\\",\\n        \\"ContractDiscountRate\\": \\"0.85\\"\\n      }\\n    ]\\n  },\\n  \\"Code\\": \\"PARAM_ERROR\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询节省计划折扣明细',
    ),
    'CreateResellerUserQuota' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Amount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '金额，单位元[Quota开户必填]',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        1 => 
        array (
          'name' => 'Currency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '币种名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CNY：人民币。USD：美元。JPY：日元。',
          ),
        ),
        2 => 
        array (
          'name' => 'OutBizId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外部系统业务流水号',
            'type' => 'string',
            'required' => false,
            'example' => '7ed0bedc-056e-4a71-9249-4581615c028f',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见错误码。

',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Data' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter.',
          ),
          4 => 
          array (
            'errorCode' => '-303',
            'errorMessage' => 'Record is exists already.',
          ),
          5 => 
          array (
            'errorCode' => 'CreditInnerError',
            'errorMessage' => 'This interface has some error. Please try again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建配额账本和消费账本',
      'summary' => '创建用户 Quota 配额账本和 Quota 消费账本。',
    ),
    'SetResellerUserQuota' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Amount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '金额，单位元',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '750',
          ),
        ),
        1 => 
        array (
          'name' => 'Currency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '币种类型',
            'type' => 'string',
            'required' => false,
            'example' => ' CNY：人民币。 USD：美元',
          ),
        ),
        2 => 
        array (
          'name' => 'OutBizId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务id',
            'type' => 'string',
            'required' => false,
            'example' => 'OD2022040818295234777795624764689',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见错误码。

',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Data' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5B803CF-94D8-43AF-ADB3-D819AAD30E27',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'CreditInnerError',
            'errorMessage' => 'This interface has some error. Please try again.',
          ),
          1 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"F5B803CF-94D8-43AF-ADB3-D819AAD30E27\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '设置用户配额账本的Quota额度',
    ),
    'ChangeResellerConsumeAmount' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AdjustType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费金额调整方向 increase:增加,用户消费增加金额 decrease:减少,用户充值减少金额 [必填]',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'increase/decrease',
          ),
        ),
        1 => 
        array (
          'name' => 'Amount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调整金额,单位为元',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.00',
          ),
        ),
        2 => 
        array (
          'name' => 'Currency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '币种',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CNY',
          ),
        ),
        3 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务类型',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'quota_amount_adjust',
          ),
        ),
        4 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求来源，填写系统名称即可',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'system',
          ),
        ),
        5 => 
        array (
          'name' => 'OutBizId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外部业务主键ID，用于做幂等性校验使用',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1647396865',
          ),
        ),
        6 => 
        array (
          'name' => 'ExtendMap',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息扩展字段。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见错误码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'Data' => 
              array (
                'description' => '修改后对应的quota账本消费额度',
                'type' => 'string',
                'example' => '300.00',
              ),
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'D6E068C3-25BC-455A-85FE-45F0B22ECB1F',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter.',
          ),
          4 => 
          array (
            'errorCode' => '-1101',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"Data\\": \\"300.00\\",\\n  \\"RequestId\\": \\"D6E068C3-25BC-455A-85FE-45F0B22ECB1F\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '进行用户 Quota 消费抵扣',
    ),
    'QueryResellerAvailableQuota' => 
    array (
      'summary' => '查询用户（代付场景下设置消费配额）的当前可用配额余额信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ItemCodes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无需填写',
            'type' => 'string',
            'required' => false,
            'example' => '无',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见错误码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                ),
                'example' => 'Successful!',
              ),
              'Data' => 
              array (
                'description' => '用户可用配额余额信息',
                'type' => 'string',
                'example' => '300',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter.',
          ),
          4 => 
          array (
            'errorCode' => '-304',
            'errorMessage' => 'Record is not exists.',
          ),
          5 => 
          array (
            'errorCode' => 'CreditInnerError',
            'errorMessage' => 'This interface has some error. Please try again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Data\\": \\"300\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询当前可用配额余额信息',
    ),
    'SetResellerUserAlarmThreshold' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AlarmType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预警类型：quota_low_balance（代表Quota低额预警）',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'quota_low_balance',
          ),
        ),
        1 => 
        array (
          'name' => 'AlarmThresholds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该预警类型下的用户预警规则列表，不传代表没有预警阈值',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"denominator\\":100,\\"numerator\\":30,\\"thresholdType\\":1}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见错误码。

',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Data' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'CreditInnerError',
            'errorMessage' => 'This interface has some error. Please try again.',
          ),
          1 => 
          array (
            'errorCode' => 'UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '设置Quota额度低额预警规则',
    ),
    'QueryResellerUserAlarmThreshold' => 
    array (
      'summary' => '查询 Quota 额度低额预警规则',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AlarmType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '预警类型 [必填,quota_low_balance:Quota低额预警 month_consume_high:月消费高额预警',
            'description' => '预警类型[必填,quota_low_balance:Quota低额预警]',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'quota_low_balance' => 'quota_low_balance',
            ),
            'example' => 'quota_low_balance',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'ListResult<AlarmThresholdPop>',
            'description' => 'ListResult<AlarmThresholdPop>',
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回数据。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ThresholdType' => 
                    array (
                      'title' => '报警类型 0 数值 1比例 其他默认为 数值',
                      'description' => '报警类型：0（数值）、1（比例）',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'ThresholdAmount' => 
                    array (
                      'title' => '预警额度 为0有效',
                      'description' => '预警额度（预警类型为0时有效）',
                      'type' => 'string',
                      'example' => '100',
                    ),
                    'Numerator' => 
                    array (
                      'title' => '预警百分比_分子 为1有效',
                      'description' => '预警百分比，代表分子数值（预警类型为1时有效）',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'Denominator' => 
                    array (
                      'title' => '预警百分比_分母 为1有效',
                      'description' => '预警百分比，代表分母数值（预警类型为1时有效）',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                  ),
                ),
              ),
              'Count' => 
              array (
                'title' => '根据查询',
                'description' => '总数量',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'title' => '标识本次调用是否返回',
                'description' => '标识本次调用是否返回',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => '本次调用返回code，一般为错误代码',
                'description' => '本次调用返回code，一般为错误代码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '本次调用返回的消息，一般为错误消息',
                'description' => '本次调用返回的消息，一般为错误消息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'title' => '请求Id',
                'description' => '请求Id',
                'type' => 'string',
                'example' => 'EAE08A27-386C-579E-966D-8853EC3C5D0E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.	',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.	',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.	',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter	',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Data\\": [\\n    {\\n      \\"ThresholdType\\": 0,\\n      \\"ThresholdAmount\\": \\"100\\",\\n      \\"Numerator\\": 10,\\n      \\"Denominator\\": 100\\n    }\\n  ],\\n  \\"Count\\": 1,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"EAE08A27-386C-579E-966D-8853EC3C5D0E\\"\\n}","type":"json"}]',
      'title' => '查询Quota额度低额预警规则',
      'description' => '查询 Quota 额度低额预警规则',
    ),
    'SetResellerUserStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要设置的用户状态
取值：
    Freeze：用户冻结状态
    Thaw：用户解冻状态
    Trusteeship：用户托管状态
    TrusteeshipCancel：用户非托管状态',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Freeze',
          ),
        ),
        1 => 
        array (
          'name' => 'BusinessType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务类型
取值：
    FREEZE：用户冻结业务
    TRUSTEESHIP：用户托管业务',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'FREEZE',
          ),
        ),
        2 => 
        array (
          'name' => 'StopMode',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '停机模式
取值：
    0：普通停机
    1：立即停机',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见错误码。

',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Data' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5B803CF-94D8-43AF-ADB3-D819AAD30E27',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => '-116',
            'errorMessage' => 'Fail to modify Enduser status, Quota is less than 0.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'Missing the must parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'SYSTEM_ERROR',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
          5 => 
          array (
            'errorCode' => 'CreditInnerError',
            'errorMessage' => 'This interface has some error. Please try again.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => ' UndefinedError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"F5B803CF-94D8-43AF-ADB3-D819AAD30E27\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '设置托管、冻结状态',
    ),
    'CreateAgAccount' => 
    array (
      'summary' => '创建一个财务关联关系。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoginEmail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '登录邮箱',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'email',
          ),
        ),
        1 => 
        array (
          'name' => 'AccountAttr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新增账号属性，需要在控制台的顶部菜单栏，单击账号属性，跳转至**安全设置**页面查看。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'EnterpriseName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业名称（统一社会信用代码对应的企业名）。',
            'type' => 'string',
            'required' => false,
            'example' => '阿里云测试有限公司',
          ),
        ),
        3 => 
        array (
          'name' => 'FirstName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '一级分类名称。',
            'type' => 'string',
            'required' => false,
            'example' => '志成',
          ),
        ),
        4 => 
        array (
          'name' => 'LastName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户的姓。

长度：最大64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '吴',
          ),
        ),
        5 => 
        array (
          'name' => 'NationCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '国家码',
            'type' => 'string',
            'required' => false,
            'example' => 'CN',
          ),
        ),
        6 => 
        array (
          'name' => 'ProvinceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '省份名称（非必填）。',
            'type' => 'string',
            'required' => false,
            'example' => '北京',
          ),
        ),
        7 => 
        array (
          'name' => 'CityName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '城市名称（英文）。',
            'type' => 'string',
            'required' => false,
            'example' => '北京',
          ),
        ),
        8 => 
        array (
          'name' => 'Postcode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '邮编',
            'type' => 'string',
            'required' => false,
            'example' => '350000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'LOGIN_EMAIL_HAS_BEEN_USED',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'loginEmail=685741089H@chinaunicom.cn,has used',
              ),
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'EAE08A27-386C-579E-966D-8853EC3C5D0E',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AgRelationDto' => 
              array (
                'description' => 'MPK与PK的二级关系',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '关联关系类型',
                    'type' => 'string',
                    'example' => 'FINACE_CLOUD',
                  ),
                  'Pk' => 
                  array (
                    'description' => 'MPK下PK(UID)',
                    'type' => 'string',
                    'example' => '1728240534507590',
                  ),
                  'RamAdminRoleName' => 
                  array (
                    'description' => 'ram角色名称',
                    'type' => 'string',
                    'example' => 'admin-role',
                  ),
                  'Mpk' => 
                  array (
                    'description' => 'MPK（UID）',
                    'type' => 'string',
                    'example' => '1785287436011964',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"LOGIN_EMAIL_HAS_BEEN_USED\\",\\n  \\"Message\\": \\"loginEmail=685741089H@chinaunicom.cn,has used\\",\\n  \\"RequestId\\": \\"EAE08A27-386C-579E-966D-8853EC3C5D0E\\",\\n  \\"Success\\": true,\\n  \\"AgRelationDto\\": {\\n    \\"Type\\": \\"FINACE_CLOUD\\",\\n    \\"Pk\\": \\"1728240534507590\\",\\n    \\"RamAdminRoleName\\": \\"admin-role\\",\\n    \\"Mpk\\": \\"1785287436011964\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建平行账号',
      'description' => '创建一个财务云主子关系。',
    ),
    'GetCustomerAccountInfo' => 
    array (
      'summary' => '查询虚商下终端客户账号信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => '94017C56-1725-5DD9-AB41-B3BAE791D600',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Mpk' => 
                  array (
                    'description' => '父账号mpk',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1051360339779133',
                  ),
                  'LoginEmail' => 
                  array (
                    'description' => '终端客户的邮箱地址',
                    'type' => 'string',
                    'example' => 'xxxx@aliyun.com',
                  ),
                  'HostingStatus' => 
                  array (
                    'description' => '托管状态.信控提供，实例是否托管由阿里云管理，如果托管，阿里云会负责欠费停机操作

1、用户冻结业务-"FREEZE",

2、用户托管业务-"TRUSTEESHIP"',
                    'type' => 'string',
                    'example' => 'FREEZE',
                  ),
                  'AccountType' => 
                  array (
                    'description' => '账号类型 1 为企业， 0 个人',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'CreditLimitStatus' => 
                  array (
                    'description' => 'enduser业务类型

1、用户冻结状态-"Freeze"

2、用户解冻状态-"Thaw"
    
3、用户托管状态-"Trusteeship"
    
4、用户非托管状态-"TrusteeshipCancel"',
                    'type' => 'string',
                    'example' => 'Freeze',
                  ),
                  'IsCertified' => 
                  array (
                    'description' => '实名认证状态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'VnoNoDataError',
            'errorMessage' => 'There is no data by this request.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"94017C56-1725-5DD9-AB41-B3BAE791D600\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Mpk\\": 1051360339779133,\\n    \\"LoginEmail\\": \\"xxxx@aliyun.com\\",\\n    \\"HostingStatus\\": \\"FREEZE\\",\\n    \\"AccountType\\": \\"1\\",\\n    \\"CreditLimitStatus\\": \\"Freeze\\",\\n    \\"IsCertified\\": true\\n  }\\n}","type":"json"}]',
      'title' => '查找虚商客户账号信息',
    ),
    'GetCustomerList' => 
    array (
      'summary' => '查询虚商下的终端客户uid列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'UidList' => 
                  array (
                    'description' => '用户uid列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '用户uid列表。',
                      'type' => 'string',
                      'example' => '6210322125051645960',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'VnoNoDataError',
            'errorMessage' => 'There is no data by this request.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFoundRamAction',
            'errorMessage' => 'Not found ramAction for apiActon: GetCustomerList',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"UidList\\": [\\n      \\"6210322125051645960\\"\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询子账号列表',
      'description' => '系统会根据请求的aksk查询其下的关联的终端客户uid列表',
    ),
    'QueryResourcePackageInstances' => 
    array (
      'summary' => '查询用户某个资源包的实例，限定支持查询失效时间一年以内的资源包。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'ExpiryTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '失效起始时间。日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02T12:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'ExpiryTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '失效结束时间。日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02T13:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数，默认值20，最大300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'IncludePartner',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含合作伙伴。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'PageSize' => 
              array (
                'description' => '每页条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'Total' => 
              array (
                'description' => '总记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'Page' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'string',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'string',
                    'example' => '12',
                  ),
                  'HostId' => 
                  array (
                    'description' => '主机ID。',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                  'Instances' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Instance' => 
                      array (
                        'description' => '实例详情数组。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ExpiryTime' => 
                            array (
                              'description' => '失效时间。',
                              'type' => 'string',
                              'example' => '2019-03-12T16:00:00Z',
                            ),
                            'Status' => 
                            array (
                              'description' => '资源包状态，取值：
- Available（有效）。
- Expired（失效）。',
                              'type' => 'string',
                              'example' => 'Available',
                            ),
                            'Remark' => 
                            array (
                              'description' => '资源包商品的备注说明，只提供中文说明',
                              'type' => 'string',
                              'example' => '标准存储包(华东2)',
                            ),
                            'RemainingAmountUnit' => 
                            array (
                              'description' => '剩余量单位。',
                              'type' => 'string',
                              'example' => 'GB',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => 'OSSBAG-cn-v0h1s4hma01',
                            ),
                            'PackageType' => 
                            array (
                              'description' => '资源包类型。',
                              'type' => 'string',
                              'example' => 'FPT_ossbag_absolute_Storage_sh',
                            ),
                            'EffectiveTime' => 
                            array (
                              'description' => '生效时间。',
                              'type' => 'string',
                              'example' => '2018-09-12T09:51:56Z',
                            ),
                            'Region' => 
                            array (
                              'description' => '地域。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou',
                            ),
                            'TotalAmount' => 
                            array (
                              'description' => '总量。',
                              'type' => 'string',
                              'example' => '40.000',
                            ),
                            'DeductType' => 
                            array (
                              'description' => '扣费类型：Absolute。',
                              'type' => 'string',
                              'example' => 'Absolute',
                            ),
                            'TotalAmountUnit' => 
                            array (
                              'description' => '总量单位。',
                              'type' => 'string',
                              'example' => 'GB',
                            ),
                            'RemainingAmount' => 
                            array (
                              'description' => '剩余量。',
                              'type' => 'string',
                              'example' => '40.000',
                            ),
                            'ApplicableProducts' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Product' => 
                                array (
                                  'description' => '适用产品列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '资源包适用产品。',
                                    'type' => 'string',
                                    'example' => '{"Product": ["oss"] }',
                                  ),
                                ),
                              ),
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品code',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'OwnerIdInvalid',
            'errorMessage' => 'Parameter ownerId is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'OwnerIdMissing',
            'errorMessage' => 'Paramter ownerId is missing.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"PageSize\\": 20,\\n  \\"Total\\": 12,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"PageNum\\": \\"1\\",\\n    \\"PageSize\\": \\"20\\",\\n    \\"TotalCount\\": \\"12\\",\\n    \\"HostId\\": \\"cn\\",\\n    \\"Instances\\": {\\n      \\"Instance\\": [\\n        {\\n          \\"ExpiryTime\\": \\"2019-03-12T16:00:00Z\\",\\n          \\"Status\\": \\"Available\\",\\n          \\"Remark\\": \\"标准存储包(华东2)\\",\\n          \\"RemainingAmountUnit\\": \\"GB\\",\\n          \\"InstanceId\\": \\"OSSBAG-cn-v0h1s4hma01\\",\\n          \\"PackageType\\": \\"FPT_ossbag_absolute_Storage_sh\\",\\n          \\"EffectiveTime\\": \\"2018-09-12T09:51:56Z\\",\\n          \\"Region\\": \\"cn-hangzhou\\",\\n          \\"TotalAmount\\": \\"40.000\\",\\n          \\"DeductType\\": \\"Absolute\\",\\n          \\"TotalAmountUnit\\": \\"GB\\",\\n          \\"RemainingAmount\\": \\"40.000\\",\\n          \\"ApplicableProducts\\": {\\n            \\"Product\\": [\\n              \\"{\\\\\\"Product\\\\\\": [\\\\\\"oss\\\\\\"] }\\"\\n            ]\\n          },\\n          \\"CommodityCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryResourcePackageInstancesResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <TotalCount>1</TotalCount>\\n        <PageSize>20</PageSize>\\n        <Instances>\\n            <Instance>\\n                <RemainingAmountUnit>GB</RemainingAmountUnit>\\n                <ApplicableProducts>\\n                    <Product>oss</Product>\\n                </ApplicableProducts>\\n                <InstanceId>OSSBAG-cn-v0h1s4hma018</InstanceId>\\n                <DeductType>Absolute</DeductType>\\n                <RemainingAmount>40.000</RemainingAmount>\\n                <Status>Available</Status>\\n                <Region>cn-shanghai</Region>\\n                <TotalAmountUnit>GB</TotalAmountUnit>\\n                <PackageType>FPT_ossbag_absolute_Storage_sh</PackageType>\\n                <TotalAmount>40.000</TotalAmount>\\n                <Remark>标准存储包(华东2)</Remark>\\n                <EffectiveTime>2018-09-12T09:51:56Z</EffectiveTime>\\n                <ExpiryTime>2019-03-12T16:00:00Z</ExpiryTime>\\n            </Instance>\\n        </Instances>\\n        <HostId>cn</HostId>\\n        <PageNum>1</PageNum>\\n    </Data>\\n</QueryResourcePackageInstancesResponse>","errorExample":""}]',
      'title' => '查询资源包实例服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDPUtilizationDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '筛选查询的实例ID，为空时返回所有的使用的实例明细。',
            'type' => 'string',
            'required' => false,
            'example' => 'oss-123123',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例对应的规格。',
            'type' => 'string',
            'required' => false,
            'example' => 'Instancetyp',
          ),
        ),
        2 => 
        array (
          'name' => 'CommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '商品code，如ecsRi、scu_bag等。如果填写该字段，则prodCode字段不生效',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ecsRi',
          ),
        ),
        3 => 
        array (
          'name' => 'DeductedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被抵扣实例的ID，为空时返回所有实例的明细数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'oss-123123',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，格式：YYYY-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-05-23 12:00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，格式：YYYY-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-05-23 12:00:00',
          ),
        ),
        6 => 
        array (
          'name' => 'LastToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询从LastToken之后开始返回。第一次查询填null，之后的从结果NextToken获取',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESF***zNTAw',
          ),
        ),
        7 => 
        array (
          'name' => 'Limit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每次查询条数，默认为20，最大值为300。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'IncludeShare',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含财务云子账号的资源包用量
- true：包含
- false：不包含',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'ProdCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品code，如：ecs',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'oss',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DF58589C-A06C-4224-8615-7797E6474FA3',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '下次请求查询开始标识，填充到request的LastToken字段中。如果返回为null，则标识查询结束',
                    'type' => 'string',
                    'example' => 'CAESF***zNTAw',
                  ),
                  'DetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DetailList' => 
                      array (
                        'description' => '明细数组。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DeductedInstanceId' => 
                            array (
                              'description' => '被抵扣实例ID。',
                              'type' => 'string',
                              'example' => 'oss-123123',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '预留实例ID。',
                              'type' => 'string',
                              'example' => 'oss-123123',
                            ),
                            'DeductHours' => 
                            array (
                              'description' => '抵扣系数。 仅当CommodityCode为ecsRi有效。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '24',
                            ),
                            'ShareUid' => 
                            array (
                              'description' => '抵扣实例所属uid
- 共享抵扣：抵扣实例所属uid
- 非共享抵扣：等于uid字段',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1111111111',
                            ),
                            'DeductDate' => 
                            array (
                              'description' => '抵扣日期。',
                              'type' => 'string',
                              'example' => '2019/5/23 12:00',
                            ),
                            'InstanceSpec' => 
                            array (
                              'description' => '被抵扣实例的规格。',
                              'type' => 'string',
                              'example' => 'rds.mysql.s3.large',
                            ),
                            'DeductedCommodityCode' => 
                            array (
                              'description' => '被抵扣商品code。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'DeductedProductDetail' => 
                            array (
                              'description' => '被抵商品（产品明细）名称。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'DeductMeasure' => 
                            array (
                              'description' => '原始计量量
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '1',
                            ),
                            'Region' => 
                            array (
                              'description' => '计量中region,可以是空',
                              'type' => 'string',
                              'example' => 'cn-hangzhou ',
                            ),
                            'DeductQuantity' => 
                            array (
                              'description' => '实际抵扣对应按量实例的算力或容量。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '1',
                            ),
                            'DeductFactorTotal' => 
                            array (
                              'description' => 'RI或SCU在该时间段的算力或容量总量。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '1',
                            ),
                            'ResCode' => 
                            array (
                              'description' => '计费项',
                              'type' => 'string',
                              'example' => 'PutRequest',
                            ),
                            'Uid' => 
                            array (
                              'description' => '被抵扣实例的uid',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1111111111',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner does not belong to caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
          4 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'The specified API is not applicable for the user.',
          ),
          5 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'The user is not authorized for the specified API.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidInstanceSpec',
            'errorMessage' => 'The specified Instance specification is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidQueryTime',
            'errorMessage' => 'The specified start time and end time are incorrect',
          ),
          8 => 
          array (
            'errorCode' => 'CommodityNotSupported',
            'errorMessage' => 'The specified commodity is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"DF58589C-A06C-4224-8615-7797E6474FA3\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESF***zNTAw\\",\\n    \\"DetailList\\": {\\n      \\"DetailList\\": [\\n        {\\n          \\"DeductedInstanceId\\": \\"oss-123123\\",\\n          \\"InstanceId\\": \\"oss-123123\\",\\n          \\"DeductHours\\": 24,\\n          \\"ShareUid\\": 1111111111,\\n          \\"DeductDate\\": \\"2019/5/23 12:00\\",\\n          \\"InstanceSpec\\": \\"rds.mysql.s3.large\\",\\n          \\"DeductedCommodityCode\\": \\"rds\\",\\n          \\"DeductedProductDetail\\": \\"云数据库RDS\\",\\n          \\"DeductMeasure\\": 1,\\n          \\"Region\\": \\"cn-hangzhou \\",\\n          \\"DeductQuantity\\": 1,\\n          \\"DeductFactorTotal\\": 1,\\n          \\"ResCode\\": \\"PutRequest\\",\\n          \\"Uid\\": 1111111111\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Successful！</Message>\\n<RequestId>DF58589C-A06C-4224-8615-7797E6474FA3</RequestId>\\n<Data>\\n    <TotalCount/>\\n    <PageSize/>\\n    <PageNum/>\\n    <DetailList>\\n        <DetailList>\\n            <ResCode/>\\n            <Uid/>\\n            <DeductDate/>\\n            <InstanceSpec/>\\n            <DeductMeasure/>\\n            <InstanceId/>\\n            <DeductFactorTotal/>\\n            <DeductedProductDetail/>\\n            <Region/>\\n            <DeductedCommodityCode/>\\n            <DeductedInstanceId/>\\n            <DeductHours/>\\n            <DeductQuantity/>\\n        </DetailList>\\n    </DetailList>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '资源包用量查询',
      'summary' => '查询资源包(包含RI、scu)的使用量情况。',
      'description' => '限制：
- 仅支持查询最近1年的用量记录',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryRIUtilizationDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RIInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '筛选查询的预留实例ID，为空时返回所有的使用的预留实例明细。',
            'type' => 'string',
            'required' => false,
            'example' => 'dsudfgdsjh',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预留实例对应的规格。',
            'type' => 'string',
            'required' => false,
            'example' => 'Instancetyp',
          ),
        ),
        2 => 
        array (
          'name' => 'RICommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取值：
- ecsRi（默认值）：ECS的预留实例。
- scu_bag：存储容量单位包。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecsRi',
          ),
        ),
        3 => 
        array (
          'name' => 'DeductedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被抵扣实例的ID，为空时返回所有实例的明细数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'jsdgfsdhgsdjh',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，格式：YYYY-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-05-23 12:00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，格式：YYYY-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-05-23 12:00:00',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数，默认为20，最大值为300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DF58589C-A06C-4224-8615-7797E6474FA3',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                  'DetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DetailList' => 
                      array (
                        'description' => '明细数组。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DeductedCommodityCode' => 
                            array (
                              'description' => '被抵扣商品code。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'DeductedProductDetail' => 
                            array (
                              'description' => '被抵商品（产品明细）名称。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'DeductedInstanceId' => 
                            array (
                              'description' => '被抵扣实例ID。',
                              'type' => 'string',
                              'example' => 'safdffghfgh',
                            ),
                            'DeductFactorTotal' => 
                            array (
                              'description' => 'RI或SCU在该时间段的算力或容量总量。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '1',
                            ),
                            'DeductQuantity' => 
                            array (
                              'description' => '实际抵扣对应按量实例的算力或容量。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '1',
                            ),
                            'DeductHours' => 
                            array (
                              'description' => '抵扣系数。 仅当RICommodityCode为ecsRi有效。',
                              'type' => 'string',
                              'example' => '24',
                            ),
                            'DeductDate' => 
                            array (
                              'description' => '抵扣日期。',
                              'type' => 'string',
                              'example' => '2019-05-23 12:00:00',
                            ),
                            'RIInstanceId' => 
                            array (
                              'description' => '预留实例ID。',
                              'type' => 'string',
                              'example' => '324253645',
                            ),
                            'InstanceSpec' => 
                            array (
                              'description' => '被抵扣实例的规格。',
                              'type' => 'string',
                              'example' => 'rds.mysql.s3.large',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidQueryTime',
            'errorMessage' => 'The specified start time and end time are incorrect',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidInstanceSpec',
            'errorMessage' => 'The specified Instance specification is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'CommodityNotSupported',
            'errorMessage' => 'The specified RI commodity is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"DF58589C-A06C-4224-8615-7797E6474FA3\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 0,\\n    \\"DetailList\\": {\\n      \\"DetailList\\": [\\n        {\\n          \\"DeductedCommodityCode\\": \\"rds\\",\\n          \\"DeductedProductDetail\\": \\"云数据库RDS\\",\\n          \\"DeductedInstanceId\\": \\"safdffghfgh\\",\\n          \\"DeductFactorTotal\\": 1,\\n          \\"DeductQuantity\\": 1,\\n          \\"DeductHours\\": \\"24\\",\\n          \\"DeductDate\\": \\"2019-05-23 12:00:00\\",\\n          \\"RIInstanceId\\": \\"324253645\\",\\n          \\"InstanceSpec\\": \\"rds.mysql.s3.large\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryRIUtilizationDetailResponse>\\n    <RequestId>DF58589C-A06C-4224-8615-7797E6474FA3</RequestId>\\n    <Message>Successful!</Message>\\n    <Data>\\n        <TotalCount>0</TotalCount>\\n        <PageNum>1</PageNum>\\n        <PageSize>20</PageSize>\\n        <DetailList>\\n        </DetailList>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryRIUtilizationDetailResponse>","errorExample":""}]',
      'title' => '预留实例用量查询',
      'summary' => '查询RI的使用量情况。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeResourceUsageTotal' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss； 查询逻辑为包括该时间，查询对应的时间为开始时间',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；查询逻辑为不包括该时间；为空表示截止到当前时间，查询对应的时间为结束时间',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-02 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MONTH：月维度； DAY：天维度； HOUR：小时维度',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'MONTH' => 'MONTH',
              'HOUR' => 'HOUR',
              'DAY' => 'DAY',
            ),
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号；只支持传入1个账号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包类型，枚举值包括RI/SCU；RI：预留实例； SCU：存储容量单位包',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'SCU' => 'SCU',
              'RI' => 'RI',
            ),
            'example' => 'RI',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '（根节点）',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求id',
                'type' => 'string',
                'example' => '364C7C81-5E5E-51A0-B738-1969D2671B05',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'object',
                'properties' => 
                array (
                  'PeriodCoverage' => 
                  array (
                    'description' => '时段使用率',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '（时段使用率）',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UsagePercentage' => 
                        array (
                          'description' => '使用率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'Period' => 
                        array (
                          'description' => '时段',
                          'type' => 'string',
                          'example' => '2021071500',
                        ),
                      ),
                    ),
                  ),
                  'TotalUsage' => 
                  array (
                    'description' => '总使用率',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PostpaidCost' => 
                      array (
                        'description' => '总按量实例成本',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '200',
                      ),
                      'SavedCost' => 
                      array (
                        'description' => '总节省金额',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '100',
                      ),
                      'UsagePercentage' => 
                      array (
                        'description' => '总使用率',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                      'PotentialSavedCost' => 
                      array (
                        'description' => '潜在总节省金额',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '100',
                      ),
                      'ReservationCost' => 
                      array (
                        'description' => '总资源购买费用',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '10',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"364C7C81-5E5E-51A0-B738-1969D2671B05\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PeriodCoverage\\": [\\n      {\\n        \\"UsagePercentage\\": 0.1,\\n        \\"Period\\": \\"2021071500\\"\\n      }\\n    ],\\n    \\"TotalUsage\\": {\\n      \\"PostpaidCost\\": 200,\\n      \\"SavedCost\\": 100,\\n      \\"UsagePercentage\\": 1,\\n      \\"PotentialSavedCost\\": 100,\\n      \\"ReservationCost\\": 10\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeResourceUsageTotalResponse>\\n    <RequestId>BD1DC347-905C-1D6E-8BA1-D724266842D2</RequestId>\\n    <Message>Successful!</Message>\\n    <Data>\\n        <TotalUsage>\\n            <ReservationCost>0</ReservationCost>\\n            <PostpaidCost>0</PostpaidCost>\\n            <PotentialSavedCost>0</PotentialSavedCost>\\n            <UsagePercentage>0</UsagePercentage>\\n        </TotalUsage>\\n        <PeriodCoverage>\\n            <Period>2021050100</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050200</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050300</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050400</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050500</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050600</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050700</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050800</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021050900</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n        <PeriodCoverage>\\n            <Period>2021051000</Period>\\n            <UsagePercentage>0</UsagePercentage>\\n        </PeriodCoverage>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</DescribeResourceUsageTotalResponse>","errorExample":""}]',
      'title' => '资源使用率汇总',
      'summary' => '预留实例、SCU使用率汇总查询。',
    ),
    'DescribeResourceUsageDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss； 查询逻辑为包括该时间
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；查询逻辑为不包括该时间；为空表示截止到当前时间
',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-02 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MONTH：月维度； DAY：天维度； HOUR：小时维度；
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页token，首页查询时传空，查询结果中返回下一页token地址。当结果token为空时表示全部查完。
',
            'type' => 'string',
            'required' => false,
            'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '200',
          ),
        ),
        5 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '如果为空查询当前账号及其托管子账号的数据，可传入托管子账号ID，明确查询该子账号数据。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'RI：预留实例；SCU：存储容量单位包
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RI',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码
',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息
',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识
',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据
',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '下一页的token
',
                    'type' => 'string',
                    'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总条数
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10000',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本页条数
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据条目',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '状态',
                          'type' => 'string',
                          'example' => 'Valid',
                        ),
                        'UsagePercentage' => 
                        array (
                          'description' => '使用率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.5',
                        ),
                        'ResourceInstanceId' => 
                        array (
                          'description' => '资源实例ID
',
                          'type' => 'string',
                          'example' => 'ecsri-bp147nnfz21225k9mpix00',
                        ),
                        'TotalQuantity' => 
                        array (
                          'description' => '资源总量
',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '2',
                        ),
                        'ReservationCost' => 
                        array (
                          'description' => '资源购买费用',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'RegionNo' => 
                        array (
                          'description' => '地域Code',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-dg-a01',
                        ),
                        'UserId' => 
                        array (
                          'description' => '账号ID',
                          'type' => 'string',
                          'example' => '123745698925000',
                        ),
                        'StatusName' => 
                        array (
                          'description' => '状态名称',
                          'type' => 'string',
                          'example' => '生效',
                        ),
                        'CapacityUnit' => 
                        array (
                          'description' => '抵扣单位',
                          'type' => 'string',
                          'example' => '算力*小时',
                        ),
                        'PotentialSavedCost' => 
                        array (
                          'description' => '潜在节省净值',
                          'type' => 'string',
                          'example' => '0.13',
                        ),
                        'Currency' => 
                        array (
                          'description' => '币种',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'ZoneName' => 
                        array (
                          'description' => '可用区Code',
                          'type' => 'string',
                          'example' => '杭州 可用区I',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '规格
',
                          'type' => 'string',
                          'example' => 'ecs.t5-lc2m1.nano',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '结束时间',
                          'type' => 'string',
                          'example' => '2021-04-01 01:00:00',
                        ),
                        'PostpaidCost' => 
                        array (
                          'description' => '按量成本等效值',
                          'type' => 'string',
                          'example' => '0.06',
                        ),
                        'ImageType' => 
                        array (
                          'description' => '操作系统
',
                          'type' => 'string',
                          'example' => 'linux',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'string',
                          'example' => '2021-04-01 00:00:00',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域
',
                          'type' => 'string',
                          'example' => '华东1（杭州）',
                        ),
                        'DeductQuantity' => 
                        array (
                          'description' => '抵扣量
',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '1',
                        ),
                        'SavedCost' => 
                        array (
                          'description' => '节省净值',
                          'type' => 'string',
                          'example' => '0.06',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-i',
                        ),
                        'UserName' => 
                        array (
                          'description' => '账号名称',
                          'type' => 'string',
                          'example' => 'test@aliyun.com',
                        ),
                        'Quantity' => 
                        array (
                          'description' => '资源数量
',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9\\",\\n    \\"TotalCount\\": 10000,\\n    \\"MaxResults\\": 200,\\n    \\"Items\\": [\\n      {\\n        \\"Status\\": \\"Valid\\",\\n        \\"UsagePercentage\\": 0.5,\\n        \\"ResourceInstanceId\\": \\"ecsri-bp147nnfz21225k9mpix00\\",\\n        \\"TotalQuantity\\": 2,\\n        \\"ReservationCost\\": \\"0\\",\\n        \\"RegionNo\\": \\"cn-hangzhou-dg-a01\\",\\n        \\"UserId\\": \\"123745698925000\\",\\n        \\"StatusName\\": \\"生效\\",\\n        \\"CapacityUnit\\": \\"算力*小时\\",\\n        \\"PotentialSavedCost\\": \\"0.13\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"ZoneName\\": \\"杭州 可用区I\\",\\n        \\"InstanceSpec\\": \\"ecs.t5-lc2m1.nano\\",\\n        \\"EndTime\\": \\"2021-04-01 01:00:00\\",\\n        \\"PostpaidCost\\": \\"0.06\\",\\n        \\"ImageType\\": \\"linux\\",\\n        \\"StartTime\\": \\"2021-04-01 00:00:00\\",\\n        \\"Region\\": \\"华东1（杭州）\\",\\n        \\"DeductQuantity\\": 1,\\n        \\"SavedCost\\": \\"0.06\\",\\n        \\"Zone\\": \\"cn-hangzhou-i\\",\\n        \\"UserName\\": \\"test@aliyun.com\\",\\n        \\"Quantity\\": 2\\n      }\\n    ]\\n  }\\n}","errorExample":""}]',
      'title' => '资源使用率明细',
      'summary' => '预留实例、SCU使用率明细查询。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeResourceCoverageTotal' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss； 查询逻辑为包括该时间
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；查询逻辑为不包括该时间；为空表示截止到当前时间
',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-02 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MONTH：月维度； DAY：天维度； HOUR：小时维度；',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'RI：预留实例；SCU：存储容量单位包
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RI',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码
',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息
',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识
',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据
',
                'type' => 'object',
                'properties' => 
                array (
                  'PeriodCoverage' => 
                  array (
                    'description' => '时段覆盖率',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CoveragePercentage' => 
                        array (
                          'description' => '覆盖率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'Period' => 
                        array (
                          'description' => '时段
yyyyMMddHH',
                          'type' => 'string',
                          'example' => '2020110100',
                        ),
                      ),
                    ),
                  ),
                  'TotalCoverage' => 
                  array (
                    'description' => '总覆盖率',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CapacityUnit' => 
                      array (
                        'description' => '抵扣单位',
                        'type' => 'string',
                        'example' => '算力*小时',
                      ),
                      'DeductQuantity' => 
                      array (
                        'description' => '总抵扣量',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                      'CoveragePercentage' => 
                      array (
                        'description' => '总覆盖率',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                      'TotalQuantity' => 
                      array (
                        'description' => '总使用量',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PeriodCoverage\\": [\\n      {\\n        \\"CoveragePercentage\\": 0.1,\\n        \\"Period\\": \\"2020110100\\"\\n      }\\n    ],\\n    \\"TotalCoverage\\": {\\n      \\"CapacityUnit\\": \\"算力*小时\\",\\n      \\"DeductQuantity\\": 1,\\n      \\"CoveragePercentage\\": 1,\\n      \\"TotalQuantity\\": 1\\n    }\\n  }\\n}","errorExample":""}]',
      'title' => '资源覆盖率汇总',
      'summary' => '预留实例、SCU覆盖率汇总查询。',
      'description' => '与费用中心“资源实例管理”菜单中的“覆盖率概况”的汇总数据一致。
当前支持RI和SCU两种资源的覆盖率查询。
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeResourceCoverageDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；
查询逻辑为包括该时间
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-01-01 00:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '格式：yyyy-MM-dd HH:mm:ss；查询逻辑为不包括该时间；为空表示截止到当前时间',
            'type' => 'string',
            'required' => false,
            'example' => '2021-01-02 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MONTH：月维度；
DAY：天维度；
HOUR：小时维度；',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页token，首页查询时传空，查询结果中返回下一页token地址。当结果token为空时表示全部查完。',
            'type' => 'string',
            'required' => false,
            'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '200',
          ),
        ),
        5 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123745698925000',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'RI：预留实例；SCU：存储容量单位包',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RI',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '下一页的token',
                    'type' => 'string',
                    'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总条数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10000',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本页条数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据项',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CommodityCode' => 
                        array (
                          'description' => '产品明细Code',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称',
                          'type' => 'string',
                          'example' => '云服务器 ECS',
                        ),
                        'TotalQuantity' => 
                        array (
                          'description' => '总用量',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '1',
                        ),
                        'RegionNo' => 
                        array (
                          'description' => '地域Code',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-dg-a01',
                        ),
                        'UserId' => 
                        array (
                          'description' => '账号ID',
                          'type' => 'string',
                          'example' => '123745698925000',
                        ),
                        'CommodityName' => 
                        array (
                          'description' => '产品明细
',
                          'type' => 'string',
                          'example' => '云服务器ECS-按量付费',
                        ),
                        'CapacityUnit' => 
                        array (
                          'description' => '抵扣单位',
                          'type' => 'string',
                          'example' => '算力*小时',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '按量实例ID
',
                          'type' => 'string',
                          'example' => 'i-bp1d9x623987rlj0dx4xx',
                        ),
                        'Currency' => 
                        array (
                          'description' => '币种',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'ZoneName' => 
                        array (
                          'description' => '可用区',
                          'type' => 'string',
                          'example' => '杭州 可用区I',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '规格
',
                          'type' => 'string',
                          'example' => 'ecs.t5-lc2m1.nano',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '结束时间',
                          'type' => 'string',
                          'example' => '2021-04-01 01:00:00',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间',
                          'type' => 'string',
                          'example' => '2021-04-01 00:00:00',
                        ),
                        'PaymentAmount' => 
                        array (
                          'description' => '账单金额',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'CoveragePercentage' => 
                        array (
                          'description' => '覆盖率',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '1',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域
',
                          'type' => 'string',
                          'example' => '华东1（杭州）',
                        ),
                        'DeductQuantity' => 
                        array (
                          'description' => '抵扣量
',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '1',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区Code',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-i',
                        ),
                        'UserName' => 
                        array (
                          'description' => '账号名称',
                          'type' => 'string',
                          'example' => 'test13@test.aliyun.com',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品Code',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MTB9\\",\\n    \\"TotalCount\\": 10000,\\n    \\"MaxResults\\": 200,\\n    \\"Items\\": [\\n      {\\n        \\"CommodityCode\\": \\"ecs\\",\\n        \\"ProductName\\": \\"云服务器 ECS\\",\\n        \\"TotalQuantity\\": 1,\\n        \\"RegionNo\\": \\"cn-hangzhou-dg-a01\\",\\n        \\"UserId\\": \\"123745698925000\\",\\n        \\"CommodityName\\": \\"云服务器ECS-按量付费\\",\\n        \\"CapacityUnit\\": \\"算力*小时\\",\\n        \\"InstanceId\\": \\"i-bp1d9x623987rlj0dx4xx\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"ZoneName\\": \\"杭州 可用区I\\",\\n        \\"InstanceSpec\\": \\"ecs.t5-lc2m1.nano\\",\\n        \\"EndTime\\": \\"2021-04-01 01:00:00\\",\\n        \\"StartTime\\": \\"2021-04-01 00:00:00\\",\\n        \\"PaymentAmount\\": 0,\\n        \\"CoveragePercentage\\": 1,\\n        \\"Region\\": \\"华东1（杭州）\\",\\n        \\"DeductQuantity\\": 1,\\n        \\"Zone\\": \\"cn-hangzhou-i\\",\\n        \\"UserName\\": \\"test13@test.aliyun.com\\",\\n        \\"ProductCode\\": \\"ecs\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""}]',
      'title' => '资源覆盖率明细',
      'summary' => '预留实例、SCU覆盖率明细查询。',
      'description' => '1. 与费用中心“资源实例管理”菜单中的“覆盖率概况”的列表数据一致。
2. 当前支持RI和SCU两种资源的覆盖率查询。
3. 提供“小时”、“天”，“月”三种维度的覆盖率查询。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeResourcePackageProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => true,
            'example' => 'ossbag',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BBEF51A3-E933-4F40-A534-C673CBDB9C80',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '72353765387',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ResourcePackages' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ResourcePackage' => 
                      array (
                        'description' => '资源包详情数组。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'ossbag',
                            ),
                            'Name' => 
                            array (
                              'description' => '资源包名称。',
                              'type' => 'string',
                              'example' => '对象存储OSS资源包(包月)',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'ossbag',
                            ),
                            'PackageTypes' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'PackageType' => 
                                array (
                                  'description' => '资源包类型。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Code' => 
                                      array (
                                        'description' => '资源包代码。',
                                        'type' => 'string',
                                        'example' => 'FPT_ossbag_deadlineAcc_CdnOut_common_sz',
                                      ),
                                      'Name' => 
                                      array (
                                        'description' => '资源包类型名称。',
                                        'type' => 'string',
                                        'example' => '回源流量包(华南1)',
                                      ),
                                      'Properties' => 
                                      array (
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Property' => 
                                          array (
                                            'description' => '属性详情。',
                                            'type' => 'array',
                                            'items' => 
                                            array (
                                              'type' => 'object',
                                              'properties' => 
                                              array (
                                                'Name' => 
                                                array (
                                                  'description' => '属性名称。',
                                                  'type' => 'string',
                                                  'example' => 'region',
                                                ),
                                                'Value' => 
                                                array (
                                                  'description' => '属性值。',
                                                  'type' => 'string',
                                                  'example' => 'cn-shenzhen',
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                      'Specifications' => 
                                      array (
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Specification' => 
                                          array (
                                            'description' => '规格详情。',
                                            'type' => 'array',
                                            'items' => 
                                            array (
                                              'type' => 'object',
                                              'properties' => 
                                              array (
                                                'Name' => 
                                                array (
                                                  'description' => '规格名称。',
                                                  'type' => 'string',
                                                  'example' => '1TB',
                                                ),
                                                'Value' => 
                                                array (
                                                  'description' => '规格值。',
                                                  'type' => 'string',
                                                  'example' => '1024',
                                                ),
                                                'AvailableDurations' => 
                                                array (
                                                  'type' => 'object',
                                                  'properties' => 
                                                  array (
                                                    'AvailableDuration' => 
                                                    array (
                                                      'description' => '可选时间长度详情。',
                                                      'type' => 'array',
                                                      'items' => 
                                                      array (
                                                        'type' => 'object',
                                                        'properties' => 
                                                        array (
                                                          'Value' => 
                                                          array (
                                                            'description' => '时长值。',
                                                            'type' => 'integer',
                                                            'format' => 'int32',
                                                            'example' => '6',
                                                          ),
                                                          'Name' => 
                                                          array (
                                                            'description' => '时长名称。',
                                                            'type' => 'string',
                                                            'example' => '6 Month',
                                                          ),
                                                          'Unit' => 
                                                          array (
                                                            'description' => '资源包时长单位。取值范围：
- Month：月。
- Year：年。

默认Month。',
                                                            'type' => 'string',
                                                            'example' => 'Month',
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'ProductCodeMissing',
            'errorMessage' => 'Parameter ProductCode is missing.',
          ),
          6 => 
          array (
            'errorCode' => 'ProductNotSupported',
            'errorMessage' => 'Product currently is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"BBEF51A3-E933-4F40-A534-C673CBDB9C80\\",\\n  \\"Success\\": true,\\n  \\"OrderId\\": 72353765387,\\n  \\"Data\\": {\\n    \\"ResourcePackages\\": {\\n      \\"ResourcePackage\\": [\\n        {\\n          \\"ProductType\\": \\"ossbag\\",\\n          \\"Name\\": \\"对象存储OSS资源包(包月)\\",\\n          \\"ProductCode\\": \\"ossbag\\",\\n          \\"PackageTypes\\": {\\n            \\"PackageType\\": [\\n              {\\n                \\"Code\\": \\"FPT_ossbag_deadlineAcc_CdnOut_common_sz\\",\\n                \\"Name\\": \\"回源流量包(华南1)\\",\\n                \\"Properties\\": {\\n                  \\"Property\\": [\\n                    {\\n                      \\"Name\\": \\"region\\",\\n                      \\"Value\\": \\"cn-shenzhen\\"\\n                    }\\n                  ]\\n                },\\n                \\"Specifications\\": {\\n                  \\"Specification\\": [\\n                    {\\n                      \\"Name\\": \\"1TB\\",\\n                      \\"Value\\": \\"1024\\",\\n                      \\"AvailableDurations\\": {\\n                        \\"AvailableDuration\\": [\\n                          {\\n                            \\"Value\\": 6,\\n                            \\"Name\\": \\"6 Month\\",\\n                            \\"Unit\\": \\"Month\\"\\n                          }\\n                        ]\\n                      }\\n                    }\\n                  ]\\n                }\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeResourcePackageProductResponse>>\\n    <Message>Successful!</Message>\\n    <RequestId>BBEF51A3-E933-4F40-A534-C673CBDB9C80</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <ResourcePackages>\\n            <ResourcePackage>\\n                <Name>对象存储OSS资源包(包月)</Name>\\n                <ProductCode>ossbag</ProductCode>\\n                <PackageTypes>\\n                    <PackageType>\\n                        <Name>回源流量包(华南1)</Name>\\n                        <Specifications>\\n                            <Specification>\\n                                <Name>1TB</Name>\\n                                <Value>1024</Value>\\n                                <AvailableDurations>\\n                                    <AvailableDuration>\\n                                        <Name>6 Month</Name>\\n                                        <Value>6</Value>\\n                                        <Unit>Month</Unit>\\n                                    </AvailableDuration>\\n                                </AvailableDurations>\\n                            </Specification>\\n                        </Specifications>\\n                        <Code>FPT_ossbag_deadlineAcc_CdnOut_common_sz</Code>\\n                        <Properties>\\n                            <Property>\\n                                <Name>region</Name>\\n                                <Value>cn-shenzhen</Value>\\n                            </Property>\\n                            <Property>\\n                                <Name>ossbag_type</Name>\\n                                <Value>cdn2oss_flow_out</Value>\\n                            </Property>\\n                        </Properties>\\n                    </PackageType>\\n                    <PackageType>\\n                        <Name>标准存储包(华北2)</Name>\\n                        <Specifications>\\n                            <Specification>\\n                                <Name>40GB</Name>\\n                                <Value>40</Value>\\n                                <AvailableDurations>\\n                                    <AvailableDuration>\\n                                        <Name>6 Month</Name>\\n                                        <Value>6</Value>\\n                                        <Unit>Month</Unit>\\n                                    </AvailableDuration>\\n                                </AvailableDurations>\\n                            </Specification>\\n                        </Specifications>\\n                        <Code>FPT_ossbag_absolute_Storage_bj</Code>\\n                        <Properties>\\n                            <Property>\\n                                <Name>region</Name>\\n                                <Value>cn-beijing</Value>\\n                            </Property>\\n                            <Property>\\n                                <Name>ossbag_type</Name>\\n                                <Value>storage</Value>\\n                            </Property>\\n                        </Properties>\\n                    </PackageType>\\n                </PackageTypes>\\n            </ResourcePackage>\\n        </ResourcePackages>\\n    </Data>\\n</DescribeResourcePackageProductResponse>","errorExample":""}]',
      'title' => '描述资源包产品服务',
      'summary' => '查询某个资源包产品的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetResourcePackagePrice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码，可通过接口**QueryProductList**查询产品代码，或查看**阿里云产品Code速查手册**。',
            'type' => 'string',
            'required' => true,
            'example' => 'ossbag',
          ),
        ),
        1 => 
        array (
          'name' => 'PackageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包类型。值与**描述资源包接口**返回的**ResourcePackage**的Code值相等。',
            'type' => 'string',
            'required' => true,
            'example' => 'FPT_ossbag_periodMonthlyAcc_NetworkOut_finance_common',
          ),
        ),
        2 => 
        array (
          'name' => 'EffectiveDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包生效时间，不填默认立即生效。
订单类型为**购买**时，不支持询价**生效时间大于当前时间六个月**的资源包。
订单类型为**升级**时，生效时间**必须小于等于**升级的资源包实际到期时间。
日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-10T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Specification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包规格大小。',
            'type' => 'string',
            'required' => true,
            'example' => '500',
          ),
        ),
        4 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包时长。值与规格大小的可用时长相符。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '6',
          ),
        ),
        5 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包时长单位。取值：
- Month：月。
- Year：年。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单类型，取值：
- BUY：新购。
- UPGRADE：升级。
- RENEW：续费。

默认值BUY。',
            'type' => 'string',
            'required' => false,
            'example' => 'BUY',
          ),
        ),
        7 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户实例ID。**订单类型为续费、升级时，必填。**',
            'type' => 'string',
            'required' => false,
            'example' => 'OSSBAG-cn-0xl0002',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BBEF51A3-E933-4F40-A534-C673CBDB9C80',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OriginalPrice' => 
                  array (
                    'description' => '原始价格，单位元。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '1290240',
                  ),
                  'DiscountPrice' => 
                  array (
                    'description' => '折扣价格，单位元。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '215040',
                  ),
                  'Currency' => 
                  array (
                    'description' => '币种。',
                    'type' => 'string',
                    'example' => 'CNY',
                  ),
                  'TradePrice' => 
                  array (
                    'description' => '交易价格，单位元。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '1075200',
                  ),
                  'Promotions' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Promotion' => 
                      array (
                        'description' => '优惠详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Name' => 
                            array (
                              'description' => '优惠描述。',
                              'type' => 'string',
                              'example' => '购买半年，立享8.3折优惠',
                            ),
                            'Id' => 
                            array (
                              'description' => '优惠ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1000680914',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'DurationInvalid',
            'errorMessage' => 'Parameter duration can only be positive integer.',
          ),
          6 => 
          array (
            'errorCode' => 'ProductNotFound',
            'errorMessage' => 'Product not found.',
          ),
          7 => 
          array (
            'errorCode' => 'PackageTypeNotFound',
            'errorMessage' => 'No such resource package type found.',
          ),
          8 => 
          array (
            'errorCode' => 'SpecificationInvalid',
            'errorMessage' => 'Parameter specification can only be positive integer.',
          ),
          9 => 
          array (
            'errorCode' => 'IdInvalid',
            'errorMessage' => 'Parameter ownerId is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'EffectiveDateInvalid',
            'errorMessage' => 'Parameter effectiveDate is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IdMissing',
            'errorMessage' => 'Paramter ownerId is missing.',
          ),
          12 => 
          array (
            'errorCode' => 'PackageTypeNotSupported',
            'errorMessage' => 'Package type currently is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"BBEF51A3-E933-4F40-A534-C673CBDB9C80\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OriginalPrice\\": 1290240,\\n    \\"DiscountPrice\\": 215040,\\n    \\"Currency\\": \\"CNY\\",\\n    \\"TradePrice\\": 1075200,\\n    \\"Promotions\\": {\\n      \\"Promotion\\": [\\n        {\\n          \\"Name\\": \\"购买半年，立享8.3折优惠\\",\\n          \\"Id\\": 1000680914\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetResourcePackagePriceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>BBEF51A3-E933-4F40-A534-C673CBDB9C80</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <DiscountPrice>215040</DiscountPrice>\\n        <Promotions>\\n            <Promotion>\\n                <Name>购买半年，立享8.3折优惠</Name>\\n                <Id>1000680914</Id>\\n            </Promotion>\\n        </Promotions>\\n        <OriginalPrice>1290240</OriginalPrice>\\n        <TradePrice>1075200</TradePrice>\\n        <Currency>CNY</Currency>\\n    </Data>\\n</GetResourcePackagePriceResponse>","errorExample":""}]',
      'title' => '资源包产品询价服务',
      'summary' => '查询用户某个资源包的价格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateResourcePackage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码，可通过接口**QueryProductList**查询产品代码，或查看**阿里云产品Code速查手册**。',
            'type' => 'string',
            'required' => true,
            'example' => 'ossbag',
          ),
        ),
        1 => 
        array (
          'name' => 'PackageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包类型。值与**描述资源包**返回的**ResourcePackage**的Code值相等。',
            'type' => 'string',
            'required' => true,
            'example' => 'FPT_ossbag_absolute_Storage_sh',
          ),
        ),
        2 => 
        array (
          'name' => 'EffectiveDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包生效时间，不填默认立即生效。

日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-03T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Specification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包规格大小。值与**描述资源包**返回的**Specification**的value值相等。',
            'type' => 'string',
            'required' => true,
            'example' => '40',
          ),
        ),
        4 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '6',
          ),
        ),
        5 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包时长单位，取值：
- Month：月。
- Year：年。

默认值Month。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '202407022550621',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '订单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '202407022550621',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'OSSBAG-cn-****s',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'DurationInvalid',
            'errorMessage' => 'Parameter duration can only be positive integer.',
          ),
          6 => 
          array (
            'errorCode' => 'ProductNotFound',
            'errorMessage' => 'Product not found.',
          ),
          7 => 
          array (
            'errorCode' => 'PackageTypeNotFound',
            'errorMessage' => 'No such resource package type found.',
          ),
          8 => 
          array (
            'errorCode' => 'SpecificationInvalid',
            'errorMessage' => 'Parameter specification can only be positive integer.',
          ),
          9 => 
          array (
            'errorCode' => 'IdInvalid',
            'errorMessage' => 'Parameter ownerId is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'EffectiveDateInvalid',
            'errorMessage' => 'Parameter effectiveDate is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IdMissing',
            'errorMessage' => 'Paramter ownerId is missing.',
          ),
          12 => 
          array (
            'errorCode' => 'PackageTypeNotSupported',
            'errorMessage' => 'Package type currently is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"OrderId\\": 202407022550621,\\n  \\"Data\\": {\\n    \\"OrderId\\": 202407022550621,\\n    \\"InstanceId\\": \\"OSSBAG-cn-****s\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateResourcePackageResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <InstanceId>OSSBAG-cn-****s</InstanceId>\\n        <OrderId>202407022550621</OrderId>\\n    </Data>\\n</CreateResourcePackageResponse>","errorExample":""}]',
      'title' => '创建资源包服务',
      'summary' => '创建用户某个资源包的实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RenewResourcePackage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'lskd****sljhsdj',
          ),
        ),
        1 => 
        array (
          'name' => 'EffectiveDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包生效时间，不填默认立即生效。

日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02T12:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包续费时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包时长单位，取值：
- Month
- Year

默认为Month。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Month',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '204322301110333',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '订单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '204322560333',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'OSSBAG-cn-0xl0n****003',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'DurationInvalid',
            'errorMessage' => 'Parameter duration can only be positive integer.',
          ),
          6 => 
          array (
            'errorCode' => 'ProductNotFound',
            'errorMessage' => 'Product not found.',
          ),
          7 => 
          array (
            'errorCode' => 'PackageTypeNotFound',
            'errorMessage' => 'No such resource package type found.',
          ),
          8 => 
          array (
            'errorCode' => 'SpecificationInvalid',
            'errorMessage' => 'Parameter specification can only be positive integer.',
          ),
          9 => 
          array (
            'errorCode' => 'IdInvalid',
            'errorMessage' => 'Parameter ownerId is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'EffectiveDateInvalid',
            'errorMessage' => 'Parameter effectiveDate is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IdMissing',
            'errorMessage' => 'Paramter ownerId is missing.',
          ),
          12 => 
          array (
            'errorCode' => 'PackageTypeNotSupported',
            'errorMessage' => 'Package type currently is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"OrderId\\": 204322301110333,\\n  \\"Data\\": {\\n    \\"OrderId\\": 204322560333,\\n    \\"InstanceId\\": \\"OSSBAG-cn-0xl0n****003\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RenewResourcePackageResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <InstanceId>OSSBAG-cn-0xl0****d003</InstanceId>\\n        <OrderId>204322301110333</OrderId>\\n    </Data>\\n</RenewResourcePackageResponse>","errorExample":""}]',
      'title' => '资源包续费服务',
      'summary' => '为用户某个资源包实例续费。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpgradeResourcePackage' => 
    array (
      'summary' => '升级用户某个资源包的实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'OSSBAG-cn-0xl*****x002',
          ),
        ),
        1 => 
        array (
          'name' => 'EffectiveDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源包生效时间，不填默认立即生效。

日期格式按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02T12:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Specification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级资源包规格大小。',
            'type' => 'string',
            'required' => false,
            'example' => '51200',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '73387246238746',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '订单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '73387246238746',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。
',
                    'type' => 'string',
                    'example' => 'OSSBAG-cn-0xl*****002',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'DurationInvalid',
            'errorMessage' => 'Parameter duration can only be positive integer.',
          ),
          6 => 
          array (
            'errorCode' => 'ProductNotFound',
            'errorMessage' => 'Product not found.',
          ),
          7 => 
          array (
            'errorCode' => 'PackageTypeNotFound',
            'errorMessage' => 'No such resource package type found.',
          ),
          8 => 
          array (
            'errorCode' => 'SpecificationInvalid',
            'errorMessage' => 'Parameter specification can only be positive integer.',
          ),
          9 => 
          array (
            'errorCode' => 'IdInvalid',
            'errorMessage' => 'Parameter ownerId is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'EffectiveDateInvalid',
            'errorMessage' => 'Parameter effectiveDate is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IdMissing',
            'errorMessage' => 'Paramter ownerId is missing.',
          ),
          12 => 
          array (
            'errorCode' => 'PackageTypeNotSupported',
            'errorMessage' => 'Package type currently is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"OrderId\\": 73387246238746,\\n  \\"Data\\": {\\n    \\"OrderId\\": 73387246238746,\\n    \\"InstanceId\\": \\"OSSBAG-cn-0xl*****002\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<UpgradeResourcePackageResponse>\\r\\n    <Message>Successful!</Message>\\r\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <Code>Success</Code>\\r\\n    <Data>\\r\\n    <InstanceId>OSSBAG-cn-0xl*****d003</InstanceId>\\r\\n    <OrderId>204322301110333</OrderId>\\r\\n    </Data>\\r\\n</UpgradeResourcePackageResponse>","errorExample":""}]',
      'title' => '升级资源包服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SubscribeBillToOSS' => 
    array (
      'summary' => '导出阿里云OSS订阅账单详单数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SubscribeBucket',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定详单导出的OSS Bucket。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'xxxxxx-bucket',
          ),
        ),
        1 => 
        array (
          'name' => 'SubscribeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值类型：
- BillingItemDetailForBillingPeriod：计费项消费明细。
- InstanceDetailForBillingPeriod：实例消费明细。
- BillingItemDetailMonthly：计费项消费账期汇总。
- InstanceDetailMonthly：实例消费账期汇总。
- SplitItemDetailDaily: 分账账单按天汇总。
- MonthBill：月账单PDF。仅支持订阅MA。
',
            'type' => 'string',
            'required' => false,
            'example' => 'BillingItemDetailForBillingPeriod',
          ),
        ),
        2 => 
        array (
          'name' => 'MultAccountRelSubscribe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对于多级账号，可指定推送账单的类型。可选值为：
- MA：推送主账号及财务云非托管子账号账单。
- ACP1：推送虚商子账号账单。

默认：MA。',
            'type' => 'string',
            'required' => false,
            'example' => 'MA',
          ),
        ),
        3 => 
        array (
          'name' => 'BucketOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储文件的Oss Owner对应的UID。如果是Bid/ReSeller订阅，并需要推送到子账号的OSS上时指定，需要此账号为调用账号子账号，并对此账号授予AliyunConsumeDump2OSSRole权限。
普通用户则无需指定，默认为调用账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12341324',
          ),
        ),
        4 => 
        array (
          'name' => 'BeginBillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送起始账期。订阅成功后，系统会自动推送起始账期到当前时间的数据。月账单PDF订阅时此参数无效，不会对历史数据重新推送。最多可推送最近1年内数据。',
            'type' => 'string',
            'required' => false,
            'example' => '2021-03',
          ),
        ),
        5 => 
        array (
          'name' => 'BucketPath',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'OSS Bucket存储路径',
            'description' => 'OSS Bucket存储路径。',
            'type' => 'string',
            'required' => false,
            'example' => 'testpath',
          ),
        ),
        6 => 
        array (
          'name' => 'RowLimitPerFile',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单文件行数上限。当账单文件超过上限后，会拆成多个文件，并合并成一个压缩包。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '300000',
          ),
        ),
        7 => 
        array (
          'name' => 'UsingSsl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否通过SSL（Secure Sockets Layer）加密协议来保护网络通信。当此参数设为true时，表示启用SSL加密，以确保数据传输的安全性和完整性。',
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F61FCE4B-9B56-4FD9-A17E-******',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"F61FCE4B-9B56-4FD9-A17E-******\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SubscribeBillToOSSResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>F61FCE4B-9B56-4FD9-A17E-******</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n</SubscribeBillToOSSResponse>","errorExample":""}]',
      'title' => '导出订阅详单',
      'description' => '在调用该接口时，请注意：

- 用户一次订阅一个类型的账单文件。

- 订阅后次日开始每日推送上一日生成的账单文件，每月4号推送上月整账期的全量账单文件。月账单PDF每月4号推送上月账单文件。

- 按天生成的账单文件可能存在时延，延迟生成的账单会在生成次日推送，也可能会包含上一日之前延迟到上一日生成的账单。建议每个月初拉取上个月全量文件。

> <props="china">需要给订阅用户授予[AliyunConsumeDump2OSSRole](https://ram.console.aliyun.com/#/role/authorize?request=%7B%22Requests%22:%20%7B%22request1%22:%20%7B%22RoleName%22:%20%22AliyunConsumeDump2OSSRole%22,%20%22TemplateId%22:%20%22Dump2OSSRole%22%7D%7D,%20%22ReturnUrl%22:%20%22https:%2F%2Fusercenter2.aliyun.com%22,%20%22Service%22:%20%22Consume%22%7D)权限。</props>

- 本订阅与费用中心首页的“账单数据存储”为同一功能，订阅互通。

- 订阅至Bucket下的目录时，请注意符合目录命名规范：

    - 不允许使用表情符，请使用符合要求的 UTF-8 字符。
    - / 用于分割路径，可快速创建子目录，但不要以 / 或 \\ 开头，不要出现连续的 /。
    - 不允许出现名为 .. 的子目录。
    - 总长度控制在 1~254 个字符。


- 文件名：

    - **BillingItemDetailForBillingPeriod**（计费项账单明细）
    
        - 每日推送文件名格式：`UID_BillingItemDetail_YYYYMMDD`，例如：`169**_BillingItemDetail_20190310`。
    
        - 下月初完整文件名格式：`UID_BillingItemDetail_YYYYMM`，例如：`169**_BillingItemDetail_201903`。
    
    - **InstanceDetailForBillingPeriod**（实例账单明细）
    
        - 每日推送文件名格式：`UID_InstanceDetail_YYYYMMDD`，例如：`169**_InstanceDetail_20190310`。
    
        - 下月初完整文件名格式：`UID_InstanceDetail_YYYYMM`，例如：`169**_InstanceDetail_201903`。

    - **InstanceDetailMonthly**（实例账单账期汇总）
    
        - 每日推送文件名格式：`UID_InstanceDetailMonthly_YYYYMM`，例如：`169**_InstanceDetailMonthly_201903`。此文件每日更新月初至当日的全量数据，直至次月4号。

    - **BillingItemDetailMonthly**（计费项账单账期汇总）
    
        - 每日推送文件名格式：`UID_BillingItemDetailMonthly_YYYYMM`，例如：`169**_BillingItemDetailMonthly_201903`。此文件每日更新月初至当日的全量数据，直至次月4号。

    - **SplitItemDetailDaily**（分账账单按天汇总）
    
        - 每日推送文件名格式：`UID_SplitItemDetailDaily_YYYYMM`，例如：`169**_SplitItemDetailDaily_201903`。此文件每日更新月初至当日的全量数据，直至次月4号。

    - **MonthBill**（月账单PDF）
    
        - 每月推送文件名格式：`UID_MonthBill_YYYYMM`，例如：`169**_MonthBill_201903`。每月4号推送上月账单文件。

- 除MonthBill为PDF文件外，其余文件类型为csv文件。但如果账单数据行数超过一定阈值，会自动拆分成多个csv文件，并合并压缩成一个zip文件，zip文件名格式相同。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnsubscribeBillToOSS' => 
    array (
      'summary' => '取消详单导出订阅。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SubscribeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值类型：
- BillingItemDetailForBillingPeriod：计费项消费明细。
- InstanceDetailForBillingPeriod：实例消费明细。
- BillingItemDetailMonthly：计费项消费账期汇总。
- InstanceDetailMonthly：实例消费账期汇总。
- SplitItemDetailDaily: 分账账单按天汇总。
- MonthBill：月账单PDF。仅支持订阅MA。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'BillingItemDetailForBillingPeriod',
          ),
        ),
        1 => 
        array (
          'name' => 'MultAccountRelSubscribe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对于多级账号，可指定推送账单的类型。可选值为：


- MA：推送主账号账单。
- ACP1：推送虚商子账号账单。

默认值：MA。',
            'type' => 'string',
            'required' => false,
            'example' => 'MA',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D23FE74C-742F-4624-A82B-******',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"D23FE74C-742F-4624-A82B-******\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UnsubscribeBillToOSSResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>D23FE74C-742F-4624-A82B-******</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n</UnsubscribeBillToOSSResponse>","errorExample":""}]',
      'title' => '取消详单订阅服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryBillToOSSSubscription' => 
    array (
      'summary' => '查询账单订阅到OSS储存桶的记录。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9EEAE43F-1E4D-4734-AE93-5049878AC103',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'AccountName' => 
                  array (
                    'description' => '当前查询账号名称。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '当前查询账号ID。',
                    'type' => 'string',
                    'example' => '185xxxxx03489',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '订阅详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '订阅详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BucketOwnerId' => 
                            array (
                              'description' => '储存桶所有者用户ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1369168081849304',
                            ),
                            'SubscribeType' => 
                            array (
                              'description' => '订阅账单类型。
- BillingItemDetailForBillingPeriod：计费项消明细。
- InstanceDetailForBillingPeriod：实例消费明细。',
                              'type' => 'string',
                              'example' => 'BillingItemDetailForBillingPeriod',
                            ),
                            'SubscribeBucket' => 
                            array (
                              'description' => '订阅的储存桶ID。',
                              'type' => 'string',
                              'example' => 'billingtestbucket',
                            ),
                            'SubscribeTime' => 
                            array (
                              'description' => '订阅时间，格式’YYYY-MM-DD hh:mm:ss’。',
                              'type' => 'string',
                              'example' => '2019-10-30 15:40:11',
                            ),
                            'SubscribeLanguage' => 
                            array (
                              'description' => '订阅语言简码。',
                              'type' => 'string',
                              'enumValueTitles' => 
                              array (
                                'en' => '英文',
                                'zh' => '中文',
                              ),
                              'example' => 'zh',
                            ),
                            'BucketPath' => 
                            array (
                              'description' => 'OSS存储目录。',
                              'type' => 'string',
                              'example' => 'Billing/BillingItemDetailMonthly/',
                            ),
                            'RowLimitPerFile' => 
                            array (
                              'description' => '单文件行数上限。当账单文件超过上限后，会拆成多个文件，并合并成一个压缩包。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '300000',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"9EEAE43F-1E4D-4734-AE93-5049878AC103\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"AccountID\\": \\"185xxxxx03489\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"BucketOwnerId\\": 1369168081849304,\\n          \\"SubscribeType\\": \\"BillingItemDetailForBillingPeriod\\",\\n          \\"SubscribeBucket\\": \\"billingtestbucket\\",\\n          \\"SubscribeTime\\": \\"2019-10-30 15:40:11\\",\\n          \\"SubscribeLanguage\\": \\"zh\\",\\n          \\"BucketPath\\": \\"Billing/BillingItemDetailMonthly/\\",\\n          \\"RowLimitPerFile\\": 300000\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryBillToOSSSubscriptionResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>9EEAE43F-1E4D-4734-AE93-5049878AC103</RequestId>\\n    <Data>\\n        <AccountID>185xxxxx03489</AccountID>\\n        <Items>\\n        </Items>\\n        <AccountName>test@test.aliyunid.com</AccountName>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryBillToOSSSubscriptionResponse>","errorExample":""}]',
      'title' => '详单订阅查询',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryBillOverview' => 
    array (
      'summary' => '查询用户某个账期内账单总览信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，YYYY-MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2018-07',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
          ),
        ),
        4 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '1234',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BCB1E1BC-05BF-4217-80EE-BF09A29407BA',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'BillingCycle' => 
                  array (
                    'description' => '账期，格式：YYYY-MM。',
                    'type' => 'string',
                    'example' => '2020-03',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185766xxxx',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '账单详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RoundDownDiscount' => 
                            array (
                              'description' => '抹零优惠。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Item' => 
                            array (
                              'description' => '账单类型，取值：
- SubscriptionOrder。预付费账单
- PayAsYouGoBill。后付费账单
- Refund。退款
- Adjustment。调账',
                              'type' => 'string',
                              'example' => 'PayAsYouGoBill',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种，取值：
- CNY。
- USD。
- JPY。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
                              'type' => 'string',
                              'example' => 'Subscription',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '代金券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BillAccountName' => 
                            array (
                              'description' => '账单所属账号名称。',
                              'type' => 'string',
                              'example' => 'test@test.aliyunid.com',
                            ),
                            'BizType' => 
                            array (
                              'description' => '业务类型。',
                              'type' => 'string',
                              'example' => 'trusteeship',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'OutstandingAmount' => 
                            array (
                              'description' => '未结清金额或信用结算金额（普通用户的欠费， 或者信用客户信用额度消耗）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PipCode' => 
                            array (
                              'description' => '产品Code，与费用中心账单产品Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '应付金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => 'Nat网关',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品Code，与费用中心产品明细Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'AdjustAmount' => 
                            array (
                              'description' => '信用额度退款抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductDetail' => 
                            array (
                              'description' => '产品明细。',
                              'type' => 'string',
                              'example' => 'NAT Gateway (Pay-As-You-Go)',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '账单OwnerID。',
                              'type' => 'string',
                              'example' => '1222',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '储值卡抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '现金支付（含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'BillAccountID' => 
                            array (
                              'description' => '账单所属账号ID。',
                              'type' => 'string',
                              'example' => '185766xxxx',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'CashAmount' => 
                            array (
                              'description' => '现金支付（不包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"BCB1E1BC-05BF-4217-80EE-BF09A29407BA\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"BillingCycle\\": \\"2020-03\\",\\n    \\"AccountID\\": \\"185766xxxx\\",\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"RoundDownDiscount\\": \\"0\\",\\n          \\"Item\\": \\"PayAsYouGoBill\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"SubscriptionType\\": \\"Subscription\\",\\n          \\"DeductedByCashCoupons\\": 0,\\n          \\"BillAccountName\\": \\"test@test.aliyunid.com\\",\\n          \\"BizType\\": \\"trusteeship\\",\\n          \\"DeductedByCoupons\\": 0,\\n          \\"OutstandingAmount\\": 0,\\n          \\"AfterTaxAmount\\": 0,\\n          \\"PretaxAmountLocal\\": 0,\\n          \\"Tax\\": 0,\\n          \\"PipCode\\": \\"rds\\",\\n          \\"PretaxAmount\\": 100,\\n          \\"ProductName\\": \\"Nat网关\\",\\n          \\"CommodityCode\\": \\"rds\\",\\n          \\"AdjustAmount\\": 0,\\n          \\"ProductDetail\\": \\"NAT Gateway (Pay-As-You-Go)\\",\\n          \\"PaymentCurrency\\": \\"USD\\",\\n          \\"OwnerID\\": \\"1222\\",\\n          \\"DeductedByPrepaidCard\\": 0,\\n          \\"ProductType\\": \\"rds\\",\\n          \\"InvoiceDiscount\\": 0,\\n          \\"PaymentAmount\\": 100,\\n          \\"BillAccountID\\": \\"185766xxxx\\",\\n          \\"PretaxGrossAmount\\": 100,\\n          \\"CashAmount\\": 0,\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>BCB1E1BC-05BF-4217-80EE-BF09A29407BA</RequestId>\\n<Message>Successful!</Message>\\n<Data>\\n    <BillingCycle>2020-03</BillingCycle>\\n    <AccountID>185766xxxx</AccountID>\\n    <AccountName>test@test.aliyunid.com</AccountName>\\n    <Items>\\n        <Item>\\n            <AfterTaxAmount>0</AfterTaxAmount>\\n            <ProductName>Nat网关</ProductName>\\n            <BillAccountID>185766xxxx</BillAccountID>\\n            <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n            <PaymentCurrency>USD</PaymentCurrency>\\n            <Tax>0</Tax>\\n            <PaymentAmount>100</PaymentAmount>\\n            <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n            <InvoiceDiscount>0</InvoiceDiscount>\\n            <SubscriptionType>Subscription</SubscriptionType>\\n            <Item>PayAsYouGoBill</Item>\\n            <PretaxGrossAmount>100</PretaxGrossAmount>\\n            <Currency>CNY</Currency>\\n            <CommodityCode>rds</CommodityCode>\\n            <AdjustAmount>0</AdjustAmount>\\n            <DeductedByCoupons>0</DeductedByCoupons>\\n            <RoundDownDiscount>0</RoundDownDiscount>\\n            <ProductDetail>NAT Gateway (Pay-As-You-Go)</ProductDetail>\\n            <ProductCode>rds</ProductCode>\\n            <ProductType>rds</ProductType>\\n            <OutstandingAmount>0</OutstandingAmount>\\n            <BizType>trusteeship</BizType>\\n            <PipCode>rds</PipCode>\\n            <OwnerID>1222</OwnerID>\\n            <PretaxAmount>100</PretaxAmount>\\n            <BillAccountName>test@test.aliyunid.com</BillAccountName>\\n            <CashAmount>0</CashAmount>\\n            <PretaxAmountLocal>0</PretaxAmountLocal>\\n        </Item>\\n    </Items>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '账单总览查询服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryBill' => 
    array (
      'summary' => '查询用户某个账期内结算账单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账期，YYYY-MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2018-07',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '类型。取值：
- SubscriptionOrder
- PayAsYouGoBill
- Refund
- Adjustment',
            'type' => 'string',
            'required' => false,
            'example' => 'SubscriptionOrder',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription
- PayAsYouGo

> 必须和ProductCode参数一起使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
          ),
        ),
        5 => 
        array (
          'name' => 'IsHideZeroCharge',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据原价（PretaxGrossAmount）是否为0做过滤，默认为否（兼容现有逻辑）。
- true：是。
- false：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数量，默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AE3F4057-DFC9-4B81-8858-F620651010C9',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账期，YYYY－MM。',
                    'type' => 'string',
                    'example' => '2020-02',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185xxxxx489',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '账单详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '支付状态。取值：
- PayFinish：已支付
- PayUnclear：未结清
- PayUnsettle：未结算
- NoSettle：免结算',
                              'type' => 'string',
                              'example' => 'PayFinish',
                            ),
                            'RoundDownDiscount' => 
                            array (
                              'description' => '抹零优惠。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Item' => 
                            array (
                              'description' => '账单类型：
- SubscriptionOrder
- PayAsYouGoBill
- Refund
- Adjustment',
                              'type' => 'string',
                              'example' => 'SubscriptionOrder',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种。
- CNY
- USD
- JPY',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'UsageStartTime' => 
                            array (
                              'description' => '账单开始时间。',
                              'type' => 'string',
                              'example' => '2020-03-11 07:00:00',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型。取值：
- Subscription
- PayAsYouGo',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '代金券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'UsageEndTime' => 
                            array (
                              'description' => '账单结束时间。',
                              'type' => 'string',
                              'example' => '2020-03-11 08:00:00',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'SubOrderId' => 
                            array (
                              'description' => '该条账单对应的订单明细ID。',
                              'type' => 'string',
                              'example' => '325345254353',
                            ),
                            'OutstandingAmount' => 
                            array (
                              'description' => '未结清金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PaymentTime' => 
                            array (
                              'description' => '订单支付时间。',
                              'type' => 'string',
                              'example' => '2020-03-11 08:00:00',
                            ),
                            'PipCode' => 
                            array (
                              'description' => '产品Code。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '应付金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品Code。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'RecordID' => 
                            array (
                              'description' => '订单号、账单号。',
                              'type' => 'string',
                              'example' => '2020xxxx5912',
                            ),
                            'AdjustAmount' => 
                            array (
                              'description' => '信用额度退款抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductDetail' => 
                            array (
                              'description' => '产品明细。',
                              'type' => 'string',
                              'example' => '关系型数据库RDS（包月）',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '子账号**AccountID**（多账号代付场景）。',
                              'type' => 'string',
                              'example' => '3532535235',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '储值卡抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '现金支付。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CashAmount' => 
                            array (
                              'description' => '现金支付（不包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"AE3F4057-DFC9-4B81-8858-F620651010C9\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"BillingCycle\\": \\"2020-02\\",\\n    \\"AccountID\\": \\"185xxxxx489\\",\\n    \\"PageSize\\": 1,\\n    \\"TotalCount\\": 20,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"Status\\": \\"PayFinish\\",\\n          \\"RoundDownDiscount\\": \\"0\\",\\n          \\"Item\\": \\"SubscriptionOrder\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"UsageStartTime\\": \\"2020-03-11 07:00:00\\",\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"DeductedByCashCoupons\\": 0,\\n          \\"UsageEndTime\\": \\"2020-03-11 08:00:00\\",\\n          \\"DeductedByCoupons\\": 0,\\n          \\"SubOrderId\\": \\"325345254353\\",\\n          \\"OutstandingAmount\\": 0,\\n          \\"AfterTaxAmount\\": 0,\\n          \\"PaymentTime\\": \\"2020-03-11 08:00:00\\",\\n          \\"PretaxAmountLocal\\": 0,\\n          \\"Tax\\": 0,\\n          \\"PipCode\\": \\"rds\\",\\n          \\"PaymentTransactionID\\": \\"2O3AADJFEAF2PDKSFAMFCB11918\\",\\n          \\"PretaxAmount\\": 100,\\n          \\"CommodityCode\\": \\"rds\\",\\n          \\"ProductName\\": \\"云数据库RDS\\",\\n          \\"RecordID\\": \\"2020xxxx5912\\",\\n          \\"AdjustAmount\\": 0,\\n          \\"ProductDetail\\": \\"关系型数据库RDS（包月）\\",\\n          \\"PaymentCurrency\\": \\"USD\\",\\n          \\"OwnerID\\": \\"3532535235\\",\\n          \\"DeductedByPrepaidCard\\": 0,\\n          \\"ProductType\\": \\"rds\\",\\n          \\"InvoiceDiscount\\": 0,\\n          \\"PaymentAmount\\": 0,\\n          \\"PretaxGrossAmount\\": 0,\\n          \\"CashAmount\\": 0,\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryBillResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>347A769E-CA83-4213-964D-41A974DE0F3D</RequestId>\\n    <Data>\\n        <BillingCycle>2020-03</BillingCycle>\\n        <TotalCount>47</TotalCount>\\n        <AccountID>185xxxxx489</AccountID>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <Items>\\n            <Item>\\n                <Status>PayFinish</Status>\\n                <DeductedByCoupons>0</DeductedByCoupons>\\n                <RoundDownDiscount>0</RoundDownDiscount>\\n                <ProductName>云数据库RDS</ProductName>\\n                <ProductDetail>关系型数据库RDS(包月)</ProductDetail>\\n                <ProductCode>rds</ProductCode>\\n                <SubOrderId/>\\n                <ProductType>rds</ProductType>\\n                <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n                <OutstandingAmount>0</OutstandingAmount>\\n                <PaymentTime/>\\n                <PaymentAmount>0</PaymentAmount>\\n                <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n                <InvoiceDiscount>0</InvoiceDiscount>\\n                <UsageEndTime>2020-03-11 08:00:00</UsageEndTime>\\n                <Item>PayAsYouGoBill</Item>\\n                <SubscriptionType>PayAsYouGo</SubscriptionType>\\n                <PretaxGrossAmount>0</PretaxGrossAmount>\\n                <OwnerID/>\\n                <PretaxAmount>0</PretaxAmount>\\n                <Currency>CNY</Currency>\\n                <UsageStartTime>2020-03-11 07:00:00</UsageStartTime>\\n                <RecordID>2020xxxx5912</RecordID>\\n            </Item>\\n        </Items>\\n        <AccountName>test@test.aliyunid.com</AccountName>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryBillResponse>","errorExample":""}]',
      'title' => '账单查询服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryAccountBill' => 
    array (
      'summary' => '查询用户某个账期内的消费，并以资源所有者的维度进行汇总。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，YYYY-MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2018-07',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数量，默认值20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'OwnerID',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'IsGroupByProduct',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否增加产品Code汇总。
- true。
- false。

默认false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品code。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        6 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '122',
          ),
        ),
        7 => 
        array (
          'name' => 'Granularity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询账单的颗粒度。取值：
- MONTHLY：月。与费用中心-费用账单-账单明细-账期账单一致。
- DAILY：日。与费用中心-费用账单-账单明细-按天账单一致。

> 选择DAILY需指定BillingDate。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'MONTHLY',
          ),
        ),
        8 => 
        array (
          'name' => 'BillingDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，仅当Granularity为DAILY时必填，格式为YYYY-MM-DD。',
            'type' => 'string',
            'required' => false,
            'example' => '2021-06-01',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3BFC23FE-A182-4D96-A1E4-7521B30B8E43',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账期，格式：YYYY-MM。',
                    'type' => 'string',
                    'example' => '2020-03',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '1857xxxxx489',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '账单详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PipCode' => 
                            array (
                              'description' => '产品Code，与费用中心账单产品Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '<props="china">应付金额。</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BillingDate' => 
                            array (
                              'description' => '账单日期。',
                              'type' => 'string',
                              'example' => '2021-03-01',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。
> 仅当**IsGroupByProduct**为true时返回。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'AdjustAmount' => 
                            array (
                              'description' => '信用额度退款抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'OwnerName' => 
                            array (
                              'description' => '子账号名称。',
                              'type' => 'string',
                              'example' => 'aligzncloudtest2',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种。取值：
- CNY。
- USD。
- JPY。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'BillAccountName' => 
                            array (
                              'description' => '账单所属账号名称。',
                              'type' => 'string',
                              'example' => 'test@test.aliyunid.com',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '产品订阅类型：
- 预付费：Subscription。
- 后付费：PayAsYouGo。

> 仅当IsGroupByProduct为true时返回。',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '<props="china">代金券抵扣。</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BizType' => 
                            array (
                              'description' => '业务类型。',
                              'type' => 'string',
                              'example' => 'trusteeship',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '子账号的阿里云ID。',
                              'type' => 'string',
                              'example' => '325434254',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '<props="china">储值卡抵扣。</props>',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BillAccountID' => 
                            array (
                              'description' => '账单所属账号ID。',
                              'type' => 'string',
                              'example' => '1857xxxxx489',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '现金支付（含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'OutstandingAmount' => 
                            array (
                              'description' => '<props="china">未结清金额或信用结算金额。</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CostUnit' => 
                            array (
                              'description' => '财务单元。',
                              'type' => 'string',
                              'example' => '未分配',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CashAmount' => 
                            array (
                              'description' => '现金支付（不包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品code。
> 仅当**IsGroupByProduct**为true时返回。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"3BFC23FE-A182-4D96-A1E4-7521B30B8E43\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"BillingCycle\\": \\"2020-03\\",\\n    \\"AccountID\\": \\"1857xxxxx489\\",\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 1,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"PipCode\\": \\"rds\\",\\n          \\"PretaxAmount\\": 0,\\n          \\"BillingDate\\": \\"2021-03-01\\",\\n          \\"ProductName\\": \\"rds\\",\\n          \\"AdjustAmount\\": 0,\\n          \\"OwnerName\\": \\"aligzncloudtest2\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"BillAccountName\\": \\"test@test.aliyunid.com\\",\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"DeductedByCashCoupons\\": 0,\\n          \\"BizType\\": \\"trusteeship\\",\\n          \\"OwnerID\\": \\"325434254\\",\\n          \\"DeductedByPrepaidCard\\": 0,\\n          \\"DeductedByCoupons\\": 0,\\n          \\"BillAccountID\\": \\"1857xxxxx489\\",\\n          \\"PaymentAmount\\": 0,\\n          \\"InvoiceDiscount\\": 0,\\n          \\"OutstandingAmount\\": 0,\\n          \\"CostUnit\\": \\"未分配\\",\\n          \\"PretaxGrossAmount\\": 0,\\n          \\"CashAmount\\": 0,\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>3BFC23FE-A182-4D96-A1E4-7521B30B8E43</RequestId>\\n<Message>Successful!</Message>\\n<Data>\\n    <TotalCount>1</TotalCount>\\n    <BillingCycle>2020-03</BillingCycle>\\n    <AccountID>1857xxxxx489</AccountID>\\n    <PageSize>20</PageSize>\\n    <PageNum>1</PageNum>\\n    <AccountName>test@test.aliyunid.com</AccountName>\\n    <Items>\\n        <Item>\\n            <DeductedByCoupons>0</DeductedByCoupons>\\n            <OwnerName>aligzncloudtest2</OwnerName>\\n            <ProductName>rds</ProductName>\\n            <ProductCode>rds</ProductCode>\\n            <BillAccountID>1857xxxxx489</BillAccountID>\\n            <OutstandingAmount>0</OutstandingAmount>\\n            <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n            <BizType>trusteeship</BizType>\\n            <BillingDate>2021-03-01</BillingDate>\\n            <PaymentAmount>0</PaymentAmount>\\n            <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n            <PipCode>rds</PipCode>\\n            <InvoiceDiscount>0</InvoiceDiscount>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <PretaxGrossAmount>0</PretaxGrossAmount>\\n            <OwnerID>325434254</OwnerID>\\n            <PretaxAmount>0</PretaxAmount>\\n            <Currency>CNY</Currency>\\n            <BillAccountName>test@test.aliyunid.com</BillAccountName>\\n            <CostUnit>未分配</CostUnit>\\n            <CashAmount>0</CashAmount>\\n            <AdjustAmount>0</AdjustAmount>\\n        </Item>\\n    </Items>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '账号账单查询服务',
      'description' => '- 当月数据查询结果仅供参考，不作为对账依据；当月最终账单在次月3日12点后支持查看/导出（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。
- 支持近18个月数据。 
- 账单数据相对于实际费用消耗延迟24小时更新，其中实例ID相关的信息（ 实例配置，实例规格，实例昵称，资源组，公网IP，私网IP，可用区）延迟48小时更新。  
- 账单数据不支持提供分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用（如需统计含分拆项数据，请前往分账账单）。
- 对于云通信产品，仅支持查询2020年6月及以后的明细数据，万网产品（包括域名、商标等）仅支持查询2020年11月及以后的明细数据。
- 单用户限流10笔/秒，如遇超时，请重试。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySettleBill' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账期，YYYY-MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2018-07',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '类型。取值：
- SubscriptionOrder 预付费订单
- PayAsYouGoBill 后付费账单
- Refund 退款账单
- Adjustment 调账账单',
            'type' => 'string',
            'required' => false,
            'example' => 'SubscriptionOrder',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription 预付费
- PayAsYouGo 后付费
>  必须和ProductCode参数一起使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
          ),
        ),
        5 => 
        array (
          'name' => 'IsHideZeroCharge',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据原价（PretaxGrossAmount）是否为0做过滤，默认为否（兼容现有逻辑）。
- true：是。
- false：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用来标记当前开始读取的位置，置空表示从头开始。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123',
          ),
        ),
        9 => 
        array (
          'name' => 'RecordID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单号、账单号。',
            'type' => 'string',
            'required' => false,
            'example' => '12233',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AE3F4057-DFC9-4B81-8858-F620651010C9',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUQARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账期，YYYY－MM。',
                    'type' => 'string',
                    'example' => '2020-02',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185xxxxx489',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '账单详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '支付状态。取值：
- PayFinish：已支付
- PayUnclear：未结清
- PayUnsettle：未结算
- NoSettle：免结算',
                              'type' => 'string',
                              'example' => 'PayFinish',
                            ),
                            'RoundDownDiscount' => 
                            array (
                              'description' => '抹零优惠。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Item' => 
                            array (
                              'description' => '账单类型：
- Subscription
- OrderPayAsYouGoBill
- Refund
- Adjustment',
                              'type' => 'string',
                              'example' => 'Subscription',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种。
- CNY
- USD
- JPY',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'BillAccountName' => 
                            array (
                              'description' => '账单所属账号名称。',
                              'type' => 'string',
                              'example' => 'test@test.aliyunid.com',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '代金券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型。取值：
- Subscription
- PayAsYouGo',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'UsageStartTime' => 
                            array (
                              'description' => '账单开始时间。',
                              'type' => 'string',
                              'example' => '2020-03-11 07:00:00',
                            ),
                            'BizType' => 
                            array (
                              'description' => '业务类型。',
                              'type' => 'string',
                              'example' => 'trusteeship',
                            ),
                            'UsageEndTime' => 
                            array (
                              'description' => '账单结束时间。',
                              'type' => 'string',
                              'example' => '2020-03-11 08:00:00',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'SubOrderId' => 
                            array (
                              'description' => '该条账单对应的订单明细ID。',
                              'type' => 'string',
                              'example' => '325345254353',
                            ),
                            'OutstandingAmount' => 
                            array (
                              'description' => '未结清金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PaymentTime' => 
                            array (
                              'description' => '订单支付时间。',
                              'type' => 'string',
                              'example' => '2020-03-11 08:00:00',
                            ),
                            'PipCode' => 
                            array (
                              'description' => '产品Code，与费用中心账单产品Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '应付金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品Code，与费用中心产品明细Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'RecordID' => 
                            array (
                              'description' => '订单号、账单号。',
                              'type' => 'string',
                              'example' => '2020xxxx5912',
                            ),
                            'AdjustAmount' => 
                            array (
                              'description' => '信用额度退款抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductDetail' => 
                            array (
                              'description' => '产品明细。',
                              'type' => 'string',
                              'example' => '关系型数据库RDS（包月）',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '子账号AccountID（多账号代付场景）。',
                              'type' => 'string',
                              'example' => '3532535235',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '储值卡抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BillAccountID' => 
                            array (
                              'description' => '账单所属账号ID。',
                              'type' => 'string',
                              'example' => '185xxxxx489',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '现金支付（包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CashAmount' => 
                            array (
                              'description' => '现金支付（不包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"AE3F4057-DFC9-4B81-8858-F620651010C9\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4KCmdtdF9jcmVhdGUQARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U\\",\\n    \\"BillingCycle\\": \\"2020-02\\",\\n    \\"MaxResults\\": 20,\\n    \\"AccountID\\": \\"185xxxxx489\\",\\n    \\"TotalCount\\": 200,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"Status\\": \\"PayFinish\\",\\n          \\"RoundDownDiscount\\": \\"0\\",\\n          \\"Item\\": \\"Subscription\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"BillAccountName\\": \\"test@test.aliyunid.com\\",\\n          \\"DeductedByCashCoupons\\": 0,\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"UsageStartTime\\": \\"2020-03-11 07:00:00\\",\\n          \\"BizType\\": \\"trusteeship\\",\\n          \\"UsageEndTime\\": \\"2020-03-11 08:00:00\\",\\n          \\"DeductedByCoupons\\": 0,\\n          \\"SubOrderId\\": \\"325345254353\\",\\n          \\"AfterTaxAmount\\": 0,\\n          \\"OutstandingAmount\\": 0,\\n          \\"PaymentTime\\": \\"2020-03-11 08:00:00\\",\\n          \\"Tax\\": 0,\\n          \\"PretaxAmountLocal\\": 0,\\n          \\"PipCode\\": \\"rds\\",\\n          \\"PaymentTransactionID\\": \\"2O3AADJFEAF2PDKSFAMFCB11918\\",\\n          \\"PretaxAmount\\": 100,\\n          \\"CommodityCode\\": \\"rds\\",\\n          \\"ProductName\\": \\"云数据库RDS\\",\\n          \\"RecordID\\": \\"2020xxxx5912\\",\\n          \\"AdjustAmount\\": 0,\\n          \\"ProductDetail\\": \\"关系型数据库RDS（包月）\\",\\n          \\"PaymentCurrency\\": \\"USD\\",\\n          \\"OwnerID\\": \\"3532535235\\",\\n          \\"DeductedByPrepaidCard\\": 0,\\n          \\"BillAccountID\\": \\"185xxxxx489\\",\\n          \\"PaymentAmount\\": 0,\\n          \\"InvoiceDiscount\\": 0,\\n          \\"ProductType\\": \\"rds\\",\\n          \\"PretaxGrossAmount\\": 0,\\n          \\"CashAmount\\": 0,\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>AE3F4057-DFC9-4B81-8858-F620651010C9</RequestId>\\n<Message>Successful!</Message>\\n<Data>\\n    <TotalCount>200</TotalCount>\\n    <BillingCycle>2020-02</BillingCycle>\\n    <AccountID>185xxxxx489</AccountID>\\n    <NextToken>CAESEgoQCg4KCmdtdF9jcmVhdGUQARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U</NextToken>\\n    <MaxResults>20</MaxResults>\\n    <AccountName>test@test.aliyunid.com</AccountName>\\n    <Items>\\n        <Item>\\n            <AfterTaxAmount>0</AfterTaxAmount>\\n            <ProductName>云数据库RDS</ProductName>\\n            <BillAccountID>185xxxxx489</BillAccountID>\\n            <SubOrderId>325345254353</SubOrderId>\\n            <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n            <PaymentCurrency>USD</PaymentCurrency>\\n            <Tax>0</Tax>\\n            <PaymentTime>2020-03-11 08:00:00</PaymentTime>\\n            <PaymentAmount>0</PaymentAmount>\\n            <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n            <InvoiceDiscount>0</InvoiceDiscount>\\n            <UsageEndTime>2020-03-11 08:00:00</UsageEndTime>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <Item>SubscriptionOrder</Item>\\n            <PretaxGrossAmount>0</PretaxGrossAmount>\\n            <Currency>CNY</Currency>\\n            <CommodityCode>rds</CommodityCode>\\n            <UsageStartTime>2020-03-11 07:00:00</UsageStartTime>\\n            <AdjustAmount>0</AdjustAmount>\\n            <PaymentTransactionID>2O3AADJFEAF2PDKSFAMFCB11918</PaymentTransactionID>\\n            <Status>PayFinish</Status>\\n            <DeductedByCoupons>0</DeductedByCoupons>\\n            <RoundDownDiscount>0</RoundDownDiscount>\\n            <ProductDetail>关系型数据库RDS(包月)</ProductDetail>\\n            <ProductCode>rds</ProductCode>\\n            <ProductType>rds</ProductType>\\n            <OutstandingAmount>0</OutstandingAmount>\\n            <BizType>trusteeship</BizType>\\n            <PipCode>rds</PipCode>\\n            <OwnerID>3532535235</OwnerID>\\n            <PretaxAmount>100</PretaxAmount>\\n            <BillAccountName>test@test.aliyunid.com</BillAccountName>\\n            <RecordID>2020xxxx5912</RecordID>\\n            <CashAmount>0</CashAmount>\\n            <PretaxAmountLocal>0</PretaxAmountLocal>\\n        </Item>\\n    </Items>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '结算账单查询服务',
      'summary' => '查询用户某个账期内结算账单。支持账单条目超过50000条的国内账号。',
      'description' => '- 当月数据查询结果仅供参考，不作为对账依据；当月最终账单在次月2日12点后支持查看/导出（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。
- 账单数据相对于实际费用消耗延迟5小时更新。
- 账单数据中对于历史账期“未结清”状态的账单，还款后延迟5个小时更新为已结清；对于当月“未结清”状态的账单，还款后于次月2日12点出账时更新为已结清。
- 当前API支持优雅退避，请求速率为600/60(s)。
-   单用户限流10笔/秒，如遇超时，请重试。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryInstanceBill' => 
    array (
      'summary' => '查询用户某个账期内所有商品实例或计费项的消费汇总。API已升级为DescribeInstanceBill，此API不再提供50000行以后数据的查询。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账期YYYY－MM。仅支持最近18个月账期。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-03',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。当ProductCode为云市场产品code时，此参数必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。

>必须和**ProductCode**参数一起使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayAsYouGo',
          ),
        ),
        4 => 
        array (
          'name' => 'IsBillingItem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否按照计费项维度拉取数据。
- false。与“费用中心-费用账单-账单明细-实例”账单一致。
- true。与“费用中心-费用账单-账单明细-计费项”账单一致。

默认 false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数量，默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'IsHideZeroCharge',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据原价（**PretaxGrossAmount**）和应付（**PretaxAmount**）是否都为0做过滤。取值：
- false。
- true。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'BillingDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，仅当**Granularity**为DAILY时必填，格式为YYYY-MM-DD。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-03',
          ),
        ),
        9 => 
        array (
          'name' => 'Granularity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询账单的颗粒度。取值：
- MONTHLY：月。与“费用中心-费用账单-账单明细-账期”账单一致。
- DAILY：日。与“费用中心-费用账单-账单明细-按天”账单一致。

选择DAILY需指定**BillingDate**。',
            'type' => 'string',
            'required' => false,
            'example' => 'MONTHLY',
          ),
        ),
        10 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '122',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账单日期，格式：YYYY－MM。',
                    'type' => 'string',
                    'example' => '2020-03',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185xxxx3489',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '账单详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BillingDate' => 
                            array (
                              'description' => '账单日期，仅当Granularity为DAILY时有值，格式为YYYY-MM-DD。',
                              'type' => 'string',
                              'example' => '2020-03',
                            ),
                            'InstanceConfig' => 
                            array (
                              'description' => '实例详细配置。',
                              'type' => 'string',
                              'example' => 'CPU:12',
                            ),
                            'InternetIP' => 
                            array (
                              'description' => '公网IP。',
                              'type' => 'string',
                              'example' => '34.xx.x.x',
                            ),
                            'Item' => 
                            array (
                              'description' => '账单类型：
- SubscriptionOrder （预付订单）。
- PayAsYouGoBill （后付账单）。
- Refund （退款）。
- Adjustment （调账）。',
                              'type' => 'string',
                              'example' => 'PayAsYouGoBill',
                            ),
                            'Tag' => 
                            array (
                              'description' => '标签。',
                              'type' => 'string',
                              'example' => 'tag',
                            ),
                            'InstanceID' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => 'i-kjhdskjgshfdlkjfdh',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种，取值：
- CNY。
- USD。
- JPY。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '<props="china">代金券抵扣。</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。

> 必须和ProductCode参数一起使用。',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'InstanceSpec' => 
                            array (
                              'description' => '实例规格。',
                              'type' => 'string',
                              'example' => 'ecs.sn1ne.3xlarge',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BillingItem' => 
                            array (
                              'description' => '计费项。仅当IsBillingItem=true有值。',
                              'type' => 'string',
                              'example' => '其他',
                            ),
                            'Region' => 
                            array (
                              'description' => '地域。',
                              'type' => 'string',
                              'example' => '杭州',
                            ),
                            'OutstandingAmount' => 
                            array (
                              'description' => '<props="china">未结清金额</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CostUnit' => 
                            array (
                              'description' => '财务单元。',
                              'type' => 'string',
                              'example' => '未分配',
                            ),
                            'ListPriceUnit' => 
                            array (
                              'description' => '单价单位, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => '元',
                            ),
                            'ResourceGroup' => 
                            array (
                              'description' => '资源组。',
                              'type' => 'string',
                              'example' => '默认资源组',
                            ),
                            'PipCode' => 
                            array (
                              'description' => '产品Code，与费用中心账单产品Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ServicePeriodUnit' => 
                            array (
                              'description' => '服务周期单位',
                              'type' => 'string',
                              'example' => '秒',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '应付金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品Code，与费用中心产品明细Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'AdjustAmount' => 
                            array (
                              'description' => '信用额度退款抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'NickName' => 
                            array (
                              'description' => '实例昵称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'ProductDetail' => 
                            array (
                              'description' => '产品明细。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'Usage' => 
                            array (
                              'description' => '用量, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => '100',
                            ),
                            'IntranetIP' => 
                            array (
                              'description' => '内网IP。',
                              'type' => 'string',
                              'example' => '192.xx.xx.xx',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '子账号AccountID（多账号代付场景）。',
                              'type' => 'string',
                              'example' => '169***013',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '<props="china">储值卡抵扣。</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'UsageUnit' => 
                            array (
                              'description' => '用量单位, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => 'GB',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '<props="china">现金支付。</props>
',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'DeductedByResourcePackage' => 
                            array (
                              'description' => '资源包抵扣。',
                              'type' => 'string',
                              'example' => 'NULL',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ServicePeriod' => 
                            array (
                              'description' => '服务周期。',
                              'type' => 'string',
                              'example' => '10',
                            ),
                            'Zone' => 
                            array (
                              'description' => '可用区。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou-h',
                            ),
                            'ListPrice' => 
                            array (
                              'description' => '单价, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => '100',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CashAmount' => 
                            array (
                              'description' => '现金支付（不包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'BillingType' => 
                            array (
                              'description' => '计费方式。',
                              'type' => 'string',
                              'example' => '其它',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"BillingCycle\\": \\"2020-03\\",\\n    \\"AccountID\\": \\"185xxxx3489\\",\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 2,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"BillingDate\\": \\"2020-03\\",\\n          \\"InstanceConfig\\": \\"CPU:12\\",\\n          \\"InternetIP\\": \\"34.xx.x.x\\",\\n          \\"Item\\": \\"PayAsYouGoBill\\",\\n          \\"Tag\\": \\"tag\\",\\n          \\"InstanceID\\": \\"i-kjhdskjgshfdlkjfdh\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"DeductedByCashCoupons\\": 0,\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"InstanceSpec\\": \\"ecs.sn1ne.3xlarge\\",\\n          \\"DeductedByCoupons\\": 0,\\n          \\"BillingItem\\": \\"其他\\",\\n          \\"Region\\": \\"杭州\\",\\n          \\"OutstandingAmount\\": 0,\\n          \\"CostUnit\\": \\"未分配\\",\\n          \\"ListPriceUnit\\": \\"元\\",\\n          \\"ResourceGroup\\": \\"默认资源组\\",\\n          \\"PipCode\\": \\"rds\\",\\n          \\"ServicePeriodUnit\\": \\"秒\\",\\n          \\"PretaxAmount\\": 0,\\n          \\"CommodityCode\\": \\"rds\\",\\n          \\"ProductName\\": \\"云数据库RDS\\",\\n          \\"AdjustAmount\\": 0,\\n          \\"NickName\\": \\"test\\",\\n          \\"ProductDetail\\": \\"云数据库RDS\\",\\n          \\"Usage\\": \\"100\\",\\n          \\"IntranetIP\\": \\"192.xx.xx.xx\\",\\n          \\"OwnerID\\": \\"169***013\\",\\n          \\"DeductedByPrepaidCard\\": 0,\\n          \\"UsageUnit\\": \\"GB\\",\\n          \\"PaymentAmount\\": 0,\\n          \\"InvoiceDiscount\\": 0,\\n          \\"DeductedByResourcePackage\\": \\"NULL\\",\\n          \\"ProductType\\": \\"rds\\",\\n          \\"ServicePeriod\\": \\"10\\",\\n          \\"Zone\\": \\"cn-hangzhou-h\\",\\n          \\"ListPrice\\": \\"100\\",\\n          \\"PretaxGrossAmount\\": 0,\\n          \\"CashAmount\\": 0,\\n          \\"ProductCode\\": \\"rds\\",\\n          \\"BillingType\\": \\"其它\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryInstanceBillResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>79EE7556-0CFD-44EB-9CD6-B3B526E3A85F</RequestId>\\n    <Data>\\n        <BillingCycle>2020-03</BillingCycle>\\n        <TotalCount>2</TotalCount>\\n        <AccountID>18xxxxx3489</AccountID>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <Items>\\n            <Item>\\n                <InstanceSpec>rds.mysql.s3.large</InstanceSpec>\\n                <ProductName>云数据库RDS</ProductName>\\n                <InstanceID>rm-bp1xxxxxxxe</InstanceID>\\n                <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n                <ListPriceUnit/>\\n                <BillingDate/>\\n                <ListPrice/>\\n                <PaymentAmount>0.01</PaymentAmount>\\n                <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n                <InvoiceDiscount>11447.99</InvoiceDiscount>\\n                <SubscriptionType>Subscription</SubscriptionType>\\n                <Item>SubscriptionOrder</Item>\\n                <PretaxGrossAmount>11448</PretaxGrossAmount>\\n                <InstanceConfig>数据库类型:MySQL;实例规格:rds.mysql.s3.large;存储:5;内存:8192</InstanceConfig>\\n                <Currency>CNY</Currency>\\n                <CostUnit>未分配</CostUnit>\\n                <ResourceGroup>默认资源组</ResourceGroup>\\n                <BillingType>其它</BillingType>\\n                <Usage/>\\n                <DeductedByCoupons>0</DeductedByCoupons>\\n                <ProductDetail>关系型数据库RDS(包月)</ProductDetail>\\n                <ProductCode>rds</ProductCode>\\n                <Zone>cn-hangzhou-b</Zone>\\n                <ProductType>rds</ProductType>\\n                <OutstandingAmount>0</OutstandingAmount>\\n                <BillingItem/>\\n                <NickName/>\\n                <IntranetIP/>\\n                <ServicePeriod>31583763</ServicePeriod>\\n                <ServicePeriodUnit>秒</ServicePeriodUnit> \\n                <DeductedByResourcePackage/>\\n                <UsageUnit/>\\n                <OwnerID>18576xxxxx489</OwnerID>\\n                <PretaxAmount>0.01</PretaxAmount>\\n                <InternetIP/>\\n                <Region>华东1（杭州）</Region>\\n                <Tag/>\\n            </Item>\\n        </Items>\\n        <AccountName>test@test.aliyunid.com</AccountName>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryInstanceBillResponse>","errorExample":""}]',
      'title' => '实例账单查询服务',
      'description' => '## API描述

在调用本接口时，请注意：
- 实例账单API已升级，请使用新版API：[DescribeInstanceBill](~~209402~~)。此API不再提供50000行以后数据的查询。
- 实例账单是根据账单数据拆分生成，一般会有一天延迟。
- 实例信息在账期内会变化，月汇总的实例Config和Spec对应记录生成时间信息，如需详情可参考对应明细账单。
- 云通信产品可查询从2020年6月以后的数据; 万网产品可查询从2020年11月以后的数据。
<props="intl">
- 国际站服务地址请选择新加坡。</props>',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstanceBill' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账期YYYY－MM。仅支持最近18个月账期。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-03',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayAsYouGo',
          ),
        ),
        4 => 
        array (
          'name' => 'IsBillingItem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否按照计费项维度拉取数据。

- false。与费用中心-费用账单-账单明细-实例账单一致。
- true。与费用中心-费用账单-账单明细-计费项账单一致。

>默认 false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCm',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'IsHideZeroCharge',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据原价（PretaxGrossAmount）和应付（PretaxAmount）是否都为0做过滤。取值：
- false。
- true。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'BillingDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，仅当Granularity为DAILY时必填，格式为YYYY-MM-DD。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-02',
          ),
        ),
        9 => 
        array (
          'name' => 'Granularity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询账单的颗粒度。取值如下：

- MONTHLY：月。与费用中心-费用账单-账单明细-账期账单一致。
- DAILY：日。与费用中心-费用账单-账单明细-按天账单一致。

> 选择DAILY需指定BillingDate。',
            'type' => 'string',
            'required' => false,
            'example' => 'MONTHLY',
          ),
        ),
        10 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '122',
          ),
        ),
        11 => 
        array (
          'name' => 'InstanceID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        12 => 
        array (
          'name' => 'PipCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品Code，与费用中心账单产品Code一致。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。下次调用时，需要将此设置到入参NextToken中。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4KCm',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账单日期，格式：YYYY－MM。',
                    'type' => 'string',
                    'example' => '2020-03',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '122',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'description' => '账单详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BillingDate' => 
                        array (
                          'description' => '账单日期，仅当Granularity为DAILY时有值，格式为YYYY-MM-DD。',
                          'type' => 'string',
                          'example' => '2020-03-20',
                        ),
                        'InstanceConfig' => 
                        array (
                          'description' => '实例详细配置。',
                          'type' => 'string',
                          'example' => 'CPU：12',
                        ),
                        'InternetIP' => 
                        array (
                          'description' => '公网IP。',
                          'type' => 'string',
                          'example' => '34.xx.x.x	',
                        ),
                        'Item' => 
                        array (
                          'description' => '账单类型：
- SubscriptionOrder （预付订单）。
- PayAsYouGoBill （后付账单）。
- Refund （退款）。
- Adjustment （调账）。',
                          'type' => 'string',
                          'example' => 'PayAsYouGoBill',
                        ),
                        'Tag' => 
                        array (
                          'description' => '资源标签。',
                          'type' => 'string',
                          'example' => 'key:testKey value:testValue; key:testKey1 value:testValues1',
                        ),
                        'InstanceID' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-dadada',
                        ),
                        'Currency' => 
                        array (
                          'description' => '币种，取值：

- CNY。
- USD。
- JPY。',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'BillAccountName' => 
                        array (
                          'description' => '账单所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com',
                        ),
                        'DeductedByCashCoupons' => 
                        array (
                          'description' => '代金券抵扣。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：

- Subscription：预付费。
- PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'PayAsYouGo',
                        ),
                        'BizType' => 
                        array (
                          'description' => '业务类型。',
                          'type' => 'string',
                          'example' => 'trusteeship',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '实例规格。',
                          'type' => 'string',
                          'example' => 'ecs.sn1ne.3xlarge	',
                        ),
                        'DeductedByCoupons' => 
                        array (
                          'description' => '优惠券优惠金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'BillingItem' => 
                        array (
                          'description' => '计费项。仅当IsBillingItem=true有值。',
                          'type' => 'string',
                          'example' => '带宽',
                        ),
                        'BillingItemCode' => 
                        array (
                          'description' => '计费项代码。',
                          'type' => 'string',
                          'example' => 'disk',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => '杭州',
                        ),
                        'OutstandingAmount' => 
                        array (
                          'description' => '未结清金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'CostUnit' => 
                        array (
                          'description' => '财务单元。',
                          'type' => 'string',
                          'example' => '未分配	',
                        ),
                        'ListPriceUnit' => 
                        array (
                          'description' => '单价单位, 仅当isBillingItem为true时有效。',
                          'type' => 'string',
                          'example' => '元',
                        ),
                        'ResourceGroup' => 
                        array (
                          'description' => '资源组。',
                          'type' => 'string',
                          'example' => '默认资源组	',
                        ),
                        'PipCode' => 
                        array (
                          'description' => '产品Code，与费用中心账单产品Code一致。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ServicePeriodUnit' => 
                        array (
                          'description' => '服务时长单位。',
                          'type' => 'string',
                          'example' => '秒',
                        ),
                        'PretaxAmount' => 
                        array (
                          'description' => '应付金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'CommodityCode' => 
                        array (
                          'description' => '商品Code，与费用中心产品明细Code一致。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '云数据库RDS	',
                        ),
                        'AdjustAmount' => 
                        array (
                          'description' => '信用额度退款抵扣。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'NickName' => 
                        array (
                          'description' => '实例昵称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ProductDetail' => 
                        array (
                          'description' => '产品明细。',
                          'type' => 'string',
                          'example' => '云数据库RDS	',
                        ),
                        'Usage' => 
                        array (
                          'description' => '用量。

> 仅当isBillingItem为true时有效。用量数据为该周期内所有账单的用量总和并非客户的实际购买量。如使用了1G的存储，每小时出账，则每小时用量为1G，按天汇总的账单用量为1G*24=24G。',
                          'type' => 'string',
                          'example' => '100',
                        ),
                        'IntranetIP' => 
                        array (
                          'description' => '内网IP。',
                          'type' => 'string',
                          'example' => '192.xx.xx.xx',
                        ),
                        'OwnerID' => 
                        array (
                          'description' => '资源Owner账号AccountID（多账号代付场景）。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'DeductedByPrepaidCard' => 
                        array (
                          'description' => '储值卡抵扣。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'UsageUnit' => 
                        array (
                          'description' => '用量单位, 仅当isBillingItem为true时有效。',
                          'type' => 'string',
                          'example' => 'GB',
                        ),
                        'BillAccountID' => 
                        array (
                          'description' => '账单所属账号ID。',
                          'type' => 'string',
                          'example' => '122',
                        ),
                        'PaymentAmount' => 
                        array (
                          'description' => '现金支付（含信用额度退款抵扣）。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'InvoiceDiscount' => 
                        array (
                          'description' => '优惠金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'DeductedByResourcePackage' => 
                        array (
                          'description' => '资源包抵扣, 仅当isBillingItem为true时有效。',
                          'type' => 'string',
                          'example' => '0.1',
                        ),
                        'ProductType' => 
                        array (
                          'description' => '产品类型。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ServicePeriod' => 
                        array (
                          'description' => '服务时长。',
                          'type' => 'string',
                          'example' => '3600',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区。',
                          'type' => 'string',
                          'example' => '杭州1',
                        ),
                        'ListPrice' => 
                        array (
                          'description' => '单价, 仅当isBillingItem为true时有效。',
                          'type' => 'string',
                          'example' => '100',
                        ),
                        'PretaxGrossAmount' => 
                        array (
                          'description' => '原始金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'CashAmount' => 
                        array (
                          'description' => '现金支付（不包含信用额度退款抵扣）。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'BillingType' => 
                        array (
                          'description' => '计费方式。',
                          'type' => 'string',
                          'example' => '其它',
                        ),
                        'ItemName' => 
                        array (
                          'description' => '项目名称。',
                          'type' => 'string',
                          'example' => 'iZ28bycvyb4Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4KCm\\",\\n    \\"BillingCycle\\": \\"2020-03\\",\\n    \\"MaxResults\\": 20,\\n    \\"AccountID\\": \\"122\\",\\n    \\"TotalCount\\": 20,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": [\\n      {\\n        \\"BillingDate\\": \\"2020-03-20\\",\\n        \\"InstanceConfig\\": \\"CPU：12\\",\\n        \\"InternetIP\\": \\"34.xx.x.x\\\\t\\",\\n        \\"Item\\": \\"PayAsYouGoBill\\",\\n        \\"Tag\\": \\"key:testKey value:testValue; key:testKey1 value:testValues1\\",\\n        \\"InstanceID\\": \\"i-dadada\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"BillAccountName\\": \\"test@test.aliyunid.com\\",\\n        \\"DeductedByCashCoupons\\": 0.1,\\n        \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n        \\"BizType\\": \\"trusteeship\\",\\n        \\"InstanceSpec\\": \\"ecs.sn1ne.3xlarge\\\\t\\",\\n        \\"DeductedByCoupons\\": 0.1,\\n        \\"BillingItem\\": \\"带宽\\",\\n        \\"BillingItemCode\\": \\"disk\\",\\n        \\"Region\\": \\"杭州\\",\\n        \\"OutstandingAmount\\": 0.1,\\n        \\"CostUnit\\": \\"未分配\\\\t\\",\\n        \\"ListPriceUnit\\": \\"元\\",\\n        \\"ResourceGroup\\": \\"默认资源组\\\\t\\",\\n        \\"PipCode\\": \\"rds\\",\\n        \\"ServicePeriodUnit\\": \\"秒\\",\\n        \\"PretaxAmount\\": 0.1,\\n        \\"CommodityCode\\": \\"rds\\",\\n        \\"ProductName\\": \\"云数据库RDS\\\\t\\",\\n        \\"AdjustAmount\\": 0,\\n        \\"NickName\\": \\"test\\",\\n        \\"ProductDetail\\": \\"云数据库RDS\\\\t\\",\\n        \\"Usage\\": \\"100\\",\\n        \\"IntranetIP\\": \\"192.xx.xx.xx\\",\\n        \\"OwnerID\\": \\"123\\",\\n        \\"DeductedByPrepaidCard\\": 0.1,\\n        \\"UsageUnit\\": \\"GB\\",\\n        \\"BillAccountID\\": \\"122\\",\\n        \\"PaymentAmount\\": 0.1,\\n        \\"InvoiceDiscount\\": 0.1,\\n        \\"DeductedByResourcePackage\\": \\"0.1\\",\\n        \\"ProductType\\": \\"rds\\",\\n        \\"ServicePeriod\\": \\"3600\\",\\n        \\"Zone\\": \\"杭州1\\",\\n        \\"ListPrice\\": \\"100\\",\\n        \\"PretaxGrossAmount\\": 0.1,\\n        \\"CashAmount\\": 0,\\n        \\"ProductCode\\": \\"rds\\",\\n        \\"BillingType\\": \\"其它\\",\\n        \\"ItemName\\": \\"iZ28bycvyb4Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>79EE7556-0CFD-44EB-9CD6-B3B526E3A85F</RequestId>\\n<Message>Successful!</Message>\\n<Data>\\n    <TotalCount>20</TotalCount>\\n    <BillingCycle>2020-03</BillingCycle>\\n    <AccountID>122</AccountID>\\n    <NextToken>CAESEgoQCg4KCmdtdF9jcmVhdGUQARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U</NextToken>\\n    <MaxResults>20</MaxResults>\\n    <AccountName>test@test.aliyunid.com</AccountName>\\n    <Items>\\n        <InstanceSpec>ecs.sn1ne.3xlarge\\t</InstanceSpec>\\n        <ProductName>云数据库RDS\\t</ProductName>\\n        <InstanceID>i-dadada</InstanceID>\\n        <BillAccountID>122</BillAccountID>\\n        <DeductedByCashCoupons>0.1</DeductedByCashCoupons>\\n        <ListPriceUnit>元</ListPriceUnit>\\n        <BillingDate>2020-03-20</BillingDate>\\n        <ListPrice>100</ListPrice>\\n        <PaymentAmount>0.1</PaymentAmount>\\n        <DeductedByPrepaidCard>0.1</DeductedByPrepaidCard>\\n        <InvoiceDiscount>0.1</InvoiceDiscount>\\n        <SubscriptionType>PayAsYouGo</SubscriptionType>\\n        <Item>PayAsYouGoBill</Item>\\n        <PretaxGrossAmount>0.1</PretaxGrossAmount>\\n        <InstanceConfig>CPU：12</InstanceConfig>\\n        <Currency>CNY</Currency>\\n        <CommodityCode>rds</CommodityCode>\\n        <CostUnit>未分配\\t</CostUnit>\\n        <AdjustAmount>0</AdjustAmount>\\n        <ResourceGroup>默认资源组\\t</ResourceGroup>\\n        <BillingType>其它</BillingType>\\n        <Usage>100</Usage>\\n        <DeductedByCoupons>0.1</DeductedByCoupons>\\n        <ProductDetail>云数据库RDS\\t</ProductDetail>\\n        <ProductCode>rds</ProductCode>\\n        <Zone>杭州1</Zone>\\n        <ProductType>rds</ProductType>\\n        <OutstandingAmount>0.1</OutstandingAmount>\\n        <BizType>trusteeship</BizType>\\n        <BillingItem>带宽</BillingItem>\\n        <NickName>test</NickName>\\n        <IntranetIP>192.xx.xx.xx</IntranetIP>\\n        <PipCode>rds</PipCode>\\n        <ServicePeriodUnit>秒</ServicePeriodUnit>\\n        <ServicePeriod>3600</ServicePeriod>\\n        <DeductedByResourcePackage>0.1</DeductedByResourcePackage>\\n        <UsageUnit>GB</UsageUnit>\\n        <OwnerID>123</OwnerID>\\n        <PretaxAmount>0.1</PretaxAmount>\\n        <InternetIP>34.xx.x.x\\t</InternetIP>\\n        <Region>杭州</Region>\\n        <BillAccountName>test@test.aliyunid.com</BillAccountName>\\n        <Tag>key:testKey value:testValue; key:testKey1 value:testValues1</Tag>\\n        <CashAmount>0</CashAmount>\\n    </Items>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询实例账单服务',
      'summary' => '查询用户某个账期内所有商品实例或计费项的消费汇总。',
      'description' => '- 当月数据查询结果仅供参考，不作为对账依据；当月最终账单在次月3日12点后支持查看/导出（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。
- 当月账单数据中不包含未结算（未出账，累账中）的后付费数据。
- 支持近18个月数据。 
-  账单数据相对于实际费用消耗延迟24小时更新，其中实例ID相关的信息（ 实例配置，实例规格，实例昵称，资源组，公网IP，私网IP，可用区）延迟48小时更新。  
-  账单数据不支持提供分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用（如需统计含分拆项数据，请前往分账账单）。
-  对于云通信产品，仅支持查询2020年6月及以后的明细数据，万网产品（包括域名、商标等）仅支持查询2020年11月及以后的明细数据。
- 单用户限流10笔/秒，如遇超时，请重试。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryInstanceGaapCost' => 
    array (
      'summary' => '该API不再更新。请前往使用如下API获取对应分摊成本：
DescribeInstanceAmortizedCostByAmortizationPeriod - 查询实例摊销月摊销成本；
DescribeProductAmortizedCostByAmortizationPeriod- 查询产品摊销月摊销成本；
DescribeInstanceAmortizedCostByConsumePeriod- 查询实例账期月摊销成本；
DescribeProductAmortizedCostByConsumePeriod- 查询产品账期月摊销成本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数量，默认值：20，最大值：100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-03',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        5 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayAsYouGo',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求数据。',
                'type' => 'string',
                'example' => 'CCBB1BB9-22F1-4177-867B-7A75D665B488',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'HostId' => 
                  array (
                    'description' => '主机ID。',
                    'type' => 'string',
                    'example' => '1.1.1.1',
                  ),
                  'Modules' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Module' => 
                      array (
                        'description' => '费用信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GaapDeductedByCashCoupons' => 
                            array (
                              'description' => '已分摊代金券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'MonthGaapPretaxAmount' => 
                            array (
                              'description' => '本月分摊优惠后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'SubOrderId' => 
                            array (
                              'description' => '子订单号。',
                              'type' => 'string',
                              'example' => '12434345',
                            ),
                            'Region' => 
                            array (
                              'description' => '地域。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou',
                            ),
                            'OrderType' => 
                            array (
                              'description' => '订单类型：
- New（新购）。
- Renewal（续费）。
- Upgrade（升级）。
- Degrade（降级）。
',
                              'type' => 'string',
                              'example' => 'New',
                            ),
                            'MonthGaapDeductedByPrepaidCard' => 
                            array (
                              'description' => '本月分摊储值卡抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'UnallocatedDeductedByCashCoupons' => 
                            array (
                              'description' => '未分摊代金券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'PretaxAmountLocal' => 
                            array (
                              'description' => '本币币种已分摊优惠后金额（国际）。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'BillingCycle' => 
                            array (
                              'description' => '账期YYYY－MM。',
                              'type' => 'string',
                              'example' => '2020-03',
                            ),
                            'PayerAccount' => 
                            array (
                              'description' => '付款人账户。',
                              'type' => 'string',
                              'example' => '23534534',
                            ),
                            'MonthGaapPretaxAmountLocal' => 
                            array (
                              'description' => '本币币种对应的本月分摊优惠后金额（国际）。',
                              'type' => 'string',
                              'example' => '0.99',
                            ),
                            'AccountingUnit' => 
                            array (
                              'description' => '财务核算单元。为预留字段，暂不支持。',
                              'type' => 'string',
                              'example' => '无',
                            ),
                            'GaapPretaxAmountLocal' => 
                            array (
                              'description' => '本币币种已分摊优惠后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'UnallocatedDeductedByPrepaidCard' => 
                            array (
                              'description' => '未分摊储值卡抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '现金。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'MonthGaapPretaxGrossAmount' => 
                            array (
                              'description' => '本月分摊原始金额。',
                              'type' => 'string',
                              'example' => '0.99',
                            ),
                            'BillType' => 
                            array (
                              'description' => '账单类型：
- SubscriptionOrder （预付订单）。
- PayAsYouGoBill （后付账单）。
- Refund （退款）。
- Adjustment （调账）。',
                              'type' => 'string',
                              'example' => 'SubscriptionOrder',
                            ),
                            'PayTime' => 
                            array (
                              'description' => '支付时间。',
                              'type' => 'string',
                              'example' => '2018-06-15 15:59:57',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'string',
                              'example' => '123',
                            ),
                            'OrderId' => 
                            array (
                              'description' => '订单号。',
                              'type' => 'string',
                              'example' => '213123213123',
                            ),
                            'UnallocatedPricingDiscount' => 
                            array (
                              'description' => '未分摊询价优惠。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'MonthGaapDeductedByCashCoupons' => 
                            array (
                              'description' => '本月分摊代金券抵扣。',
                              'type' => 'string',
                              'example' => '0.75',
                            ),
                            'UnallocatedPretaxGrossAmount' => 
                            array (
                              'description' => '未分摊原始金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'InstanceID' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => 'OSSBAG-cn-0xl0xxxxxx',
                            ),
                            'Tag' => 
                            array (
                              'description' => '标签。',
                              'type' => 'string',
                              'example' => 'tag',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种。取值：
- CNY。
- USD。
- JPY。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'GaapDeductedByCoupons' => 
                            array (
                              'description' => '已分摊优惠券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '代金券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'GaapDeductedByPrepaidCard' => 
                            array (
                              'description' => '已分摊储值卡抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'GaapPaymentAmount' => 
                            array (
                              'description' => '已分摊现金。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'UnallocatedPretaxAmountLocal' => 
                            array (
                              'description' => '本币币种未分摊优惠后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'MonthGaapPricingDiscount' => 
                            array (
                              'description' => '本月分摊询价优惠。',
                              'type' => 'string',
                              'example' => '0,.25',
                            ),
                            'PricingDiscount' => 
                            array (
                              'description' => '询价优惠。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'GaapPricingDiscount' => 
                            array (
                              'description' => '已分摊询价优惠。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'ResourceGroup' => 
                            array (
                              'description' => '资源组。',
                              'type' => 'string',
                              'example' => '默认资源组',
                            ),
                            'UnallocatedDeductedByCoupons' => 
                            array (
                              'description' => '未分摊优惠券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '优惠后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'UnallocatedPretaxAmount' => 
                            array (
                              'description' => '未分摊优惠后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'GaapPretaxGrossAmount' => 
                            array (
                              'description' => '已分摊原始金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'UnallocatedPaymentAmount' => 
                            array (
                              'description' => '未分摊现金。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'PaymentCurrency' => 
                            array (
                              'description' => '支付币种（国际）。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '所有者ID。',
                              'type' => 'string',
                              'example' => '123213123123',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '储值卡抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'GaapPretaxAmount' => 
                            array (
                              'description' => '已分摊优惠后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'MonthGaapDeductedByCoupons' => 
                            array (
                              'description' => '本月分摊优惠券抵扣。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'MonthGaapPaymentAmount' => 
                            array (
                              'description' => '本月分摊现金。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'UsageEndDate' => 
                            array (
                              'description' => '服务结束时间。',
                              'type' => 'string',
                              'example' => '2019-05-01 00:00:00',
                            ),
                            'UsageStartDate' => 
                            array (
                              'description' => '服务起始时间。',
                              'type' => 'string',
                              'example' => '2019-04-01 00:00:00',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Absent some mandatory parameter for this request.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'This request contain some invalid parameter',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          5 => 
          array (
            'errorCode' => 'DurationInvalid',
            'errorMessage' => 'Parameter duration can only be positive integer.',
          ),
          6 => 
          array (
            'errorCode' => 'ProductNotFound',
            'errorMessage' => 'Product not found.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBillingCycle',
            'errorMessage' => 'BillingCycle not Invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'ProdCodeNotFind',
            'errorMessage' => 'Product code not find.	',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"CCBB1BB9-22F1-4177-867B-7A75D665B488\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 20,\\n    \\"HostId\\": \\"1.1.1.1\\",\\n    \\"Modules\\": {\\n      \\"Module\\": [\\n        {\\n          \\"GaapDeductedByCashCoupons\\": \\"0\\",\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"MonthGaapPretaxAmount\\": \\"0\\",\\n          \\"DeductedByCoupons\\": \\"0\\",\\n          \\"SubOrderId\\": \\"12434345\\",\\n          \\"Region\\": \\"cn-hangzhou\\",\\n          \\"OrderType\\": \\"New\\",\\n          \\"MonthGaapDeductedByPrepaidCard\\": \\"0\\",\\n          \\"UnallocatedDeductedByCashCoupons\\": \\"0\\",\\n          \\"PretaxAmountLocal\\": \\"0\\",\\n          \\"BillingCycle\\": \\"2020-03\\",\\n          \\"PayerAccount\\": \\"23534534\\",\\n          \\"MonthGaapPretaxAmountLocal\\": \\"0.99\\",\\n          \\"AccountingUnit\\": \\"无\\",\\n          \\"GaapPretaxAmountLocal\\": \\"0\\",\\n          \\"UnallocatedDeductedByPrepaidCard\\": \\"0\\",\\n          \\"ProductType\\": \\"rds\\",\\n          \\"PaymentAmount\\": \\"0\\",\\n          \\"MonthGaapPretaxGrossAmount\\": \\"0.99\\",\\n          \\"BillType\\": \\"SubscriptionOrder\\",\\n          \\"PayTime\\": \\"2018-06-15 15:59:57\\",\\n          \\"PretaxGrossAmount\\": \\"123\\",\\n          \\"OrderId\\": \\"213123213123\\",\\n          \\"UnallocatedPricingDiscount\\": \\"0\\",\\n          \\"MonthGaapDeductedByCashCoupons\\": \\"0.75\\",\\n          \\"UnallocatedPretaxGrossAmount\\": \\"0\\",\\n          \\"InstanceID\\": \\"OSSBAG-cn-0xl0xxxxxx\\",\\n          \\"Tag\\": \\"tag\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"GaapDeductedByCoupons\\": \\"0\\",\\n          \\"DeductedByCashCoupons\\": \\"0\\",\\n          \\"GaapDeductedByPrepaidCard\\": \\"0\\",\\n          \\"GaapPaymentAmount\\": \\"0\\",\\n          \\"UnallocatedPretaxAmountLocal\\": \\"0\\",\\n          \\"MonthGaapPricingDiscount\\": \\"0,.25\\",\\n          \\"PricingDiscount\\": \\"1\\",\\n          \\"GaapPricingDiscount\\": \\"0\\",\\n          \\"ResourceGroup\\": \\"默认资源组\\",\\n          \\"UnallocatedDeductedByCoupons\\": \\"0\\",\\n          \\"PretaxAmount\\": \\"0\\",\\n          \\"UnallocatedPretaxAmount\\": \\"0\\",\\n          \\"GaapPretaxGrossAmount\\": \\"0\\",\\n          \\"UnallocatedPaymentAmount\\": \\"0\\",\\n          \\"PaymentCurrency\\": \\"CNY\\",\\n          \\"OwnerID\\": \\"123213123123\\",\\n          \\"DeductedByPrepaidCard\\": \\"0\\",\\n          \\"GaapPretaxAmount\\": \\"0\\",\\n          \\"MonthGaapDeductedByCoupons\\": \\"0\\",\\n          \\"MonthGaapPaymentAmount\\": \\"0\\",\\n          \\"UsageEndDate\\": \\"2019-05-01 00:00:00\\",\\n          \\"UsageStartDate\\": \\"2019-04-01 00:00:00\\",\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryInstanceGaapCostResponse>\\n    <Data>\\n        <TotalCount>2</TotalCount>\\n        <Modules>\\n            <Module>\\n                <PayerAccount>null</PayerAccount>\\n                <GaapDeductedByCashCoupons>0</GaapDeductedByCashCoupons>\\n                <PricingDiscount>0</PricingDiscount>\\n                <MonthGaapPretaxAmount>0.74</MonthGaapPretaxAmount>\\n                <MonthGaapDeductedByCoupons>0</MonthGaapDeductedByCoupons>\\n                <PretaxAmount>0</PretaxAmount>\\n                <UnallocatedPaymentAmount>0</UnallocatedPaymentAmount>\\n                <UnallocatedPretaxGrossAmount>0</UnallocatedPretaxGrossAmount>\\n                <UnallocatedPretaxAmount>0</UnallocatedPretaxAmount>\\n                <UnallocatedPricingDiscount>0</UnallocatedPricingDiscount>\\n                <PayTime>2018-06-15 14:06:53</PayTime>\\n                <PaymentCurrency>CNY</PaymentCurrency>\\n                <ProductType>ossbag</ProductType>\\n                <UnallocatedDeductedByCoupons>0</UnallocatedDeductedByCoupons>\\n                <OrderType>Renewal</OrderType>\\n                <UnallocatedPretaxAmountLocal>0</UnallocatedPretaxAmountLocal>\\n                <PretaxGrossAmount>0</PretaxGrossAmount>\\n                <Currency>CNY</Currency>\\n                <GaapPretaxAmountLocal>0</GaapPretaxAmountLocal>\\n                <GaapPaymentAmount>0</GaapPaymentAmount>\\n                <SubscriptionType>Subscription</SubscriptionType>\\n                <BillingCycle>2019-04</BillingCycle>\\n                <ProductCode>flowpack</ProductCode>\\n                <InstanceID>OSSBAG-cn-0xl0njdtx002</InstanceID>\\n                <PretaxAmountLocal>0</PretaxAmountLocal>\\n                <GaapDeductedByCoupons>0</GaapDeductedByCoupons>\\n                <GaapPretaxAmount>0</GaapPretaxAmount>\\n                <OrderId>202143356070333</OrderId>\\n                <GaapDeductedByPrepaidCard>0</GaapDeductedByPrepaidCard>\\n                <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n                <GaapPretaxGrossAmount>0</GaapPretaxGrossAmount>\\n                <SubOrderId>202143356070333</SubOrderId>\\n                <MonthGaapPaymentAmount>0</MonthGaapPaymentAmount>\\n                <DeductedByCoupons>0</DeductedByCoupons>\\n                <UsageEndDate>2019-05-01 00:00:00</UsageEndDate>\\n                <UnallocatedDeductedByPrepaidCard>0</UnallocatedDeductedByPrepaidCard>\\n                <MonthGaapDeductedByPrepaidCard>0</MonthGaapDeductedByPrepaidCard>\\n                <UsageStartDate>2019-04-01 00:00:00</UsageStartDate>\\n                <MonthGaapPretaxGrossAmount>0.99</MonthGaapPretaxGrossAmount>\\n                <PaymentAmount>0</PaymentAmount>\\n                <MonthGaapPricingDiscount>0.25</MonthGaapPricingDiscount>\\n                <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n                <OwnerID>1028728862215453</OwnerID>\\n                <MonthGaapDeductedByCashCoupons>0.74</MonthGaapDeductedByCashCoupons>\\n                <UnallocatedDeductedByCashCoupons>0</UnallocatedDeductedByCashCoupons>\\n                <MonthGaapPretaxAmountLocal>0.74</MonthGaapPretaxAmountLocal>\\n                <GaapPricingDiscount>0</GaapPricingDiscount>\\n                <BillType>SubscriptionOrder</BillType>\\n            </Module>\\n        </Modules>\\n        <PageSize>20</PageSize>\\n        <HostId>cn</HostId>\\n        <PageNum>1</PageNum>\\n    </Data>\\n    <Message>Successful!</Message>\\n    <RequestId>AEAA504C-FCCA-4FB9-9E05-162CABC6EB40</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n</QueryInstanceGaapCostResponse>","errorExample":""}]',
      'title' => '查询月费用分摊服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstanceAmortizedCostByAmortizationPeriod' => 
    array (
      'summary' => '以摊销月视角查询月实例摊销成本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '账期月、摊销月',
            'description' => '摊销月
格式：YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-10',
            'maxLength' => 256,
          ),
        ),
        1 => 
        array (
          'name' => 'ConsumePeriodFilter',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '账期月筛选条件',
            'description' => '账期月筛选条件。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账期月
格式：YYYY－MM。',
              'type' => 'string',
              'required' => false,
              'example' => '2022-09',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '订阅类型',
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
            'maxLength' => 256,
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品。
参考取值来源：
查QueryProductList 查询产品信息，
查DescribeResourcePackageProduct 查询某个资源包产品的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        4 => 
        array (
          'name' => 'ProductDetail',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品明细。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        5 => 
        array (
          'name' => 'CostUnitCode',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '财务单元code',
            'description' => '财务单元code。',
            'type' => 'string',
            'required' => false,
            'example' => '123#',
            'maxLength' => 256,
          ),
        ),
        6 => 
        array (
          'name' => 'BillUserIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账单购买者ID筛选条件。
子账号ID。设置可查看财务云子账号账单，不填默认查看当前调用账号及其所有子账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账单购买者ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        7 => 
        array (
          'name' => 'BillOwnerIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源归属账号筛选条件。
资源归属账号ID，资源归属账号是实际使用资源的账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源归属账号ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例ID筛选条件。
支持查询多个实例，不传默认查所有实例。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'abc',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        9 => 
        array (
          'name' => 'NextToken',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U',
            'maxLength' => 2560,
          ),
        ),
        10 => 
        array (
          'name' => 'MaxResults',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'BssResult<BssCostBillBaseResponse>',
            'description' => 'BssResult<BssCostBillBaseResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '消息说明。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'Data' => 
              array (
                'description' => '返回数据
',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185766xxxx',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据条目。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据项。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CostUnit' => 
                        array (
                          'title' => '财务单元',
                          'description' => '财务单元。',
                          'type' => 'string',
                          'example' => '未分配',
                        ),
                        'CostUnitCode' => 
                        array (
                          'title' => '财务单元code',
                          'description' => '财务单元code。',
                          'type' => 'string',
                          'example' => '1234',
                        ),
                        'InstanceID' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-kjhdskjgshfdlkjfdh',
                        ),
                        'ResourceGroup' => 
                        array (
                          'description' => '资源组。',
                          'type' => 'string',
                          'example' => '默认资源组	',
                        ),
                        'Tag' => 
                        array (
                          'description' => '实例标签。',
                          'type' => 'string',
                          'example' => 'tag',
                        ),
                        'InternetIP' => 
                        array (
                          'description' => '公网IP。',
                          'type' => 'string',
                          'example' => '34.xx.x.x',
                        ),
                        'IntranetIP' => 
                        array (
                          'description' => '内网IP。',
                          'type' => 'string',
                          'example' => '192.xx.xx.xx',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => '杭州',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区。',
                          'type' => 'string',
                          'example' => '杭州1',
                        ),
                        'SplitAccountName' => 
                        array (
                          'description' => '分拆项所属账号名称。',
                          'type' => 'string',
                          'example' => 'test**1122',
                        ),
                        'SplitProductDetail' => 
                        array (
                          'description' => '分拆项产品明细名称。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'SplitItemID' => 
                        array (
                          'description' => '分拆项ID。',
                          'type' => 'string',
                          'example' => 'i-28bycvyb4',
                        ),
                        'SplitItemName' => 
                        array (
                          'description' => '分拆项名称。',
                          'type' => 'string',
                          'example' => 'iZ28bycvyb4Z',
                        ),
                        'ConsumePeriod' => 
                        array (
                          'title' => '账期',
                          'description' => '账期。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'AmortizationStatus' => 
                        array (
                          'title' => '摊销状态',
                          'description' => '摊销状态，取值：
- amortized 已摊销
- unAmortized 未摊销',
                          'type' => 'string',
                          'example' => 'amortized',
                        ),
                        'AmortizationPeriod' => 
                        array (
                          'title' => '摊销月',
                          'description' => '摊销月。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'BillAccountID' => 
                        array (
                          'description' => '账单所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillAccountName' => 
                        array (
                          'description' => '账单所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com',
                        ),
                        'BillOwnerID' => 
                        array (
                          'description' => '资源归属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillOwnerName' => 
                        array (
                          'description' => '资源所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '云数据库RDS',
                        ),
                        'ProductDetailCode' => 
                        array (
                          'description' => '产品明细code。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductDetail' => 
                        array (
                          'description' => '产品明细。',
                          'type' => 'string',
                          'example' => '云数据库RDS	',
                        ),
                        'BizType' => 
                        array (
                          'description' => '业务类型。',
                          'type' => 'string',
                          'example' => 'trusteeship',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：

- Subscription：预付费。
- PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'PayAsYouGo',
                        ),
                        'PretaxGrossAmount' => 
                        array (
                          'title' => '官网价',
                          'description' => '官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'InvoiceDiscount' => 
                        array (
                          'title' => '优惠金额',
                          'description' => '优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RoundDownDiscount' => 
                        array (
                          'title' => '抹零金额',
                          'description' => '抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PretaxAmount' => 
                        array (
                          'title' => '应付金额',
                          'description' => '应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCashCoupons' => 
                        array (
                          'title' => '代金券抵扣',
                          'description' => '代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCoupons' => 
                        array (
                          'title' => '优惠券抵扣',
                          'description' => '优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByPrepaidCard' => 
                        array (
                          'title' => '储值卡支付金额',
                          'description' => '储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'ExpenditureAmount' => 
                        array (
                          'title' => '消费金额（可开票）',
                          'description' => '消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxGrossAmount' => 
                        array (
                          'description' => '期初已摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedInvoiceDiscount' => 
                        array (
                          'description' => '期初已摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedRoundDownDiscount' => 
                        array (
                          'description' => '期初已摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxAmount' => 
                        array (
                          'description' => '期初已摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCashCoupons' => 
                        array (
                          'description' => '期初已摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCoupons' => 
                        array (
                          'description' => '期初已摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByPrepaidCard' => 
                        array (
                          'description' => '期初已摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedExpenditureAmount' => 
                        array (
                          'description' => '期初已摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '本期摊销-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '本期摊销-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '本期摊销-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxAmount' => 
                        array (
                          'description' => '本期摊销-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '本期摊销-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '本期摊销-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '本期摊销-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationExpenditureAmount' => 
                        array (
                          'description' => '本期摊销-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '期末待摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '期末待摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '期末待摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxAmount' => 
                        array (
                          'description' => '期末待摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '期末待摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '期末待摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '期末待摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationExpenditureAmount' => 
                        array (
                          'description' => '期末待摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotActiveService',
            'errorMessage' => 'You are not active Amotized Cost ，please use after activation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U\\",\\n    \\"AccountID\\": \\"185766xxxx\\",\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"MaxResults\\": 100,\\n    \\"TotalCount\\": 100,\\n    \\"Items\\": [\\n      {\\n        \\"CostUnit\\": \\"未分配\\",\\n        \\"CostUnitCode\\": \\"1234\\",\\n        \\"InstanceID\\": \\"i-kjhdskjgshfdlkjfdh\\",\\n        \\"ResourceGroup\\": \\"默认资源组\\\\t\\",\\n        \\"Tag\\": \\"tag\\",\\n        \\"InternetIP\\": \\"34.xx.x.x\\",\\n        \\"IntranetIP\\": \\"192.xx.xx.xx\\",\\n        \\"Region\\": \\"杭州\\",\\n        \\"Zone\\": \\"杭州1\\",\\n        \\"SplitAccountName\\": \\"test**1122\\",\\n        \\"SplitProductDetail\\": \\"rds\\",\\n        \\"SplitItemID\\": \\"i-28bycvyb4\\",\\n        \\"SplitItemName\\": \\"iZ28bycvyb4Z\\",\\n        \\"ConsumePeriod\\": \\"202210\\",\\n        \\"AmortizationStatus\\": \\"amortized\\",\\n        \\"AmortizationPeriod\\": \\"202210\\",\\n        \\"BillAccountID\\": 0,\\n        \\"BillAccountName\\": \\"test@test.aliyunid.com\\",\\n        \\"BillOwnerID\\": 0,\\n        \\"BillOwnerName\\": \\"test@test.aliyunid.com\\",\\n        \\"ProductCode\\": \\"rds\\",\\n        \\"ProductName\\": \\"云数据库RDS\\",\\n        \\"ProductDetailCode\\": \\"rds\\",\\n        \\"ProductDetail\\": \\"云数据库RDS\\\\t\\",\\n        \\"BizType\\": \\"trusteeship\\",\\n        \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n        \\"PretaxGrossAmount\\": 0,\\n        \\"InvoiceDiscount\\": 0,\\n        \\"RoundDownDiscount\\": 0,\\n        \\"PretaxAmount\\": 0,\\n        \\"DeductedByCashCoupons\\": 0,\\n        \\"DeductedByCoupons\\": 0,\\n        \\"DeductedByPrepaidCard\\": 0,\\n        \\"ExpenditureAmount\\": 0,\\n        \\"PreviouslyAmortizedPretaxGrossAmount\\": 0,\\n        \\"PreviouslyAmortizedInvoiceDiscount\\": 0,\\n        \\"PreviouslyAmortizedRoundDownDiscount\\": 0,\\n        \\"PreviouslyAmortizedPretaxAmount\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCashCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByPrepaidCard\\": 0,\\n        \\"PreviouslyAmortizedExpenditureAmount\\": 0,\\n        \\"CurrentAmortizationPretaxGrossAmount\\": 0,\\n        \\"CurrentAmortizationInvoiceDiscount\\": 0,\\n        \\"CurrentAmortizationRoundDownDiscount\\": 0,\\n        \\"CurrentAmortizationPretaxAmount\\": 0,\\n        \\"CurrentAmortizationDeductedByCashCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"CurrentAmortizationExpenditureAmount\\": 0,\\n        \\"RemainingAmortizationPretaxGrossAmount\\": 0,\\n        \\"RemainingAmortizationInvoiceDiscount\\": 0,\\n        \\"RemainingAmortizationRoundDownDiscount\\": 0,\\n        \\"RemainingAmortizationPretaxAmount\\": 0,\\n        \\"RemainingAmortizationDeductedByCashCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"RemainingAmortizationExpenditureAmount\\": 0\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询实例摊销月摊销成本',
      'description' => '-   摊销成本不作为结算及对账依据。摊销成本提供费用分摊能力，将您在云上产生的费用（含预付费和后付费）按照指定的分摊规则进行分摊。
-   当月最终数据在次月6日12点后支持使用（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。当月数据中不包含未结算（未出账，累账中）的后付费数据。
-   摊销成本数据支持近12个月数据。
-   摊销成本中分拆项相关数据在分账账单数据出具后延迟48小时更新（若需使用分拆费用请提前开通[分账账单](https://usercenter2.aliyun.com/finance/split-bill)）；非分拆项相关数据在明细账单出具后延迟48小时更新。
-   2021年8月（不含）之前的摊销成本月中不更新，仅于摊销次月6日12点后统一更新，也不支持提供分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用。
-    摊销成本数据需要用户开通[摊销成本](https://usercenter2.aliyun.com/finance/amortized-costs)后才可提供，自开通后延迟48小时可使用。',
    ),
    'DescribeProductAmortizedCostByAmortizationPeriod' => 
    array (
      'summary' => '以摊销月视角查询月产品摊销成本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '摊销月
格式：YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-10',
            'maxLength' => 256,
          ),
        ),
        1 => 
        array (
          'name' => 'ConsumePeriodFilter',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账期月筛选条件。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账期月
格式：YYYY－MM。',
              'type' => 'string',
              'required' => false,
              'example' => '2022-09',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
            'maxLength' => 256,
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品。
参考取值来源：
查QueryProductList 查询产品信息，
查DescribeResourcePackageProduct 查询某个资源包产品的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        4 => 
        array (
          'name' => 'ProductDetail',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品明细。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        5 => 
        array (
          'name' => 'CostUnitCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '财务单元code。',
            'type' => 'string',
            'required' => false,
            'example' => '123#
',
            'maxLength' => 256,
          ),
        ),
        6 => 
        array (
          'name' => 'BillUserIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账单购买者ID筛选条件。
子账号ID。设置可查看财务云子账号账单，不填默认查看当前调用账号及其所有子账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账单购买者ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        7 => 
        array (
          'name' => 'BillOwnerIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例ID筛选条件。
支持查询多个实例，不传默认查所有实例。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'abc',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        8 => 
        array (
          'name' => 'NextToken',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U',
            'maxLength' => 2560,
          ),
        ),
        9 => 
        array (
          'name' => 'MaxResults',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'BssResult<BssCostBillBaseResponse<BssCostBillProductResponse>>',
            'description' => 'BssResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F
',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200
',
              ),
              'Message' => 
              array (
                'description' => '消息说明。',
                'type' => 'string',
                'example' => 'Successful！
',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U
',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185766xxxx',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com
',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据条目。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据项。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ConsumePeriod' => 
                        array (
                          'description' => '账期。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'AmortizationStatus' => 
                        array (
                          'description' => '摊销状态，取值：
- amortized 已摊销
- unAmortized 未摊销',
                          'type' => 'string',
                          'example' => 'amortized',
                        ),
                        'AmortizationPeriod' => 
                        array (
                          'description' => '摊销月。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'BillAccountID' => 
                        array (
                          'description' => '账单所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillAccountName' => 
                        array (
                          'description' => '账单所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com
',
                        ),
                        'BillOwnerID' => 
                        array (
                          'description' => '资源所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillOwnerName' => 
                        array (
                          'description' => '资源所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com
',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '云数据库RDS
',
                        ),
                        'ProductDetailCode' => 
                        array (
                          'description' => '产品明细code。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductDetail' => 
                        array (
                          'description' => '产品明细。',
                          'type' => 'string',
                          'example' => '云数据库RDS
',
                        ),
                        'BizType' => 
                        array (
                          'description' => '业务类型。',
                          'type' => 'string',
                          'example' => 'trusteeship
',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'PayAsYouGo',
                        ),
                        'PretaxGrossAmount' => 
                        array (
                          'description' => '官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'InvoiceDiscount' => 
                        array (
                          'description' => '优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RoundDownDiscount' => 
                        array (
                          'description' => '抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PretaxAmount' => 
                        array (
                          'description' => '应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCashCoupons' => 
                        array (
                          'description' => '代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCoupons' => 
                        array (
                          'description' => '优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByPrepaidCard' => 
                        array (
                          'description' => '储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'ExpenditureAmount' => 
                        array (
                          'description' => '消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxGrossAmount' => 
                        array (
                          'description' => '期初已摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedInvoiceDiscount' => 
                        array (
                          'description' => '期初已摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedRoundDownDiscount' => 
                        array (
                          'description' => '期初已摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxAmount' => 
                        array (
                          'description' => '期初已摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCashCoupons' => 
                        array (
                          'description' => '期初已摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCoupons' => 
                        array (
                          'description' => '期初已摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByPrepaidCard' => 
                        array (
                          'description' => '期初已摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedExpenditureAmount' => 
                        array (
                          'description' => '期初已摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '本期摊销-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '本期摊销-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '本期摊销-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxAmount' => 
                        array (
                          'description' => '本期摊销-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '本期摊销-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '本期摊销-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '本期摊销-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationExpenditureAmount' => 
                        array (
                          'description' => '本期摊销-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '期末待摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '期末待摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '期末待摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxAmount' => 
                        array (
                          'description' => '期末待摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '期末待摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '期末待摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '期末待摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationExpenditureAmount' => 
                        array (
                          'description' => '期末待摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotActiveService',
            'errorMessage' => 'You are not active Amotized Cost ，please use after activation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\\\n\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\\\n\\",\\n  \\"Message\\": \\"Successful！\\\\n\\",\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U\\\\n\\",\\n    \\"AccountID\\": \\"185766xxxx\\",\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\\\n\\",\\n    \\"MaxResults\\": 100,\\n    \\"TotalCount\\": 100,\\n    \\"Items\\": [\\n      {\\n        \\"ConsumePeriod\\": \\"202210\\",\\n        \\"AmortizationStatus\\": \\"amortized\\",\\n        \\"AmortizationPeriod\\": \\"202210\\",\\n        \\"BillAccountID\\": 0,\\n        \\"BillAccountName\\": \\"test@test.aliyunid.com\\\\n\\",\\n        \\"BillOwnerID\\": 0,\\n        \\"BillOwnerName\\": \\"test@test.aliyunid.com\\\\n\\",\\n        \\"ProductCode\\": \\"rds\\",\\n        \\"ProductName\\": \\"云数据库RDS\\\\n\\",\\n        \\"ProductDetailCode\\": \\"rds\\",\\n        \\"ProductDetail\\": \\"云数据库RDS\\\\n\\",\\n        \\"BizType\\": \\"trusteeship\\\\n\\",\\n        \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n        \\"PretaxGrossAmount\\": 0,\\n        \\"InvoiceDiscount\\": 0,\\n        \\"RoundDownDiscount\\": 0,\\n        \\"PretaxAmount\\": 0,\\n        \\"DeductedByCashCoupons\\": 0,\\n        \\"DeductedByCoupons\\": 0,\\n        \\"DeductedByPrepaidCard\\": 0,\\n        \\"ExpenditureAmount\\": 0,\\n        \\"PreviouslyAmortizedPretaxGrossAmount\\": 0,\\n        \\"PreviouslyAmortizedInvoiceDiscount\\": 0,\\n        \\"PreviouslyAmortizedRoundDownDiscount\\": 0,\\n        \\"PreviouslyAmortizedPretaxAmount\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCashCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByPrepaidCard\\": 0,\\n        \\"PreviouslyAmortizedExpenditureAmount\\": 0,\\n        \\"CurrentAmortizationPretaxGrossAmount\\": 0,\\n        \\"CurrentAmortizationInvoiceDiscount\\": 0,\\n        \\"CurrentAmortizationRoundDownDiscount\\": 0,\\n        \\"CurrentAmortizationPretaxAmount\\": 0,\\n        \\"CurrentAmortizationDeductedByCashCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"CurrentAmortizationExpenditureAmount\\": 0,\\n        \\"RemainingAmortizationPretaxGrossAmount\\": 0,\\n        \\"RemainingAmortizationInvoiceDiscount\\": 0,\\n        \\"RemainingAmortizationRoundDownDiscount\\": 0,\\n        \\"RemainingAmortizationPretaxAmount\\": 0,\\n        \\"RemainingAmortizationDeductedByCashCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"RemainingAmortizationExpenditureAmount\\": 0\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询产品摊销月摊销成本',
      'description' => '- 摊销成本不作为结算及对账依据。摊销成本提供费用分摊能力，将您在云上产生的费用（含预付费和后付费）按照指定的分摊规则进行分摊。
-   当月最终数据在次月6日12点后支持使用（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。当月数据中不包含未结算（未出账，累账中）的后付费数据。
-   摊销成本数据支持近12个月数据。
-   摊销成本中分拆项相关数据在分账账单数据出具后延迟48小时更新（若需使用分拆费用请提前开通[分账账单](https://usercenter2.aliyun.com/finance/split-bill)）；非分拆项相关数据在明细账单出具后延迟48小时更新。
-   2021年8月（不含）之前的摊销成本月中不更新，仅于摊销次月6日12点后统一更新，也不支持提供分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用。
-   摊销成本数据需要用户开通[摊销成本](https://usercenter2.aliyun.com/finance/amortized-costs)后才可提供，自开通后延迟48小时可使用。',
    ),
    'DescribeInstanceAmortizedCostByConsumePeriod' => 
    array (
      'summary' => '以账期月视角查询月实例摊销成本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '账期月、摊销月',
            'description' => '账期月
格式：YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-10',
            'maxLength' => 256,
          ),
        ),
        1 => 
        array (
          'name' => 'AmortizationPeriodFilter',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '摊销月筛选条件',
            'description' => '摊销月筛选条件。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '摊销月
格式：YYYY－MM。',
              'type' => 'string',
              'required' => false,
              'example' => '2022-09
',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '订阅类型',
            'description' => '订阅类型。取值：

- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
            'maxLength' => 256,
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品。
参考取值来源：
查QueryProductList 查询产品信息，
查DescribeResourcePackageProduct 查询某个资源包产品的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        4 => 
        array (
          'name' => 'ProductDetail',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品明细。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        5 => 
        array (
          'name' => 'CostUnitCode',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '财务单元code',
            'description' => '财务单元code。',
            'type' => 'string',
            'required' => false,
            'example' => '123#
',
            'maxLength' => 256,
          ),
        ),
        6 => 
        array (
          'name' => 'BillUserIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账单购买者ID筛选条件。
子账号ID。设置可查看财务云子账号账单，不填默认查看当前调用账号及其所有子账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账单购买者ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        7 => 
        array (
          'name' => 'BillOwnerIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账单拥有者ID筛选条件。
子账号ID。设置可查看财务云子账号账单，不填默认查看当前调用账号及其所有子账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账单拥有者ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例ID筛选条件。
支持查询多个实例，不传默认查所有实例。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'abc',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        9 => 
        array (
          'name' => 'NextToken',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U
',
            'maxLength' => 2560,
          ),
        ),
        10 => 
        array (
          'name' => 'MaxResults',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'BssResult<BssCostBillBaseResponse>',
            'description' => 'BssResult<BssCostBillBaseResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F
',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '消息说明。',
                'type' => 'string',
                'example' => 'Successful！
',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U
',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185766xxxx
',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com
',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据条目。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据项。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CostUnit' => 
                        array (
                          'title' => '财务单元',
                          'description' => '财务单元。',
                          'type' => 'string',
                          'example' => '未分配
',
                        ),
                        'CostUnitCode' => 
                        array (
                          'title' => '财务单元code',
                          'description' => '财务单元code。',
                          'type' => 'string',
                          'example' => '1234',
                        ),
                        'InstanceID' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-kjhdskjgshfdlkjfdh
',
                        ),
                        'ResourceGroup' => 
                        array (
                          'description' => '资源组。',
                          'type' => 'string',
                          'example' => '默认资源组	
',
                        ),
                        'Tag' => 
                        array (
                          'description' => '实例标签。',
                          'type' => 'string',
                          'example' => 'tag',
                        ),
                        'InternetIP' => 
                        array (
                          'description' => '公网IP。',
                          'type' => 'string',
                          'example' => '34.xx.x.x
',
                        ),
                        'IntranetIP' => 
                        array (
                          'description' => '内网IP。',
                          'type' => 'string',
                          'example' => '192.xx.xx.xx
',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => '杭州',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区。',
                          'type' => 'string',
                          'example' => '杭州1
',
                        ),
                        'SplitAccountName' => 
                        array (
                          'description' => '分拆项所属账号名称。',
                          'type' => 'string',
                          'example' => 'test**1122
',
                        ),
                        'SplitProductDetail' => 
                        array (
                          'description' => '分拆项产品明细名称。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'SplitItemID' => 
                        array (
                          'description' => '分拆项ID。',
                          'type' => 'string',
                          'example' => 'i-28bycvyb4
',
                        ),
                        'SplitItemName' => 
                        array (
                          'description' => '分拆项名称。',
                          'type' => 'string',
                          'example' => 'iZ28bycvyb4Z
',
                        ),
                        'ConsumePeriod' => 
                        array (
                          'title' => '账期',
                          'description' => '账期。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'AmortizationStatus' => 
                        array (
                          'title' => '摊销状态',
                          'description' => '摊销状态，取值：

- amortized 已摊销
- unAmortized 未摊销',
                          'type' => 'string',
                          'example' => 'amortized',
                        ),
                        'AmortizationPeriod' => 
                        array (
                          'title' => '摊销月',
                          'description' => '摊销月。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'BillAccountID' => 
                        array (
                          'description' => '账单所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillAccountName' => 
                        array (
                          'description' => '账单所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com
',
                        ),
                        'BillOwnerID' => 
                        array (
                          'description' => '资源所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillOwnerName' => 
                        array (
                          'description' => '资源所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com
',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '云数据库RDS
',
                        ),
                        'ProductDetailCode' => 
                        array (
                          'description' => '产品明细code。',
                          'type' => 'string',
                          'example' => 'rds
',
                        ),
                        'ProductDetail' => 
                        array (
                          'description' => '产品明细。',
                          'type' => 'string',
                          'example' => '云数据库RDS	
',
                        ),
                        'BizType' => 
                        array (
                          'description' => '业务类型。',
                          'type' => 'string',
                          'example' => 'trusteeship',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：

- Subscription：预付费。
- PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'PayAsYouGo',
                        ),
                        'PretaxGrossAmount' => 
                        array (
                          'title' => '官网价',
                          'description' => '官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'InvoiceDiscount' => 
                        array (
                          'title' => '优惠金额',
                          'description' => '优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RoundDownDiscount' => 
                        array (
                          'title' => '抹零金额',
                          'description' => '抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PretaxAmount' => 
                        array (
                          'title' => '应付金额',
                          'description' => '应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCashCoupons' => 
                        array (
                          'title' => '代金券抵扣',
                          'description' => '代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCoupons' => 
                        array (
                          'title' => '优惠券抵扣',
                          'description' => '优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByPrepaidCard' => 
                        array (
                          'title' => '储值卡支付金额',
                          'description' => '储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'ExpenditureAmount' => 
                        array (
                          'title' => '消费金额（可开票）',
                          'description' => '消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxGrossAmount' => 
                        array (
                          'description' => '期初已摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedInvoiceDiscount' => 
                        array (
                          'description' => '期初已摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedRoundDownDiscount' => 
                        array (
                          'description' => '期初已摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxAmount' => 
                        array (
                          'description' => '期初已摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCashCoupons' => 
                        array (
                          'description' => '期初已摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCoupons' => 
                        array (
                          'description' => '期初已摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByPrepaidCard' => 
                        array (
                          'description' => '期初已摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedExpenditureAmount' => 
                        array (
                          'description' => '期初已摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '本期摊销-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '本期摊销-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '本期摊销-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxAmount' => 
                        array (
                          'description' => '本期摊销-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '本期摊销-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '本期摊销-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '本期摊销-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationExpenditureAmount' => 
                        array (
                          'description' => '本期摊销-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '期末待摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '期末待摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '期末待摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxAmount' => 
                        array (
                          'description' => '期末待摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '期末待摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '期末待摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '期末待摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationExpenditureAmount' => 
                        array (
                          'description' => '期末待摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotActiveService',
            'errorMessage' => 'You are not active Amotized Cost ，please use after activation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\\\n\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful！\\\\n\\",\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U\\\\n\\",\\n    \\"AccountID\\": \\"185766xxxx\\\\n\\",\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\\\n\\",\\n    \\"MaxResults\\": 100,\\n    \\"TotalCount\\": 100,\\n    \\"Items\\": [\\n      {\\n        \\"CostUnit\\": \\"未分配\\\\n\\",\\n        \\"CostUnitCode\\": \\"1234\\",\\n        \\"InstanceID\\": \\"i-kjhdskjgshfdlkjfdh\\\\n\\",\\n        \\"ResourceGroup\\": \\"默认资源组\\\\t\\\\n\\",\\n        \\"Tag\\": \\"tag\\",\\n        \\"InternetIP\\": \\"34.xx.x.x\\\\n\\",\\n        \\"IntranetIP\\": \\"192.xx.xx.xx\\\\n\\",\\n        \\"Region\\": \\"杭州\\",\\n        \\"Zone\\": \\"杭州1\\\\n\\",\\n        \\"SplitAccountName\\": \\"test**1122\\\\n\\",\\n        \\"SplitProductDetail\\": \\"rds\\",\\n        \\"SplitItemID\\": \\"i-28bycvyb4\\\\n\\",\\n        \\"SplitItemName\\": \\"iZ28bycvyb4Z\\\\n\\",\\n        \\"ConsumePeriod\\": \\"202210\\",\\n        \\"AmortizationStatus\\": \\"amortized\\",\\n        \\"AmortizationPeriod\\": \\"202210\\",\\n        \\"BillAccountID\\": 0,\\n        \\"BillAccountName\\": \\"test@test.aliyunid.com\\\\n\\",\\n        \\"BillOwnerID\\": 0,\\n        \\"BillOwnerName\\": \\"test@test.aliyunid.com\\\\n\\",\\n        \\"ProductCode\\": \\"rds\\",\\n        \\"ProductName\\": \\"云数据库RDS\\\\n\\",\\n        \\"ProductDetailCode\\": \\"rds\\\\n\\",\\n        \\"ProductDetail\\": \\"云数据库RDS\\\\t\\\\n\\",\\n        \\"BizType\\": \\"trusteeship\\",\\n        \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n        \\"PretaxGrossAmount\\": 0,\\n        \\"InvoiceDiscount\\": 0,\\n        \\"RoundDownDiscount\\": 0,\\n        \\"PretaxAmount\\": 0,\\n        \\"DeductedByCashCoupons\\": 0,\\n        \\"DeductedByCoupons\\": 0,\\n        \\"DeductedByPrepaidCard\\": 0,\\n        \\"ExpenditureAmount\\": 0,\\n        \\"PreviouslyAmortizedPretaxGrossAmount\\": 0,\\n        \\"PreviouslyAmortizedInvoiceDiscount\\": 0,\\n        \\"PreviouslyAmortizedRoundDownDiscount\\": 0,\\n        \\"PreviouslyAmortizedPretaxAmount\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCashCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByPrepaidCard\\": 0,\\n        \\"PreviouslyAmortizedExpenditureAmount\\": 0,\\n        \\"CurrentAmortizationPretaxGrossAmount\\": 0,\\n        \\"CurrentAmortizationInvoiceDiscount\\": 0,\\n        \\"CurrentAmortizationRoundDownDiscount\\": 0,\\n        \\"CurrentAmortizationPretaxAmount\\": 0,\\n        \\"CurrentAmortizationDeductedByCashCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"CurrentAmortizationExpenditureAmount\\": 0,\\n        \\"RemainingAmortizationPretaxGrossAmount\\": 0,\\n        \\"RemainingAmortizationInvoiceDiscount\\": 0,\\n        \\"RemainingAmortizationRoundDownDiscount\\": 0,\\n        \\"RemainingAmortizationPretaxAmount\\": 0,\\n        \\"RemainingAmortizationDeductedByCashCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"RemainingAmortizationExpenditureAmount\\": 0\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询实例账期月摊销成本',
      'description' => '-   摊销成本不作为结算及对账依据。摊销成本提供费用分摊能力，将您在云上产生的费用（含预付费和后付费）按照指定的分摊规则进行分摊。
-   当月最终数据在次月6日12点后支持使用（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。当月数据中不包含未结算（未出账，累账中）的后付费数据。
-   摊销成本数据支持近12个月数据。
-   摊销成本中分拆项相关数据在分账账单数据出具后延迟48小时更新（若需使用分拆费用请提前开通[分账账单](https://usercenter2.aliyun.com/finance/split-bill)）；非分拆项相关数据在明细账单出具后延迟48小时更新。
-  2021年8月（不含）之前的摊销成本月中不更新，仅于摊销次月6日12点后统一更新，也不支持提供分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用。
-   摊销成本数据需要用户开通[摊销成本](https://usercenter2.aliyun.com/finance/amortized-costs)后才可提供，自开通后延迟48小时可使用。',
    ),
    'DescribeProductAmortizedCostByConsumePeriod' => 
    array (
      'summary' => '以账期月视角查询月产品摊销成本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '账期月
格式：YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-10
',
            'maxLength' => 256,
          ),
        ),
        1 => 
        array (
          'name' => 'AmortizationPeriodFilter',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '摊销月筛选条件',
            'description' => '摊销月筛选条件。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '摊销月
格式：YYYY－MM。',
              'type' => 'string',
              'required' => false,
              'example' => '2022-09
',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '订阅类型。取值：

- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
            'maxLength' => 256,
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品。
参考取值来源：
查QueryProductList 查询产品信息，
查DescribeResourcePackageProduct 查询某个资源包产品的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        4 => 
        array (
          'name' => 'ProductDetail',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品明细。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
            'maxLength' => 256,
          ),
        ),
        5 => 
        array (
          'name' => 'CostUnitCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '财务单元code。',
            'type' => 'string',
            'required' => false,
            'example' => '123#
',
            'maxLength' => 256,
          ),
        ),
        6 => 
        array (
          'name' => 'BillUserIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账单购买者ID筛选条件。
子账号ID。设置可查看财务云子账号账单，不填默认查看当前调用账号及其所有子账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账单购买者ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        7 => 
        array (
          'name' => 'BillOwnerIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '账单拥有者ID筛选条件。
子账号ID。设置可查看财务云子账号账单，不填默认查看当前调用账号及其所有子账号。
最多元素个数：10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '账单拥有者ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123',
              'maxLength' => 256,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        8 => 
        array (
          'name' => 'NextToken',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U
',
            'maxLength' => 2560,
          ),
        ),
        9 => 
        array (
          'name' => 'MaxResults',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'BssResult<BssCostBillBaseResponse<BssCostBillProductResponse>>',
            'description' => 'BssResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F
',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '消息说明。',
                'type' => 'string',
                'example' => 'Successful！
',
              ),
              'Data' => 
              array (
                'description' => '消息说明。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185766xxxx',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com
',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Items' => 
                  array (
                    'description' => '数据条目。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据项。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ConsumePeriod' => 
                        array (
                          'description' => '账期。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'AmortizationStatus' => 
                        array (
                          'description' => '摊销状态，取值：

- amortized 已摊销
- unAmortized 未摊销',
                          'type' => 'string',
                          'example' => 'amortized',
                        ),
                        'AmortizationPeriod' => 
                        array (
                          'description' => '摊销月。
格式：YYYYMM。',
                          'type' => 'string',
                          'example' => '202210',
                        ),
                        'BillAccountID' => 
                        array (
                          'description' => '账单所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillAccountName' => 
                        array (
                          'description' => '账单所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com
',
                        ),
                        'BillOwnerID' => 
                        array (
                          'description' => '资源所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185xxxxx489',
                        ),
                        'BillOwnerName' => 
                        array (
                          'description' => '资源所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com
',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '云数据库RDS
',
                        ),
                        'ProductDetailCode' => 
                        array (
                          'description' => '产品明细code。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ProductDetail' => 
                        array (
                          'description' => '产品明细。',
                          'type' => 'string',
                          'example' => '云数据库RDS
',
                        ),
                        'BizType' => 
                        array (
                          'description' => '业务类型。',
                          'type' => 'string',
                          'example' => 'trusteeship',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：

- Subscription：预付费。
- PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'PayAsYouGo',
                        ),
                        'PretaxGrossAmount' => 
                        array (
                          'description' => '官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'InvoiceDiscount' => 
                        array (
                          'description' => '优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RoundDownDiscount' => 
                        array (
                          'description' => '抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PretaxAmount' => 
                        array (
                          'description' => '应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCashCoupons' => 
                        array (
                          'description' => '代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByCoupons' => 
                        array (
                          'description' => '优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'DeductedByPrepaidCard' => 
                        array (
                          'description' => '储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'ExpenditureAmount' => 
                        array (
                          'description' => '消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxGrossAmount' => 
                        array (
                          'description' => '期初已摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedInvoiceDiscount' => 
                        array (
                          'description' => '期初已摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedRoundDownDiscount' => 
                        array (
                          'description' => '期初已摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedPretaxAmount' => 
                        array (
                          'description' => '期初已摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCashCoupons' => 
                        array (
                          'description' => '期初已摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByCoupons' => 
                        array (
                          'description' => '期初已摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedDeductedByPrepaidCard' => 
                        array (
                          'description' => '期初已摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'PreviouslyAmortizedExpenditureAmount' => 
                        array (
                          'description' => '期初已摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '本期摊销-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '本期摊销-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '本期摊销-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationPretaxAmount' => 
                        array (
                          'description' => '本期摊销-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '本期摊销-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '本期摊销-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '本期摊销-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'CurrentAmortizationExpenditureAmount' => 
                        array (
                          'description' => '本期摊销-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxGrossAmount' => 
                        array (
                          'description' => '期末待摊-官网价。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationInvoiceDiscount' => 
                        array (
                          'description' => '期末待摊-优惠金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationRoundDownDiscount' => 
                        array (
                          'description' => '期末待摊-抹零金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationPretaxAmount' => 
                        array (
                          'description' => '期末待摊-应付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCashCoupons' => 
                        array (
                          'description' => '期末待摊-代金券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByCoupons' => 
                        array (
                          'description' => '期末待摊-优惠券抵扣。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationDeductedByPrepaidCard' => 
                        array (
                          'description' => '期末待摊-储值卡支付金额。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                        'RemainingAmortizationExpenditureAmount' => 
                        array (
                          'description' => '期末待摊-消费金额（可开票）。',
                          'type' => 'number',
                          'format' => 'double',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotActiveService',
            'errorMessage' => 'You are not active Amotized Cost ，please use after activation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\\\n\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful！\\\\n\\",\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4KCmdtdF9jcmVhdGUEARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U\\",\\n    \\"AccountID\\": \\"185766xxxx\\",\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\\\n\\",\\n    \\"MaxResults\\": 100,\\n    \\"TotalCount\\": 100,\\n    \\"Items\\": [\\n      {\\n        \\"ConsumePeriod\\": \\"202210\\",\\n        \\"AmortizationStatus\\": \\"amortized\\",\\n        \\"AmortizationPeriod\\": \\"202210\\",\\n        \\"BillAccountID\\": 0,\\n        \\"BillAccountName\\": \\"test@test.aliyunid.com\\\\n\\",\\n        \\"BillOwnerID\\": 0,\\n        \\"BillOwnerName\\": \\"test@test.aliyunid.com\\\\n\\",\\n        \\"ProductCode\\": \\"rds\\",\\n        \\"ProductName\\": \\"云数据库RDS\\\\n\\",\\n        \\"ProductDetailCode\\": \\"rds\\",\\n        \\"ProductDetail\\": \\"云数据库RDS\\\\n\\",\\n        \\"BizType\\": \\"trusteeship\\",\\n        \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n        \\"PretaxGrossAmount\\": 0,\\n        \\"InvoiceDiscount\\": 0,\\n        \\"RoundDownDiscount\\": 0,\\n        \\"PretaxAmount\\": 0,\\n        \\"DeductedByCashCoupons\\": 0,\\n        \\"DeductedByCoupons\\": 0,\\n        \\"DeductedByPrepaidCard\\": 0,\\n        \\"ExpenditureAmount\\": 0,\\n        \\"PreviouslyAmortizedPretaxGrossAmount\\": 0,\\n        \\"PreviouslyAmortizedInvoiceDiscount\\": 0,\\n        \\"PreviouslyAmortizedRoundDownDiscount\\": 0,\\n        \\"PreviouslyAmortizedPretaxAmount\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCashCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByCoupons\\": 0,\\n        \\"PreviouslyAmortizedDeductedByPrepaidCard\\": 0,\\n        \\"PreviouslyAmortizedExpenditureAmount\\": 0,\\n        \\"CurrentAmortizationPretaxGrossAmount\\": 0,\\n        \\"CurrentAmortizationInvoiceDiscount\\": 0,\\n        \\"CurrentAmortizationRoundDownDiscount\\": 0,\\n        \\"CurrentAmortizationPretaxAmount\\": 0,\\n        \\"CurrentAmortizationDeductedByCashCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByCoupons\\": 0,\\n        \\"CurrentAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"CurrentAmortizationExpenditureAmount\\": 0,\\n        \\"RemainingAmortizationPretaxGrossAmount\\": 0,\\n        \\"RemainingAmortizationInvoiceDiscount\\": 0,\\n        \\"RemainingAmortizationRoundDownDiscount\\": 0,\\n        \\"RemainingAmortizationPretaxAmount\\": 0,\\n        \\"RemainingAmortizationDeductedByCashCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByCoupons\\": 0,\\n        \\"RemainingAmortizationDeductedByPrepaidCard\\": 0,\\n        \\"RemainingAmortizationExpenditureAmount\\": 0\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询产品账期月摊销成本',
      'description' => '- 摊销成本不作为结算及对账依据。摊销成本提供费用分摊能力，将您在云上产生的费用（含预付费和后付费）按照指定的分摊规则进行分摊。
- 当月最终数据在次月6日12点后支持使用（月中会发生包括但不限于以下少数场景：延迟出账，退款，调账，欠费核销等）。当月数据中不包含未结算（未出账，累账中）的后付费数据。
- 摊销成本数据支持近12个月数据。
- 摊销成本中分拆项相关数据在分账账单数据出具后延迟48小时更新（若需使用分拆费用请提前开通[分账账单](https://usercenter2.aliyun.com/finance/split-bill)）；非分拆项相关数据在明细账单出具后延迟48小时更新。
- 2021年8月（不含）之前的摊销成本月中不更新，仅于摊销次月6日12点后统一更新，也不支持提供分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用。
- 摊销成本数据需要用户开通[摊销成本](https://usercenter2.aliyun.com/finance/amortized-costs)后才可提供，自开通后延迟48小时可使用。',
    ),
    'DescribeSplitItemBill' => 
    array (
      'summary' => '查询分账账单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-03',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：

- Subscription：预付费。
- PayAsYouGo：后付费。

> 必须和ProductCode参数一起使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayAsYouGo',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用来表示当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错。空代表从头开始读取。',
            'type' => 'string',
            'required' => false,
            'example' => 'CAESEgoQCg4KCmd',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123',
          ),
        ),
        7 => 
        array (
          'name' => 'InstanceID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-kjhdskjgshfdlkjfdh',
          ),
        ),
        8 => 
        array (
          'name' => 'SplitItemID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分拆项ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-kjhdskjgshfdlkjfdh',
          ),
        ),
        9 => 
        array (
          'name' => 'Granularity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询账单的颗粒度。取值：
- MONTHLY：月。与用户中心-分账账单-账期账单一致。
- DAILY：日。与用户中心-分账账单-按天账单一致。

> 选择DAILY需指定BillingDate。',
            'type' => 'string',
            'required' => false,
            'example' => 'Monthly',
          ),
        ),
        10 => 
        array (
          'name' => 'BillingDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，仅当Granularity为DAILY时必填，格式为YYYY-MM-DD。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-02',
          ),
        ),
        11 => 
        array (
          'name' => 'TagFilter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签过滤条件，支持多组标签查询条件TagValues。多组TagValues条件之间为或关系。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签过滤条件。',
              'type' => 'object',
              'properties' => 
              array (
                'TagValues' => 
                array (
                  'description' => 'TagValues.N用于查找符合指定标签值的账单，由字符串列表组成。标签值长度的取值范围：1~128。N的取值范围：1~20。
- 指定TagValues.N时，需同时指定TagFilter.N.TagKey，否则报错InvalidParameter.TagValues。
- 指定多个标签值时，则满足任一标签值的账单都会被查询到。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '标签值。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'TestValue',
                  ),
                  'required' => false,
                  'example' => 'TestValue',
                  'maxItems' => 20,
                ),
                'TagKey' => 
                array (
                  'description' => 'TagFilter.N用于查找符合指定标签的账单，由一个键值对组成。标签键长度的取值范围：1~128。N的取值范围：1~20

- 仅指定TagFilter.N.TagKey时，则返回关联该标签键的所有账单。
- 同时指定多个标签键值对时，满足任一标签键值对的账单被查找到。
- 如果资源上的标签发生变动，仅能查询标签存续期间的账单。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TestKey',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        12 => 
        array (
          'name' => 'IsHideZeroCharge',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据原价（PretaxGrossAmount）和应付（PretaxAmount）是否都为0做过滤。取值：

- false。
- true。',
            'type' => 'boolean',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'false',
          ),
        ),
        13 => 
        array (
          'name' => 'PipCode',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'description' => '用来表示当前调用返回读取到的位置，空代表数据已经读取完毕。下次调用时，需要将此设置到入参NextToken中。',
                    'type' => 'string',
                    'example' => 'CAESEgoQCg4K',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账单日期，格式：YYYY－MM。',
                    'type' => 'string',
                    'example' => '2020-03',
                  ),
                  'MaxResults' => 
                  array (
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185xxxx3489',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'description' => '账单详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SplitAccountID' => 
                        array (
                          'description' => '分拆项所属账号AccountID',
                          'type' => 'string',
                          'example' => '12**122',
                        ),
                        'BillAccountName' => 
                        array (
                          'description' => '账单所属账号名称。',
                          'type' => 'string',
                          'example' => 'test@test.aliyunid.com',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：
Subscription：预付费。
PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'PayAsYouGo',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '实例规格。',
                          'type' => 'string',
                          'example' => 'ecs.sn1ne.3xlarge',
                        ),
                        'DeductedByCoupons' => 
                        array (
                          'description' => '优惠券优惠金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => '杭州',
                        ),
                        'OutstandingAmount' => 
                        array (
                          'description' => '未结清金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.1',
                        ),
                        'PipCode' => 
                        array (
                          'description' => '产品Code，与费用中心账单产品Code一致',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'CommodityCode' => 
                        array (
                          'description' => '商品Code，与费用中心产品明细Code一致。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'NickName' => 
                        array (
                          'description' => '实例昵称。',
                          'type' => 'string',
                          'example' => 'nick',
                        ),
                        'ProductDetail' => 
                        array (
                          'description' => '产品明细。',
                          'type' => 'string',
                          'example' => '云数据库RDS',
                        ),
                        'Usage' => 
                        array (
                          'description' => '用量。',
                          'type' => 'string',
                          'example' => '100',
                        ),
                        'IntranetIP' => 
                        array (
                          'description' => '内网IP。',
                          'type' => 'string',
                          'example' => '192.xx.xx.xx',
                        ),
                        'UsageUnit' => 
                        array (
                          'description' => '用量单位。',
                          'type' => 'string',
                          'example' => 'GB',
                        ),
                        'SplitCommodityCode' => 
                        array (
                          'description' => '分拆项商品code。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'BillAccountID' => 
                        array (
                          'description' => '账单所属账号ID。',
                          'type' => 'string',
                          'example' => '185xxxx3489',
                        ),
                        'ProductType' => 
                        array (
                          'description' => '产品类型。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'DeductedByResourcePackage' => 
                        array (
                          'description' => '资源包抵扣。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'PaymentAmount' => 
                        array (
                          'description' => '现金支付（含信用额度退款抵扣）。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'SplitBillingCycle' => 
                        array (
                          'description' => '分账月。',
                          'type' => 'string',
                          'example' => '2021-06',
                        ),
                        'ServicePeriod' => 
                        array (
                          'description' => '服务时长。',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'SplitItemName' => 
                        array (
                          'description' => '分拆项名称。',
                          'type' => 'string',
                          'example' => 'iZ28bycvyb4Z',
                        ),
                        'ListPrice' => 
                        array (
                          'description' => '单价。',
                          'type' => 'string',
                          'example' => '0.12',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区。',
                          'type' => 'string',
                          'example' => '华北1',
                        ),
                        'PretaxGrossAmount' => 
                        array (
                          'description' => '原始金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'CashAmount' => 
                        array (
                          'description' => '现金支付（不包含信用额度退款抵扣）。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'InstanceConfig' => 
                        array (
                          'description' => '实例详细配置。',
                          'type' => 'string',
                          'example' => 'CPU:12',
                        ),
                        'BillingDate' => 
                        array (
                          'description' => '账单日期，格式YYYY-MM-DD。暂未支持。',
                          'type' => 'string',
                          'example' => '2020-01-20',
                        ),
                        'InternetIP' => 
                        array (
                          'description' => '公网IP。',
                          'type' => 'string',
                          'example' => '34.xx.x.x',
                        ),
                        'Item' => 
                        array (
                          'description' => '账单类型：
SubscriptionOrder（预付订单）。
PayAsYouGoBill （后付账单）。
Refund （退款）。
Adjustment （调账）。',
                          'type' => 'string',
                          'example' => 'PayAsYouGoBill',
                        ),
                        'SplitItemID' => 
                        array (
                          'description' => '分拆项ID。',
                          'type' => 'string',
                          'example' => 'i-28bycvyb4',
                        ),
                        'InstanceID' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-kjhdskjgshfdlkjfdh',
                        ),
                        'Tag' => 
                        array (
                          'description' => '资源标签。资源上标签变更时，则存续期间产生的账单会有此标签。',
                          'type' => 'string',
                          'example' => 'key:testKey value:testValue; key:testKey1 value:testValues1',
                        ),
                        'Currency' => 
                        array (
                          'description' => '币种，取值：
CNY。
USD。
JPY。',
                          'type' => 'string',
                          'example' => 'CNY',
                        ),
                        'DeductedByCashCoupons' => 
                        array (
                          'description' => '代金券抵扣。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'BizType' => 
                        array (
                          'description' => '业务类型',
                          'type' => 'string',
                          'example' => 'trusteeship',
                        ),
                        'BillingItem' => 
                        array (
                          'description' => '计费项。',
                          'type' => 'string',
                          'example' => '带宽',
                        ),
                        'BillingItemCode' => 
                        array (
                          'description' => '计费项。',
                          'type' => 'string',
                          'example' => 'disk',
                        ),
                        'CostUnit' => 
                        array (
                          'description' => '财务单元。',
                          'type' => 'string',
                          'example' => '未分配',
                        ),
                        'ListPriceUnit' => 
                        array (
                          'description' => '单价单位。',
                          'type' => 'string',
                          'example' => '元/GB',
                        ),
                        'ResourceGroup' => 
                        array (
                          'description' => '资源组。',
                          'type' => 'string',
                          'example' => '默认资源组',
                        ),
                        'PretaxAmount' => 
                        array (
                          'description' => '应付金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'ServicePeriodUnit' => 
                        array (
                          'description' => '服务时长单位。',
                          'type' => 'string',
                          'example' => '小时',
                        ),
                        'SplitBillingDate' => 
                        array (
                          'description' => '分账天。',
                          'type' => 'string',
                          'example' => '2021-06-01',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '云数据库RDS',
                        ),
                        'SplitProductDetail' => 
                        array (
                          'description' => '分拆项产品明细名称。',
                          'type' => 'string',
                          'example' => '云数据库',
                        ),
                        'AdjustAmount' => 
                        array (
                          'description' => '信用额度退款抵扣。
',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'OwnerID' => 
                        array (
                          'description' => '资源Owner账号AccountID（多账号代付场景）。',
                          'type' => 'string',
                          'example' => '169***013',
                        ),
                        'DeductedByPrepaidCard' => 
                        array (
                          'description' => '储值卡抵扣。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'InvoiceDiscount' => 
                        array (
                          'description' => '优惠金额。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0',
                        ),
                        'SplitAccountName' => 
                        array (
                          'description' => '分拆项所属账号名称。',
                          'type' => 'string',
                          'example' => 'test**1122',
                        ),
                        'BillingType' => 
                        array (
                          'description' => '计费方式。',
                          'type' => 'string',
                          'example' => '其它',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ItemName' => 
                        array (
                          'description' => '项目名称。',
                          'type' => 'string',
                          'example' => 'iZ28bycvyb4Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"CAESEgoQCg4K\\",\\n    \\"BillingCycle\\": \\"2020-03\\",\\n    \\"MaxResults\\": 20,\\n    \\"AccountID\\": \\"185xxxx3489\\",\\n    \\"TotalCount\\": 20,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": [\\n      {\\n        \\"SplitAccountID\\": \\"12**122\\",\\n        \\"BillAccountName\\": \\"test@test.aliyunid.com\\",\\n        \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n        \\"InstanceSpec\\": \\"ecs.sn1ne.3xlarge\\",\\n        \\"DeductedByCoupons\\": 0,\\n        \\"Region\\": \\"杭州\\",\\n        \\"OutstandingAmount\\": 0.1,\\n        \\"PipCode\\": \\"rds\\",\\n        \\"CommodityCode\\": \\"rds\\",\\n        \\"NickName\\": \\"nick\\",\\n        \\"ProductDetail\\": \\"云数据库RDS\\",\\n        \\"Usage\\": \\"100\\",\\n        \\"IntranetIP\\": \\"192.xx.xx.xx\\",\\n        \\"UsageUnit\\": \\"GB\\",\\n        \\"SplitCommodityCode\\": \\"rds\\",\\n        \\"BillAccountID\\": \\"185xxxx3489\\",\\n        \\"ProductType\\": \\"rds\\",\\n        \\"DeductedByResourcePackage\\": \\"0\\",\\n        \\"PaymentAmount\\": 0,\\n        \\"SplitBillingCycle\\": \\"2021-06\\",\\n        \\"ServicePeriod\\": \\"20\\",\\n        \\"SplitItemName\\": \\"iZ28bycvyb4Z\\",\\n        \\"ListPrice\\": \\"0.12\\",\\n        \\"Zone\\": \\"华北1\\",\\n        \\"PretaxGrossAmount\\": 0,\\n        \\"CashAmount\\": 0,\\n        \\"InstanceConfig\\": \\"CPU:12\\",\\n        \\"BillingDate\\": \\"2020-01-20\\",\\n        \\"InternetIP\\": \\"34.xx.x.x\\",\\n        \\"Item\\": \\"PayAsYouGoBill\\",\\n        \\"SplitItemID\\": \\"i-28bycvyb4\\",\\n        \\"InstanceID\\": \\"i-kjhdskjgshfdlkjfdh\\",\\n        \\"Tag\\": \\"key:testKey value:testValue; key:testKey1 value:testValues1\\",\\n        \\"Currency\\": \\"CNY\\",\\n        \\"DeductedByCashCoupons\\": 0,\\n        \\"BizType\\": \\"trusteeship\\",\\n        \\"BillingItem\\": \\"带宽\\",\\n        \\"BillingItemCode\\": \\"disk\\",\\n        \\"CostUnit\\": \\"未分配\\",\\n        \\"ListPriceUnit\\": \\"元/GB\\",\\n        \\"ResourceGroup\\": \\"默认资源组\\",\\n        \\"PretaxAmount\\": 0,\\n        \\"ServicePeriodUnit\\": \\"小时\\",\\n        \\"SplitBillingDate\\": \\"2021-06-01\\",\\n        \\"ProductName\\": \\"云数据库RDS\\",\\n        \\"SplitProductDetail\\": \\"云数据库\\",\\n        \\"AdjustAmount\\": 0,\\n        \\"OwnerID\\": \\"169***013\\",\\n        \\"DeductedByPrepaidCard\\": 0,\\n        \\"InvoiceDiscount\\": 0,\\n        \\"SplitAccountName\\": \\"test**1122\\",\\n        \\"BillingType\\": \\"其它\\",\\n        \\"ProductCode\\": \\"rds\\",\\n        \\"ItemName\\": \\"iZ28bycvyb4Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>79EE7556-0CFD-44EB-9CD6-B3B526E3A85F</RequestId>\\n<Message>Successful!</Message>\\n<Data>\\n    <TotalCount>20</TotalCount>\\n    <BillingCycle>2020-03</BillingCycle>\\n    <AccountID>185xxxx3489</AccountID>\\n    <NextToken>CAESEgoQCg4KCmdtdF9jcmVhdGUQARgBIkgKCQBwhGmPcAEAAAo7AzYAAAAxTDgwMDcxMjg3ZDJhNmM3ZDguTDgwMDAwMDAwMDAwMzE1MTIuTDgwMDcyZDMyZTJkYzg3N2U</NextToken>\\n    <MaxResults>20</MaxResults>\\n    <AccountName>test@test.aliyunid.com</AccountName>\\n    <Items>\\n        <ProductName>云数据库RDS</ProductName>\\n        <InstanceID>i-kjhdskjgshfdlkjfdh</InstanceID>\\n        <BillAccountID>185xxxx3489</BillAccountID>\\n        <SplitCommodityCode>rds</SplitCommodityCode>\\n        <ListPrice>0.12</ListPrice>\\n        <PaymentAmount>0</PaymentAmount>\\n        <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n        <SplitItemName>iZ28bycvyb4Z</SplitItemName>\\n        <Item>PayAsYouGoBill</Item>\\n        <SubscriptionType>PayAsYouGo</SubscriptionType>\\n        <InstanceConfig>CPU:12</InstanceConfig>\\n        <SplitBillingDate>2021-06-01</SplitBillingDate>\\n        <Currency>CNY</Currency>\\n        <CostUnit>未分配</CostUnit>\\n        <DeductedByCoupons>0</DeductedByCoupons>\\n        <ProductCode>rds</ProductCode>\\n        <ProductType>rds</ProductType>\\n        <OutstandingAmount>0.1</OutstandingAmount>\\n        <BizType>trusteeship</BizType>\\n        <NickName>nick</NickName>\\n        <IntranetIP>192.xx.xx.xx</IntranetIP>\\n        <ServicePeriodUnit>小时</ServicePeriodUnit>\\n        <ServicePeriod>20</ServicePeriod>\\n        <UsageUnit>GB</UsageUnit>\\n        <OwnerID>169***013</OwnerID>\\n        <InternetIP>34.xx.x.x</InternetIP>\\n        <Region>杭州</Region>\\n        <InstanceSpec>ecs.sn1ne.3xlarge</InstanceSpec>\\n        <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n        <ListPriceUnit>元/GB</ListPriceUnit>\\n        <BillingDate>2020-01-20</BillingDate>\\n        <InvoiceDiscount>0</InvoiceDiscount>\\n        <SplitProductDetail>云数据库</SplitProductDetail>\\n        <PretaxGrossAmount>0</PretaxGrossAmount>\\n        <CommodityCode>rds</CommodityCode>\\n        <AdjustAmount>0</AdjustAmount>\\n        <ResourceGroup>默认资源组</ResourceGroup>\\n        <BillingType>其它</BillingType>\\n        <SplitAccountName>test**1122</SplitAccountName>\\n        <Usage>100</Usage>\\n        <SplitAccountID>12**122</SplitAccountID>\\n        <ProductDetail>云数据库RDS</ProductDetail>\\n        <Zone>华北1</Zone>\\n        <BillingItem>带宽</BillingItem>\\n        <PipCode>rds</PipCode>\\n        <SplitItemID>i-28bycvyb4</SplitItemID>\\n        <SplitBillingCycle>2021-06</SplitBillingCycle>\\n        <DeductedByResourcePackage>0</DeductedByResourcePackage>\\n        <PretaxAmount>0</PretaxAmount>\\n        <BillAccountName>test@test.aliyunid.com</BillAccountName>\\n        <Tag>key:testKey value:testValue; key:testKey1 value:testValues1</Tag>\\n        <CashAmount>0</CashAmount>\\n    </Items>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '分账账单服务',
      'description' => '-  分账账单当月数据查询结果仅供参考，不作为对账依据。当月最终账单在次月4日12点后查询，当月分账账单数据中不包含未结算（未出账，累账中）的后付费数据。
-  分账账单数据支持最近12个月数据。
-  分账账单数据相对于实际费用消耗延迟48小时更新，其中分拆型云产品（例如：CDN、OSS、共享带宽等）各个分拆项（例如：域名、Bucket、EIP等）的具体费用延迟72小时更新。
-   分账账单数据需要用户在控制台<props="china">[分账账单](https://usercenter2.aliyun.com/finance/split-bill)</props><props="intl">[分账账单](https://usercenter2-intl.aliyun.com/finance/split-bill)</props>页面开通后才可提供，自开通后延迟24小时可使用。
-  单用户限流10笔/秒，如遇超时，请重试。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySplitItemBill' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账单日期，YYYY－MM。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-03',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
Subscription：预付费。
PayAsYouGo：后付费。
说明：必须和ProductCode参数一起使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayAsYouGo',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数量，默认值：20，最大值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'BillOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属账号的ID，资源归属账号是实际使用资源的账号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '-1',
            'example' => '123',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码，默认值为1。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'BillingCycle' => 
                  array (
                    'description' => '账单日期，格式：YYYY－MM。',
                    'type' => 'string',
                    'example' => '2020-03',
                  ),
                  'AccountID' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '185xxxx3489',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页数量，默认值：20，最大值：300。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'AccountName' => 
                  array (
                    'description' => '用户账号。',
                    'type' => 'string',
                    'example' => 'test@test.aliyunid.com',
                  ),
                  'Items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Item' => 
                      array (
                        'description' => '账单详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SplitAccountID' => 
                            array (
                              'description' => '分拆项所属账号AccountID。',
                              'type' => 'string',
                              'example' => '122',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型，取值：
Subscription：预付费。
PayAsYouGo：后付费。
说明：必须和ProductCode参数一起使用。
',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'InstanceSpec' => 
                            array (
                              'description' => '实例规格。',
                              'type' => 'string',
                              'example' => 'ecs.sn1ne.3xlarge',
                            ),
                            'DeductedByCoupons' => 
                            array (
                              'description' => '优惠券优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'Region' => 
                            array (
                              'description' => '地域。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou',
                            ),
                            'OutstandingAmount' => 
                            array (
                              'description' => '未结清金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'PipCode' => 
                            array (
                              'description' => '产品Code，与费用中心账单产品Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品Code，与费用中心产品明细Code一致',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'NickName' => 
                            array (
                              'description' => '实例昵称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'ProductDetail' => 
                            array (
                              'description' => '产品明细。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'Usage' => 
                            array (
                              'description' => '用量, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => '100',
                            ),
                            'IntranetIP' => 
                            array (
                              'description' => '内网IP。',
                              'type' => 'string',
                              'example' => '192.xx.xx.xx',
                            ),
                            'UsageUnit' => 
                            array (
                              'description' => '用量单位, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => 'GB',
                            ),
                            'SplitCommodityCode' => 
                            array (
                              'description' => '分拆项商品Code。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'DeductedByResourcePackage' => 
                            array (
                              'description' => '资源包抵扣。',
                              'type' => 'string',
                              'example' => 'NULL',
                            ),
                            'PaymentAmount' => 
                            array (
                              'description' => '现金支付。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'SplitBillingCycle' => 
                            array (
                              'description' => '分账月。',
                              'type' => 'string',
                              'example' => '2020-06',
                            ),
                            'ServicePeriod' => 
                            array (
                              'description' => '服务周期。',
                              'type' => 'string',
                              'example' => '10',
                            ),
                            'SplitItemName' => 
                            array (
                              'description' => '分拆项名称。',
                              'type' => 'string',
                              'example' => 'iZ28bycvyb4Z',
                            ),
                            'ListPrice' => 
                            array (
                              'description' => '单价, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => '100',
                            ),
                            'Zone' => 
                            array (
                              'description' => '可用区。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou-h',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'CashAmount' => 
                            array (
                              'description' => '现金支付（不包含信用额度退款抵扣）。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'InstanceConfig' => 
                            array (
                              'description' => '实例详细配置。',
                              'type' => 'string',
                              'example' => 'CPU:12',
                            ),
                            'BillingDate' => 
                            array (
                              'description' => '账单日期，格式YYYY-MM-DD。',
                              'type' => 'string',
                              'example' => '2020-01-20',
                            ),
                            'InternetIP' => 
                            array (
                              'description' => '公网IP。',
                              'type' => 'string',
                              'example' => '34.xx.x.x',
                            ),
                            'Item' => 
                            array (
                              'description' => '账单类型：
SubscriptionOrder （预付订单）。
PayAsYouGoBill （后付账单）。
Refund （退款）。
Adjustment （调账）。',
                              'type' => 'string',
                              'example' => 'PayAsYouGoBill',
                            ),
                            'SplitItemID' => 
                            array (
                              'description' => '分拆项ID。',
                              'type' => 'string',
                              'example' => 'i-28bycvyb4',
                            ),
                            'InstanceID' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => 'i-kjhdskjgshfdlkjfdh',
                            ),
                            'Tag' => 
                            array (
                              'description' => '标签。',
                              'type' => 'string',
                              'example' => 'tag',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种，取值：
CNY。
USD。
JPY。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'DeductedByCashCoupons' => 
                            array (
                              'description' => '代金券抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'BillingItem' => 
                            array (
                              'description' => '计费项。',
                              'type' => 'string',
                              'example' => '其他',
                            ),
                            'CostUnit' => 
                            array (
                              'description' => '财务单元。',
                              'type' => 'string',
                              'example' => '未分配',
                            ),
                            'ListPriceUnit' => 
                            array (
                              'description' => '单价单位, 仅当isBillingItem为true时有效。',
                              'type' => 'string',
                              'example' => '元',
                            ),
                            'ResourceGroup' => 
                            array (
                              'description' => '资源组。',
                              'type' => 'string',
                              'example' => '默认资源组',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '应付金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'ServicePeriodUnit' => 
                            array (
                              'description' => '服务时长单位。',
                              'type' => 'string',
                              'example' => '秒',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '云数据库RDS',
                            ),
                            'SplitProductDetail' => 
                            array (
                              'description' => '分拆项产品明细名称。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'AdjustAmount' => 
                            array (
                              'description' => '信用额度退款抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'OwnerID' => 
                            array (
                              'description' => '子账号AccountID（多账号代付场景）。',
                              'type' => 'string',
                              'example' => '169***013',
                            ),
                            'DeductedByPrepaidCard' => 
                            array (
                              'description' => '储值卡抵扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '优惠金额。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'SplitAccountName' => 
                            array (
                              'description' => '分拆项所属账号名称。',
                              'type' => 'string',
                              'example' => '12@test.com',
                            ),
                            'BillingType' => 
                            array (
                              'description' => '计费方式。',
                              'type' => 'string',
                              'example' => '其它',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"BillingCycle\\": \\"2020-03\\",\\n    \\"AccountID\\": \\"185xxxx3489\\",\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 2,\\n    \\"AccountName\\": \\"test@test.aliyunid.com\\",\\n    \\"Items\\": {\\n      \\"Item\\": [\\n        {\\n          \\"SplitAccountID\\": \\"122\\",\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"InstanceSpec\\": \\"ecs.sn1ne.3xlarge\\",\\n          \\"DeductedByCoupons\\": 0,\\n          \\"Region\\": \\"cn-hangzhou\\",\\n          \\"OutstandingAmount\\": 0,\\n          \\"PipCode\\": \\"rds\\",\\n          \\"CommodityCode\\": \\"rds\\",\\n          \\"NickName\\": \\"test\\",\\n          \\"ProductDetail\\": \\"云数据库RDS\\",\\n          \\"Usage\\": \\"100\\",\\n          \\"IntranetIP\\": \\"192.xx.xx.xx\\",\\n          \\"UsageUnit\\": \\"GB\\",\\n          \\"SplitCommodityCode\\": \\"rds\\",\\n          \\"ProductType\\": \\"rds\\",\\n          \\"DeductedByResourcePackage\\": \\"NULL\\",\\n          \\"PaymentAmount\\": 0,\\n          \\"SplitBillingCycle\\": \\"2020-06\\",\\n          \\"ServicePeriod\\": \\"10\\",\\n          \\"SplitItemName\\": \\"iZ28bycvyb4Z\\",\\n          \\"ListPrice\\": \\"100\\",\\n          \\"Zone\\": \\"cn-hangzhou-h\\",\\n          \\"PretaxGrossAmount\\": 0,\\n          \\"CashAmount\\": 0,\\n          \\"InstanceConfig\\": \\"CPU:12\\",\\n          \\"BillingDate\\": \\"2020-01-20\\",\\n          \\"InternetIP\\": \\"34.xx.x.x\\",\\n          \\"Item\\": \\"PayAsYouGoBill\\",\\n          \\"SplitItemID\\": \\"i-28bycvyb4\\",\\n          \\"InstanceID\\": \\"i-kjhdskjgshfdlkjfdh\\",\\n          \\"Tag\\": \\"tag\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"DeductedByCashCoupons\\": 0,\\n          \\"BillingItem\\": \\"其他\\",\\n          \\"CostUnit\\": \\"未分配\\",\\n          \\"ListPriceUnit\\": \\"元\\",\\n          \\"ResourceGroup\\": \\"默认资源组\\",\\n          \\"PretaxAmount\\": 0,\\n          \\"ServicePeriodUnit\\": \\"秒\\",\\n          \\"ProductName\\": \\"云数据库RDS\\",\\n          \\"SplitProductDetail\\": \\"rds\\",\\n          \\"AdjustAmount\\": 0,\\n          \\"OwnerID\\": \\"169***013\\",\\n          \\"DeductedByPrepaidCard\\": 0,\\n          \\"InvoiceDiscount\\": 0,\\n          \\"SplitAccountName\\": \\"12@test.com\\",\\n          \\"BillingType\\": \\"其它\\",\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>79EE7556-0CFD-44EB-9CD6-B3B526E3A85F</RequestId>\\n<Message>Successful!</Message>\\n<Data>\\n    <BillingCycle>2020-03</BillingCycle>\\n    <TotalCount>2</TotalCount>\\n    <AccountID>185xxxx3489</AccountID>\\n    <PageNum>1</PageNum>\\n    <PageSize>20</PageSize>\\n    <Items>\\n        <Item>\\n            <InstanceSpec>ecs.sn1ne.3xlarge</InstanceSpec>\\n            <ProductName>云数据库RDS</ProductName>\\n            <InstanceID>i-kjhdskjgshfdlkjfdh</InstanceID>\\n            <DeductedByCashCoupons>0</DeductedByCashCoupons>\\n            <ListPriceUnit>元</ListPriceUnit>\\n            <BillingDate/>\\n            <ListPrice>100</ListPrice>\\n            <PaymentAmount>0</PaymentAmount>\\n            <DeductedByPrepaidCard>0</DeductedByPrepaidCard>\\n            <InvoiceDiscount>0</InvoiceDiscount>\\n            <SplitItemName>iZ28bycvyb4Z</SplitItemName>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <Item>PayAsYouGoBill</Item>\\n            <PretaxGrossAmount>0</PretaxGrossAmount>\\n            <InstanceConfig>CPU:12</InstanceConfig>\\n            <Currency>CNY</Currency>\\n            <CostUnit>未分配</CostUnit>\\n            <ResourceGroup>默认资源组</ResourceGroup>\\n            <BillingType>其它</BillingType>\\n            <Usage>100</Usage>\\n            <DeductedByCoupons>0</DeductedByCoupons>\\n            <ProductDetail>云数据库RDS</ProductDetail>\\n            <ProductCode>rds</ProductCode>\\n            <Zone>cn-hangzhou-h</Zone>\\n            <ProductType>rds</ProductType>\\n            <OutstandingAmount>0</OutstandingAmount>\\n            <BillingItem>其他</BillingItem>\\n            <NickName>test</NickName>\\n            <IntranetIP>192.xx.xx.xx</IntranetIP>\\n            <ServicePeriod>10</ServicePeriod>\\n            <SplitItemID>i-28bycvyb4</SplitItemID>\\n            <DeductedByResourcePackage>NULL</DeductedByResourcePackage>\\n            <UsageUnit>GB</UsageUnit>\\n            <OwnerID>169***013</OwnerID>\\n            <PretaxAmount>0</PretaxAmount>\\n            <InternetIP>34.xx.x.x</InternetIP>\\n            <Region>cn-hangzhou</Region>\\n            <Tag>tag</Tag>\\n        </Item>\\n    </Items>\\n    <AccountName>test@test.aliyunid.com</AccountName>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询分账账单',
      'summary' => '查询分账账单。分账账单API已升级，请使用新版API：DescribeSplitItemBill。',
      'description' => '- 分账账单API已升级，请使用新版API：[DescribeSplitItemBill](~~208169~~)。此API不再提供50000行以后数据的查询。
- 与费用中心-分账账单账期数据一致
- 分账账单提供12月内账期数据查询
- 本数据需要用户在控制台[分账账单](https://usercenter2.aliyun.com/finance/split-bill)页面开通后才可提供',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InquiryPriceRefundInstance' => 
    array (
      'summary' => 'InquiryPriceRefundInstance：调用本接口对需要退订的实例进行询价。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'clientToken',
            'description' => '需要幂等场景必填。UUID生成的字符串。此字段用于幂等，多次调用传入同样的值，会返回第一次的结果。',
            'type' => 'string',
            'required' => false,
            'example' => '793F021C-B589-1225-82A9-99232AEBE494',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'productCode',
            'description' => '退订场景必填，产品code',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'instanceId',
            'description' => '退订场景必填，实例id',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp1etb69sqxgl4*******',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'productType',
            'description' => '退订场景必填，产品类型，无特殊说明传入“” 空字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '”“',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'result',
            'description' => 'result',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => 'message',
                'description' => '执行结果说明',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'title' => 'requestId',
                'description' => '执行链路追踪字符串，排查问题时，可以提供给平台。',
                'type' => 'string',
                'example' => 'UUID',
              ),
              'Data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'title' => 'hostId',
                    'description' => '执行主机所在站点',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                  'InstanceId' => 
                  array (
                    'title' => 'instanceId',
                    'description' => '实例id',
                    'type' => 'string',
                    'example' => 'i-bp1etb69sqxgl4*******',
                  ),
                  'Currency' => 
                  array (
                    'title' => 'currency',
                    'description' => '币种',
                    'type' => 'string',
                    'example' => '退款金额本币币种： CNY：人民币。 USD：美元。 JPY：日元。',
                  ),
                  'RefundAmount' => 
                  array (
                    'title' => 'refundAmount',
                    'description' => '金额',
                    'type' => 'number',
                    'format' => 'double',
                    'example' => '12.34',
                  ),
                ),
              ),
              'Code' => 
              array (
                'title' => 'code',
                'description' => '响应码',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => 'success',
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotExists',
            'errorMessage' => 'The specific resource is not exists.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceStatusError',
            'errorMessage' => 'The resource status error.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner does not belong to caller.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
          5 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'The specified API is not applicable for the user.',
          ),
          6 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'The user is not authorized for the specified API.',
          ),
          7 => 
          array (
            'errorCode' => 'BindMirrorInstanceError',
            'errorMessage' => 'Charged images that are related to ECS.',
          ),
          8 => 
          array (
            'errorCode' => 'ExceedRefundQuotaError',
            'errorMessage' => 'The number of unsubscription times has reached the upper limit.',
          ),
          9 => 
          array (
            'errorCode' => 'ExistUnPaidOrderError',
            'errorMessage' => 'The instance has an unsettled order.',
          ),
          10 => 
          array (
            'errorCode' => 'ExistRefundingOrderError',
            'errorMessage' => 'The instance ID is invalid: the instance may have expired, been refunded, or been released.',
          ),
          11 => 
          array (
            'errorCode' => 'NoRestValueError',
            'errorMessage' => 'The refund amount is 0.',
          ),
          12 => 
          array (
            'errorCode' => 'AmbassadorOrderLimitError',
            'errorMessage' => 'The instance has an ambassador order that may raise risks.',
          ),
          13 => 
          array (
            'errorCode' => 'ActivityForbiddenError',
            'errorMessage' => 'Promotional orders do not support refunds.',
          ),
          14 => 
          array (
            'errorCode' => 'ProductCheckError',
            'errorMessage' => 'The cloud service failed SPI preflight verification.',
          ),
          15 => 
          array (
            'errorCode' => 'CommodityNotSupported',
            'errorMessage' => 'The specified commodity is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"UUID\\",\\n  \\"Data\\": {\\n    \\"HostId\\": \\"cn\\",\\n    \\"InstanceId\\": \\"i-bp1etb69sqxgl4*******\\",\\n    \\"Currency\\": \\"退款金额本币币种： CNY：人民币。 USD：美元。 JPY：日元。\\",\\n    \\"RefundAmount\\": 12.34\\n  },\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '退订实例询价',
      'description' => '1. **请仔细核对退订资源的信息，并确认退订条款和退订金额，资源一经退订无法恢复。**
2. 退订只退还实付金额的部分，已使用的代金券不退还。
3. 其他问题请参照：<props="china">[退订规则](https://help.aliyun.com/knowledge_detail/116043.html?spm=a2c81.e1d666e.app.2.62ae11271Kd6iM)</props><props="intl">[国际站退订规则说明](https://www.alibabacloud.com/help/zh/user-center/user-guide/refund-rules)</props>',
      'extraInfo' => '
**针对部分业务规则拦截返回的错误码的解释**

- ResourceNotExists：实例不存在
- ResourceStatusError：实例状态不对
- BindMirrorInstanceError：ecs有关联的收费镜像
- ExceedRefundQuotaError：退订次数超过quota配额上限
- ExistUnPaidOrderError：实例下存在未支付订单
- ExistRefundingOrderError：无效实例ID(实例已到期或已退款或已释放)
- NoRestValueError：退款金额为0
- AmbassadorOrderLimitError：实例下有云大使订单
- ActivityForbiddenError：活动订单禁止退款
- ProductCheckError：云产品规则预校验未通过',
    ),
    'GetPayAsYouGoPrice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值类型：PayAsYouGo（后付费）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PayAsYouGo',
          ),
        ),
        3 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属的 Region ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'ModuleList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '计价模块列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '计价模块。',
              'type' => 'object',
              'properties' => 
              array (
                'ModuleCode' => 
                array (
                  'description' => '第n个计价模块的模块标识。


> 可通过[DescribePricingModule](~~96469~~)接口获取Module参数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'InstanceType',
                ),
                'PriceType' => 
                array (
                  'description' => '第n个计价模块的价格类型，取值范围：
- Hour：小时价。
- Usage：使用量。
- Month：月价。
- Year：年价。

> 可通过[DescribePricingModule](~~96469~~)接口获取Module参数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Hour',
                ),
                'Config' => 
                array (
                  'description' => '第n个计价模块的配置，n的取值范围为（1~50），格式：“AA:aa,BB:bb”，其中AA,BB分别为计价模块属性标识，aa,bb分别为计价模块属性的属性值。

> 可通过[DescribePricingModule](~~96469~~)接口获取Module参数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'InstanceType:ecs.g5.xlarge,IoOptimized:IoOptimized,ImageOs:linux',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1537A007-72D7-4165-8A26-8694A38E219A',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Currency' => 
                  array (
                    'description' => '币种。取值范围：
- CNY：人民币。
- USD：美元。
- JPY：日元。',
                    'type' => 'string',
                    'example' => 'CNY',
                  ),
                  'ModuleDetails' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ModuleDetail' => 
                      array (
                        'description' => '计价模块价格详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '计价模块价格详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CostAfterDiscount' => 
                            array (
                              'description' => '优惠价。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '折扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '20',
                            ),
                            'UnitPrice' => 
                            array (
                              'description' => '单价。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'OriginalCost' => 
                            array (
                              'description' => '原价。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '1.77',
                            ),
                            'ModuleCode' => 
                            array (
                              'description' => '计价模块标识。',
                              'type' => 'string',
                              'example' => 'InstanceType',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'PromotionDetails' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PromotionDetail' => 
                      array (
                        'description' => '优惠详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '优惠详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PromotionDesc' => 
                            array (
                              'description' => '优惠描述。',
                              'type' => 'string',
                              'example' => '仅提供测试使用的1分钱活动',
                            ),
                            'PromotionId' => 
                            array (
                              'description' => '优惠标识。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '10200210',
                            ),
                            'PromotionName' => 
                            array (
                              'description' => '优惠名称。',
                              'type' => 'string',
                              'example' => '仅提供测试使用的1分钱活动',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"1537A007-72D7-4165-8A26-8694A38E219A\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Currency\\": \\"CNY\\",\\n    \\"ModuleDetails\\": {\\n      \\"ModuleDetail\\": [\\n        {\\n          \\"CostAfterDiscount\\": 100,\\n          \\"InvoiceDiscount\\": 20,\\n          \\"UnitPrice\\": 0,\\n          \\"OriginalCost\\": 1.77,\\n          \\"ModuleCode\\": \\"InstanceType\\"\\n        }\\n      ]\\n    },\\n    \\"PromotionDetails\\": {\\n      \\"PromotionDetail\\": [\\n        {\\n          \\"PromotionDesc\\": \\"仅提供测试使用的1分钱活动\\",\\n          \\"PromotionId\\": 10200210,\\n          \\"PromotionName\\": \\"仅提供测试使用的1分钱活动\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetPayAsYouGoPriceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>1537A007-72D7-4165-8A26-8694A38E219A</RequestId>\\n    <Data>\\n        <Currency>CNY</Currency>\\n        <ModuleDetails>\\n            <ModuleDetail>\\n                <UnitPrice>0</UnitPrice>\\n                <ModuleCode>InstanceType</ModuleCode>\\n                <CostAfterDiscount>0.01</CostAfterDiscount>\\n                <OriginalCost>1.77</OriginalCost>\\n                <InvoiceDiscount>1.76</InvoiceDiscount>\\n            </ModuleDetail>\\n        </ModuleDetails>\\n        <PromotionDetails>\\n            <PromotionDetail>\\n                <PromotionName>仅提供测试使用的1分钱活动</PromotionName>\\n                <PromotionId>10200210</PromotionId>\\n            </PromotionDetail>\\n        </PromotionDetails>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</GetPayAsYouGoPriceResponse>","errorExample":""}]',
      'title' => '后付费产品询价服务',
      'summary' => '查询后付费产品价格。',
      'description' => '### API描述
1. 调用QueryProductList获取产品code,参见[查询产品信息](~~95984~~)。
2. 调用DescribePricingModule接口获取产品的配置参数，参见[查询产品模块信息](~~96469~~)。
3. 根据查询到的产品配置参数调用本接口获取后付费产品的价格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSubscriptionPrice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServicePeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务时长单位。取值范围：
- Year：年。
- Month：月。',
            'type' => 'string',
            'required' => false,
            'example' => 'Year',
          ),
        ),
        1 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值类型：Subscription（预付费）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Subscription',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecs',
          ),
        ),
        3 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单类型。取值范围：
- NewOrder：新购。
- Renewal：续费。
- Upgrade：升级。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NewOrder',
          ),
        ),
        4 => 
        array (
          'name' => 'ServicePeriodQuantity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型，是否必输以具体产品的询价文档为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        6 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属的Region ID（地域ID）。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定询价的实例 ID，升级场景必须设置，用于获取实例升级前配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-khkjhxxxxxxxxx',
          ),
        ),
        8 => 
        array (
          'name' => 'Quantity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'ModuleList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '计价模块列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ModuleStatus' => 
                array (
                  'description' => '仅在订单类型为Upgrade（升级）时需要，表示此次询价模块变更状态。
取值范围：
- 1：新增。
- 2：变更，升级场景如果计价模块的配置发生变化需要显示指定此状态值。

默认值：1。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'ModuleCode' => 
                array (
                  'description' => '第n个计价模块的模块标识。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'PackageCode',
                ),
                'Tag' => 
                array (
                  'description' => '仅在某些产品的升级变配中需要，代表指定资源的标识。例如：对于磁盘的变配，用Tag标识具体磁盘对应的Id。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '213213123',
                ),
                'Config' => 
                array (
                  'description' => '第n个计价模块的配置，n的取值范围为（1~50），格式：“AA:aa,BB:bb”，其中AA,BB分别为计价模块属性标识，aa,bb分别为计价模块属性的属性值。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'PackageCode:version_1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'InvalidConfigCod',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '30E7066E-AE6F-4E59-AFE6-11386CE3AFA7',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '产品价格信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'OriginalPrice' => 
                  array (
                    'description' => '原价。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '900',
                  ),
                  'DiscountPrice' => 
                  array (
                    'description' => '折扣。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '100',
                  ),
                  'Currency' => 
                  array (
                    'description' => '币种。取值范围：
- CNY：人民币。
- USD：美元。
- JPY：日元。',
                    'type' => 'string',
                    'example' => 'CNY',
                  ),
                  'Quantity' => 
                  array (
                    'description' => '数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TradePrice' => 
                  array (
                    'description' => '优惠价。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '0',
                  ),
                  'ModuleDetails' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ModuleDetail' => 
                      array (
                        'description' => '计价模块价格详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CostAfterDiscount' => 
                            array (
                              'description' => '优惠价。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'InvoiceDiscount' => 
                            array (
                              'description' => '折扣。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '100',
                            ),
                            'UnitPrice' => 
                            array (
                              'description' => '单价。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0',
                            ),
                            'OriginalCost' => 
                            array (
                              'description' => '原价。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '200',
                            ),
                            'ModuleCode' => 
                            array (
                              'description' => '计价模块标识。',
                              'type' => 'string',
                              'example' => 'PackageCode',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'PromotionDetails' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PromotionDetail' => 
                      array (
                        'description' => '优惠详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PromotionDesc' => 
                            array (
                              'description' => '优惠描述。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'PromotionId' => 
                            array (
                              'description' => '优惠标识。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1021199213',
                            ),
                            'PromotionName' => 
                            array (
                              'description' => '优惠名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"InvalidConfigCod\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"30E7066E-AE6F-4E59-AFE6-11386CE3AFA7\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OriginalPrice\\": 900,\\n    \\"DiscountPrice\\": 100,\\n    \\"Currency\\": \\"CNY\\",\\n    \\"Quantity\\": 1,\\n    \\"TradePrice\\": 0,\\n    \\"ModuleDetails\\": {\\n      \\"ModuleDetail\\": [\\n        {\\n          \\"CostAfterDiscount\\": 0,\\n          \\"InvoiceDiscount\\": 100,\\n          \\"UnitPrice\\": 0,\\n          \\"OriginalCost\\": 200,\\n          \\"ModuleCode\\": \\"PackageCode\\"\\n        }\\n      ]\\n    },\\n    \\"PromotionDetails\\": {\\n      \\"PromotionDetail\\": [\\n        {\\n          \\"PromotionDesc\\": \\"test\\",\\n          \\"PromotionId\\": 1021199213,\\n          \\"PromotionName\\": \\"test\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSubscriptionPriceResponse>\\n    <Data>\\n        <Quantity>1</Quantity>\\n        <DiscountPrice>900</DiscountPrice>\\n        <ModuleDetails>\\n            <ModuleDetail>\\n                <ModuleCode>ExtBandwidth</ModuleCode>\\n                <UnitPrice>0</UnitPrice>\\n                <CostAfterDiscount>0</CostAfterDiscount>\\n                <OriginalCost>800</OriginalCost>\\n                <InvoiceDiscount>800</InvoiceDiscount>\\n            </ModuleDetail>\\n            <ModuleDetail>\\n                <ModuleCode>PackageCode</ModuleCode>\\n                <UnitPrice>0</UnitPrice>\\n                <CostAfterDiscount>0</CostAfterDiscount>\\n                <OriginalCost>100</OriginalCost>\\n                <InvoiceDiscount>100</InvoiceDiscount>\\n            </ModuleDetail>\\n        </ModuleDetails>\\n        <PromotionDetails>\\n            <PromotionDetail>\\n                <PromotionId>1021199213</PromotionId>\\n                <PromotionName/>\\n            </PromotionDetail>\\n        </PromotionDetails>\\n        <OriginalPrice>900</OriginalPrice>\\n        <TradePrice>0</TradePrice>\\n        <Currency>CNY</Currency>\\n    </Data>\\n    <RequestId>D6E068C3-25BC-455A-85FE-45F0B22ECB1F</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Message>Successful!</Message>\\n</GetSubscriptionPriceResponse>","errorExample":""}]',
      'title' => '预付费产品询价服务',
      'summary' => '查询预付费产品价格。',
      'description' => '1. 调用QueryProductList获取产品code,参见[查询产品信息](~~95984~~)。
2. 调用DescribePricingModule接口获取产品的配置参数，参见[查询产品模块信息](~~96469~~)。
3. 根据查询到的产品配置参数调用本接口获取预付费产品的价格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryAvailableInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数，默认值为20，最大不超过300个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。可通过接口**QueryProductList**查询产品代码。

> 当设置了region时，不为空。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        5 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceIDs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。多个ID用英文逗号分隔，最大不超过100个。',
            'type' => 'string',
            'required' => false,
            'example' => 'rm-xxxxxxxxxxxx',
          ),
        ),
        7 => 
        array (
          'name' => 'EndTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间段起，符合ISO8601标准的utc时间格式，例如2016-05-23T12:00:00Z。',
            'type' => 'string',
            'required' => false,
            'example' => '2016-05-23T12:00:00Z',
          ),
        ),
        8 => 
        array (
          'name' => 'EndTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间段止，符合ISO8601标准的utc时间格式，例如2016-05-23T12:00:00Z。',
            'type' => 'string',
            'required' => false,
            'example' => '2016-05-23T12:00:00Z',
          ),
        ),
        9 => 
        array (
          'name' => 'CreateTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间段起，符合ISO8601标准的utc时间格式。',
            'type' => 'string',
            'required' => false,
            'example' => '2016-05-23T12:00:00Z',
          ),
        ),
        10 => 
        array (
          'name' => 'CreateTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间段止，符合ISO8601标准的utc时间格式。',
            'type' => 'string',
            'required' => false,
            'example' => '2016-05-23T12:00:00Z',
          ),
        ),
        11 => 
        array (
          'name' => 'RenewStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '续费状态，取值：
- AutoRenewal：自动续费。
- ManualRenewal：手动续费。
- NotRenewal：不续费。',
            'type' => 'string',
            'required' => false,
            'example' => 'AutoRenewal',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C7C15585-8349-4C62-BEE4-5A391841B9BE',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'InstanceList' => 
                  array (
                    'description' => '实例信息的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SubStatus' => 
                        array (
                          'description' => '子状态。',
                          'type' => 'string',
                          'example' => 'Normal-后付费模块正常
WaitForLimit-后付费模块即将欠费受限
BandwidthLimited-后付费模块欠费受限',
                        ),
                        'Status' => 
                        array (
                          'description' => '状态。',
                          'type' => 'string',
                          'example' => 'Creating-资源创建中
WaitForExpire-即将停服
Normal-正常
Expired-停服',
                        ),
                        'ExpectedReleaseTime' => 
                        array (
                          'description' => '期望释放时间。',
                          'type' => 'string',
                          'example' => '2019-09-08T16:00:00Z',
                        ),
                        'RenewStatus' => 
                        array (
                          'description' => '续费状态，取值：
- AutoRenewal：自动续费。
- ManualRenewal：手动续费。
- NotRenewal：不续费。',
                          'type' => 'string',
                          'example' => 'ManualRenewal',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2019-09-08T16:00:00Z',
                        ),
                        'SellerId' => 
                        array (
                          'description' => '卖方ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123123123',
                        ),
                        'InstanceID' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => '1049056',
                        ),
                        'Seller' => 
                        array (
                          'description' => '卖方。',
                          'type' => 'string',
                          'example' => '123123123',
                        ),
                        'StopTime' => 
                        array (
                          'description' => '停止时间。',
                          'type' => 'string',
                          'example' => '2019-09-08T16:00:00Z',
                        ),
                        'RenewalDurationUnit' => 
                        array (
                          'description' => '自动续费周期单位，取值：
- M：月。
- Y：年。',
                          'type' => 'string',
                          'example' => 'M',
                        ),
                        'SubscriptionType' => 
                        array (
                          'description' => '订阅类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
                          'type' => 'string',
                          'example' => 'Subscription',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => '所有者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '325352345',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '结束时间。',
                          'type' => 'string',
                          'example' => '2019-09-08T16:00:00Z',
                        ),
                        'ProductType' => 
                        array (
                          'description' => '产品类型。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'ReleaseTime' => 
                        array (
                          'description' => '释放时间。',
                          'type' => 'string',
                          'example' => '2019-09-08T16:00:00Z',
                        ),
                        'RenewalDuration' => 
                        array (
                          'description' => '自动续费周期数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ProductCode' => 
                        array (
                          'description' => '产品代码。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"C7C15585-8349-4C62-BEE4-5A391841B9BE\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 11,\\n    \\"InstanceList\\": [\\n      {\\n        \\"SubStatus\\": \\"Normal-后付费模块正常\\\\nWaitForLimit-后付费模块即将欠费受限\\\\nBandwidthLimited-后付费模块欠费受限\\",\\n        \\"Status\\": \\"Creating-资源创建中\\\\nWaitForExpire-即将停服\\\\nNormal-正常\\\\nExpired-停服\\",\\n        \\"ExpectedReleaseTime\\": \\"2019-09-08T16:00:00Z\\",\\n        \\"RenewStatus\\": \\"ManualRenewal\\",\\n        \\"CreateTime\\": \\"2019-09-08T16:00:00Z\\",\\n        \\"SellerId\\": 123123123,\\n        \\"InstanceID\\": \\"1049056\\",\\n        \\"Seller\\": \\"123123123\\",\\n        \\"StopTime\\": \\"2019-09-08T16:00:00Z\\",\\n        \\"RenewalDurationUnit\\": \\"M\\",\\n        \\"SubscriptionType\\": \\"Subscription\\",\\n        \\"OwnerId\\": 325352345,\\n        \\"EndTime\\": \\"2019-09-08T16:00:00Z\\",\\n        \\"ProductType\\": \\"rds\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"ReleaseTime\\": \\"2019-09-08T16:00:00Z\\",\\n        \\"RenewalDuration\\": 1,\\n        \\"ProductCode\\": \\"rds\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryAvailableInstancesResponse>\\n    <Data>\\n        <TotalCount>51</TotalCount>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>Subscription</SubscriptionType>\\n            <RenewStatus>ManualRenewal</RenewStatus>\\n            <InstanceID>IFP-ji2gz****</InstanceID>\\n            <ProductCode>flowpack</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2016-11-07T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>Subscription</SubscriptionType>\\n            <RenewStatus>ManualRenewal</RenewStatus>\\n            <InstanceID>IFP-6dyrc****</InstanceID>\\n            <ProductCode>flowpack</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2016-11-07T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>Subscription</SubscriptionType>\\n            <RenewStatus>ManualRenewal</RenewStatus>\\n            <InstanceID>IFP-ne1nt5uw1</InstanceID>\\n            <ProductCode>flowpack</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2016-11-07T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>Subscription</SubscriptionType>\\n            <RenewStatus>ManualRenewal</RenewStatus>\\n            <InstanceID>IFP-vj5ry82x1</InstanceID>\\n            <ProductCode>flowpack</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2016-11-07T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>Subscription</SubscriptionType>\\n            <RenewStatus>ManualRenewal</RenewStatus>\\n            <InstanceID>IFP-e6oupf251</InstanceID>\\n            <ProductCode>flowpack</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2016-11-10T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>988643</InstanceID>\\n            <ProductCode>cmjj011731</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>988647</InstanceID>\\n            <ProductCode>cmjj011731</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>988648</InstanceID>\\n            <ProductCode>cmjj011731</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>988649</InstanceID>\\n            <ProductCode>cmjj011731</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>988651</InstanceID>\\n            <ProductCode>cmjj011731</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>1049056</InstanceID>\\n            <ProductCode>cmjj011399</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n        <InstanceList>\\n            <Status>Creating</Status>\\n            <SubStatus>Normal</SubStatus>\\n            <SubscriptionType>PayAsYouGo</SubscriptionType>\\n            <InstanceID>1049052</InstanceID>\\n            <ProductCode>cmjj011399</ProductCode>\\n            <CreateTime>2999-09-08T16:00:00Z</CreateTime>\\n            <OwnerId>181****</OwnerId>\\n            <EndTime>2999-09-08T16:00:00Z</EndTime>\\n            <Seller>26888</Seller>\\n        </InstanceList>\\n    </Data>\\n    <Message>Successful!</Message>\\n    <RequestId>C7C15585-8349-4C62-BEE4-5A391841B9BE</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n</QueryAvailableInstancesResponse>","errorExample":""}]',
      'title' => '实例查询服务',
      'summary' => '查询用户可用实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleaseInstance' => 
    array (
      'summary' => '国家云虚商侧主动释放实例。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'productCode',
            'description' => '产品代码',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'subscriptionType',
            'description' => '付费类型

Subscription：预付费

PayAsYouGo：后付费',
            'type' => 'string',
            'required' => true,
            'example' => 'PayAsYouGo',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'instanceIds',
            'description' => '实例ID。多个ID用英文逗号分隔，最大不超过100个。',
            'type' => 'string',
            'required' => true,
            'example' => 'rm-xxxxxxxxxxxx',
          ),
        ),
        3 => 
        array (
          'name' => 'RenewStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'renewStatus',
            'description' => '续费状态，取值：

AutoRenewal：自动续费

ManualRenewal：手动续费

NotRenewal：不续费',
            'type' => 'string',
            'required' => false,
            'example' => 'AutoRenewal',
          ),
        ),
        4 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region',
            'description' => '地域',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'productType',
            'description' => '产品类型',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'result',
            'description' => 'result',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => 'message',
                'description' => '执行结果说明',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'title' => 'requestId',
                'description' => '执行链路追踪字符串，排查问题时，可以提供给平台',
                'type' => 'string',
                'example' => 'UUID',
              ),
              'Data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'ReleaseResult' => 
                  array (
                    'title' => 'releaseResult',
                    'description' => '释放是否成功',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'HostId' => 
                  array (
                    'title' => 'hostId',
                    'description' => '执行主机所在站点',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                ),
              ),
              'Code' => 
              array (
                'title' => 'code',
                'description' => '响应码',
                'type' => 'string',
                'example' => 'Invalid_Product_Code',
              ),
              'Success' => 
              array (
                'title' => 'success',
                'description' => 'success=true代表调用执行完成

success=false代表执行出现错误',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"UUID\\",\\n  \\"Data\\": {\\n    \\"ReleaseResult\\": true,\\n    \\"HostId\\": \\"cn\\"\\n  },\\n  \\"Code\\": \\"Invalid_Product_Code\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '释放实例',
      'description' => '本接口仅提供虚商伙伴使用，用于主动释放终端用户账下实例
非指定虚商伙伴调用此接口，会被校验拦截。',
    ),
    'CreateInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。可通过接口**QueryProductList**查询产品代码',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '付费类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Subscription',
          ),
        ),
        3 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预付费周期。单位为月，按年付费产品请输入12的整数倍。

> 当创建预付费实例时，必须设置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
          ),
        ),
        4 => 
        array (
          'name' => 'RenewalStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自动续费状态，取值：
- AutoRenewal：自动续费。
- ManualRenewal：手动续费。

默认ManualRenewal。',
            'type' => 'string',
            'required' => false,
            'example' => 'ManualRenewal',
          ),
        ),
        5 => 
        array (
          'name' => 'RenewPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自动续费周期， 单位为月。
> 当设置**RenewalStatus**为**AutoRenewal**时，必须设置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端幂等参数，服务端会查询是否有相同ClientToken的请求，如果有，直接返回上次调用结果。',
            'type' => 'string',
            'required' => false,
            'example' => 'JASIOFKVNVIXXXXXX',
          ),
        ),
        7 => 
        array (
          'name' => 'Logistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次订单的物流信息地址，一般对实物类订单有效',
            'type' => 'string',
            'required' => false,
            'example' => '{"cityCode":"330100","cityName":"杭州","contactName":"测试","countryCode":"","districtName":"浦沿街道","email":"**@example.com","mobilePhone":"153564848844","phone":"1234567","provCode":"330000","provName":"浙江省","streetCode":"33010610","streetName":"转塘","zipCode":"0000"}',
          ),
        ),
        8 => 
        array (
          'name' => 'Parameter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '模块列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '模块信息',
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '第n个模块属性value配置，n的取值范围为（1~100）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'disk',
                ),
                'Code' => 
                array (
                  'description' => '第n个模块属性code配置，n的取值范围为（1~100），如有多个模块属性参数，按照n=1,2,3…n的形式拼接多个参数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'InstanceType',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C880B065-A781-4F19-B6DD-3E0E3B715C64',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '创建成功的订单ID。',
                    'type' => 'string',
                    'example' => '20240xxxx21',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '订单对应的实例ID。',
                    'type' => 'string',
                    'example' => 'OSSBAG-cn-v1hxxxxx23',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'INSUFFICIENT.AVAILABLE.QUOTA',
            'errorMessage' => 'The account balance is negative. Add funds to the account and try again.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          1 => 
          array (
            'errorCode' => 'ORDER.ACCOUNT_STATUS_ILLEGAL',
            'errorMessage' => 'Please complete your basic personal information first.',
          ),
          2 => 
          array (
            'errorCode' => '400',
            'errorMessage' => 'Failure to check order before create instance.',
          ),
          3 => 
          array (
            'errorCode' => 'ORDER.ACCOUNT_INFORMATION_INCOMPLETE',
            'errorMessage' => 'Your information is incomplete. Complete your information before ordering',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"C880B065-A781-4F19-B6DD-3E0E3B715C64\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OrderId\\": \\"20240xxxx21\\",\\n    \\"InstanceId\\": \\"OSSBAG-cn-v1hxxxxx23\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateInstanceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <InstanceId>OSSBAG-cn-v1hxxxxx23</InstanceId>\\n        <OrderId>20240xxxx21</OrderId>\\n    </Data>\\n</CreateInstanceResponse>","errorExample":""}]',
      'title' => '实例创建服务',
      'summary' => '创建一个实例资源，会创建一个新购实例资源的订单，并自动支付。不支持ECS和RDS系列产品的创建。',
      'requestParamsDescription' => '假设想要通过本API创建音视频通信产品应用，完整参数示例如下：

> ProductCode=rtc&SubscriptionType=PayAsYouGo&ProductType=&Parameter.1.Code=ServiceType&Parameter.1.Value=universal&Parameter.2.Code=BillType&Parameter.2.Value=PayByCR&Parameter.3.Code=ServiceAreaCn&Parameter.3.Value=true&Parameter.4.Code=ServiceAreaUs&Parameter.4.Value=false',
      'responseParamsDescription' => ' ',
      'extraInfo' => '创建成功后，可以使用实例[查询服务](https://help.aliyun.com/document_detail/472942.html?spm=openapi-amp.newDocPublishment.0.0.291d281fEXJl0j)，查询已创建的实例',
    ),
    'ModifyInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '付费类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Subscription',
          ),
        ),
        3 => 
        array (
          'name' => 'ModifyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变配类型，取值
- Upgrade：升级。
- Downgrade：降级。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Upgrade',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更配置的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rm-akjhkdsjhfskjfhd',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性，防止请求重复提交。',
            'type' => 'string',
            'required' => false,
            'example' => 'JAKSJFHFAKJSF',
          ),
        ),
        6 => 
        array (
          'name' => 'Parameter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '参数列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '第n个模块属性value配置，n的取值范围为（1~100）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'test',
                ),
                'Code' => 
                array (
                  'description' => '第n个模块属性code配置，n的取值范围为（1~100），如有多个模块属性参数，按照n=1,2,3…n的形式拼接多个参数。

> 只设置需要变更配置的模块属性信息，如A,B两个属性中，只有A需要变更配置，则只传A属性相关即可。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'test',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '创建成功的订单ID。',
                    'type' => 'string',
                    'example' => '202653252354351',
                  ),
                  'HostId' => 
                  array (
                    'description' => '主机ID。',
                    'type' => 'string',
                    'example' => 'testId',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotExists',
            'errorMessage' => 'The specific resource is not exists.',
          ),
          2 => 
          array (
            'errorCode' => 'ORDER.ACCOUNT_STATUS_ILLEGAL',
            'errorMessage' => 'Please complete your basic personal information first.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OrderId\\": \\"202653252354351\\",\\n    \\"HostId\\": \\"testId\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifyInstanceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <OrderId>202653252354351</OrderId>\\n    </Data>\\n</ModifyInstanceResponse>","errorExample":""}]',
      'title' => '实例变更服务',
      'summary' => '对实例资源配置进行变更。调用接口会创建一个变配实例资源的订单，并自动支付。该接口不支持ECS和RDS 系列产品的变更，请查找对应产品的专有API执行变配。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetRenewal' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RenewalPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置实例自动续费时长，取值：
- 1。
- 2。
- 3。
- 6。
- 12。

> 当RenewalStatus= AutoRenewal时，必须设置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceIDs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，支持批量设置最多100个包年包月实例，多个实例ID以英文逗号分隔。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rm-askjdhaskfjh',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayAsYouGo',
          ),
        ),
        5 => 
        array (
          'name' => 'RenewalPeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自动续费周期单位，取值：
- M：月。
- Y：年。

> 当RenewalStatus= AutoRenewal时，必须设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'M',
          ),
        ),
        6 => 
        array (
          'name' => 'RenewalStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '续费状态，取值：
- AutoRenewal：自动续费。
- ManualRenewal：手动续费。
- NotRenewal：不续费。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'AutoRenewal',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetRenewalResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n</SetRenewalResponse>","errorExample":""}]',
      'title' => '设置实例自动续费服务',
      'summary' => '调用SetRenewal为一个实例设置自动续费服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ConvertChargeType' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例当前的付费类型，取值：
- Subscription：预付费。
- PayAsYouGo：后付费。

> 调用成功后资源将被更变为相反的类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Subscription',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预付费周期（月），如果转换为预付费类型，需要设置购买的预付费的周期时长。取值：
- 1~9。
- 12。
- 24。
- 36。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '6',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rm-kasjgfjshgf',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '订单ID。',
                    'type' => 'string',
                    'example' => '202657601410661',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
        ),
        405 => 
        array (
          0 => 
          array (
            'errorCode' => 'SYSTEM.SALE_VALIDATE_NO_SPECIFIC_CODE_FAILED',
            'errorMessage' => '您购买的数量超过限制。请重新购买。',
          ),
          1 => 
          array (
            'errorCode' => 'ORDER.INST_HAS_UNPAID_ORDER',
            'errorMessage' => '您选购的服务存在未支付订单，请支付或作废后再下单！',
          ),
          2 => 
          array (
            'errorCode' => 'COMMODITY.INVALID_COMPONENT',
            'errorMessage' => '必选模块未选择',
          ),
          3 => 
          array (
            'errorCode' => 'ORDER.QUANTITY_INVALID',
            'errorMessage' => '您购买的数量超过限制。请重新购买。',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OrderId\\": \\"202657601410661\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ConvertChargeTypeResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <OrderId>202657601410661</OrderId>\\n    </Data>\\n</ConvertChargeTypeResponse>","errorExample":""}]',
      'title' => '切换实例付费模式',
      'summary' => '为一个实例变更订阅类型。目前支持SLB、EIP和NAT网关后付费实例转预付费实例，和SLB、EIP产品预付费转后付费实例操作。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RenewInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rm-skjdhaskjdh',
          ),
        ),
        2 => 
        array (
          'name' => 'RenewPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预付费续费时长，单位：月。取值：
- 1~9。
- 12。
- 24。
- 36。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '6',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。',
            'type' => 'string',
            'required' => false,
            'example' => 'ASKJHKLASJHAFSLKJH',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '订单ID。',
                    'type' => 'string',
                    'example' => '202657601410661',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceStatusError',
            'errorMessage' => 'The resource status error.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotExists',
            'errorMessage' => 'The specific resource is not exists.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OrderId\\": \\"202657601410661\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RenewInstanceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <OrderId>202657601410661</OrderId>\\n    </Data>\\n</RenewInstanceResponse>","errorExample":""}]',
      'title' => '实例续费服务',
      'summary' => '对相关实例进行续费。不支持ECS、RDS、REDIS产品类实例的续费，请查找对应产品的专用续费API执行续费。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RefundInstance' => 
    array (
      'summary' => 'RefundInstance：调用本接口退订不再需要的实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'clientToken',
            'description' => '需要幂等场景必填。UUID生成的字符串。此字段用于幂等，多次调用传入同样的值，会返回第一次的结果。调用后如果返回了结果，可以解析到退款订单编号，代表调用成功。',
            'type' => 'string',
            'required' => false,
            'example' => '793F021C-B589-1225-82A9-99232AEBE494',
          ),
        ),
        1 => 
        array (
          'name' => 'ImmediatelyRelease',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'immediatelyRelease',
            'description' => '退订场景必填。1：标识立即释放。0：标识先停机，根据停机策略停机。仅部分商品支持。默认都是立即释放。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'productCode',
            'description' => '退订场景必填，产品code。如果调用后错误码提示产品不支持，可提交工单申请云产品允许开通此功能。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'instanceId',
            'description' => '退订场景必填，实例id，非自定义名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp1etb69sqxgl4*******',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'productType',
            'description' => '退订场景必填，产品类型，无特殊说明传入空字符串。在调试工具上，无需手动输入，鼠标放到输入框上，会弹出"输入空字符串"的按钮，点击此按钮即可。通过代码发起退订时，传入英文字符下的空字符串 ""。',
            'type' => 'string',
            'required' => false,
            'example' => '空字符串',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'result',
            'description' => 'result',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => 'message',
                'description' => '执行结果说明',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'title' => 'requestId',
                'description' => '执行链路追踪字符串，排查问题时，可以提供给平台。',
                'type' => 'string',
                'example' => 'UUID',
              ),
              'Data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'title' => 'hostId',
                    'description' => '执行主机所在站点',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                  'OrderId' => 
                  array (
                    'title' => 'orderId',
                    'description' => '退订成功的情况下，返回退款订单id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2100000000***',
                  ),
                ),
              ),
              'Code' => 
              array (
                'title' => 'code',
                'description' => '响应码',
                'type' => 'string',
                'example' => 'ResourceNotExists',
              ),
              'Success' => 
              array (
                'title' => 'success',
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotExists',
            'errorMessage' => 'The specific resource is not exists.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceStatusError',
            'errorMessage' => 'The resource status error.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner does not belong to caller.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
          5 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'The specified API is not applicable for the user.',
          ),
          6 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'The user is not authorized for the specified API.',
          ),
          7 => 
          array (
            'errorCode' => 'BindMirrorInstanceError',
            'errorMessage' => 'Charged images that are related to ECS.',
          ),
          8 => 
          array (
            'errorCode' => 'ExceedRefundQuotaError',
            'errorMessage' => 'The number of unsubscription times has reached the upper limit.',
          ),
          9 => 
          array (
            'errorCode' => 'ExistUnPaidOrderError',
            'errorMessage' => 'The instance has an unsettled order.',
          ),
          10 => 
          array (
            'errorCode' => 'ExistRefundingOrderError',
            'errorMessage' => 'The instance ID is invalid: the instance may have expired, been refunded, or been released.',
          ),
          11 => 
          array (
            'errorCode' => 'NoRestValueError',
            'errorMessage' => 'The refund amount is 0.',
          ),
          12 => 
          array (
            'errorCode' => 'AmbassadorOrderLimitError',
            'errorMessage' => 'The instance has an ambassador order that may raise risks.',
          ),
          13 => 
          array (
            'errorCode' => 'ActivityForbiddenError',
            'errorMessage' => 'Promotional orders do not support refunds.',
          ),
          14 => 
          array (
            'errorCode' => 'ProductCheckError',
            'errorMessage' => 'The cloud service failed SPI preflight verification.',
          ),
          15 => 
          array (
            'errorCode' => 'CommodityNotSupported',
            'errorMessage' => 'The specified commodity is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"UUID\\",\\n  \\"Data\\": {\\n    \\"HostId\\": \\"cn\\",\\n    \\"OrderId\\": 0\\n  },\\n  \\"Code\\": \\"ResourceNotExists\\",\\n  \\"Success\\": false\\n}","type":"json"}]',
      'title' => '退订实例',
      'description' => '1. 退订只退还实付金额的部分，已使用的代金券不退还。
2. 请仔细核对退订资源的信息，并确认退订条款和退订金额，资源一经退订无法恢复。
3. 其他问题请参照：<props="china">[退订规则](https://help.aliyun.com/knowledge_detail/116043.html?spm=a2c81.e1d666e.app.2.62ae11271Kd6iM)</props><props="intl">[国际站退订规则说明](https://www.alibabacloud.com/help/zh/user-center/user-guide/refund-rules)</props>',
      'extraInfo' => '**针对部分业务规则拦截返回的错误码的解释**

- ResourceNotExists：实例不存在
- ResourceStatusError：实例状态不对
- BindMirrorInstanceError：ecs有关联的收费镜像
- ExceedRefundQuotaError：退订次数超过quota配额上限
- ExistUnPaidOrderError：实例下存在未支付订单
- ExistRefundingOrderError：无效实例ID(实例已到期或已退款或已释放)
- NoRestValueError：退款金额为0
- AmbassadorOrderLimitError：实例下有云大使订单
- ActivityForbiddenError：活动订单禁止退款
- ProductCheckError：云产品规则预校验未通过',
    ),
    'GetOrderDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '32453453',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'D6E068C3-25BC-455A-85FE-45F0B22ECB1F',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'HostName' => 
                  array (
                    'description' => '主机名。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'OrderList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Order' => 
                      array (
                        'description' => '订单列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '订单详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OrderSubType' => 
                            array (
                              'description' => '子订单类型：-productsuborder：产品子订单类型。-refundsuborder：退款子订单类型',
                              'type' => 'string',
                              'example' => '子订单类型',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间。',
                              'type' => 'string',
                              'example' => '2017-06-08T09:41:30Z',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种。',
                              'type' => 'string',
                              'example' => ' CNY：人民币。 USD：美元。 JPY：日元',
                            ),
                            'Config' => 
                            array (
                              'description' => '主产品的配置。',
                              'type' => 'string',
                              'example' => 'DBInstanceClass:[DBInstanceClass:rds.mysql.s1.small;EngineVersion:8.0;Region:cn-qingdao;]DBFlowType:[Region:cn-qingdao;]',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型',
                              'type' => 'string',
                              'example' => '取值：
Subscription：预付费。
PayAsYouGo：按量付费。',
                            ),
                            'UsageStartTime' => 
                            array (
                              'description' => '服务开始时间。',
                              'type' => 'string',
                              'example' => '2017-06-08T16:00:00Z',
                            ),
                            'UsageEndTime' => 
                            array (
                              'description' => '服务结束时间。',
                              'type' => 'string',
                              'example' => '2117-06-08T16:00:00Z',
                            ),
                            'SubOrderId' => 
                            array (
                              'description' => '子订单id。',
                              'type' => 'string',
                              'example' => '234343',
                            ),
                            'Region' => 
                            array (
                              'description' => '地域
',
                              'type' => 'string',
                              'example' => 'cn-hangzhou',
                            ),
                            'AfterTaxAmount' => 
                            array (
                              'description' => '税后金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'PaymentTime' => 
                            array (
                              'description' => '支付时间。',
                              'type' => 'string',
                              'example' => '2017-06-08T09:41:30Z',
                            ),
                            'Operator' => 
                            array (
                              'description' => '订单操作RAM用户对应ID，如无则留空。',
                              'type' => 'string',
                              'example' => '23424243432',
                            ),
                            'OrderType' => 
                            array (
                              'description' => '订单类型',
                              'type' => 'string',
                              'example' => '取值范围：-new：新购。-renew：续费。-upgrade：升级。-refund：退款。',
                            ),
                            'PaymentStatus' => 
                            array (
                              'description' => '支付状态',
                              'type' => 'string',
                              'example' => '取值范围：-unpaid：未支付。-paid：已支付。-cancelled：已作废。',
                            ),
                            'Quantity' => 
                            array (
                              'description' => '主产品数量。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'PretaxAmountLocal' => 
                            array (
                              'description' => '本币金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'Tax' => 
                            array (
                              'description' => '税费。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'OriginalConfig' => 
                            array (
                              'description' => '未经标准化的模块信息。',
                              'type' => 'string',
                              'example' => 'DBInstanceClass:[DBInstanceClass:rds.mysql.s1.small;EngineVersion:8.0;Region:cn-qingdao;]DBFlowType:[Region:cn-qingdao;]',
                            ),
                            'PretaxAmount' => 
                            array (
                              'description' => '订单应付金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品code',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'RelatedOrderId' => 
                            array (
                              'description' => '关联订单id。',
                              'type' => 'string',
                              'example' => '4353453534543',
                            ),
                            'PaymentCurrency' => 
                            array (
                              'description' => '支付币种。',
                              'type' => 'string',
                              'example' => ' CNY：人民币。 USD：美元。 JPY：日元',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '主产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'InstanceIDs' => 
                            array (
                              'description' => '实例id列表。',
                              'type' => 'string',
                              'example' => '["rm-bp1a2vsr018313t6o"]',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'OrderId' => 
                            array (
                              'description' => '订单号。',
                              'type' => 'string',
                              'example' => '3453425324',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '主产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'ExtendInfos' => 
                            array (
                              'description' => '订单扩展信息',
                              'type' => 'object',
                              'additionalProperties' => 
                              array (
                                'type' => 'string',
                                'example' => '{"key": "订单扩展信息"}',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"D6E068C3-25BC-455A-85FE-45F0B22ECB1F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostName\\": \\"test\\",\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 1,\\n    \\"OrderList\\": {\\n      \\"Order\\": [\\n        {\\n          \\"OrderSubType\\": \\"子订单类型\\",\\n          \\"CreateTime\\": \\"2017-06-08T09:41:30Z\\",\\n          \\"Currency\\": \\" CNY：人民币。 USD：美元。 JPY：日元\\",\\n          \\"Config\\": \\"DBInstanceClass:[DBInstanceClass:rds.mysql.s1.small;EngineVersion:8.0;Region:cn-qingdao;]DBFlowType:[Region:cn-qingdao;]\\",\\n          \\"SubscriptionType\\": \\"取值：\\\\nSubscription：预付费。\\\\nPayAsYouGo：按量付费。\\",\\n          \\"UsageStartTime\\": \\"2017-06-08T16:00:00Z\\",\\n          \\"UsageEndTime\\": \\"2117-06-08T16:00:00Z\\",\\n          \\"SubOrderId\\": \\"234343\\",\\n          \\"Region\\": \\"cn-hangzhou\\",\\n          \\"AfterTaxAmount\\": \\"0\\",\\n          \\"PaymentTime\\": \\"2017-06-08T09:41:30Z\\",\\n          \\"Operator\\": \\"23424243432\\",\\n          \\"OrderType\\": \\"取值范围：-new：新购。-renew：续费。-upgrade：升级。-refund：退款。\\",\\n          \\"PaymentStatus\\": \\"取值范围：-unpaid：未支付。-paid：已支付。-cancelled：已作废。\\",\\n          \\"Quantity\\": \\"1\\",\\n          \\"PretaxAmountLocal\\": \\"0\\",\\n          \\"Tax\\": \\"1\\",\\n          \\"OriginalConfig\\": \\"DBInstanceClass:[DBInstanceClass:rds.mysql.s1.small;EngineVersion:8.0;Region:cn-qingdao;]DBFlowType:[Region:cn-qingdao;]\\",\\n          \\"PretaxAmount\\": \\"0\\",\\n          \\"CommodityCode\\": \\"rds\\",\\n          \\"RelatedOrderId\\": \\"4353453534543\\",\\n          \\"PaymentCurrency\\": \\" CNY：人民币。 USD：美元。 JPY：日元\\",\\n          \\"ProductType\\": \\"rds\\",\\n          \\"InstanceIDs\\": \\"[\\\\\\"rm-bp1a2vsr018313t6o\\\\\\"]\\",\\n          \\"PretaxGrossAmount\\": \\"0\\",\\n          \\"OrderId\\": \\"3453425324\\",\\n          \\"ProductCode\\": \\"rds\\",\\n          \\"ExtendInfos\\": {\\n            \\"key\\": \\"{\\\\\\"key\\\\\\": \\\\\\"订单扩展信息\\\\\\"}\\"\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '订单详情查询服务',
      'summary' => '查询用户或分销客户某个订单详情信息。',
    ),
    'QueryOrders' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CreateTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间段止（缺省查询当前时间最近1小时内订单），格式：YYYY-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2016-05-23T12:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        5 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值类型：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单类型，取值范围
- New 新购
- Renew 续费
- Upgrade 升级
- TempUpgrade 短时升级
- Downgrade 降级
- Refund 退款
- Convert 付费类型转换
- ResizeDisk 调整磁盘大小
- CompensatoryRenew 补偿续费
- IncreaseUpgrade 带宽升级
- Exchange 换购
- ChangeOperatingSystem 更换操作系统',
            'type' => 'string',
            'required' => false,
            'example' => 'New',
          ),
        ),
        7 => 
        array (
          'name' => 'PaymentStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支付状态。非退款订单，取值范围：
- Unpaid：未支付。
- Paid：已支付。
- Cancelled：已作废。

> 对于退款订单可置NULL。',
            'type' => 'string',
            'required' => false,
            'example' => 'Paid',
          ),
        ),
        8 => 
        array (
          'name' => 'CreateTimeStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间段起（缺省查询当前时间最近1小时内订单），格式：YYYY-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '2016-05-23T13:00:00Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '61293E7A-3406-4447-8620-EC88B0AA66AD',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'HostName' => 
                  array (
                    'description' => '主机名。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'PageNum' => 
                  array (
                    'description' => '分页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。建议每页最大20条，条数过多会导致超时。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'OrderList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Order' => 
                      array (
                        'description' => '订单列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PretaxAmount' => 
                            array (
                              'description' => '订单应付金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'CommodityCode' => 
                            array (
                              'description' => '商品Code',
                              'type' => 'string',
                              'example' => 'ecs',
                            ),
                            'RelatedOrderId' => 
                            array (
                              'description' => '关联订单ID。',
                              'type' => 'string',
                              'example' => '234535345345342',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间。',
                              'type' => 'string',
                              'example' => '2017-06-08T09:41:30Z',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'PaymentCurrency' => 
                            array (
                              'description' => '支付币种。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '主产品类型。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                            'AfterTaxAmount' => 
                            array (
                              'description' => '税后金额。',
                              'type' => 'string',
                              'example' => '66',
                            ),
                            'PaymentTime' => 
                            array (
                              'description' => '支付时间。',
                              'type' => 'string',
                              'example' => '2017-06-08T09:41:30Z',
                            ),
                            'PretaxGrossAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'OrderType' => 
                            array (
                              'description' => '订单类型，取值范围
- New 新购
- Renew 续费
- Upgrade 升级
- TempUpgrade 短时升级
- Downgrade 降级
- Refund 退款
- Convert 付费类型转换
- ResizeDisk 调整磁盘大小
- CompensatoryRenew 补偿续费
- IncreaseUpgrade 带宽升级
- Exchange 换购
- ChangeOperatingSystem 更换操作系统',
                              'type' => 'string',
                              'example' => 'New',
                            ),
                            'PaymentStatus' => 
                            array (
                              'description' => '支付状态。非退款订单，取值范围：
- Unpaid：未支付。
- Paid：已支付。
- Cancelled：已作废。

> 对于退款订单可置NULL。',
                              'type' => 'string',
                              'example' => 'Paid',
                            ),
                            'OrderId' => 
                            array (
                              'description' => '订单号。',
                              'type' => 'string',
                              'example' => '34532532',
                            ),
                            'Tax' => 
                            array (
                              'description' => '税费。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'PretaxAmountLocal' => 
                            array (
                              'description' => '本币金额。',
                              'type' => 'string',
                              'example' => '0',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '主产品代码。',
                              'type' => 'string',
                              'example' => 'rds',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"61293E7A-3406-4447-8620-EC88B0AA66AD\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostName\\": \\"test\\",\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 1,\\n    \\"OrderList\\": {\\n      \\"Order\\": [\\n        {\\n          \\"PretaxAmount\\": \\"0\\",\\n          \\"CommodityCode\\": \\"ecs\\",\\n          \\"RelatedOrderId\\": \\"234535345345342\\",\\n          \\"CreateTime\\": \\"2017-06-08T09:41:30Z\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"PaymentCurrency\\": \\"CNY\\",\\n          \\"ProductType\\": \\"rds\\",\\n          \\"AfterTaxAmount\\": \\"66\\",\\n          \\"PaymentTime\\": \\"2017-06-08T09:41:30Z\\",\\n          \\"PretaxGrossAmount\\": \\"0\\",\\n          \\"OrderType\\": \\"New\\",\\n          \\"PaymentStatus\\": \\"Paid\\",\\n          \\"OrderId\\": \\"34532532\\",\\n          \\"Tax\\": \\"1\\",\\n          \\"PretaxAmountLocal\\": \\"0\\",\\n          \\"ProductCode\\": \\"rds\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryOrdersResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>61293E7A-3406-4447-8620-EC88B0AA66AD</RequestId>\\n    <Data>\\n        <TotalCount>0</TotalCount>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <OrderList>\\n        </OrderList>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryOrdersResponse>","errorExample":""}]',
      'title' => '订单列表查询服务',
      'summary' => '查询用户或者分销客户订单列表情况。默认查询当前时间最近1小时范围内订单，如需查询更长时间范围的订单数据，请设CreateTimeStart和CreateTimeEnd参数。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelOrder' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '73465432785',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '30D2285E-A848-4ECB-AA74-4954C60858A1',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'HostId' => 
                  array (
                    'description' => '主机ID。',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"30D2285E-A848-4ECB-AA74-4954C60858A1\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"HostId\\": \\"cn\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CancelOrderResponse>\\n    <Data>\\n        <HostId>cn</HostId>\\n    </Data>\\n    <Message>Successful!</Message>\\n    <RequestId>30D2285E-A848-4ECB-AA74-4954C60858A1</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n</CancelOrderResponse>","errorExample":""}]',
      'title' => '取消未支付订单服务',
      'summary' => '调用CancelOrder取消未支付订单服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCostUnit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UnitEntityList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '财务单元列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ParentUnitId' => 
                array (
                  'description' => '父财务单元ID，-1表示财务单元根。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '-1',
                ),
                'OwnerUid' => 
                array (
                  'description' => '新财务单元的属主用户ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '982375623',
                ),
                'UnitName' => 
                array (
                  'description' => '财务单元名称。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'test',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5B803CF-94D8-43AF-ADB3-D819AAD30E27',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CostUnitDtoList' => 
                  array (
                    'description' => '财务单元实体列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ParentUnitId' => 
                        array (
                          'description' => '父财务单元ID，-1表示财务单元根。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '-1',
                        ),
                        'UnitName' => 
                        array (
                          'description' => '财务单元名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'UnitId' => 
                        array (
                          'description' => '财务单元ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '84327659328',
                        ),
                        'OwnerUid' => 
                        array (
                          'description' => '新财务单元的属主用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '26387563',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"F5B803CF-94D8-43AF-ADB3-D819AAD30E27\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CostUnitDtoList\\": [\\n      {\\n        \\"ParentUnitId\\": -1,\\n        \\"UnitName\\": \\"test\\",\\n        \\"UnitId\\": 84327659328,\\n        \\"OwnerUid\\": 26387563\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateCostUnitResponse>\\n    <Data>\\n        <CostUnitDtoList>\\n            <UnitName>dd</UnitName>\\n            <ParentUnitId>12***********45</ParentUnitId>\\n            <OwnerUid>16************86</OwnerUid>\\n        </CostUnitDtoList>\\n    </Data>\\n    <Message>Successful</Message>\\n    <RequestId>F5B803CF-94D8-43AF-ADB3-D819AAD30E27</RequestId>\\n    <Success>true</Success>\\n    <Code>success</Code>\\n</CreateCostUnitResponse>","errorExample":""}]',
      'title' => '创建财务单元',
      'summary' => '创建财务单元，支持批量创建。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AllocateCostUnitResource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FromUnitUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源财务单元的属主用户ID（必传）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '273394581313325532',
          ),
        ),
        1 => 
        array (
          'name' => 'FromUnitId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源财务单元ID（必传）。
- 0表示未分配财务单元ID
- 大于0表示已分配的财务单元ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '0',
          ),
        ),
        2 => 
        array (
          'name' => 'ToUnitUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标财务单元属主用户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '241021678450941490',
          ),
        ),
        3 => 
        array (
          'name' => 'ToUnitId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标财务单元ID，取值：
- -1表示已分配资源移除到未分配。
- 大于0表示分配到指定财务单元。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '186419',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceInstanceList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源实例列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ApportionCode' => 
                array (
                  'description' => '分拆型实例的分拆型，只有分拆型产品实例才需要传这个参数。
- 目前分拆项产品有八种商品，其商品code分别是oss、dcdn、snapshot、vod、cdn、live、cbwp、pcdn。
- 这个分拆项字段一般是通过QueryCostUnitResource获取用户的某一个财务单元（包含未分配）下的所有账单实例（包括分拆型实例会带分拆项）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'qwer1-cn-beijing',
                ),
                'CommodityCode' => 
                array (
                  'description' => '账单实例的商品code（必传）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'oss',
                ),
                'ResourceUserId' => 
                array (
                  'description' => '账单实例的属主用户ID（必传）。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '273394581313325532',
                ),
                'ResourceId' => 
                array (
                  'description' => '账单的实例ID（必传）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-hangzhou;standard',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '消息码，例如：success。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '845C629F-47A7-4F46-A470-ED5047C4C250',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ToUnitUserId' => 
                  array (
                    'description' => '目标财务单元属主用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '34857693874',
                  ),
                  'IsSuccess' => 
                  array (
                    'description' => '财务单元资源分配是否分配成功
- true表示分配成功
- false表示分配失败',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ToUnitId' => 
                  array (
                    'description' => '目标财务单元ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '32857346527',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"845C629F-47A7-4F46-A470-ED5047C4C250\\",\\n  \\"Success\\": false,\\n  \\"Data\\": {\\n    \\"ToUnitUserId\\": 34857693874,\\n    \\"IsSuccess\\": true,\\n    \\"ToUnitId\\": 32857346527\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AllocateCostUnitResourceResponse>\\r\\n    <Data>\\r\\n        <CostUnitOperate>\\r\\n            <IsSuccess>true</IsSuccess>\\r\\n            <ToUnitId>1245</ToUnitId>\\r\\n            <ToUnitUserId>1686</ToUnitUserId>\\r\\n        </CostUnitOperate>\\r\\n    </Data>\\r\\n    <Message>Successful!</Message>\\r\\n    <RequestId>F5B803CF-94D8-43AF-ADB3-D819AAD30E27</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <Code>success</Code>\\r\\n</AllocateCostUnitResourceResponse>","errorExample":""}]',
      'title' => '资源分配到财务单元',
      'summary' => '资源实例（实例型和分拆型）从源财务单元分配到目标财务单元。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCostUnit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '财务单元的属主用户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2135342',
          ),
        ),
        1 => 
        array (
          'name' => 'UnitId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '财务单元ID，-1表示财务单元根。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '376348',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5B803CF-94D8-43AF-ADB3-D819AAD30E27',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'IsSuccess' => 
                  array (
                    'description' => '是否完成。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UnitId' => 
                  array (
                    'description' => '新财务单元的ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123412343',
                  ),
                  'OwnerUid' => 
                  array (
                    'description' => '财务单元的属主用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12431',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"F5B803CF-94D8-43AF-ADB3-D819AAD30E27\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"IsSuccess\\": true,\\n    \\"UnitId\\": 123412343,\\n    \\"OwnerUid\\": 12431\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteCostUnitResponse>\\n    <Data>\\n        <CostUnitOperate>\\n            <IsSuccess>true</IsSuccess>\\n            <OwnerUid>1245</OwnerUid>\\n            <UnitId>1686</UnitId>\\n        </CostUnitOperate>\\n    </Data>\\n    <Message>Successful!</Message>\\n    <RequestId>F5B803CF-94D8-43AF-ADB3-D819AAD30E27</RequestId>\\n    <Success>true</Success>\\n    <Code>success</Code>\\n</DeleteCostUnitResponse>","errorExample":""}]',
      'title' => '删除财务单元',
      'summary' => '删除财务单元。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCostUnit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UnitEntityList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '财务单元列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'UnitId' => 
                array (
                  'description' => '财务单元的ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '2524352',
                ),
                'NewUnitName' => 
                array (
                  'description' => '财务单元的新名字。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'newTest',
                ),
                'OwnerUid' => 
                array (
                  'description' => '财务单元的属主用户ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '1321312312',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码.',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5B803CF-94D8-43AF-ADB3-D819AAD30E27',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IsSuccess' => 
                    array (
                      'description' => '是否成功。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'UnitId' => 
                    array (
                      'description' => '新财务单元的ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '356349875',
                    ),
                    'OwnerUid' => 
                    array (
                      'description' => '财务单元的属主用户ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '823756287',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"F5B803CF-94D8-43AF-ADB3-D819AAD30E27\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"IsSuccess\\": true,\\n      \\"UnitId\\": 356349875,\\n      \\"OwnerUid\\": 823756287\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ModifyCostUnitResponse>\\n    <Data>\\n        <CostUnitOperate>\\n            <IsSuccess>true</IsSuccess>\\n            <OwnerUid>1245</OwnerUid>\\n            <UnitId>1686</UnitId>\\n        </CostUnitOperate>\\n    </Data>\\n    <Message>Successful!</Message>\\n    <RequestId>F5B803CF-94D8-43AF-ADB3-D819AAD30E27</RequestId>\\n    <Success>true</Success>\\n    <Code>success</Code>\\n</ModifyCostUnitResponse>","errorExample":""}]',
      'title' => '修改财务单元',
      'summary' => '修改财务单元，支持批量修改。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryCostUnit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '财务单元的属主用户。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '28394563429587',
          ),
        ),
        1 => 
        array (
          'name' => 'ParentUnitId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '父财务单元ID，-1表示财务单元根。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '-1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数，最大不超过300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'CostUnitDtoList' => 
                  array (
                    'description' => '财务单元列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ParentUnitId' => 
                        array (
                          'description' => '父财务单元ID，-1表示财务单元根。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '-1',
                        ),
                        'UnitName' => 
                        array (
                          'description' => '财务单元名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'UnitId' => 
                        array (
                          'description' => '财务单元ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '23534',
                        ),
                        'OwnerUid' => 
                        array (
                          'description' => '财务单元的属主用户。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2343464',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 1,\\n    \\"CostUnitDtoList\\": [\\n      {\\n        \\"ParentUnitId\\": -1,\\n        \\"UnitName\\": \\"test\\",\\n        \\"UnitId\\": 23534,\\n        \\"OwnerUid\\": 2343464\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryCostUnitResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <PageNum/>\\n        <TotalCount>1</TotalCount>\\n        <PageSize>20</PageSize>\\n    </Data>\\n</QueryCostUnitResponse>","errorExample":""}]',
      'title' => '查询财务单元',
      'summary' => '查询财务单元树当前节点下的所有财务单元节点。当 ParentUnitId 为 -1，表示查所有财务单元。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryCostUnitResource' => 
    array (
      'summary' => '查询用户的财务单元所属的资源实例列表。当 UnitId 为 0，表示查未分配的主子资源实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '财务单元的属主用户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '23453245',
          ),
        ),
        1 => 
        array (
          'name' => 'UnitId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '财务单元的ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '235325',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '04332CB7-9A57-4461-97E0-02821D044414',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '12',
                  ),
                  'ResourceInstanceDtoList' => 
                  array (
                    'description' => '资源实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CommodityCode' => 
                        array (
                          'description' => '资源的商品code。',
                          'type' => 'string',
                          'example' => 'rds',
                        ),
                        'ResourceUserName' => 
                        array (
                          'description' => '资源属主的用户名。',
                          'type' => 'string',
                          'example' => 'test@test.aliyun.com',
                        ),
                        'CommodityName' => 
                        array (
                          'description' => '资源的商品名。',
                          'type' => 'string',
                          'example' => '云数据库',
                        ),
                        'ResourceUserId' => 
                        array (
                          'description' => '资源的属主用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2424242134',
                        ),
                        'ApportionName' => 
                        array (
                          'description' => '资源分拆名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ApportionCode' => 
                        array (
                          'description' => '资源分拆code。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。',
                          'type' => 'string',
                          'example' => 'FPT_ossbag_absolute_Storage_bj',
                        ),
                        'ResourceNick' => 
                        array (
                          'description' => '资源的自定义昵称。',
                          'type' => 'string',
                          'example' => 'testResource',
                        ),
                        'ResourceTag' => 
                        array (
                          'description' => '资源的Tag标签。',
                          'type' => 'string',
                          'example' => 'testResource',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源的实例ID。',
                          'type' => 'string',
                          'example' => 'OSSBAG-cn-v0h1s4hma018',
                        ),
                        'ResourceGroup' => 
                        array (
                          'description' => '资源所属的资源组。',
                          'type' => 'string',
                          'example' => '默认资源组',
                        ),
                        'RelatedResources' => 
                        array (
                          'description' => '资源实例相关的资源。',
                          'type' => 'string',
                          'example' => 'oss',
                        ),
                        'ResourceStatus' => 
                        array (
                          'description' => '资源状态。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'PipCode' => 
                        array (
                          'type' => 'string',
                        ),
                        'ResourceSource' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'CostUnit' => 
                  array (
                    'description' => '财务单元信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ParentUnitId' => 
                      array (
                        'description' => '父财务单元ID，-1表示财务单元根。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '23421',
                      ),
                      'UnitName' => 
                      array (
                        'description' => '财务单元的名字。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'UnitId' => 
                      array (
                        'description' => '财务单元的ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '123412',
                      ),
                      'OwnerUid' => 
                      array (
                        'description' => '财务单元的属主用户ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '321432',
                      ),
                    ),
                  ),
                  'CostUnitStatisInfo' => 
                  array (
                    'description' => '财务单元的统计信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TotalResourceCount' => 
                      array (
                        'description' => '当前财务单元下的所有资源实例数（包含子财务单元）。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '3',
                      ),
                      'ResourceCount' => 
                      array (
                        'description' => '当前财务单元下的资源实例数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'TotalUserCount' => 
                      array (
                        'description' => '当前财务单元下的所有关联账号数（包含子财务单元）。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2',
                      ),
                      'SubUnitCount' => 
                      array (
                        'description' => '当前财务单元下的子单元数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2',
                      ),
                      'ResourceGroupCount' => 
                      array (
                        'description' => '当前财务单元下的资源组数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'TotalResourceGroupCount' => 
                      array (
                        'description' => '当前财务单元下的所有资源组数（包含子财务单元）。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2',
                      ),
                      'UserCount' => 
                      array (
                        'description' => '当前财务单元下的子单元数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"04332CB7-9A57-4461-97E0-02821D044414\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 20,\\n    \\"TotalCount\\": 12,\\n    \\"ResourceInstanceDtoList\\": [\\n      {\\n        \\"CommodityCode\\": \\"rds\\",\\n        \\"ResourceUserName\\": \\"test@test.aliyun.com\\",\\n        \\"CommodityName\\": \\"云数据库\\",\\n        \\"ResourceUserId\\": 2424242134,\\n        \\"ApportionName\\": \\"test\\",\\n        \\"ApportionCode\\": \\"test\\",\\n        \\"ResourceType\\": \\"FPT_ossbag_absolute_Storage_bj\\",\\n        \\"ResourceNick\\": \\"testResource\\",\\n        \\"ResourceTag\\": \\"testResource\\",\\n        \\"ResourceId\\": \\"OSSBAG-cn-v0h1s4hma018\\",\\n        \\"ResourceGroup\\": \\"默认资源组\\",\\n        \\"RelatedResources\\": \\"oss\\",\\n        \\"ResourceStatus\\": \\"Available\\",\\n        \\"PipCode\\": \\"\\",\\n        \\"ResourceSource\\": \\"\\"\\n      }\\n    ],\\n    \\"CostUnit\\": {\\n      \\"ParentUnitId\\": 23421,\\n      \\"UnitName\\": \\"test\\",\\n      \\"UnitId\\": 123412,\\n      \\"OwnerUid\\": 321432\\n    },\\n    \\"CostUnitStatisInfo\\": {\\n      \\"TotalResourceCount\\": 3,\\n      \\"ResourceCount\\": 1,\\n      \\"TotalUserCount\\": 2,\\n      \\"SubUnitCount\\": 2,\\n      \\"ResourceGroupCount\\": 1,\\n      \\"TotalResourceGroupCount\\": 2,\\n      \\"UserCount\\": 0\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryCostUnitResourceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>04332CB7-9A57-4461-97E0-02821D044414</RequestId>\\n    <Data>\\n        <TotalCount>0</TotalCount>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <CostUnit>\\n            <UnitId>-1</UnitId>\\n            <OwnerUid>1857xxxxx89</OwnerUid>\\n        </CostUnit>\\n        <CostUnitStatisInfo>\\n            <SubUnitCount>0</SubUnitCount>\\n            <TotalResourceCount>0</TotalResourceCount>\\n            <TotalResourceGroupCount>0</TotalResourceGroupCount>\\n            <UserCount>0</UserCount>\\n            <ResourceCount>0</ResourceCount>\\n            <TotalUserCount>0</TotalUserCount>\\n            <ResourceGroupCount>0</ResourceGroupCount>\\n        </CostUnitStatisInfo>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryCostUnitResourceResponse>","errorExample":""}]',
      'title' => '查询财务单元的资源',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryFinancialAccountInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号UID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1990699401005016',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '消息说明。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '97426BC2-792E-41F5-92B8-73C710DA7779',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据消息体。',
                'type' => 'object',
                'properties' => 
                array (
                  'MemberNickName' => 
                  array (
                    'description' => '成员账号的显示名称。',
                    'type' => 'string',
                    'example' => '测试',
                  ),
                  'IsFinancialAccount' => 
                  array (
                    'description' => '是否是企业财务账号：true表示是，false表示否。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'MemberGroupName' => 
                  array (
                    'description' => '成员账号所在的组名。',
                    'type' => 'string',
                    'example' => '测试组',
                  ),
                  'UserName' => 
                  array (
                    'description' => '账号登录名。',
                    'type' => 'string',
                    'example' => 'killortop3',
                  ),
                  'AccountType' => 
                  array (
                    'description' => '企业财务账号类型：MASTER表示主账号，MEMBER表示成员账号。',
                    'type' => 'string',
                    'example' => 'MEMBER',
                  ),
                  'MemberGroupId' => 
                  array (
                    'description' => '成员账号所在的组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '124',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified request contains invalid parameters.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The specified request lacks essential parameters.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred in the internal server.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"97426BC2-792E-41F5-92B8-73C710DA7779\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"MemberNickName\\": \\"测试\\",\\n    \\"IsFinancialAccount\\": true,\\n    \\"MemberGroupName\\": \\"测试组\\",\\n    \\"UserName\\": \\"killortop3\\",\\n    \\"AccountType\\": \\"MEMBER\\",\\n    \\"MemberGroupId\\": 124\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>Successful!</Message>\\n<RequestId>97426BC2-792E-41F5-92B8-73C710DA7779</RequestId>\\n<Data>\\n    <UserName>killortop3</UserName>\\n    <MemberGroupName>测试组</MemberGroupName>\\n    <MemberNickName>测试</MemberNickName>\\n    <IsFinancialAccount>true</IsFinancialAccount>\\n    <MemberGroupId>124</MemberGroupId>\\n    <AccountType>MEMBER</AccountType>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查看企业财务账号信息',
      'summary' => '查询有主子关系权限的账号的企业财务账号信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEvaluateList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '类型，取值：
- 1：搜索可开票金额负值。
- 2：搜索可开票金额为正值。
- 3：搜索所有不为0代开票信息。
- 4：已开金额>0。

> 默认为空则搜索全部。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'OutBizId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外部订单号。',
            'type' => 'string',
            'required' => false,
            'example' => '2387432832696',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'StartAmount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询开始金额。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'EndAmount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询终止金额。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1000',
          ),
        ),
        6 => 
        array (
          'name' => 'StartBizTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支付成功时间开始区间。格式：yyyy-mm-dd hh:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02 12:00:00',
          ),
        ),
        7 => 
        array (
          'name' => 'EndBizTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支付成功时间结束区间。格式：yyyy-mm-dd hh:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02 15:00:00',
          ),
        ),
        8 => 
        array (
          'name' => 'SortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序类型，取值：
- 1：按ID进行倒排。
- 2：按代开票类型倒排，id倒序二排序。
- 3：按代开票类型顺排，id倒序二排序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'StartSearchTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索开始时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-02-02 12:00:00',
          ),
        ),
        10 => 
        array (
          'name' => 'EndSearchTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索结束时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-02 12:00:00',
          ),
        ),
        11 => 
        array (
          'name' => 'BillCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账期。',
            'type' => 'string',
            'required' => false,
            'example' => '202003',
          ),
        ),
        12 => 
        array (
          'name' => 'BizTypeList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '发票市场类型列表。

> 默认为空表示全部类型。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '发票市场类型。取值：

- ALIYUN：阿里云产品。
- MARKETPLACE：云市场产品。',
              'type' => 'string',
              'required' => false,
              'example' => 'ALIYUN',
            ),
            'required' => false,
            'example' => 'ALIYUN',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => 'D35FF10E-1B2E-4ABA-8401-0AE17725F50B',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalUnAppliedInvoiceAmount' => 
                  array (
                    'description' => '查询条件内可开票金额，单位分。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12344',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'TotalInvoiceAmount' => 
                  array (
                    'description' => '查询条件内总开票金额，单位分。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12344',
                  ),
                  'HostId' => 
                  array (
                    'description' => '主机ID。',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                  'EvaluateList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Evaluate' => 
                      array (
                        'description' => '返回数据列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '类型，取值：
- 1：搜索可开票金额负值。
- 2：搜索可开票金额为正值。
- 3：搜索所有不为0代开票信息。
- 4：已开金额>0。

> 默认为空则搜索全部。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Status' => 
                            array (
                              'description' => '状态。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'BillId' => 
                            array (
                              'description' => '汇金ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '234543254325',
                            ),
                            'UserId' => 
                            array (
                              'description' => '用户ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '2738543',
                            ),
                            'BillCycle' => 
                            array (
                              'description' => '账期。',
                              'type' => 'string',
                              'example' => '202002',
                            ),
                            'CanInvoiceAmount' => 
                            array (
                              'description' => '可以开发票的金额。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '123213',
                            ),
                            'OffsetAcceptAmount' => 
                            array (
                              'description' => '由于存在其他退订，降配等类型订单带来的退款行为，退订金额抵扣到本次开票记录的金额。与退款数据的**OffsetCostAmount**对应。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '500',
                            ),
                            'ItemId' => 
                            array (
                              'description' => '科目ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '23453245',
                            ),
                            'OutBizId' => 
                            array (
                              'description' => '外部订单号。',
                              'type' => 'string',
                              'example' => '124324213421',
                            ),
                            'UserNick' => 
                            array (
                              'description' => '用户昵称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '修改时间。',
                              'type' => 'string',
                              'example' => '2018-10-10 18:05:44',
                            ),
                            'OpId' => 
                            array (
                              'description' => '外部对象ID。',
                              'type' => 'string',
                              'example' => '12341',
                            ),
                            'BizType' => 
                            array (
                              'description' => '业务类型。取值：
- ALIYUN：阿里云产品。
- MARKETPLACE：云市场产品。',
                              'type' => 'string',
                              'example' => 'ALIYUN',
                            ),
                            'OriginalAmount' => 
                            array (
                              'description' => '原始金额。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '-10000',
                            ),
                            'InvoicedAmount' => 
                            array (
                              'description' => '发票金额。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '10000',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '创建时间。',
                              'type' => 'string',
                              'example' => '2018-10-10 18:05:44',
                            ),
                            'PresentAmount' => 
                            array (
                              'description' => '余额。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '-10000',
                            ),
                            'BizTime' => 
                            array (
                              'description' => '时间。',
                              'type' => 'string',
                              'example' => '2018-10-10 18:05:44',
                            ),
                            'Name' => 
                            array (
                              'description' => '待开票对象名称。',
                              'type' => 'string',
                              'example' => '有价代金券退款',
                            ),
                            'OffsetCostAmount' => 
                            array (
                              'description' => '由于存在其他退订，降配等类型订单带来的退款行为，退订金额抵扣到本次开票记录的金额。与退款数据的**OffsetAcceptAmount**对应。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '500',
                            ),
                            'Id' => 
                            array (
                              'description' => '发票ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1325321532',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"D35FF10E-1B2E-4ABA-8401-0AE17725F50B\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"TotalUnAppliedInvoiceAmount\\": 12344,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 2,\\n    \\"TotalInvoiceAmount\\": 12344,\\n    \\"HostId\\": \\"cn\\",\\n    \\"EvaluateList\\": {\\n      \\"Evaluate\\": [\\n        {\\n          \\"Type\\": 1,\\n          \\"Status\\": 1,\\n          \\"BillId\\": 234543254325,\\n          \\"UserId\\": 2738543,\\n          \\"BillCycle\\": \\"202002\\",\\n          \\"CanInvoiceAmount\\": 123213,\\n          \\"OffsetAcceptAmount\\": 500,\\n          \\"ItemId\\": 23453245,\\n          \\"OutBizId\\": \\"124324213421\\",\\n          \\"UserNick\\": \\"test\\",\\n          \\"GmtModified\\": \\"2018-10-10 18:05:44\\",\\n          \\"OpId\\": \\"12341\\",\\n          \\"BizType\\": \\"ALIYUN\\",\\n          \\"OriginalAmount\\": -10000,\\n          \\"InvoicedAmount\\": 10000,\\n          \\"GmtCreate\\": \\"2018-10-10 18:05:44\\",\\n          \\"PresentAmount\\": -10000,\\n          \\"BizTime\\": \\"2018-10-10 18:05:44\\",\\n          \\"Name\\": \\"有价代金券退款\\",\\n          \\"OffsetCostAmount\\": 500,\\n          \\"Id\\": 1325321532\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEvaluateListResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>D35FF10E-1B2E-4ABA-8401-0AE17725F50B</RequestId>\\n    <Data>\\n        <TotalInvoiceAmount>8532</TotalInvoiceAmount>\\n        <TotalCount>23</TotalCount>\\n        <PageSize>20</PageSize>\\n        <PageNum>1</PageNum>\\n        <TotalUnAppliedInvoiceAmount>8532</TotalUnAppliedInvoiceAmount>\\n        <HostId>cn</HostId>\\n        <EvaluateList>\\n            <Evaluate>\\n                <Status>1</Status>\\n                <OffsetCostAmount>0</OffsetCostAmount>\\n                <BizTime>2020-03-09 10:43:57</BizTime>\\n                <GmtModified>2020-03-09 10:45:02</GmtModified>\\n                <BillCycle>202003</BillCycle>\\n                <BizType>ALIYUN_SERVICE</BizType>\\n                <PresentAmount>1</PresentAmount>\\n                <OriginalAmount>1</OriginalAmount>\\n                <Name>关系型数据库RDS(包月)</Name>\\n                <GmtCreate>2020-03-09 10:45:02</GmtCreate>\\n                <Type>1</Type>\\n                <UserId>1857xxxxxx3489</UserId>\\n                <OffsetAcceptAmount>0</OffsetAcceptAmount>\\n                <Id>23345345553</Id>\\n                <OutBizId>20xxxxxxx112</OutBizId>\\n                <InvoicedAmount>0</InvoicedAmount>\\n                <CanInvoiceAmount>1</CanInvoiceAmount>\\n            </Evaluate>\\n        </EvaluateList>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryEvaluateListResponse>","errorExample":""}]',
      'title' => '待开票对象查询服务',
      'summary' => '查询待开票对象信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryCustomerAddressList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BBEF51A3-E933-4F40-A534-C673CBDB9C80',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CustomerInvoiceAddressList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CustomerInvoiceAddress' => 
                      array (
                        'description' => '客户发票地址列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Addressee' => 
                            array (
                              'description' => '收件人。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'PostalCode' => 
                            array (
                              'description' => '邮编。',
                              'type' => 'string',
                              'example' => '000000',
                            ),
                            'UserId' => 
                            array (
                              'description' => '用户ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '4382956342857',
                            ),
                            'City' => 
                            array (
                              'description' => '市。',
                              'type' => 'string',
                              'example' => '杭州',
                            ),
                            'UserNick' => 
                            array (
                              'description' => '用户昵称。',
                              'type' => 'string',
                              'example' => 'testNick',
                            ),
                            'Street' => 
                            array (
                              'description' => '街道。',
                              'type' => 'string',
                              'example' => '测试街道',
                            ),
                            'Phone' => 
                            array (
                              'description' => '联系电话。',
                              'type' => 'string',
                              'example' => '138xxxxxxxx',
                            ),
                            'County' => 
                            array (
                              'description' => '区。',
                              'type' => 'string',
                              'example' => '测试区',
                            ),
                            'BizType' => 
                            array (
                              'description' => '试用业务类型。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'DeliveryAddress' => 
                            array (
                              'description' => '详细地址（拼接字段后返回）。',
                              'type' => 'string',
                              'example' => '测试地址',
                            ),
                            'Id' => 
                            array (
                              'description' => 'ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '311601051',
                            ),
                            'Province' => 
                            array (
                              'description' => '省。',
                              'type' => 'string',
                              'example' => '浙江',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"BBEF51A3-E933-4F40-A534-C673CBDB9C80\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CustomerInvoiceAddressList\\": {\\n      \\"CustomerInvoiceAddress\\": [\\n        {\\n          \\"Addressee\\": \\"test\\",\\n          \\"PostalCode\\": \\"000000\\",\\n          \\"UserId\\": 4382956342857,\\n          \\"City\\": \\"杭州\\",\\n          \\"UserNick\\": \\"testNick\\",\\n          \\"Street\\": \\"测试街道\\",\\n          \\"Phone\\": \\"138xxxxxxxx\\",\\n          \\"County\\": \\"测试区\\",\\n          \\"BizType\\": \\"test\\",\\n          \\"DeliveryAddress\\": \\"测试地址\\",\\n          \\"Id\\": 311601051,\\n          \\"Province\\": \\"浙江\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryCustomerAddressListResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>BBEF51A3-E933-4F40-A534-C673CBDB9C80</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <CustomerInvoiceAddressList>\\n            <CustomerInvoiceAddress>\\n                <Phone>186********</Phone>\\n                <Street>测试街道</Street>\\n                <PostalCode>000000</PostalCode>\\n                <County>测试区</County>\\n                <DeliveryAddress>浙江省杭州市**********</DeliveryAddress>\\n                <Id>311601051</Id>\\n                <Addressee>test</Addressee>\\n                <UserId>169***********</UserId>\\n                <Province>浙江*</Province>\\n                <City>杭州*</City>\\n            </CustomerInvoiceAddress>\\n        </CustomerInvoiceAddressList>\\n    </Data>\\n</QueryCustomerAddressListResponse>","errorExample":""}]',
      'title' => '查询发票邮寄地址服务',
      'summary' => '查询阿里云发票邮寄地址信息服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryInvoicingCustomerList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BBEF51A3-E933-4F40-A534-C673CBDB9C80',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CustomerInvoiceList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CustomerInvoice' => 
                      array (
                        'description' => '发票信息列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '类型，取值：
- 0：增值税普通发票。
- 1：增值税专有发票。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'Status' => 
                            array (
                              'description' => '发票抬头状态。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '2',
                            ),
                            'AdjustType' => 
                            array (
                              'description' => '变更类型。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'Bank' => 
                            array (
                              'description' => '银行。',
                              'type' => 'string',
                              'example' => '测试银行',
                            ),
                            'StartCycle' => 
                            array (
                              'description' => '开始账期。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '202002',
                            ),
                            'TitleChangeInstructions' => 
                            array (
                              'description' => '发票抬头变更情况说明书。',
                              'type' => 'string',
                              'example' => 'instruction.doc',
                            ),
                            'UserId' => 
                            array (
                              'description' => '用户ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '34565465675',
                            ),
                            'OperatingLicenseAddress' => 
                            array (
                              'description' => '营业执照地址。',
                              'type' => 'string',
                              'example' => '某某省某某市某某区某地址',
                            ),
                            'InvoiceTitle' => 
                            array (
                              'description' => '公司抬头。',
                              'type' => 'string',
                              'example' => '测试公司',
                            ),
                            'UserNick' => 
                            array (
                              'description' => '用户昵称。',
                              'type' => 'string',
                              'example' => 'testNick',
                            ),
                            'OperatingLicensePhone' => 
                            array (
                              'description' => '营业执照电话。',
                              'type' => 'string',
                              'example' => '138xxxxxxxx',
                            ),
                            'EndCycle' => 
                            array (
                              'description' => '结束账期。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '202003',
                            ),
                            'DefaultRemark' => 
                            array (
                              'description' => '默认备注，选择此抬头时将会附加的备注文案。',
                              'type' => 'string',
                              'example' => 'PO代码：12984554',
                            ),
                            'TaxationLicense' => 
                            array (
                              'description' => '税务登记证扫描件路径和文件名。',
                              'type' => 'string',
                              'example' => 'taxationLicense.jpg',
                            ),
                            'RegisterNo' => 
                            array (
                              'description' => '税务登记号。',
                              'type' => 'string',
                              'example' => '21343245342534',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '创建时间，格式：yyyy-mm-dd hh:mm:ss。',
                              'type' => 'string',
                              'example' => '2018-09-07 15:26:20',
                            ),
                            'TaxpayerType' => 
                            array (
                              'description' => '取值：
- 1：一般纳税人。
- 2：小规模纳税人。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'CustomerType' => 
                            array (
                              'description' => '客户支付宝认证类型，取值：
- 1：个人。
- 2：公司。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'IssueType' => 
                            array (
                              'description' => '开具类型。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'Id' => 
                            array (
                              'description' => '发票ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '239875502738',
                            ),
                            'BankNo' => 
                            array (
                              'description' => '银行账号。',
                              'type' => 'string',
                              'example' => '389576348573296349853476',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"BBEF51A3-E933-4F40-A534-C673CBDB9C80\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CustomerInvoiceList\\": {\\n      \\"CustomerInvoice\\": [\\n        {\\n          \\"Type\\": 1,\\n          \\"Status\\": 2,\\n          \\"AdjustType\\": 1,\\n          \\"Bank\\": \\"测试银行\\",\\n          \\"StartCycle\\": 202002,\\n          \\"TitleChangeInstructions\\": \\"instruction.doc\\",\\n          \\"UserId\\": 34565465675,\\n          \\"OperatingLicenseAddress\\": \\"某某省某某市某某区某地址\\",\\n          \\"InvoiceTitle\\": \\"测试公司\\",\\n          \\"UserNick\\": \\"testNick\\",\\n          \\"OperatingLicensePhone\\": \\"138xxxxxxxx\\",\\n          \\"EndCycle\\": 202003,\\n          \\"DefaultRemark\\": \\"PO代码：12984554\\",\\n          \\"TaxationLicense\\": \\"taxationLicense.jpg\\",\\n          \\"RegisterNo\\": \\"21343245342534\\",\\n          \\"GmtCreate\\": \\"2018-09-07 15:26:20\\",\\n          \\"TaxpayerType\\": 1,\\n          \\"CustomerType\\": 1,\\n          \\"IssueType\\": 1,\\n          \\"Id\\": 239875502738,\\n          \\"BankNo\\": \\"389576348573296349853476\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryInvoicingCustomerListResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>BBEF51A3-E933-4F40-A534-C673CBDB9C80</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <CustomerInvoiceList>\\n            <CustomerInvoice>\\n                <Status>2</Status>\\n                <CustomerType>2</CustomerType>\\n                <Id>50000************</Id>\\n                <InvoiceTitle>个人</InvoiceTitle>\\n                <UserId>169***********</UserId>\\n                <GmtCreate>2018-09-07 15:26:20</GmtCreate>\\n                <TaxpayerType>2</TaxpayerType>\\n            </CustomerInvoice>\\n        </CustomerInvoiceList>\\n    </Data>\\n</QueryInvoicingCustomerListResponse>","errorExample":""}]',
      'title' => '发票抬头查询服务',
      'summary' => '查询阿里云用户发票抬头信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ApplyInvoice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InvoiceAmount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '申请开票金额（单位：分）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '124132',
          ),
        ),
        1 => 
        array (
          'name' => 'CustomerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发票信息ID，对应发票抬头查询返回的ID参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '124132423',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '邮寄地址ID（纸质票时必填），对应发票邮寄地址查询返回的ID参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '237958367',
          ),
        ),
        3 => 
        array (
          'name' => 'InvoicingType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发票类型，取值：
- 0：纸质发票
- 1：电子发票',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'ProcessWay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发票渠道，（0：阿里云处理，1：税务平台处理。要求为1）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'ApplyUserNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '申请人昵称，系统不做校验。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'InvoiceByAmount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否按金额开票，若为true则按照用户指定InvoiceAmount申请发票，否则以所选开票对象的总金额申请发票。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'UserRemark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户备注',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'SelectedIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '选择开票的代开票对象ids，对应待开票推向查询返回的ID参数。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '384752367',
            ),
            'required' => true,
            'example' => '384752367',
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'InvoiceApplyId' => 
                  array (
                    'description' => '发票申请ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1323125534',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"InvoiceApplyId\\": 1323125534\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ApplyInvoiceResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <InvoiceApplyId>1323125534</InvoiceApplyId>\\n    </Data>\\n</ApplyInvoiceResponse>","errorExample":""}]',
      'title' => '发票申请服务',
      'summary' => '提交开票申请服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySkuPriceList' => 
    array (
      'summary' => '通常一个产品功能会有1到多个SKU，有的产品会多达数万级别的SKU。
本API是用来查询一个指定的产品功能下的SKU列表及其目录价。接口入参支持按照某种SKU配置的条件来进行过滤查询。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '商品code，可通过**QueryCommodityList**接口查询商品code。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'PriceEntityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '定价对象code，可通过**QueryPriceEntityList**接口查询定价对象code。',
            'type' => 'string',
            'required' => true,
            'example' => 'instance_type',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页返回的数量，最大不能超过50',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页token，首页查询时传空，查询结果中返回下一页token地址。当结果token为空时表示全部查完。可通过查询结果中的**NextPageToken**字段获取下一页token。',
            'type' => 'string',
            'required' => false,
            'example' => '080112060a0422020800180022490a470342000000315333303332363436363336333433393636333136333338333733373333333133373336363336323634363336363337333836333636333636313336363433363332',
          ),
        ),
        4 => 
        array (
          'name' => 'PriceFactorConditionMap',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '定价因子条件集合，可通过**QueryPriceEntityList**接口查询定价因子code和定价因子值。',
            'type' => 'object',
            'required' => false,
            'additionalProperties' => 
            array (
              'type' => 'array',
              'items' => 
              array (
                'type' => 'string',
                'example' => '{"vm_region_no":"cn-shiwei-shenshu"}',
                'description' => '定价因子值对',
              ),
              'description' => '定价对象因值集合',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言，不填时默认为zh(中文)',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'en' => '英文',
              'zh' => '中文',
            ),
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'F5B803CF-94D8-43AF-ADB3-D819AAD30E27',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '返回消息',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'SkuPricePage' => 
                  array (
                    'description' => '定价对象sku信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TotalCount' => 
                      array (
                        'description' => 'sku总数量',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '18732',
                      ),
                      'NextPageToken' => 
                      array (
                        'description' => '下一页的token',
                        'type' => 'string',
                        'example' => '080112060a0422020800180022490a470342000000315333303332363436363336333433393636333136333338333733373333333133373336363336323634363336363337333836333636333636313336363433363332',
                      ),
                      'SkuPriceList' => 
                      array (
                        'description' => 'sku列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'sku对象',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SkuCode' => 
                            array (
                              'description' => 'sku code',
                              'type' => 'string',
                              'example' => '017c15a31507bc6de22aa93777461adc',
                            ),
                            'CskuPriceList' => 
                            array (
                              'description' => 'sku价格列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'sku价格对象',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CskuCode' => 
                                  array (
                                    'description' => 'csku code，价格唯一编码',
                                    'type' => 'string',
                                    'example' => 'ac74dd7b52ae6389ddef099283fb8275',
                                  ),
                                  'Currency' => 
                                  array (
                                    'description' => '币种',
                                    'type' => 'string',
                                    'enumValueTitles' => 
                                    array (
                                      'JPY' => '日元',
                                      'SAR' => '沙特币',
                                      'USD' => '美元',
                                      'CNY' => '人民币',
                                    ),
                                    'example' => 'CNY',
                                  ),
                                  'UsageUnit' => 
                                  array (
                                    'description' => '用量单位',
                                    'type' => 'string',
                                    'example' => '个',
                                  ),
                                  'PriceType' => 
                                  array (
                                    'description' => '价格类型',
                                    'type' => 'string',
                                    'enumValueTitles' => 
                                    array (
                                      'usagePrice' => '使用量价',
                                      'monthPrice' => '月价',
                                      'dayPrice' => '天价',
                                      'hourPrice' => '小时价',
                                      'weekPrice' => '周价',
                                      'yearPrice' => '年价',
                                      'fixedPrice' => '一口价',
                                    ),
                                    'example' => 'hourPrice',
                                  ),
                                  'PriceMode' => 
                                  array (
                                    'description' => '定价模式',
                                    'type' => 'string',
                                    'enumValueTitles' => 
                                    array (
                                      'STEP_ACCUMULATION' => '阶梯累计',
                                      'STEP_ARRIVE' => '阶梯到达',
                                      'NORMAL_PRICE' => '非阶梯价',
                                    ),
                                    'example' => 'STEP_ARRIVE',
                                  ),
                                  'Price' => 
                                  array (
                                    'description' => '价格',
                                    'type' => 'string',
                                    'enumValueTitles' => 
                                    array (
                                    ),
                                    'example' => '100',
                                  ),
                                  'PriceUnit' => 
                                  array (
                                    'description' => '价格单位',
                                    'type' => 'string',
                                    'example' => '美元/个',
                                  ),
                                  'RangeList' => 
                                  array (
                                    'description' => '当PriceMode是STEP_ACCUMULATION 、STEP_ARRIVE时，本字段有值，指定Range范围；
当PriceMode是
NORMAL_PRICE时，本字段值是NULL',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '区分对象',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'FactorCode' => 
                                        array (
                                          'description' => '因子code',
                                          'type' => 'string',
                                          'example' => '212fbd27866307fc79ecf06934a88b2c',
                                        ),
                                        'Min' => 
                                        array (
                                          'description' => '最小值',
                                          'type' => 'string',
                                          'example' => '1',
                                        ),
                                        'Max' => 
                                        array (
                                          'description' => '最大值',
                                          'type' => 'string',
                                          'example' => '10',
                                        ),
                                        'Type' => 
                                        array (
                                          'description' => '区间闭合类型',
                                          'type' => 'string',
                                          'enumValueTitles' => 
                                          array (
                                            'LORC' => '左开右闭',
                                            'LCRO' => '左闭右开',
                                            'LCRC' => '左闭右闭',
                                            'LORL' => '左开右开',
                                          ),
                                          'example' => 'LORC',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'SkuFactorMap' => 
                            array (
                              'description' => '因子值集合',
                              'type' => 'object',
                              'additionalProperties' => 
                              array (
                                'type' => 'string',
                                'example' => '{             "vm_region_no": "cn-zhangjiakou-na62-a01",             "iooptimized": "optimized",             "vm_os_kind": "windows",             "instance_type": "ecs.i1.xlarge"           }',
                                'description' => '因子值对

不同的商品的定价对象下有各自的因子，比如ecs商品的instance_type的因子有`vm_region_no，iooptimized，vm_os_kind，instance_type`',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F5B803CF-94D8-43AF-ADB3-D819AAD30E27\\",\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"SkuPricePage\\": {\\n      \\"TotalCount\\": 18732,\\n      \\"NextPageToken\\": \\"080112060a0422020800180022490a470342000000315333303332363436363336333433393636333136333338333733373333333133373336363336323634363336363337333836333636333636313336363433363332\\",\\n      \\"SkuPriceList\\": [\\n        {\\n          \\"SkuCode\\": \\"017c15a31507bc6de22aa93777461adc\\",\\n          \\"CskuPriceList\\": [\\n            {\\n              \\"CskuCode\\": \\"ac74dd7b52ae6389ddef099283fb8275\\",\\n              \\"Currency\\": \\"CNY\\",\\n              \\"UsageUnit\\": \\"个\\",\\n              \\"PriceType\\": \\"hourPrice\\",\\n              \\"PriceMode\\": \\"STEP_ARRIVE\\",\\n              \\"Price\\": \\"100\\",\\n              \\"PriceUnit\\": \\"美元/个\\",\\n              \\"RangeList\\": [\\n                {\\n                  \\"FactorCode\\": \\"212fbd27866307fc79ecf06934a88b2c\\",\\n                  \\"Min\\": \\"1\\",\\n                  \\"Max\\": \\"10\\",\\n                  \\"Type\\": \\"LORC\\"\\n                }\\n              ]\\n            }\\n          ],\\n          \\"SkuFactorMap\\": {\\n            \\"key\\": \\"{             \\\\\\"vm_region_no\\\\\\": \\\\\\"cn-zhangjiakou-na62-a01\\\\\\",             \\\\\\"iooptimized\\\\\\": \\\\\\"optimized\\\\\\",             \\\\\\"vm_os_kind\\\\\\": \\\\\\"windows\\\\\\",             \\\\\\"instance_type\\\\\\": \\\\\\"ecs.i1.xlarge\\\\\\"           }\\"\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySkuPriceListResponse>\\n    <RequestId>F5B803CF-94D8-43AF-ADB3-D819AAD30E27</RequestId>\\n    <Code>Success</Code>\\n    <Message>Successful!</Message>\\n    <Success>true</Success>\\n    <Data>\\n        <SkuPricePage>\\n            <TotalCount>18732</TotalCount>\\n            <NextPageToken>080112060a0422020800180022490a470342000000315333303332363436363336333433393636333136333338333733373333333133373336363336323634363336363337333836333636333636313336363433363332</NextPageToken>\\n            <SkuPriceList>\\n                <SkuCode>017c15a31507bc6de22aa93777461adc</SkuCode>\\n                <CskuPriceList>\\n                    <CskuCode>ac74dd7b52ae6389ddef099283fb8275</CskuCode>\\n                    <Currency>CNY</Currency>\\n                    <UsageUnit>个</UsageUnit>\\n                    <PriceType>hourPrice</PriceType>\\n                    <PriceMode>STEP_ARRIVE</PriceMode>\\n                    <Price>100</Price>\\n                    <PriceUnit>美元/个</PriceUnit>\\n                    <RangeList>\\n                        <FactorCode>212fbd27866307fc79ecf06934a88b2c</FactorCode>\\n                        <Min>1</Min>\\n                        <Max>10</Max>\\n                        <Type>LORC</Type>\\n                    </RangeList>\\n                </CskuPriceList>\\n                <SkuFactorMap>\\n                    <key>{\\"vm_region_no\\",\\"cn-qingdao-nebula\\"}</key>\\n                </SkuFactorMap>\\n            </SkuPriceList>\\n        </SkuPricePage>\\n    </Data>\\n</QuerySkuPriceListResponse>","errorExample":""}]',
      'title' => '查询商品定价对象下sku列表',
    ),
    'QueryCommodityList' => 
    array (
      'summary' => '该接口提供根据产品code获取商品信息列表的能力。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言，不填时默认为zh(中文)',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'en' => '英文',
              'zh' => '中文',
            ),
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'CC706AAC-75A6-55B5-9AB7-7D171C6C7655',
              ),
              'Message' => 
              array (
                'description' => '调用结果的附加信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Success' => 
              array (
                'description' => '是否成功
',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'description' => '状态码
',
                'type' => 'string',
                'example' => 'NotApplicable',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CommodityList' => 
                  array (
                    'description' => '商品列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '商品列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CommodityCode' => 
                        array (
                          'description' => '商品code，与费用中心产品明细code一致',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'CommodityName' => 
                        array (
                          'description' => '商品名称。',
                          'type' => 'string',
                          'example' => '云服务器（按量付费）',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '付款类型：-POSTPAY：按量付款-PREPAY：包年包月',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'PREPAY' => '预付费',
                            'POSTPAY' => '后付费',
                          ),
                          'example' => 'POSTPAY',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CC706AAC-75A6-55B5-9AB7-7D171C6C7655\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"NotApplicable\\",\\n  \\"Data\\": {\\n    \\"CommodityList\\": [\\n      {\\n        \\"CommodityCode\\": \\"ecs\\",\\n        \\"CommodityName\\": \\"云服务器（按量付费）\\",\\n        \\"ChargeType\\": \\"POSTPAY\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '根据产品code查询商品信息列表',
      'description' => '该接口提供根据产品code获取商品信息列表的能力。',
    ),
    'QueryPriceEntityList' => 
    array (
      'summary' => '本API是用来查询一个商品下有哪些定价对象。
定价对象是用来计量和计算费用的最小产品能力。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '商品code，可通过**QueryCommodityList**接口查询商品code。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言，不填时默认为zh(中文)',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'en' => '英文',
              'zh' => '中文',
            ),
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PriceEntityInfoList' => 
                  array (
                    'description' => '定价对象列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '定价对象',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PriceEntityCode' => 
                        array (
                          'description' => '定价对象code',
                          'type' => 'string',
                          'example' => 'instance_type',
                        ),
                        'PriceEntityName' => 
                        array (
                          'description' => '定价对象名称',
                          'type' => 'string',
                          'example' => '云服务器实例',
                        ),
                        'PriceFactorList' => 
                        array (
                          'description' => '定价对象因子列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '定价对象因子',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'PriceFactorCode' => 
                              array (
                                'description' => '定价对象因子code',
                                'type' => 'string',
                                'example' => 'vm_region_no',
                              ),
                              'PriceFactorName' => 
                              array (
                                'description' => '定价对象因子名称',
                                'type' => 'string',
                                'example' => '地域',
                              ),
                              'PriceFactorValueList' => 
                              array (
                                'description' => '定价对象因子值列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '定价对象因子值',
                                  'type' => 'string',
                                  'example' => 'cn-shiwei-shenshu',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PriceEntityInfoList\\": [\\n      {\\n        \\"PriceEntityCode\\": \\"instance_type\\",\\n        \\"PriceEntityName\\": \\"云服务器实例\\",\\n        \\"PriceFactorList\\": [\\n          {\\n            \\"PriceFactorCode\\": \\"vm_region_no\\",\\n            \\"PriceFactorName\\": \\"地域\\",\\n            \\"PriceFactorValueList\\": [\\n              \\"cn-shiwei-shenshu\\"\\n            ]\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '商品定价对象列表查询',
      'description' => '本API是用来查询一个商品下有哪些定价对象。
定价对象是用来计量和计算费用的最小产品能力。',
      'responseParamsDescription' => '一个商品会有一到多个定价对象，每个定价对象下有一到多个定价因子',
    ),
    'DescribePricingModule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码，可通过接口**QueryProductList**查询产品代码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型，可通过接口**QueryProductList**查询产品类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'SubscriptionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Subscription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'This API is not applicable for caller.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C40A8EE0-8084-49FE-B66E-5E1C3B6AE025',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ModuleList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Module' => 
                      array (
                        'description' => '模块及定价属性信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ModuleName' => 
                            array (
                              'description' => '计价模块名称。',
                              'type' => 'string',
                              'example' => '实例',
                            ),
                            'PriceType' => 
                            array (
                              'description' => '价格类型：
- Usage：使用量。
- Hour：小时价。
- Day：天价。
- Week：星期价。
- Month：月价。
-  Year：年价。',
                              'type' => 'string',
                              'example' => 'Month',
                            ),
                            'Currency' => 
                            array (
                              'description' => '币种：CNY：人民币。',
                              'type' => 'string',
                              'example' => 'CNY',
                            ),
                            'ModuleCode' => 
                            array (
                              'description' => '计价模块标识。',
                              'type' => 'string',
                              'example' => 'InstanceType',
                            ),
                            'ConfigList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ConfigList' => 
                                array (
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '模块依赖的定价属性Code集合。',
                                    'type' => 'string',
                                    'example' => '[ "Region","InstanceType" ]',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'AttributeList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Attribute' => 
                      array (
                        'description' => '模块定价属性值。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Code' => 
                            array (
                              'description' => '属性Code。',
                              'type' => 'string',
                              'example' => 'DBInstanceStorage',
                            ),
                            'Name' => 
                            array (
                              'description' => '属性名称。',
                              'type' => 'string',
                              'example' => '存储空间',
                            ),
                            'Unit' => 
                            array (
                              'description' => '属性单位。',
                              'type' => 'string',
                              'example' => 'GB',
                            ),
                            'Values' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'AttributeValue' => 
                                array (
                                  'description' => '属性。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Type' => 
                                      array (
                                        'description' => '模块Code对应属性值类型。取值：
- single_float：单一数值类型。
- single_string：单一字符串类型。
- range_float：范围取值类型。',
                                        'type' => 'string',
                                        'example' => 'single_string',
                                      ),
                                      'Value' => 
                                      array (
                                        'description' => '模块Code对应属性值。
> 在Type = range_float时格式1024-1024000:1024表示从1024至1024000，步长1024。',
                                        'type' => 'string',
                                        'example' => 'mysql.n2.medium.1',
                                      ),
                                      'Remark' => 
                                      array (
                                        'description' => '模块取值描述信息。',
                                        'type' => 'string',
                                        'example' => '连接数：4000 IOPS与存储空间大小有关',
                                      ),
                                      'Name' => 
                                      array (
                                        'description' => '模块Code对应属性值。',
                                        'type' => 'string',
                                        'example' => '2 核 4GB（单机基础版）',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"This API is not applicable for caller.\\",\\n  \\"RequestId\\": \\"C40A8EE0-8084-49FE-B66E-5E1C3B6AE025\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ModuleList\\": {\\n      \\"Module\\": [\\n        {\\n          \\"ModuleName\\": \\"实例\\",\\n          \\"PriceType\\": \\"Month\\",\\n          \\"Currency\\": \\"CNY\\",\\n          \\"ModuleCode\\": \\"InstanceType\\",\\n          \\"ConfigList\\": {\\n            \\"ConfigList\\": [\\n              \\"[ \\\\\\"Region\\\\\\",\\\\\\"InstanceType\\\\\\" ]\\"\\n            ]\\n          }\\n        }\\n      ]\\n    },\\n    \\"AttributeList\\": {\\n      \\"Attribute\\": [\\n        {\\n          \\"Code\\": \\"DBInstanceStorage\\",\\n          \\"Name\\": \\"存储空间\\",\\n          \\"Unit\\": \\"GB\\",\\n          \\"Values\\": {\\n            \\"AttributeValue\\": [\\n              {\\n                \\"Type\\": \\"single_string\\",\\n                \\"Value\\": \\"mysql.n2.medium.1\\",\\n                \\"Remark\\": \\"连接数：4000 IOPS与存储空间大小有关\\",\\n                \\"Name\\": \\"2 核 4GB（单机基础版）\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribePricingModuleResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>C40A8EE0-8084-49FE-B66E-5E1C3B6AE025</RequestId>\\n    <Data>\\n        <AttributeList>\\n            <Attribute>\\n                <Values>\\n                    <AttributeValue>\\n                        <Type>single_string</Type>\\n                        <Value>cn-qingdao-cm5-a01</Value>\\n                        <Name>华北 1</Name>\\n                    </AttributeValue>\\n                </Values>\\n                <Code>Region</Code>\\n                <Name>地域</Name>\\n            </Attribute>\\n        </AttributeList>\\n        <ModuleList>\\n            <Module>\\n                <ModuleCode>DataDisk</ModuleCode>\\n                <ModuleName>数据盘</ModuleName>\\n                <Currency>CNY</Currency>\\n                <PriceType>Month</PriceType>\\n                <ConfigList>\\n                    <ConfigList>Region</ConfigList>\\n                    <ConfigList>DataDisk.Category</ConfigList>\\n                </ConfigList>\\n            </Module>\\n        </ModuleList>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</DescribePricingModuleResponse>","errorExample":""}]',
      'title' => '查询产品模块信息',
      'summary' => '查询阿里云某个产品对应模块信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryProductList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'QueryTotalCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回产品总数目，默认为false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数，最大300，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'This API is not applicable for caller.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94858229-2758-4663-A7D0-99490D541F15',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '阿里云产品信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNum' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '产品记录总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '449',
                  ),
                  'ProductList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Product' => 
                      array (
                        'description' => '产品定义列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '内容分发网络CDN（按量付费）',
                            ),
                            'ProductType' => 
                            array (
                              'description' => '产品类型。',
                              'type' => 'string',
                              'example' => 'CDN',
                            ),
                            'SubscriptionType' => 
                            array (
                              'description' => '订阅类型。取值：
- Subscription：预付费。
- PayAsYouGo：后付费。',
                              'type' => 'string',
                              'example' => 'PayAsYouGo',
                            ),
                            'ProductCode' => 
                            array (
                              'description' => '产品代码。',
                              'type' => 'string',
                              'example' => 'cdn',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"This API is not applicable for caller.\\",\\n  \\"RequestId\\": \\"94858229-2758-4663-A7D0-99490D541F15\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalCount\\": 449,\\n    \\"ProductList\\": {\\n      \\"Product\\": [\\n        {\\n          \\"ProductName\\": \\"内容分发网络CDN（按量付费）\\",\\n          \\"ProductType\\": \\"CDN\\",\\n          \\"SubscriptionType\\": \\"PayAsYouGo\\",\\n          \\"ProductCode\\": \\"cdn\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryProductListResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>28D1C9AE-4B16-43AE-9E19-4D3CF36F2A1E</RequestId>\\n    <Data>\\n        <ProductList>\\n            <Product>\\n                <SubscriptionType>PayAsYouGo</SubscriptionType>\\n                <ProductName>NAT共享带宽包（按量付费）</ProductName>\\n                <ProductCode>bwp</ProductCode>\\n                <ProductType/>\\n            </Product>\\n            <Product>\\n                <SubscriptionType>PayAsYouGo</SubscriptionType>\\n                <ProductName>内容分发网络CDN（按量付费）</ProductName>\\n                <ProductCode>cdn</ProductCode>\\n                <ProductType>CDN</ProductType>\\n            </Product>\\n        </ProductList>\\n        <TotalCount>449</TotalCount>\\n        <PageSize>10</PageSize>\\n        <PageNum>1</PageNum>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</QueryProductListResponse>","errorExample":""}]',
      'title' => '查询产品信息',
      'summary' => '查询阿里云产品信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryUserOmsData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Table',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用量数据产品和明细信息，一般为ProductCode，不同产品存在多种计量模型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'DataType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '计量数据时间类型，参考具体产品文档描述选用。
- Raw：小时。
- Hour：小时。
- Day：天。
- Month：月。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Hour',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求的开始时间。

日期格式按照ISO8601标准标示，并需要使用UTC时间。格式：yyyy-mm-ddThh:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-02-20T12:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求的结束时间。

日期格式按照ISO8601标准标示，并需要使用UTC时间。格式：yyyy-mm-ddThh:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2020-02-21T12:00:00Z',
          ),
        ),
        4 => 
        array (
          'name' => 'Marker',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设定结果从NextToken之后按字母排序的第一个开始返回。默认从头返回。',
            'type' => 'string',
            'required' => false,
            'example' => 'NextToken',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询每页行数，1~200，默认值100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful！',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6000EE23-274B-4E07-A697-FF2E999520A4',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Marker' => 
                  array (
                    'description' => '下页开始NextToken字段，如为空或无此项表示已无数据。',
                    'type' => 'string',
                    'example' => 'NextToken',
                  ),
                  'HostId' => 
                  array (
                    'description' => '主机ID。',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                  'OmsData' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'OMS数据列表。',
                      'type' => 'object',
                      'example' => '[{ "SyncIn": "0", "Bucket": "quota_for_get_service_", "NetworkIn": "0", "PutRequest": "1", "NetworkOut": "0", "GetRequest": "0", "ProcessImgSize": "0", "SyncOut": "0", "Storage": "0", "Region": "ap-northeast-1", "ProviderId": "26842", "CdnIn": "0", "EndTime": "2019-09-03T16:00:00Z", "StartTime": "2019-09-02T16:00:00Z", "StorageType": "standard", "CdnOut": "0"}]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotApplicable',
            'errorMessage' => 'This API is not applicable for caller.',
          ),
          1 => 
          array (
            'errorCode' => 'NotAuthorized',
            'errorMessage' => 'This API is not authorized for caller.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOwner',
            'errorMessage' => 'The specified owner doesn\'t belong to caller.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful！\\",\\n  \\"RequestId\\": \\"6000EE23-274B-4E07-A697-FF2E999520A4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Marker\\": \\"NextToken\\",\\n    \\"HostId\\": \\"cn\\",\\n    \\"OmsData\\": [\\n      [\\n        {\\n          \\"SyncIn\\": \\"0\\",\\n          \\"Bucket\\": \\"quota_for_get_service_\\",\\n          \\"NetworkIn\\": \\"0\\",\\n          \\"PutRequest\\": \\"1\\",\\n          \\"NetworkOut\\": \\"0\\",\\n          \\"GetRequest\\": \\"0\\",\\n          \\"ProcessImgSize\\": \\"0\\",\\n          \\"SyncOut\\": \\"0\\",\\n          \\"Storage\\": \\"0\\",\\n          \\"Region\\": \\"ap-northeast-1\\",\\n          \\"ProviderId\\": \\"26842\\",\\n          \\"CdnIn\\": \\"0\\",\\n          \\"EndTime\\": \\"2019-09-03T16:00:00Z\\",\\n          \\"StartTime\\": \\"2019-09-02T16:00:00Z\\",\\n          \\"StorageType\\": \\"standard\\",\\n          \\"CdnOut\\": \\"0\\"\\n        }\\n      ]\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryUserOmsDataResponse>\\n    <Message>Successful!</Message>\\n    <RequestId>6000EE23-274B-4E07-A697-FF2E999520A4</RequestId>\\n    <Success>true</Success>\\n    <Code>Success</Code>\\n    <Data>\\n        <OmsData>\\n            <SyncIn>0</SyncIn>\\n            <Bucket>quota_for_get_service_</Bucket>\\n            <NetworkIn>0</NetworkIn>\\n            <PutRequest>1</PutRequest>\\n            <NetworkOut>0</NetworkOut>\\n            <GetRequest>0</GetRequest>\\n            <ProcessImgSize>0</ProcessImgSize>\\n            <SyncOut>0</SyncOut>\\n            <Storage>0</Storage>\\n            <Region>ap-northeast-1</Region>\\n            <ProviderId>26842</ProviderId>\\n            <CdnIn>0</CdnIn>\\n            <EndTime>2019-09-02T16:00:00Z</EndTime>\\n            <StartTime>2019-09-01T16:00:00Z</StartTime>\\n            <StorageType>standard</StorageType>\\n            <CdnOut>0</CdnOut>\\n        </OmsData>\\n        <OmsData>\\n            <SyncIn>0</SyncIn>\\n            <Bucket>quota_for_get_service_</Bucket>\\n            <NetworkIn>0</NetworkIn>\\n            <PutRequest>1</PutRequest>\\n            <NetworkOut>0</NetworkOut>\\n            <GetRequest>0</GetRequest>\\n            <ProcessImgSize>0</ProcessImgSize>\\n            <SyncOut>0</SyncOut>\\n            <Storage>0</Storage>\\n            <Region>ap-northeast-1</Region>\\n            <ProviderId>26842</ProviderId>\\n            <CdnIn>0</CdnIn>\\n            <EndTime>2019-09-03T16:00:00Z</EndTime>\\n            <StartTime>2019-09-02T16:00:00Z</StartTime>\\n            <StorageType>standard</StorageType>\\n            <CdnOut>0</CdnOut>\\n        </OmsData>\\n        <HostId>cn</HostId>\\n    </Data>\\n</QueryUserOmsDataResponse>","errorExample":""}]',
      'title' => '根据传入的云产品查询相应的计量记录',
      'summary' => '根据传入的云产品查询相应的计量记录。',
      'description' => '## API描述
- 传入云产品参数必须在以下云产品code中，计量数据类型有小时、天类型。
- 传入时间格式按照ISO8601标准，时间规范约束：
	-	由于数据推送存在一定延时，按小时类型能保证24小时前计量数据完整性，按天类型能保证2天前计量数据完整性。
	-	时间跨度上，可取最近一个季度的计量数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetAllExpirationDay' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UnifyExpireDay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前统一到期日设置只支持未过期云服务器ECS实例，已过期实例无法对齐统一到期日。设置完成后，可在续费时对齐设置的统一到期时间

日期范围：每月1号至28号',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => '返回信息',
              ),
              'RequestId' => 
              array (
                'description' => '请求标识',
                'type' => 'string',
                'example' => '请求标识',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"返回信息\\",\\n  \\"RequestId\\": \\"请求标识\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Message>返回信息</Message>\\n<RequestId>请求标识</RequestId>\\n<Code>200</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '设置ECS统一到期日',
      'summary' => '为ECS实例的续费设置统一到期日。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCostBudgetsSummary' => 
    array (
      'summary' => '查询用户 “成本管理-预算”的概要信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BudgetName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '预算名称',
            'description' => '预算名称。模糊匹配',
            'type' => 'string',
            'required' => false,
            'example' => '全年预算',
          ),
        ),
        1 => 
        array (
          'name' => 'BudgetStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '预算状态',
            'description' => '预算状态，枚举值：overdue（已过期）,notOverdue（未过期）。不填写则默认取全部',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'notOverdue' => 'notOverdue',
              'overdue' => 'overdue',
            ),
            'example' => 'notOverdue',
          ),
        ),
        2 => 
        array (
          'name' => 'BudgetType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '预算类型',
            'description' => '预算类型。枚举值：cost(费用预算), byquantity（按量编制预算）, asset（使用率及覆盖率预算）。
不填写则默认取全部',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'cost' => 'cost',
              'byquantity' => 'byquantity',
              'asset' => 'asset',
            ),
            'example' => 'cost',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始读取的位置',
            'description' => '当前调用开始读取的位置，参数值必须为空或者使用返回结果中的NextToken设值，否则会报错，空则代表从头开始读取。默认：空',
            'type' => 'string',
            'required' => false,
            'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6NH0=',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '读取的最大数据记录数量',
            'description' => '读取的最大数据记录数量。默认值：10，最大值：10，最小值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BssResult<CostBudgetResponse>',
            'description' => 'BssResult<CostBudgetResponse>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3BFC23FE-A182-4D96-A1E4-7521B30B8E43',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextToken' => 
                  array (
                    'title' => '下页token',
                    'description' => '下页token',
                    'type' => 'string',
                    'example' => 'eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6NH0=',
                  ),
                  'MaxResults' => 
                  array (
                    'title' => '本次请求所返回的最大记录条数。',
                    'description' => '本次请求所返回的最大记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'TotalCount' => 
                  array (
                    'title' => '总记录数。',
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Items' => 
                  array (
                    'description' => '列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预算列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BudgetName' => 
                        array (
                          'description' => '预算名称。',
                          'type' => 'string',
                          'example' => '全年预算',
                        ),
                        'BudgetStatus' => 
                        array (
                          'description' => '预算状态',
                          'type' => 'string',
                          'example' => 'overdue',
                        ),
                        'BudgetType' => 
                        array (
                          'description' => '预算类型。',
                          'type' => 'string',
                          'example' => 'cost',
                        ),
                        'Budget' => 
                        array (
                          'description' => '预算相关信息，其中：

- BudgetCycleType是滚动周期，枚举值：daily（日），monthly（月），quarterly（季），yearly(年)；

- TotalBudgetAmount是预算总额；

- BudgetMemo是预算备注。',
                          'type' => 'object',
                          'enumValueTitles' => 
                          array (
                          ),
                          'example' => '{           "budgetCycleType": "monthly",           "budgetMemo": "",           "totalBudgetAmount": 220         }',
                        ),
                        'CalculatedValues' => 
                        array (
                          'description' => '预实分析相关信息，其中：

- ActualConsumeSum' . "\0" . '是累计实际值；

- ActualAddForecastedAmount是累计实际与预测之和。当预算类型为费用预算时，累计实际与预测之和为从预算开始日期至当前日期的实际发生额加上从当前日期至预算截止日期的预测值。若当前日期至预算截止日期超过一年，则不会包含超过一年的预测金额部分；当预算类型为使用率及覆盖率预算时，累计实际与预测之和为从预算开始日期至预算截止日期的使用率或覆盖率，不含超过一年的预测部分。

- ActualAndBudgetComparison是预实对比，累计实际值/预算总额*100%；',
                          'type' => 'object',
                          'example' => '{           "actualConsumeSum": 88.6,           "actualAddForecastedAmount": 89.6,           "actualAndBudgetComparison": "20.73%"         }',
                        ),
                        'ConsumePeriod' => 
                        array (
                          'description' => '账期相关信息。其中：

- ConsumePeriodBegin是预算起始日期；

- ConsumePeriodEnd是预算截止日期。',
                          'type' => 'object',
                          'example' => '{           "consumePeriodBegin": "2022-10",           "consumePeriodEnd": "2022-11"         }',
                        ),
                      ),
                    ),
                  ),
                  'HostId' => 
                  array (
                    'title' => '站点名称',
                    'description' => '站点名称',
                    'type' => 'string',
                    'example' => 'cn',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3BFC23FE-A182-4D96-A1E4-7521B30B8E43\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6NH0=\\",\\n    \\"MaxResults\\": 5,\\n    \\"TotalCount\\": 20,\\n    \\"Items\\": [\\n      {\\n        \\"BudgetName\\": \\"全年预算\\",\\n        \\"BudgetStatus\\": \\"overdue\\",\\n        \\"BudgetType\\": \\"cost\\",\\n        \\"Budget\\": {\\n          \\"budgetCycleType\\": \\"monthly\\",\\n          \\"budgetMemo\\": \\"\\",\\n          \\"totalBudgetAmount\\": 220\\n        },\\n        \\"CalculatedValues\\": {\\n          \\"actualConsumeSum\\": 88.6,\\n          \\"actualAddForecastedAmount\\": 89.6,\\n          \\"actualAndBudgetComparison\\": \\"20.73%\\"\\n        },\\n        \\"ConsumePeriod\\": {\\n          \\"consumePeriodBegin\\": \\"2022-10\\",\\n          \\"consumePeriodEnd\\": \\"2022-11\\"\\n        }\\n      }\\n    ],\\n    \\"HostId\\": \\"cn\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCostBudgetsSummaryResponse>\\n    <RequestId>3BFC2DDB-2BC5-1AC4-AE39-AA75A6FADE7C</RequestId>\\n    <Message>Successful!</Message>\\n    <Data>\\n        <TotalCount>75</TotalCount>\\n        <NextToken>eyJwYWdlTnVtIjoyLCJwYWdlU2l6ZSI6MX0=</NextToken>\\n        <MaxResults>1</MaxResults>\\n        <Items>\\n            <BudgetStatus>notOverdue</BudgetStatus>\\n            <ConsumePeriod>\\n                <consumePeriodBegin>2022-08</consumePeriodBegin>\\n                <consumePeriodEnd>2023-07</consumePeriodEnd>\\n            </ConsumePeriod>\\n            <Budget>\\n                <budgetCycleType>annually</budgetCycleType>\\n                <budgetMemo/>\\n                <totalBudgetAmount>51752.64</totalBudgetAmount>\\n            </Budget>\\n            <BudgetName>回归验证-费用预算-按年-当月起1年</BudgetName>\\n            <BudgetType>cost</BudgetType>\\n            <CalculatedValues>\\n                <actualConsumeSum>1189.47</actualConsumeSum>\\n                <actualAddForecastedAmount>61883.91</actualAddForecastedAmount>\\n                <actualAndBudgetComparison>2.3%</actualAndBudgetComparison>\\n            </CalculatedValues>\\n        </Items>\\n        <HostId>cn</HostId>\\n    </Data>\\n    <Code>Success</Code>\\n    <Success>true</Success>\\n</DescribeCostBudgetsSummaryResponse>","errorExample":""}]',
      'title' => '查询成本管理预算概要信息',
      'description' => '本OpenAPI灰度中，仅对部分白名单用户开放，调用过多时不排除出现响应超时等性能问题。',
    ),
    'RenewChangeInstance' => 
    array (
      'summary' => '对一个实例续费的同时进行变配操作，实际变配时间，是续费订单生效的时间，并自动支付。不支持ECS和RDS系列产品的创建。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品代码，可通过接口**QueryProductList**查询产品代码，或查看**阿里云产品Code速查手册**。',
            'type' => 'string',
            'required' => true,
            'example' => 'rds',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型',
            'type' => 'string',
            'required' => false,
            'example' => 'rds',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'rm-skjdhaskjdh',
          ),
        ),
        3 => 
        array (
          'name' => 'Parameter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '模块列表',
            'type' => 'array',
            'items' => 
            array (
              'description' => '模块信息',
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '第n个模块属性value配置，n的取值范围为（1~100）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'disk',
                ),
                'Code' => 
                array (
                  'description' => '第n个模块属性code配置，n的取值范围为（1~100），如有多个模块属性参数，按照n=1,2,3…n的形式拼接多个参数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Bandwidth',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。',
            'type' => 'string',
            'required' => false,
            'example' => 'JASIOFKVNVIXXXXXX',
          ),
        ),
        5 => 
        array (
          'name' => 'RenewPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预付费续费时长，单位：月。取值：
- 1~9。
- 12。
- 24。
- 36。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '79EE7556-0CFD-44EB-9CD6-B3B526E3A85F',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Successful!',
              ),
              'Success' => 
              array (
                'description' => 'success=true代表调用执行完成。success=false代表执行出现错误。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '创建成功的订单ID。',
                    'type' => 'string',
                    'example' => '202407022550621',
                  ),
                  'HostId' => 
                  array (
                    'description' => '执行主机所在站点',
                    'type' => 'string',
                    'example' => '100.100.64.1:8150',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotExists',
            'errorMessage' => 'The specific resource is not exists.	',
          ),
          1 => 
          array (
            'errorCode' => 'ORDER.ACCOUNT_STATUS_ILLEGAL	',
            'errorMessage' => 'Please complete your basic personal information first.	',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError	',
            'errorMessage' => 'The request processing has failed due to some unknown error.	',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"79EE7556-0CFD-44EB-9CD6-B3B526E3A85F\\",\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Successful!\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OrderId\\": \\"202407022550621\\",\\n    \\"HostId\\": \\"100.100.64.1:8150\\"\\n  }\\n}","type":"json"}]',
      'title' => '续费变配服务',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'business.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'business.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'business.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'business.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'business.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'business.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'business.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'business.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'business.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'business.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'ap-northeast-2',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'business.ap-southeast-1.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'business.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'business.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'business.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'business.aliyuncs.com',
    ),
  ),
);