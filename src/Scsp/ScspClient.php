<?php

declare(strict_types=1);

namespace Dew\Acs\Scsp;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result queryHotlineDashboard(array $arguments = [])
 * @method \Http\Promise\Promise queryHotlineDashboardAsync($arguments = [])
 * @method \Dew\Acs\Result queryServicerById(array $arguments = [])
 * @method \Http\Promise\Promise queryServicerByIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryServicerByDepartmentAndMixName(array $arguments = [])
 * @method \Http\Promise\Promise queryServicerByDepartmentAndMixNameAsync($arguments = [])
 * @method \Dew\Acs\Result createAgent(array $arguments = [])
 * @method \Http\Promise\Promise createAgentAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAgent(array $arguments = [])
 * @method \Http\Promise\Promise deleteAgentAsync($arguments = [])
 * @method \Dew\Acs\Result updateAgent(array $arguments = [])
 * @method \Http\Promise\Promise updateAgentAsync($arguments = [])
 * @method \Dew\Acs\Result getAgent(array $arguments = [])
 * @method \Http\Promise\Promise getAgentAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineAgentDetail(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineAgentDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentBySkillGroupId(array $arguments = [])
 * @method \Http\Promise\Promise listAgentBySkillGroupIdAsync($arguments = [])
 * @method \Dew\Acs\Result listOutboundPhoneNumber(array $arguments = [])
 * @method \Http\Promise\Promise listOutboundPhoneNumberAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineWaitingNumber(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineWaitingNumberAsync($arguments = [])
 * @method \Dew\Acs\Result transferCallToAgent(array $arguments = [])
 * @method \Http\Promise\Promise transferCallToAgentAsync($arguments = [])
 * @method \Dew\Acs\Result getAllDepartment(array $arguments = [])
 * @method \Http\Promise\Promise getAllDepartmentAsync($arguments = [])
 * @method \Dew\Acs\Result createOuterCallCenterData(array $arguments = [])
 * @method \Http\Promise\Promise createOuterCallCenterDataAsync($arguments = [])
 * @method \Dew\Acs\Result startHotlineService(array $arguments = [])
 * @method \Http\Promise\Promise startHotlineServiceAsync($arguments = [])
 * @method \Dew\Acs\Result listHotlineRecord(array $arguments = [])
 * @method \Http\Promise\Promise listHotlineRecordAsync($arguments = [])
 * @method \Dew\Acs\Result queryHotlineSession(array $arguments = [])
 * @method \Http\Promise\Promise queryHotlineSessionAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineAgentDetailReport(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineAgentDetailReportAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineAgentStatus(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineAgentStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineGroupDetailReport(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineGroupDetailReportAsync($arguments = [])
 * @method \Dew\Acs\Result getOuterCallCenterDataList(array $arguments = [])
 * @method \Http\Promise\Promise getOuterCallCenterDataListAsync($arguments = [])
 * @method \Dew\Acs\Result sendHotlineHeartBeat(array $arguments = [])
 * @method \Http\Promise\Promise sendHotlineHeartBeatAsync($arguments = [])
 * @method \Dew\Acs\Result suspendHotlineService(array $arguments = [])
 * @method \Http\Promise\Promise suspendHotlineServiceAsync($arguments = [])
 * @method \Dew\Acs\Result transferCallToPhone(array $arguments = [])
 * @method \Http\Promise\Promise transferCallToPhoneAsync($arguments = [])
 * @method \Dew\Acs\Result transferCallToSkillGroup(array $arguments = [])
 * @method \Http\Promise\Promise transferCallToSkillGroupAsync($arguments = [])
 * @method \Dew\Acs\Result transferToThirdCall(array $arguments = [])
 * @method \Http\Promise\Promise transferToThirdCallAsync($arguments = [])
 * @method \Dew\Acs\Result finishHotlineService(array $arguments = [])
 * @method \Http\Promise\Promise finishHotlineServiceAsync($arguments = [])
 * @method \Dew\Acs\Result createRole(array $arguments = [])
 * @method \Http\Promise\Promise createRoleAsync($arguments = [])
 * @method \Dew\Acs\Result disableRole(array $arguments = [])
 * @method \Http\Promise\Promise disableRoleAsync($arguments = [])
 * @method \Dew\Acs\Result enableRole(array $arguments = [])
 * @method \Http\Promise\Promise enableRoleAsync($arguments = [])
 * @method \Dew\Acs\Result createTicket(array $arguments = [])
 * @method \Http\Promise\Promise createTicketAsync($arguments = [])
 * @method \Dew\Acs\Result updateTicket(array $arguments = [])
 * @method \Http\Promise\Promise updateTicketAsync($arguments = [])
 * @method \Dew\Acs\Result queryTicketActions(array $arguments = [])
 * @method \Http\Promise\Promise queryTicketActionsAsync($arguments = [])
 * @method \Dew\Acs\Result queryTicketCount(array $arguments = [])
 * @method \Http\Promise\Promise queryTicketCountAsync($arguments = [])
 * @method \Dew\Acs\Result queryTickets(array $arguments = [])
 * @method \Http\Promise\Promise queryTicketsAsync($arguments = [])
 * @method \Dew\Acs\Result searchTicketById(array $arguments = [])
 * @method \Http\Promise\Promise searchTicketByIdAsync($arguments = [])
 * @method \Dew\Acs\Result searchTicketByPhone(array $arguments = [])
 * @method \Http\Promise\Promise searchTicketByPhoneAsync($arguments = [])
 * @method \Dew\Acs\Result searchTicketList(array $arguments = [])
 * @method \Http\Promise\Promise searchTicketListAsync($arguments = [])
 * @method \Dew\Acs\Result assignTicket(array $arguments = [])
 * @method \Http\Promise\Promise assignTicketAsync($arguments = [])
 * @method \Dew\Acs\Result closeTicket(array $arguments = [])
 * @method \Http\Promise\Promise closeTicketAsync($arguments = [])
 * @method \Dew\Acs\Result executeActivity(array $arguments = [])
 * @method \Http\Promise\Promise executeActivityAsync($arguments = [])
 * @method \Dew\Acs\Result answerCall(array $arguments = [])
 * @method \Http\Promise\Promise answerCallAsync($arguments = [])
 * @method \Dew\Acs\Result appMessagePush(array $arguments = [])
 * @method \Http\Promise\Promise appMessagePushAsync($arguments = [])
 * @method \Dew\Acs\Result changeChatAgentStatus(array $arguments = [])
 * @method \Http\Promise\Promise changeChatAgentStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createCustomer(array $arguments = [])
 * @method \Http\Promise\Promise createCustomerAsync($arguments = [])
 * @method \Dew\Acs\Result createEntityIvrRoute(array $arguments = [])
 * @method \Http\Promise\Promise createEntityIvrRouteAsync($arguments = [])
 * @method \Dew\Acs\Result createSkillGroup(array $arguments = [])
 * @method \Http\Promise\Promise createSkillGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createSubTicket(array $arguments = [])
 * @method \Http\Promise\Promise createSubTicketAsync($arguments = [])
 * @method \Dew\Acs\Result createThirdSsoAgent(array $arguments = [])
 * @method \Http\Promise\Promise createThirdSsoAgentAsync($arguments = [])
 * @method \Dew\Acs\Result createTicketWithBizData(array $arguments = [])
 * @method \Http\Promise\Promise createTicketWithBizDataAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEntityRoute(array $arguments = [])
 * @method \Http\Promise\Promise deleteEntityRouteAsync($arguments = [])
 * @method \Dew\Acs\Result editEntityRoute(array $arguments = [])
 * @method \Http\Promise\Promise editEntityRouteAsync($arguments = [])
 * @method \Dew\Acs\Result fetchCall(array $arguments = [])
 * @method \Http\Promise\Promise fetchCallAsync($arguments = [])
 * @method \Dew\Acs\Result generateWebSocketSign(array $arguments = [])
 * @method \Http\Promise\Promise generateWebSocketSignAsync($arguments = [])
 * @method \Dew\Acs\Result getAuthInfo(array $arguments = [])
 * @method \Http\Promise\Promise getAuthInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getByForeignId(array $arguments = [])
 * @method \Http\Promise\Promise getByForeignIdAsync($arguments = [])
 * @method \Dew\Acs\Result getCallsPerDay(array $arguments = [])
 * @method \Http\Promise\Promise getCallsPerDayAsync($arguments = [])
 * @method \Dew\Acs\Result getCMSIdByForeignId(array $arguments = [])
 * @method \Http\Promise\Promise getCMSIdByForeignIdAsync($arguments = [])
 * @method \Dew\Acs\Result getEntityRoute(array $arguments = [])
 * @method \Http\Promise\Promise getEntityRouteAsync($arguments = [])
 * @method \Dew\Acs\Result getEntityRouteList(array $arguments = [])
 * @method \Http\Promise\Promise getEntityRouteListAsync($arguments = [])
 * @method \Dew\Acs\Result getEntityTagRelation(array $arguments = [])
 * @method \Http\Promise\Promise getEntityTagRelationAsync($arguments = [])
 * @method \Dew\Acs\Result getGrantedRoleIds(array $arguments = [])
 * @method \Http\Promise\Promise getGrantedRoleIdsAsync($arguments = [])
 * @method \Dew\Acs\Result getNumLocation(array $arguments = [])
 * @method \Http\Promise\Promise getNumLocationAsync($arguments = [])
 * @method \Dew\Acs\Result getOutbounNumList(array $arguments = [])
 * @method \Http\Promise\Promise getOutbounNumListAsync($arguments = [])
 * @method \Dew\Acs\Result getTagList(array $arguments = [])
 * @method \Http\Promise\Promise getTagListAsync($arguments = [])
 * @method \Dew\Acs\Result getTicketByCaseId(array $arguments = [])
 * @method \Http\Promise\Promise getTicketByCaseIdAsync($arguments = [])
 * @method \Dew\Acs\Result getTicketTemplateSchema(array $arguments = [])
 * @method \Http\Promise\Promise getTicketTemplateSchemaAsync($arguments = [])
 * @method \Dew\Acs\Result getUserToken(array $arguments = [])
 * @method \Http\Promise\Promise getUserTokenAsync($arguments = [])
 * @method \Dew\Acs\Result grantRoles(array $arguments = [])
 * @method \Http\Promise\Promise grantRolesAsync($arguments = [])
 * @method \Dew\Acs\Result hangupCall(array $arguments = [])
 * @method \Http\Promise\Promise hangupCallAsync($arguments = [])
 * @method \Dew\Acs\Result hangupThirdCall(array $arguments = [])
 * @method \Http\Promise\Promise hangupThirdCallAsync($arguments = [])
 * @method \Dew\Acs\Result holdCall(array $arguments = [])
 * @method \Http\Promise\Promise holdCallAsync($arguments = [])
 * @method \Dew\Acs\Result joinThirdCall(array $arguments = [])
 * @method \Http\Promise\Promise joinThirdCallAsync($arguments = [])
 * @method \Dew\Acs\Result listSkillGroup(array $arguments = [])
 * @method \Http\Promise\Promise listSkillGroupAsync($arguments = [])
 * @method \Dew\Acs\Result queryRelationTickets(array $arguments = [])
 * @method \Http\Promise\Promise queryRelationTicketsAsync($arguments = [])
 * @method \Dew\Acs\Result queryRingDetailList(array $arguments = [])
 * @method \Http\Promise\Promise queryRingDetailListAsync($arguments = [])
 * @method \Dew\Acs\Result queryServiceConfig(array $arguments = [])
 * @method \Http\Promise\Promise queryServiceConfigAsync($arguments = [])
 * @method \Dew\Acs\Result querySkillGroups(array $arguments = [])
 * @method \Http\Promise\Promise querySkillGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result removeSkillGroup(array $arguments = [])
 * @method \Http\Promise\Promise removeSkillGroupAsync($arguments = [])
 * @method \Dew\Acs\Result sendOutboundCommand(array $arguments = [])
 * @method \Http\Promise\Promise sendOutboundCommandAsync($arguments = [])
 * @method \Dew\Acs\Result startCall(array $arguments = [])
 * @method \Http\Promise\Promise startCallAsync($arguments = [])
 * @method \Dew\Acs\Result startCallV2(array $arguments = [])
 * @method \Http\Promise\Promise startCallV2Async($arguments = [])
 * @method \Dew\Acs\Result startChatWork(array $arguments = [])
 * @method \Http\Promise\Promise startChatWorkAsync($arguments = [])
 * @method \Dew\Acs\Result updateCustomer(array $arguments = [])
 * @method \Http\Promise\Promise updateCustomerAsync($arguments = [])
 * @method \Dew\Acs\Result updateEntityTagRelation(array $arguments = [])
 * @method \Http\Promise\Promise updateEntityTagRelationAsync($arguments = [])
 * @method \Dew\Acs\Result updateRingStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateRingStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateRole(array $arguments = [])
 * @method \Http\Promise\Promise updateRoleAsync($arguments = [])
 * @method \Dew\Acs\Result updateSkillGroup(array $arguments = [])
 * @method \Http\Promise\Promise updateSkillGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listAllHotLineSkillGroups(array $arguments = [])
 * @method \Http\Promise\Promise listAllHotLineSkillGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result anwserAgentMonitor(array $arguments = [])
 * @method \Http\Promise\Promise anwserAgentMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result getForeignIdByCMSId(array $arguments = [])
 * @method \Http\Promise\Promise getForeignIdByCMSIdAsync($arguments = [])
 * @method \Dew\Acs\Result hangUpAgentMonitor(array $arguments = [])
 * @method \Http\Promise\Promise hangUpAgentMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result startAgentMonitor(array $arguments = [])
 * @method \Http\Promise\Promise startAgentMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result bindAgentHotlinePhone(array $arguments = [])
 * @method \Http\Promise\Promise bindAgentHotlinePhoneAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineAgentDetailWithChannel(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineAgentDetailWithChannelAsync($arguments = [])
 * @method \Dew\Acs\Result getAgentHotlinePhone(array $arguments = [])
 * @method \Http\Promise\Promise getAgentHotlinePhoneAsync($arguments = [])
 * @method \Dew\Acs\Result getAgentHotline(array $arguments = [])
 * @method \Http\Promise\Promise getAgentHotlineAsync($arguments = [])
 * @method \Dew\Acs\Result unbindAgentHotlinePhone(array $arguments = [])
 * @method \Http\Promise\Promise unbindAgentHotlinePhoneAsync($arguments = [])
 * @method \Dew\Acs\Result getAgentWorkStatus(array $arguments = [])
 * @method \Http\Promise\Promise getAgentWorkStatusAsync($arguments = [])
 * @method \Dew\Acs\Result sendVerificationCode(array $arguments = [])
 * @method \Http\Promise\Promise sendVerificationCodeAsync($arguments = [])
 * @method \Dew\Acs\Result startHotlineWork(array $arguments = [])
 * @method \Http\Promise\Promise startHotlineWorkAsync($arguments = [])
 * @method \Dew\Acs\Result finishHotlineServiceNew(array $arguments = [])
 * @method \Http\Promise\Promise finishHotlineServiceNewAsync($arguments = [])
 * @method \Dew\Acs\Result getOnlineTouchSessionList(array $arguments = [])
 * @method \Http\Promise\Promise getOnlineTouchSessionListAsync($arguments = [])
 */
final class ScspClient extends AcsClient
{
    //
}
