<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Vpc',
    'version' => '2016-04-28',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 78567,
      'title' => '专有网络（VPC）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVpc',
        1 => 'CreateDefaultVpc',
        2 => 'GrantInstanceToCen',
        3 => 'AssociateVpcCidrBlock',
        4 => 'AllocateVpcIpv6Cidr',
        5 => 'DeleteVpc',
        6 => 'RevokeInstanceFromCen',
        7 => 'UnassociateVpcCidrBlock',
        8 => 'ModifyVpcAttribute',
        9 => 'EnableVpcClassicLink',
        10 => 'DisableVpcClassicLink',
        11 => 'DeletionProtection',
        12 => 'DescribeVpcs',
        13 => 'DescribeVpcAttribute',
        14 => 'DescribeGrantRulesToCen',
      ),
    ),
    1 => 
    array (
      'id' => 78582,
      'title' => '路由器',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ModifyVRouterAttribute',
        1 => 'DescribeVRouters',
      ),
    ),
    2 => 
    array (
      'id' => 78605,
      'title' => ' 交换机',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListVSwitchCidrReservations',
        1 => 'CreateVSwitchCidrReservation',
        2 => 'GetVSwitchCidrReservationUsage',
        3 => 'ModifyVSwitchCidrReservationAttribute',
        4 => 'CreateVSwitch',
        5 => 'CreateDefaultVSwitch',
        6 => 'CheckCanAllocateVpcPrivateIpAddress',
        7 => 'DeleteVSwitch',
        8 => 'ModifyVSwitchAttribute',
        9 => 'DescribeVSwitches',
        10 => 'DescribeVSwitchAttributes',
        11 => 'DeleteVSwitchCidrReservation',
      ),
    ),
    3 => 
    array (
      'id' => 78549,
      'title' => '路由表',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateRouteEntry',
        1 => 'CreateRouteEntries',
        2 => 'CreateRouteTable',
        3 => 'AssociateRouteTable',
        4 => 'DeleteRouteEntry',
        5 => 'DeleteRouteEntries',
        6 => 'DeleteRouteTable',
        7 => 'UnassociateRouteTable',
        8 => 'ModifyRouteTableAttributes',
        9 => 'ModifyRouteEntry',
        10 => 'GetVpcRouteEntrySummary',
        11 => 'DescribeRouteTables',
        12 => 'DescribeRouteEntryList',
        13 => 'DescribeRouteTableList',
      ),
    ),
    4 => 
    array (
      'id' => 185113,
      'title' => '前缀列表',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVpcPrefixList',
        1 => 'RetryVpcPrefixListAssociation',
        2 => 'DeleteVpcPrefixList',
        3 => 'ModifyVpcPrefixList',
        4 => 'ListPrefixLists',
        5 => 'GetVpcPrefixListAssociations',
        6 => 'GetVpcPrefixListEntries',
      ),
    ),
    5 => 
    array (
      'id' => 78655,
      'title' => 'DHCP选项集',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateDhcpOptionsSet',
        1 => 'DeleteDhcpOptionsSet',
        2 => 'AttachDhcpOptionsSetToVpc',
        3 => 'DetachDhcpOptionsSetFromVpc',
        4 => 'ReplaceVpcDhcpOptionsSet',
        5 => 'UpdateDhcpOptionsSetAttribute',
        6 => 'GetDhcpOptionsSet',
        7 => 'ListDhcpOptionsSets',
      ),
    ),
    6 => 
    array (
      'id' => 78492,
      'title' => '流日志',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'OpenFlowLogService',
        1 => 'CreateFlowLog',
        2 => 'DeleteFlowLog',
        3 => 'ModifyFlowLogAttribute',
        4 => 'ActiveFlowLog',
        5 => 'DeactiveFlowLog',
        6 => 'GetFlowLogServiceStatus',
        7 => 'DescribeFlowLogs',
      ),
    ),
    7 => 
    array (
      'id' => 78422,
      'title' => '网络ACL',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AssociateNetworkAcl',
        1 => 'CreateNetworkAcl',
        2 => 'CopyNetworkAclEntries',
        3 => 'DeleteNetworkAcl',
        4 => 'UnassociateNetworkAcl',
        5 => 'ModifyNetworkAclAttributes',
        6 => 'UpdateNetworkAclEntries',
        7 => 'DescribeNetworkAclAttributes',
        8 => 'DescribeNetworkAcls',
      ),
    ),
    8 => 
    array (
      'id' => 78415,
      'title' => '高可用虚拟IP',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateHaVip',
        1 => 'AssociateHaVip',
        2 => 'DeleteHaVip',
        3 => 'UnassociateHaVip',
        4 => 'ModifyHaVipAttribute',
        5 => 'DescribeHaVips',
      ),
    ),
    9 => 
    array (
      'id' => 78730,
      'title' => '流量镜像',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 78731,
          'title' => '流量镜像过滤器规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTrafficMirrorFilterRules',
            1 => 'DeleteTrafficMirrorFilterRules',
            2 => 'UpdateTrafficMirrorFilterRuleAttribute',
          ),
        ),
        1 => 
        array (
          'id' => 78735,
          'title' => '流量镜像过滤器',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTrafficMirrorFilter',
            1 => 'DeleteTrafficMirrorFilter',
            2 => 'UpdateTrafficMirrorFilterAttribute',
            3 => 'ListTrafficMirrorFilters',
          ),
        ),
        2 => 
        array (
          'id' => 78740,
          'title' => '流量镜像会话',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddSourcesToTrafficMirrorSession',
            1 => 'CreateTrafficMirrorSession',
            2 => 'DeleteTrafficMirrorSession',
            3 => 'UpdateTrafficMirrorSessionAttribute',
            4 => 'ListTrafficMirrorSessions',
            5 => 'RemoveSourcesFromTrafficMirrorSession',
          ),
        ),
        3 => 'OpenTrafficMirrorService',
        4 => 'GetTrafficMirrorServiceStatus',
      ),
    ),
    10 => 
    array (
      'id' => 78505,
      'title' => '弹性公网IP',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreatePublicIpAddressPool',
        1 => 'AddPublicIpAddressPoolCidrBlock',
        2 => 'DeletePublicIpAddressPool',
        3 => 'DeletePublicIpAddressPoolCidrBlock',
        4 => 'ModifyEipAddressAttribute',
        5 => 'SetHighDefinitionMonitorLogStatus',
        6 => 'UpdatePublicIpAddressPoolAttribute',
        7 => 'DescribeEipAddresses',
        8 => 'DescribeEipSegment',
        9 => 'DescribeEipGatewayInfo',
        10 => 'DescribePublicIpAddress',
        11 => 'DescribeEipMonitorData',
        12 => 'DescribeHighDefinitionMonitorLogAttribute',
        13 => 'ListPublicIpAddressPools',
        14 => 'ListPublicIpAddressPoolCidrBlocks',
        15 => 'AllocateEipAddress',
        16 => 'AllocateEipAddressPro',
        17 => 'ReleaseEipAddress',
        18 => 'AllocateEipSegmentAddress',
        19 => 'ReleaseEipSegmentAddress',
        20 => 'AssociateEipAddress',
        21 => 'AssociateEipAddressBatch',
        22 => 'UnassociateEipAddress',
      ),
    ),
    11 => 
    array (
      'id' => 78525,
      'title' => '共享带宽',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCommonBandwidthPackage',
        1 => 'AddCommonBandwidthPackageIp',
        2 => 'AddCommonBandwidthPackageIps',
        3 => 'RemoveCommonBandwidthPackageIp',
        4 => 'DeleteCommonBandwidthPackage',
        5 => 'ModifyCommonBandwidthPackageAttribute',
        6 => 'ModifyCommonBandwidthPackageSpec',
        7 => 'DescribeCommonBandwidthPackages',
        8 => 'ModifyCommonBandwidthPackageIpBandwidth',
        9 => 'CancelCommonBandwidthPackageIpBandwidth',
        10 => 'Describe95Traffic',
      ),
    ),
    12 => 
    array (
      'id' => 78472,
      'title' => '物理专线',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 78563,
          'title' => '共享专线',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateVirtualPhysicalConnection',
            1 => 'UpdateVirtualPhysicalConnection',
            2 => 'ListVirtualPhysicalConnections',
          ),
        ),
        1 => 'OpenPhysicalConnectionService',
        2 => 'CreatePhysicalConnection',
        3 => 'ApplyPhysicalConnectionLOA',
        4 => 'SecondApplyPhysicalConnectionLOA',
        5 => 'CreatePhysicalConnectionSetupOrder',
        6 => 'CreatePhysicalConnectionOccupancyOrder',
        7 => 'CreateHighReliablePhysicalConnection',
        8 => 'CreateVpconnFromVbr',
        9 => 'DeletePhysicalConnection',
        10 => 'CancelPhysicalConnection',
        11 => 'ModifyPhysicalConnectionAttribute',
        12 => 'EnablePhysicalConnection',
        13 => 'TerminatePhysicalConnection',
        14 => 'RecoverPhysicalConnection',
        15 => 'AttachVbrToVpconn',
        16 => 'GetPhysicalConnectionServiceStatus',
        17 => 'DescribeAccessPoints',
        18 => 'ConfirmPhysicalConnection',
        19 => 'DescribePhysicalConnections',
        20 => 'CompletePhysicalConnectionLOA',
        21 => 'DescribePhysicalConnectionLOA',
        22 => 'ListGeographicSubRegions',
        23 => 'ListBusinessAccessPoints',
      ),
    ),
    13 => 
    array (
      'id' => 186880,
      'title' => '故障演练',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateFailoverTestJob',
        1 => 'StartFailoverTestJob',
        2 => 'StopFailoverTestJob',
        3 => 'UpdateFailoverTestJob',
        4 => 'DeleteFailoverTestJob',
        5 => 'DescribeFailoverTestJob',
        6 => 'DescribeFailoverTestJobs',
      ),
    ),
    14 => 
    array (
      'id' => 189661,
      'title' => 'QoS策略',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeExpressConnectTrafficQosRule',
        1 => 'DescribeExpressConnectTrafficQosQueue',
        2 => 'DescribeExpressConnectTrafficQos',
        3 => 'DeleteExpressConnectTrafficQosQueue',
        4 => 'DeleteExpressConnectTrafficQos',
        5 => 'DeleteExpressConnectTrafficQosRule',
        6 => 'ModifyExpressConnectTrafficQos',
        7 => 'ModifyExpressConnectTrafficQosQueue',
        8 => 'ModifyExpressConnectTrafficQosRule',
        9 => 'CreateExpressConnectTrafficQos',
        10 => 'CreateExpressConnectTrafficQosQueue',
        11 => 'CreateExpressConnectTrafficQosRule',
      ),
    ),
    15 => 
    array (
      'id' => 78592,
      'title' => '边界路由器',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 78726,
          'title' => 'VBR倒换组',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateVbrHa',
            1 => 'DeleteVbrHa',
            2 => 'DescribeVbrHa',
          ),
        ),
        1 => 'CreateVirtualBorderRouter',
        2 => 'AssociatePhysicalConnectionToVirtualBorderRouter',
        3 => 'DeleteVirtualBorderRouter',
        4 => 'UnassociatePhysicalConnectionFromVirtualBorderRouter',
        5 => 'UpdateVirtualBorderBandwidth',
        6 => 'ModifyVirtualBorderRouterAttribute',
        7 => 'TerminateVirtualBorderRouter',
        8 => 'RecoverVirtualBorderRouter',
        9 => 'DescribeVirtualBorderRouters',
        10 => 'DescribeVirtualBorderRoutersForPhysicalConnection',
      ),
    ),
    16 => 
    array (
      'id' => 78669,
      'title' => 'BGP',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddBgpNetwork',
        1 => 'CreateBgpGroup',
        2 => 'CreateBgpPeer',
        3 => 'DeleteBgpGroup',
        4 => 'DeleteBgpNetwork',
        5 => 'DeleteBgpPeer',
        6 => 'ModifyBgpGroupAttribute',
        7 => 'ModifyBgpPeerAttribute',
        8 => 'DescribeBgpGroups',
        9 => 'DescribeBgpNetworks',
        10 => 'DescribeBgpPeers',
      ),
    ),
    17 => 
    array (
      'id' => 78447,
      'title' => 'NAT',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 187842,
          'title' => 'Nat网关',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateNatGateway',
            1 => 'DeleteNatGateway',
            2 => 'ModifyNatGatewayAttribute',
            3 => 'ModifyNatGatewaySpec',
            4 => 'DescribeNatGateways',
            5 => 'VpcDescribeVpcNatGatewayNetworkInterfaceQuota',
            6 => 'GetNatGatewayAttribute',
            7 => 'ListEnhanhcedNatGatewayAvailableZones',
            8 => 'UpdateNatGatewayNatType',
            9 => 'ConvertBandwidthPackage',
            10 => 'EnableNatGatewayEcsMetric',
            11 => 'DisableNatGatewayEcsMetric',
          ),
        ),
        1 => 
        array (
          'id' => 78625,
          'title' => 'SNAT规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateSnatEntry',
            1 => 'DeleteSnatEntry',
            2 => 'ModifySnatEntry',
            3 => 'DescribeSnatTableEntries',
          ),
        ),
        2 => 
        array (
          'id' => 78620,
          'title' => 'DNAT规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateForwardEntry',
            1 => 'DeleteForwardEntry',
            2 => 'ModifyForwardEntry',
            3 => 'DescribeForwardTableEntries',
          ),
        ),
        3 => 
        array (
          'id' => 78664,
          'title' => 'FullNAT规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateFullNatEntry',
            1 => 'DeleteFullNatEntry',
            2 => 'ModifyFullNatEntryAttribute',
            3 => 'ListFullNatEntries',
          ),
        ),
        4 => 
        array (
          'id' => 187843,
          'title' => 'NatIp管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 
            array (
              'id' => 78716,
              'title' => 'NatIp',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateNatIp',
                1 => 'DeleteNatIp',
                2 => 'ModifyNatIpAttribute',
                3 => 'ListNatIps',
              ),
            ),
            1 => 
            array (
              'id' => 78717,
              'title' => 'NatIpCidr',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateNatIpCidr',
                1 => 'DeleteNatIpCidr',
                2 => 'ModifyNatIpCidrAttribute',
                3 => 'ListNatIpCidrs',
              ),
            ),
          ),
        ),
      ),
    ),
    18 => 
    array (
      'id' => 185179,
      'title' => 'IPv4网关',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateIpv4Gateway',
        1 => 'DeleteIpv4Gateway',
        2 => 'EnableVpcIpv4Gateway',
        3 => 'UpdateIpv4GatewayAttribute',
        4 => 'UpdateGatewayRouteTableEntryAttribute',
        5 => 'ListIpv4Gateways',
        6 => 'GetIpv4GatewayAttribute',
        7 => 'ListGatewayRouteTableEntries',
        8 => 'AssociateRouteTableWithGateway',
        9 => 'DissociateRouteTableFromGateway',
      ),
    ),
    19 => 
    array (
      'id' => 78439,
      'title' => 'VPN网关',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVpnGateway',
        1 => 'AssociateVpnGatewayWithCertificate',
        2 => 'DeleteVpnGateway',
        3 => 'DissociateVpnGatewayWithCertificate',
        4 => 'ModifyVpnGatewayAttribute',
        5 => 'MoveVpnResourceGroup',
        6 => 'DescribeVpnGateway',
        7 => 'DescribeVpnGateways',
        8 => 'ListVpnCertificateAssociations',
        9 => 'DiagnoseVpnGateway',
        10 => 'GetVpnGatewayDiagnoseResult',
        11 => 'DescribeVpnGatewayAvailableZones',
      ),
    ),
    20 => 
    array (
      'id' => 78460,
      'title' => '用户网关',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCustomerGateway',
        1 => 'DeleteCustomerGateway',
        2 => 'ModifyCustomerGatewayAttribute',
        3 => 'DescribeCustomerGateway',
        4 => 'DescribeCustomerGateways',
      ),
    ),
    21 => 
    array (
      'id' => 78681,
      'title' => '绑定VPN网关实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVpnConnection',
        1 => 'DeleteVpnConnection',
        2 => 'ModifyVpnConnectionAttribute',
        3 => 'ModifyTunnelAttribute',
        4 => 'DescribeVpnConnection',
        5 => 'DescribeVpnConnections',
        6 => 'DownloadVpnConnectionConfig',
        7 => 'DescribeVpnConnectionLogs',
        8 => 'DiagnoseVpnConnections',
        9 => 
        array (
          'id' => 78648,
          'title' => '目的路由',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateVpnRouteEntry',
            1 => 'PublishVpnRouteEntry',
            2 => 'DeleteVpnRouteEntry',
            3 => 'ModifyVpnRouteEntryWeight',
            4 => 'DescribeVpnRouteEntries',
          ),
        ),
        10 => 
        array (
          'id' => 78643,
          'title' => '策略路由',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateVpnPbrRouteEntry',
            1 => 'DeleteVpnPbrRouteEntry',
            2 => 'ModifyVpnPbrRouteEntryWeight',
            3 => 'ModifyVpnPbrRouteEntryPriority',
            4 => 'ModifyVpnPbrRouteEntryAttribute',
            5 => 'DescribeVpnPbrRouteEntries',
          ),
        ),
      ),
    ),
    22 => 
    array (
      'id' => 184668,
      'title' => '绑定转发路由器实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVpnAttachment',
        1 => 'CreateVcoRouteEntry',
        2 => 'DeleteVpnAttachment',
        3 => 'DeleteVcoRouteEntry',
        4 => 'ModifyVpnAttachmentAttribute',
        5 => 'ModifyVcoRouteEntryWeight',
        6 => 'DescribeVpnAttachments',
        7 => 'DescribeVcoRouteEntries',
        8 => 'CheckVpnBgpEnabled',
        9 => 'DescribeVpnCrossAccountAuthorizations',
      ),
    ),
    23 => 
    array (
      'id' => 78637,
      'title' => 'SSL客户端',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSslVpnClientCert',
        1 => 'DeleteSslVpnClientCert',
        2 => 'ModifySslVpnClientCert',
        3 => 'DescribeSslVpnClientCerts',
        4 => 'DescribeSslVpnClientCert',
        5 => 'DescribeSslVpnClients',
      ),
    ),
    24 => 
    array (
      'id' => 78631,
      'title' => 'SSL服务端',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSslVpnServer',
        1 => 'DeleteSslVpnServer',
        2 => 'ModifySslVpnServer',
        3 => 'DescribeSslVpnServers',
        4 => 'DescribeVpnSslServerLogs',
      ),
    ),
    25 => 
    array (
      'id' => 184659,
      'title' => 'IPsec服务端',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateIpsecServer',
        1 => 'DeleteIpsecServer',
        2 => 'UpdateIpsecServer',
        3 => 'ListIpsecServers',
        4 => 'ListIpsecServerLogs',
      ),
    ),
    26 => 
    array (
      'id' => 78692,
      'title' => 'IPv6网关',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AllocateIpv6Address',
        1 => 'ReleaseIpv6Address',
        2 => 'CreateIpv6Gateway',
        3 => 'CreateIpv6EgressOnlyRule',
        4 => 'DeleteIpv6Gateway',
        5 => 'DeleteIpv6EgressOnlyRule',
        6 => 'DeleteIpv6InternetBandwidth',
        7 => 'ModifyIpv6InternetBandwidth',
        8 => 'ModifyIpv6GatewayAttribute',
        9 => 'ModifyIpv6AddressAttribute',
        10 => 'DescribeIpv6Gateways',
        11 => 'DescribeIpv6EgressOnlyRules',
        12 => 'DescribeIpv6Addresses',
        13 => 'DescribeIpv6GatewayAttribute',
        14 => 'AllocateIpv6InternetBandwidth',
      ),
    ),
    27 => 
    array (
      'id' => 185180,
      'title' => 'IPv6转换服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateIPv6TranslatorAclList',
        1 => 'CreateIPv6TranslatorEntry',
        2 => 'AddIPv6TranslatorAclListEntry',
        3 => 'CreateIPv6Translator',
        4 => 'DeleteIPv6TranslatorAclList',
        5 => 'DeleteIPv6TranslatorEntry',
        6 => 'DeleteIPv6Translator',
        7 => 'ModifyIPv6TranslatorAclListEntry',
        8 => 'ModifyIPv6TranslatorAclAttribute',
        9 => 'ModifyIPv6TranslatorBandwidth',
        10 => 'ModifyIPv6TranslatorAttribute',
        11 => 'ModifyIPv6TranslatorEntry',
        12 => 'DescribeIPv6TranslatorAclLists',
        13 => 'DescribeIPv6TranslatorAclListAttributes',
        14 => 'DescribeIPv6Translators',
        15 => 'DescribeIPv6TranslatorEntries',
        16 => 'RemoveIPv6TranslatorAclListEntry',
      ),
    ),
    28 => 
    array (
      'id' => 78391,
      'title' => '地域',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeRegions',
        1 => 'DescribeZones',
      ),
    ),
    29 => 
    array (
      'id' => 78385,
      'title' => '标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'TagResources',
        1 => 'TagResourcesForExpressConnect',
        2 => 'UnTagResources',
        3 => 'UntagResourcesForExpressConnect',
        4 => 'ListTagResources',
        5 => 'DescribeTags',
        6 => 'DescribeTagKeys',
        7 => 'ListTagResourcesForExpressConnect',
        8 => 'DescribeTagKeysForExpressConnect',
      ),
    ),
    30 => 
    array (
      'id' => 78583,
      'title' => '路由器接口',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateRouterInterface',
        1 => 'DeleteRouterInterface',
        2 => 'ModifyRouterInterfaceAttribute',
        3 => 'ModifyRouterInterfaceSpec',
        4 => 'DescribeRouterInterfaces',
        5 => 'DescribeEcGrantRelation',
        6 => 'DescribeRouterInterfaceAttribute',
        7 => 'DeactivateRouterInterface',
        8 => 'GrantInstanceToVbr',
        9 => 'ActivateRouterInterface',
        10 => 'RevokeInstanceFromVbr',
        11 => 'ConnectRouterInterface',
      ),
    ),
    31 => 
    array (
      'id' => 78466,
      'title' => '高速上云服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateExpressCloudConnection',
        1 => 'ModifyExpressCloudConnectionAttribute',
        2 => 'ModifyExpressCloudConnectionBandwidth',
      ),
    ),
    32 => 
    array (
      'id' => 78394,
      'title' => '全球加速实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateGlobalAccelerationInstance',
        1 => 'AddGlobalAccelerationInstanceIp',
        2 => 'DeleteGlobalAccelerationInstance',
        3 => 'UnassociateGlobalAccelerationInstance',
        4 => 'ModifyGlobalAccelerationInstanceAttributes',
        5 => 'ModifyGlobalAccelerationInstanceSpec',
        6 => 'DescribeGlobalAccelerationInstances',
        7 => 'DescribeServerRelatedGlobalAccelerationInstances',
        8 => 'RemoveGlobalAccelerationInstanceIp',
      ),
    ),
    33 => 
    array (
      'id' => 78499,
      'title' => '网关终端节点',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVpcGatewayEndpoint',
        1 => 'DeleteVpcGatewayEndpoint',
        2 => 'UpdateVpcGatewayEndpointAttribute',
        3 => 'ListVpcEndpointServicesByEndUser',
        4 => 'GetVpcGatewayEndpointAttribute',
        5 => 'ListVpcGatewayEndpoints',
        6 => 'AssociateRouteTablesWithVpcGatewayEndpoint',
        7 => 'DissociateRouteTablesFromVpcGatewayEndpoint',
      ),
    ),
    34 => 
    array (
      'id' => 185233,
      'title' => '资源组',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'MoveResourceGroup',
        1 => 'ChangeResourceGroup',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'CreateVpc' => 
    array (
      'summary' => '创建一个专有网络VPC。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的网段。

- 建议您使用192.168.0.0/16、172.16.0.0/12、10.0.0.0/8三个RFC标准私网网段及其子网作为专有网络的主IPv4网段，网段掩码有效范围为8~28位。
- 您也可以使用除100.64.0.0/10、224.0.0.0/4、127.0.0.0/8或169.254.0.0/16及其子网外的自定义地址段作为专有网络的主IPv4网段。  ',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.0/12',
            'default' => '172.16.0.0/12',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6网段。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:0:6a::/56',
          ),
        ),
        3 => 
        array (
          'name' => 'VpcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的名称。

长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        4 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启IPv6网段。取值：

- **false**（默认值）：不开启。
- **true**：开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的描述信息。

长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my first Vpc',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        8 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建VPC。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接创建VPC。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'UserCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网段，如需定义多个网段请使用半角逗号（,）隔开，最多支持3个网段。

关于用户网段的详细信息，请参见[专有网络FAQ](~~185311~~)的`什么是用户网段`。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.0/12',
          ),
        ),
        10 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        11 => 
        array (
          'name' => 'Ipv6Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6地址段类型。取值：

- **BGP**（默认值）：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。

> 如果是开通了单线带宽白名单的用户，该字段可以设置为**ChinaTelecom**（中国电信）、**ChinaUnicom**（中国联通）或**ChinaMobile**（中国移动）。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        12 => 
        array (
          'name' => 'Ipv4IpamPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv4类型的IPAM地址池实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipam-pool-sycmt3p2a9v63i****',
          ),
        ),
        13 => 
        array (
          'name' => 'Ipv4CidrMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过输入掩码的方式从IPAM地址池分配VPC。

> 指定IPAM地址池创建VPC时，参数CidrBlock或Ipv4CidrMask至少输入一个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建的VPC的ID。',
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => '创建的VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-bp15zckdt37pq72zv****',
              ),
              'VRouterId' => 
              array (
                'description' => '创建VPC后，系统自动创建的路由器的ID。',
                'type' => 'string',
                'example' => 'vrt-bp1lhl0taikrteen8****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'RouteTableId' => 
              array (
                'description' => '创建VPC后，系统自动创建的路由表的ID。',
                'type' => 'string',
                'example' => 'vtb-bp145q7glnuzdv****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph6aiy****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'TOKEN_PROCESSING',
            'errorMessage' => 'Action is processing.',
          ),
          1 => 
          array (
            'errorCode' => 'InvokeError',
            'errorMessage' => 'instance quota rule invoke error.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified CIDR block is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotAvailable',
            'errorMessage' => 'Resource you requested is not available in this region or zone.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVpcName.Malformed',
            'errorMessage' => 'Specified VPC name is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidVpcDiscription.Malformed',
            'errorMessage' => 'Specified VPC description is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Vpc',
            'errorMessage' => 'VPC quota exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotAvailable.Vpc',
            'errorMessage' => 'Resource you requested is not available in this region or zone.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidUserCidr.Quota',
            'errorMessage' => 'Specified  UserCidr number is greater than 3.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidUserCidr.Malformed',
            'errorMessage' => 'Specified  UserCidr  overlapping in of 100.64.0.0/10.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6CidrBlock',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.IPv6CidrNotReserved',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'MissingParam.EnableIpv6',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6Feature',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'System.ServiceBusy',
            'errorMessage' => 'System is busy, please try later.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.UserCidr',
            'errorMessage' => 'UserCidr is not a valid or strict address.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationUnsupported.ResourceGroupId',
            'errorMessage' => 'ResourceGroup is not supported in this region.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.EnableIpv6',
            'errorMessage' => '%s',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidIpv6CidrBlock.Malformed',
            'errorMessage' => 'Specified Ipv6CidrBlock is not valid.',
          ),
          20 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv6Isp',
            'errorMessage' => 'The Ipv6Isp feature is not supported.',
          ),
          21 => 
          array (
            'errorCode' => 'ResourceNotEnough.Ipv6Cidr',
            'errorMessage' => 'The specified resource of Ipv6Cidr is not enough.',
          ),
          22 => 
          array (
            'errorCode' => 'UnsupportedFeature.IPAM',
            'errorMessage' => 'VPCs cannot be created by using IPAM.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.Ipv4CidrMask',
            'errorMessage' => 'The specified Ipv4CidrMask is illegal.',
          ),
          24 => 
          array (
            'errorCode' => 'IllegalParam.IpamPool',
            'errorMessage' => 'The specified IPAM pool cannot be empty.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationDenied.RequestRegionInvalid',
            'errorMessage' => 'The operation is not allowed because the request is not invoked in the region of the IPAM pool.',
          ),
          26 => 
          array (
            'errorCode' => 'OperationDenied.IpamPoolNotInRegion',
            'errorMessage' => 'The operation is not allowed because the IPAM pool not in specific region does not support creating VPC or associating CIDR for VPC.',
          ),
          27 => 
          array (
            'errorCode' => 'MissingParam.CidrOrCidrMask',
            'errorMessage' => 'The CIDR or CIDR Mask must be input.',
          ),
          28 => 
          array (
            'errorCode' => 'OperationDenied.CidrInExcludeCidrs',
            'errorMessage' => 'The operation is not allowed because the input CIDR is within the illegal CIDRs.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationDenied.AvailableCidrInsufficient',
            'errorMessage' => 'The operation is not allowed because available CIDR is insufficient.',
          ),
          30 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipam',
            'errorMessage' => 'IPAM is not supported in this region.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.IpamPool',
            'errorMessage' => 'The dependent IPAM pool is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpcId\\": \\"vpc-bp15zckdt37pq72zv****\\",\\n  \\"VRouterId\\": \\"vrt-bp1lhl0taikrteen8****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"RouteTableId\\": \\"vtb-bp145q7glnuzdv****\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVpcResponse>\\n    <VpcId>vpc-bp15zckdt37pq72zv****</VpcId>\\n    <VRouterId>vrt-bp1lhl0taikrteen8****</VRouterId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <RouteTableId>vtb-bp145q7glnuzdv****</RouteTableId>\\n    <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n</CreateVpcResponse>","errorExample":""}]',
      'title' => '创建一个VPC',
      'description' => '调用该接口创建VPC时，请注意：

- 一个VPC只能指定一个网段。

- VPC创建后无法修改网段，但可以添加附加IPv4网段。  

- 每个VPC支持云资源使用的私网网络地址数量为300,000个，且无法提升配额。
  
- 创建VPC后，会自动创建一个路由器和一个路由表。
  
- 每个VPC支持三个用户侧网段。如果多个用户侧网段之间存在包含关系，掩码较短的网段实际生效。例如10.0.0.0/8和10.1.0.0/16中，10.0.0.0/8实际生效。  

- **CreateVpc**接口属于异步接口，即系统会返回一个实例ID，但该VPC尚未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeVpcAttribute](~~94565~~)查询VPC的创建状态：
    - 当VPC处于**Creating**状态时，表示VPC正在创建中。
    - 当VPC处于**Created**状态时，表示VPC创建完成。
- **CreateVpc**接口不支持在同一地域内并发创建默认VPC，但支持在同一地域内并发创建非默认VPC。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDefaultVpc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '默认VPC所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '默认VPC的IPv6网段。

> 当**EnableIpv6**取值为**true**时，需要输入该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:346:b600::/56',
          ),
        ),
        2 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启IPv6网段。取值：

- **false**（默认值）：不开启。
- **true**：开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmystnjq4****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建的默认VPC的ID。',
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => '创建的默认VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-bp15zckdt37pq72zv****',
              ),
              'VRouterId' => 
              array (
                'description' => '创建默认VPC后，系统自动创建的路由器的ID。',
                'type' => 'string',
                'example' => 'vrt-bp1lhl0taikrteen8****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'RouteTableId' => 
              array (
                'description' => '创建默认VPC后，系统自动创建的路由表的ID。',
                'type' => 'string',
                'example' => 'vtb-bp1q1uirugzb1x32m****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'TOKEN_PROCESSING',
            'errorMessage' => 'Action is processing.',
          ),
          1 => 
          array (
            'errorCode' => 'InvokeError',
            'errorMessage' => 'instance quota rule invoke error.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified CIDR block is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotAvailable',
            'errorMessage' => 'Resource you requested is not available in this region or zone.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVpcName.Malformed',
            'errorMessage' => 'Specified VPC name is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidVpcDiscription.Malformed',
            'errorMessage' => 'Specified VPC description is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Vpc',
            'errorMessage' => 'VPC quota exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotAvailable.Vpc',
            'errorMessage' => 'Resource you requested is not available in this region or zone.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidUserCidr.Quota',
            'errorMessage' => 'Specified  UserCidr number is greater than 3.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidUserCidr.Malformed',
            'errorMessage' => 'Specified  UserCidr  overlapping in of 100.64.0.0/10.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6CidrBlock',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.IPv6CidrNotReserved',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'MissingParam.EnableIpv6',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6Feature',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.ZoneId',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.DefaultVpcExist',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"VpcId\\": \\"vpc-bp15zckdt37pq72zv****\\",\\n  \\"VRouterId\\": \\"vrt-bp1lhl0taikrteen8****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"RouteTableId\\": \\"vtb-bp1q1uirugzb1x32m****\\"\\n}","type":"json"}]',
      'title' => '创建一个默认的VPC',
      'summary' => '调用CreateDefaultVpc接口创建一个默认的专有网络VPC。',
      'description' => '调用该接口创建默认VPC时，请注意：

- 默认VPC创建后无法修改网段，但可以添加附加IPv4网段。  

- 每个默认VPC支持云资源使用的私网网络地址数量为300,000个，且无法提升配额。
  
- 创建默认VPC后，会自动创建一个路由器和一个路由表。
  
- 每个默认VPC支持三个用户侧网段。如果多个用户侧网段之间存在包含关系，掩码较短的网段实际生效。例如10.0.0.0/8和10.1.0.0/16中，10.0.0.0/8实际生效。

- **CreateDefaultVpc**接口属于异步接口，即系统会返回一个实例ID，但该默认VPC尚未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeVpcAttribute](~~94565~~)查询默认VPC的创建状态：
    - 当默认VPC处于**Pending**状态时，表示默认VPC正在配置中。
    - 当默认VPC处于**Available**状态时，表示默认VPC可用。
- **CreateDefaultVpc**接口不支持在同一地域内并发创建默认VPC。
- 一个地域当前只能有一个默认VPC。',
    ),
    'GrantInstanceToCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-uf6o8d1dj8sjwxi6o****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络。

- **VBR**：边界路由器。',
            'type' => 'string',
            'required' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要授权的云企业网实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        4 => 
        array (
          'name' => 'CenOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要授权的云企业网实例所属账号的UID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456789',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'Current Instance status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.CenInstanceId',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CenInstanceId',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'Invalid.Grant',
            'errorMessage' => 'Can not grant to other owner cen.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'Specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceType.Invalid',
            'errorMessage' => 'Specified type is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.CbnGrantRules',
            'errorMessage' => 'cbn grantRules per instance quota exceed',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbr.NotFound',
            'errorMessage' => 'Specified vbr does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<GrantInstanceToCenResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</GrantInstanceToCenResponse>","errorExample":""}]',
      'title' => '为云企业网实例授权',
      'summary' => '调用GrantInstanceToCen为云企业网实例授权。',
      'description' => '- 在加载其他阿里云账号（主账号）的网络实例前，需要在网络实例所在的阿里云账号下为云企业网实例授权。

>**GrantInstanceToCen**接口是VPC的API，所以调用该接口需要使用`vpc.aliyuncs.com`域名。API version为`2016-04-28`。 

- **GrantInstanceToCen**接口不支持在同一个VPC、VBR或者CCN中并发为云企业网实例授权。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateVpcCidrBlock' => 
    array (
      'summary' => '为VPC添加IPv4附加网段。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要添加附加网段的VPC所在地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ch-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要添加附加网段的VPC的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-o6wrloqsdqc9io3mg****',
          ),
        ),
        2 => 
        array (
          'name' => 'SecondaryCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要添加的附加IPv4网段，网段要求如下：

- 使用192.168.0.0/16、172.16.0.0/12和10.0.0.0/8三个标准网段及其子网作为VPC的附加IPv4网段。
- 使用除100.64.0.0/10、224.0.0.0/4、127.0.0.0/8、169.254.0.0/16及其子网外的自定义地址段作为专有网络的附加IPv4网段。

配置限制如下：
- 不能以0开头，掩码长度有效范围为8~28位。

- 附加网段不得与VPC主网段及已添加的附加网段重叠。

> 不通过IPAM地址池为VPC添加附加网段时，参数**SecondaryCidrBlock**和参数**Ipv6CidrBlock**必须输入一个且不能都输入。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.0/16',
          ),
        ),
        3 => 
        array (
          'name' => 'SecondaryCidrMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过输入掩码的方式从IPAM地址池为VPC添加附加网段。

> 指定IPAM地址池为VPC添加附加网段，参数SecondaryCidrBlock或SecondaryCidrMask至少输入一个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '16',
          ),
        ),
        4 => 
        array (
          'name' => 'IPv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的指定IPv6网段。

> 参数**SecondaryCidrBlock**和参数**Ipv6CidrBlock**必须输入一个且不能都输入。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:0:6a::/56',
          ),
        ),
        5 => 
        array (
          'name' => 'Ipv6Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6地址段类型，取值：

- **BGP**（默认值）：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。

> 如果是开通了单线带宽白名单的用户，该字段可以设置为**ChinaTelecom**（中国电信）、**ChinaUnicom**（中国联通）和**ChinaMobile**（中国移动）。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        6 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址的版本类型。取值：

- **IPV4**：IPv4地址。
- **IPV6**：IPv6地址，当**IpVersion**参数输入**IPV6**，**SecondaryCidrBlock**参数不传值时可以为VPC添加附加IPv6网段。
',
            'type' => 'string',
            'required' => false,
            'example' => 'IPV4',
          ),
        ),
        7 => 
        array (
          'name' => 'IpamPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv4类型的IPAM地址池实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipam-pool-sycmt3p2a9v63i****',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要添加附加网段的VPC所在地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ch-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C1221A1F-2ACD-4592-8F27-474E02883159',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpc.NotFound',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'ParamExclusive.SecondaryCidrAndIpv6Cidr',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.VpcMultiCidr',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.SecondaryCidrOrIpv6Cidr',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.IPv6ULA',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6CidrBlockExisted',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidIpv6ULACidrBlock.Malformed',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaExceeded.GUAIpv6CidrBlock',
            'errorMessage' => '%s',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6CidrType',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'OperationUnsupported.OnlyULA',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.SecondaryCidrBlock',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'Duplicated.SecondaryCidrBlock',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.ConflictWithEntry',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.VpcMultiCidr',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'MissingParam.SecondaryCidrBlockOrIpv6CidrBlock',
            'errorMessage' => 'Either SecondaryCidrBlock or Ipv6CidrBlock must be specified.',
          ),
          17 => 
          array (
            'errorCode' => 'MissingParam.VpcId',
            'errorMessage' => 'You must specify VpcId.',
          ),
          18 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv6Isp',
            'errorMessage' => 'The Ipv6Isp feature is not supported.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.IpVersion',
            'errorMessage' => '%s',
          ),
          20 => 
          array (
            'errorCode' => 'OperationDenied.GUAIpv6CidrBlock',
            'errorMessage' => 'The operation is not allowed because this ipv6 CIDR is not reserved.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.IPv6CidrNotReserved',
            'errorMessage' => 'Operation failed because this ipv6 cidr is not reserved.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidCidrBlock',
            'errorMessage' => 'Specified CIDR block is already exists.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.IpamPool',
            'errorMessage' => 'The specified IPAM pool cannot be empty.',
          ),
          24 => 
          array (
            'errorCode' => 'MissingParam.SecondaryCidrMask',
            'errorMessage' => 'The parameter SecondaryCidrMask must be input.',
          ),
          25 => 
          array (
            'errorCode' => 'IllegalParam.SecondaryCidrMask',
            'errorMessage' => 'The specified Secondary CIDR Mask is illegal.',
          ),
          26 => 
          array (
            'errorCode' => 'OperationDenied.RequestRegionInvalid',
            'errorMessage' => 'The operation is not allowed because the request is not invoked in the region of the IPAM pool.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationDenied.IpamPoolNotInRegion',
            'errorMessage' => 'The operation is not allowed because the IPAM pool not in specific region does not support creating VPC or associating CIDR for VPC.',
          ),
          28 => 
          array (
            'errorCode' => 'MissingParam.CidrOrCidrMask',
            'errorMessage' => 'The CIDR or CIDR Mask must be input.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationDenied.CidrInExcludeCidrs',
            'errorMessage' => 'The operation is not allowed because the input CIDR is within the illegal CIDRs.',
          ),
          30 => 
          array (
            'errorCode' => 'OperationDenied.AvailableCidrInsufficient',
            'errorMessage' => 'The operation is not allowed because available CIDR is insufficient.',
          ),
          31 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipam',
            'errorMessage' => 'IPAM is not supported in this region.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.IpamPool',
            'errorMessage' => 'The dependent IPAM pool is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ResourceNotEnough',
            'errorMessage' => 'Insufficient resources.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C1221A1F-2ACD-4592-8F27-474E02883159\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateVpcCidrBlockResponse>\\n    <RequestId>C1221A1F-2ACD-4592-8F27-474E02883159</RequestId>\\n</AssociateVpcCidrBlockResponse>","errorExample":""}]',
      'title' => '为VPC添加附加IPv4网段',
      'description' => '- 一个VPC最多支持添加的附加网段个数如下：
    - 一个VPC最多支持添加5个附加IPv4网段。
    - 一个VPC最多支持添加5个附加IPv6网段。

- **AssociateVpcCidrBlock**接口不支持并发为同一个VPC添加附加网段。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AllocateVpcIpv6Cidr' => 
    array (
      'summary' => '预留指定的IPv6地址段。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6地址段类型，取值：

- **BGP**（默认值）：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。

> - 如果是开通了单线带宽白名单的用户，该字段可以设置为**ChinaTelecom**（中国电信）、**ChinaUnicom**（中国联通）和**ChinaMobile**（中国移动）。
- 每种类型的IPv6地址段只能预留一个，只有在分配给VPC后，才可以预留下一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'AddressPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址池的类型，取值如下：
- **aliyun**（默认值）：系统分配IPv6地址段。
- **custom**：用户自定义IPv6地址段。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
        5 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要预留的IPv6地址段。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:0:a600::/56',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6CidrBlock' => 
              array (
                'description' => '预留的IPv6地址段。',
                'type' => 'string',
                'example' => '2408:XXXX:0:a600::/56',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D20C13EA-2584-53BC-8393-69DE6D98EFF1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6Feature',
            'errorMessage' => 'The IPv6 feature is not supported in the region.',
          ),
          1 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv6Isp',
            'errorMessage' => 'The Ipv6Isp feature is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.AddressPoolType',
            'errorMessage' => 'The specified addressPoolType is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotEnough.Ipv6Cidr',
            'errorMessage' => 'The specified resource ipv6 cidr is not enough.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6Cidr',
            'errorMessage' => 'The specified Ipv6CidrBlock is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Unavailable.Ipv6Cidr',
            'errorMessage' => 'The specified resource ipv6 cidr is not available.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:a600::/56\\",\\n  \\"RequestId\\": \\"D20C13EA-2584-53BC-8393-69DE6D98EFF1\\"\\n}","errorExample":""},{"type":"xml","example":"<AllocateVpcIpv6CidrResponse>\\n    <Ipv6CidrBlock>2408:XXXX:0:a600::/56</Ipv6CidrBlock>\\n    <RequestId>D20C13EA-2584-53BC-8393-69DE6D98EFF1</RequestId>\\n</AllocateVpcIpv6CidrResponse>","errorExample":""}]',
      'title' => '预留指定的IPv6地址段',
      'description' => '为VPC分配指定IPv6地址段的流程如下：
1. 调用本接口预留指定的IPv6地址段。
2. 为存量VPC分配指定的IPv6地址段时，请调用[AssociateVpcCidrBlock](~~146745~~)接口，设置**RegionId**、**VpcId**、**IPv6CidrBlock**为指定的IPv6地址段，**IpVersion**为**ipv6**；为新建VPC分配指定的IPv6地址段时，请调用[CreateVpc](~~35737~~)接口，设置**RegionId**、**Ipv6CidrBlock**为指定的IPv6地址段、**EnableIpv6**为**true**。',
    ),
    'DeleteVpc' => 
    array (
      'summary' => '调用DeleteVpc接口删除一个专有网络VPC（Virtual Private Cloud）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的VPC ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1m7v25emi1h5mtc****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的VPC所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'ForceDelete',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除VPC。取值：

- **true**：强制删除。
- **false**（默认值）：不强制删除。

当VPC下仅存在以下资源时可强制删除VPC：
- 该VPC下仅存在IPv4网关及指向IPv4网关的路由。
- 该VPC下仅存在IPv6网关及指向IPv6网关的路由。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会删除专有网络VPC。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行删除。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcDhcpStatus',
            'errorMessage' => 'The DhcpOptionsSet status of vpc  does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.GatewayEndpoint',
            'errorMessage' => 'The VPC contains endpoints and cannot be deleted.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.RouteEntry',
            'errorMessage' => 'Specified object has dependent resources',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.Instance',
            'errorMessage' => 'Specified object has dependent resources',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.VSwitch',
            'errorMessage' => 'Specified object has dependent resources',
          ),
          6 => 
          array (
            'errorCode' => 'DependencyViolation.SecurityGroup',
            'errorMessage' => 'Specified object has dependent resources SecurityGroup.',
          ),
          7 => 
          array (
            'errorCode' => 'DependencyViolation.RouteInterface',
            'errorMessage' => 'Specified object has dependent route interface .',
          ),
          8 => 
          array (
            'errorCode' => 'DependencyViolation.Tunnel',
            'errorMessage' => 'Specified object has dependent tunnel.',
          ),
          9 => 
          array (
            'errorCode' => 'DependencyViolation.NatGateway',
            'errorMessage' => 'Specified object has dependent resources NatGateway.',
          ),
          10 => 
          array (
            'errorCode' => 'DependencyViolation.RouterInterface',
            'errorMessage' => 'Specified object has dependent resources RouterInterface.',
          ),
          11 => 
          array (
            'errorCode' => 'Forbidden.VpcNotFound',
            'errorMessage' => 'Specified VPC can not found.',
          ),
          12 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'Active custom route in vpc.',
          ),
          13 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The eip operate too frequent, TaskConflict.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidAction',
            'errorMessage' => 'The VPC has been connected to the classic network ECS. Please cancel the connection before proceeding.',
          ),
          15 => 
          array (
            'errorCode' => 'DependencyViolation.Ipv6Gateway',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          17 => 
          array (
            'errorCode' => 'DependencyViolation.RouteTable',
            'errorMessage' => 'Specified object has dependent custom routeTable.',
          ),
          18 => 
          array (
            'errorCode' => 'DependencyViolation.NetworkAcl',
            'errorMessage' => 'Specified object has dependent resources network acl.',
          ),
          19 => 
          array (
            'errorCode' => 'DependencyViolation.CloudServiceResource',
            'errorMessage' => '%s',
          ),
          20 => 
          array (
            'errorCode' => 'DependencyViolation.ClassicLinkInstance',
            'errorMessage' => 'Specified object has active classicLink instance.',
          ),
          21 => 
          array (
            'errorCode' => 'System.ServiceBusy',
            'errorMessage' => 'System is busy, please try later.',
          ),
          22 => 
          array (
            'errorCode' => 'DependencyViolation.DhcpOptionsSet',
            'errorMessage' => 'The VPC cannot be deleted when it is associated with dhcpOptionsSet.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found.',
          ),
          24 => 
          array (
            'errorCode' => 'DependencyViolation.CustomRouteTable',
            'errorMessage' => 'CustomRouteTable already exists.',
          ),
          25 => 
          array (
            'errorCode' => 'DependencyViolation.Ipv4Gateway',
            'errorMessage' => 'The VPC cannot be deleted when it has ipv4Gateway.',
          ),
          26 => 
          array (
            'errorCode' => 'DependencyViolation.GatewayRouteTable',
            'errorMessage' => 'Specified object has dependent resources gatewayRouteTable.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationDenied.VpcPeerExists',
            'errorMessage' => 'The operation is not allowed because the VpcPeer exists.',
          ),
          28 => 
          array (
            'errorCode' => 'DependencyViolation.AppAccess',
            'errorMessage' => 'Specified object has dependent resources app access.',
          ),
          29 => 
          array (
            'errorCode' => 'DependencyViolation.OppositeRouterInterface',
            'errorMessage' => 'Failed to delete the VPC because it has peer router interfaces.',
          ),
          30 => 
          array (
            'errorCode' => 'DependencyViolation.TransitRouter',
            'errorMessage' => 'Specified object has attached to Transit Router.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'The operation is not supported in this status.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.Instance',
            'errorMessage' => 'ClassicLink Instances exist in VPC.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVpcResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteVpcResponse>","errorExample":""}]',
      'title' => '删除一个VPC',
      'description' => '调用该接口删除VPC时，请注意： 

- 删除VPC之前，需要先释放或转移VPC内的所有资源，包括交换机、云产品实例、高可用虚拟IP等。
  
- 只有处于**Available**状态的VPC才可以被删除。  

- **DeleteVpc**接口属于异步接口，即系统会返回一个请求ID，但该VPC尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpcAttribute](~~94565~~)查询VPC的删除状态：
    - 当VPC处于**Deleting**状态时，表示VPC正在删除中。
    - 当查询不到指定的VPC时，表示VPC删除成功。
- **DeleteVpc**接口不支持并发删除同一个VPC。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeInstanceFromCen' => 
    array (
      'summary' => '调用RevokeInstanceFromCen撤销网络实例对指定云企业网实例的授权。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-uf6o8d1dj8sjwxi6o****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **CCN**：云连接网。',
            'type' => 'string',
            'required' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要撤销授权的云企业网实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        4 => 
        array (
          'name' => 'CenOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要撤销授权的云企业网实例所属账号的UID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456789',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'Current Instance status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'Specified Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceType.Invalid',
            'errorMessage' => 'Specified type is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeInstanceFromCenResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</RevokeInstanceFromCenResponse>","errorExample":""}]',
      'title' => '撤销网络实例对指定云企业网实例的授权',
      'description' => '- **RevokeInstanceFromCen**接口是VPC的API，所以调用该接口必须使用`vpc.aliyuncs.com`域名。API version为`2016-04-28`。

- **RevokeInstanceFromCen**接口不支持在同一个VPC、VBR或者CCN中并发撤销网络实例对指定云企业网实例的授权。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociateVpcCidrBlock' => 
    array (
      'summary' => '调用UnassociateVpcCidrBlock删除VPC的附加IPv4网段。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除附加网段的VPC所在地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'ch-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除附加网段的VPC的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-o6wrloqsdqc9io3mg****',
          ),
        ),
        2 => 
        array (
          'name' => 'SecondaryCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的附加IPv4网段。

> 参数**SecondaryCidrBlock**和参数**Ipv6CidrBlock**必须输入一个且不能都输入。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.0/16',
          ),
        ),
        3 => 
        array (
          'name' => 'IPv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的附加IPv6网段。

> 参数**Ipv6CidrBlock**和参数**SecondaryCidrBlock**必须输入一个且不能都输入。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:0:6a::/56',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除附加网段的VPC所在地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'ch-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C1221A1F-2ACD-4592-8F27-474E02883159',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6Gateway',
            'errorMessage' => 'The operation is failed because of ipv6Gateway is in use.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpc.NotFound',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'ParamExclusive.SecondaryCidrAndIpv6Cidr',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.SecondaryCidrOrIpv6Cidr',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidSecondaryCidrBlock.NotFound',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.CidrInUse',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidIpv6CidrBlock.NotFound',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.IpV6VSwitchInuse',
            'errorMessage' => 'Operation failed because some vswitch ipv6 is in use.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParam.SecondaryCidrBlockOrIpv6CidrBlock',
            'errorMessage' => 'Either SecondaryCidrBlock or Ipv6CidrBlock must be specified.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C1221A1F-2ACD-4592-8F27-474E02883159\\"\\n}","errorExample":""},{"type":"xml","example":"<UnassociateVpcCidrBlockResponse>\\n    <RequestId>C1221A1F-2ACD-4592-8F27-474E02883159</RequestId>\\n</UnassociateVpcCidrBlockResponse>","errorExample":""}]',
      'title' => '删除VPC的附加IPv4网段',
      'description' => '- 删除VPC的附加网段前，请先删除以附加网段创建的交换机。更多信息，请参见[DeleteVSwitch](~~35746~~)。

- **UnassociateVpcCidrBlock**接口不支持在同一个VPC下并发删除附加网段。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVpcAttribute' => 
    array (
      'summary' => '修改指定VPC的名称和描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改信息的VPC的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1qtbach57ywecf****',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的VPC描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my VPC.',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的VPC名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'Vpc-1',
          ),
        ),
        3 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的VPC的IPv4网段。

您可以在VPC原IPv4网段内放大或缩小网段，且网段支持的掩码为8～28位。当您缩小VPC的IPv4网段时，如果有已经使用的IP地址在目标网段外，则会修改失败。

> 修改VPC的网段，不会影响用户的存量业务。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableIPv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启了IPv6网段。取值：

- **true**：开启。

- **false**（默认值）：关闭。



',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6网段。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:0:6a::/56',
          ),
        ),
        7 => 
        array (
          'name' => 'Ipv6Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6地址段类型，取值：

- **BGP**（默认值）：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。

> 如果是开通了单线带宽白名单的用户，该字段可以设置为**ChinaTelecom**（中国电信）、**ChinaUnicom**（中国联通）和**ChinaMobile**（中国移动）。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '43B72D30-25E1-4FA3-96A8-89374A521D1A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.VpcNotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'description not valid..',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVpcName.Malformed',
            'errorMessage' => 'Specified VPC name is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVpcDiscription.Malformed',
            'errorMessage' => 'Specified VPC description is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified  UserCidr  invalid  format.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidUserCidr.Quota',
            'errorMessage' => 'Specified  UserCidr number is greater than 3.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidUserCidr.Malformed',
            'errorMessage' => 'Specified  UserCidr  overlapping in of 100.64.0.0/10.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC name is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalCidrBlock',
            'errorMessage' => 'Some subnet cidrBlock is not in the cidrBlock.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidRegion.Malformed',
            'errorMessage' => 'Specified RegionId is not vaild.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationUnsupported.DisableIpv6',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6Feature',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'ParamExclusive.EnableIpv6AndCidrBlock',
            'errorMessage' => 'EnableIpv6 and CidrBlock is mutually exclusive.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationFailed.ClassicLinkEnabled',
            'errorMessage' => 'Operation failed because classicLink is enabled.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.IpV6VSwitchInuse',
            'errorMessage' => '%s',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6GatewayInUse',
            'errorMessage' => 'The IPv6 gateway is in use.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.QueryCenIpv6Status',
            'errorMessage' => 'Failed to query the IPv6 status of the specified VPC in CEN.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationUnsupported.CenIpv6Enabled',
            'errorMessage' => 'The IPv6 feature is enabled in CEN.',
          ),
          20 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv6Isp',
            'errorMessage' => 'The Ipv6Isp feature is not supported.',
          ),
          21 => 
          array (
            'errorCode' => 'ResourceNotEnough.Ipv6Cidr',
            'errorMessage' => 'The specified resource ipv6 cidr is not enough.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.IPv6CidrNotReserved',
            'errorMessage' => 'The IPv6 CIDR block is not reserved.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6Cidr',
            'errorMessage' => 'The specified Ipv6CidrBlock is invalid.',
          ),
          24 => 
          array (
            'errorCode' => 'InvalidIpv6Instance.NotFound',
            'errorMessage' => 'The specified resource of InvalidIpv6Instance is not found.',
          ),
          25 => 
          array (
            'errorCode' => 'ExclusiveParam.EnableIpv6AndCidrBlock',
            'errorMessage' => 'The param of EnableIpv6 and CidrBlock are mutually exclusive.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"43B72D30-25E1-4FA3-96A8-89374A521D1A\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpcAttributeResponse>\\n    <RequestId>43B72D30-25E1-4FA3-96A8-89374A521D1A</RequestId>\\n</ModifyVpcAttributeResponse>","errorExample":""}]',
      'title' => '修改指定VPC的名称和描述信息',
      'description' => '* **ModifyVpcAttribute**接口不支持并发修改同一个VPC的名称和描述信息。
* **ModifyVpcAttribute**接口可以为VPC开通IPv6，但是不能给已开通IPv6的VPC修改IPv6网段或IPv6地址段类型。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableVpcClassicLink' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要开启ClassicLink功能的VPC所在的地域。


您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要开启ClassicLink功能的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp1m7v25emi1h5mtc****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.EnableClassicLink',
            'errorMessage' => 'the specified resource does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'RouteConflict.AlreadyExist',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflict',
            'errorMessage' => 'Operation failed because a specified route entry is already exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableVpcClassicLinkResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</EnableVpcClassicLinkResponse>","errorExample":""}]',
      'title' => '开启ClassicLink',
      'summary' => '开启ClassicLink。',
    ),
    'DisableVpcClassicLink' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要关闭ClassicLink功能的VPC所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要关闭ClassicLink功能的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp1m7v25emi1h5mtc****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAction',
            'errorMessage' => 'The VPC has been connected to the classic network ECS. Please cancel the connection before proceeding.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'the specified resource does not support this operation.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.Instance',
            'errorMessage' => 'ClassicLink Instances exist in VPC.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableVpcClassicLinkResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DisableVpcClassicLinkResponse>","errorExample":""}]',
      'title' => '关闭ClassicLink',
      'summary' => '关闭ClassicLink。',
    ),
    'DeletionProtection' => 
    array (
      'summary' => '设置实例删除保护功能。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置删除保护功能的实例所在的地域ID。您可以调用[DescribeRegions](~~36063~~)查看最新的阿里云地域列表。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ProtectionEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启删除保护功能，取值：

- **true**：开启。

- **false**：关闭。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置删除保护功能的实例类型，取值：

- **EIP**：弹性公网IP。

- **CBWP**：共享带宽。

- **NATGW**：NAT网关。',
            'type' => 'string',
            'required' => true,
            'example' => 'EIP',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置删除保护功能的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-uf6id7gvguruxe41v****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000	',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置删除保护功能的实例所在的地域ID。您可以调用[DescribeRegions](~~36063~~)查看最新的阿里云地域列表。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BAAEF103-96C4-4454-9210-066F2405F511',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeletionProtection.ResourceNotExist',
            'errorMessage' => 'The resource is not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'DeletionProtection.PrePaidNotSupport',
            'errorMessage' => 'The prepaid resource is not support.',
          ),
          2 => 
          array (
            'errorCode' => 'DeletionProtection.TypeNotSupport',
            'errorMessage' => 'The resource is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'DeletionProtection.AlreadyEnabled',
            'errorMessage' => 'The resource deletion protection is already enabled.',
          ),
          4 => 
          array (
            'errorCode' => 'DeletionProtection.OwnerError',
            'errorMessage' => 'The resource owner error.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation ID is not found',
          ),
          1 => 
          array (
            'errorCode' => 'DeletionProtection.NotExist',
            'errorMessage' => 'The resource deletion protection is not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BAAEF103-96C4-4454-9210-066F2405F511\\"\\n}","errorExample":""},{"type":"xml","example":"<DeletionProtectionResponse>\\n    <RequestId>BAAEF103-96C4-4454-9210-066F2405F511</RequestId>\\n</DeletionProtectionResponse>","errorExample":""}]',
      'title' => '实例释放保护',
      'description' => '## API描述

为实例开启删除保护功能后，您将不能删除该实例。如需删除，请先关闭删除保护功能。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVpcs' => 
    array (
      'summary' => '查询已创建的VPC。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的ID。 

最多支持指定20个VPC ID，多个VPC的ID之间用半角逗号（,）隔开。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1b1xjllp3ve5yze****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPC所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'Vpc-1',
          ),
        ),
        3 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询指定地域下的默认VPC，取值： 

- **true**（默认值）：查询指定地域下的默认VPC。  

- **false**：不查询默认VPC。  
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会查询资源状况。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接查询资源状况。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的VPC所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxvfvazb4p****',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'VpcOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC所属的阿里云账号ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '253460731706911258',
          ),
        ),
        9 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
        10 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询指定地域下开启IPv6网段的VPC，默认为空值（空值则不根据是否开启IPv6网段做过滤），取值：

- **false**：不开启。
- **true**：开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C6532AA8-D0F7-497F-A8EE-094126D441F5',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Vpcs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Vpc' => 
                  array (
                    'description' => 'VPC的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPC的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => 'VPC的创建时间。',
                          'type' => 'string',
                          'example' => '2021-04-18T15:02:37Z',
                        ),
                        'Status' => 
                        array (
                          'description' => 'VPC的状态，取值： 

- **Pending**：配置中。

- **Available**：可用。
',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'VpcId' => 
                        array (
                          'description' => 'VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1qpo0kug3a20qqe****',
                        ),
                        'IsDefault' => 
                        array (
                          'description' => '是否是该地域的默认VPC。取值：

- **true**：是该地域的默认VPC。

- **false**：不是该地域的默认VPC。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => 'VPC所属的阿里云账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '253460731706911258',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'VPC所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'VpcName' => 
                        array (
                          'description' => 'VPC的名称。',
                          'type' => 'string',
                          'example' => 'vpc1',
                        ),
                        'VRouterId' => 
                        array (
                          'description' => 'VPC路由器的ID。',
                          'type' => 'string',
                          'example' => 'vrt-bp1jcg5cmxjbl9xgc****',
                        ),
                        'DhcpOptionsSetStatus' => 
                        array (
                          'description' => 'DHCP选项集的状态。取值：

- **Available**：可用。

- **InUse**：使用中。

- **Deleted**：已删除。

- **Pending**：配置中。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'CidrBlock' => 
                        array (
                          'description' => 'VPC的IPv4网段。',
                          'type' => 'string',
                          'example' => '192.168.0.0/16',
                        ),
                        'Description' => 
                        array (
                          'description' => 'VPC的描述信息。',
                          'type' => 'string',
                          'example' => 'This is my VPC.',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'VPC所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph****',
                        ),
                        'DhcpOptionsSetId' => 
                        array (
                          'description' => 'DHCP选项集的ID。',
                          'type' => 'string',
                          'example' => 'dopt-o6w0df4epg9zo8isy****',
                        ),
                        'Ipv6CidrBlock' => 
                        array (
                          'description' => 'VPC的IPv6网段。',
                          'type' => 'string',
                          'example' => '2408:XXXX:0:a600::/56',
                        ),
                        'CenStatus' => 
                        array (
                          'description' => 'VPC绑定云企业网的状态。
仅VPC绑定了云企业网时返回**Attached**。',
                          'type' => 'string',
                          'example' => 'Attached',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => 'VPC的标签信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'VPC的标签信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => 'VPC绑定的标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => 'VPC绑定的标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Ipv6CidrBlocks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ipv6CidrBlock' => 
                            array (
                              'description' => 'VPC的IPv6网段信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'VPC的IPv6网段信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Ipv6Isp' => 
                                  array (
                                    'description' => 'VPC的IPv6地址段类型，取值：

- **BGP**：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。

> 如果是开通了单线带宽白名单的用户，该字段可以设置为**ChinaTelecom**（中国电信）、**ChinaUnicom**（中国联通）和**ChinaMobile**（中国移动）。',
                                    'type' => 'string',
                                    'example' => 'BGP',
                                  ),
                                  'Ipv6CidrBlock' => 
                                  array (
                                    'description' => 'VPC的IPv6网段。',
                                    'type' => 'string',
                                    'example' => '2408:XXXX:0:a600::/56',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'VSwitchIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VSwitchId' => 
                            array (
                              'description' => '查询到的VPC中交换机的列表信息。

最多可以查询到VPC中最近创建的300个交换机的信息。如果您需要查询VPC中全部交换机的信息，可以执行[DescribeVSwitches](~~35748~~)接口查询。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '查询到的VPC中交换机的列表信息。

最多可以查询到VPC中最近创建的300个交换机的信息。如果您需要查询VPC中全部交换机的信息，可以执行[DescribeVSwitches](~~35748~~)接口查询。',
                                'type' => 'string',
                                'example' => 'vsw-bp1nhbnpv2blyz8dl****',
                              ),
                            ),
                          ),
                        ),
                        'SecondaryCidrBlocks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SecondaryCidrBlock' => 
                            array (
                              'description' => '附加网段信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'VPC的附加网段。',
                                'type' => 'string',
                                'example' => '192.168.20.0/24',
                              ),
                            ),
                          ),
                        ),
                        'UserCidrs' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'UserCidr' => 
                            array (
                              'description' => '用户侧网段的列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '用户侧网段的列表。',
                                'type' => 'string',
                                'example' => '10.0.0.0/8',
                              ),
                            ),
                          ),
                        ),
                        'NatGatewayIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NatGatewayIds' => 
                            array (
                              'description' => 'NAT网关的ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'NAT网关的ID。',
                                'type' => 'string',
                                'example' => 'nat-245xxxftwt45bg****',
                              ),
                            ),
                          ),
                        ),
                        'RouterTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RouterTableIds' => 
                            array (
                              'description' => '路由表信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由表ID。',
                                'type' => 'string',
                                'example' => 'vtb-bp1krxxzp0c29fmon****',
                              ),
                            ),
                          ),
                        ),
                        'EnabledIpv6' => 
                        array (
                          'description' => '是否开启IPv6。',
                          'type' => 'boolean',
                          'enumValueTitles' => 
                          array (
                            'false' => 'false',
                            'true' => 'true',
                          ),
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpcIdNumber.NotSupported',
            'errorMessage' => 'The number of vpcIds exceeds the limit.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidAliuid',
            'errorMessage' => 'User Id is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidResourceGroupId.NotFound',
            'errorMessage' => 'The Specified ResourceGroupId not exists.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.ResourceGroupId',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'IellgalParameter.OwnerAccount',
            'errorMessage' => 'The specified parameter OwnerAccount is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.OwnerId',
            'errorMessage' => 'The specified parameter VpcOwnerId is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidAccount.NotFound',
            'errorMessage' => 'The account is invalid.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"C6532AA8-D0F7-497F-A8EE-094126D441F5\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"Vpcs\\": {\\n    \\"Vpc\\": [\\n      {\\n        \\"CreationTime\\": \\"2021-04-18T15:02:37Z\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"VpcId\\": \\"vpc-bp1qpo0kug3a20qqe****\\",\\n        \\"IsDefault\\": false,\\n        \\"OwnerId\\": 253460731706911260,\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"VpcName\\": \\"vpc1\\",\\n        \\"VRouterId\\": \\"vrt-bp1jcg5cmxjbl9xgc****\\",\\n        \\"DhcpOptionsSetStatus\\": \\"Available\\",\\n        \\"CidrBlock\\": \\"192.168.0.0/16\\",\\n        \\"Description\\": \\"This is my VPC.\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n        \\"DhcpOptionsSetId\\": \\"dopt-o6w0df4epg9zo8isy****\\",\\n        \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:a600::/56\\",\\n        \\"CenStatus\\": \\"Attached\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        },\\n        \\"Ipv6CidrBlocks\\": {\\n          \\"Ipv6CidrBlock\\": [\\n            {\\n              \\"Ipv6Isp\\": \\"BGP\\",\\n              \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:a600::/56\\"\\n            }\\n          ]\\n        },\\n        \\"VSwitchIds\\": {\\n          \\"VSwitchId\\": [\\n            \\"vsw-bp1nhbnpv2blyz8dl****\\"\\n          ]\\n        },\\n        \\"SecondaryCidrBlocks\\": {\\n          \\"SecondaryCidrBlock\\": [\\n            \\"192.168.20.0/24\\"\\n          ]\\n        },\\n        \\"UserCidrs\\": {\\n          \\"UserCidr\\": [\\n            \\"10.0.0.0/8\\"\\n          ]\\n        },\\n        \\"NatGatewayIds\\": {\\n          \\"NatGatewayIds\\": [\\n            \\"nat-245xxxftwt45bg****\\"\\n          ]\\n        },\\n        \\"RouterTableIds\\": {\\n          \\"RouterTableIds\\": [\\n            \\"vtb-bp1krxxzp0c29fmon****\\"\\n          ]\\n        },\\n        \\"EnabledIpv6\\": false\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpcsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>C6532AA8-D0F7-497F-A8EE-094126D441F5</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <Vpcs>\\n        <CreationTime>2021-04-18T15:02:37Z</CreationTime>\\n        <Status>Available</Status>\\n        <VpcId>vpc-bp1qpo0kug3a20qqe****</VpcId>\\n        <IsDefault>false</IsDefault>\\n        <OwnerId>253460731706911260</OwnerId>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <VpcName>vpc1</VpcName>\\n        <VRouterId>vrt-bp1jcg5cmxjbl9xgc****</VRouterId>\\n        <DhcpOptionsSetStatus>Available</DhcpOptionsSetStatus>\\n        <CidrBlock>192.168.0.0/16</CidrBlock>\\n        <Description>This is my VPC.</Description>\\n        <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n        <DhcpOptionsSetId>dopt-o6w0df4epg9zo8isy****</DhcpOptionsSetId>\\n        <Ipv6CidrBlock>2408:XXXX:0:a600::/56</Ipv6CidrBlock>\\n        <CenStatus>Attached</CenStatus>\\n        <Tags>\\n            <Key>env</Key>\\n            <Value>internal</Value>\\n        </Tags>\\n        <Ipv6CidrBlocks>\\n            <Ipv6Isp>BGP</Ipv6Isp>\\n            <Ipv6CidrBlock>2408:XXXX:0:a600::/56</Ipv6CidrBlock>\\n        </Ipv6CidrBlocks>\\n        <VSwitchIds>vsw-bp1nhbnpv2blyz8dl****</VSwitchIds>\\n        <SecondaryCidrBlocks>192.168.20.0/24</SecondaryCidrBlocks>\\n        <UserCidrs>10.0.0.0/8</UserCidrs>\\n        <NatGatewayIds>nat-245xxxftwt45bg****</NatGatewayIds>\\n        <RouterTableIds>vtb-bp1krxxzp0c29fmon****</RouterTableIds>\\n    </Vpcs>\\n</DescribeVpcsResponse>","errorExample":""}]',
      'title' => '查询已创建的VPC',
    ),
    'DescribeVpcAttribute' => 
    array (
      'summary' => '查询指定VPC的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp18sth14qii3pnv****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会查询资源状况。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接查询资源状况。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为默认VPC，取值： 

- **false**（默认值）：不是默认VPC。

- **true**：是默认VPC。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'VPC的创建时间。',
            'type' => 'object',
            'properties' => 
            array (
              'CreationTime' => 
              array (
                'description' => 'VPC的创建时间。',
                'type' => 'string',
                'example' => '2021-10-16T07:31:09Z',
              ),
              'Status' => 
              array (
                'description' => 'VPC的状态。取值：

- **Available**：可用。

- **Pending**：配置中。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'VpcId' => 
              array (
                'description' => 'VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-bp18sth14qii3pnvo****',
              ),
              'IsDefault' => 
              array (
                'description' => '是否是默认VPC。取值：

- **true**：是默认VPC。

- **false**（默认值）：非默认VPC。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'ClassicLinkEnabled' => 
              array (
                'description' => '是否开启了ClassicLink功能。取值：

- **true**：已开启。

- **false**（默认值）：未开启。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'OwnerId' => 
              array (
                'description' => 'VPC所属的账号ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '28311773240248****',
              ),
              'RegionId' => 
              array (
                'description' => 'VPC所在的地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'VpcName' => 
              array (
                'description' => 'VPC的名称。',
                'type' => 'string',
                'example' => 'doctest2',
              ),
              'VRouterId' => 
              array (
                'description' => 'VPC的路由器ID。',
                'type' => 'string',
                'example' => 'vrt-bp1jso6ng1at0ajsc****',
              ),
              'DhcpOptionsSetStatus' => 
              array (
                'description' => 'DHCP选项集的状态。取值：

- **Available**：可用。

- **InUse**：使用中。

- **Deleted**：已删除。

- **Pending**：配置中。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'CidrBlock' => 
              array (
                'description' => 'VPC的IPv4网段。',
                'type' => 'string',
                'example' => '192.168.0.0/16',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7486AE4A-129D-43DB-A714-2432C074BA04',
              ),
              'Description' => 
              array (
                'description' => 'VPC的描述。',
                'type' => 'string',
                'example' => 'VPC',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazbvgb4ph****',
              ),
              'DhcpOptionsSetId' => 
              array (
                'description' => 'DHCP选项集的ID。',
                'type' => 'string',
                'example' => 'dopt-o6w0df4epg9zo8isy****',
              ),
              'Ipv6CidrBlock' => 
              array (
                'description' => 'VPC的IPv6网段。',
                'type' => 'string',
                'example' => '2408:XXXX:0:a600::/56',
              ),
              'VSwitchIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VSwitchId' => 
                  array (
                    'description' => 'VPC下的交换机列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPC下的交换机列表。',
                      'type' => 'string',
                      'example' => '{"VSwitchId": [ "vsw-bp14cagpfysr29feg****" ]}',
                    ),
                  ),
                ),
              ),
              'UserCidrs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'UserCidr' => 
                  array (
                    'description' => '用户侧网络的网段，如定义了多个网段，返回时会以半角逗号（,）隔开，最多支持3个网段。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '用户侧网络的网段，如定义了多个网段，返回时会以半角逗号（,）隔开，最多支持3个网段。',
                      'type' => 'string',
                      'example' => '172.16.0.1/24',
                    ),
                  ),
                ),
              ),
              'SecondaryCidrBlocks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SecondaryCidrBlock' => 
                  array (
                    'description' => 'VPC附加IPv4网段。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPC附加IPv4网段。',
                      'type' => 'string',
                      'example' => '192.168.0.0/16',
                    ),
                  ),
                ),
              ),
              'AssociatedCens' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AssociatedCen' => 
                  array (
                    'description' => '绑定的云企业网列表。

如果VPC未绑定云企业网，则不返回该参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '云企业网所属账号的ID。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CenOwnerId' => 
                        array (
                          'description' => '云企业网所属账号的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '28311773240248****',
                        ),
                        'CenId' => 
                        array (
                          'description' => 'VPC绑定的云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-7qthudw0ll6jmc****',
                        ),
                        'CenStatus' => 
                        array (
                          'description' => 'VPC绑定云企业网的状态。

仅VPC绑定了云企业网时返回**Attached**。',
                          'type' => 'string',
                          'example' => 'Attached',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CloudResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CloudResourceSetType' => 
                  array (
                    'description' => 'VPC下的资源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPC下的资源数量。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResourceCount' => 
                        array (
                          'description' => 'VPC下的资源数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => 'VPC下的资源类型。取值：

- **VSwitch**：交换机。

- **VRouter**：路由器。

- **RouteTable**：路由表。',
                          'type' => 'string',
                          'example' => 'VSwitch',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Ipv6CidrBlocks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6CidrBlock' => 
                  array (
                    'description' => 'VPC的IPv6网段信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPC的IPv6网段信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Ipv6Isp' => 
                        array (
                          'description' => 'VPC的IPv6地址段类型。取值：

- **BGP**（默认值）：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。

> 如果是开通了单线带宽白名单的用户，该字段可以设置为**ChinaTelecom**（中国电信）、**ChinaUnicom**（中国联通）和**ChinaMobile**（中国移动）。',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'Ipv6CidrBlock' => 
                        array (
                          'description' => 'VPC的IPv6网段。',
                          'type' => 'string',
                          'example' => '2408:XXXX:0:6a::/56',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SupportIpv4Gateway' => 
              array (
                'description' => '是否支持IPv4网关。
- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Ipv4GatewayId' => 
              array (
                'description' => 'IPv4网关的实例ID。',
                'type' => 'string',
                'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => '标签列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'AssociatedPropagationSources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AssociatedPropagationSources' => 
                  array (
                    'description' => 'VPC关联路由传播源。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SourceType' => 
                        array (
                          'description' => '传播源类型。

- **CEN**：云企业网。
- **VPN**：VPN网关。
- **TR**：转发路由器。
- **ECR**：专线网关。',
                          'type' => 'string',
                          'example' => 'CEN',
                        ),
                        'SourceOwnerId' => 
                        array (
                          'description' => '传播源所属账号的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '153980532164****',
                        ),
                        'SourceInstanceId' => 
                        array (
                          'description' => '传播源实例ID。',
                          'type' => 'string',
                          'example' => 'cen-dc4vwznpwbobrl****',
                        ),
                        'Status' => 
                        array (
                          'description' => '绑定状态。

- **Attaching**：绑定中。
- **Attached**：已绑定。
- **Detaching**：解绑中。',
                          'type' => 'string',
                          'example' => 'Attaching',
                        ),
                        'RoutePropagated' => 
                        array (
                          'description' => '是否给本VPC传播路由。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'EnabledIpv6' => 
              array (
                'description' => '是否开启IPv6。',
                'type' => 'boolean',
                'enumValueTitles' => 
                array (
                  'false' => 'false',
                  'true' => 'true',
                ),
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CreationTime\\": \\"2021-10-16T07:31:09Z\\",\\n  \\"Status\\": \\"Available\\",\\n  \\"VpcId\\": \\"vpc-bp18sth14qii3pnvo****\\",\\n  \\"IsDefault\\": false,\\n  \\"ClassicLinkEnabled\\": false,\\n  \\"OwnerId\\": 0,\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"VpcName\\": \\"doctest2\\",\\n  \\"VRouterId\\": \\"vrt-bp1jso6ng1at0ajsc****\\",\\n  \\"DhcpOptionsSetStatus\\": \\"Available\\",\\n  \\"CidrBlock\\": \\"192.168.0.0/16\\",\\n  \\"RequestId\\": \\"7486AE4A-129D-43DB-A714-2432C074BA04\\",\\n  \\"Description\\": \\"VPC\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazbvgb4ph****\\",\\n  \\"DhcpOptionsSetId\\": \\"dopt-o6w0df4epg9zo8isy****\\",\\n  \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:a600::/56\\",\\n  \\"VSwitchIds\\": {\\n    \\"VSwitchId\\": [\\n      \\"{\\\\\\"VSwitchId\\\\\\": [ \\\\\\"vsw-bp14cagpfysr29feg****\\\\\\" ]}\\"\\n    ]\\n  },\\n  \\"UserCidrs\\": {\\n    \\"UserCidr\\": [\\n      \\"172.16.0.1/24\\"\\n    ]\\n  },\\n  \\"SecondaryCidrBlocks\\": {\\n    \\"SecondaryCidrBlock\\": [\\n      \\"192.168.0.0/16\\"\\n    ]\\n  },\\n  \\"AssociatedCens\\": {\\n    \\"AssociatedCen\\": [\\n      {\\n        \\"CenOwnerId\\": 0,\\n        \\"CenId\\": \\"cen-7qthudw0ll6jmc****\\",\\n        \\"CenStatus\\": \\"Attached\\"\\n      }\\n    ]\\n  },\\n  \\"CloudResources\\": {\\n    \\"CloudResourceSetType\\": [\\n      {\\n        \\"ResourceCount\\": 1,\\n        \\"ResourceType\\": \\"VSwitch\\"\\n      }\\n    ]\\n  },\\n  \\"Ipv6CidrBlocks\\": {\\n    \\"Ipv6CidrBlock\\": [\\n      {\\n        \\"Ipv6Isp\\": \\"BGP\\",\\n        \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:6a::/56\\"\\n      }\\n    ]\\n  },\\n  \\"SupportIpv4Gateway\\": true,\\n  \\"Ipv4GatewayId\\": \\"ipv4gw-5tsnc6s4ogsedtp3k****\\",\\n  \\"Tags\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"Key\\": \\"FinanceDept\\",\\n        \\"Value\\": \\"FinanceJoshua\\"\\n      }\\n    ]\\n  },\\n  \\"AssociatedPropagationSources\\": {\\n    \\"AssociatedPropagationSources\\": [\\n      {\\n        \\"SourceType\\": \\"CEN\\",\\n        \\"SourceOwnerId\\": 0,\\n        \\"SourceInstanceId\\": \\"cen-dc4vwznpwbobrl****\\",\\n        \\"Status\\": \\"Attaching\\",\\n        \\"RoutePropagated\\": true\\n      }\\n    ]\\n  },\\n  \\"EnabledIpv6\\": false\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpcAttributeResponse>\\n    <CreationTime>2021-10-16T07:31:09Z</CreationTime>\\n    <Status>Available</Status>\\n    <VpcId>vpc-bp18sth14qii3pnvo****</VpcId>\\n    <IsDefault>false</IsDefault>\\n    <ClassicLinkEnabled>false</ClassicLinkEnabled>\\n    <OwnerId>283117732402484000</OwnerId>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <VpcName>doctest2</VpcName>\\n    <VRouterId>vrt-bp1jso6ng1at0ajsc****</VRouterId>\\n    <DhcpOptionsSetStatus>Available</DhcpOptionsSetStatus>\\n    <CidrBlock>192.168.0.0/16</CidrBlock>\\n    <RequestId>7486AE4A-129D-43DB-A714-2432C074BA04</RequestId>\\n    <Description>VPC</Description>\\n    <ResourceGroupId>rg-acfmxazbvgb4ph****</ResourceGroupId>\\n    <DhcpOptionsSetId>dopt-o6w0df4epg9zo8isy****</DhcpOptionsSetId>\\n    <Ipv6CidrBlock>2408:XXXX:0:a600::/56</Ipv6CidrBlock>\\n    <VSwitchIds>{\\"VSwitchId\\": [ \\"vsw-bp14cagpfysr29feg****\\" ]}</VSwitchIds>\\n    <UserCidrs>172.16.0.1/24</UserCidrs>\\n    <SecondaryCidrBlocks>192.168.0.0/16</SecondaryCidrBlocks>\\n    <AssociatedCens>\\n        <CenOwnerId>283117732402484000</CenOwnerId>\\n        <CenId>cen-7qthudw0ll6jmc****</CenId>\\n        <CenStatus>Attached</CenStatus>\\n    </AssociatedCens>\\n    <CloudResources>\\n        <ResourceCount>1</ResourceCount>\\n        <ResourceType>VSwitch</ResourceType>\\n    </CloudResources>\\n    <Ipv6CidrBlocks>\\n        <Ipv6Isp>BGP</Ipv6Isp>\\n        <Ipv6CidrBlock>2408:XXXX:0:6a::/56</Ipv6CidrBlock>\\n    </Ipv6CidrBlocks>\\n    <SupportIpv4Gateway>true</SupportIpv4Gateway>\\n    <Ipv4GatewayId>ipv4gw-5tsnc6s4ogsedtp3k****</Ipv4GatewayId>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</DescribeVpcAttributeResponse>","errorExample":""}]',
      'title' => '查询指定VPC的配置信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGrantRulesToCen' => 
    array (
      'summary' => '查询指定网络实例（VPC、VBR和CCN）的云企业网跨账号授权信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例所在的地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp18sth14qii3pnvc****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例的类型，取值：

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **CCN**：云连接网。',
            'type' => 'string',
            'required' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4p****	',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。

',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000	',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '每页包含的条目数。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5BB78C8-5F41-464F-B9FF-5E0A7198BA26',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'CenGrantRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CbnGrantRule' => 
                  array (
                    'description' => '网络实例授权信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '网络实例授权信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CenInstanceId' => 
                        array (
                          'description' => '已授权的云企业网实例的ID。',
                          'type' => 'string',
                          'example' => 'cen-9gsm1q2yh1prpt****',
                        ),
                        'CenOwnerId' => 
                        array (
                          'description' => '已授权的云企业网实例所属阿里云账号的UID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '132193271328****',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '实例创建时间。',
                          'type' => 'string',
                          'example' => '2019-11-15T09:26:36Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"F5BB78C8-5F41-464F-B9FF-5E0A7198BA26\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"CenGrantRules\\": {\\n    \\"CbnGrantRule\\": [\\n      {\\n        \\"CenInstanceId\\": \\"cen-9gsm1q2yh1prpt****\\",\\n        \\"CenOwnerId\\": 0,\\n        \\"CreationTime\\": \\"2019-11-15T09:26:36Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGrantRulesToCenResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>F5BB78C8-5F41-464F-B9FF-5E0A7198BA26</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <CenGrantRules>\\n        <CenInstanceId>cen-9gsm1q2yh1prpt****</CenInstanceId>\\n        <CreationTime>2019-11-15T09:26:36Z</CreationTime>\\n    </CenGrantRules>\\n</DescribeGrantRulesToCenResponse>","errorExample":""}]',
      'title' => '查询云企业网跨账号授权信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVRouterAttribute' => 
    array (
      'summary' => '调用ModifyVRouterAttribute接口修改路由器的名称和描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的路由器所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vrt-gw0p7zigake75znix****',
          ),
        ),
        2 => 
        array (
          'name' => 'VRouterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'VRouter-1',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'My VRouter',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVRouterName.Malformed',
            'errorMessage' => 'Specified virtual router name is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVRouterDescription.Malformed',
            'errorMessage' => 'Specified virtual router description is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'Invalid description.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.VRouterNotFound',
            'errorMessage' => 'Specified virtual router is not found during access authentication.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVRouterId.NotFound',
            'errorMessage' => 'Specified virtual router does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVRouterAttributeResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ModifyVRouterAttributeResponse>","errorExample":""}]',
      'title' => '修改路由器的名称和描述信息',
      'description' => '**ModifyVRouterAttribute**接口不支持并发修改同一个路由器的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVRouters' => 
    array (
      'summary' => '调用DescribeVRouters接口查询指定地域的路由器列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由器的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1lhl0taikrteen****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由器所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VRouters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VRouter' => 
                  array (
                    'description' => '路由器的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => '路由器所属VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-rj905wotv6y030t1****',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '路由器的创建时间。',
                          'type' => 'string',
                          'example' => '2018-03-22T07:46:20Z',
                        ),
                        'VRouterId' => 
                        array (
                          'description' => '路由器的ID。',
                          'type' => 'string',
                          'example' => 'vrt-rj98khsezfqpjrxmv****',
                        ),
                        'Description' => 
                        array (
                          'description' => '路由器的描述信息。',
                          'type' => 'string',
                          'example' => 'abc',
                        ),
                        'VRouterName' => 
                        array (
                          'description' => '路由器的名称。',
                          'type' => 'string',
                          'example' => 'doctest',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '路由器所属的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'RouteTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RouteTableId' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由器中的路由表的ID。',
                                'type' => 'string',
                                'example' => '{ "RouteTableId": [ "vtb-rj9ybe3y0u41mmjsp****"] }',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VRouters\\": {\\n    \\"VRouter\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-rj905wotv6y030t1****\\",\\n        \\"CreationTime\\": \\"2018-03-22T07:46:20Z\\",\\n        \\"VRouterId\\": \\"vrt-rj98khsezfqpjrxmv****\\",\\n        \\"Description\\": \\"abc\\",\\n        \\"VRouterName\\": \\"doctest\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"RouteTableIds\\": {\\n          \\"RouteTableId\\": [\\n            \\"{ \\\\\\"RouteTableId\\\\\\": [ \\\\\\"vtb-rj9ybe3y0u41mmjsp****\\\\\\"] }\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVRoutersResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VRouters>\\n        <VpcId>vpc-rj905wotv6y030t1****</VpcId>\\n        <CreationTime>2018-03-22T07:46:20Z</CreationTime>\\n        <VRouterId>vrt-rj98khsezfqpjrxmv****</VRouterId>\\n        <Description>abc</Description>\\n        <VRouterName>doctest</VRouterName>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <RouteTableIds>{ \\"RouteTableId\\": [ \\"vtb-rj9ybe3y0u41mmjsp****\\"] }</RouteTableIds>\\n    </VRouters>\\n</DescribeVRoutersResponse>","errorExample":""}]',
      'title' => '查询指定地域的路由器列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListVSwitchCidrReservations' => 
    array (
      'summary' => '查询交换机预留网段。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的交换机预留网段所属的交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-25navfgbue4g****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchCidrReservationIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '前缀列表的实例ID',
            'description' => '交换机预留网段的实例ID。最多支持输入10个预留网段。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '交换机预留网段的实例ID。最多支持输入10个预留网段。',
              'type' => 'string',
              'required' => false,
              'example' => 'vcr-bp1m12saqteraw3rp****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchCidrReservationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的类型。取值：**prefix**，表示按段分配地址。

> 用户及云服务自动为弹性网卡ENI（Elastic Network Interface）分配网段时，必须从预留地址段分配。如果预留地址段的地址已经分配完，则系统会报错。',
            'type' => 'string',
            'required' => false,
            'example' => 'prefix',
          ),
        ),
        4 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的IP版本。取值：

- **IPv4** （默认值）：IPv4版本。
- **IPv6**：IPv6版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '交换机所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'VSwitchCidrReservations' => 
              array (
                'description' => '交换机预留网段的列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '交换机预留网段的列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpcId' => 
                    array (
                      'description' => '交换机预留网段所属的VPC。',
                      'type' => 'string',
                      'example' => 'vpc-bp1wdz2pdhgurz1od****',
                    ),
                    'VSwitchId' => 
                    array (
                      'title' => '交换机实例Id',
                      'description' => '交换机预留网段所属的交换机ID。',
                      'type' => 'string',
                      'example' => 'vsw-25navfgbue4g****',
                    ),
                    'VSwitchCidrReservationId' => 
                    array (
                      'title' => '预留网段实例Id',
                      'description' => '交换机预留网段的实例ID。',
                      'type' => 'string',
                      'example' => 'vcr-bp1m12saqteraw3rp****',
                    ),
                    'VSwitchCidrReservationCidr' => 
                    array (
                      'title' => '预留网段CIdrBlock',
                      'description' => '交换机预留网段。',
                      'type' => 'string',
                      'example' => '192.168.1.64/28',
                    ),
                    'VSwitchCidrReservationName' => 
                    array (
                      'title' => '预留网段名称',
                      'description' => '交换机预留网段的名称。',
                      'type' => 'string',
                      'example' => 'ReservationName',
                    ),
                    'VSwitchCidrReservationDescription' => 
                    array (
                      'title' => '预留网段描述',
                      'description' => '交换机预留网段的描述信息。',
                      'type' => 'string',
                      'example' => 'ReservationDescription',
                    ),
                    'IpVersion' => 
                    array (
                      'title' => 'IpVersion',
                      'description' => '交换机预留网段的IP版本。取值：

- **IPv4** （默认值）：IPv4版本。
- **IPv6**：IPv6版本。
',
                      'type' => 'string',
                      'example' => 'IPv4',
                    ),
                    'CreationTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '预留网段的创建时间。',
                      'type' => 'string',
                      'example' => '2023-03-14T10:02:37Z',
                    ),
                    'Type' => 
                    array (
                      'title' => '预留网段类型',
                      'description' => '交换机预留网段的类型。取值： **prefix**（默认值），表示按段分配地址。',
                      'type' => 'string',
                      'example' => 'prefix',
                    ),
                    'AvailableCidrCount' => 
                    array (
                      'title' => '可用地址段数量',
                      'description' => '交换机预留网段中可用的前缀网段（prefix）数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'AssignedCidrCount' => 
                    array (
                      'title' => '已使用地址段数量',
                      'description' => '交换机预留网段中已使用的前缀网段（prefix）数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '6',
                    ),
                    'Status' => 
                    array (
                      'description' => '预留网段的状态。取值：

- **Assigning**：分配中。
- **Assigned**：已分配。
- **Releasing**：释放中。
- **Released**：已释放。',
                      'type' => 'string',
                      'example' => 'Assigned',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 10,\\n  \\"MaxResults\\": 10,\\n  \\"VSwitchCidrReservations\\": [\\n    {\\n      \\"VpcId\\": \\"vpc-bp1wdz2pdhgurz1od****\\",\\n      \\"VSwitchId\\": \\"vsw-25navfgbue4g****\\",\\n      \\"VSwitchCidrReservationId\\": \\"vcr-bp1m12saqteraw3rp****\\",\\n      \\"VSwitchCidrReservationCidr\\": \\"192.168.1.64/28\\",\\n      \\"VSwitchCidrReservationName\\": \\"ReservationName\\",\\n      \\"VSwitchCidrReservationDescription\\": \\"ReservationDescription\\",\\n      \\"IpVersion\\": \\"IPv4\\",\\n      \\"CreationTime\\": \\"2023-03-14T10:02:37Z\\",\\n      \\"Type\\": \\"prefix\\",\\n      \\"AvailableCidrCount\\": 10,\\n      \\"AssignedCidrCount\\": 6,\\n      \\"Status\\": \\"Assigned\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListVSwitchCidrReservationsResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>10</TotalCount>\\n    <MaxResults>10</MaxResults>\\n    <VSwitchCidrReservations>\\n        <VpcId>vpc-bp1wdz2pdhgurz1od****</VpcId>\\n        <VSwitchId>vsw-25navfgbue4g****</VSwitchId>\\n        <VSwitchCidrReservationId>vcr-bp1m12saqteraw3rp****</VSwitchCidrReservationId>\\n        <VSwitchCidrReservationCidr>192.168.1.64/28</VSwitchCidrReservationCidr>\\n        <VSwitchCidrReservationName>ReservationName</VSwitchCidrReservationName>\\n        <VSwitchCidrReservationDescription>ReservationDescription</VSwitchCidrReservationDescription>\\n        <IpVersion>IPv4</IpVersion>\\n        <CreationTime>2023-03-14T10:02:37Z</CreationTime>\\n        <Type>prefix</Type>\\n        <AvailableCidrCount>10</AvailableCidrCount>\\n        <AssignedCidrCount>6</AssignedCidrCount>\\n        <Status>Assigned</Status>\\n    </VSwitchCidrReservations>\\n</ListVSwitchCidrReservationsResponse>","errorExample":""}]',
      'title' => '查询交换机预留网段',
    ),
    'CreateVSwitchCidrReservation' => 
    array (
      'summary' => '调用CreateVSwitchCidrReservation接口创建交换机预留网段。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源标签',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的交换机预留网段所属的交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-25navfgbue4g****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchCidrReservationName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的名称。

名称长度为2~128个字符，以英文字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ReservationName',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchCidrReservationDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的描述信息。不填则为空，默认值为空。

描述长度为2~256个字符，以英文字母或中文开头，不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ReservationDescription',
          ),
        ),
        4 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的IP版本。取值：

- **IPv4** （默认值）：IPv4版本。
- **IPv6**：IPv6版本。

',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        5 => 
        array (
          'name' => 'VSwitchCidrReservationMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的掩码。

- 当**IpVersion**取值为**IPv4**时，交换机预留网段的掩码长度范围必须要大于所属交换机的IPv4网段掩码长度且最大不超过28。
- 当**IpVersion**取值为**IPv6**时，交换机预留网段的掩码长度范围必须要大于所属交换机的IPv6网段掩码长度且最大不超过80。

> - **VSwitchCidrReservationMask**参数和**VSwitchCidrReservationCidr**参数必须输入一个。
> - 当您在交换机下添加预留网段后，该预留网段不能包含交换机对应的VPC的系统保留地址。',
            'type' => 'string',
            'required' => false,
            'example' => '28',
          ),
        ),
        6 => 
        array (
          'name' => 'VSwitchCidrReservationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段。

- 当**IpVersion**取值为**IPv4**时，交换机预留网段必须是其所属交换机IPv4网段的真子集且网段的掩码长度不超过28。
- 当**IpVersion**取值为**IPv6**时，交换机预留网段必须是其所属交换机IPv6网段的真子集且网段的掩码长度不超过80。

> - **VSwitchCidrReservationMask**参数和**VSwitchCidrReservationCidr**参数必须输入一个。
> - 当您在交换机下添加预留网段后，该预留网段不能包含交换机对应的VPC的系统保留地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.1.64/28',
          ),
        ),
        7 => 
        array (
          'name' => 'VSwitchCidrReservationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机预留网段的类型。取值：**prefix**，表示按段分配地址。

> 用户及云服务自动为弹性网卡ENI（Elastic Network Interface）分配网段时，必须从预留地址段分配。如果预留地址段的地址已经分配完，则系统会报错。
',
            'type' => 'string',
            'required' => false,
            'example' => 'prefix',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        9 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建交换机预留网段。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行创建。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '交换机预留网段的实例ID。',
            'type' => 'object',
            'properties' => 
            array (
              'VSwitchCidrReservationId' => 
              array (
                'description' => '交换机预留网段的实例ID。',
                'type' => 'string',
                'example' => 'vcr-bp1m12saqteraw3rp****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParamFormat',
            'errorMessage' => 'IllegalParamFormat',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParamFormat.VSwitchCidrReservationCidr',
            'errorMessage' => 'The param format of VSwitchCidrReservationCidr is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.VSwitch',
            'errorMessage' => 'The specified resource of VSwitch is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'UnsupportedFeature.ReservedType',
            'errorMessage' => 'The specified ReservedType is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'UnsupportedFeature.VSwitchIpv6',
            'errorMessage' => 'The ipv6 feature of  switch is not supported.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchCidrReservationCidr',
            'errorMessage' => 'The specified VSwitchCidrReservationCidr conflicts with existed cidr reservation or vswitch cidr.',
          ),
          6 => 
          array (
            'errorCode' => 'MissingParam.CidrReservationMaskOrCidrReservationCidr',
            'errorMessage' => 'Either VSwitchCidrReservationMask or VSwitchCidrReservationCidr should be specified.',
          ),
          7 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'UnsupportedRegion',
          ),
          8 => 
          array (
            'errorCode' => 'UnsupportedFeature.VpcAdvancedFeature',
            'errorMessage' => 'UnsupportedFeature.VpcAdvancedFeature',
          ),
          9 => 
          array (
            'errorCode' => 'QuotaExceeded.VSwitchCidrReservationMask',
            'errorMessage' => 'The quota of VSwitchCidrReservationMask is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.CidrReservationCount',
            'errorMessage' => 'The quota of VSwitchCidrReservation is exceeded.',
          ),
          11 => 
          array (
            'errorCode' => 'Conflict.CidrReservationMaskAndCidrReservationCidr',
            'errorMessage' => 'The specified VSwitchCidrReservationMask and  VSwitchCidrReservationCidr is conflict.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.CidrNotEnoughInVSwitch',
            'errorMessage' => 'No enough cidr to allocate in this vswitch.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.SystemReservedIpContained',
            'errorMessage' => 'The specified VSwitchCidrReservationCidr cannot contain system reserved IP addresses.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.AlreadyUsedIpContained',
            'errorMessage' => 'The specified VSwitchCidrReservationCidr cannot contain already used IP addresses.',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectStatus.VSWITCH',
            'errorMessage' => 'The status of the specified VSwitch is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.VSwitchCidrReservationMask',
            'errorMessage' => 'The specified VSwitchCidrReservationMask must be at least 2 bits greater than the vSwitch mask.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListVSwitchCidrReservations',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"VSwitchCidrReservationId\\": \\"vcr-bp1m12saqteraw3rp****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","type":"json"}]',
      'title' => '创建交换机预留网段',
      'description' => '调用该接口创建交换机预留网段时，请注意以下事项：
- VPC中单个交换机IPv4、IPv6最大预留网段数目均为10个。
- 当您在交换机下添加预留网段后，该预留网段不能包含交换机对应的VPC的系统保留地址。
- **CreateVSwitchCidrReservation**接口属于异步接口，即系统会返回一个实例ID，但该交换机预留网段尚未创建完成，系统后台任务仍在进行中。您可以调用
[ListVSwitchCidrReservations](~~610155~~)查询交换机预留网段的创建状态：
    - 当交换机预留网段处于**Assigning**状态时，表示交换机预留网段正在分配中。
    - 当交换机预留网段处于**Assigned**状态时，表示交换机预留网段已分配。
- 当您分配IPv4版本的交换机预留网段时，该交换机的第1个和最后3个IP地址为系统保留地址。这4个保留地址不会被分配出去。
- 当您分配IPv6版本的交换机预留网段时，该交换机的第1个和最后9个IP地址为系统保留地址。这10个保留地址不会被分配出去。
以IPv4预留网段为例，例如交换机网段为192.168.1.0/24，则系统保留地址为192.168.1.0、192.168.1.253、192.168.1.254和192.168.1.255，分配的预留网段中不能包含这4个IP地址在内。',
    ),
    'GetVSwitchCidrReservationUsage' => 
    array (
      'summary' => '查询前缀列表用量。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchCidrReservationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的交换机预留网段的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vcr-bp1m12saqteraw3rp****',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '交换机所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'CidrReservationUsages' => 
              array (
                'description' => '已分配使用的交换机预留网段列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '已分配使用的交换机预留网段列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VSwitchCidrReservationId' => 
                    array (
                      'title' => '预留网段实例Id',
                      'description' => '交换机预留网段的实例ID。',
                      'type' => 'string',
                      'example' => 'vcr-bp1m12saqteraw3rp****',
                    ),
                    'VSwitchId' => 
                    array (
                      'title' => '交换机实例Id',
                      'description' => '预留网段所属的交换机ID。',
                      'type' => 'string',
                      'example' => 'vsw-25navfgbue4g****',
                    ),
                    'ResourceId' => 
                    array (
                      'title' => '前缀网段绑定资源的实例Id',
                      'description' => '从预留网段分配使用的弹性网卡的实例ID。',
                      'type' => 'string',
                      'example' => 'eni-bp14v2sdd3v8htln****',
                    ),
                    'ResourceType' => 
                    array (
                      'title' => '前缀网段绑定资源的类型',
                      'description' => '预留网段分配使用的实例类型。取值：**NetworkInterface**，弹性网卡类型。',
                      'type' => 'string',
                      'example' => 'NetworkInterface',
                    ),
                    'IpPrefixId' => 
                    array (
                      'title' => '前缀网段实例id',
                      'description' => '按段分配的预留网段实例ID。',
                      'type' => 'string',
                      'example' => 'vcr-bp1m12saqteraw3rp****',
                    ),
                    'IpPrefixCidr' => 
                    array (
                      'description' => '从当前预留网段中已分配给弹性网卡使用的前缀网段（prefix）。',
                      'type' => 'string',
                      'example' => '192.168.1.64/28',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.CidrReservation',
            'errorMessage' => 'The specified resource of VSwitchCidrReservation is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 10,\\n  \\"MaxResults\\": 10,\\n  \\"CidrReservationUsages\\": [\\n    {\\n      \\"VSwitchCidrReservationId\\": \\"vcr-bp1m12saqteraw3rp****\\",\\n      \\"VSwitchId\\": \\"vsw-25navfgbue4g****\\",\\n      \\"ResourceId\\": \\"eni-bp14v2sdd3v8htln****\\",\\n      \\"ResourceType\\": \\"NetworkInterface\\",\\n      \\"IpPrefixId\\": \\"vcr-bp1m12saqteraw3rp****\\",\\n      \\"IpPrefixCidr\\": \\"192.168.1.64/28\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetVSwitchCidrReservationUsageResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>10</TotalCount>\\n    <MaxResults>10</MaxResults>\\n    <CidrReservationUsages>\\n        <VSwitchCidrReservationId>vcr-bp1m12saqteraw3rp****</VSwitchCidrReservationId>\\n        <VSwitchId>vsw-25navfgbue4g****</VSwitchId>\\n        <ResourceId>eni-bp14v2sdd3v8htln****</ResourceId>\\n        <ResourceType>NetworkInterface</ResourceType>\\n        <IpPrefixId>vcr-bp1m12saqteraw3rp****</IpPrefixId>\\n        <IpPrefixCidr>192.168.1.64/28</IpPrefixCidr>\\n    </CidrReservationUsages>\\n</GetVSwitchCidrReservationUsageResponse>","errorExample":""}]',
      'title' => '查询交换机预留网段的用量情况',
    ),
    'ModifyVSwitchCidrReservationAttribute' => 
    array (
      'summary' => '修改交换机预留网段的名称和描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchCidrReservationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的交换机预留网段的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vcr-bp1m12saqteraw3rp****',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchCidrReservationName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的交换机预留网段的名称。

名称长度为2~128个字符，以英文字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ReservationName',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchCidrReservationDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的交换机预留网段的描述信息。不填则为空，默认值为空。

描述长度为2~256个字符，以英文字母或中文开头，不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ReservationDescription',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.CidrReservation',
            'errorMessage' => 'ResourceNotFound.CidrReservation',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParamFormat',
            'errorMessage' => 'IllegalParamFormat',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVSwitchCidrReservationAttributeResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ModifyVSwitchCidrReservationAttributeResponse>","errorExample":""}]',
      'title' => '修改交换机预留网段的名称和描述信息',
      'description' => '## 使用说明

**ModifyVSwitchCidrReservationAttribute**接口不支持在同一个交换机中并发修改预留网段的名称和描述信息。',
    ),
    'CreateVSwitch' => 
    array (
      'summary' => '创建一个交换机。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        1 => 
        array (
          'name' => 'ZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的交换机所属的可用区ID。

您可以通过调用[DescribeZones](~~36064~~)接口获取可用区ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou-b',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的交换机的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的网段。交换机网段要求如下： 

- 交换机的网段的掩码长度范围为16～29位。  

- 交换机的网段必须从属于所在VPC的网段。 

- 交换机的网段不能与所在VPC中路由条目的目标网段相同，但可以是目标网段的子集。 

- 交换机的网段不能是100.64.0.0/10及其子网网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.16.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机IPv6网段的最后8比特位，取值：**0**～**255**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的交换机所属的VPC ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-257gqcdfvx6n****',
          ),
        ),
        6 => 
        array (
          'name' => 'VSwitchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的名称。 

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'vSwitch-1',
          ),
        ),
        7 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的描述信息。  

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'vSwitch',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        9 => 
        array (
          'name' => 'VpcIpv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的IPv6网段。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:0:6a::/56',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'VSwitchId' => 
              array (
                'description' => '创建的交换机的ID。',
                'type' => 'string',
                'example' => 'vsw-25navfgbue4g****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ResourceConflict',
            'errorMessage' => 'vpc only support one cloud box.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.IdempotentTokenProcessing',
            'errorMessage' => 'Action is processing.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'Invalid description.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVSwitchName.Malformed',
            'errorMessage' => 'Specified virtual switch name is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVSwitchDiscription.Malformed',
            'errorMessage' => 'Specified  virtual switch description is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'Abs.Vpc.InvalidDescription.Malformed',
            'errorMessage' => 'Specified virtual switch name is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'MissingParam.vpcId',
            'errorMessage' => 'The parameter vpcId is mandatory.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotAvailable',
            'errorMessage' => 'Resource you requested is not available in this region or zone.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified CIDR block is not valid in VPC.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Overlapped',
            'errorMessage' => 'Specified CIDR block overlapped with other subnets.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.VSwitch',
            'errorMessage' => 'Virtual switch quota exceeded.',
          ),
          11 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'Some virtual switch is modifying within the same VPC.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidCirdrBlock.MaskLength',
            'errorMessage' => 'Specified CIDR block is not valid .',
          ),
          14 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          15 => 
          array (
            'errorCode' => 'CreateVSwitch.IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          17 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          18 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          19 => 
          array (
            'errorCode' => 'VPC.SWITCH.RULE.QUOTA.NOT.EXISTS',
            'errorMessage' => 'vSwitch quota rule not exists.',
          ),
          20 => 
          array (
            'errorCode' => 'Forbidden.VpcNotFound',
            'errorMessage' => 'Specified VPC can not found.',
          ),
          21 => 
          array (
            'errorCode' => 'RouteConflict.AlreadyExist',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.CidrAcross',
            'errorMessage' => 'Classic link instance cidr must not across.',
          ),
          23 => 
          array (
            'errorCode' => 'Duplicated.ClientToken',
            'errorMessage' => '%s',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6CidrBlockExisted',
            'errorMessage' => '%s',
          ),
          25 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6CidrBlock',
            'errorMessage' => '%s',
          ),
          26 => 
          array (
            'errorCode' => 'OperationFailed.VpcIpv6Disabled',
            'errorMessage' => '%s',
          ),
          27 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          28 => 
          array (
            'errorCode' => 'OperationFailed.NotifyCenCreate',
            'errorMessage' => 'Failed to notify cen when create vswitch.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          30 => 
          array (
            'errorCode' => 'UnsupportedFeature.CloudBoxIpv6',
            'errorMessage' => 'The IPv6 feature is not supported by cloud box.',
          ),
          31 => 
          array (
            'errorCode' => 'OperationDenied.VpcPeerExist',
            'errorMessage' => 'The operation is not allowed because the VPC peer exists.',
          ),
          32 => 
          array (
            'errorCode' => 'OperationDenied.CenAttached',
            'errorMessage' => 'The operation is not allowed because the VPC is attached to CEN.',
          ),
          33 => 
          array (
            'errorCode' => 'OperationDenied.NatgwExist',
            'errorMessage' => 'The operation is not allowed because the NAT gateway exists in VPC.',
          ),
          34 => 
          array (
            'errorCode' => 'MissingParam.Ipv6CidrBlock',
            'errorMessage' => 'The parameter Ipv6CidrBlock is mandatory.',
          ),
          35 => 
          array (
            'errorCode' => 'IllegalParam.VpcIpv6CidrBlock',
            'errorMessage' => '%s',
          ),
          36 => 
          array (
            'errorCode' => 'OperationDenied.OtherSubnetCreating',
            'errorMessage' => 'The operation is not allowed because the other VSwitch is creating.',
          ),
          37 => 
          array (
            'errorCode' => 'OperationDenied.VpcPeerExists',
            'errorMessage' => 'The operation is not allowed because the VpcPeer exists.',
          ),
          38 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The param of CidrBlock [%s] is illegal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid.NotExist',
            'errorMessage' => 'witch mask rule not exists.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidStatus.RouteEntry',
            'errorMessage' => 'RouteEntry status error.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidZoneId.NotFound',
            'errorMessage' => 'Specified zone does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VSwitchId\\": \\"vsw-25navfgbue4g****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVSwitchResponse>\\n    <VSwitchId>vsw-25navfgbue4g****</VSwitchId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</CreateVSwitchResponse>","errorExample":""}]',
      'title' => '创建交换机',
      'description' => '调用该接口创建交换机时，请注意以下事项：

- 每个VPC内的交换机数量不能超过150个。  

- 每个交换机网段的第1个和最后3个IP地址为系统保留地址。例如192.168.1.0/24的系统保留地址为192.168.1.0、192.168.1.253、192.168.1.254和192.168.1.255。  

- 交换机下的云产品实例数量不允许超过VPC剩余的可用云产品实例数量（15000减去当前云产品实例数量）。  

- 一个云产品实例只能属于一个交换机。  

- 交换机不支持组播和广播。

- 交换机创建成功后，无法修改网段。

- **CreateVSwitch**接口属于异步接口，即系统会返回一个实例ID，但该交换机尚未创建完成，系统后台任务仍在进行中。您可以调用
[DescribeVSwitchAttributes](~~94567~~)查询交换机的创建状态：
    - 当交换机处于**Pending**状态时，表示交换机正在配置中。
    - 当交换机处于**Available**状态时，表示交换机可用。
- **CreateVSwitch**接口不支持在同一个VPC中并发创建交换机。
- **CreateVSwitch**接口不支持创建100.64.0.0/10及其子网网段的交换机。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDefaultVSwitch' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的默认交换机所属的可用区ID。

您可以通过调用[DescribeZones](~~36064~~)接口获取可用区ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou-b',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的默认交换机的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机IPv6网段的最后8比特位，取值：**0**～**255**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建的默认交换机的ID。',
            'type' => 'object',
            'properties' => 
            array (
              'VSwitchId' => 
              array (
                'description' => '创建的默认交换机的ID。',
                'type' => 'string',
                'example' => 'vsw-bp1a4b5qhmxftjimq****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'Invalid description.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVSwitchName.Malformed',
            'errorMessage' => 'Specified virtual switch name is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVSwitchDiscription.Malformed',
            'errorMessage' => 'Specified  virtual switch description is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'Abs.Vpc.InvalidDescription.Malformed',
            'errorMessage' => 'Specified virtual switch name is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotAvailable',
            'errorMessage' => 'Resource you requested is not available in this region or zone.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified CIDR block is not valid in VPC.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Overlapped',
            'errorMessage' => 'Specified CIDR block overlapped with other subnets.',
          ),
          7 => 
          array (
            'errorCode' => 'QuotaExceeded.VSwitch',
            'errorMessage' => 'Virtual switch quota exceeded.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'Some virtual switch is modifying within the same VPC.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidCirdrBlock.MaskLength',
            'errorMessage' => 'Specified CIDR block is not valid .',
          ),
          11 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          12 => 
          array (
            'errorCode' => 'CreateVSwitch.IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          14 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          15 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          16 => 
          array (
            'errorCode' => 'VPC.SWITCH.RULE.QUOTA.NOT.EXISTS',
            'errorMessage' => 'vSwitch quota rule not exists.',
          ),
          17 => 
          array (
            'errorCode' => 'Forbidden.VpcNotFound',
            'errorMessage' => 'Specified VPC can not found.',
          ),
          18 => 
          array (
            'errorCode' => 'RouteConflict.AlreadyExist',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.CidrAcross',
            'errorMessage' => 'Classic link instance cidr must not across.',
          ),
          20 => 
          array (
            'errorCode' => 'Duplicated.ClientToken',
            'errorMessage' => '%s',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6CidrBlockExisted',
            'errorMessage' => '%s',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6CidrBlock',
            'errorMessage' => '%s',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.VpcIpv6Disabled',
            'errorMessage' => '%s',
          ),
          24 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.DefaultVpcNotExist',
            'errorMessage' => '%s',
          ),
          26 => 
          array (
            'errorCode' => 'UnsupportedFeature.CloudBoxIpv6',
            'errorMessage' => 'The IPv6 feature is not supported by cloud box.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationDenied.VpcPeerExist',
            'errorMessage' => 'The operation is not allowed because the VPC peer exists.',
          ),
          28 => 
          array (
            'errorCode' => 'OperationDenied.CenAttached',
            'errorMessage' => 'The operation is not allowed because the VPC is attached to CEN.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationDenied.NatgwExist',
            'errorMessage' => 'The operation is not allowed because the NAT gateway exists in VPC.',
          ),
          30 => 
          array (
            'errorCode' => 'OperationDenied.OtherSubnetCreating',
            'errorMessage' => 'other subnet is creating',
          ),
          31 => 
          array (
            'errorCode' => 'OperationFailed.DefaultVSwitchExist',
            'errorMessage' => 'A default vSwitch already exists in the zone.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid.NotExist',
            'errorMessage' => 'witch mask rule not exists.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidStatus.RouteEntry',
            'errorMessage' => 'RouteEntry status error.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidZoneId.NotFound',
            'errorMessage' => 'Specified zone does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VSwitchId\\": \\"vsw-bp1a4b5qhmxftjimq****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateDefaultVSwitchResponse>\\n    <VSwitchId>vsw-bp1a4b5qhmxftjimq****</VSwitchId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</CreateDefaultVSwitchResponse>","errorExample":""}]',
      'title' => '创建默认交换机',
      'summary' => '调用CreateDefaultVSwitch接口创建一个默认的交换机。',
      'description' => '调用该接口创建默认交换机时，请注意以下事项：
- 每个默认交换机网段的第1个和最后3个IP地址为系统保留地址。例如192.168.1.0/24的系统保留地址为192.168.1.0、192.168.1.253、192.168.1.254和192.168.1.255。  

- 默认交换机下的云产品实例数量不允许超过VPC剩余的可用云产品实例数量（15000减去当前云产品实例数量）。  

- 默认交换机不支持组播和广播。

- 默认交换机创建成功后，无法修改网段。

- **CreateDefaultVSwitch**接口属于异步接口，即系统会返回一个实例ID，但该默认交换机尚未创建完成，系统后台任务仍在进行中。您可以调用[DescribeVSwitchAttributes](~~94567~~)查询默认交换机的创建状态：
    - 当默认交换机处于**Pending**状态时，表示默认交换机正在配置中。
    - 当默认交换机处于**Available**状态时，表示默认交换机可用。
- 当指定地域的可用区已有默认交换机时，调用该接口创建默认交换机会失败。
- 创建默认交换机时，需要先创建一个默认VPC。您可以通过调用[CreateDefaultVpc](~~609152~~)接口创建默认VPC。',
    ),
    'CheckCanAllocateVpcPrivateIpAddress' => 
    array (
      'summary' => '调用CheckCanAllocateVpcPrivateIpAddress接口查询交换机下的私网IP地址是否可用。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'RegionId',
            'description' => '要查询的私网IP地址所属交换机的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VSwitchId',
            'description' => '要查询的私网IP地址所属的交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-m5ew3t46z2drmifnt****',
          ),
        ),
        2 => 
        array (
          'name' => 'PrivateIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'PrivateIpAddress',
            'description' => '要查询是否可用的私网IP地址，该私网IP地址必须属于**VSwitchId**参数中输入的交换机。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.7',
          ),
        ),
        3 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'IpVersion',
            'description' => '要查询的私网IP地址的类型。取值：

- **ipv4**：IPv4类型。当查询的私网IP地址为IPv4类型时，该参数为选填。
- **ipv6**：IPv6类型。当查询的私网IP地址为IPv6类型时，该参数为必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema object',
            'description' => 'Schema object',
            'type' => 'object',
            'properties' => 
            array (
              'CanAllocate' => 
              array (
                'description' => '查询的私网IP地址是否可用。取值：

- **true**：指定交换机下，该私网IP地址没有被占用，可以使用。
- **false**：指定交换机下，该私网IP地址已被占用，无法使用。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '93360B0-2969-40BF-8542-EBB34FD358AB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PARAMETER_ILLEGAL',
            'errorMessage' => 'Parameter illegal.Parameter is ipVersion',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.VSwitchId',
            'errorMessage' => 'The specified resource vswitch is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'Mismatch.VSwitchAndPrivateIpAddress',
            'errorMessage' => 'The vswitch and privateIpAddress are mismatched.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CanAllocate\\": true,\\n  \\"RequestId\\": \\"93360B0-2969-40BF-8542-EBB34FD358AB\\"\\n}","errorExample":""},{"type":"xml","example":"<CheckCanAllocateVpcPrivateIpAddressResponse>\\n    <CanAllocate>true</CanAllocate>\\n    <RequestId>93360B0-2969-40BF-8542-EBB34FD358AB</RequestId>\\n</CheckCanAllocateVpcPrivateIpAddressResponse>","errorExample":""}]',
      'title' => '查询交换机下的私网IP可用性',
    ),
    'DeleteVSwitch' => 
    array (
      'summary' => '调用DeleteVSwitch接口删除交换机。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的交换机的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-asdfjlna****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的交换机的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.OtherSubnetProcessing',
            'errorMessage' => 'other subnet is processing.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'vpc subnet is in middle status.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation',
            'errorMessage' => 'Resources deployed in the vSwitch have not been deleted.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.HaVip',
            'errorMessage' => 'VSwitch cannot be deleted when there are some HaVip dependent with it.',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.RouteTable',
            'errorMessage' => 'VSwitch cannot be deleted when associated with route table',
          ),
          6 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          8 => 
          array (
            'errorCode' => 'DependencyViolation.SNAT',
            'errorMessage' => 'The vswitch cannot be deleted when used by snat.',
          ),
          9 => 
          array (
            'errorCode' => 'DeleteVSwitch.IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          10 => 
          array (
            'errorCode' => 'AttrMismatching.NaclAndBindInstance',
            'errorMessage' => 'The network acl and resource not in same vpc.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidResource.NotBinding',
            'errorMessage' => 'The resource has not been binded.',
          ),
          12 => 
          array (
            'errorCode' => 'DependencyViolation.SnatEntry',
            'errorMessage' => 'VSwitch cannot be deleted when snat entry exist.',
          ),
          13 => 
          array (
            'errorCode' => 'DependencyViolation.NetworkAcl',
            'errorMessage' => 'VSwitch cannot be deleted when network acl exist.',
          ),
          14 => 
          array (
            'errorCode' => 'DependencyViolation.EnhancedNatgw',
            'errorMessage' => 'VSwitch cannot be deleted when natgw exist.',
          ),
          15 => 
          array (
            'errorCode' => 'DependencyViolation.ResourceShare',
            'errorMessage' => 'VSwitch cannot be deleted when resource share exist.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.SystemBusy',
            'errorMessage' => 'Operation failed because system is busy.',
          ),
          17 => 
          array (
            'errorCode' => 'DependencyViolation.MulticastDomain',
            'errorMessage' => 'VSwitch cannot be deleted when associated with multicast domain.',
          ),
          18 => 
          array (
            'errorCode' => 'DependencyViolation.VSwitchCidrReservation',
            'errorMessage' => 'VSwitch cannot be deleted when vswitch cidr reservation exist.',
          ),
          19 => 
          array (
            'errorCode' => 'DependencyViolation.CloudService',
            'errorMessage' => 'VSwitch cannot be deleted when uesd by cloud service.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'VSwitch not exist.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6InstanceExist',
            'errorMessage' => 'Operation failed because vswitch has ipv6 instance.',
          ),
          22 => 
          array (
            'errorCode' => 'DependencyViolation.Ipv6Address',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified instance is not found during access authentication.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectVSwitchId',
            'errorMessage' => 'Specified vSwtich instance is not found during access authentication.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'VSwitch not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'Vswtich status not stable.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.VSwitchCidrReservation',
            'errorMessage' => 'VSwitch cannot be deleted when vswitch cidr reservation exist.',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.RouterInterface',
            'errorMessage' => 'Specified object has dependent resources RouterInterface.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVSwitchResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteVSwitchResponse>","errorExample":""}]',
      'title' => '删除交换机',
      'description' => '调用该接口删除交换机时，请注意以下事项： 

- 删除交换机之前，需要先释放或移走VPC内的所有资源，包括交换机、云产品实例、路由器接口、HaVip等。  

- 只有处于**Available**状态的交换机可以被删除。  

- 交换机所在的VPC正在创建或删除交换机或路由条目时，无法删除交换机。 

- **DeleteVSwitch**接口属于异步接口，即系统会返回一个请求ID，但该交换机尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVSwitchAttributes](~~94567~~)查询交换机的删除状态：
    - 当交换机处于**Pending**状态时，表示交换机正在删除中。
    - 当查询不到指定的交换机时，表示交换机删除成功。

- **DeleteVSwitch**接口不支持并发删除同一个交换机。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVSwitchAttribute' => 
    array (
      'summary' => '调用ModifyVSwitchAttribute接口修改指定交换机的名称和描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 交换机的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-25nacdfvue4****',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机要修改的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'VSwitch-1',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机要修改的描述信息。  

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my vswitch.',
          ),
        ),
        4 => 
        array (
          'name' => 'Ipv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机IPv6网段的最后8比特位，取值：**0**~**255**。

该参数仅当交换机所属的VPC开通IPv6功能支持配置。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableIPv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机是否开通IPv6功能。取值：

- **true**：开通IPv6功能。
- **false**（默认值）：未开通IPv6功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'VpcIpv6CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所在VPC的IPv6网段。
该参数仅当VPC开通IPv6功能时支持配置。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:312:3e00::/56',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'Invalid description.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVSwitchName.Malformed',
            'errorMessage' => 'Specified virtual switch name is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVSwitchDiscription.Malformed',
            'errorMessage' => 'Specified virtual switch description is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.VRouterNotFound',
            'errorMessage' => 'specified virtual switch is not found during access authentication.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6AlreadyEnabled',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.VpcIpv6Disabled',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6CidrBlockExisted',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6CidrBlock',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.VSwitch',
            'errorMessage' => 'The status of the specified VSwitch is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'UnsupportedFeature.CloudBoxIpv6',
            'errorMessage' => 'The IPv6 feature is not supported by cloud box.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.VpcIpv6CidrBlock',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6InstanceExist',
            'errorMessage' => 'Operation failed because vswitch has ipv6 instance.',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteEntry',
            'errorMessage' => 'The status of the specified routeEntry is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.IPv6Disabled',
            'errorMessage' => 'Operation failed because IPv6 is not enabled for the vSwitch.',
          ),
          14 => 
          array (
            'errorCode' => 'ParamExclusive.DisableIpv6AndIpv6CidrBlock',
            'errorMessage' => 'DisableIpv6 and Ipv6Cidr are mutually exclusive.',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified virtual switch does not exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVSwitchAttributeResponse>\\r\\n<RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\r\\n</ModifyVSwitchAttributeResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<ModifyVSwitchAttributeResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</ModifyVSwitchAttributeResponse>"}]',
      'title' => '修改指定交换机的名称和描述信息',
      'description' => '- **ModifyVSwitchAttribute**接口属于异步接口，即系统会返回一个请求ID，但该交换机的名称和描述信息尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVSwitchAttributes](~~94567~~)查询交换机的修改状态：
    - 当交换机的状态处于**Pending**状态时，表示交换机的名称和描述信息正在修改中。
    - 当交换机状态处于**Available**状态时，表示交换机可用。
- **ModifyVSwitchAttribute**接口不支持并发修改同一个交换机的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVSwitches' => 
    array (
      'summary' => '查询可组网的信息，内网按vswitch进行组网。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的交换机所属VPC的ID。 

> **RegionId**和**VpcId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-25cdvfeq58pl****',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的交换机的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-23dscddcffvf3****',
          ),
        ),
        2 => 
        array (
          'name' => 'ZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所属可用区的ID。您可以通过调用[DescribeZones](~~36064~~)接口获取可用区ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-d',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所属地域的ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。

> **RegionId**和**VpcId**参数至少输入一个。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'VSwitchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'vSwitch',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建资源（接口功能）。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询指定地域下的默认交换机，取值： 

- **true**：查询指定地域下的默认交换机。  

- **false**：不查询指定地域下的默认交换机。  

如果不传入该参数，系统默认查询指定地域下的所有交换机。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        8 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 分页查询时每页的行数，最大值为**50**。默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        11 => 
        array (
          'name' => 'VSwitchOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源归属的阿里云账号ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2546073170691****',
          ),
        ),
        12 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询指定地域下开启IPv6网段的交换机，取值：

- **true**：查询指定地域下开启IPv6网段的交换机。

- **false**：不查询指定地域下开启IPv6网段的交换机。

如果不传入该参数，系统默认查询指定地域下的所有交换机。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        13 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9A572171-4E27-40D1-BD36-D26C9E71E29E',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VSwitches' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VSwitch' => 
                  array (
                    'description' => '交换机的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '交换机数据结构体。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => '交换机所属VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-257gcdcdq64****',
                        ),
                        'Status' => 
                        array (
                          'description' => '交换机的状态，取值： 

- **Pending**：配置中。

- **Available**：可用。
   
',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '交换机的创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-18T12:43:57Z',
                        ),
                        'IsDefault' => 
                        array (
                          'description' => '是否是默认交换机。取值：

- **true**：是默认交换机。

- **false**：非默认交换机。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'AvailableIpAddressCount' => 
                        array (
                          'description' => '交换机中可用的IP地址数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'NetworkAclId' => 
                        array (
                          'description' => '网络ACL的ID。',
                          'type' => 'string',
                          'example' => 'nacl-a2do9e413e0spzasx****',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => '资源归属的阿里云账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '25346073170691****',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => '交换机的ID。',
                          'type' => 'string',
                          'example' => 'vsw-25bcdxs7pv1****',
                        ),
                        'CidrBlock' => 
                        array (
                          'description' => '交换机的IPv4网段。',
                          'type' => 'string',
                          'example' => '172.16.0.0/24',
                        ),
                        'Description' => 
                        array (
                          'description' => '交换机的描述信息。',
                          'type' => 'string',
                          'example' => 'VSwitchDescription',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '交换机所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph6aiy****',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => '交换机所属的可用区。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-d',
                        ),
                        'Ipv6CidrBlock' => 
                        array (
                          'description' => '交换机的IPv6网段。',
                          'type' => 'string',
                          'example' => '2408:4002:10c4:4e03::/64',
                        ),
                        'VSwitchName' => 
                        array (
                          'description' => '交换机的名称。',
                          'type' => 'string',
                          'example' => 'vSwitch',
                        ),
                        'ShareType' => 
                        array (
                          'description' => '交换机的共享类型。

- 取值为空时，表示该交换机为普通交换机。
- 取值为**Shared**时，表示该交换机为共享交换机。
- 取值为**Sharing**时，表示该交换机正在被他人共享。
',
                          'type' => 'string',
                          'example' => 'Shared',
                        ),
                        'EnabledIpv6' => 
                        array (
                          'description' => '是否为交换机开启IPv6网段并配置交换机的IPv6网段。取值如下：
- **true**：开启。
- **false**：不开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '交换机标签信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签信息数据结构体。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '交换机绑定的标签键。',
                                    'type' => 'string',
                                    'example' => 'department',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '交换机绑定的标签值。',
                                    'type' => 'string',
                                    'example' => 'dev',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'RouteTable' => 
                        array (
                          'description' => '路由表信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RouteTableId' => 
                            array (
                              'description' => '交换机关联的路由表ID。',
                              'type' => 'string',
                              'example' => 'vrt-bp145q7glnuzdv****',
                            ),
                            'RouteTableType' => 
                            array (
                              'description' => '交换机关联的路由表的类型：

- **System**：系统路由表。

- **Custom**：自定义路由表。',
                              'type' => 'string',
                              'example' => 'System',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.VpcNotFound',
            'errorMessage' => 'Specified VPC can not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'IellgalParameter.OwnerAccount',
            'errorMessage' => 'The specified parameter OwnerAccount is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.OwnerId',
            'errorMessage' => 'The specified parameter VSwitchOwnerId is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'VSwitch not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcIdNumber.NotSupported',
            'errorMessage' => 'The number of vpcIds exceeds the limit.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVSwitchIdNumber.NotSupported',
            'errorMessage' => 'The number of vSwitchIds exceeds the limit.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"9A572171-4E27-40D1-BD36-D26C9E71E29E\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VSwitches\\": {\\n    \\"VSwitch\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-257gcdcdq64****\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"CreationTime\\": \\"2022-01-18T12:43:57Z\\",\\n        \\"IsDefault\\": true,\\n        \\"AvailableIpAddressCount\\": 1,\\n        \\"NetworkAclId\\": \\"nacl-a2do9e413e0spzasx****\\",\\n        \\"OwnerId\\": 0,\\n        \\"VSwitchId\\": \\"vsw-25bcdxs7pv1****\\",\\n        \\"CidrBlock\\": \\"172.16.0.0/24\\",\\n        \\"Description\\": \\"VSwitchDescription\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n        \\"ZoneId\\": \\"cn-hangzhou-d\\",\\n        \\"Ipv6CidrBlock\\": \\"2408:4002:10c4:4e03::/64\\",\\n        \\"VSwitchName\\": \\"vSwitch\\",\\n        \\"ShareType\\": \\"Shared\\",\\n        \\"EnabledIpv6\\": true,\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"department\\",\\n              \\"Value\\": \\"dev\\"\\n            }\\n          ]\\n        },\\n        \\"RouteTable\\": {\\n          \\"RouteTableId\\": \\"vrt-bp145q7glnuzdv****\\",\\n          \\"RouteTableType\\": \\"System\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVSwitchesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>9A572171-4E27-40D1-BD36-D26C9E71E29E</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VSwitches>\\n        <VpcId>vpc-257gcdcdq64****</VpcId>\\n        <Status>Available</Status>\\n        <CreationTime>2022-01-18T12:43:57Z</CreationTime>\\n        <IsDefault>true</IsDefault>\\n        <AvailableIpAddressCount>1</AvailableIpAddressCount>\\n        <NetworkAclId>nacl-a2do9e413e0spzasx****</NetworkAclId>\\n        <OwnerId>253460731706911260</OwnerId>\\n        <VSwitchId>vsw-25bcdxs7pv1****</VSwitchId>\\n        <CidrBlock>172.16.0.0/24</CidrBlock>\\n        <Description>VSwitchDescription</Description>\\n        <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n        <ZoneId>cn-hangzhou-d</ZoneId>\\n        <Ipv6CidrBlock>2408:4002:10c4:4e03::/64</Ipv6CidrBlock>\\n        <VSwitchName>vSwitch</VSwitchName>\\n        <ShareType>Shared</ShareType>\\n        <EnabledIpv6>true</EnabledIpv6>\\n        <Tags>\\n            <Key>department</Key>\\n            <Value>dev</Value>\\n        </Tags>\\n        <RouteTable>\\n            <RouteTableId>vrt-bp145q7glnuzdv****</RouteTableId>\\n            <RouteTableType>System</RouteTableType>\\n        </RouteTable>\\n    </VSwitches>\\n</DescribeVSwitchesResponse>","errorExample":""}]',
      'title' => '查询可组网信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVSwitchAttributes' => 
    array (
      'summary' => '调用DescribeVSwitchAttributes接口查询指定交换机的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的交换机ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-25naue4g****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会查询交换机的配置信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接查询交换机的配置信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '交换机的详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => '交换机所属的VPC ID。',
                'type' => 'string',
                'example' => 'vpc-257gq642n****',
              ),
              'Status' => 
              array (
                'description' => '交换机的状态，取值：

- **Pending**：配置中。 

- **Available**：可用。
',
                'type' => 'string',
                'example' => 'Pending',
              ),
              'CreationTime' => 
              array (
                'description' => '交换机的创建时间。',
                'type' => 'string',
                'example' => '2021-08-22T10:40:25Z',
              ),
              'IsDefault' => 
              array (
                'description' => '是否是默认交换机。取值：

- **true**：默认交换机。
- **false**：非默认交换机。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'AvailableIpAddressCount' => 
              array (
                'description' => '可用IP数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12',
              ),
              'NetworkAclId' => 
              array (
                'description' => '网络ACL规则。',
                'type' => 'string',
                'example' => '1',
              ),
              'OwnerId' => 
              array (
                'description' => '资源归属的阿里云账号ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '28768383240243****',
              ),
              'VSwitchId' => 
              array (
                'description' => '交换机的ID。',
                'type' => 'string',
                'example' => 'vsw-25b7pv15t****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7B48B4B9-1EAD-469F-B488-594DAB4B6A1A',
              ),
              'CidrBlock' => 
              array (
                'description' => '交换机的私网地址范围。',
                'type' => 'string',
                'example' => '192.168.0.1/24',
              ),
              'Description' => 
              array (
                'description' => '交换机的描述。',
                'type' => 'string',
                'example' => 'abc',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph****',
              ),
              'ZoneId' => 
              array (
                'description' => '交换机的所属可用区。',
                'type' => 'string',
                'example' => 'cn-beijing-a',
              ),
              'Ipv6CidrBlock' => 
              array (
                'description' => '交换机的IPv6网段。',
                'type' => 'string',
                'example' => '2408:XXXX:3c5:44e::/64',
              ),
              'VSwitchName' => 
              array (
                'description' => '交换机名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'ShareType' => 
              array (
                'description' => '交换机的共享类型。

- 取值为空时，表示该交换机为普通交换机。
- 取值为**Shared**时，表示该交换机为共享交换机。
- 取值为**Sharing**时，表示该交换机正在被他人共享。',
                'type' => 'string',
                'example' => 'Shared',
              ),
              'EnabledIpv6' => 
              array (
                'description' => '是否为交换机开启IPv6网段并配置交换机的IPv6网段。取值：
- **true**：开启。
- **false**：不开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RouteTable' => 
              array (
                'description' => '交换机的路由表信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'RouteTableId' => 
                  array (
                    'description' => '交换机关联的路由表ID。',
                    'type' => 'string',
                    'example' => 'vtb-bp145q7glnuzdv****',
                  ),
                  'RouteTableType' => 
                  array (
                    'description' => '路由表类型。取值：

- **System**：系统路由表。

- **Custom**：自定义路由表。',
                    'type' => 'string',
                    'example' => 'System',
                  ),
                ),
              ),
              'CloudResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                ),
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => '标签列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'Specified VSwitch can not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpcId\\": \\"vpc-257gq642n****\\",\\n  \\"Status\\": \\"Pending\\",\\n  \\"CreationTime\\": \\"2021-08-22T10:40:25Z\\",\\n  \\"IsDefault\\": false,\\n  \\"AvailableIpAddressCount\\": 12,\\n  \\"NetworkAclId\\": \\"1\\",\\n  \\"OwnerId\\": 0,\\n  \\"VSwitchId\\": \\"vsw-25b7pv15t****\\",\\n  \\"RequestId\\": \\"7B48B4B9-1EAD-469F-B488-594DAB4B6A1A\\",\\n  \\"CidrBlock\\": \\"192.168.0.1/24\\",\\n  \\"Description\\": \\"abc\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n  \\"ZoneId\\": \\"cn-beijing-a\\",\\n  \\"Ipv6CidrBlock\\": \\"2408:XXXX:3c5:44e::/64\\",\\n  \\"VSwitchName\\": \\"test\\",\\n  \\"ShareType\\": \\"Shared\\",\\n  \\"EnabledIpv6\\": true,\\n  \\"RouteTable\\": {\\n    \\"RouteTableId\\": \\"vtb-bp145q7glnuzdv****\\",\\n    \\"RouteTableType\\": \\"System\\"\\n  },\\n  \\"Tags\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"Key\\": \\"FinanceDept\\",\\n        \\"Value\\": \\"FinanceJoshua\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVSwitchAttributesResponse>\\n    <VpcId>vpc-257gq642n****</VpcId>\\n    <Status>Pending</Status>\\n    <CreationTime>2021-08-22T10:40:25Z</CreationTime>\\n    <IsDefault>false</IsDefault>\\n    <AvailableIpAddressCount>12</AvailableIpAddressCount>\\n    <NetworkAclId>1</NetworkAclId>\\n    <OwnerId>287683832402436800</OwnerId>\\n    <VSwitchId>vsw-25b7pv15t****</VSwitchId>\\n    <RequestId>7B48B4B9-1EAD-469F-B488-594DAB4B6A1A</RequestId>\\n    <CidrBlock>192.168.0.1/24</CidrBlock>\\n    <Description>abc</Description>\\n    <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n    <ZoneId>cn-beijing-a</ZoneId>\\n    <Ipv6CidrBlock>2408:XXXX:3c5:44e::/64</Ipv6CidrBlock>\\n    <VSwitchName>test</VSwitchName>\\n    <ShareType>Shared</ShareType>\\n    <RouteTable>\\n        <RouteTableId>vtb-bp145q7glnuzdv****</RouteTableId>\\n        <RouteTableType>System</RouteTableType>\\n    </RouteTable>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</DescribeVSwitchAttributesResponse>","errorExample":""}]',
      'title' => '查询指定交换机的配置信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVSwitchCidrReservation' => 
    array (
      'summary' => '删除交换机预留网段。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchCidrReservationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的交换机预留网段的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vcr-bp1m12saqteraw3rp****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.IpPrefix',
            'errorMessage' => 'DependencyViolation.IpPrefix',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.CidrReservation',
            'errorMessage' => 'The status of the CIDR reservation is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.CidrReservation',
            'errorMessage' => 'reserve segment not exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.CidrReservation',
            'errorMessage' => 'ResourceNotFound.CidrReservation',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListVSwitchCidrReservations',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVSwitchCidrReservationResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteVSwitchCidrReservationResponse>","errorExample":""}]',
      'title' => '删除交换机预留网段',
      'description' => '- 在您调用该接口删除交换机预留网段前，请确保从该预留网段给弹性网卡ENI（Elastic Network Interface）分配的前缀网段均已删除。如有请先调用[UnassignPrivateIpAddresses](~~85919~~)或[UnassignIpv6Addresses](~~98611~~)接口释放弹性网卡的IPv4或者IPv6地址。
- **DeleteVSwitchCidrReservation**接口属于异步接口，即系统会返回一个实例ID，但该交换机预留网段尚未删除成功，系统后台任务仍在进行中。您可以调用
[ListVSwitchCidrReservations](~~610155~~)查询交换机预留网段的删除状态：
    - 当交换机预留网段处于**Releasing**状态时，表示交换机预留网段正在释放中。
    - 当交换机预留网段处于**Released**状态时，表示交换机预留网段已释放。',
    ),
    'CreateRouteEntry' => 
    array (
      'summary' => '调用CreateRouteEntry在VPC路由器或边界路由器（VBR）上创建自定义路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '37635',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREvpcJSBF65',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要添加自定义路由条目的路由表ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp145q7glnuzd****',
          ),
        ),
        2 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由条目的目标网段，支持IPv4、IPv6、前缀列表的目标网段和前缀列表的实例ID。需满足以下要求：
          
- 目标网段不能指向100.64.0.0/10或被100.64.0.0/10包含。  
 
- 同一张路由表内的不同路由条目的目标网段不能相同。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.0.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'NextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由条目的下一跳实例的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-j6c2fp57q8rr4jlu****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，请确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要添加的自定义路由条目的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由条目的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        7 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由条目的下一跳的类型，取值： 

- **Instance**（默认值）：ECS实例。

- **HaVip**：高可用虚拟IP。  

- **RouterInterface**：路由器接口。

- **NetworkInterface**：弹性网卡。

- **VpnGateway**：VPN网关。

- **IPv6Gateway**：IPv6网关。

- **NatGateway**：NAT网关。

- **Attachment**：转发路由器。

- **VpcPeer**：VPC对等连接。
- **Ipv4Gateway**：IPv4网关。
- **GatewayEndpoint**：网关终端节点。
- **Ecr**：专线网关。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'HaVip' => 'HaVip',
              'VpnGateway' => 'VpnGateway',
              'VpcPeer' => 'VpcPeer',
              'Instance' => 'Instance',
              'Ecr' => 'Ecr',
              'NetworkInterface' => 'NetworkInterface',
              'RouterInterface' => 'RouterInterface',
              'NatGateway' => 'NatGateway',
              'Attachment' => 'Attachment',
              'IPv6Gateway' => 'IPv6Gateway',
              'Ipv4Gateway' => 'Ipv4Gateway',
              'GatewayEndpoint' => 'GatewayEndpoint',
            ),
            'example' => 'RouterInterface',
          ),
        ),
        8 => 
        array (
          'name' => 'NextHopList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '下一跳的信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '下一跳的信息。',
              'type' => 'object',
              'properties' => 
              array (
                'NextHopId' => 
                array (
                  'description' => 'ECMP路由的下一跳实例的ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ri-2zeo3xzyf3cd8r4****',
                ),
                'Weight' => 
                array (
                  'description' => 'ECMP路由的下一跳的路由权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '10',
                ),
                'NextHopType' => 
                array (
                  'description' => 'ECMP路由的下一跳的类型，目前仅取值：**RouterInterface**（路由器接口）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'RouterInterface',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 16,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '自定义路由条目的ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RouteEntryId' => 
              array (
                'description' => '自定义路由条目的ID。',
                'type' => 'string',
                'example' => 'rte-sn6vjkioxte1gz83z****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The specified CidrBlock is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded',
            'errorMessage' => 'Route entry quota exceeded in this route table.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidCIDRBlock.Duplicate',
            'errorMessage' => 'Specified CIDR block is already exists.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'Current instance status does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'The current virtual switch status does not support this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidCidrBlock',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidNextHop.NotFound',
            'errorMessage' => 'Specified next hop does not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidVRouter.NotFound',
            'errorMessage' => 'vRouter not exists.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidVPC.NotFound',
            'errorMessage' => 'vpc not exists.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidNexthopTypeAndList.BothNull',
            'errorMessage' => 'both nexthopType and nextHopList are null.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidNexthopTypeAndList.BothNotNull',
            'errorMessage' => 'both nexthopType and nextHopList are not null.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidRouterInterface',
            'errorMessage' => 'invalid router interface.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidOppositeRouterType',
            'errorMessage' => 'nexthop list cannot only contain router interface whose opposite router interface is on vbr.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidNexthopListSize',
            'errorMessage' => 'nexthop size is illegal. Must be between 2 and 4.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidEntryRuleQuota.NotFound',
            'errorMessage' => 'Route entry quota rule not exists.',
          ),
          19 => 
          array (
            'errorCode' => 'Forbidden.CheckEntryRuleQuota',
            'errorMessage' => 'Route entry quota rule check error.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidVBRStatus',
            'errorMessage' => 'invalid virtual border router status.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionBusinessStatus',
            'errorMessage' => 'invalid physical connection business status.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidRouterType',
            'errorMessage' => 'Cannot specify nexthop list in vbr\'s route table.',
          ),
          23 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'This operation is denied because satus of the specified HaVip is neither Available nor InUse.',
          ),
          24 => 
          array (
            'errorCode' => 'CountLimitExceed.HaVipRouteEntry',
            'errorMessage' => 'The count of route entry to HaVip in one route table is exceeded.',
          ),
          25 => 
          array (
            'errorCode' => 'InvalidRouteEntry.Duplicate',
            'errorMessage' => 'The route entry already exist.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidParam',
            'errorMessage' => 'The Ecmp routerEntry with router interfaces local vgw vip not match.',
          ),
          27 => 
          array (
            'errorCode' => 'INVALID_WEIGHT_PARAM',
            'errorMessage' => 'Specified value of weight invalid',
          ),
          28 => 
          array (
            'errorCode' => 'FORBIDDEN_USE_VPC_AS_INTERNET_GATEWAY',
            'errorMessage' => 'The Specified CIDR must be in vpc CIDR.',
          ),
          29 => 
          array (
            'errorCode' => 'InvalidNexthop',
            'errorMessage' => 'The Specified nexthop illegal.',
          ),
          30 => 
          array (
            'errorCode' => 'INVALID_VPC_ID',
            'errorMessage' => 'The Specified VpcId not match.',
          ),
          31 => 
          array (
            'errorCode' => 'InvalidRouteEntrySize',
            'errorMessage' => 'The Specified routerEntry size not legal.',
          ),
          32 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          33 => 
          array (
            'errorCode' => 'InvalidRouteEntry',
            'errorMessage' => 'Specified routeEntry not exist.',
          ),
          34 => 
          array (
            'errorCode' => 'InvalidDestinationCidrBlock',
            'errorMessage' => 'The specified destinationCidrBlock must not included in black list cidr.',
          ),
          35 => 
          array (
            'errorCode' => 'Forbidden.VRouterNotFound',
            'errorMessage' => 'Specified virtual switch is not found during access authentication.',
          ),
          36 => 
          array (
            'errorCode' => 'DefaultValidate.Error',
            'errorMessage' => 'validte fail.',
          ),
          37 => 
          array (
            'errorCode' => 'Region.NotSupport',
            'errorMessage' => 'The specified region does not currently support nextHopType for networkInterface',
          ),
          38 => 
          array (
            'errorCode' => 'OperationFailed.NotifyCenCreate',
            'errorMessage' => 'Failed to notify cen when create route entry.',
          ),
          39 => 
          array (
            'errorCode' => 'Forbidden.PrivateIpNotFound',
            'errorMessage' => 'Private ip address not exist.',
          ),
          40 => 
          array (
            'errorCode' => 'OperationUnsupported.InactiveMode',
            'errorMessage' => 'Vpc multi scope route only support active standby.',
          ),
          41 => 
          array (
            'errorCode' => 'InvalidRouteEntryName.Malformed',
            'errorMessage' => 'Specified RouteEntry name is not valid.',
          ),
          42 => 
          array (
            'errorCode' => 'IncorrectStatus.MultiScopeRiRouteEntry',
            'errorMessage' => 'MultiScope ri status must not in idle.',
          ),
          43 => 
          array (
            'errorCode' => 'OperationUnsupported.MoreThanOneVpnOrHavip',
            'errorMessage' => 'MultiScope can not support more than one vpn/havip.',
          ),
          44 => 
          array (
            'errorCode' => 'OperationUnsupported.EcmpRiTypeOrNumber',
            'errorMessage' => 'Emcp entry not supported if vpc-vbr or vbr-vlan ri does not exist.',
          ),
          45 => 
          array (
            'errorCode' => 'Duplicated.VpcNextHop',
            'errorMessage' => 'Route entry nexthop duplicate.',
          ),
          46 => 
          array (
            'errorCode' => 'OperationUnsupported.SubRouteTableECMP',
            'errorMessage' => 'Vpc subRouteTable don\'t support ecmp or multiScope.',
          ),
          47 => 
          array (
            'errorCode' => 'InvalidNexthop.NotFound',
            'errorMessage' => 'VRouterEntry nexthop does not exist.',
          ),
          48 => 
          array (
            'errorCode' => 'IllegalParam.NextHopId',
            'errorMessage' => 'Instance not exists or not vpc vm.',
          ),
          49 => 
          array (
            'errorCode' => 'InvalidVpnInstanceId.NotFound',
            'errorMessage' => '%s',
          ),
          50 => 
          array (
            'errorCode' => 'OperationFailed.ScopeActiveRouteEntryType',
            'errorMessage' => '%s',
          ),
          51 => 
          array (
            'errorCode' => 'OperationFailed.ScopeStandbyRouteEntryQuota',
            'errorMessage' => '%s',
          ),
          52 => 
          array (
            'errorCode' => 'OperationFailed.ScopeActiveRouteEntryQuota',
            'errorMessage' => '%s',
          ),
          53 => 
          array (
            'errorCode' => 'OperationUnsupported.ScopeInvalidRouteType',
            'errorMessage' => '%s',
          ),
          54 => 
          array (
            'errorCode' => 'OperationFailed.EcmpInvalidRouterInterfaceOppositeType',
            'errorMessage' => '%s',
          ),
          55 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6EcmpRouteEntry',
            'errorMessage' => '%s',
          ),
          56 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6CidrBlock',
            'errorMessage' => '%s',
          ),
          57 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6ForVBR',
            'errorMessage' => '%s',
          ),
          58 => 
          array (
            'errorCode' => 'QuotaExceeded.HaVipRouteEntry',
            'errorMessage' => 'Vpc havip route entry quota exceed.',
          ),
          59 => 
          array (
            'errorCode' => 'InvalidNexthop.DirectEni',
            'errorMessage' => 'The direct Eni cannot be nexthop.',
          ),
          60 => 
          array (
            'errorCode' => 'OperationFailed.InvalidNexthop',
            'errorMessage' => 'vpc multi scope route must has a enable nexthop.',
          ),
          61 => 
          array (
            'errorCode' => 'OperationFailed.NotifyCenDelete',
            'errorMessage' => 'Failed to notify cen when delete route entry.',
          ),
          62 => 
          array (
            'errorCode' => 'InvalidNatGateway.NotFound',
            'errorMessage' => 'Natgateway not exist.',
          ),
          63 => 
          array (
            'errorCode' => 'OperationFailed.CxpRouteExist',
            'errorMessage' => 'Cxp route alreay existed.',
          ),
          64 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTableStatus',
            'errorMessage' => '%s',
          ),
          65 => 
          array (
            'errorCode' => 'OperationFailed.GetEniInfo',
            'errorMessage' => 'Failed to get networkInterface info.',
          ),
          66 => 
          array (
            'errorCode' => 'QuotaExceeded.EcmpRouteEntryNextHopCount',
            'errorMessage' => '%s',
          ),
          67 => 
          array (
            'errorCode' => 'OperationFailed.InvalidNextHopType',
            'errorMessage' => '%s',
          ),
          68 => 
          array (
            'errorCode' => 'OperationUnsupported.InvalidRouterInterfaceType',
            'errorMessage' => 'Only vpc vbr interface support ecmp route.',
          ),
          69 => 
          array (
            'errorCode' => 'InvalidHaVip.NotFound',
            'errorMessage' => 'The specified HaVip does not exist in the specified region.',
          ),
          70 => 
          array (
            'errorCode' => 'OperationFailed.MultiScopeType',
            'errorMessage' => 'The specified nexthop type is not support in multiScope.',
          ),
          71 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          72 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'Vpn route entry quota exceeded.',
          ),
          73 => 
          array (
            'errorCode' => 'InvalidAttachment.NotFound',
            'errorMessage' => 'The attachment is not found.',
          ),
          74 => 
          array (
            'errorCode' => 'OperationFailed.ActiveNetworkInterfaceNotFound',
            'errorMessage' => 'No active network interface is found on the attachment.',
          ),
          75 => 
          array (
            'errorCode' => 'InvalidNetworkInterface.NotFound',
            'errorMessage' => 'The network interface is not found on the attachment.',
          ),
          76 => 
          array (
            'errorCode' => 'OperationFailed.QueryAttachmentInfo',
            'errorMessage' => 'Failed to query attachment information.',
          ),
          77 => 
          array (
            'errorCode' => 'IllegalParam.AttachmentId',
            'errorMessage' => 'The attachment is invalid.',
          ),
          78 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportIPV6',
            'errorMessage' => 'The specified next hop does not support IPv6.',
          ),
          79 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv6Address',
            'errorMessage' => 'The IPv6 address of the specified next hop is being assigned or deleted.',
          ),
          80 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6EntryOnPrimaryNetworkInterface',
            'errorMessage' => 'You cannot create IPv6 route entries on a primary network interface.',
          ),
          81 => 
          array (
            'errorCode' => 'OperationUnsupported.SpecifyIpOnIpv6Entry',
            'errorMessage' => 'You cannot specify the private IP address when you create IPv6 route entries.',
          ),
          82 => 
          array (
            'errorCode' => 'OperationUnsupported.MutipleIpv6Address',
            'errorMessage' => 'You cannot specify a next hop that has bound multiple IPv6 addresses.',
          ),
          83 => 
          array (
            'errorCode' => 'OperationDenied.Ipv6EntryOnCustomTable',
            'errorMessage' => 'You cannot create any IPv6 route entry on a custom route table.',
          ),
          84 => 
          array (
            'errorCode' => 'OperationDenied.CloudBoxVbrEntryAllowedInCustomRouteTable',
            'errorMessage' => 'The operation is not allowed because only the custom routing table can add a routing entry with the next hop pointing to the cloud box type VBR.',
          ),
          85 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableAssociateNotCloudBoxVSwitch',
            'errorMessage' => 'The operation is not allowed because of the routing table is bound to a non-cloud box type vswitch, and routing entries pointing to the cloud box VBR cannot be added.',
          ),
          86 => 
          array (
            'errorCode' => 'OperationDenied.VbrMisMatchCloudBox',
            'errorMessage' => 'The operation is not allowed because the routing table is bound to a cloud box vswitch, and routing entries pointing to other cloud box VBRs cannot be added.',
          ),
          87 => 
          array (
            'errorCode' => 'OperationDenied.VbrIdle',
            'errorMessage' => 'The operation is not allowed because the next hop of the added routing entry is a VBR type RI at the opposite end, which cannot be in an idle state.',
          ),
          88 => 
          array (
            'errorCode' => 'OperationDenied.RouterInterfaceToDifferentVpc',
            'errorMessage' => 'The operation is not allowed because the router interface is connected to different VPCs.',
          ),
          89 => 
          array (
            'errorCode' => 'OperationDenied.RouterInterfaceFromDifferentZones',
            'errorMessage' => 'The operation is not allowed because the router interface resides in different zones.',
          ),
          90 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          91 => 
          array (
            'errorCode' => 'ResourceNotFound.VpcPeer',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          92 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcPeer',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          93 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableTypeNotPermitted',
            'errorMessage' => 'The operation is not allowed because the type of route table is not permitted.',
          ),
          94 => 
          array (
            'errorCode' => 'OperationDenied.GatewayRouteTableNotPermitted',
            'errorMessage' => 'The operation is not allowed to create a route pointing to this nextHop type on gateway route table.',
          ),
          95 => 
          array (
            'errorCode' => 'UnsupportedFeature.VpcPeerIpv6',
            'errorMessage' => 'IPv6 route entries for VPC peering connections cannot be created in this region.',
          ),
          96 => 
          array (
            'errorCode' => 'OperationDenied.VpcIpv6NotEnabled',
            'errorMessage' => 'IPv6 has not been enabled for the VPC.',
          ),
          97 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of Ipv4Gateway is incorrect.',
          ),
          98 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified resource of prefixList is not found.',
          ),
          99 => 
          array (
            'errorCode' => 'UnsupportedFeature.CreatePrefixListEcmpRouteEntry',
            'errorMessage' => 'The feature of creating ecmp route entry with prefixList is not supported.',
          ),
          100 => 
          array (
            'errorCode' => 'OperationDenied.RouterInterfaceIpv6NotEnabled',
            'errorMessage' => 'Routerinterface does not support IPv6.',
          ),
          101 => 
          array (
            'errorCode' => 'OperationDenied.NextHopTypeNotPermitted',
            'errorMessage' => 'The operation is not allowed because the nextHop type is invalid.',
          ),
          102 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.PrefixList',
            'errorMessage' => 'The operation failed because the specified prefixList route entry already exists.',
          ),
          103 => 
          array (
            'errorCode' => 'OperationFailed.CidrConflictWithPrefixList',
            'errorMessage' => 'The specified CIDR block already exists in a prefixList route entry.',
          ),
          104 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'Specified Ipv4Gateway does not exist.',
          ),
          105 => 
          array (
            'errorCode' => 'Mismatch.HaVipIdAndRouteTableId',
            'errorMessage' => 'The HaVip and RouteTable are mismatched.',
          ),
          106 => 
          array (
            'errorCode' => 'OperationFailed.OperationLocked',
            'errorMessage' => 'The operation failed because the nextHop instance is in the O&M lock state.',
          ),
          107 => 
          array (
            'errorCode' => 'Mismatch.Ipv4GatewayIdAndRouteTableId',
            'errorMessage' => 'The specified IPv4Gateway and RouteTable are not matched.',
          ),
          108 => 
          array (
            'errorCode' => 'OperationUnsupported.DestinationCidrBlockOverlapWithVSwitch',
            'errorMessage' => 'The destination IPv6 network segment specified in the route entry overlaps with the vSwitch network segment.',
          ),
          109 => 
          array (
            'errorCode' => 'ResourceNotAssociated.Cen',
            'errorMessage' => 'The Vpc and Cen are not associated.',
          ),
          110 => 
          array (
            'errorCode' => 'IncorrectStatus.CenRelation',
            'errorMessage' => 'The status of Vpc in Cen is incorrect.',
          ),
          111 => 
          array (
            'errorCode' => 'OperationDenied.CenTypeInvalid',
            'errorMessage' => 'The operation is not allowed because of Cen type is invalid..',
          ),
          112 => 
          array (
            'errorCode' => 'ResourceNotFound.Cen',
            'errorMessage' => 'The specified resource of Cen is not found.',
          ),
          113 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterface',
            'errorMessage' => 'The specified resource of network interface is not found.',
          ),
          114 => 
          array (
            'errorCode' => 'RouteConflict.AlreadyExist',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
          115 => 
          array (
            'errorCode' => 'IncorrectStatus.RouterInterface',
            'errorMessage' => 'The specified RouterInterface status is invalid.',
          ),
          116 => 
          array (
            'errorCode' => 'InvalidNexthop.UnsupportedEniBizType',
            'errorMessage' => 'The biz type of NetworkInterface is illegal.',
          ),
          117 => 
          array (
            'errorCode' => 'OperationDenied.RouterInterfaceIpv6',
            'errorMessage' => 'RouterInterface does not support IPv6.',
          ),
          118 => 
          array (
            'errorCode' => 'InvalidNextHopType',
            'errorMessage' => 'Specified parameter "NextHopType" is not valid.',
          ),
          119 => 
          array (
            'errorCode' => 'OperationDenied.VbrAttachEcrInMiddleStatus',
            'errorMessage' => 'The operation is not allowed because of VBR attach or detach ECR in middle status.',
          ),
          120 => 
          array (
            'errorCode' => 'ResourceNotAssociated.Ecr',
            'errorMessage' => 'The ECR is not associated.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Instance not exists or not vpc vm',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidNatGatewayId.NotFound',
            'errorMessage' => 'Specified value of NatGatewayId is not found in our record.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanId.NotFound',
            'errorMessage' => 'Specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidNextHopId.NotFound',
            'errorMessage' => 'Specified next hop does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'Specified route table does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidHaVipId.NotFound',
            'errorMessage' => 'The specified HaVip does not exist in the specified VPC.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidNetworkInterface.NotFound',
            'errorMessage' => 'The specified networkInterface does not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVpc.NotFound',
            'errorMessage' => 'Specified vpc is not found in our record.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.InstanceDismatchCurrentVpc',
            'errorMessage' => 'The specified instance does not exist in current vpc.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIpv6Gateway.NotFound',
            'errorMessage' => 'Specified Ipv6Gateway does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'VPC.ERROR',
            'errorMessage' => 'error code 500,Internal server error.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of Ipv4Gateway is incorrect.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RouteEntryId\\": \\"rte-sn6vjkioxte1gz83z****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateRouteEntryResponse>\\n    <RouteEntryId>rte-sn6vjkioxte1gz83z****</RouteEntryId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</CreateRouteEntryResponse>","errorExample":""}]',
      'title' => '创建自定义路由条目',
      'description' => '- **CreateRouteEntry**接口属于异步接口，即系统会返回一个实例ID，但该路由的添加尚未完成，系统后台的启动任务仍在进行。您可以调用[DescribeRouteEntryList](~~138148~~)查询路由的添加状态：
    - 当路由处于**Creating**状态时，表示路由添加中。
    - 当路由处于**Created**状态时，表示路由添加完成。
- **CreateRouteEntry**接口不支持在同一个VPC或者同一个VBR中并发添加自定义路由条目。

**使用该接口为VPC路由器的路由表添加自定义路由条目时，请注意以下事项：**
> 当添加的路由为前缀列表路由时，路由配额的计算为现存路由与前缀列表路由的最大路由条目数之和是否超过路由配额的限制。
- 同一个路由表中自定义路由条目不能超过200条。  

- 自定义路由条目的目标网段（**DestinationCidrBlock**）不能和VPC内的交换机的网段相同，可以包含交换机的网段但是不能被交换机的网段包含。   

- 自定义路由条目的目标网段（**DestinationCidrBlock**）不能指向100.64.0.0/10，也不能被100.64.0.0/10包含。   

- 同一路由表下的路由条目的目标网段（**DestinationCidrBlock**）不允许相同。   

- 如果指定的目标网段（**DestinationCidrBlock**）是一个IP地址，会按照32位掩码来处理。   

- 多条自定义路由条目可以指向同一个下一跳（**NextHopId**）。  

- 自定义路由条目的下一跳（**NextHopId**）必须和路由表在同一个VPC。  

- 支持通过**NextHopList**参数配置ECMP路由： 
        

  * 添加普通（非ECMP）自定义路由时，需指定**DestinationCidrBlock**、**NextHopType**和**NextHopId**参数，且不能指定**NextHopList**参数。   
 
  * 添加ECMP路由时，需指定**DestinationCidrBlock**和**NextHopList**参数，且不能指定**NextHopType**和**NextHopId**参数。   


**使用该接口为边界路由器的路由表添加自定义路由条目时，请注意以下事项：**

- 同一个路由表中自定义路由条目不能超过200条。  
       
- 不支持**NextHopList**参数。   
       
- 自定义路由条目的目标网段（**DestinationCidrBlock**）不能指向100.64.0.0/10，也不能被100.64.0.0/10包含。   
       
- 同一路由表下的路由条目的目标网段（**DestinationCidrBlock**）不允许相同。   
       
- 如果指定的目标网段（**DestinationCidrBlock**）是一个IP地址，会按照32位掩码来处理。   
      
- 多条自定义路由条目可以指向同一个下一跳（**NextHopId**）。  
      
- 自定义路由条目的下一跳（**NextHopId**）必须是该VBR关联的路由器接口。  
       
- 只允许在VBR状态是**Active**，而且对应的物理专线状态是**Enabled**且没有被欠费锁定的情况下在VBR上新建路由条目。  
      
- 仅支持添加普通路由（非ECMP），需指定**DestinationCidrBlock**、**NextHopType**和**NextHopId**参数，且不能指定**NextHopList**参数。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateRouteEntries' => 
    array (
      'summary' => '在VPC路由器的路由表中批量添加自定义路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntries',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由条目信息列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由条目信息列表。',
              'type' => 'object',
              'properties' => 
              array (
                'DstCidrBlock' => 
                array (
                  'description' => '自定义路由条目的目标网段，支持IPv4、IPv6和前缀列表的目标网段。最多支持输入50个目标网段。需满足以下要求：
          
- 目标网段不能指向100.64.0.0/10或被100.64.0.0/10包含。  
 
- 同一张路由表内的不同路由条目的目标网段不能相同。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '192.168.0.0/24',
                ),
                'RouteTableId' => 
                array (
                  'description' => ' 要添加自定义路由条目的路由表ID。 最多支持输入50个路由表ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'vtb-bp145q7glnuzd****',
                ),
                'IpVersion' => 
                array (
                  'description' => 'IP协议的版本。最多支持输入50个IP协议的版本。取值：

- **4**：IPv4协议。
- **6**：IPv6协议。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '4',
                ),
                'NextHop' => 
                array (
                  'description' => '自定义路由条目的下一跳实例的ID。最多支持输入50个实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'i-j6c2fp57q8rr4jlu****',
                ),
                'NextHopType' => 
                array (
                  'description' => '自定义路由条目的下一跳的类型。最多支持输入50个下一跳类型。取值： 

- **Instance**（默认值）：ECS实例。

- **HaVip**：高可用虚拟IP。  

- **RouterInterface**：路由器接口。

- **NetworkInterface**：弹性网卡。

- **VpnGateway**：VPN网关。

- **IPv6Gateway**：IPv6网关。

- **NatGateway**：NAT网关。

- **Attachment**：转发路由器。

- **VpcPeer**：VPC对等连接。
- **Ipv4Gateway**：IPv4网关。
- **GatewayEndpoint**：网关终端节点。
- **CenBasic**：CEN不支持转发路由器。
- **Ecr**：专线网关。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'RouterInterface',
                ),
                'Name' => 
                array (
                  'description' => '要添加的自定义路由条目的名称。最多支持输入50个名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Description' => 
                array (
                  'description' => '自定义路由条目的描述信息。最多支持输入50个描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '成功任务数。',
            'type' => 'object',
            'properties' => 
            array (
              'SuccessCount' => 
              array (
                'description' => '添加成功的路由条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'FailedCount' => 
              array (
                'description' => '添加失败的路由条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'FailedRouteEntries' => 
              array (
                'description' => '添加失败的路由条目数的详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '添加失败的路由条目数的详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DstCidrBlock' => 
                    array (
                      'description' => '添加失败的自定义路由条目的目标网段。',
                      'type' => 'string',
                      'example' => '192.168.0.0/24',
                    ),
                    'NextHop' => 
                    array (
                      'description' => '添加失败的自定义路由条目的下一跳实例的ID。',
                      'type' => 'string',
                      'example' => 'i-j6c2fp57q8rr4jlu****',
                    ),
                    'FailedCode' => 
                    array (
                      'description' => '失败的错误码。',
                      'type' => 'string',
                      'example' => 'VPC_ROUTE_ENTRY_CIDR_BLOCK_DUPLICATE',
                    ),
                    'FailedMessage' => 
                    array (
                      'description' => '失败的具体报错信息。',
                      'type' => 'string',
                      'example' => 'Specified CIDR block is already exists, entry.cidrBlock=xxxx',
                    ),
                  ),
                ),
              ),
              'RouteEntryIds' => 
              array (
                'description' => '添加成功的自定义路由条目返回的实例ID信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '添加成功的自定义路由条目返回的实例ID。',
                  'type' => 'string',
                  'example' => 'rte-sn6vjkioxte1gz83z****',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeRouteEntryList',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 5,
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"SuccessCount\\": 2,\\n  \\"FailedCount\\": 2,\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"FailedRouteEntries\\": [\\n    {\\n      \\"DstCidrBlock\\": \\"192.168.0.0/24\\",\\n      \\"NextHop\\": \\"i-j6c2fp57q8rr4jlu****\\",\\n      \\"FailedCode\\": \\"VPC_ROUTE_ENTRY_CIDR_BLOCK_DUPLICATE\\",\\n      \\"FailedMessage\\": \\"Specified CIDR block is already exists, entry.cidrBlock=xxxx\\"\\n    }\\n  ],\\n  \\"RouteEntryIds\\": [\\n    \\"rte-sn6vjkioxte1gz83z****\\"\\n  ]\\n}","type":"json"}]',
      'title' => '批量添加自定义路由条目',
      'description' => '- **CreateRouteEntries**接口属于异步接口，即系统会返回一个实例ID，但该路由的创建尚未完成，系统后台的启动任务仍在进行。您可以调用[DescribeRouteEntryList](~~138148~~)查询路由的创建状态：
    - 当路由处于**Creating**状态时，表示路由创建中。
    - 当路由处于**Created**状态时，表示路由创建完成。
- **CreateRouteEntries**接口不支持在同一个VPC中并发批量创建自定义路由条目。

**使用该接口为VPC路由器的路由表添加自定义路由条目时，请注意以下事项：**

- 同一个路由表中自定义路由条目不能超过200条。  

- 自定义路由条目的目标网段（**DstCidrBlock**）不能和VPC内的交换机的网段相同，也不能包含交换机的网段或者被交换机的网段包含。   

- 自定义路由条目的目标网段（**DstCidrBlock**）不能指向100.64.0.0/10，也不能被100.64.0.0/10包含。   

- 同一路由表下的路由条目的目标网段（**DstCidrBlock**）不允许相同。   

- 如果指定的目标网段（**DstCidrBlock**）是一个IP地址，会按照32位掩码来处理。   

- 多条自定义路由条目可以指向同一个下一跳（**NextHop**）。  

- 自定义路由条目的下一跳（**NextHop**）必须和路由表在同一个VPC。',
    ),
    'CreateRouteTable' => 
    array (
      'summary' => '创建自定义路由表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-zhangjiakou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '自定义路由表所属的VPC ID。

自定义路由表属于VPC高级功能。当所属VPC不支持该高级功能（不支持创建自定义路由表）时，您需要联系阿里云工程师处理。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1qpo0kug3a20qqe****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteTableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myRouteTable',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        4 => 
        array (
          'name' => 'AssociateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的路由表的类型。取值：

- **VSwitch**（默认值）：交换机路由表。
- **Gateway**：网关路由表。',
            'type' => 'string',
            'required' => false,
            'example' => 'VSwitch',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-zhangjiakou',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '路由表的详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62172DD5-6BAC-45DF-8D44-E11ED28DCAC0',
              ),
              'RouteTableId' => 
              array (
                'description' => '路由表ID。',
                'type' => 'string',
                'example' => 'vtb-bp145q7glnuzdvzu2****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature of ipv4Gateway is not supported in the region.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.RouteTableName.Malformed',
            'errorMessage' => 'The specified route table name is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.Description.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.RouteTable',
            'errorMessage' => 'VPC RouteTable quota exceeded.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidVpcId.NotSupport',
            'errorMessage' => 'The vpc is not support.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.AdvancedFeature',
            'errorMessage' => 'Advanced features of the vpc is unsupported.',
          ),
          7 => 
          array (
            'errorCode' => 'QuotaExceeded.GatewayRouteTable',
            'errorMessage' => 'The quota of Gateway Route Table is exceeded.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of RegionId is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Action',
            'errorMessage' => 'This vpc feature is not supported in this region',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"62172DD5-6BAC-45DF-8D44-E11ED28DCAC0\\",\\n  \\"RouteTableId\\": \\"vtb-bp145q7glnuzdvzu2****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateRouteTableResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-E11ED28DCAC0</RequestId>\\n    <RouteTableId>vtb-bp145q7glnuzdvzu2****</RouteTableId>\\n</CreateRouteTableResponse>","errorExample":""}]',
      'title' => '创建自定义路由表',
      'description' => '- **CreateRouteTable**接口属于异步接口，即系统会返回一个实例ID，但该自定义路由表尚未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeRouteTableList](~~87602~~)查询自定义路由表的创建状态：
    - 当自定义路由表处于**Creating**状态时，表示自定义路由表创建中。
    - 当自定义路由表处于**Available**状态时，表示自定义路由表创建完成。
- **CreateRouteTable**接口不支持在同一个VPC中并发创建自定义路由表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateRouteTable' => 
    array (
      'summary' => '将创建的自定义路由表和同一VPC内的交换机绑定。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定交换机的路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定到交换机的路由表的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定路由表的交换机的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-25ncdvfaue4****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定交换机的路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC668356-BCB4-42FD-9BC3-FA2B2E04B634',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.CloudBoxVbrEntryExist',
            'errorMessage' => 'The operation is not allowed because the routing table has a route entry for the next hop to the cloud box VBR.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied.OtherCloudBoxVbrEntryExist',
            'errorMessage' => 'The operation is not allowed because the routing table has a route entry for the next hop that points to a VBR other than this cloud box.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.RouteTable',
            'errorMessage' => 'The resource has already associated with a routetable.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.AssociateGatewayRouteTable',
            'errorMessage' => 'The operation is not allowed because gateway route tables cannot be bound to a vSwitch.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.SwitchToSystemRouteTable',
            'errorMessage' => 'The associated route tables cannot be directly changed to system route tables.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.VSwitch',
            'errorMessage' => 'The specified resource of VSwitch is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'Specified route table does not exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of RegionId is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Action',
            'errorMessage' => 'This vpc feature is not supported in this region',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'Specified route table does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'Specified VSwitch does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'The current status of the virtual switch does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.VSwitchAlreadyAssociatedRouteTable',
            'errorMessage' => 'The specified virtual switch already associates route table.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.NotInSameVpc',
            'errorMessage' => 'The specified virtual switch and route table are not in the same VPC.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTable',
            'errorMessage' => 'The status of the specified route table is incorrect.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DC668356-BCB4-42FD-9BC3-FA2B2E04B634\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateRouteTableResponse>\\r\\n<RequestId>DC668356-BCB4-42FD-9BC3-FA2B2E04B634</RequestId>\\r\\n</AssociateRouteTableResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<AssociateRouteTableResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-xxxxxxx</RequestId>\\n</AssociateRouteTableResponse>"}]',
      'title' => '将路由表和交换机绑定',
      'description' => '**AssociateRouteTable**接口属于异步接口，即系统返回一个请求ID，但该路由表并未绑定完成，系统后台的绑定任务仍在进行。您可以调用[DescribeVSwitchAttributes](~~94567~~)查询路由表的绑定状态：
- 当交换机处于**Pending**状态时，表示路由表正在绑定中。
- 当交换机处于**Available**状态时，表示路由表绑定成功。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteRouteEntry' => 
    array (
      'summary' => '调用DeleteRouteEntry删除VPC路由器或边界路由器的路由表中的路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '37680',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREvpcJSBF65',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目所在的路由表的ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-2ze3jgygk9bmsj23s****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的路由条目ID，和DestinationCidrBlock参数互斥。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'rte-bp1mnnr2al0naomnpv****',
          ),
        ),
        3 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段，支持IPv4网段、IPv6网段、前缀列表网段和前缀列表的实例ID，和RouteEntryId参数互斥。',
            'type' => 'string',
            'required' => false,
            'example' => '47.100.XX.XX/16',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳实例的ID。

- 删除ECMP外的其他路由条目时，请配置**NextHopId**，无需配置**NextHopList**。
- 删除ECMP路由条目时，请配置**NextHopList**，无需配置**NextHopId**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'ri-2zeo3xzyf38r4urzd****',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHopList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'ECMP路由的下一跳实例信息。最多支持16个下一跳实例信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'ECMP路由条目的下一跳实例信息。最多支持16个下一跳实例信息。',
              'type' => 'object',
              'properties' => 
              array (
                'NextHopId' => 
                array (
                  'description' => 'ECMP路由条目的下一跳实例的ID。最多支持16个下一跳实例信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ri-2zeo3xzyf38r43cd****',
                ),
                'NextHopType' => 
                array (
                  'description' => 'ECMP路由的下一跳的类型，目前只能取值**RouterInterface**（路由器接口）。最多支持16个下一跳实例信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'RouterInterface',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 8,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrcetRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Specified operation is denied as route entry type is system.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidRouteEntry.NotFound',
            'errorMessage' => 'Route entry not exists.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidVRouter.NotFound',
            'errorMessage' => 'vRouter not exists.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'Specified RouteEntry cannot allowed delete by openApi.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidNextHop',
            'errorMessage' => 'Specified nexthop and nexthop list cannot both null.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidRouteEntry',
            'errorMessage' => 'Specified routeEntry not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.VRouterNotFound',
            'errorMessage' => 'pecified virtual switch is not found during access authentication.',
          ),
          11 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidRouteEntryId.NotFound',
            'errorMessage' => 'Specified RouteEntryId does not exist.',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidVpnInstanceId.NotFound',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'ParamExclusive.RouteEntryIdAndRouteTableIdOrDestCidrBlock',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidNextHopList.Size',
            'errorMessage' => 'Nexthop list size should be between 2 and 16',
          ),
          17 => 
          array (
            'errorCode' => 'ParamExclusive.NextHopIdAndList',
            'errorMessage' => 'NextHopId and NextHopList cannot both be not null.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.DeleteMultiScopeEntry',
            'errorMessage' => 'Multi or ecmp scope must delete with force.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationDenied.DeleteManagedRouteEntry',
            'errorMessage' => 'The operation is not allowed because of route entry is managed.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableTypeNotPermitted',
            'errorMessage' => 'The operation is not allowed because the type of route table is not permitted.',
          ),
          22 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteEntry',
            'errorMessage' => 'The status of the specified routeEntry is invalid.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationDenied.NextHopNotChanged',
            'errorMessage' => 'The operation is not allowed because of NextHopNotChanged.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationDenied.DeleteGatewayEndpointRoute',
            'errorMessage' => 'The operation is not allowed to delete route entry pointing gateway endpoint..',
          ),
          25 => 
          array (
            'errorCode' => 'IncorrectStatus.PrefixList',
            'errorMessage' => 'The status of prefixList is incorrect.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidCidrBlock',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationDenied.VbrAttachEcrInMiddleStatus',
            'errorMessage' => 'The operation is not allowed because of VBR attach or detach ECR in middle status.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'Specified route table does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Vpc.Error',
            'errorMessage' => 'error code 500,Internal server error.',
          ),
          1 => 
          array (
            'errorCode' => 'Internal.Error',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteRouteEntryResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteRouteEntryResponse>","errorExample":""}]',
      'title' => '删除自定义路由条目',
      'description' => '调用本接口删除路由条目时，请注意： 

- 只有处于**Available**状态的路由条目可以被删除。  

- 路由表所在的VPC正在进行创建或删除交换机或路由条目时，无法删除路由条目。 

- 如果需要删除边界路由器的路由表中的路由条目，请通过[DescribeRouteEntryList](~~138148~~)接口查询要删除的路由条目的**NextHopId** 后，再通过本接口删除路由条目。

- **DeleteRouteEntry**接口属于异步接口，即系统会返回一个请求ID，但该路由条目尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeRouteEntryList](~~138148~~)查询路由条目的删除状态：
    - 当路由条目处于**Deleting**状态时，表示路由条目正在删除中。
    - 当查询不到指定的路由条目时，表示路由条目删除成功。
- **DeleteRouteEntry**接口不支持在同一个VPC或者同一个VBR中并发删除路由表中的路由条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteRouteEntries' => 
    array (
      'summary' => '调用DeleteRouteEntries批量删除自定义路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntries',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要删除的路由条目信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要删除的路由条目信息。',
              'type' => 'object',
              'properties' => 
              array (
                'RouteTableId' => 
                array (
                  'description' => '要删除的路由条目所在的路由表的ID。最多支持输入50个路由表ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'vtb-2ze3jgygk9bmsj23s****',
                ),
                'RouteEntryId' => 
                array (
                  'description' => '要删除的路由条目ID。最多支持输入50个路由条目ID。

> 当**RouteEntryId**参数未输入时，**DstCidrBlock**和**NextHop**参数必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'rte-bp1mnnr2al0naomnpv****',
                ),
                'DstCidrBlock' => 
                array (
                  'description' => '要删除的路由条目的目标网段，支持IPv4网段、IPv6网段和前缀列表网段。最多支持输入50个目标网段。

> 当**RouteEntryId**参数未输入时，**DstCidrBlock**和**NextHop**参数必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '47.100.XX.XX/24',
                ),
                'NextHop' => 
                array (
                  'description' => '要删除的下一跳实例的ID。最多支持输入50个实例ID。

> 当**RouteEntryId**参数未输入时，**DstCidrBlock**和**NextHop**参数必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'i-j6c2fp57q8rr4jlu****',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'SuccessCount' => 
              array (
                'description' => '删除成功的路由条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'FailedCount' => 
              array (
                'description' => '删除失败的路由条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'FailedRouteEntries' => 
              array (
                'description' => '删除失败的路由条目信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '删除失败的路由条目信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RouteEntryId' => 
                    array (
                      'description' => '删除失败的路由条目ID。',
                      'type' => 'string',
                      'example' => 'rte-bp1mnnr2al0naomnpv****',
                    ),
                    'DstCidrBlock' => 
                    array (
                      'description' => '删除失败的路由条目的目标网段，支持IPv4网段、IPv6网段和前缀列表网段。',
                      'type' => 'string',
                      'example' => '47.100.XX.XX/24',
                    ),
                    'NextHop' => 
                    array (
                      'description' => '删除失败的下一跳实例ID。',
                      'type' => 'string',
                      'example' => 'i-j6c2fp57q8rr4jlu****',
                    ),
                    'FailedCode' => 
                    array (
                      'description' => '失败的错误码。',
                      'type' => 'string',
                      'example' => 'VPC_ROUTER_ENTRY_NOT_EXIST',
                    ),
                    'FailedMessage' => 
                    array (
                      'description' => '失败的具体报错信息。',
                      'type' => 'string',
                      'example' => 'vRouterEntry not exists',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeRouteEntryList',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"SuccessCount\\": 2,\\n  \\"FailedCount\\": 2,\\n  \\"FailedRouteEntries\\": [\\n    {\\n      \\"RouteEntryId\\": \\"rte-bp1mnnr2al0naomnpv****\\",\\n      \\"DstCidrBlock\\": \\"47.100.XX.XX/24\\",\\n      \\"NextHop\\": \\"i-j6c2fp57q8rr4jlu****\\",\\n      \\"FailedCode\\": \\"VPC_ROUTER_ENTRY_NOT_EXIST\\",\\n      \\"FailedMessage\\": \\"vRouterEntry not exists\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DeleteRouteEntriesResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <SuccessCount>2</SuccessCount>\\n    <FailedCount>2</FailedCount>\\n    <FailedRouteEntries>\\n        <RouteEntryId>rte-bp1mnnr2al0naomnpv****</RouteEntryId>\\n        <DstCidrBlock>47.100.XX.XX/24</DstCidrBlock>\\n        <NextHop>i-j6c2fp57q8rr4jlu****</NextHop>\\n        <FailedCode>VPC_ROUTER_ENTRY_NOT_EXIST</FailedCode>\\n        <FailedMessage>vRouterEntry not exists</FailedMessage>\\n    </FailedRouteEntries>\\n</DeleteRouteEntriesResponse>","errorExample":""}]',
      'title' => '批量删除自定义路由条目',
      'description' => '调用本接口删除路由条目时，请注意： 

- 只有处于**Available**状态的路由条目可以被删除。  

- 路由表所在的VPC正在进行创建或删除交换机或路由条目时，无法删除路由条目。 
- **DeleteRouteEntries**接口属于异步接口，即系统会返回一个请求ID，但该路由条目尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeRouteEntryList](~~138148~~)查询路由条目的删除状态：
    - 当路由条目处于**Deleting**状态时，表示路由条目正在删除中。
    - 当查询不到指定的路由条目时，表示路由条目删除成功。
- **DeleteRouteEntries**接口不支持在同一个VPC中并发批量删除路由表中的路由条目。',
    ),
    'DeleteRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由表所属的VPC的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由表所属的VPC的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC668356-BCB4-42FD-9BC3-FA2B2E04B634',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.GatewayAssociated',
            'errorMessage' => 'You cannot delete the specified route table because it still associates with gateway.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.RouteTableId',
            'errorMessage' => 'The param of RouteTableId is missing.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectRouteTableType',
            'errorMessage' => 'Route table can be deleted by this action only when it\'s type is custom.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'The current virtual switch status does not support this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectRouteTableStatus.RouteEntryExist',
            'errorMessage' => 'You cannot delete the specified route table because it still has custom route entry.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.cbnStatus',
            'errorMessage' => 'Current CBN status does not support this operation.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of RegionId is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Action',
            'errorMessage' => 'This vpc feature is not supported in this region',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectRouteTableStatus',
            'errorMessage' => 'The current status of the route table does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.RouteEntry',
            'errorMessage' => 'Vpc route table has route entry.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DC668356-BCB4-42FD-9BC3-FA2B2E04B634\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"62172DD5-6BAC-45DF-8D44-xxxxxxxx\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteRouteTableResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-xxxxxxx</RequestId>\\n</DeleteRouteTableResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteRouteTableResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-xxxxxxx</RequestId>\\n</DeleteRouteTableResponse>"}]',
      'title' => '删除自定义路由表',
      'summary' => '调用DeleteRouteTable接口删除自定义路由表。',
      'description' => '- **DeleteRouteTable**接口属于异步接口，即系统会返回一个请求ID，但该自定义路由表尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeRouteTableList](~~87602~~)查询自定义路由表的删除状态：
    - 当自定义路由表处于**Deleting**状态时，表示自定义路由表正在删除中。
    - 当查询不到指定的自定义路由表时，表示自定义路由表删除成功。
- **DeleteRouteTable**接口不支持在同一个VPC中并发删除自定义路由表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociateRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-25naue4****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62172DD5-6BAC-45DF-8D44-xxxxxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of RegionId is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Action',
            'errorMessage' => 'This vpc feature is not supported in this region',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'Specified route table does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'Specified VSwitch does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'The current status of the virtual switch does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBindingStatus.RouteTable',
            'errorMessage' => 'The specified virtual switch and route table does not bind',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.SystemRouteTable',
            'errorMessage' => 'System route table can not be unassociated.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidStatus.VSwitch',
            'errorMessage' => 'Specified vswitch is not in stable status and cannot operate.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchNotAssociate',
            'errorMessage' => 'Specified vswitch is not associated with the routeTable and cannot operate.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"62172DD5-6BAC-45DF-8D44-xxxxxxx\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"62172DD5-6BAC-45DF-8D44-xxxxxxxx\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<UnassociateRouteTableResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-xxxxxxx</RequestId>\\n</UnassociateRouteTableResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<UnassociateRouteTableResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-xxxxxxx</RequestId>\\n</UnassociateRouteTableResponse>"}]',
      'title' => '将路由表和交换机解绑',
      'summary' => '调用UnassociateRouteTable接口将路由表和交换机解绑。',
      'description' => '- **UnassociateRouteTable**接口属于异步接口，即系统会返回一个请求ID，但该路由表尚未解绑成功，系统后台的解绑任务仍在进行。您可以调用[DescribeVSwitchAttributes](~~94567~~)查询路由表的解绑状态：
    - 当交换机处于**Pending**状态时，表示路由表正在解绑中。
    - 当交换机处于**Available**状态时，表示路由表解绑成功。
- **UnassociateRouteTable**接口不支持并发解除同一个路由表和交换机的绑定。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyRouteTableAttributes' => 
    array (
      'summary' => '调用ModifyRouteTableAttributes接口修改路由表的名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的名称。  

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的描述信息。  

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '描述信息',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属的VPC的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'RoutePropagationEnable',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62172DD5-6BAC-45DF-8D44',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Abs.InvaliTableName.Malformed',
            'errorMessage' => 'Table name format is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Abs.InvalidRouteTableId.NotExist',
            'errorMessage' => 'The route table id is not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'Description format is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"62172DD5-6BAC-45DF-8D44\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyRouteTableAttributesResponse>\\n    <RequestId>62172DD5-6BAC-45DF-8D44</RequestId>\\n</ModifyRouteTableAttributesResponse>","errorExample":""}]',
      'title' => '修改路由表的名称和描述',
      'description' => '**ModifyRouteTableAttributes**接口不支持并发修改同一个路由表的名称和描述。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyRouteEntry' => 
    array (
      'summary' => '调用ModifyRouteEntry修改自定义路由条目的名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '37904',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREvpc0T77AE',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'EntryName',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由条目ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rte-acfvgfsghfdd****',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'EntryDescription',
          ),
        ),
        4 => 
        array (
          'name' => 'NewNextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '新路由条目下一跳类型',
            'description' => '新路由条目下一跳类型。取值如下：
- **NetworkInterface**：弹性网卡。
- **NatGateway**：NAT网关。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'NetworkInterface' => 'NetworkInterface',
              'NatGateway' => 'NatGateway',
            ),
            'example' => 'NetworkInterface',
          ),
        ),
        5 => 
        array (
          'name' => 'NewNextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '新路由条目下一跳实例ID',
            'description' => '新路由条目下一跳实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-bp17y37ytsenqyim****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => '861E6630-AEC0-4B2D-B214-6CB5E44B7F04',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteEntryId.NotFound',
            'errorMessage' => 'Specified RouteEntryId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouteEntryName.Malformed',
            'errorMessage' => 'Specified RouteEntry name is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.ModifyManagedRouteEntry',
            'errorMessage' => 'The operation is not allowed because of route entry is managed.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableTypeNotPermitted',
            'errorMessage' => 'The operation is not allowed because the type of route table is not permitted.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.NewNextHopId',
            'errorMessage' => 'The parameter NewNextHopId is mandatory.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegealParam.NextHopType',
            'errorMessage' => 'The parameter NewNextHopType is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'UnsupportedFeature.NormalTypeNatGateway',
            'errorMessage' => 'Normal nat gateways do not support modifying the next hop of the route.',
          ),
          7 => 
          array (
            'errorCode' => 'UnsupportedFeature.NextHopType',
            'errorMessage' => 'The route type does not support modifying the next hop of the route.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidRouteTable.NotFound',
            'errorMessage' => 'The specified routetable does not exist.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidNetworkInterface.NotFound',
            'errorMessage' => 'The specified network interface does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationDenied.NextHopExist',
            'errorMessage' => 'The operation is not allowed because the nexthop already exists.',
          ),
          11 => 
          array (
            'errorCode' => 'MissingParam.NewNextHopType',
            'errorMessage' => 'The parameter NewNextHopType is mandatory.',
          ),
          12 => 
          array (
            'errorCode' => 'UnsupportedFeature.ModifyRouteEntryNextHop',
            'errorMessage' => 'The current region does not support the function of modifying the route next hop.',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          14 => 
          array (
            'errorCode' => 'ResourceNotFound.VSwitch',
            'errorMessage' => 'The vSwitch where the specified networkinterface is located does not exist.',
          ),
          15 => 
          array (
            'errorCode' => 'MissingParam.RouteEntryId',
            'errorMessage' => 'The param of %s is missing.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.RouteEntryName',
            'errorMessage' => 'The param of %s is illegal.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The specific NAT gateway is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouteEntryId.NotFound',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"861E6630-AEC0-4B2D-B214-6CB5E44B7F04\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyRouteEntryResponse>\\n    <RequestId>861E6630-AEC0-4B2D-B214-6CB5E44B7F04</RequestId>\\n</ModifyRouteEntryResponse>","errorExample":""}]',
      'title' => '修改自定义路由条目的名称和描述',
      'description' => '**ModifyRouteEntry**接口不支持并发修改同一个自定义路由条目的名称和描述。',
    ),
    'GetVpcRouteEntrySummary' => 
    array (
      'summary' => '调用GetVpcRouteEntrySummary接口查询路由类型的明细。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp15zckdt37pq72****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由的类型。取值：
- **all**：表示所有路由类型。
- **custom**：表示自定义路由。
- **system**：表示系统路由。
- **bgp**：表示BGP路由。
- **cen**：表示云企业网CEN（Cloud Enterprise Network）路由。
- **type_vpn_bgp_internal**：表示VPN的BGP路由。
- **ECR**：表示专线网关路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'custom',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表所属地域的ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC668356-BCB4-42FD-9BC3-FA2B2E04B634',
              ),
              'RouteEntrySummarys' => 
              array (
                'description' => '查询得到的所有路由表的信息集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询得到的所有路由表的信息集合。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RouteTableId' => 
                    array (
                      'description' => '路由表的ID。',
                      'type' => 'string',
                      'example' => 'vtb-bp145q7glnuzdvzu2****',
                    ),
                    'EntrySummarys' => 
                    array (
                      'description' => '单个路由表中不同类型路由条目数的集合。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '单个路由表中不同类型路由条目数的集合。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'RouteEntryType' => 
                          array (
                            'description' => '路由的类型。取值：
- **all**：表示所有路由类型。
- **custom**：表示自定义路由。
- **system**：表示系统路由。
- **bgp**：表示BGP路由。
- **cen**：表示云企业网CEN（Cloud Enterprise Network）路由。
- **type_vpn_bgp_internal**：表示VPN的BGP路由。
- **ECR**：表示专线网关路由。



> 返回的系统路由为系统路由表下的系统路由。',
                            'type' => 'string',
                            'example' => 'Custom',
                          ),
                          'Count' => 
                          array (
                            'description' => '列表条目数。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '10',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DC668356-BCB4-42FD-9BC3-FA2B2E04B634\\",\\n  \\"RouteEntrySummarys\\": [\\n    {\\n      \\"RouteTableId\\": \\"vtb-bp145q7glnuzdvzu2****\\",\\n      \\"EntrySummarys\\": [\\n        {\\n          \\"RouteEntryType\\": \\"Custom\\",\\n          \\"Count\\": 10\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetVpcRouteEntrySummaryResponse>\\n    <RequestId>DC668356-BCB4-42FD-9BC3-FA2B2E04B634</RequestId>\\n    <RouteEntrySummarys>\\n        <RouteTableId>vtb-bp145q7glnuzdvzu2****</RouteTableId>\\n        <EntrySummarys>\\n            <RouteEntryType>Custom</RouteEntryType>\\n            <Count>10</Count>\\n        </EntrySummarys>\\n    </RouteEntrySummarys>\\n</GetVpcRouteEntrySummaryResponse>","errorExample":""}]',
      'title' => '查询路由类型的明细',
      'description' => '
',
    ),
    'DescribeRouteTables' => 
    array (
      'summary' => '调用DescribeRouteTables接口查询路由表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'VRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由器的ID。

>**VRouterId**，**RouteTableId**，**RouterId**和**RouteTableName**参数至少需要输入一个，但是不能同时输入**VRouterId**和**RouterId**参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1lhl0taikrteen****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表的ID。

>**VRouterId**，**RouteTableId**，**RouterId**和**RouteTableName**参数至少需要输入一个，但是不能同时输入**VRouterId**和**RouterId**参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属的路由器的类型。取值：

- **VRouter**（默认值）：VPC路由器。
- **VBR**：边界路由器。',
            'type' => 'string',
            'required' => false,
            'example' => 'VRouter',
          ),
        ),
        4 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属路由器的ID。

>**VRouterId**，**RouteTableId**，**RouterId**和**RouteTableName**参数至少需要输入一个，但是不能同时输入**VRouterId**和**RouterId**参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1lhl0taikrteen8****',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由条目的类型。取值：

- **Custom**：自定义路由。
- **System**：系统路由。
- **BGP**：BGP路由。
- **CEN**：云企业网CEN（Cloud Enterprise Network）路由。
- **ECR**：专线网关路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'Custom',
          ),
        ),
        6 => 
        array (
          'name' => 'RouteTableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表的名称。

名称长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。

>**VRouterId**，**RouteTableId**，**RouterId**和**RouteTableName**参数至少需要输入一个，但是不能同时输入**VRouterId**和**RouterId**参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属资源组的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '每页包含的条目数。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC668356-BCB4-42FD-9BC3-FA2B2E04B634',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RouteTables' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouteTable' => 
                  array (
                    'description' => '路由表列表详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由表的创建时间。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '路由表的创建时间。

使用UTC时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2022-08-22T10:40:25Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '路由表的状态。取值：

- **Pending**：配置中。
- **Available**：可用。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'VRouterId' => 
                        array (
                          'description' => '路由器的ID。',
                          'type' => 'string',
                          'example' => 'vrt-bp1lhl0taikrteen****',
                        ),
                        'RouteTableType' => 
                        array (
                          'description' => '路由表的类型。取值：

- **Custom**：自定义路由表。
- **System**：系统路由表。',
                          'type' => 'string',
                          'example' => 'Custom',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '路由表所属资源组的ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph****',
                        ),
                        'RouteTableId' => 
                        array (
                          'description' => '路由表的ID。',
                          'type' => 'string',
                          'example' => 'vtb-bp145q7glnuzdvzu2****',
                        ),
                        'RouteEntrys' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RouteEntry' => 
                            array (
                              'description' => '路由条目信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由条目信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Type' => 
                                  array (
                                    'description' => '路由条目的类型。取值：

- **Custom**：自定义路由。
- **System**：系统路由。
- **BGP**：BGP路由。
- **CEN**：云企业网CEN（Cloud Enterprise Network）路由。
- **ECR**：专线网关路由。',
                                    'type' => 'string',
                                    'example' => 'Custom',
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => '路由条目的状态。取值：

- **Pending**：配置中。
- **Available**：可用。
- **Modifying**：修改中。',
                                    'type' => 'string',
                                    'example' => 'Available',
                                  ),
                                  'NextHopType' => 
                                  array (
                                    'description' => '下一跳类型。取值：

- **Instance**（默认值）：ECS实例。
- **HaVip**：高可用虚拟IP。
- **VpnGateway**：VPN网关。
- **NatGateway**：NAT网关。
- **NetworkInterface**：辅助弹性网卡。
- **RouterInterface**：路由器接口。
- **IPv6Gateway**：IPv6网关。
- **Attachment**：转发路由器。
- **Ipv4Gateway**：IPv4网关。
- **GatewayEndpoint**：网关终端节点。
- **CenBasic**：CEN不支持转发路由器。
- **Ecr**：专线网关。',
                                    'type' => 'string',
                                    'example' => 'Instance',
                                  ),
                                  'RouteEntryName' => 
                                  array (
                                    'description' => '路由条目的名称。

名称长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
                                    'type' => 'string',
                                    'example' => 'name',
                                  ),
                                  'RouteEntryId' => 
                                  array (
                                    'description' => '路由条目的ID。',
                                    'type' => 'string',
                                    'example' => 'rte-bp1mnnr2al0naomnp****',
                                  ),
                                  'InstanceId' => 
                                  array (
                                    'description' => '与下一跳相关联实例的实例ID。',
                                    'type' => 'string',
                                    'example' => 'vpc-bp1t36rn9l53iwbsf****',
                                  ),
                                  'RouteTableId' => 
                                  array (
                                    'description' => '路由表ID。',
                                    'type' => 'string',
                                    'example' => 'vtb-bp15w5q90d2rk3bww****',
                                  ),
                                  'Description' => 
                                  array (
                                    'description' => '路由条目的描述信息。
描述长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
                                    'type' => 'string',
                                    'example' => 'RouteEntryDescription',
                                  ),
                                  'DestinationCidrBlock' => 
                                  array (
                                    'description' => '路由条目的目标网段。支持IPv4和IPv6的目标网段。需满足以下要求：

- 目标网段不能指向100.64.0.0/10或被100.64.0.0/10包含。
- 同一张路由表内的不同路由条目的目标网段不能相同。',
                                    'type' => 'string',
                                    'example' => '192.168.2.0/24',
                                  ),
                                  'NextHops' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'NextHop' => 
                                      array (
                                        'description' => '下一跳信息。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '下一跳信息。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'NextHopId' => 
                                            array (
                                              'description' => '下一跳实例ID。',
                                              'type' => 'string',
                                              'example' => 'vpn-bp10zyaph5cc8b7c7****',
                                            ),
                                            'Weight' => 
                                            array (
                                              'description' => '路由条目的权重。',
                                              'type' => 'integer',
                                              'format' => 'int32',
                                              'example' => '100',
                                            ),
                                            'NextHopType' => 
                                            array (
                                              'description' => '下一跳类型。取值：

- **Instance**：ECS实例。
- **HaVip**：高可用虚拟IP。
- **VpnGateway**：VPN网关。
- **NatGateway**：NAT网关。
- **NetworkInterface**：辅助弹性网卡。
- **RouterInterface**：路由器接口。
- **IPv6Gateway**：IPv6网关。
- **Attachment**：转发路由器。
- **Ipv4Gateway**：IPv4网关。
- **GatewayEndpoint**：网关终端节点。
- **CenBasic**：CEN不支持转发路由器。
- **Ecr**：专线网关。',
                                              'type' => 'string',
                                              'example' => 'Instance',
                                            ),
                                            'Enabled' => 
                                            array (
                                              'description' => '路由是否可用。取值：

- **0**：不可用。
- **1**：可用。',
                                              'type' => 'integer',
                                              'format' => 'int32',
                                              'example' => '1',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'VSwitchIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VSwitchId' => 
                            array (
                              'description' => '交换机ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '交换机ID。',
                                'type' => 'string',
                                'example' => 'vsw-bp12mw1f8k3jgygk9****',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVRouterId.NotFound',
            'errorMessage' => 'Specified virtual router does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.DescribeCenRoute',
            'errorMessage' => 'An error occurred while querying the CEN route entry.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.VRouterNotExist',
            'errorMessage' => 'Operation failed because the VRouter does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'substitutions' => 
        array (
          0 => 'Vpc::2016-04-28::DescribeRouteTableList',
        ),
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"DC668356-BCB4-42FD-9BC3-FA2B2E04B634\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"RouteTables\\": {\\n    \\"RouteTable\\": [\\n      {\\n        \\"CreationTime\\": \\"2022-08-22T10:40:25Z\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"VRouterId\\": \\"vrt-bp1lhl0taikrteen****\\",\\n        \\"RouteTableType\\": \\"Custom\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n        \\"RouteTableId\\": \\"vtb-bp145q7glnuzdvzu2****\\",\\n        \\"RouteEntrys\\": {\\n          \\"RouteEntry\\": [\\n            {\\n              \\"Type\\": \\"Custom\\",\\n              \\"Status\\": \\"Available\\",\\n              \\"NextHopType\\": \\"Instance\\",\\n              \\"RouteEntryName\\": \\"name\\",\\n              \\"RouteEntryId\\": \\"rte-bp1mnnr2al0naomnp****\\",\\n              \\"InstanceId\\": \\"vpc-bp1t36rn9l53iwbsf****\\",\\n              \\"RouteTableId\\": \\"vtb-bp15w5q90d2rk3bww****\\",\\n              \\"Description\\": \\"RouteEntryDescription\\",\\n              \\"DestinationCidrBlock\\": \\"192.168.2.0/24\\",\\n              \\"NextHops\\": {\\n                \\"NextHop\\": [\\n                  {\\n                    \\"NextHopId\\": \\"vpn-bp10zyaph5cc8b7c7****\\",\\n                    \\"Weight\\": 100,\\n                    \\"NextHopType\\": \\"Instance\\",\\n                    \\"Enabled\\": 1\\n                  }\\n                ]\\n              }\\n            }\\n          ]\\n        },\\n        \\"VSwitchIds\\": {\\n          \\"VSwitchId\\": [\\n            \\"vsw-bp12mw1f8k3jgygk9****\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouteTablesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>DC668356-BCB4-42FD-9BC3-FA2B2E04B634</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <RouteTables>\\n        <CreationTime>2022-08-22T10:40:25Z</CreationTime>\\n        <Status>Available</Status>\\n        <VRouterId>vrt-bp1lhl0taikrteen****</VRouterId>\\n        <RouteTableType>Custom</RouteTableType>\\n        <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n        <RouteTableId>vtb-bp145q7glnuzdvzu2****</RouteTableId>\\n        <RouteEntrys>\\n            <Type>Custom</Type>\\n            <Status>Available</Status>\\n            <NextHopType>Instance</NextHopType>\\n            <RouteEntryName>name</RouteEntryName>\\n            <RouteEntryId>rte-bp1mnnr2al0naomnp****</RouteEntryId>\\n            <InstanceId>vpc-bp1t36rn9l53iwbsf****</InstanceId>\\n            <RouteTableId>vtb-bp15w5q90d2rk3bww****</RouteTableId>\\n            <Description>RouteEntryDescription</Description>\\n            <DestinationCidrBlock>192.168.2.0/24</DestinationCidrBlock>\\n            <NextHops>\\n                <NextHopId>vpn-bp10zyaph5cc8b7c7****</NextHopId>\\n                <Weight>100</Weight>\\n                <NextHopType>Instance</NextHopType>\\n                <Enabled>1</Enabled>\\n            </NextHops>\\n        </RouteEntrys>\\n        <VSwitchIds>vsw-bp12mw1f8k3jgygk9****</VSwitchIds>\\n    </RouteTables>\\n</DescribeRouteTablesResponse>","errorExample":""}]',
      'title' => '查询路由表',
    ),
    'DescribeRouteEntryList' => 
    array (
      'summary' => '调用DescribeRouteEntryList查询路由条目列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目所在路由表的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1r9pvl4xen8s9ju****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由条目的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rte-bp1mnnr2al0naomnp****',
          ),
        ),
        3 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段，支持IPv4和IPv6网段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.2.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        5 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP协议的版本。取值：

- **ipv4**：ipv4协议。

- **ipv6**：ipv6协议。
',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
          ),
        ),
        6 => 
        array (
          'name' => 'RouteEntryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由的类型。取值：

- **Custom**：自定义路由。
- **System**：系统路由。
- **BGP**：BGP路由。
- **CEN**：云企业网CEN（Cloud Enterprise Network）路由。
- **ECR**：专线网关路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'System',
          ),
        ),
        7 => 
        array (
          'name' => 'NextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳实例ID。
',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-bp10zyaph5cc8b7c7****',
          ),
        ),
        8 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **Instance**（默认值）：ECS实例。

- **HaVip**：高可用虚拟IP。

- **VpnGateway**：VPN网关。

- **NatGateway**：NAT网关。

- **NetworkInterface**：辅助弹性网卡。

- **RouterInterface**：路由器接口。

- **IPv6Gateway**：IPv6网关。

- **Attachment**：转发路由器。
- **Ipv4Gateway**：IPv4网关。
- **GatewayEndpoint**：网关终端节点。
- **CenBasic**：CEN不支持转发路由器。
- **Ecr**：专线网关。',
            'type' => 'string',
            'required' => false,
            'example' => 'Instance',
          ),
        ),
        9 => 
        array (
          'name' => 'MaxResult',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'example' => '10',
            'default' => '100',
          ),
        ),
        10 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        11 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目所在路由表的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        12 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由托管的类型。如果该字段为空，即表示该路由没有被托管。

取值：**TR**，表示托管类型为转发路由器类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'TR',
          ),
        ),
        13 => 
        array (
          'name' => 'DestCidrBlockList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由条目的目标网段列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由条目的目标网段列表信息。最多支持输入20个目标网段。',
              'type' => 'string',
              'required' => false,
              'example' => '192.168.0.0/24',
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '路由条目详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '14A07460-EBE7-47CA-9757-12CC4761D47A',
              ),
              'RouteEntrys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouteEntry' => 
                  array (
                    'description' => '路由条目信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由条目信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '路由条目的状态。取值：

- **Pending**：配置中。

- **Available**：可用。

- **Modifying**：修改中。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'Type' => 
                        array (
                          'description' => '路由条目的类型。取值：

- **Custom**：自定义路由。
- **System**：系统路由。
- **BGP**：BGP路由。
- **CEN**：云企业网CEN（Cloud Enterprise Network）路由。
- **ECR**：专线网关路由。',
                          'type' => 'string',
                          'example' => 'System',
                        ),
                        'IpVersion' => 
                        array (
                          'description' => 'IP协议的版本。取值：

- **ipv4**：ipv4协议。

- **ipv6**：ipv6协议。',
                          'type' => 'string',
                          'example' => 'ipv4',
                        ),
                        'Description' => 
                        array (
                          'description' => '路由条目的描述信息。',
                          'type' => 'string',
                          'example' => 'RouteEntryDescription',
                        ),
                        'RouteEntryName' => 
                        array (
                          'description' => '路由条目的名称。',
                          'type' => 'string',
                          'example' => 'aaa',
                        ),
                        'DestinationCidrBlock' => 
                        array (
                          'description' => '路由条目的目标网段。',
                          'type' => 'string',
                          'example' => '192.168.2.0/24',
                        ),
                        'RouteEntryId' => 
                        array (
                          'description' => '路由条目的ID。',
                          'type' => 'string',
                          'example' => 'rte-bp1mnnr2al0naomnp****',
                        ),
                        'RouteTableId' => 
                        array (
                          'description' => '路由表ID。',
                          'type' => 'string',
                          'example' => 'vtb-bp15w5q90d2rk3bww****',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '路由条目的修改时间。使用UTC时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'format' => 'iso8601',
                          'example' => '2022-05-09T03:00:07Z',
                        ),
                        'NextHops' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NextHop' => 
                            array (
                              'description' => '下一跳信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '下一跳信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'NextHopRegionId' => 
                                  array (
                                    'description' => ' 下一跳实例所在的地域ID。

> 下一跳类型为**RouterInterface**时返回该参数。',
                                    'type' => 'string',
                                    'example' => 'cn-hangzhou',
                                  ),
                                  'Weight' => 
                                  array (
                                    'description' => '路由条目的权重。

> 下一跳类型为**RouterInterface**时返回该参数。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '100',
                                  ),
                                  'NextHopId' => 
                                  array (
                                    'description' => '下一跳实例ID。',
                                    'type' => 'string',
                                    'example' => 'vpn-bp10zyaph5cc8b7c7****',
                                  ),
                                  'Enabled' => 
                                  array (
                                    'description' => '路由是否可用。取值：

- **0**：不可用。

- **1**：可用。

> 下一跳类型为**RouterInterface**时返回该参数。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'NextHopType' => 
                                  array (
                                    'description' => '下一跳类型。取值：

- **Instance**：ECS实例。

- **HaVip**：高可用虚拟IP。

- **VpnGateway**：VPN网关。

- **NatGateway**：NAT网关。

- **NetworkInterface**：辅助弹性网卡。

- **RouterInterface**：路由器接口。

- **IPv6Gateway**：IPv6网关。

- **Attachment**：转发路由器。
- **Ipv4Gateway**：IPv4网关。
- **GatewayEndpoint**：网关终端节点。
- **CenBasic**：CEN不支持转发路由器。
- **Ecr**：专线网关。',
                                    'type' => 'string',
                                    'example' => 'Instance',
                                  ),
                                  'NextHopRelatedInfo' => 
                                  array (
                                    'description' => '下一跳相关信息。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'InstanceId' => 
                                      array (
                                        'description' => '与下一跳相关联实例的实例ID。',
                                        'type' => 'string',
                                        'example' => 'vpc-bp1t36rn9l53iwbsf****',
                                      ),
                                      'InstanceType' => 
                                      array (
                                        'description' => '与下一跳相关联实例的实例类型。取值：

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **PCONN**：物理专线。',
                                        'type' => 'string',
                                        'example' => 'VPC',
                                      ),
                                      'RegionId' => 
                                      array (
                                        'description' => '下一跳相关联实例所在的地域ID。',
                                        'type' => 'string',
                                        'example' => 'ch-hangzhou',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ServiceType' => 
                        array (
                          'description' => '路由托管的类型。如果该字段为空，即表示该路由没有被托管。

取值：**TR**，表示托管类型为转发路由器类型。',
                          'type' => 'string',
                          'example' => 'TR',
                        ),
                        'Origin' => 
                        array (
                          'description' => '路由创建来源。取值：

- **RoutePropagation**：动态传播源创建。
- **SystemCreate**：系统创建。
- **CustomCreate**：自定义创建。',
                          'type' => 'string',
                          'example' => 'RoutePropagation',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTable.NotFound',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.RouteEntryType',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.context',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.aliUid',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.bid',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.IpVersion',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.FilterParamUnderWrongRouteType',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'User nextToken is illegal.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.NextTokenExpired',
            'errorMessage' => '%s',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidNextHop.NotFound',
            'errorMessage' => 'The specified route entry nexthop does not exist in our records.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.QueryCenEntry',
            'errorMessage' => 'Operation is denied because getting CEN route entry has failed.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationDenied.UseGatewayRouteEntryQueryInterface',
            'errorMessage' => 'Use listGatewayRouteTableEntries to describe gateway route entries.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"14A07460-EBE7-47CA-9757-12CC4761D47A\\",\\n  \\"RouteEntrys\\": {\\n    \\"RouteEntry\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"Type\\": \\"System\\",\\n        \\"IpVersion\\": \\"ipv4\\",\\n        \\"Description\\": \\"RouteEntryDescription\\",\\n        \\"RouteEntryName\\": \\"aaa\\",\\n        \\"DestinationCidrBlock\\": \\"192.168.2.0/24\\",\\n        \\"RouteEntryId\\": \\"rte-bp1mnnr2al0naomnp****\\",\\n        \\"RouteTableId\\": \\"vtb-bp15w5q90d2rk3bww****\\",\\n        \\"GmtModified\\": \\"2022-05-09T03:00:07Z\\",\\n        \\"NextHops\\": {\\n          \\"NextHop\\": [\\n            {\\n              \\"NextHopRegionId\\": \\"cn-hangzhou\\",\\n              \\"Weight\\": 100,\\n              \\"NextHopId\\": \\"vpn-bp10zyaph5cc8b7c7****\\",\\n              \\"Enabled\\": 1,\\n              \\"NextHopType\\": \\"Instance\\",\\n              \\"NextHopRelatedInfo\\": {\\n                \\"InstanceId\\": \\"vpc-bp1t36rn9l53iwbsf****\\",\\n                \\"InstanceType\\": \\"VPC\\",\\n                \\"RegionId\\": \\"ch-hangzhou\\"\\n              }\\n            }\\n          ]\\n        },\\n        \\"ServiceType\\": \\"TR\\",\\n        \\"Origin\\": \\"RoutePropagation\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouteEntryListResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>14A07460-EBE7-47CA-9757-12CC4761D47A</RequestId>\\n    <RouteEntrys>\\n        <Status>Available</Status>\\n        <Type>Custom</Type>\\n        <IpVersion>ipv4</IpVersion>\\n        <Description>RouteEntryDescription</Description>\\n        <RouteEntryName>aaa</RouteEntryName>\\n        <DestinationCidrBlock>192.168.2.0/24</DestinationCidrBlock>\\n        <RouteEntryId>rte-bp1mnnr2al0naomnp****</RouteEntryId>\\n        <RouteTableId>vtb-bp15w5q90d2rk3bww****</RouteTableId>\\n        <GmtModified>2022-05-09T03:00:07Z</GmtModified>\\n        <NextHops>\\n            <NextHopRegionId>cn-hangzhou</NextHopRegionId>\\n            <Weight>100</Weight>\\n            <NextHopId>vpn-bp10zyaph5cc8b7c7****</NextHopId>\\n            <Enabled>1</Enabled>\\n            <NextHopType>Instance</NextHopType>\\n            <NextHopRelatedInfo>\\n                <InstanceId>vpc-bp1t36rn9l53iwbsf****</InstanceId>\\n                <InstanceType>VPC</InstanceType>\\n                <RegionId>ch-hangzhou</RegionId>\\n            </NextHopRelatedInfo>\\n        </NextHops>\\n        <ServiceType>TR</ServiceType>\\n    </RouteEntrys>\\n</DescribeRouteEntryListResponse>","errorExample":""}]',
      'title' => '查询路由条目列表',
      'description' => '调用[DeleteRouteEntry](~~36013~~)接口删除路由条目前，您可以调用本接口查询要删除的路由条目的下一跳信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRouteTableList' => 
    array (
      'summary' => '调用DescribeRouteTableList接口查询路由表列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属的路由器的类型。取值： 

- **VRouter**（默认值）：VPC路由器。

- **VBR**：边界路由器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'VRouter',
            'default' => 'VRouter',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属路由器的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1lhl0taikrteen8****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属的VPC的ID。

指定该参数后，**RouterType**参数的值自动设置为**VRouter**。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp15zckdt37pq72****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-bp145q7glnuzdvzu2****',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteTableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属资源组的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由表所属的VPC的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        9 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        10 => 
        array (
          'name' => 'RouteTableType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的类型。

- **System**：系统路由表。

- **Custom**：自定义路由表。
',
            'type' => 'string',
            'required' => false,
            'example' => 'System',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询的路由表详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC668356-BCB4-42FD-9BC3-FA2B2E04B634',
              ),
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RouterTableList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouterTableListType' => 
                  array (
                    'description' => '路由表列表详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由表列表详细信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => '路由表所属的VPC的ID。
',
                          'type' => 'string',
                          'example' => 'vpc-bp15zckdt37pq72****',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '路由表的创建时间。',
                          'type' => 'string',
                          'example' => '2021-08-22T10:40:25Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '路由表的状态。取值：

- **Pending**：创建中。

- **Available**：可用。

- **Deleting**：删除中。

',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'RouterId' => 
                        array (
                          'description' => '路由表所属的路由器ID。',
                          'type' => 'string',
                          'example' => 'vrt-bp1lhl0taikrteen8****',
                        ),
                        'AssociateType' => 
                        array (
                          'description' => '路由表绑定的云资源类型。取值：

- **VSwitch**：交换机。

- **Gateway**：IPv4网关。',
                          'type' => 'string',
                          'example' => 'VSwitch',
                        ),
                        'RouteTableId' => 
                        array (
                          'description' => '路由表的ID。',
                          'type' => 'string',
                          'example' => 'vtb-bp145q7glnuzdvzu2****',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => '路由表所属阿里云账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '253460731706911258',
                        ),
                        'Description' => 
                        array (
                          'description' => '路由表的描述。',
                          'type' => 'string',
                          'example' => 'This is Route Table.',
                        ),
                        'RouteTableType' => 
                        array (
                          'description' => '路由表的类型。取值：

- **Custom**：自定义路由表。

- **System**：系统路由表。',
                          'type' => 'string',
                          'example' => 'System',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '路由表所属资源组的ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph****',
                        ),
                        'RouterType' => 
                        array (
                          'description' => '路由表所属路由器的类型。取值：

- **VRouter**：VPC路由器。

- **VBR**：边界路由器。',
                          'type' => 'string',
                          'example' => 'VRouter',
                        ),
                        'RouteTableName' => 
                        array (
                          'description' => '路由表的名称。',
                          'type' => 'string',
                          'example' => 'doctest',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '路由表的标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由表的标签。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '路由表绑定的标签键。',
                                    'type' => 'string',
                                    'example' => 'type',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '路由表绑定的标签键对应的值。',
                                    'type' => 'string',
                                    'example' => 'ingress',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'VSwitchIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VSwitchId' => 
                            array (
                              'description' => '交换机列表信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '交换机ID。',
                                'type' => 'string',
                                'example' => 'vsw-bp12mw1f8k3jgygk9****',
                              ),
                            ),
                          ),
                        ),
                        'GatewayIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GatewayIds' => 
                            array (
                              'description' => 'IPv4网关详细信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'IPv4网关详细信息。',
                                'type' => 'string',
                                'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
                              ),
                            ),
                          ),
                        ),
                        'RoutePropagationEnable' => 
                        array (
                          'description' => '路由表是否接收传播路由。取值：

- **true**：路由表接收。
- **false**：路由表不接收。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'IellgalParameter.OwnerAccount',
            'errorMessage' => 'The specified parameter OwnerAccount is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'Abs.InvalidPayType',
            'errorMessage' => 'Specified pay type is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'Abs.InstanceNotExist',
            'errorMessage' => 'Specified instance not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Abs.Forbidden',
            'errorMessage' => 'Specified instance cannot change pay type.',
          ),
          4 => 
          array (
            'errorCode' => 'Abs.InvalidPayPeriod',
            'errorMessage' => 'Specified pay period not valid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DC668356-BCB4-42FD-9BC3-FA2B2E04B634\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"RouterTableList\\": {\\n    \\"RouterTableListType\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-bp15zckdt37pq72****\\",\\n        \\"CreationTime\\": \\"2021-08-22T10:40:25Z\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"RouterId\\": \\"vrt-bp1lhl0taikrteen8****\\",\\n        \\"AssociateType\\": \\"VSwitch\\",\\n        \\"RouteTableId\\": \\"vtb-bp145q7glnuzdvzu2****\\",\\n        \\"OwnerId\\": 253460731706911260,\\n        \\"Description\\": \\"This is Route Table.\\",\\n        \\"RouteTableType\\": \\"System\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n        \\"RouterType\\": \\"VRouter\\",\\n        \\"RouteTableName\\": \\"doctest\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"type\\",\\n              \\"Value\\": \\"ingress\\"\\n            }\\n          ]\\n        },\\n        \\"VSwitchIds\\": {\\n          \\"VSwitchId\\": [\\n            \\"vsw-bp12mw1f8k3jgygk9****\\"\\n          ]\\n        },\\n        \\"GatewayIds\\": {\\n          \\"GatewayIds\\": [\\n            \\"ipv4gw-5tsnc6s4ogsedtp3k****\\"\\n          ]\\n        },\\n        \\"RoutePropagationEnable\\": true\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouteTableListResponse>\\n    <RequestId>DC668356-BCB4-42FD-9BC3-FA2B2E04B634</RequestId>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <RouterTableList>\\n        <VpcId>vpc-bp15zckdt37pq72****</VpcId>\\n        <CreationTime>2021-08-22T10:40:25Z</CreationTime>\\n        <Status>Available</Status>\\n        <RouterId>vrt-bp1lhl0taikrteen8****</RouterId>\\n        <AssociateType>VSwitch</AssociateType>\\n        <RouteTableId>vtb-bp145q7glnuzdvzu2****</RouteTableId>\\n        <OwnerId>253460731706911260</OwnerId>\\n        <Description>This is Route Table.</Description>\\n        <RouteTableType>System</RouteTableType>\\n        <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n        <RouterType>VRouter</RouterType>\\n        <RouteTableName>doctest</RouteTableName>\\n        <Tags>\\n            <Key>type</Key>\\n            <Value>ingress</Value>\\n        </Tags>\\n        <VSwitchIds>vsw-bp12mw1f8k3jgygk9****</VSwitchIds>\\n        <GatewayIds>ipv4gw-5tsnc6s4ogsedtp3k****</GatewayIds>\\n    </RouterTableList>\\n</DescribeRouteTableListResponse>","errorExample":""}]',
      'title' => '查询路由表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVpcPrefixList' => 
    array (
      'summary' => '调用CreateVpcPrefixList接口创建前缀列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        1 => 
        array (
          'name' => 'PrefixListDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建前缀列表。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接创建前缀列表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxEntries',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表中CIDR地址块的最大条目数。默认值为50条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
        5 => 
        array (
          'name' => 'PrefixListEntries',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '前缀列表的CIDR地址块信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '前缀列表的CIDR地址块信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Cidr' => 
                array (
                  'description' => '前缀列表的CIDR地址块。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.0.0/16',
                ),
                'Description' => 
                array (
                  'description' => '前缀列表CIDR地址块的描述信息。


描述长度为1～256个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'CIDR',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的前缀列表所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        8 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP版本类型。取值：

- **IPv4**（默认值）：IPv4类型。
- **IPv6**：IPv6类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        9 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '前缀列表的实例ID。',
            'type' => 'object',
            'properties' => 
            array (
              'PrefixListId' => 
              array (
                'description' => '前缀列表的实例ID。',
                'type' => 'string',
                'example' => 'pl-0b700s2ee3***',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '前缀列表所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-bp67acfmxazb4ph****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.IpVersion',
            'errorMessage' => 'The ipversion type is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.PrefixListCidrCount',
            'errorMessage' => 'The quota of prefixListMaxEntry count is exceeded.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.CidrCountExceedMaxCount',
            'errorMessage' => 'The operation is failed because of cidrCountExceedMaxCount.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The param of cidrBlock is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.CidrName',
            'errorMessage' => 'The param of cidrName is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'DuplicatedParam.CidrBlock',
            'errorMessage' => 'The param of cidrBlock is duplicated.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.PrefixListCount',
            'errorMessage' => 'The quota of prefixList count is exceeded.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListPrefixLists',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PrefixListId\\": \\"pl-0b700s2ee3***\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVpcPrefixListResponse>\\n    <PrefixListId>pl-0b700s2ee3***</PrefixListId>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n</CreateVpcPrefixListResponse>","errorExample":""}]',
      'title' => '创建前缀列表',
      'description' => '**CreateVpcPrefixList**接口不支持在同一个地域内并发创建前缀列表。',
    ),
    'RetryVpcPrefixListAssociation' => 
    array (
      'summary' => '调用RetryVpcPrefixListAssociation接口重新下发最新的前缀列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要重新下发的前缀列表的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pl-0b7hwu67****',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联前缀列表实例的资源类型。取值：

- **vpcRouteTable**：VPC路由表。
- **trRouteTable**：转发路由器的路由表。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpcRouteTable',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的资源的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-bp1drpcfz9srr393h****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会关联前缀列表。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接关联前缀列表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要重新下发的前缀列表实例所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature of prefixList entry is not supported in this region.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied.SystemPrefixList',
            'errorMessage' => 'The operation is not allowed because of SystemPrefixList.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.OperateShareResource',
            'errorMessage' => 'This is not allowed to operate shared prefixList.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.PrefixList',
            'errorMessage' => 'The status of prefixList is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.NotExistAssociateRelation',
            'errorMessage' => 'The operation is failed because of association not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified resource of prefixList is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::GetVpcPrefixListAssociations',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<RetryVpcPrefixListAssociationResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</RetryVpcPrefixListAssociationResponse>","errorExample":""}]',
      'title' => '重新下发最新的前缀列表',
      'description' => '- 当您修改了前缀列表实例的信息后，关联前缀列表实例的路由表中未自动更新成功前缀列表实例的信息时，您可以使用该接口重新向关联的路由表下发最新的前缀列表实例。
- **RetryVpcPrefixListAssociation**接口属于异步接口，即系统返回一个请求ID，但该最新的前缀列表实例尚未重新下发成功，系统后台的重新下发任务仍在进行。您可以调用[GetVpcPrefixListAssociations](~~445478~~)查询前缀列表实例的最新下发状态：
    - 当前缀列表实例的下发状态处于**Modifying**时，表示最新的前缀列表实例正在重新下发中。
    - 当前缀列表实例的下发状态处于**ModifyFailed**时，表示最新的前缀列表实例重新下发失败。
    - 当前缀列表实例的下发状态处于**Created**时，表示最新的前缀列表实例重新下发成功。
- **RetryVpcPrefixListAssociation**接口不支持针对同一个前缀列表并发重试下发最新的前缀列表实例。
## 场景说明
修改前缀列表实例时，只要CIDR网段合法并且没有冲突的CIRD网段，也没有超过前缀列表实例的最大条目数即可修改成功。然而由于引用方的原因（例如，由于配额的原因或者与已有的路由冲突），可能会导致引用失败。您可以在引用方处将失败的问题解决后，请调用**RetryVpcPrefixListAssociation**接口，重新下发最新的前缀列表实例。',
    ),
    'DeleteVpcPrefixList' => 
    array (
      'summary' => '调用DeleteVpcPrefixList接口删除前缀列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的前缀列表的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pl-0b78hw45f****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会删除前缀列表。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接删除前缀列表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的前缀列表所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '64B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList	',
            'errorMessage' => 'The specified resource of prefixList is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.SystemPrefixList',
            'errorMessage' => 'This is not allowed to operate system prefixList.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.DeleteShareResource',
            'errorMessage' => 'This is not allowed to delete shared prefixList.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.PrefixList',
            'errorMessage' => 'The status of prefixList is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.PrefixListRelation',
            'errorMessage' => 'The specified resource of prefixList depends on prefixList relation, so the operation cannot be completed.',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.ShareResource',
            'errorMessage' => 'The specified resource of prefixList depends on share resource, so the operation cannot be completed.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListPrefixLists',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"64B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVpcPrefixListResponse>\\n    <RequestId>64B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteVpcPrefixListResponse>","errorExample":""}]',
      'title' => '删除前缀列表',
      'description' => '**DeleteVpcPrefixList**接口不支持并发删除同一个前缀列表实例。',
    ),
    'ModifyVpcPrefixList' => 
    array (
      'summary' => '调用ModifyVpcPrefixList接口修改前缀列表的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的前缀列表的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pl-0b7hwu67****',
          ),
        ),
        1 => 
        array (
          'name' => 'PrefixListName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的前缀列表的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'newname',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改前缀列表的配置信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接修改前缀列表的配置信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'AddPrefixListEntry',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要添加的前缀列表实例的CIDR地址块列表信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要添加的前缀列表实例的CIDR地址块信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Cidr' => 
                array (
                  'description' => '要添加的前缀列表实例的CIDR地址块。

> 如果要添加的CIDR地址块已经在前缀列表中存在，则只修改**AddPrefixListEntry.N.Description**的值，即只修改该CIDR地址块的描述信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '172.16.0.0/12',
                ),
                'Description' => 
                array (
                  'description' => '要添加的前缀列表实例的CIDR地址块描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'newcidr',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        5 => 
        array (
          'name' => 'RemovePrefixListEntry',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要删除的前缀列表实例的CIDR地址块列表信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要删除的前缀列表实例的CIDR地址块列表信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Cidr' => 
                array (
                  'description' => '要删除的前缀列表实例的CIDR地址块。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.0.0/16',
                ),
                'Description' => 
                array (
                  'description' => '要删除的前缀列表的CIDR地址块的描述信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cidr',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改配置信息的前缀列表实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'PrefixListDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的前缀列表实例的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'newdescription',
          ),
        ),
        8 => 
        array (
          'name' => 'MaxEntries',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的前缀列表实例的最大CIDR地址块条目数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PrefixListId' => 
              array (
                'description' => '前缀列表的实例ID。',
                'type' => 'string',
                'example' => 'pl-0b7hwu67****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified resource of prefixList is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.CidrCountExceedMaxCount',
            'errorMessage' => 'The operation is failed because of cidrCountExceedMaxCount.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.RemoveCountExceedExistCount',
            'errorMessage' => 'The operation is not allowed because of remove-count exceed exist-count.',
          ),
          3 => 
          array (
            'errorCode' => 'DuplicatedParam.CidrBlock',
            'errorMessage' => 'The param of cidrBlock is duplicated.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The param of cidrBlock is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.CidrName',
            'errorMessage' => 'The param of cidrName is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationDenied.SystemPrefixList',
            'errorMessage' => 'This is not allowed to operate system prefixList.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.OperateShareResource',
            'errorMessage' => 'This is not allowed to operate shared prefixList.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.PrefixList',
            'errorMessage' => 'The status of prefixList is incorrect.',
          ),
          9 => 
          array (
            'errorCode' => 'QuotaExceeded.PrefixListCidrCount',
            'errorMessage' => 'The quota of prefixList entry maxEntry count is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded',
            'errorMessage' => 'Route entry quota exceeded in associated route table.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListPrefixLists',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PrefixListId\\": \\"pl-0b7hwu67****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpcPrefixListResponse>\\n    <PrefixListId>pl-0b7hwu67****</PrefixListId>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ModifyVpcPrefixListResponse>","errorExample":""}]',
      'title' => '修改前缀列表的配置信息',
      'description' => '- **ModifyVpcPrefixList**接口属于异步接口，即系统返回一个请求ID，但该前缀列表实例的配置信息尚未修改成功，系统后台的修改任务仍在进行。您可以调用[ListPrefixLists](~~311535~~)查询前缀列表实例的状态。
    - 当前缀列表实例处于**Modifying**状态时，表示前缀列表实例的配置信息正在修改中。
    - 当前缀列表实例处于**Created**状态时，表示前缀列表实例的配置信息修改成功。
    - 前缀列表实例的配置信息修改成功后，您可以调用[GetVpcPrefixListAssociations](~~445478~~)接口查询前缀列表的关联关系来确定关联的资源是否使用的是修改后的CIDR地址块，当前缀列表的关联状态即**Status**参数取值为**Created**时，表示关联的资源使用的CIDR地址块为修改后的CIDR地址块。

- **ModifyVpcPrefixList**接口不支持并发修改同一个前缀列表实例的配置信息。',
    ),
    'ListPrefixLists' => 
    array (
      'summary' => '调用ListPrefixLists接口查询前缀列表的列表信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '前缀列表的实例ID',
            'description' => '要查询的前缀列表ID。**N**的取值范围为**1**~**100**，即一次最多查询100个前缀列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '前缀列表的实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pl-0b7hwu67****',
            ),
            'required' => false,
            'example' => 'pl-m5estsqsdqwg88hjf****',
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        4 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要查询前缀列表的信息的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        6 => 
        array (
          'name' => 'PrefixListName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的前缀列表的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DF72F7BB-5DFA-529C-887E-B0BB70D89C4F',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的列表数目。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'PrefixLists' => 
              array (
                'description' => '查询到的前缀列表的列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询到的前缀列表的列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PrefixListId' => 
                    array (
                      'title' => '前缀列表的实例ID',
                      'description' => '查询到的前缀列表ID。',
                      'type' => 'string',
                      'example' => 'pl-m5estsqsdqwg88hjf****',
                    ),
                    'PrefixListName' => 
                    array (
                      'title' => '名称',
                      'description' => '前缀列表的名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'PrefixListDescription' => 
                    array (
                      'title' => '描述',
                      'description' => '前缀列表的描述信息。',
                      'type' => 'string',
                      'example' => 'Created with oss service by system.',
                    ),
                    'IpVersion' => 
                    array (
                      'title' => 'IpVersion',
                      'description' => '前缀列表的IP版本。取值：

- **IPV4**：IPv4版本。
- **IPV6**：IPv6版本。',
                      'type' => 'string',
                      'example' => 'IPV4',
                    ),
                    'CreationTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '前缀列表的创建时间。',
                      'type' => 'string',
                      'example' => '2022-07-12T14:22:32Z',
                    ),
                    'CidrBlocks' => 
                    array (
                      'title' => '前缀列表包含的网段',
                      'description' => '前缀列表的CIDR地址块信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '前缀列表的CIDR地址块信息。',
                        'type' => 'string',
                        'example' => '100.115.XX.XX/24',
                      ),
                    ),
                    'ShareType' => 
                    array (
                      'description' => '前缀列表的共享类型。取值：

- **Shared**：表示该前缀列表为共享的前缀列表。
- 空：表示该前缀列表不是共享的前缀列表。',
                      'type' => 'string',
                      'example' => 'Shared',
                    ),
                    'MaxEntries' => 
                    array (
                      'description' => '前缀列表中CIDR地址块的最大条目数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'Status' => 
                    array (
                      'description' => '前缀列表的状态。取值：

- **Created**：已创建。
- **Deleted**：已删除。
- **Modifying**：修改中。
',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'OwnerId' => 
                    array (
                      'description' => '前缀列表所属的阿里云账号（主账号）。',
                      'type' => 'string',
                      'example' => '1210123456123456',
                    ),
                    'PrefixListStatus' => 
                    array (
                      'description' => '前缀列表的状态。取值：

- **Created**：已创建。
- **Deleted**：已删除。
- **Modifying**：修改中。

> 该参数与**Status**含义和取值相同。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '查询到的前缀列表信息的地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '前缀列表所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-bp67acfmxazb4ph****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                    'PrefixListType' => 
                    array (
                      'title' => '前缀列表类型',
                      'description' => '前缀列表类型',
                      'type' => 'string',
                      'example' => 'Custom',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DF72F7BB-5DFA-529C-887E-B0BB70D89C4F\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"PrefixLists\\": [\\n    {\\n      \\"PrefixListId\\": \\"pl-m5estsqsdqwg88hjf****\\",\\n      \\"PrefixListName\\": \\"test\\",\\n      \\"PrefixListDescription\\": \\"Created with oss service by system.\\",\\n      \\"IpVersion\\": \\"IPV4\\",\\n      \\"CreationTime\\": \\"2022-07-12T14:22:32Z\\",\\n      \\"CidrBlocks\\": [\\n        \\"100.115.XX.XX/24\\"\\n      ],\\n      \\"ShareType\\": \\"Shared\\",\\n      \\"MaxEntries\\": 10,\\n      \\"Status\\": \\"Created\\",\\n      \\"OwnerId\\": \\"1210123456123456\\",\\n      \\"PrefixListStatus\\": \\"Created\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ],\\n      \\"PrefixListType\\": \\"Custom\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListPrefixListsResponse>\\n    <RequestId>DF72F7BB-5DFA-529C-887E-B0BB70D89C4F</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <PrefixLists>\\n        <PrefixListId>pl-m5estsqsdqwg88hjf****</PrefixListId>\\n        <PrefixListName>test</PrefixListName>\\n        <PrefixListDescription>Created with oss service by system.</PrefixListDescription>\\n        <IpVersion>IPV4</IpVersion>\\n        <CreationTime>2022-07-12T14:22:32Z</CreationTime>\\n        <CidrBlocks>100.115.XX.XX/24</CidrBlocks>\\n        <ShareType>Shared</ShareType>\\n        <MaxEntries>10</MaxEntries>\\n        <Status>Created</Status>\\n        <OwnerId>1210123456123456</OwnerId>\\n        <PrefixListStatus>Created</PrefixListStatus>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </PrefixLists>\\n</ListPrefixListsResponse>","errorExample":""}]',
      'title' => '查询前缀列表的列表信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetVpcPrefixListAssociations' => 
    array (
      'summary' => '调用GetVpcPrefixListAssociations接口查询前缀列表的关联关系。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的前缀列表的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pl-0b7hwu67****',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '50',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要查询的前缀列表所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'Count' => 
              array (
                'description' => '条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PrefixListAssociation' => 
              array (
                'description' => '前缀列表的关联关系列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '前缀列表的关联关系列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PrefixListId' => 
                    array (
                      'title' => '前缀列表的实例ID',
                      'description' => '前缀列表的实例ID。',
                      'type' => 'string',
                      'example' => 'pl-0b7hwu67****',
                    ),
                    'ResourceId' => 
                    array (
                      'title' => '状态',
                      'description' => '关联的资源ID。',
                      'type' => 'string',
                      'example' => 'vtb-bp1drpcfz9srr393h****',
                    ),
                    'ResourceType' => 
                    array (
                      'title' => '名称',
                      'description' => '关联的资源类型。取值：

- **vpcRouteTable**：VPC路由表。
- **trRouteTable**：转发路由器的路由表。',
                      'type' => 'string',
                      'example' => 'vpcRouteTable',
                    ),
                    'OwnerId' => 
                    array (
                      'description' => '前缀列表所属的阿里云账号（主账号）ID。',
                      'type' => 'string',
                      'example' => '153460731706****',
                    ),
                    'Status' => 
                    array (
                      'title' => 'IpVersion',
                      'description' => '前缀列表的关联状态。取值：

- **Created**：成功。
- **ModifyFailed**：未关联到最新版本。
- **Creating**：创建中。
- **Modifying**：修改中。
- **Deleting**：删除中。
- **Deleted**：已删除。',
                      'type' => 'string',
                      'example' => 'Success',
                    ),
                    'Reason' => 
                    array (
                      'description' => '关联失败时的原因。',
                      'type' => 'string',
                      'example' => 'failed',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '要查询的前缀列表所在地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'ResourceUid' => 
                    array (
                      'description' => '前缀列表所绑定资源所属的阿里云账号（主账号）ID。',
                      'type' => 'string',
                      'example' => '132193271328****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 1,\\n  \\"Count\\": 1,\\n  \\"PrefixListAssociation\\": [\\n    {\\n      \\"PrefixListId\\": \\"pl-0b7hwu67****\\",\\n      \\"ResourceId\\": \\"vtb-bp1drpcfz9srr393h****\\",\\n      \\"ResourceType\\": \\"vpcRouteTable\\",\\n      \\"OwnerId\\": \\"153460731706****\\",\\n      \\"Status\\": \\"Success\\",\\n      \\"Reason\\": \\"failed\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"ResourceUid\\": \\"132193271328****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetVpcPrefixListAssociationsResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>1</TotalCount>\\n    <Count>1</Count>\\n    <PrefixListAssociation>\\n        <PrefixListId>pl-0b7hwu67****</PrefixListId>\\n        <ResourceId>vtb-bp1drpcfz9srr393h****</ResourceId>\\n        <ResourceType>vpcRouteTable</ResourceType>\\n        <OwnerId>153460731706****</OwnerId>\\n        <Status>Success</Status>\\n        <Reason>failed</Reason>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <ResourceUid>132193271328****</ResourceUid>\\n    </PrefixListAssociation>\\n</GetVpcPrefixListAssociationsResponse>","errorExample":""}]',
      'title' => '查询前缀列表的关联关系',
    ),
    'GetVpcPrefixListEntries' => 
    array (
      'summary' => '调用GetVpcPrefixListEntries接口查询指定前缀列表的信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的前缀列表的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pl-0b7hwu67****',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '50',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要查询的前缀列表所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '查询的列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'Count' => 
              array (
                'description' => '条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PrefixListEntry' => 
              array (
                'description' => '查询的前缀列表的信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PrefixListId' => 
                    array (
                      'title' => '前缀列表的实例ID',
                      'description' => '前缀列表的实例ID。',
                      'type' => 'string',
                      'example' => 'pl-0b7hwu67****',
                    ),
                    'Cidr' => 
                    array (
                      'title' => '状态',
                      'description' => '前缀列表的CIDR地址块。',
                      'type' => 'string',
                      'example' => '192.168.0.0/16',
                    ),
                    'Description' => 
                    array (
                      'title' => '名称',
                      'description' => '前缀列表的描述信息。',
                      'type' => 'string',
                      'example' => 'description',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '前缀列表所属的地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified resource of prefixList is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 1,\\n  \\"Count\\": 1,\\n  \\"PrefixListEntry\\": [\\n    {\\n      \\"PrefixListId\\": \\"pl-0b7hwu67****\\",\\n      \\"Cidr\\": \\"192.168.0.0/16\\",\\n      \\"Description\\": \\"description\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetVpcPrefixListEntriesResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>1</TotalCount>\\n    <Count>1</Count>\\n    <PrefixListEntry>\\n        <PrefixListId>pl-0b7hwu67****</PrefixListId>\\n        <Cidr>192.168.0.0/16</Cidr>\\n        <Description>description</Description>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </PrefixListEntry>\\n</GetVpcPrefixListEntriesResponse>","errorExample":""}]',
      'title' => '查询指定前缀列表的信息',
    ),
    'CreateDhcpOptionsSet' => 
    array (
      'summary' => '创建DHCP选项集。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainNameServers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNS服务器IP。最多传入4个DNS服务器IP，DNS服务器IP之间用半角逗号（,）隔开。

>未传入任何DNS服务器IP时，ECS实例默认使用阿里云提供的DNS服务器IP（100.100.2.136和100.100.2.138）。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.123',
          ),
        ),
        2 => 
        array (
          'name' => 'DhcpOptionsSetName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集的名称。

长度为1～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        3 => 
        array (
          'name' => 'DhcpOptionsSetDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集的描述。 

描述可以为空或填写长度为1～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        4 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机名后缀，例如example.com。

DHCP选项集关联VPC后，会自动将主机名后缀同步给VPC中ECS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        7 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        8 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会创建DHCP选项集。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接创建DHCP选项集。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'LeaseTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv4 DHCP选项集的租赁时间。

- 租赁时间设置为小时时：单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时：单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。

> 输入参数取值时，必须输入参数的单位。',
            'type' => 'string',
            'required' => false,
            'example' => '3650d',
          ),
        ),
        10 => 
        array (
          'name' => 'Ipv6LeaseTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6 DHCP选项集的租赁时间。

- 租赁时间设置为小时时：单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时：单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。

> 输入参数取值时，必须输入参数的单位。',
            'type' => 'string',
            'required' => false,
            'example' => '3650d',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建成功的DHCP选项集的ID。',
            'type' => 'object',
            'properties' => 
            array (
              'DhcpOptionsSetId' => 
              array (
                'description' => '创建成功的DHCP选项集的ID。',
                'type' => 'string',
                'example' => 'dopt-o6w0df4epg9zo8isy****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'DHCP选项集所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.DhcpOptionsSet',
            'errorMessage' => 'The DHCP options set feature in this region is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDomainNameServers.Malformed',
            'errorMessage' => 'The specified format of DomainNameServers is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.DomainNameServers',
            'errorMessage' => 'The maximum number of domain name servers cannot exceed 4.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.DomainNameServers',
            'errorMessage' => 'The specified DomainNameServers is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.DomainName',
            'errorMessage' => 'The specified DomainName is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.DhcpOptionsSetName',
            'errorMessage' => 'The specified DhcpOptionsSetName is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.DhcpOptionsSetDescription',
            'errorMessage' => 'The specified DhcpOptionsSetDescription is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'QuotaExceeded.RegionDhcpOptionsSet',
            'errorMessage' => 'The quota of dhcpOptionsSet in the region is exceeded.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.DhcpLeaseTime',
            'errorMessage' => 'The DhcpOptionsSet of this region does not support custom LeaseTime.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.LeaseTime',
            'errorMessage' => 'LeaseTime [%s] is illegal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"DhcpOptionsSetId\\": \\"dopt-o6w0df4epg9zo8isy****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateDhcpOptionsSetResponse>\\n    <DhcpOptionsSetId>dopt-o6w0df4epg9zo8isy****</DhcpOptionsSetId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n</CreateDhcpOptionsSetResponse>","errorExample":""}]',
      'title' => '创建DHCP选项集',
      'description' => '- **CreateDhcpOptionsSet**接口属于异步接口，即系统会返回一个实例ID，但该DHCP选项集尚未创建完成，系统后台任务仍在进行中。您可以调用
[GetDhcpOptionsSet](~~448820~~)查询DHCP选项集的创建状态：
    - 当交换机处于**Pending**状态时，表示DHCP选项集正在配置中。
    - 当交换机处于**Available**状态时，表示DHCP选项集可用。

- DHCP选项集属于VPC高级功能。当VPC不支持该高级功能（不支持关联DHCP选项集）时，您需要联系阿里云工程师处理。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDhcpOptionsSet' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的DHCP选项集所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的DHCP选项集的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会删除DHCP选项集。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后直接删除DHCP选项集。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.DhcpOptionsSet',
            'errorMessage' => 'The DhcpOptionsSet status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.DhcpOptionsSet',
            'errorMessage' => 'The DHCP options set feature in this region is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.VpcAttachment',
            'errorMessage' => 'DhcpOptionsSet cannot be deleted when it is attached to VPC.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDhcpOptionsSetId.NotFound',
            'errorMessage' => 'The specified dhcpOptionsSetId does not exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteDhcpOptionsSetResponse>\\r\\n    <RequestId>8B2F5262-6B57-43F2-97C4-971425462DFE</RequestId>\\r\\n<DeleteDhcpOptionsSetResponse>","errorExample":""}]',
      'title' => '删除DHCP选项集',
      'summary' => '调用DeleteDhcpOptionsSet接口删除DHCP选项集。',
      'description' => '- **DeleteDhcpOptionsSet**接口属于异步接口，即系统返回一个请求ID，但该DHCP选项集尚未删除成功，系统后台的删除任务仍在进行。您可以调用[GetDhcpOptionsSet](~~189208~~)查询DHCP选项集的删除状态：
    - 当DHCP选项集处于**Deleting**状态时，表示DHCP选项集正在删除中。
    - 当查询不到指定的DHCP选项集时，表示DHCP选项集删除成功。
- **DeleteDhcpOptionsSet**接口不支持并发删除同一个DHCP选项集。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AttachDhcpOptionsSetToVpc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集关联的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-sfdkfdjkdf****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会将DHCP选项集关联VPC。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回2XX HTTP状态码并直接将DHCP选项集关联VPC。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.OperateShareResource',
            'errorMessage' => 'You cannot operate shared resources.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDhcpOptionsSetId.NotFound',
            'errorMessage' => 'The specified dhcpOptionsSetId does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.DhcpOptionsSet',
            'errorMessage' => 'The DhcpOptionsSet status does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcDhcpOptionsSet',
            'errorMessage' => 'The dhcpOptionsSet status of VPC does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.AttachmentExist',
            'errorMessage' => 'The current VPC is already attached to a DHCP options set.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.AttachVpcNumber',
            'errorMessage' => 'The maximum number of VPCs that can be attached to a DHCP options set is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent. Please wait a moment and try again.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<AttachDhcpOptionsSetToVpcResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</AttachDhcpOptionsSetToVpcResponse>","errorExample":""}]',
      'title' => '将DHCP选项集关联到VPC',
      'summary' => '调用AttachDhcpOptionsSetToVpc接口将DHCP选项集关联到VPC。',
      'description' => '- **AttachDhcpOptionsSetToVpc**接口属于异步接口，即系统返回一个请求ID，但该DHCP选项集尚未关联到VPC，系统后台的关联任务仍在进行。您可以调用[DescribeVpcAttribute](~~94565~~)查询DHCP选项集的关联状态：
    - 当DHCP选项集处于**Pending**状态时，表示DHCP选项集正在关联中。
    - 当DHCP选项集处于**InUse**状态时，表示DHCP选项集关联成功。
- **AttachDhcpOptionsSetToVpc**接口不支持在同一个VPC下并发关联DHCP选项集。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DetachDhcpOptionsSetFromVpc' => 
    array (
      'summary' => '调用DetachDhcpOptionsSetFromVpc接口将DHCP选项集与VPC取消关联。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要与VPC取消关联的DHCP选项集的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要与DHCP选项集取消关联的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-dfdgrgthhy****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会取消DHCP选项集与VPC的关联。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回2XX HTTP状态码并取消DHCP选项集与VPC的关联。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDhcpOptionsSetId.NotFound',
            'errorMessage' => 'The specified resource dhcpOptionsSetId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.AttachmentNotExist',
            'errorMessage' => 'The current VPC is not attahced to a DHCP options set.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcDhcpOptionsSet',
            'errorMessage' => 'The dhcpOptionsSet status of VPC does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'AttrMismatching.VpcDhcpOptionsSetId',
            'errorMessage' => 'The dhcpOptionsSetId does not match the VPC.',
          ),
          4 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent. Please wait a moment and try again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.DhcpOptionsSet',
            'errorMessage' => 'The DhcpOptionsSet status does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.DhcpOptionsSet',
            'errorMessage' => 'The DHCP options set feature in this region is not supported.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DetachDhcpOptionsSetFromVpcResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DetachDhcpOptionsSetFromVpcResponse>","errorExample":""}]',
      'title' => '将DHCP选项集与VPC取消关联',
      'description' => '- **DetachDhcpOptionsSetFromVpc**接口属于异步接口，即系统返回一个请求ID，但该DHCP选项集尚未解绑成功，系统后台的解绑任务仍在进行。您可以调用[DescribeVpcAttribute](~~94565~~)查询DHCP选项集的解绑状态：
    - 当DHCP选项集处于**Pending**状态时，表示DHCP选项集正在解绑中。
    - 当DHCP选项集处于**UnUsed**状态时，表示DHCP选项集解绑成功。
- **DetachDhcpOptionsSetFromVpc**接口不支持在同一个VPC中并发解绑DHCP选项集。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReplaceVpcDhcpOptionsSet' => 
    array (
      'summary' => '调用ReplaceVpcDhcpOptionsSet接口更改DHCP选项集与VPC的关联。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要更改的DHCP选项集的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要更改关联的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-dsferghthth****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会更改DHCP选项集与VPC的关联。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码DryRunOperation。

- **false**（默认值）：发送正常请求，通过检查后返回2XX HTTP状态码并直接更改DHCP选项集与VPC的关联。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.AttachmentNotExist',
            'errorMessage' => 'The current VPC is not attahced to a DHCP options set.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcDhcpOptionsSet',
            'errorMessage' => 'The dhcpOptionsSet status of VPC does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'AttrMismatching.VpcDhcpOptionsSetId',
            'errorMessage' => 'The dhcpOptionsSetId does not match the VPC.',
          ),
          3 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent. Please wait a moment and try again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidDhcpOptionsSetId.NotFound',
            'errorMessage' => 'The specified dhcpOptionsSetId does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.DhcpOptionsSet',
            'errorMessage' => 'The DhcpOptionsSet status does not support this operation.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::GetDhcpOptionsSet',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<ReplaceVpcDhcpOptionsSetResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</ReplaceVpcDhcpOptionsSetResponse>","errorExample":""}]',
      'title' => '更改DHCP选项集与VPC的关联',
      'description' => '- **ReplaceVpcDhcpOptionsSet**接口属于异步接口，即系统返回一个请求ID，但该DHCP选项集尚未更改成功，系统后台的更改任务仍在进行。您可以调用[DescribeVpcAttribute](~~94565~~)查询DHCP选项集的更改状态：
    - 当DHCP选项集处于**Pending**状态时，表示DHCP选项集正在更改中。
    - 当DHCP选项集处于**InUse**状态时，表示DHCP选项集更改成功。
- **ReplaceVpcDhcpOptionsSet**接口不支持针对同一个VPC中并发更改关联的DHCP选项集。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDhcpOptionsSetAttribute' => 
    array (
      'summary' => '调用UpdateDhcpOptionsSetAttribute接口修改DHCP选项集配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的DHCP选项集所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的DHCP选项集的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainNameServers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNS服务器IP。最多传入4个DNS服务器IP，DNS服务器IP之间用半角逗号（,）隔开。

>未传入任何DNS服务器IP时，ECS实例默认使用阿里云提供的DNS服务器IP（100.100.2.136和100.100.2.138）。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.123',
          ),
        ),
        3 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机名后缀，例如example.com。

DHCP选项集关联VPC后，会自动将主机名后缀同步给VPC中ECS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        4 => 
        array (
          'name' => 'DhcpOptionsSetName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        5 => 
        array (
          'name' => 'DhcpOptionsSetDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入DHCP选项集的描述。 

描述可以为空或填写长度为2～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会修改DHCP选项集的配置信息。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接修改DHCP选项集配置信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'LeaseTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv4 DHCP选项集的租赁时间。

- 租赁时间设置为小时时：单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时：单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。

> 输入参数取值时，必须输入参数的单位。',
            'type' => 'string',
            'required' => false,
            'example' => '3650d',
          ),
        ),
        9 => 
        array (
          'name' => 'Ipv6LeaseTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
IPv6 DHCP选项集的租赁时间。

- 租赁时间设置为小时时：单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时：单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。

> 输入参数取值时，必须输入参数的单位。',
            'type' => 'string',
            'required' => false,
            'example' => '3650d',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDhcpOptionsSetId.NotFound',
            'errorMessage' => 'The specified dhcpOptionsSetId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.DhcpOptionsSet',
            'errorMessage' => 'The DhcpOptionsSet status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.DomainNameServers',
            'errorMessage' => 'The specified DomainNameServers is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.DomainName',
            'errorMessage' => 'The specified DomainName is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.DhcpOptionsSetName',
            'errorMessage' => 'The specified DhcpOptionsSetName is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.DhcpOptionsSetDescription',
            'errorMessage' => 'The specified DhcpOptionsSetDescription is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.DhcpLeaseTime',
            'errorMessage' => 'The DhcpOptionsSet of this region does not support custom LeaseTime.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.DhcpOptionsSet',
            'errorMessage' => 'The DHCP options set feature in this region is not supported.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateDhcpOptionsSetAttributeResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</UpdateDhcpOptionsSetAttributeResponse>","errorExample":""}]',
      'title' => '修改DHCP选项集配置信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDhcpOptionsSet' => 
    array (
      'summary' => '调用GetDhcpOptionsSet接口查询已创建的DHCP选项集。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询DHCP选项集所在的地域ID。


您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'ap-southeast-1' => 'ap-southeast-1',
            ),
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询DHCP选项集的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'DHCP选项集的描述。 ',
            'type' => 'object',
            'properties' => 
            array (
              'DhcpOptionsSetDescription' => 
              array (
                'description' => 'DHCP选项集的描述。 ',
                'type' => 'string',
                'example' => 'test',
              ),
              'Status' => 
              array (
                'description' => 'DHCP选项集的状态。取值：

- **Available**：可用。

- **InUse**：使用中。

- **Deleted**：已删除。

- **Pending**：配置中。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'DhcpOptionsSetId' => 
              array (
                'description' => 'DHCP选项集的ID。',
                'type' => 'string',
                'example' => 'dopt-o6w0df4epg9zo8isy****',
              ),
              'DhcpOptionsSetName' => 
              array (
                'description' => 'DHCP选项集的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'OwnerId' => 
              array (
                'description' => 'DHCP选项集所属的阿里云账号ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '283117732402483989',
              ),
              'DhcpOptions' => 
              array (
                'description' => 'DHCP选项配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DomainNameServers' => 
                  array (
                    'description' => 'DNS服务器IP。',
                    'type' => 'string',
                    'example' => '192.XX.XX.123',
                  ),
                  'DomainName' => 
                  array (
                    'description' => '主机名后缀。
',
                    'type' => 'string',
                    'example' => 'example.com',
                  ),
                  'LeaseTime' => 
                  array (
                    'description' => ' IPv4 DHCP选项集的租赁时间。

- 租赁时间设置为小时时：单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时：单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。
',
                    'type' => 'string',
                    'example' => '3650d',
                  ),
                  'Ipv6LeaseTime' => 
                  array (
                    'description' => 'IPv6 DHCP选项集的租赁时间。

- 租赁时间设置为小时时：单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时：单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。',
                    'type' => 'string',
                    'example' => '3650d',
                  ),
                ),
              ),
              'AssociateVpcs' => 
              array (
                'description' => 'DHCP选项集关联的VPC的信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DHCP选项集关联的VPC的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AssociateStatus' => 
                    array (
                      'description' => 'DHCP选项集关联的VPC的状态。取值：

- **InUse**：使用中。

- **Pending**：配置中。
',
                      'type' => 'string',
                      'example' => 'InUse',
                    ),
                    'VpcId' => 
                    array (
                      'description' => 'DHCP选项集关联的VPC的ID。',
                      'type' => 'string',
                      'example' => 'vpc-eb3b54r6otues4tjj****',
                    ),
                  ),
                ),
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'DHCP选项集所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph****',
              ),
              'Tags' => 
              array (
                'description' => '标签信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '标签信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '标签键。',
                      'type' => 'string',
                      'example' => 'FinanceDept',
                    ),
                    'Value' => 
                    array (
                      'description' => '标签值。',
                      'type' => 'string',
                      'example' => 'FinanceJoshua',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"DhcpOptionsSetDescription\\": \\"test\\",\\n  \\"Status\\": \\"Available\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"DhcpOptionsSetId\\": \\"dopt-o6w0df4epg9zo8isy****\\",\\n  \\"DhcpOptionsSetName\\": \\"test\\",\\n  \\"OwnerId\\": 283117732402484000,\\n  \\"DhcpOptions\\": {\\n    \\"DomainNameServers\\": \\"192.XX.XX.123\\",\\n    \\"DomainName\\": \\"example.com\\",\\n    \\"LeaseTime\\": \\"3650d\\",\\n    \\"Ipv6LeaseTime\\": \\"3650d\\"\\n  },\\n  \\"AssociateVpcs\\": [\\n    {\\n      \\"AssociateStatus\\": \\"InUse\\",\\n      \\"VpcId\\": \\"vpc-eb3b54r6otues4tjj****\\"\\n    }\\n  ],\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n  \\"Tags\\": [\\n    {\\n      \\"Key\\": \\"FinanceDept\\",\\n      \\"Value\\": \\"FinanceJoshua\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetDhcpOptionsSetResponse>\\n    <DhcpOptionsSetDescription>test</DhcpOptionsSetDescription>\\n    <Status>Available</Status>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <DhcpOptionsSetId>dopt-o6w0df4epg9zo8isy****</DhcpOptionsSetId>\\n    <DhcpOptionsSetName>test</DhcpOptionsSetName>\\n    <OwnerId>283117732402484000</OwnerId>\\n    <DhcpOptions>\\n        <DomainNameServers>192.XX.XX.123</DomainNameServers>\\n        <DomainName>example.com</DomainName>\\n        <LeaseTime>3650d</LeaseTime>\\n        <Ipv6LeaseTime>3650d</Ipv6LeaseTime>\\n    </DhcpOptions>\\n    <AssociateVpcs>\\n        <AssociateStatus>InUse</AssociateStatus>\\n        <VpcId>vpc-eb3b54r6otues4tjj****</VpcId>\\n    </AssociateVpcs>\\n    <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</GetDhcpOptionsSetResponse>","errorExample":""}]',
      'title' => '查询已创建的DHCP选项集',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDhcpOptionsSets' => 
    array (
      'summary' => '调用ListDhcpOptionsSets接口查询已创建的DHCP选项集列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询DHCP选项集所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机名后缀，例如example.com。

DHCP选项集关联VPC后，会自动将主机名后缀同步给VPC中ECS实例。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'example.com' => 'example.com',
            ),
            'example' => 'example.com',
          ),
        ),
        4 => 
        array (
          'name' => 'DhcpOptionsSetName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集的名称。

名称长度为1~128个字符，以英文大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'tf-testAccVpcDhcpOptionsSets-1585169790614573448' => 'tf-testAccVpcDhcpOptionsSets-1585169790614573448',
            ),
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'DhcpOptionsSetId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'DHCP选项集的ID。最多支持输入20个DHCP选项集的ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'DHCP选项集的ID。最多支持输入20个DHCP选项集的ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'dopt-o6w0df4epg9zo8isy****',
            ),
            'required' => false,
            'example' => 'dopt-o6w0df4epg9zo8isy****',
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP选项集所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd********',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'DhcpOptionsSets' => 
              array (
                'description' => 'DHCP选项集列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DHCP选项集列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DhcpOptionsSetDescription' => 
                    array (
                      'description' => 'DHCP选项集的描述信息。 ',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Status' => 
                    array (
                      'description' => 'DHCP选项集的状态。取值：

- **Available**：可用。

- **InUse**：使用中。

- **Pending**：配置中。

- **Deleted**：已删除。
',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'DhcpOptionsSetId' => 
                    array (
                      'description' => 'DHCP选项集的ID。',
                      'type' => 'string',
                      'example' => 'dopt-o6w0df4epg9zo8isy****',
                    ),
                    'DhcpOptionsSetName' => 
                    array (
                      'description' => 'DHCP选项集的名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'AssociateVpcCount' => 
                    array (
                      'description' => 'DHCP选项集绑定的VPC的数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'OwnerId' => 
                    array (
                      'description' => 'DHCP选项集所属的阿里云账号ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '253460731706911258',
                    ),
                    'DhcpOptions' => 
                    array (
                      'description' => 'DHCP选项配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DomainNameServers' => 
                        array (
                          'description' => 'DNS服务器IP。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '主机名后缀。
',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'LeaseTime' => 
                        array (
                          'description' => ' IPv4 DHCP选项集的租赁时间。

- 租赁时间设置为小时时，单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时，单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。',
                          'type' => 'string',
                          'example' => '3650d',
                        ),
                        'Ipv6LeaseTime' => 
                        array (
                          'description' => 'IPv6 DHCP选项集的租赁时间。

- 租赁时间设置为小时时，单位：h。取值范围：**24h~1176h**，**87600h~175200h**。   默认值：**87600h**。

- 租赁时间设置为天时，单位：d。取值范围： **1d~49d**，**3650d~7300d**。   默认值：**3650d** 。
',
                          'type' => 'string',
                          'example' => '3650d',
                        ),
                      ),
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => 'DHCP选项集所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-acfmxazb4ph****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd********\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"DhcpOptionsSets\\": [\\n    {\\n      \\"DhcpOptionsSetDescription\\": \\"test\\",\\n      \\"Status\\": \\"Available\\",\\n      \\"DhcpOptionsSetId\\": \\"dopt-o6w0df4epg9zo8isy****\\",\\n      \\"DhcpOptionsSetName\\": \\"test\\",\\n      \\"AssociateVpcCount\\": 2,\\n      \\"OwnerId\\": 253460731706911260,\\n      \\"DhcpOptions\\": {\\n        \\"DomainNameServers\\": \\"192.168.XX.XX\\",\\n        \\"DomainName\\": \\"example.com\\",\\n        \\"LeaseTime\\": \\"3650d\\",\\n        \\"Ipv6LeaseTime\\": \\"3650d\\"\\n      },\\n      \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"TotalCount\\": \\"10\\"\\n}","errorExample":""},{"type":"xml","example":"<ListDhcpOptionsSetsResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd********</NextToken>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <DhcpOptionsSets>\\n        <DhcpOptionsSetDescription>test</DhcpOptionsSetDescription>\\n        <Status>Available</Status>\\n        <DhcpOptionsSetId>dopt-o6w0df4epg9zo8isy****</DhcpOptionsSetId>\\n        <DhcpOptionsSetName>test</DhcpOptionsSetName>\\n        <AssociateVpcCount>2</AssociateVpcCount>\\n        <OwnerId>253460731706911260</OwnerId>\\n        <DhcpOptions>\\n            <DomainNameServers>192.168.XX.XX</DomainNameServers>\\n            <DomainName>example.com</DomainName>\\n            <LeaseTime>3650d</LeaseTime>\\n            <Ipv6LeaseTime>3650d</Ipv6LeaseTime>\\n        </DhcpOptions>\\n        <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </DhcpOptionsSets>\\n    <TotalCount>10</TotalCount>\\n</ListDhcpOptionsSetsResponse>","errorExample":""}]',
      'title' => '查询已创建的DHCP选项集列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'OpenFlowLogService' => 
    array (
      'summary' => '调用OpenFlowLogService接口开通流日志功能。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '28CF47AB-B6C0-5FA2-80C7-2B28826A92CB',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '流日志开通成功返回的信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ExceedPurchaseLimit',
            'errorMessage' => 'You have reached the limit of purchase quantity.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.RAM',
            'errorMessage' => 'User not authorized to operate on the specified resource, or this API doesn\'t support RAM.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.AliGroupUserCanNotBuyInnerCommodity',
            'errorMessage' => 'Vpc_flowlog_public has no group cloud product label, and users within the group are not allowed to purchase.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.QuotaNotEnough',
            'errorMessage' => 'Your quota is insufficient. Please contact your channel partner to increase your quota',
          ),
          4 => 
          array (
            'errorCode' => 'Order.NoRealNameAuthentication',
            'errorMessage' => 'Real-name verification has not been completed for the account.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.BasicInfoUncompleted',
            'errorMessage' => 'You have not completed your basic personal information, please complete the information and try again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"28CF47AB-B6C0-5FA2-80C7-2B28826A92CB\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<OpenFlowLogServiceResponse>\\n    <RequestId>28CF47AB-B6C0-5FA2-80C7-2B28826A92CB</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n</OpenFlowLogServiceResponse>","errorExample":""}]',
      'title' => '开通流日志功能',
      'description' => '- **OpenFlowLogService**接口不支持在同一个阿里云账号（主账号）并发开通流日志功能。

- 您可以调用[GetFlowLogServiceStatus](~~449624~~)接口查询流日志功能的开通状态。',
    ),
    'CreateFlowLog' => 
    array (
      'summary' => '创建流日志。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my Flowlog.',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要捕获流量的资源类型。取值：

- **NetworkInterface**：弹性网卡。
  
- **VSwitch**：交换机内的所有弹性网卡。
  
- **VPC**：专有网络内的所有弹性网卡。
',
            'type' => 'string',
            'required' => true,
            'example' => 'NetworkInterface',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要捕获流量的资源ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eni-askldfas****',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集的流量类型。取值：

- **All**：全部流量。
  
- **Allow**：访问控制允许的流量。
  
- **Drop**：访问控制拒绝的流量。
',
            'type' => 'string',
            'required' => true,
            'example' => 'All',
          ),
        ),
        6 => 
        array (
          'name' => 'ProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管理捕获到的流量的Project名称。
- Projec名称仅支持小写字母、数字和短划线（-）。
- 名称的开头与结尾必须为小写字母或数字。
- 名称长度为3~63个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'FlowLogProject',
          ),
        ),
        7 => 
        array (
          'name' => 'LogStoreName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储捕获到的流量的LogStore名称。
- LogStore名称仅支持小写字母、数字、短划线（-）和下划线（_）。
- 名称的开头与结尾必须为小写字母或数字。
- 名称长度为3~63个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'FlowLogStore',
          ),
        ),
        8 => 
        array (
          'name' => 'AggregationInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的采样间隔。单位：分钟。取值：**1**、**5**、**10**（默认值）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'TrafficPath',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '采集的流量路径。取值：

- **all**：表示全量采集。
- **internetGateway**：表示公网流量采集。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '采集的流量路径。取值：

- **all**（默认值）：表示全量采集。

<props="china">
> 流量路径功能默认不开放，如需使用，请[提交工单](https://selfservice.console.aliyun.com/ticket/category/ga/today)申请。</props>


<props="intl">
> 流量路径功能默认不开放，如需使用，请[提交工单](https://workorder-intl.console.aliyun.com/?spm=5176.11182188.console-base-top.dworkorder.18ae4882n3v6ZW#/ticket/createIndex)申请。</props>

',
              'type' => 'string',
              'required' => false,
              'example' => 'all',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        10 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazdjdhd****',
          ),
        ),
        11 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，请勿输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如果传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'FlowLogId' => 
              array (
                'description' => '流日志ID。',
                'type' => 'string',
                'example' => 'fl-m5e8vhz2t21sel1nq****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazdjdhd****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.FlowLog',
            'errorMessage' => 'The business status of flowLog  is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OptInRequired.FlowLog',
            'errorMessage' => 'You are not authorized to use the requested service of flowLog. Ensure that you have subscribed to the service you are trying to use.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.AdvancedFeature',
            'errorMessage' => 'Advanced features of the vpc is unsupported.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'vswitch does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'This api does not support sub user or role.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.action',
            'errorMessage' => 'This action is not support.',
          ),
          8 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'RuleExist',
            'errorMessage' => 'The rule has already existed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidHdMonitorStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceeded.FlowlogCount',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidResourceId.NotFound',
            'errorMessage' => 'This resourceId already has flowlog instance existed.',
          ),
          13 => 
          array (
            'errorCode' => 'INVALID_PARAMETER',
            'errorMessage' => 'The parameter invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Missing mandatory parameter',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidResourceType.NotFound',
            'errorMessage' => 'Resource type no the same.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationUnsupported.ResourceType',
            'errorMessage' => 'This resource type is not supported.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.AggregationInterval',
            'errorMessage' => 'The param of aggregationInterval is illegal.',
          ),
          19 => 
          array (
            'errorCode' => 'UnsupportedFeature.UserDefinedTrafficPath',
            'errorMessage' => 'The feature of UserDefinedTrafficPath is not supported.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.TrafficPath',
            'errorMessage' => 'The param of trafficPath is illegal.',
          ),
          21 => 
          array (
            'errorCode' => 'DuplicatedParam.TrafficPath',
            'errorMessage' => 'The param of trafficPath is duplicated.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.ResourceGroupId',
            'errorMessage' => 'Invalid ResourceGroupld value.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationDenied.OperateShareResource',
            'errorMessage' => 'The operation is not allowed because of OperateShareResource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeFlowLogs',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\",\\n  \\"Success\\": \\"true\\",\\n  \\"FlowLogId\\": \\"fl-m5e8vhz2t21sel1nq****\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazdjdhd****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateFlowLogResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457</RequestId>\\n    <Success>true</Success>\\n    <FlowLogId>fl-m5e8vhz2t21sel1nq****</FlowLogId>\\n    <ResourceGroupId>rg-acfmxazdjdhd****</ResourceGroupId>\\n</CreateFlowLogResponse>","errorExample":""}]',
      'title' => '创建流日志',
      'description' => '**CreateFlowLog**接口属于异步接口，即系统会返回一个实例ID，但该流日志尚未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeFlowLogs](~~87923~~)查询流日志的创建状态：
- 当流日志处于**Activating**状态时，表示流日志正在创建中。
- 当流日志处于**Active**状态时，表示流日志创建并启动完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteFlowLog' => 
    array (
      'summary' => '调用DeleteFlowLog接口删除流日志。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fl-m5e8vhz2t21sel1nq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。取值：

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'This api does not support sub user or role.',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidStatus',
            'errorMessage' => 'The specfied instance\'s status is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidHdMonitorStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          7 => 
          array (
            'errorCode' => 'FlowLogNumberOverLimit',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specfied instance is not existed.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidResourceId.NotFound',
            'errorMessage' => 'Resource id is empty.',
          ),
          12 => 
          array (
            'errorCode' => 'Forbidden.OperateManagedFlowLog',
            'errorMessage' => 'Authentication is failed for operate managed flowlog.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeFlowLogs',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteFlowLogResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</DeleteFlowLogResponse>","errorExample":""}]',
      'title' => '删除流日志',
      'description' => '- **DeleteFlowLog**接口属于异步接口，即系统返回一个实例ID，但流日志尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeFlowLogs](~~87923~~)查询流日志的删除状态：
    - 当流日志处于**Deleting**状态时，表示流日志正在删除中。
    - 当查询不到指定的流日志时，表示流日志删除成功。
- **DeleteFlowLog**接口不支持并发删除同一个流日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyFlowLogAttribute' => 
    array (
      'summary' => ' 调用ModifyFlowLogAttribute接口编辑流日志的名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fl-m5e8vhz2t21sel1nq****',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的流日志名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的流日志描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my Flowlog.',
          ),
        ),
        4 => 
        array (
          'name' => 'AggregationInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的流日志的采样间隔。单位：分钟。取值：**1**、**5**、**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- **true**：操作成功。

- **false**：操作失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.FlowLog',
            'errorMessage' => 'The business status of flowLog  is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'This api does not support sub user or role.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specfied instance is not existed.',
          ),
          6 => 
          array (
            'errorCode' => 'RuleExist',
            'errorMessage' => 'The rule has already existed.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidHdMonitorStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          8 => 
          array (
            'errorCode' => 'FlowLogNumberOverLimit',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidTrafficType.NotFound',
            'errorMessage' => 'Invalid traffic type.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified name is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.AggregationInterval',
            'errorMessage' => 'The param of aggregationInterval is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'Forbidden.OperateManagedFlowLog',
            'errorMessage' => 'Authentication is failed for operate managed flowlog.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeFlowLogs',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyFlowLogAttributeResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</ModifyFlowLogAttributeResponse>","errorExample":""}]',
      'title' => '编辑流日志的名称和描述',
      'description' => '- **ModifyFlowLogAttribute**接口属于异步接口，即系统会返回一个请求ID，但该流日志尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeFlowLogs](~~87923~~)查询流日志的修改状态：
    - 当流日志处于**Modifying**状态时，表示流日志正在修改中。
    - 当流日志处于**Active**或者**Inactive**状态时，表示流日志修改成功。
- **ModifyFlowLogAttribute**接口不支持并发修改同一个流日志的属性。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ActiveFlowLog' => 
    array (
      'summary' => '调用ActiveFlowLog接口启动流日志，启动后开始捕获指定资源的流量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fl-m5e8vhz2t21sel1nq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.FlowLog',
            'errorMessage' => 'The business status of flowLog is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specfied instance is not existed.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.OperateManagedFlowLog',
            'errorMessage' => 'Authentication is failed for operate managed flowlog.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.FlowLogDeliverFailed',
            'errorMessage' => 'The operation is not allowed due to an invalid delivery address.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeFlowLogs',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<ActiveFlowLogResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</ActiveFlowLogResponse>","errorExample":""}]',
      'title' => '启动流日志',
      'description' => '* **ActiveFlowLog**接口属于异步接口，即系统会返回一个请求ID，但该流日志尚未启动完成，系统后台的启动任务仍在进行。您可以调用[DescribeFlowLogs](~~87923~~)查询流日志的启动状态：
    - 当流日志处于**Activating**状态时，表示流日志正在启动中。
    - 当流日志处于**Active**状态时，表示流日志启动完成。
* **ActiveFlowLog**接口不支持并发启动同一个流日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeactiveFlowLog' => 
    array (
      'summary' => '调用DeactiveFlowLog接口停止流日志，停止后不再捕获指定资源的流量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fl-m5e8vhz2t21sel1nq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.FlowLog',
            'errorMessage' => 'The business status of flowLog  is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          3 => 
          array (
            'errorCode' => 'FlowLogNumberOverLimit',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specfied instance is not existed.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.OperateManagedFlowLog',
            'errorMessage' => 'Authentication is failed for operate managed flowlog.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeFlowLogs',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<DeactiveFlowLogResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</DeactiveFlowLogResponse>","errorExample":""}]',
      'title' => '停止流日志',
      'description' => '- **DeactiveFlowLog**接口属于异步接口，即系统返回一个请求ID，但该流日志尚未停止，系统后台的停止任务仍在进行。您可以调用[DescribeFlowLogs](~~87923~~)查询流日志的停止状态：
    - 当流日志处于**Deactivating**状态时，表示流日志正在停止中。
    - 当流日志处于**Inactive**状态时，表示流日志停止完成。
- **DeactiveFlowLog**接口不支持并发停止同一个流日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetFlowLogServiceStatus' => 
    array (
      'summary' => '调用GetFlowLogServiceStatus接口查询流日志功能的开通状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-06F83A1B457',
              ),
              'Enabled' => 
              array (
                'description' => '流日志功能是否开通。取值：

- **true**：已开通。

- **false**：未开通。您可以调用[OpenFlowLogService](~~449637~~)接口开通流日志功能。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-06F83A1B457\\",\\n  \\"Enabled\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetFlowLogServiceStatusResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-06F83A1B457</RequestId>\\n    <Enabled>true</Enabled>\\n</GetFlowLogServiceStatusResponse>","errorExample":""}]',
      'title' => '查询流日志功能的开通状态',
    ),
    'DescribeFlowLogs' => 
    array (
      'summary' => '调用DescribeFlowLogs接口查询流日志。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'fl-bp1f6qqhsrc2c12ta****',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my Flowlog.',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要捕获的流量的资源类型。取值：
          
- **NetworkInterface**：弹性网卡。
  
- **VSwitch**：交换机内的所有弹性网卡。
  
- **VPC**：专有网络内的所有弹性网卡。
',
            'type' => 'string',
            'required' => false,
            'example' => 'NetworkInterface',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要捕获的流量的资源ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-askldfas****',
          ),
        ),
        6 => 
        array (
          'name' => 'TrafficType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集的流量类型。取值：
          
- **All**：全部流量。
  
- **Allow**：访问控制允许的流量。
  
- **Drop**：访问控制拒绝的流量。
',
            'type' => 'string',
            'required' => false,
            'example' => 'All',
          ),
        ),
        7 => 
        array (
          'name' => 'ProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管理捕获到的流量的Project。',
            'type' => 'string',
            'required' => false,
            'example' => 'FlowLogProject',
          ),
        ),
        8 => 
        array (
          'name' => 'LogStoreName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储捕获到的流量的Logstore。',
            'type' => 'string',
            'required' => false,
            'example' => 'FlowLogStore',
          ),
        ),
        9 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的状态。取值：
- **Active**：流日志为启动状态。

- **Activating**：流日志正在创建中。

- **Inactive**：流日志为未启动状态。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        10 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
            'default' => '20',
          ),
        ),
        12 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '所要查看流日志的VPC的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1nwd16gvo1wgs****',
          ),
        ),
        13 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        14 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '流日志详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'string',
                'example' => '20',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的流日志列表条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。取值：

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'FlowLogs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FlowLog' => 
                  array (
                    'description' => '流日志列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '流日志列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '流日志的状态。取值：
- **Active**：流日志为启动状态。

- **Activating**：流日志正在创建中。

- **Inactive**：流日志为未启动状态。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '流日志的创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-21T03:08:50Z',
                        ),
                        'FlowLogName' => 
                        array (
                          'description' => '流日志名称。',
                          'type' => 'string',
                          'example' => 'myFlowlog',
                        ),
                        'TrafficType' => 
                        array (
                          'description' => '流日志捕获的流量类型。取值：

- **All**：全部流量。
- **Allow**：访问控制允许的流量。
- **Drop**：访问控制拒绝的流量。',
                          'type' => 'string',
                          'example' => 'All',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '流日志捕获的流量的资源类型：

- **NetworkInterface**：弹性网卡。
- **VSwitch**：交换机内的所有弹性网卡。
- **VPC**：专有网络内的所有弹性网卡。',
                          'type' => 'string',
                          'example' => 'NetworkInterface',
                        ),
                        'Description' => 
                        array (
                          'description' => '流日志描述信息。',
                          'type' => 'string',
                          'example' => 'Description',
                        ),
                        'ProjectName' => 
                        array (
                          'description' => '管理捕获到的流量的Project。',
                          'type' => 'string',
                          'example' => 'FlowLogProject',
                        ),
                        'LogStoreName' => 
                        array (
                          'description' => '存储捕获到的流量的Logstore。',
                          'type' => 'string',
                          'example' => 'FlowLogStore',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '流日志捕获的流量的资源ID。',
                          'type' => 'string',
                          'example' => 'eni-askldfas****',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '流日志所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'FlowLogId' => 
                        array (
                          'description' => '流日志ID。',
                          'type' => 'string',
                          'example' => 'fl-bp1f6qqhsrc2c12ta****',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => '业务状态。取值：

- **Normal**：正常状态。
- **FinancialLocked**：欠费锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'AggregationInterval' => 
                        array (
                          'description' => '流日志的采样间隔。单位：分钟。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'TrafficPath' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TrafficPathList' => 
                            array (
                              'description' => '采集的流量路径。取值：

- **all**：表示全量采集。
- **internetGateway**：表示公网流量采集。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '采集的流量路径。取值：

- **all**（默认值）：表示全量采集。
- **internetGateway**：表示公网流量采集。

<props="china">
> 流量路径功能默认不开放，如需使用，请[提交工单](https://selfservice.console.aliyun.com/ticket/category/ga/today)申请。</props>


<props="intl">
> 流量路径功能默认不开放，如需使用，请[提交工单](https://workorder-intl.console.aliyun.com/?spm=5176.11182188.console-base-top.dworkorder.18ae4882n3v6ZW#/ticket/createIndex)申请。</props>
',
                                'type' => 'string',
                                'example' => 'all',
                              ),
                            ),
                          ),
                        ),
                        'ServiceType' => 
                        array (
                          'description' => '云服务的托管类型。

- 可以为空，表示该流日志为用户自己创建。
- 非空时只支持取值为：**sls**，表示该流日志为通过日志服务控制台创建。

> 通过日志服务控制台创建的流日志实例可以展示在VPC列表中，但在VPC中无法对该流日志实例进行修改、启动、停止、删除操作，如果您需要对该流日志进行相关操作，您可以登录[日志服务控制台](https://sls.console.aliyun.com)对其进行修改、启动、停止、删除操作。',
                          'type' => 'string',
                          'example' => 'sls',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '流日志所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-bp67acfmxazb4ph****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'FlowLogDeliverStatus' => 
                        array (
                          'description' => '流日志的投递状态，取值：

- **SUCCESS**：投递成功。
- **FAILED**：投递失败。',
                          'type' => 'string',
                          'example' => 'FAILED',
                        ),
                        'FlowLogDeliverErrorMessage' => 
                        array (
                          'description' => '当流日志投递失败时，可以根据报错信息排查问题，可能的报错信息有：

- **UnavaliableTarget**：日志服务SLS的Logstore不可用，无法接收日志。建议查看对应Logstore是否真实存在且可访问。
- **ProjectNotExist**： 日志服务SLS的Project不存在。建议删除原流日志，创建新流日志指向真实存在的Project。
- **UnknownError**：发生内部错误，请稍后重试。',
                          'type' => 'string',
                          'example' => 'UnavaliableTarget',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'This api does not support sub user or role.',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": \\"20\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"Success\\": \\"true\\",\\n  \\"FlowLogs\\": {\\n    \\"FlowLog\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"CreationTime\\": \\"2022-01-21T03:08:50Z\\",\\n        \\"FlowLogName\\": \\"myFlowlog\\",\\n        \\"TrafficType\\": \\"All\\",\\n        \\"ResourceType\\": \\"NetworkInterface\\",\\n        \\"Description\\": \\"Description\\",\\n        \\"ProjectName\\": \\"FlowLogProject\\",\\n        \\"LogStoreName\\": \\"FlowLogStore\\",\\n        \\"ResourceId\\": \\"eni-askldfas****\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"FlowLogId\\": \\"fl-bp1f6qqhsrc2c12ta****\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"AggregationInterval\\": 10,\\n        \\"TrafficPath\\": {\\n          \\"TrafficPathList\\": [\\n            \\"all\\"\\n          ]\\n        },\\n        \\"ServiceType\\": \\"sls\\",\\n        \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        },\\n        \\"FlowLogDeliverStatus\\": \\"FAILED\\",\\n        \\"FlowLogDeliverErrorMessage\\": \\"UnavaliableTarget\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeFlowLogsResponse>\\n    <PageSize>20</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <Success>true</Success>\\n    <FlowLogs>\\n        <Status>Active</Status>\\n        <CreationTime>2022-01-21T03:08:50Z</CreationTime>\\n        <FlowLogName>myFlowlog</FlowLogName>\\n        <TrafficType>All</TrafficType>\\n        <ResourceType>NetworkInterface</ResourceType>\\n        <Description>Description</Description>\\n        <ProjectName>FlowLogProject</ProjectName>\\n        <LogStoreName>FlowLogStore</LogStoreName>\\n        <ResourceId>eni-askldfas****</ResourceId>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <FlowLogId>fl-bp1f6qqhsrc2c12ta****</FlowLogId>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <AggregationInterval>10</AggregationInterval>\\n        <TrafficPath>all</TrafficPath>\\n        <ServiceType>sls</ServiceType>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n        <FlowLogDeliverStatus>FAILED</FlowLogDeliverStatus>\\n        <FlowLogDeliverErrorMessage>UnavaliableTarget</FlowLogDeliverErrorMessage>\\n    </FlowLogs>\\n</DescribeFlowLogsResponse>","errorExample":""}]',
      'title' => '查询流日志',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateNetworkAcl' => 
    array (
      'summary' => '调用AssociateNetworkAcl接口，绑定网络ACL到交换机。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '关联的资源信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '关联的资源信息。',
              'type' => 'object',
              'properties' => 
              array (
                'ResourceType' => 
                array (
                  'description' => '关联资源的类型。取值：**VSwitch**，交换机。

**N**的取值为**0**~**29**，即最多可以关联30个资源。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'VSwitch',
                ),
                'ResourceId' => 
                array (
                  'description' => '关联资源的ID。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'vsw-bp1de348lntdw****',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-a2do9e413e0sp****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否预检',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterMissing.Resources',
            'errorMessage' => 'ParameterMissing.Resources',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterEmpty.Resources',
            'errorMessage' => 'ParameterEmpty.Resources',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'NetworkStatus.Modifying',
            'errorMessage' => 'The special Network Acl is in modifying.',
          ),
          10 => 
          array (
            'errorCode' => 'ResourceStatus.Error',
            'errorMessage' => 'The binding instance is in middle status.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidResource.NotFound',
            'errorMessage' => 'The binding instance is not found.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidResource.VpcError',
            'errorMessage' => 'The network acl and resource not in same vpc.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidResource.BindingExist',
            'errorMessage' => 'The binding instance has been binded.',
          ),
          14 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
          15 => 
          array (
            'errorCode' => 'ParameterIllegal.ResourceType',
            'errorMessage' => 'The specified resource type is illegal.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeNetworkAcls',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateNetworkAclResponse>\\n    <RequestId>4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7</RequestId>\\n</AssociateNetworkAclResponse>","errorExample":""}]',
      'title' => '绑定网络ACL到交换机',
      'description' => '- **AssociateNetworkAcl**接口属于异步接口，即系统返回一个请求ID，但该网络ACL尚未绑定成功，系统后台的绑定任务仍在进行。您可以调用[DescribeNetworkAclAttributes](~~116542~~)查询网络ACL的绑定状态：
    - 当网络ACL处于**BINDING**状态时，表示网络ACL正在绑定中。
    - 当网络ACL处于**BINDED**状态时，表示网络ACL绑定成功。
- **AssociateNetworkAcl**接口不支持并发绑定同一个网络ACL。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateNetworkAcl' => 
    array (
      'summary' => '调用CreateNetworkAcl接口创建网络ACL。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所属的VPC的ID。 

网络ACL属于VPC高级功能。当所属VPC不支持该高级功能（不支持创建网络ACL）时，您需要联系阿里云工程师处理。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-dsfd34356vdf****',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-1',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my NetworkAcl.',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否检测此次请求。取值：
* **true**：发送检查请求。
* **false**（默认值）：发送正常请求。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NetworkAclId' => 
              array (
                'description' => '网络ACL的ID。',
                'type' => 'string',
                'example' => 'nacl-a2do9e413e0spzasx****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'NetworkAclAttribute' => 
              array (
                'description' => '网络ACL的属性。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '网络ACL的状态。取值：

- **Available**：可用。

- **Modifying**：配置中。',
                    'type' => 'string',
                    'example' => 'Modifying',
                  ),
                  'VpcId' => 
                  array (
                    'description' => '网络ACL关联的VPC的ID。

',
                    'type' => 'string',
                    'example' => 'vpc-a2d33rfpl72k5xsscd****',
                  ),
                  'CreationTime' => 
                  array (
                    'description' => '网络ACL创建的时间。',
                    'type' => 'string',
                    'example' => '2021-12-25 11:33:27',
                  ),
                  'Description' => 
                  array (
                    'description' => '网络ACL的描述信息。',
                    'type' => 'string',
                    'example' => 'This is my NetworkAcl.',
                  ),
                  'NetworkAclName' => 
                  array (
                    'description' => '网络ACL的名称。

',
                    'type' => 'string',
                    'example' => 'acl-1	',
                  ),
                  'NetworkAclId' => 
                  array (
                    'description' => '网络ACL的ID。

',
                    'type' => 'string',
                    'example' => 'nacl-a2do9e413e0spdefr****',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '网络ACL所属的地域ID。

',
                    'type' => 'string',
                    'example' => 'cn-hangzhou	',
                  ),
                  'IngressAclEntries' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'IngressAclEntry' => 
                      array (
                        'description' => '入方向规则列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '入方向规则列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NetworkAclEntryId' => 
                            array (
                              'description' => '入方向规则条目的ID。

',
                              'type' => 'string',
                              'example' => 'nae-a2dk86arlydmexscd****',
                            ),
                            'NetworkAclEntryName' => 
                            array (
                              'description' => '入方向规则条目的名称。

',
                              'type' => 'string',
                              'example' => 'acl-3	',
                            ),
                            'Policy' => 
                            array (
                              'description' => '授权策略，取值：

- **accept**：允许。

- **drop**：拒绝。',
                              'type' => 'string',
                              'example' => 'accept',
                            ),
                            'Description' => 
                            array (
                              'description' => '入方向规则的描述信息。

',
                              'type' => 'string',
                              'example' => 'This is IngressAclEntries.	',
                            ),
                            'SourceCidrIp' => 
                            array (
                              'description' => '源地址段。

',
                              'type' => 'string',
                              'example' => '10.0.0.0/24	',
                            ),
                            'Protocol' => 
                            array (
                              'description' => '协议类型，取值：
- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：所有协议。',
                              'type' => 'string',
                              'example' => 'all',
                            ),
                            'Port' => 
                            array (
                              'description' => '入方向规则的目的端口范围。

- 当入方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。

- 当入方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                              'type' => 'string',
                              'example' => '-1/-1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'EgressAclEntries' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EgressAclEntry' => 
                      array (
                        'description' => '出方向规则列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '出方向规则列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NetworkAclEntryId' => 
                            array (
                              'description' => '出方向规则条目的ID。',
                              'type' => 'string',
                              'example' => 'nae-a2d447uw4tillxsdc****',
                            ),
                            'NetworkAclEntryName' => 
                            array (
                              'description' => '出方向规则条目的名称。',
                              'type' => 'string',
                              'example' => 'acl-2',
                            ),
                            'Policy' => 
                            array (
                              'description' => '授权策略，取值：

- **accept**：允许。

- **drop**：拒绝。',
                              'type' => 'string',
                              'example' => 'accept',
                            ),
                            'Description' => 
                            array (
                              'description' => '出方向规则的描述信息。',
                              'type' => 'string',
                              'example' => 'This is EgressAclEntries.',
                            ),
                            'Protocol' => 
                            array (
                              'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：所有协议。',
                              'type' => 'string',
                              'example' => 'all',
                            ),
                            'DestinationCidrIp' => 
                            array (
                              'description' => '目标地址段。',
                              'type' => 'string',
                              'example' => '10.0.0.0/24',
                            ),
                            'Port' => 
                            array (
                              'description' => '出方向规则的目的端口范围。

- 当出方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。

- 当出方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                              'type' => 'string',
                              'example' => '-1/-1	',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Resources' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Resource' => 
                      array (
                        'description' => '关联的资源列表。

',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '关联的资源列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '关联资源的状态。取值：

- **BINDED**：已绑定。

- **BINDING**：绑定中。

- **UNBINDING**：已解绑。',
                              'type' => 'string',
                              'example' => 'BINDED',
                            ),
                            'ResourceType' => 
                            array (
                              'description' => '关联资源的类型。

',
                              'type' => 'string',
                              'example' => 'VSwitch',
                            ),
                            'ResourceId' => 
                            array (
                              'description' => '关联资源的实例ID。

',
                              'type' => 'string',
                              'example' => 'vsw-bp1de348lntdwgthy****',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.VpcId',
            'errorMessage' => 'ParameterMissing.VpcId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterLengthIllegal.Name',
            'errorMessage' => 'ParameterLengthIllegal.Name',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterIllegal.Name',
            'errorMessage' => 'ParameterIllegal.Name',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterLengthIllegal.Description',
            'errorMessage' => 'ParameterLengthIllegal.Description',
          ),
          8 => 
          array (
            'errorCode' => 'ParameterIllegal.Description',
            'errorMessage' => 'ParameterIllegal.Description',
          ),
          9 => 
          array (
            'errorCode' => 'ParameterEmpty.VpcId',
            'errorMessage' => 'ParameterEmpty.VpcId',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'The vpc is not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceed.NetworkAcl',
            'errorMessage' => 'Network acl is over limit.',
          ),
          12 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParamFormat.%s',
            'errorMessage' => 'The param format of %s is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeNetworkAcls',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NetworkAclId\\": \\"nacl-a2do9e413e0spzasx****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"NetworkAclAttribute\\": {\\n    \\"Status\\": \\"Modifying\\",\\n    \\"VpcId\\": \\"vpc-a2d33rfpl72k5xsscd****\\",\\n    \\"CreationTime\\": \\"2021-12-25 11:33:27\\",\\n    \\"Description\\": \\"This is my NetworkAcl.\\",\\n    \\"NetworkAclName\\": \\"acl-1\\\\t\\",\\n    \\"NetworkAclId\\": \\"nacl-a2do9e413e0spdefr****\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\\\t\\",\\n    \\"IngressAclEntries\\": {\\n      \\"IngressAclEntry\\": [\\n        {\\n          \\"NetworkAclEntryId\\": \\"nae-a2dk86arlydmexscd****\\",\\n          \\"NetworkAclEntryName\\": \\"acl-3\\\\t\\",\\n          \\"Policy\\": \\"accept\\",\\n          \\"Description\\": \\"This is IngressAclEntries.\\\\t\\",\\n          \\"SourceCidrIp\\": \\"10.0.0.0/24\\\\t\\",\\n          \\"Protocol\\": \\"all\\",\\n          \\"Port\\": \\"-1/-1\\"\\n        }\\n      ]\\n    },\\n    \\"EgressAclEntries\\": {\\n      \\"EgressAclEntry\\": [\\n        {\\n          \\"NetworkAclEntryId\\": \\"nae-a2d447uw4tillxsdc****\\",\\n          \\"NetworkAclEntryName\\": \\"acl-2\\",\\n          \\"Policy\\": \\"accept\\",\\n          \\"Description\\": \\"This is EgressAclEntries.\\",\\n          \\"Protocol\\": \\"all\\",\\n          \\"DestinationCidrIp\\": \\"10.0.0.0/24\\",\\n          \\"Port\\": \\"-1/-1\\\\t\\"\\n        }\\n      ]\\n    },\\n    \\"Resources\\": {\\n      \\"Resource\\": [\\n        {\\n          \\"Status\\": \\"BINDED\\",\\n          \\"ResourceType\\": \\"VSwitch\\",\\n          \\"ResourceId\\": \\"vsw-bp1de348lntdwgthy****\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateNetworkAclResponse>\\n    <NetworkAclId>nacl-a2do9e413e0spzasx****</NetworkAclId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <NetworkAclAttribute>\\n        <Status>Modifying</Status>\\n        <VpcId>vpc-a2d33rfpl72k5xsscd****</VpcId>\\n        <CreationTime>2021-12-25 11:33:27</CreationTime>\\n        <Description>This is my NetworkAcl.</Description>\\n        <NetworkAclName>acl-1\\t</NetworkAclName>\\n        <NetworkAclId>nacl-a2do9e413e0spdefr****</NetworkAclId>\\n        <RegionId>cn-hangzhou\\t</RegionId>\\n        <IngressAclEntries>\\n            <NetworkAclEntryId>nae-a2dk86arlydmexscd****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-3\\t</NetworkAclEntryName>\\n            <Policy>accept</Policy>\\n            <Description>This is IngressAclEntries.\\t</Description>\\n            <SourceCidrIp>10.0.0.0/24\\t</SourceCidrIp>\\n            <Protocol>all</Protocol>\\n            <Port>-1/-1</Port>\\n        </IngressAclEntries>\\n        <EgressAclEntries>\\n            <NetworkAclEntryId>nae-a2d447uw4tillxsdc****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-2</NetworkAclEntryName>\\n            <Policy>accept</Policy>\\n            <Description>This is EgressAclEntries.</Description>\\n            <Protocol>all</Protocol>\\n            <DestinationCidrIp>10.0.0.0/24</DestinationCidrIp>\\n            <Port>-1/-1\\t</Port>\\n        </EgressAclEntries>\\n        <Resources>\\n            <Status>BINDED</Status>\\n            <ResourceType>VSwitch</ResourceType>\\n            <ResourceId>vsw-bp1de348lntdwgthy****</ResourceId>\\n        </Resources>\\n    </NetworkAclAttribute>\\n</CreateNetworkAclResponse>","errorExample":""}]',
      'title' => '创建网络ACL',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CopyNetworkAclEntries' => 
    array (
      'summary' => '调用CopyNetworkAclEntries接口复制网络ACL规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-a2do9e413e0spxxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'SourceNetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被复制的网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-ghuo9ehg3e0spxxxxxxxx',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否检测此次请求。取值：
* **true**：发送检查请求。
* **false**（默认值）：发送正常请求。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6608E72F-F276-440F-ABEF-419971CEC4D1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterMissing.SourceNetworkAclId',
            'errorMessage' => 'ParameterMissing.SourceNetworkAclId',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterEmpty.SourceNetworkAclId',
            'errorMessage' => 'ParameterEmpty.SourceNetworkAclId',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidSourceNetworkAcl.NotFound',
            'errorMessage' => 'The special source network Acl is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeNetworkAcls',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6608E72F-F276-440F-ABEF-419971CEC4D1\\"\\n}","errorExample":""},{"type":"xml","example":"<CopyNetworkAclEntriesResponse>\\n    <RequestId>6608E72F-F276-440F-ABEF-419971CEC4D1</RequestId>\\n</CopyNetworkAclEntriesResponse>","errorExample":""}]',
      'title' => '复制网络ACL规则',
      'description' => '- **CopyNetworkAclEntries**接口属于异步接口，即系统返回一个请求ID，但该网络ACL规则未复制成功，系统后台的复制任务仍在进行。您可以调用[DescribeNetworkAclAttributes](~~116542~~)查询网络ACL规则的复制状态：
    - 当网络ACL规则处于**Modifying**状态时，表示网络ACL规则正在复制中。
    - 当网络ACL规则处于**Available**状态时，表示网络ACL规则复制成功。
- **CopyNetworkAclEntries**接口不支持并发复制同一个网络ACL规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteNetworkAcl' => 
    array (
      'summary' => '调用DeleteNetworkAcl接口删除网络ACL。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-bp1lhl0taikrbgnh****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '223e4867-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否检测此次请求。取值：
* **true**：发送检查请求。
* **false**（默认值）：发送正常请求。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4B48E3D-DF70-471B-AA83-089E83A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'NetworkStatus.Modifying',
            'errorMessage' => 'The special Network Acl is in modifying.',
          ),
          8 => 
          array (
            'errorCode' => 'NetworkAclExistBinding',
            'errorMessage' => 'The Network Acl has bindings.',
          ),
          9 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeNetworkAcls',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4B48E3D-DF70-471B-AA83-089E83A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNetworkAclResponse>\\n    <RequestId>4B48E3D-DF70-471B-AA83-089E83A1B45</RequestId>\\n</DeleteNetworkAclResponse>","errorExample":""}]',
      'title' => '删除网络ACL',
      'description' => '**DeleteNetworkAcl**接口不支持并发删除同一个网络ACL。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociateNetworkAcl' => 
    array (
      'summary' => '调用UnassociateNetworkAcl接口解除网络ACL与交换机的绑定。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '关联资源的信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '关联资源的信息。',
              'type' => 'object',
              'properties' => 
              array (
                'ResourceType' => 
                array (
                  'description' => '要解绑的关联资源类型。取值：**VSwitch**，交换机。

**N**的取值为0~29，即最多可以解绑30个资源。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'VSwitch',
                ),
                'ResourceId' => 
                array (
                  'description' => '要解绑的关联资源的ID。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'vsw-bp1de348lntdw****',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑关联资源的网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-a2do9e413e0sp****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否检测此次请求。取值：
* **true**：发送检查请求。
* **false**（默认值）：发送正常请求。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AD024BAA-2D91-48FD-810B-8FB7489B6EE6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterMissing.Resources',
            'errorMessage' => 'ParameterMissing.Resources',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterEmpty.Resources',
            'errorMessage' => 'ParameterEmpty.Resources',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'NetworkStatus.Modifying',
            'errorMessage' => 'The special Network Acl is in modifying.',
          ),
          10 => 
          array (
            'errorCode' => 'ResourceStatus.Error',
            'errorMessage' => 'The binding instance is in middle status.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidResource.NotFound',
            'errorMessage' => 'The binding instance is not found.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidResource.VpcError',
            'errorMessage' => 'The network acl and resource not in same vpc.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidResource.NotBinding',
            'errorMessage' => 'The resource has not been binded.',
          ),
          14 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
          15 => 
          array (
            'errorCode' => 'Mismatch.NetworkAclAndVSwitch',
            'errorMessage' => 'The specified network ACL and vSwitch are not matched.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeNetworkAcls',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AD024BAA-2D91-48FD-810B-8FB7489B6EE6\\"\\n}","errorExample":""},{"type":"xml","example":"<UnassociateNetworkAclResponse>\\n    <RequestId>AD024BAA-2D91-48FD-810B-8FB7489B6EE6</RequestId>\\n</UnassociateNetworkAclResponse>","errorExample":""}]',
      'title' => '解除网络ACL与交换机的绑定',
      'description' => '- **UnassociateNetworkAcl**接口属于异步接口，即系统返回一个请求ID，但该网络ACL与交换机尚未解绑成功，系统后台的解绑任务仍在进行。您可以调用[DescribeNetworkAclAttributes](~~116542~~)查询网络ACL与交换机的解绑状态：
    - 当网络ACL与交换机处于**UNBINDING**状态时，表示网络ACL与交换机正在解绑中。
    - 当网络ACL与交换机处于**UNBINDED**状态时，表示网络ACL与交换机解绑成功。
- **UnassociateNetworkAcl**接口不支持针对同一个网络ACL并发解绑交换机。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyNetworkAclAttributes' => 
    array (
      'summary' => '调用ModifyNetworkAclAttributes接口修改网络ACL的属性。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-bp1lhl0taikrxxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-1',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的描述信息。 

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my NetworkAcl.',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否检测此次请求。取值：
* **true**：发送检查请求。
* **false**（默认值）：发送正常请求。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8F76C3E4-B39F-465D-B8B3-50BAF03CA833',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterLengthIllegal.Name',
            'errorMessage' => 'ParameterLengthIllegal.Name',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterIllegal.Name',
            'errorMessage' => 'ParameterIllegal.Name',
          ),
          8 => 
          array (
            'errorCode' => 'ParameterLengthIllegal.Description',
            'errorMessage' => 'ParameterLengthIllegal.Description',
          ),
          9 => 
          array (
            'errorCode' => 'ParameterIllegal.Description',
            'errorMessage' => 'ParameterIllegal.Description',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          11 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParamFormat.%s',
            'errorMessage' => 'The param format of %s is illegal.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8F76C3E4-B39F-465D-B8B3-50BAF03CA833\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyNetworkAclAttributesResponse>\\n    <RequestId>8F76C3E4-B39F-465D-B8B3-50BAF03CA833</RequestId>\\n</ModifyNetworkAclAttributesResponse>","errorExample":""}]',
      'title' => '修改网络ACL的属性',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateNetworkAclEntries' => 
    array (
      'summary' => '调用UpdateNetworkAclEntries接口更新网络ACL规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IngressAclEntries',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '入方向规则的信息。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '入方向规则的信息。
',
              'type' => 'object',
              'properties' => 
              array (
                'NetworkAclEntryId' => 
                array (
                  'description' => '入方向规则条目的ID。

**N**的取值为**0**~**99**，即最多可以更新100条入方向规则的信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nae-2zepn32de59j8m4****',
                ),
                'EntryType' => 
                array (
                  'description' => '规则类型，取值为**custom**，表示自定义。 ',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'custom',
                ),
                'NetworkAclEntryName' => 
                array (
                  'description' => '入方向规则条目的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'acl-3',
                ),
                'Policy' => 
                array (
                  'description' => '授权策略。取值：

- **accept**：允许。

- **drop**：拒绝。',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'drop' => 'drop',
                    'accept' => 'accept',
                  ),
                  'example' => 'accept',
                ),
                'SourceCidrIp' => 
                array (
                  'description' => '源地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'IpVersion' => 
                array (
                  'description' => 'IP版本：
- **IPv4**
- **IPv6**',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'IPv6' => 'IPv6',
                    'IPv4' => 'IPv4',
                  ),
                  'example' => 'IPv4',
                ),
                'Description' => 
                array (
                  'description' => '入方向规则的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'This is IngressAclEntries.',
                ),
                'Protocol' => 
                array (
                  'description' => '协议类型。取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：支持所有协议。

- **icmpv6**: ipv6网络控制报文协议。',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'all' => 'all',
                    'tcp' => 'tcp',
                    'udp' => 'udp',
                    'gre' => 'gre',
                    'icmp' => 'icmp',
                    'icmpv6' => 'icmpv6',
                  ),
                  'example' => 'all',
                ),
                'Port' => 
                array (
                  'description' => '入方向规则的源端口范围。

- 当入方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。
- 当入方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '-1/-1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'EgressAclEntries',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '出方向规则的信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '出方向规则的信息。
',
              'type' => 'object',
              'properties' => 
              array (
                'NetworkAclEntryId' => 
                array (
                  'description' => '出方向规则条目的ID。

**N**的取值为**0**~**99**，即最多可以更新100条出方向规则的信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nae-2zecs97e0brcge46****',
                ),
                'EntryType' => 
                array (
                  'description' => '规则类型，取值为**custom**，表示自定义。 ',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'custom',
                ),
                'NetworkAclEntryName' => 
                array (
                  'description' => '出方向规则条目的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'acl-2',
                ),
                'Policy' => 
                array (
                  'description' => '授权策略。取值：

- **accept**：允许。

- **drop**：拒绝。',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'drop' => 'drop',
                    'accept' => 'accept',
                  ),
                  'example' => 'accept',
                ),
                'Description' => 
                array (
                  'description' => '出方向规则的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'This is EgressAclEntries.',
                ),
                'Protocol' => 
                array (
                  'description' => '协议类型。取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：支持所有协议。

- **icmpv6**：ipv6网络控制报文协议',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'all' => 'all',
                    'tcp' => 'tcp',
                    'udp' => 'udp',
                    'gre' => 'gre',
                    'icmp' => 'icmp',
                    'icmpv6' => 'icmpv6',
                  ),
                  'example' => 'all',
                ),
                'DestinationCidrIp' => 
                array (
                  'description' => '目标地址的网络。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'IpVersion' => 
                array (
                  'description' => 'IP版本：

- **IPv4**
- **IPv6**',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'IPv6' => 'IPv6',
                    'IPv4' => 'IPv4',
                  ),
                  'example' => 'IPv4',
                ),
                'Port' => 
                array (
                  'description' => '出方向规则的目的端口范围。

- 当出方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。
- 当出方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '-1/-1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'UpdateIngressAclEntries',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否更新入方向规则。取值：

- **true**：更新。

- **false**（默认）：不更新。

> 该参数不支持增量修改，当ACL已经有一条入方向规则，如果想要再增加一条入方向规则，调用该API时必须把这两条规则都传入，如果只传入新增的入方向规则，会把已有的入方向规则删除。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'UpdateEgressAclEntries',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否更新出方向规则。取值：

- **true**：更新。

- **false**（默认）：不更新。

> 该参数不支持增量修改，当ACL已经有一条出方向规则，如果想要再增加一条出方向规则，调用该API时必须把这两条规则都传入，如果只传入新增的出方向规则，会把已有的出方向规则删除。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-bp1lhl0taikrzxsc****',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是预检',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1170A5A0-E760-4331-9133-A7D38D973215',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterMissing.Port',
            'errorMessage' => 'ParameterMissing.Port',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterIllegal.Port',
            'errorMessage' => 'ParameterIllegal.Port',
          ),
          8 => 
          array (
            'errorCode' => 'ParameterIllegal.Policy',
            'errorMessage' => 'ParameterIllegal.Policy',
          ),
          9 => 
          array (
            'errorCode' => 'ParameterMissing.Policy',
            'errorMessage' => 'ParameterMissing.Policy',
          ),
          10 => 
          array (
            'errorCode' => 'ParameterIllegal.Protocol',
            'errorMessage' => 'ParameterIllegal.Protocol',
          ),
          11 => 
          array (
            'errorCode' => 'ParameterMissing.Protocol',
            'errorMessage' => 'ParameterMissing.Protocol',
          ),
          12 => 
          array (
            'errorCode' => 'ParameterLengthIllegal.Name',
            'errorMessage' => 'ParameterLengthIllegal.Name',
          ),
          13 => 
          array (
            'errorCode' => 'ParameterIllegal.Name',
            'errorMessage' => 'ParameterIllegal.Name',
          ),
          14 => 
          array (
            'errorCode' => 'ParameterLengthIllegal.Description',
            'errorMessage' => 'ParameterLengthIllegal.Description',
          ),
          15 => 
          array (
            'errorCode' => 'ParameterIllegal.Description',
            'errorMessage' => 'ParameterIllegal.Description',
          ),
          16 => 
          array (
            'errorCode' => 'ParameterIllegal.SourceCidrIp',
            'errorMessage' => 'ParameterIllegal.SourceCidrIp',
          ),
          17 => 
          array (
            'errorCode' => 'ParameterMissing.SourceCidrIp',
            'errorMessage' => 'ParameterMissing.SourceCidrIp',
          ),
          18 => 
          array (
            'errorCode' => 'ParameterIllegal.DestinationCidrIp',
            'errorMessage' => 'ParameterIllegal.DestinationCidrIp',
          ),
          19 => 
          array (
            'errorCode' => 'ParameterMissing.DestinationCidrIp',
            'errorMessage' => 'ParameterMissing.DestinationCidrIp',
          ),
          20 => 
          array (
            'errorCode' => 'QuotaExceed.NetworkAclEntry',
            'errorMessage' => 'Network acl entry is over limit.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          22 => 
          array (
            'errorCode' => 'NetworkStatus.Modifying',
            'errorMessage' => 'The special Network Acl is in modifying.',
          ),
          23 => 
          array (
            'errorCode' => 'ResourceStatus.Error',
            'errorMessage' => 'The binding instance is in middle status.',
          ),
          24 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
          25 => 
          array (
            'errorCode' => 'IllegalParam.IngressAclEntryId',
            'errorMessage' => 'The specified IngressAclEntryId is invalid.',
          ),
          26 => 
          array (
            'errorCode' => 'IllegalParam.EgressAclEntryId',
            'errorMessage' => 'The specified EgressAclEntryId is invalid.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationDenied.VpcIpv6NotEnabled',
            'errorMessage' => 'IPv6 has not been enabled for the VPC.',
          ),
          28 => 
          array (
            'errorCode' => 'IllegalParam.SourceCidrIp',
            'errorMessage' => 'Param SourceCidrIp is illegal.',
          ),
          29 => 
          array (
            'errorCode' => 'IllegalParam.Policy',
            'errorMessage' => 'Param Policy illegal.',
          ),
          30 => 
          array (
            'errorCode' => 'IllegalParam.Protocol',
            'errorMessage' => 'Param Protocol illegal.',
          ),
          31 => 
          array (
            'errorCode' => 'IllegalParam.DestinationCidrIp',
            'errorMessage' => 'Param DestinationCidrIp illegal.',
          ),
          32 => 
          array (
            'errorCode' => 'IllegalParam.IpVersion',
            'errorMessage' => 'Param IpVersion illegal.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeNetworkAcls',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1170A5A0-E760-4331-9133-A7D38D973215\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateNetworkAclEntriesResponse>\\n    <RequestId>1170A5A0-E760-4331-9133-A7D38D973215</RequestId>\\n</UpdateNetworkAclEntriesResponse>","errorExample":""}]',
      'title' => '更新网络ACL规则',
      'description' => '- **UpdateNetworkAclEntries**接口属于异步接口，即系统返回一个请求ID，但该网络ACL规则尚未更新成功，系统后台的更新任务仍在进行。您可以调用[DescribeNetworkAclAttributes](~~116542~~)查询网络ACL规则的更新状态：
    - 当网络ACL规则处于**Modifying**状态时，表示网络ACL规则正在更新中。
    - 当网络ACL规则处于**Available**状态时，表示网络ACL规则更新成功。
- **UpdateNetworkAclEntries**接口不支持并发更新同一个网络ACL规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeNetworkAclAttributes' => 
    array (
      'summary' => '调用DescribeNetworkAclAttributes接口查询网络ACL的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nacl-a2do9e413e0spzasx****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5905F9C-0161-4E72-9CB1-1F3F3CF6268A',
              ),
              'NetworkAclAttribute' => 
              array (
                'description' => '网络ACL的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '关联资源的状态。取值：

- **Available**：可用。

- **Modifying**：配置中。',
                    'type' => 'string',
                    'example' => 'Available',
                  ),
                  'VpcId' => 
                  array (
                    'description' => '网络ACL关联的VPC的ID。',
                    'type' => 'string',
                    'example' => 'vpc-a2d33rfpl72k5defr****',
                  ),
                  'CreationTime' => 
                  array (
                    'description' => '网络ACL创建的时间。',
                    'type' => 'string',
                    'example' => '2021-12-25 11:33:27',
                  ),
                  'Description' => 
                  array (
                    'description' => '网络ACL的描述信息。',
                    'type' => 'string',
                    'example' => 'This is my NetworkAcl.',
                  ),
                  'NetworkAclName' => 
                  array (
                    'description' => '网络ACL的名称。',
                    'type' => 'string',
                    'example' => 'acl-1',
                  ),
                  'NetworkAclId' => 
                  array (
                    'description' => '网络ACL的ID。',
                    'type' => 'string',
                    'example' => 'nacl-a2do9e413e0spnhmj****',
                  ),
                  'OwnerId' => 
                  array (
                    'description' => '网络ACL所属的阿里云账号ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '253460731706911258',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '网络ACL所属的地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'IngressAclEntries' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'IngressAclEntry' => 
                      array (
                        'description' => '网络ACL入方向规则信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '网络ACL入方向规则信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NetworkAclEntryId' => 
                            array (
                              'description' => '入方向规则条目的ID。',
                              'type' => 'string',
                              'example' => 'nae-a2dk86arlydmevfbg****',
                            ),
                            'EntryType' => 
                            array (
                              'description' => '规则类型，取值为**custom**，表示自定义。',
                              'type' => 'string',
                              'example' => 'custom',
                            ),
                            'NetworkAclEntryName' => 
                            array (
                              'description' => '入方向规则条目的名称。',
                              'type' => 'string',
                              'example' => 'acl-3',
                            ),
                            'Policy' => 
                            array (
                              'description' => '授权策略，取值：

- **accept**：允许。

- **drop**：拒绝。',
                              'type' => 'string',
                              'example' => 'accept',
                            ),
                            'Description' => 
                            array (
                              'description' => '入方向规则的描述信息。',
                              'type' => 'string',
                              'example' => 'This is IngressAclEntries.',
                            ),
                            'SourceCidrIp' => 
                            array (
                              'description' => '源地址的网段。',
                              'type' => 'string',
                              'example' => '10.0.0.0/24',
                            ),
                            'IpVersion' => 
                            array (
                              'description' => '交换机预留网段的IP版本。取值：

- **IPv4** （默认值）：IPv4版本。
- **IPv6**：IPv6版本。

',
                              'type' => 'string',
                              'example' => 'IPv4',
                            ),
                            'Protocol' => 
                            array (
                              'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：支持所有协议。',
                              'type' => 'string',
                              'example' => 'all',
                            ),
                            'Port' => 
                            array (
                              'description' => '入方向规则的目的端口范围。

- 当入方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。
- 当入方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                              'type' => 'string',
                              'example' => '-1/-1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'EgressAclEntries' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EgressAclEntry' => 
                      array (
                        'description' => '网络ACL出方向规则信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '网络ACL出方向规则信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NetworkAclEntryId' => 
                            array (
                              'description' => '出方向规则条目的ID。',
                              'type' => 'string',
                              'example' => 'nae-a2d447uw4tillxdcv****',
                            ),
                            'EntryType' => 
                            array (
                              'description' => '规则类型，取值为**custom**，表示自定义。 ',
                              'type' => 'string',
                              'example' => 'custom',
                            ),
                            'NetworkAclEntryName' => 
                            array (
                              'description' => '出方向规则条目的名称。',
                              'type' => 'string',
                              'example' => 'acl-2',
                            ),
                            'Policy' => 
                            array (
                              'description' => '授权策略，取值：

- **accept**：允许。

- **drop**：拒绝。',
                              'type' => 'string',
                              'example' => 'accept',
                            ),
                            'Description' => 
                            array (
                              'description' => '出方向规则的描述信息。',
                              'type' => 'string',
                              'example' => 'This is EgressAclEntries.',
                            ),
                            'Protocol' => 
                            array (
                              'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：支持所有协议。',
                              'type' => 'string',
                              'example' => 'all',
                            ),
                            'DestinationCidrIp' => 
                            array (
                              'description' => '目标地址段。',
                              'type' => 'string',
                              'example' => '10.0.0.0/24',
                            ),
                            'IpVersion' => 
                            array (
                              'description' => '交换机预留网段的IP版本。取值：

- **IPv4** （默认值）：IPv4版本。
- **IPv6**：IPv6版本。

',
                              'type' => 'string',
                              'example' => 'IPv4',
                            ),
                            'Port' => 
                            array (
                              'description' => '出方向规则的目的端口范围。

- 当出方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。
- 当出方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                              'type' => 'string',
                              'example' => '-1/-1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Resources' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Resource' => 
                      array (
                        'description' => '关联的资源。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '关联的资源。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '关联资源的状态。取值：

- **BINDED**：已绑定。

- **BINDING**：绑定中。

- **UNBINDING**：已解绑。',
                              'type' => 'string',
                              'example' => 'BINDED',
                            ),
                            'ResourceType' => 
                            array (
                              'description' => '关联资源的类型。取值：**VSwitch**，交换机。',
                              'type' => 'string',
                              'example' => 'VSwitch',
                            ),
                            'ResourceId' => 
                            array (
                              'description' => '关联资源的实例ID。',
                              'type' => 'string',
                              'example' => 'vsw-bp1de348lntdwxscd****',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Tags' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Tag' => 
                      array (
                        'description' => '标签列表信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '标签列表信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '标签键。',
                              'type' => 'string',
                              'example' => 'FinanceDept',
                            ),
                            'Value' => 
                            array (
                              'description' => '标签值。',
                              'type' => 'string',
                              'example' => 'FinanceJoshua',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterMissing.NetworkAclId',
            'errorMessage' => 'ParameterMissing.NetworkAclId',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterEmpty.NetworkAclId',
            'errorMessage' => 'ParameterEmpty.NetworkAclId',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F5905F9C-0161-4E72-9CB1-1F3F3CF6268A\\",\\n  \\"NetworkAclAttribute\\": {\\n    \\"Status\\": \\"Available\\",\\n    \\"VpcId\\": \\"vpc-a2d33rfpl72k5defr****\\",\\n    \\"CreationTime\\": \\"2021-12-25 11:33:27\\",\\n    \\"Description\\": \\"This is my NetworkAcl.\\",\\n    \\"NetworkAclName\\": \\"acl-1\\",\\n    \\"NetworkAclId\\": \\"nacl-a2do9e413e0spnhmj****\\",\\n    \\"OwnerId\\": 253460731706911260,\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"IngressAclEntries\\": {\\n      \\"IngressAclEntry\\": [\\n        {\\n          \\"NetworkAclEntryId\\": \\"nae-a2dk86arlydmevfbg****\\",\\n          \\"EntryType\\": \\"custom\\",\\n          \\"NetworkAclEntryName\\": \\"acl-3\\",\\n          \\"Policy\\": \\"accept\\",\\n          \\"Description\\": \\"This is IngressAclEntries.\\",\\n          \\"SourceCidrIp\\": \\"10.0.0.0/24\\",\\n          \\"IpVersion\\": \\"IPv4\\",\\n          \\"Protocol\\": \\"all\\",\\n          \\"Port\\": \\"-1/-1\\"\\n        }\\n      ]\\n    },\\n    \\"EgressAclEntries\\": {\\n      \\"EgressAclEntry\\": [\\n        {\\n          \\"NetworkAclEntryId\\": \\"nae-a2d447uw4tillxdcv****\\",\\n          \\"EntryType\\": \\"custom\\",\\n          \\"NetworkAclEntryName\\": \\"acl-2\\",\\n          \\"Policy\\": \\"accept\\",\\n          \\"Description\\": \\"This is EgressAclEntries.\\",\\n          \\"Protocol\\": \\"all\\",\\n          \\"DestinationCidrIp\\": \\"10.0.0.0/24\\",\\n          \\"IpVersion\\": \\"IPv4\\",\\n          \\"Port\\": \\"-1/-1\\"\\n        }\\n      ]\\n    },\\n    \\"Resources\\": {\\n      \\"Resource\\": [\\n        {\\n          \\"Status\\": \\"BINDED\\",\\n          \\"ResourceType\\": \\"VSwitch\\",\\n          \\"ResourceId\\": \\"vsw-bp1de348lntdwxscd****\\"\\n        }\\n      ]\\n    },\\n    \\"Tags\\": {\\n      \\"Tag\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeNetworkAclAttributesResponse>\\n    <RequestId>F5905F9C-0161-4E72-9CB1-1F3F3CF6268A</RequestId>\\n    <NetworkAclAttribute>\\n        <Status>Available</Status>\\n        <VpcId>vpc-a2d33rfpl72k5defr****</VpcId>\\n        <CreationTime>2021-12-25 11:33:27</CreationTime>\\n        <Description>This is my NetworkAcl.</Description>\\n        <NetworkAclName>acl-1</NetworkAclName>\\n        <NetworkAclId>nacl-a2do9e413e0spnhmj****</NetworkAclId>\\n        <OwnerId>253460731706911260</OwnerId>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <IngressAclEntries>\\n            <NetworkAclEntryId>nae-a2dk86arlydmevfbg****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-3</NetworkAclEntryName>\\n            <Policy>accept</Policy>\\n            <Description>This is IngressAclEntries.</Description>\\n            <SourceCidrIp>10.0.0.0/24</SourceCidrIp>\\n            <Protocol>all</Protocol>\\n            <Port>-1/-1</Port>\\n        </IngressAclEntries>\\n        <EgressAclEntries>\\n            <NetworkAclEntryId>nae-a2d447uw4tillxdcv****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-2</NetworkAclEntryName>\\n            <Policy>accept</Policy>\\n            <Description>This is EgressAclEntries.</Description>\\n            <Protocol>all</Protocol>\\n            <DestinationCidrIp>10.0.0.0/24</DestinationCidrIp>\\n            <Port>-1/-1</Port>\\n        </EgressAclEntries>\\n        <Resources>\\n            <Status>BINDED</Status>\\n            <ResourceType>VSwitch</ResourceType>\\n            <ResourceId>vsw-bp1de348lntdwxscd****</ResourceId>\\n        </Resources>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </NetworkAclAttribute>\\n</DescribeNetworkAclAttributesResponse>","errorExample":""}]',
      'title' => '查询网络ACL的详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeNetworkAcls' => 
    array (
      'summary' => '调用DescribeNetworkAcls接口查看网络ACL列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。
',
            'type' => 'string',
            'required' => false,
            'example' => 'nacl-bp1lhl0taikrbgnh****',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-1',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL关联的VPC的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-m5ebpc2xh64mqm27e****',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联实例的类型。取值：**VSwitch**，交换机。

**ResourceType**和**ResourceId**参数需要同时指定才生效。',
            'type' => 'string',
            'required' => false,
            'example' => 'VSwitch',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联实例的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-bp1de348lntdwnhbg****',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所属的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        8 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL所属的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        10 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'string',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '2',
              ),
              'NetworkAcls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NetworkAcl' => 
                  array (
                    'description' => '网络ACL的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '网络ACL的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '网络ACL的状态。取值：

- **Available**：可用。

- **Modifying**：配置中。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'VpcId' => 
                        array (
                          'description' => '关联的VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-m5ebpc2xh64mqm27e****',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '网络ACL的创建时间。',
                          'type' => 'string',
                          'example' => '2021-12-25 11:44:17',
                        ),
                        'Description' => 
                        array (
                          'description' => '网络ACL的描述信息。 
',
                          'type' => 'string',
                          'example' => 'This is my NetworkAcl.',
                        ),
                        'NetworkAclName' => 
                        array (
                          'description' => '网络ACL的名称。',
                          'type' => 'string',
                          'example' => 'acl-1',
                        ),
                        'NetworkAclId' => 
                        array (
                          'description' => '网络ACL的ID。',
                          'type' => 'string',
                          'example' => 'nacl-a2do9e413e0spxscd****',
                        ),
                        'OwnerId' => 
                        array (
                          'description' => '网络ACL所属阿里云账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '253460731706911258',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '网络ACL所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'IngressAclEntries' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IngressAclEntry' => 
                            array (
                              'description' => '入方向规则信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '入方向规则信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'NetworkAclEntryId' => 
                                  array (
                                    'description' => '入方向规则条目的ID。

',
                                    'type' => 'string',
                                    'example' => 'nae-a2dk86arlydmezasw****',
                                  ),
                                  'EntryType' => 
                                  array (
                                    'description' => '规则类型，取值为**custom**，表示自定义。 ',
                                    'type' => 'string',
                                    'example' => 'custom',
                                  ),
                                  'NetworkAclEntryName' => 
                                  array (
                                    'description' => '入方向规则条目的名称。

',
                                    'type' => 'string',
                                    'example' => 'acl-3	',
                                  ),
                                  'Policy' => 
                                  array (
                                    'description' => '授权策略，取值：

- **accept**：允许。

- **drop**：拒绝。',
                                    'type' => 'string',
                                    'example' => 'accept',
                                  ),
                                  'Description' => 
                                  array (
                                    'description' => '入方向规则的描述信息。



',
                                    'type' => 'string',
                                    'example' => 'This is IngressAclEntries.',
                                  ),
                                  'SourceCidrIp' => 
                                  array (
                                    'description' => '源地址段。

',
                                    'type' => 'string',
                                    'example' => '10.0.0.0/24	',
                                  ),
                                  'IpVersion' => 
                                  array (
                                    'description' => 'BGP组的IP版本。取值：

- **IPv4**：IPv4版本。
- **IPv6**：IPv6版本。',
                                    'type' => 'string',
                                    'example' => 'IPv4',
                                  ),
                                  'Protocol' => 
                                  array (
                                    'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：支持所有协议。',
                                    'type' => 'string',
                                    'example' => 'all',
                                  ),
                                  'Port' => 
                                  array (
                                    'description' => '入方向规则的目的端口范围。

- 当入方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。
- 当入方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                                    'type' => 'string',
                                    'example' => '-1/-1	',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EgressAclEntries' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EgressAclEntry' => 
                            array (
                              'description' => '出方向规则信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'NetworkAclEntryId' => 
                                  array (
                                    'description' => '出方向规则条目的ID。

',
                                    'type' => 'string',
                                    'example' => 'nae-a2d447uw4tillfvgb****',
                                  ),
                                  'EntryType' => 
                                  array (
                                    'description' => '规则类型，取值为**custom**，表示自定义。 ',
                                    'type' => 'string',
                                    'example' => 'custom',
                                  ),
                                  'NetworkAclEntryName' => 
                                  array (
                                    'description' => '出方向规则条目的名称。

',
                                    'type' => 'string',
                                    'example' => 'acl-2	',
                                  ),
                                  'Policy' => 
                                  array (
                                    'description' => '授权策略，取值：

- **accept**：允许。

- **drop**：拒绝。',
                                    'type' => 'string',
                                    'example' => 'accept',
                                  ),
                                  'Description' => 
                                  array (
                                    'description' => '出方向规则的描述信息。

',
                                    'type' => 'string',
                                    'example' => 'This is EgressAclEntries.',
                                  ),
                                  'Protocol' => 
                                  array (
                                    'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。

- **gre**：通用路由封装协议。

- **tcp**：传输控制协议。

- **udp**：用户数据报协议。

- **all**：支持所有协议。',
                                    'type' => 'string',
                                    'example' => 'all',
                                  ),
                                  'DestinationCidrIp' => 
                                  array (
                                    'description' => '目标地址段。

',
                                    'type' => 'string',
                                    'example' => '10.0.0.0/24	',
                                  ),
                                  'IpVersion' => 
                                  array (
                                    'description' => '实例的IP协议版本。取值：

- **Ipv4**： IPv4版本。
- **Ipv6**： IPv6版本。',
                                    'type' => 'string',
                                    'example' => 'IPV4',
                                  ),
                                  'Port' => 
                                  array (
                                    'description' => '出方向规则的目的端口范围。


- 当出方向规则的**Protocol**（协议类型）为**all**、**icmp**或**gre**时，端口范围为-1/-1，表示不限制端口。
- 当出方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1**~**65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                                    'type' => 'string',
                                    'example' => '-1/-1	',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Resources' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Resource' => 
                            array (
                              'description' => '关联的资源。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '关联的资源。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Status' => 
                                  array (
                                    'description' => '关联资源的状态。取值：

- **BINDED**：已绑定。

- **BINDING**：绑定中。

- **UNBINDING**：已解绑。',
                                    'type' => 'string',
                                    'example' => 'BINDED',
                                  ),
                                  'ResourceType' => 
                                  array (
                                    'description' => '关联资源的类型。',
                                    'type' => 'string',
                                    'example' => 'VSwitch',
                                  ),
                                  'ResourceId' => 
                                  array (
                                    'description' => '关联资源的ID。',
                                    'type' => 'string',
                                    'example' => 'vsw-bp1de348lntdwcdf****',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签列表信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterMissing.AliUid',
            'errorMessage' => 'ParameterMissing.AliUid',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterMissing.Bid',
            'errorMessage' => 'ParameterMissing.Bid',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterMissing.RegionId',
            'errorMessage' => 'ParameterMissing.RegionId',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterEmpty.RegionId',
            'errorMessage' => 'ParameterEmpty.RegionId',
          ),
          4 => 
          array (
            'errorCode' => 'NotSupport.NetworkAcl',
            'errorMessage' => 'Network acl is not support now.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": \\"10\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"TotalCount\\": \\"2\\",\\n  \\"NetworkAcls\\": {\\n    \\"NetworkAcl\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"VpcId\\": \\"vpc-m5ebpc2xh64mqm27e****\\",\\n        \\"CreationTime\\": \\"2021-12-25 11:44:17\\",\\n        \\"Description\\": \\"This is my NetworkAcl.\\",\\n        \\"NetworkAclName\\": \\"acl-1\\",\\n        \\"NetworkAclId\\": \\"nacl-a2do9e413e0spxscd****\\",\\n        \\"OwnerId\\": 253460731706911260,\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"IngressAclEntries\\": {\\n          \\"IngressAclEntry\\": [\\n            {\\n              \\"NetworkAclEntryId\\": \\"nae-a2dk86arlydmezasw****\\",\\n              \\"EntryType\\": \\"custom\\",\\n              \\"NetworkAclEntryName\\": \\"acl-3\\\\t\\",\\n              \\"Policy\\": \\"accept\\",\\n              \\"Description\\": \\"This is IngressAclEntries.\\",\\n              \\"SourceCidrIp\\": \\"10.0.0.0/24\\\\t\\",\\n              \\"IpVersion\\": \\"IPv4\\",\\n              \\"Protocol\\": \\"all\\",\\n              \\"Port\\": \\"-1/-1\\\\t\\"\\n            }\\n          ]\\n        },\\n        \\"EgressAclEntries\\": {\\n          \\"EgressAclEntry\\": [\\n            {\\n              \\"NetworkAclEntryId\\": \\"nae-a2d447uw4tillfvgb****\\",\\n              \\"EntryType\\": \\"custom\\",\\n              \\"NetworkAclEntryName\\": \\"acl-2\\\\t\\",\\n              \\"Policy\\": \\"accept\\",\\n              \\"Description\\": \\"This is EgressAclEntries.\\",\\n              \\"Protocol\\": \\"all\\",\\n              \\"DestinationCidrIp\\": \\"10.0.0.0/24\\\\t\\",\\n              \\"IpVersion\\": \\"IPV4\\",\\n              \\"Port\\": \\"-1/-1\\\\t\\"\\n            }\\n          ]\\n        },\\n        \\"Resources\\": {\\n          \\"Resource\\": [\\n            {\\n              \\"Status\\": \\"BINDED\\",\\n              \\"ResourceType\\": \\"VSwitch\\",\\n              \\"ResourceId\\": \\"vsw-bp1de348lntdwcdf****\\"\\n            }\\n          ]\\n        },\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeNetworkAclsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <NetworkAcls>\\n        <Status>Available</Status>\\n        <VpcId>vpc-m5ebpc2xh64mqm27e****</VpcId>\\n        <CreationTime>2021-12-25 11:44:17</CreationTime>\\n        <Description>This is my NetworkAcl.</Description>\\n        <NetworkAclName>acl-1</NetworkAclName>\\n        <NetworkAclId>nacl-a2do9e413e0spxscd****</NetworkAclId>\\n        <OwnerId>253460731706911260</OwnerId>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <IngressAclEntries>\\n            <NetworkAclEntryId>nae-a2dk86arlydmezasw****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-3\\t</NetworkAclEntryName>\\n            <Policy>accept</Policy>\\n            <Description>This is IngressAclEntries.</Description>\\n            <SourceCidrIp>10.0.0.0/24\\t</SourceCidrIp>\\n            <Protocol>all</Protocol>\\n            <Port>-1/-1\\t</Port>\\n        </IngressAclEntries>\\n        <EgressAclEntries>\\n            <NetworkAclEntryId>nae-a2d447uw4tillfvgb****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-2\\t</NetworkAclEntryName>\\n            <Policy>accept</Policy>\\n            <Description>This is EgressAclEntries.</Description>\\n            <Protocol>all</Protocol>\\n            <DestinationCidrIp>10.0.0.0/24\\t</DestinationCidrIp>\\n            <Port>-1/-1\\t</Port>\\n        </EgressAclEntries>\\n        <Resources>\\n            <Status>BINDED</Status>\\n            <ResourceType>VSwitch</ResourceType>\\n            <ResourceId>vsw-bp1de348lntdwcdf****</ResourceId>\\n        </Resources>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </NetworkAcls>\\n</DescribeNetworkAclsResponse>","errorExample":""}]',
      'title' => '查看网络ACL列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateHaVip' => 
    array (
      'summary' => '调用CreateHaVip接口创建高可用虚拟IP（HaVip）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所属的交换机ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-asdfjlnaue4g****',
          ),
        ),
        4 => 
        array (
          'name' => 'IpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例的IP地址。

指定的IP地址必须为交换机网段中未被占用的IP地址。如果不指定，则从指定的交换机中随机分配一个未被占用的IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.10',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my HaVip.',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高可用虚拟IP所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
              'IpAddress' => 
              array (
                'description' => 'HaVip实例的IP地址。',
                'type' => 'string',
                'example' => '192.XX.XX.10',
              ),
              'HaVipId' => 
              array (
                'description' => 'HaVip实例的ID。',
                'type' => 'string',
                'example' => 'havip-2zeo05qre24nhrqpy****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specified Description  is wrongly formed.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIPAddress.OutOfRange',
            'errorMessage' => 'The specified IPAddress is out of VSwitch CIDR.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIPAddress.NotAvailable',
            'errorMessage' => 'The specified IPAddress is not available because it is a system reserved IPAddress.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidIPAddress.AlreadyUsed',
            'errorMessage' => 'The specified IPAddress is already used by other resource.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidIPAddress.Malformed',
            'errorMessage' => 'The specified IPAddress is not a valid or strict address.',
          ),
          5 => 
          array (
            'errorCode' => 'Abs.Vpc.InvalidName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidIPAddress.OutOfVswCIDR',
            'errorMessage' => 'The specified IPAddress is out of VSwitch CIDR.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidIPAddress.AlreadyInUse',
            'errorMessage' => 'The specified IPAddress is already used by other resource.',
          ),
          8 => 
          array (
            'errorCode' => 'UnsupportedFeature.CloudBoxHaVip',
            'errorMessage' => 'The HAVIP feature is not supported in cloud box.',
          ),
          9 => 
          array (
            'errorCode' => 'CountLimitExceed.HaVipInVpc',
            'errorMessage' => 'Specified Vpc exceeds the quota of max number of ha-vip count.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.HaVip',
            'errorMessage' => 'No permissions to perform operations on HAVIPs. Please apply for privilege--vpc_privilege_allow_buy_havip_instance.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'CountLimitExceed.HaVipInVpc',
            'errorMessage' => 'Specified Vpc exceeds the quota of max number of ha-vip count.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.HaVip',
            'errorMessage' => 'Living HaVip quota exceeded.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified VSwitch does not exist in the specified region.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.ResourceGroupId',
            'errorMessage' => 'Invalid ResourceGroupld value.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\",\\n  \\"IpAddress\\": \\"192.XX.XX.10\\",\\n  \\"HaVipId\\": \\"havip-2zeo05qre24nhrqpy****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateHaVipResponse>\\n    <RequestId>C44F62BE-9CE7-4277-B117-69243F3988BF</RequestId>\\n    <IpAddress>192.XX.XX.10</IpAddress>\\n    <HaVipId>havip-2zeo05qre24nhrqpy****</HaVipId>\\n</CreateHaVipResponse>","errorExample":""}]',
      'title' => '创建高可用虚拟IP（HaVip）',
      'description' => '**CreateHaVip**接口属于异步接口，即系统会返回一个实例ID，但该HaVip尚未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeHaVips](~~114611~~)查询HaVip的创建状态：
- 当HaVip处于**Creating**状态时，表示HaVip正在创建中。
- 当HaVip处于**Available**状态时，表示HaVip创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateHaVip' => 
    array (
      'summary' => '调用AssociateHaVip接口将HaVip绑定到专有网络ECS实例或弹性网卡上。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'HaVipId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的HaVip实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'havip-2zeo05qre24nhrqpy****',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '与HaVip实例绑定的ECS实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-faf344422ffsfad****',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定HaVip的实例类型，取值：

- **EcsInstance**：云服务器ECS实例。

- **NetworkInterface**：弹性网卡实例，当绑定HaVip的实例为弹性网卡，该参数必须填写。',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.BindOnFreeNetworkInterface',
            'errorMessage' => 'The network interface must be attached to an ECS instance.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.BindMultipleType',
            'errorMessage' => 'You cannot bind HaVip to multiple instance types.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.BindOnMultipleVswitch',
            'errorMessage' => 'The bound instance and HaVip must be on the same vSwitch.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVip.Status',
            'errorMessage' => 'vip invalid status',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'HaVip can be operated by this action only when it\'s status is Available or InUse.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'ECS instance can be operated by this action only when it?s status is Running or Stopped.',
          ),
          6 => 
          array (
            'errorCode' => 'CountLimitExceed.HaVipOnInstance',
            'errorMessage' => 'The amount of HaVip associated with the specified Instance reach its limits.',
          ),
          7 => 
          array (
            'errorCode' => 'CountLimitExceeded.HaVipOnECSInstance',
            'errorMessage' => 'The amount of Instance associated with the specified HaVip reach its limits.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidNetworkInterfaceId.NotFound',
            'errorMessage' => 'The network interface is not found.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.QueryNetworkInterfaceInfo',
            'errorMessage' => 'Failed to query network interface information.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.InstanceType',
            'errorMessage' => 'The specified instance type is invalid. Only ECS instances and network interface are allowed.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationUnsupported.BindOnSameEcs',
            'errorMessage' => 'You cannot bind two network interfaces on the same ECS instance.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.HavipBindType',
            'errorMessage' => 'You cannot bind HAVIP to network interface in the specified region.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidInstance.NotExist',
            'errorMessage' => 'InvalidInstance.NotExist : The specified Instance does not exist in the specified region. i-bp136w25mhx503ptilrh\\r\\nRequestId : A961CC27-D797-4E16-B1B3-19B9ECBA1495',
          ),
          15 => 
          array (
            'errorCode' => 'OperationDenied.BindOnSameEcs',
            'errorMessage' => 'The operation is not allowed because networkinterface bind on same instance.',
          ),
          16 => 
          array (
            'errorCode' => 'Forbidden.HaVip',
            'errorMessage' => 'No permissions to perform operations on HAVIPs. Please apply for privilege--vpc_privilege_allow_buy_havip_instance.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified Instance does not exist in the specified region.',
          ),
          18 => 
          array (
            'errorCode' => 'ResourceNotFound.EcsInstance',
            'errorMessage' => 'The specified resource of ECS instance is not found.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidStatus.NotAllow',
            'errorMessage' => 'Bind instance status invalid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidHaVip.Exist',
            'errorMessage' => 'haVip already bind exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidHaVipId.NotFound',
            'errorMessage' => 'The specified HaVip does not exist in the specified region.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified Instance does not exist in the specified region.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.HaVipBindInstance',
            'errorMessage' => 'The amount of instance associated with the specified haVip reach its limits.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateHaVipResponse>\\n    <RequestId>C44F62BE-9CE7-4277-B117-69243F3988BF</RequestId>\\n</AssociateHaVipResponse>","errorExample":""}]',
      'title' => '将HaVip绑定到专有网络ECS实例上',
      'description' => '在调用本接口绑定高可用虚拟IP时，请注意：

- HaVip绑定后立即生效，无需重启ECS实例，但需要将HaVip配置到ECS实例的弹性网卡上。 

- HaVip和要绑定的ECS实例必须同属于一个交换机。 

- 一个HaVip最多可绑定两个ECS实例。 

- 要绑定的ECS实例的状态必须为**运行中**或**停止**。 

- HaVip实例的状态必须为**Available**或**InUse**。

- **AssociateHaVip**接口属于异步接口，即系统返回一个请求ID，但该HaVip并未绑定完成，系统后台的绑定任务仍在进行。您可以调用[DescribeHaVips](~~114611~~)查询HaVip的绑定状态：
    - 当HaVip处于**Associating**状态时，表示HaVip正在绑定中。
    - 当HaVip处于**InUse**状态时，表示HaVip绑定完成。
- **AssociateHaVip**接口不支持并发绑定同一个HaVip。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteHaVip' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'HaVipId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的HaVip实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'havip-2zeo05qre24nhrqpy****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'HaVip can be deleted only when it is status is Available.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.HaVipReferedByRouteEntry',
            'errorMessage' => 'HaVip cannot be deleted when it is refered by a route table entry as next hop.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.HaVipAssociatedWithEIP',
            'errorMessage' => 'HaVip cannot be deleted when it is associated with  EIP.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'HaVip?s status is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.HaVip',
            'errorMessage' => 'No permissions to perform operations on HAVIPs. Please apply for privilege--vpc_privilege_allow_buy_havip_instance.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidHaVipId.NotFound',
            'errorMessage' => 'The specified HaVip does not exist in the specified region.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteHaVipResponse> \\r\\n<RequestId>C44F62BE-9CE7-4277-B117-69243F3988BF</RequestId> \\r\\n</DeleteHaVipResponse>","errorExample":""}]',
      'title' => '删除高可用虚拟IP（HaVip）',
      'summary' => '调用DeleteHaVip接口删除高可用虚拟IP（HaVip）。',
      'description' => '在调用本接口删除高可用虚拟IP时，请注意：

- HaVip必须是available状态才可以删除。

- 确保没有任何路由指向要删除的HaVip。

- 确保要删除的HaVip没有绑定任何EIP。

- **DeleteHaVip**接口属于异步接口，即系统会返回一个请求ID，但该HaVip尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeHaVips](~~114611~~)查询HaVip的删除状态：
    - 当HaVip处于**Deleting**状态时，表示HaVip正在删除中。
    - 当查询不到指定HaVip时，表示HaVip删除成功。
- **DeleteHaVip**接口不支持并发删除同一个HaVip。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociateHaVip' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。`ClientToken`只支持ASCII字符，且不能超过64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'HaVipId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的HaVip实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'havip-2zeo05qre24nhrqpy****',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '与HaVip解绑的ECS实例ID或弹性网卡实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-faf344422ffsfad****',
          ),
        ),
        4 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制解绑与HaVip绑定的ECS实例或弹性网卡实例，取值：

- **True**：强制解绑。

- **False** （默认值）：不强制解绑。

> 如果该参数取值为**False**，无法解绑HaVip绑定的主实例。
',
            'type' => 'string',
            'required' => false,
            'example' => 'True',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑HaVip的实例类型，取值：

- **EcsInstance**：云服务器ECS实例。

- **NetworkInterface**：弹性网卡实例。

> 当要解绑的实例为弹性网卡时，该参数必须填写。',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'HaVip can be operated by this action only when it\'s status is InUse.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'ECS instance can be operated by this action only when it\'s status is Running or Stopped.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotAssociated',
            'errorMessage' => 'The HaVip and ECS instance are not associated.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.UnassociateMaster',
            'errorMessage' => 'Unassociating a master instance is not allowed unless the parameter Force is True.',
          ),
          4 => 
          array (
            'errorCode' => 'HA.VIP.NOT.ASSOCIATED.WITH.INSTANCE',
            'errorMessage' => 'ha vip not associated with instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.QueryNetworkInterfaceInfo',
            'errorMessage' => 'Failed to query network interface information.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.InstanceType',
            'errorMessage' => 'The specified instance type is invalid. Only ECS instances and network interface are allowed.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidNetworkInterfaceId.NotFound',
            'errorMessage' => 'The network interface is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'ResourceNotFound.Instance',
            'errorMessage' => 'The specified binding resource is not found.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.HaVip',
            'errorMessage' => 'No permissions to perform operations on HAVIPs. Please apply for privilege--vpc_privilege_allow_buy_havip_instance.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidHaVipId.NotFound',
            'errorMessage' => 'The specified HaVip does not exist in the specified region.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified Instance does not exist in the specified region.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\"\\n}","errorExample":""},{"type":"xml","example":"<UnassociateHaVipResponse>\\n    <RequestId>C44F62BE-9CE7-4277-B117-69243F3988BF</RequestId>\\n</UnassociateHaVipResponse>","errorExample":""}]',
      'title' => '将HaVip与专有网络ECS实例解绑',
      'summary' => '调用UnassociateHaVip 接口将HaVip与专有网络ECS实例或弹性网卡解绑。',
      'description' => '在调用本接口创建高可用虚拟IP时，请注意： 
- 要解绑的ECS实例的状态必须为**运行中**或**停止**。 
- 要解绑的HaVip实例状态必须为**Available**或**InUse**。
- **UnassociateHaVip**接口属于异步接口，即系统会返回一个请求ID，但该HaVip尚未解绑成功，系统后台的解绑任务仍在进行。您可以调用[DescribeHaVips](~~114611~~)查询HaVip的解绑状态：
    - 当HaVip处于**Unassociating**状态时，表示HaVip正在解绑中。
    - 当HaVip处于**Inuse**或者**Available**状态时，表示HaVip解绑成功。
- **UnassociateHaVip**接口不支持并发解绑同一个HaVip。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyHaVipAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e0****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'HaVipId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的HaVip实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'havip-2zeo05qre24nhrqp****',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例的描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my HaVip.',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'HaVip can be deleted only when it\'s status is Available or InUse.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specified Description  is wrongly formed.',
          ),
          2 => 
          array (
            'errorCode' => 'Abs.Vpc.InvalidName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.HaVip',
            'errorMessage' => 'No permissions to perform operations on HAVIPs. Please apply for privilege--vpc_privilege_allow_buy_havip_instance.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidHaVipId.NotFound',
            'errorMessage' => 'The specified HaVip does not exist in the specified region.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyHaVipAttributeResponse>\\n    <RequestId>C44F62BE-9CE7-4277-B117-69243F3988BF</RequestId>\\n</ModifyHaVipAttributeResponse>","errorExample":""}]',
      'title' => '修改HaVip实例的名称和描述',
      'summary' => '调用ModifyHaVipAttribute接口修改HaVip实例的名称和描述。',
      'description' => '**ModifyHaVipAttribute**不支持并发修改同一个HaVip实例的名称和描述。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeHaVips' => 
    array (
      'summary' => '调用DescribeHaVips接口查询指定地域内的高可用虚拟IP（HaVip）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HaVip实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**。默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件详细信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤条件详细信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件，最多可支持5个过滤条件。**N**的取值范围为**1~5**。
支持的过滤条件如下：

- **VpcId**：专有网络ID。 

- **VSwitchId**：交换机ID。 

- **Status**：HaVip实例状态。 

- **HaVipId**：HaVip实例ID。 

- **HaVipAddress**：HaVip实例的IP地址。

每个过滤条件（Filter Key）可以过滤多个值，每个值之间为“或”关系，只要有其中一个值符合则视为符合参数的过滤条件。

各个过滤条件（Filter Key）之间为“与”关系，必须符合所有参数的过滤条件，才能被查询出来。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HaVipId',
                ),
                'Value' => 
                array (
                  'description' => '指定的过滤条件对应的值。**N**的取值范围为**1~5**。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '根据过滤条件指定过滤值。一个过滤条件支持指定多个过滤值，每个过滤值之间是“或”的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Active',
                  ),
                  'required' => false,
                  'example' => 'havip-bp19o63nequs01i8d****',
                  'maxItems' => 10,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 6,
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高可用虚拟IP所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        5 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '每页包含的条目数。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '33E480C5-B46F-4CA5-B6FD-D77C746E86AB',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'HaVips' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'HaVip' => 
                  array (
                    'description' => 'HaVip的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'HaVip的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'HaVip实例所属的VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1kcm36tevkpms97****',
                        ),
                        'Status' => 
                        array (
                          'description' => 'HaVip实例的状态。取值：

- **Creating**：创建中。

- **Available**：可用。

- **Deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'HaVipId' => 
                        array (
                          'description' => 'HaVip实例ID。',
                          'type' => 'string',
                          'example' => 'havip-bp149uyvut73dpld****',
                        ),
                        'AssociatedInstanceType' => 
                        array (
                          'description' => '与HaVip绑定的实例类型。取值：

- **EcsInstance**：云服务器ECS实例。
- **NetworkInterface**：弹性网卡实例。',
                          'type' => 'string',
                          'example' => 'EcsInstance',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => 'HaVip的创建时间。',
                          'type' => 'string',
                          'example' => '2021-07-03T14:25:26Z',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '该参数为无效参数，返回值为空。',
                          'type' => 'string',
                          'example' => 'none',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'HaVip实例所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => 'HaVip实例所属的交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-bp1pkt1fba8e824ez****',
                        ),
                        'IpAddress' => 
                        array (
                          'description' => 'HaVip的私网IP地址。',
                          'type' => 'string',
                          'example' => '192.168.24.5',
                        ),
                        'Description' => 
                        array (
                          'description' => 'HaVip实例的描述。',
                          'type' => 'string',
                          'example' => 'My HaVip',
                        ),
                        'MasterInstanceId' => 
                        array (
                          'description' => '与HaVip绑定的主实例ID。',
                          'type' => 'string',
                          'example' => 'i-bp145q7glnuzdvz****',
                        ),
                        'Name' => 
                        array (
                          'description' => 'HaVip实例的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AssociatedEipAddresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'associatedEipAddresse' => 
                            array (
                              'description' => '与HaVip绑定的EIP列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '与HaVip绑定的EIP。',
                                'type' => 'string',
                                'example' => '121.12.XX.XX',
                              ),
                            ),
                          ),
                        ),
                        'AssociatedInstances' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'associatedInstance' => 
                            array (
                              'description' => '与HaVip绑定的实例信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '与HaVip绑定的实例ID。',
                                'type' => 'string',
                                'example' => 'i-bp145q7glnuzdvzu21****',
                              ),
                            ),
                          ),
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '高可用虚拟IP所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-bp67acfmxazb4ph****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.HaVip',
            'errorMessage' => 'No permissions to perform operations on HAVIPs. Please apply for privilege--vpc_privilege_allow_buy_havip_instance.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidFilterKey.ValueNotSupported',
            'errorMessage' => 'Specified filter key is not supported: Filter.X.key',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"33E480C5-B46F-4CA5-B6FD-D77C746E86AB\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"HaVips\\": {\\n    \\"HaVip\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-bp1kcm36tevkpms97****\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"HaVipId\\": \\"havip-bp149uyvut73dpld****\\",\\n        \\"AssociatedInstanceType\\": \\"EcsInstance\\",\\n        \\"CreateTime\\": \\"2021-07-03T14:25:26Z\\",\\n        \\"ChargeType\\": \\"none\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"VSwitchId\\": \\"vsw-bp1pkt1fba8e824ez****\\",\\n        \\"IpAddress\\": \\"192.168.24.5\\",\\n        \\"Description\\": \\"My HaVip\\",\\n        \\"MasterInstanceId\\": \\"i-bp145q7glnuzdvz****\\",\\n        \\"Name\\": \\"test\\",\\n        \\"AssociatedEipAddresses\\": {\\n          \\"associatedEipAddresse\\": [\\n            \\"121.12.XX.XX\\"\\n          ]\\n        },\\n        \\"AssociatedInstances\\": {\\n          \\"associatedInstance\\": [\\n            \\"i-bp145q7glnuzdvzu21****\\"\\n          ]\\n        },\\n        \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeHaVipsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>33E480C5-B46F-4CA5-B6FD-D77C746E86AB</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <HaVips>\\n        <VpcId>vpc-bp1kcm36tevkpms97****</VpcId>\\n        <Status>Available</Status>\\n        <HaVipId>havip-bp149uyvut73dpld****</HaVipId>\\n        <AssociatedInstanceType>EcsInstance</AssociatedInstanceType>\\n        <CreateTime>2021-07-03T14:25:26Z</CreateTime>\\n        <ChargeType>none</ChargeType>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <VSwitchId>vsw-bp1pkt1fba8e824ez****</VSwitchId>\\n        <IpAddress>192.168.24.5</IpAddress>\\n        <Description>My HaVip</Description>\\n        <MasterInstanceId>i-bp145q7glnuzdvz****</MasterInstanceId>\\n        <Name>test</Name>\\n        <AssociatedEipAddresses>121.12.XX.XX</AssociatedEipAddresses>\\n        <AssociatedInstances>i-bp145q7glnuzdvzu21****</AssociatedInstances>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </HaVips>\\n</DescribeHaVipsResponse>","errorExample":""}]',
      'title' => '查询地域内的高可用虚拟IP（HaVip）',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTrafficMirrorFilterRules' => 
    array (
      'summary' => '调用CreateTrafficMirrorFilterRules接口创建流量镜像入方向或出方向规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建入方向或出方向规则。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。


- **false**（默认值）：发送正常请求，通过检查后直接创建入方向或出方向规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'IngressRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '入方向规则的详细信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '入方向规则的详细信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Action' => 
                array (
                  'description' => '入方向规则的采集策略，取值：

- **accept**：采集网络流量。
- **drop**：不采集网络流量。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => 'accept',
                ),
                'SourceCidrBlock' => 
                array (
                  'description' => '入方向规则网络流量的源地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'Protocol' => 
                array (
                  'description' => '入方向需要镜像的网络流量使用的协议类型，取值：

- **ALL**：所有协议。
- **ICMP**：网络控制报文协议。
- **TCP**：传输控制协议。
- **UDP**：用户数据报协议。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => 'TCP',
                ),
                'DestinationPortRange' => 
                array (
                  'description' => '入方向规则网络流量的目的端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**。

> 当**IngressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需设置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '80/120',
                ),
                'Priority' => 
                array (
                  'description' => '入方向规则的优先级。数字越小，优先级越高。其中**N**最大取值为**10**，即一个筛选条件最多可配置10条入方向规则。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'DestinationCidrBlock' => 
                array (
                  'description' => '入方向规则网络流量的目的地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'SourcePortRange' => 
                array (
                  'description' => '入方向规则网络流量的源端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**，其中**-1/-1**不能单独设置，代表不限制端口。

> 当**IngressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需设置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '80/120',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        4 => 
        array (
          'name' => 'EgressRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '出方向规则的详细信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '出方向规则的详细信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Action' => 
                array (
                  'description' => '出方向规则的采集策略，取值：

- **accept**：采集网络流量。
- **drop**：不采集网络流量。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'accept',
                ),
                'SourceCidrBlock' => 
                array (
                  'description' => '出方向规则网络流量的源地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'Protocol' => 
                array (
                  'description' => '出方向需要镜像的网络流量使用的协议类型，取值：

- **ALL**：所有协议。
- **ICMP**：网络控制报文协议。
- **TCP**：传输控制协议。
- **UDP**：用户数据报协议。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'TCP',
                ),
                'DestinationPortRange' => 
                array (
                  'description' => '出方向规则网络流量的目的端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**，其中**-1/-1**不能单独设置，代表不限制端口。

> 当**EgressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需设置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '22/40',
                ),
                'Priority' => 
                array (
                  'description' => '出方向规则的优先级。数字越小，优先级越高。其中**N**最大取值为**10**，即一个筛选条件最多可配置10条出方向规则。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'DestinationCidrBlock' => 
                array (
                  'description' => '出方向规则网络流量的目的地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'SourcePortRange' => 
                array (
                  'description' => '出方向规则网络流量的源端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**，其中**-1/-1**不能单独设置，代表不限制端口。

> 当**EgressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需设置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '22/40',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '07F272E2-6AD5-433A-8207-A607C76F1676',
              ),
              'IngressRules' => 
              array (
                'description' => '入方向规则列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '入方向规则列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '入方向规则的实例ID。',
                      'type' => 'string',
                      'example' => 'tmr-j6c6rtallo51ouzv3****',
                    ),
                  ),
                ),
              ),
              'EgressRules' => 
              array (
                'description' => '出方向规则列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '出方向规则列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '出方向规则的实例ID。',
                      'type' => 'string',
                      'example' => 'tmr-j6cok23ugp53eeib5****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorFilter',
            'errorMessage' => 'The specified resource of traffic mirror filter is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorSession',
            'errorMessage' => 'The status of traffic mirror session is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.TrafficMirrorRulesPerFilter',
            'errorMessage' => 'The quota of the number of traffic mirror rules per filter is exceeded.',
          ),
          4 => 
          array (
            'errorCode' => 'DuplicatedParam.Priority',
            'errorMessage' => 'The specified priority conflicts with the existing priority.',
          ),
          5 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature is not supported in current region.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The specified CidrBlock is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorFilters',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"07F272E2-6AD5-433A-8207-A607C76F1676\\",\\n  \\"IngressRules\\": [\\n    {\\n      \\"InstanceId\\": \\"tmr-j6c6rtallo51ouzv3****\\"\\n    }\\n  ],\\n  \\"EgressRules\\": [\\n    {\\n      \\"InstanceId\\": \\"tmr-j6cok23ugp53eeib5****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateTrafficMirrorFilterRulesResponse>\\n    <RequestId>07F272E2-6AD5-433A-8207-A607C76F1676</RequestId>\\n    <IngressRules>\\n        <InstanceId>tmr-j6c6rtallo51ouzv3****</InstanceId>\\n    </IngressRules>\\n    <EgressRules>\\n        <InstanceId>tmr-j6cok23ugp53eeib5****</InstanceId>\\n    </EgressRules>\\n</CreateTrafficMirrorFilterRulesResponse>","errorExample":""}]',
      'title' => '创建流量镜像入方向或出方向规则',
      'description' => '- **CreateTrafficMirrorFilterRules**接口属于异步接口，即系统返回一个实例ID，但该流量镜像入方向或出方向规则尚未创建成功，系统后台的创建任务仍在进行。您可以调用[ListTrafficMirrorFilters](~~261353~~)查询流量镜像入方向或出方向规则的创建状态：
    - 当流量镜像入方向或出方向规则处于**Creating**状态时，表示流量镜像入方向或出方向规则正在创建中。
    - 当流量镜像入方向或出方向规则处于**Created**状态时，表示流量镜像入方向或出方向规则创建完成。
- **CreateTrafficMirrorFilterRules**接口不支持在同一个流量镜像筛选条件下并发创建流量镜像入方向或出方向规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTrafficMirrorFilterRules' => 
    array (
      'summary' => '调用DeleteTrafficMirrorFilterRules删除流量镜像筛选条件的入方向或者出方向规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除入方向或出方向规则。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接删除入方向或出方向规则。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMirrorFilterRuleIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '入方向或出方向规则的实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '入方向或出方向规则的实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'tmr-j6cbmubn323k7jlq3****',
            ),
            'required' => true,
            'example' => 'tmr-j6cbmubn323k7jlq3****',
            'maxLength' => 128,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BD8A3F71-00C5-4655-8F55-11F3976C3274',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorRule',
            'errorMessage' => 'The specified resource of traffic mirror rule is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorRule',
            'errorMessage' => 'The status of traffic mirror rule is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorFilter',
            'errorMessage' => 'The specified resource of traffic mirror filter is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorFilters',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BD8A3F71-00C5-4655-8F55-11F3976C3274\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTrafficMirrorFilterRulesResponse>\\r\\n<RequestId>BD8A3F71-00C5-4655-8F55-11F3976C3274</RequestId>\\r\\n</DeleteTrafficMirrorFilterRulesResponse>","errorExample":""}]',
      'title' => '删除流量镜像筛选条件的入方向或者出方向规则',
      'description' => '- **DeleteTrafficMirrorFilterRules**接口属于异步接口，即系统返回一个请求ID，但该流量镜像筛选条件的入方向或者出方向规则尚未删除成功，系统后台的删除任务仍在进行。您可以调用[ListTrafficMirrorFilters](~~261353~~)查询流量镜像筛选条件的入方向或者出方向规则的删除状态：
    - 当流量镜像筛选条件的入方向或者出方向规则处于**Deleting**状态时，表示流量镜像筛选条件的入方向或者出方向规则正在删除中。
    - 当查询不到指定的流量镜像筛选条件的入方向或者出方向规则时，表示流量镜像筛选条件的入方向或者出方向规则删除成功。
- **DeleteTrafficMirrorFilterRules**接口不支持并发删除同一个流量镜像筛选条件的入方向或者出方向规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTrafficMirrorFilterRuleAttribute' => 
    array (
      'summary' => '调用UpdateTrafficMirrorFilterRuleAttribute接口修改流量镜像入方向或出方向规则的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像入方向或出方向规则的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tmr-j6c89rzmtd3hhdugq****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改入方向和出方向规则的配置信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接修改入方向和出方向规则的配置信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则的优先级。数字越小，优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则需要镜像的网络流量使用的协议类型，取值：

- **ALL**：所有协议。

- **ICMP**：网络控制报文协议。

- **TCP**：传输控制协议。

- **UDP**：用户数据报协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'ICMP',
          ),
        ),
        5 => 
        array (
          'name' => 'RuleAction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则的采集策略，取值：

- **accept**：采集网络流量。

- **drop**：不采集网络流量。',
            'type' => 'string',
            'required' => false,
            'example' => 'accept',
          ),
        ),
        6 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则网络流量的目的地址网段。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.0.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'SourceCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则网络流量的源地址网段。',
            'type' => 'string',
            'required' => false,
            'example' => '0.0.0.0/0',
          ),
        ),
        8 => 
        array (
          'name' => 'DestinationPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则网络流量的目的端口范围。

> 当**Protocol**取值为**ICMP**时，不支持修改端口范围。',
            'type' => 'string',
            'required' => false,
            'example' => '-1/-1',
          ),
        ),
        9 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的入方向或出方向规则网络流量的源端口范围。
> 当**Protocol**取值为**ICMP**时，不支持修改端口范围。',
            'type' => 'string',
            'required' => false,
            'example' => '22/40',
          ),
        ),
        10 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '02EB8585-D4DC-4E29-A0F4-7C588C82863C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorRule',
            'errorMessage' => 'The specified resource of traffic mirror rule is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorRule',
            'errorMessage' => 'The status of traffic mirror rule is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'DuplicatedParam.Priority',
            'errorMessage' => 'The specified priority conflicts with the existing priority.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorFilters',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"02EB8585-D4DC-4E29-A0F4-7C588C82863C\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTrafficMirrorFilterRuleAttributeResponse>\\n    <RequestId>02EB8585-D4DC-4E29-A0F4-7C588C82863C</RequestId>\\n</UpdateTrafficMirrorFilterRuleAttributeResponse>","errorExample":""}]',
      'title' => '修改流量镜像入方向或出方向规则的配置信息',
      'description' => '- **UpdateTrafficMirrorFilterRuleAttribute**接口属于异步接口，即系统返回一个请求ID，但该流量镜像入方向或出方向规则的配置信息尚未修改成功，系统后台的修改任务仍在进行。您可以调用[ListTrafficMirrorFilters](~~261353~~)查询流量镜像入方向或出方向规则的状态：
    - 当流量镜像入方向或出方向规则的状态处于**Modifying**状态时，表示流量镜像入方向或出方向规则的配置信息正在修改中。
    - 当流量镜像入方向或出方向规则的状态处于**Created**状态时，表示流量镜像入方向或出方向规则的配置信息修改成功。
- **UpdateTrafficMirrorFilterRuleAttribute**接口不支持并发修改同一个流量镜像入方向或出方向规则的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTrafficMirrorFilter' => 
    array (
      'summary' => '调用CreateTrafficMirrorFilter接口创建流量镜像筛选条件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'this is a filter.',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficMirrorFilterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建流量镜像筛选条件。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接创建筛选条件。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'IngressRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '入方向规则信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '入方向规则信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Action' => 
                array (
                  'description' => '入方向规则的采集策略。取值：

- **accept**：采集网络流量。
- **drop**：不采集网络流量。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'accept',
                ),
                'SourceCidrBlock' => 
                array (
                  'description' => '入方向规则网络流量的源地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'Protocol' => 
                array (
                  'description' => '入方向需要镜像的网络流量使用的协议类型。取值：

- **ALL**：所有协议。
- **ICMP**：网络控制报文协议。
- **TCP**：传输控制协议。
- **UDP**：用户数据报协议。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'TCP',
                ),
                'DestinationPortRange' => 
                array (
                  'description' => '入方向规则网络流量的目的端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**。

> 当**IngressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需设置，表示不限制端口。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => '80/120',
                ),
                'Priority' => 
                array (
                  'description' => '入方向规则的优先级。数字越小，优先级越高。
其中**N**最大取值为**10**，即一个筛选条件最多可配置10条入方向规则。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'DestinationCidrBlock' => 
                array (
                  'description' => '入方向规则网络流量的目的地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'SourcePortRange' => 
                array (
                  'description' => '入方向规则网络流量的源端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**。

> 当**IngressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需配置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '80/120',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        5 => 
        array (
          'name' => 'EgressRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '出方向规则的信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '出方向规则的信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Action' => 
                array (
                  'description' => '出方向规则的采集策略。取值：

- **accept**：采集网络流量。
- **drop**：不采集网络流量。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'accept',
                ),
                'SourceCidrBlock' => 
                array (
                  'description' => '出方向规则网络流量的源地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'Protocol' => 
                array (
                  'description' => '出方向需要镜像的网络流量使用的协议类型。取值：

- **ALL**：所有协议。
- **ICMP**：网络控制报文协议。
- **TCP**：传输控制协议。
- **UDP**：用户数据报协议。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'TCP',
                ),
                'DestinationPortRange' => 
                array (
                  'description' => '出方向规则网络流量的目的端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**，其中**-1/-1**不能单独设置，代表不限制端口。

> 当**EgressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需配置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '22/40',
                ),
                'Priority' => 
                array (
                  'description' => '出方向规则的优先级。数字越小，优先级越高。
其中**N**最大取值为**10**，即一个筛选条件最多可配置10条出方向规则。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'DestinationCidrBlock' => 
                array (
                  'description' => '出方向规则网络流量的目的地址网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.0.0.0/24',
                ),
                'SourcePortRange' => 
                array (
                  'description' => '出方向规则网络流量的源端口范围。端口范围为**1**~**65535**，使用正斜线（/）隔开起始端口和终止端口，格式为**1/200**、**80/80**，其中**-1/-1**不能单独设置，代表不限制端口。

> 当**EgressRules.N.Protocol**取值为**ALL**或**ICMP**时，该参数无需配置，表示不限制端口。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '22/40',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'object',
            'properties' => 
            array (
              'TrafficMirrorFilterId' => 
              array (
                'description' => '流量镜像筛选条件的实例ID。',
                'type' => 'string',
                'example' => 'tmf-j6cmls82xnc86vtpe****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '28DB147D-217B-43E8-9E94-A3F6837DDC8A',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '流量镜像所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-bp67acfmxazb4ph****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.IpVersion',
            'errorMessage' => 'The ipversion type is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.TrafficMirror',
            'errorMessage' => 'The business status of traffic mirror is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'OptInRequired.TrafficMirror',
            'errorMessage' => 'You need to subscribe to the traffic mirror service first.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.TrafficMirrorFilter',
            'errorMessage' => 'The maximum number of traffic image filters is exceeded.',
          ),
          4 => 
          array (
            'errorCode' => 'DuplicatedParam.Priority',
            'errorMessage' => 'The specified priority conflicts with the existing priority.',
          ),
          5 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature is not supported in current region.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParamFormat.SrcCidrBlock',
            'errorMessage' => 'The format of the specified source CIDR block is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParamFormat.DstCidrBlock',
            'errorMessage' => 'The format of the specified dst CIDR block is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TrafficMirrorFilterId\\": \\"tmf-j6cmls82xnc86vtpe****\\",\\n  \\"RequestId\\": \\"28DB147D-217B-43E8-9E94-A3F6837DDC8A\\",\\n  \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTrafficMirrorFilterResponse>\\n    <TrafficMirrorFilterId>tmf-j6cmls82xnc86vtpe****</TrafficMirrorFilterId>\\n    <RequestId>28DB147D-217B-43E8-9E94-A3F6837DDC8A</RequestId>\\n    <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n</CreateTrafficMirrorFilterResponse>","errorExample":""}]',
      'title' => '创建流量镜像筛选条件',
      'description' => '**CreateTrafficMirrorFilter**接口属于异步接口，即系统返回一个实例ID，但该流量镜像筛选条件尚未创建成功，系统后台的创建任务仍在进行。您可以调用[ListTrafficMirrorFilters](~~261353~~)查询流量镜像筛选条件的创建状态：
- 当流量镜像筛选条件处于**Creating**状态时，表示流量镜像筛选条件正在创建中。
- 当流量镜像筛选条件处于**Created**状态时，表示流量镜像筛选条件创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTrafficMirrorFilter' => 
    array (
      'summary' => '调用DeleteTrafficMirrorFilter接口删除流量镜像筛选条件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除流量镜像筛选条件。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除流量镜像筛选条件。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '07F272E2-6AD5-433A-8207-A607C76F1676',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorFilter',
            'errorMessage' => 'The specified resource of traffic mirror filter is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorRule',
            'errorMessage' => 'The status of traffic mirror rule is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.TrafficMirrorSession',
            'errorMessage' => 'Some traffic mirror sessions depend on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorFilters',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"07F272E2-6AD5-433A-8207-A607C76F1676\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTrafficMirrorFilterResponse>\\r\\n<RequestId>07F272E2-6AD5-433A-8207-A607C76F1676</RequestId>\\r\\n</DeleteTrafficMirrorFilterResponse>","errorExample":""}]',
      'title' => '删除流量镜像筛选条件',
      'description' => '- **DeleteTrafficMirrorFilter**接口属于异步接口，即系统返回一个请求ID，但该流量镜像筛选条件尚未删除成功，系统后台的删除任务仍在进行。您可以调用[ListTrafficMirrorFilters](~~261353~~)查询流量镜像筛选条件的删除状态：
    - 当流量镜像筛选条件处于**Deleting**状态时，表示流量镜像筛选条件正在删除中。
    - 当查询不到指定的流量镜像筛选条件时，表示流量镜像筛选条件删除成功。
- **DeleteTrafficMirrorFilter**接口不支持并发删除同一个流量镜像筛选条件。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTrafficMirrorFilterAttribute' => 
    array (
      'summary' => '调用UpdateTrafficMirrorFilterAttribute接口修改流量镜像筛选条件的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficMirrorFilterDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的流量镜像筛选条件的描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is a new filter.',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMirrorFilterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的流量镜像筛选条件的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改流量镜像筛选条件的配置信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接修改筛选条件的配置信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5816D35F-94D5-48CE-838F-2327C8EE8D49',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorFilter',
            'errorMessage' => 'The specified resource of traffic mirror filter is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5816D35F-94D5-48CE-838F-2327C8EE8D49\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTrafficMirrorFilterAttributeResponse>\\n    <RequestId>5816D35F-94D5-48CE-838F-2327C8EE8D49</RequestId>\\n</UpdateTrafficMirrorFilterAttributeResponse>","errorExample":""}]',
      'title' => '修改流量镜像筛选条件的配置信息',
      'description' => '**UpdateTrafficMirrorFilterAttribute**接口不支持并发修改同一个流量镜像的筛选条件的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTrafficMirrorFilters' => 
    array (
      'summary' => '查询流量镜像的筛选条件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorFilterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        1 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次查询的最大记录条数。

取值范围：**1**~**100**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMirrorFilterIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。其中**N**最大取值为**100**，即一次支持查询最多100条筛选条件。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '流量镜像筛选条件的实例ID。其中**N**最大取值为**100**，即一次支持查询最多100条筛选条件。',
              'type' => 'string',
              'required' => false,
              'example' => 'tmf-j6cmls82xnc86vtpe****',
            ),
            'required' => false,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
            'maxLength' => 128,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像的所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '739CA01C-92EB-4C69-BCC0-280149C6F41E',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '当前请求要查询的最大数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'Count' => 
              array (
                'description' => '本次查询返回的数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'TrafficMirrorFilters' => 
              array (
                'description' => '流量镜像筛选条件的详情列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '流量镜像筛选条件的详情列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TrafficMirrorFilterStatus' => 
                    array (
                      'description' => '流量镜像筛选条件的状态。取值：

- **Creating**：创建中。

- **Created**：已创建。

- **Modifying**：修改中。

- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'TrafficMirrorFilterDescription' => 
                    array (
                      'description' => '流量镜像筛选条件的描述信息。',
                      'type' => 'string',
                      'example' => 'This is a filter.',
                    ),
                    'TrafficMirrorFilterId' => 
                    array (
                      'description' => '流量镜像筛选条件的实例ID。',
                      'type' => 'string',
                      'example' => 'tmf-j6cmls82xnc86vtpe****',
                    ),
                    'TrafficMirrorFilterName' => 
                    array (
                      'description' => '流量镜像筛选条件的名称。',
                      'type' => 'string',
                      'example' => 'abc',
                    ),
                    'IngressRules' => 
                    array (
                      'description' => '入方向规则详情列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '入方向规则详情列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TrafficMirrorFilterRuleStatus' => 
                          array (
                            'description' => '人方向规则的状态。取值：

- **Creating**：创建中。

- **Created**：已创建。

- **Modifying**：修改中。

- **Deleting**：删除中。',
                            'type' => 'string',
                            'example' => 'Created',
                          ),
                          'Action' => 
                          array (
                            'description' => '入方向规则的采集策略，取值：

- **accept**：采集网络流量。
- **drop**：不采集网络流量。',
                            'type' => 'string',
                            'example' => 'accept',
                          ),
                          'SourceCidrBlock' => 
                          array (
                            'description' => '入方向规则网络流量的源地址网段。',
                            'type' => 'string',
                            'example' => '0.0.0.0/0',
                          ),
                          'TrafficDirection' => 
                          array (
                            'description' => '网络流量的方向，取值：

- **egress**：出方向。

- **ingress**：入方向。',
                            'type' => 'string',
                            'example' => 'ingress',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '入方向需要镜像的网络流量使用的协议类型，取值：

- **ALL**：所有协议。
- **ICMP**：网络控制报文协议。
- **TCP**：传输控制协议。
- **UDP**：用户数据报协议。',
                            'type' => 'string',
                            'example' => 'ALL',
                          ),
                          'DestinationPortRange' => 
                          array (
                            'description' => '入方向规则网络流量的目的端口范围。',
                            'type' => 'string',
                            'example' => '-1/-1',
                          ),
                          'TrafficMirrorFilterRuleId' => 
                          array (
                            'description' => '入方向规则的实例ID。',
                            'type' => 'string',
                            'example' => 'tmr-j6cezu8e68rnpepet****',
                          ),
                          'DestinationCidrBlock' => 
                          array (
                            'description' => '入方向规则网络流量的目的地址网段。',
                            'type' => 'string',
                            'example' => '0.0.0.0/0',
                          ),
                          'Priority' => 
                          array (
                            'description' => '入方向规则的优先级。数字越小，优先级越高。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'TrafficMirrorFilterId' => 
                          array (
                            'description' => '入方向规则关联的流量镜像筛选条件实例ID。',
                            'type' => 'string',
                            'example' => 'tmf-j6cmls82xnc86vtpe****',
                          ),
                          'SourcePortRange' => 
                          array (
                            'description' => '入方向规则网络流量的目的端口范围。',
                            'type' => 'string',
                            'example' => '-1/-1',
                          ),
                        ),
                      ),
                    ),
                    'EgressRules' => 
                    array (
                      'description' => '出方向规则详情列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '出方向规则详情列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TrafficMirrorFilterRuleStatus' => 
                          array (
                            'description' => '出方向规则的状态。取值：

- **Creating**：创建中。

- **Created**：已创建。

- **Modifying**：修改中。

- **Deleting**：删除中。',
                            'type' => 'string',
                            'example' => 'Created',
                          ),
                          'Action' => 
                          array (
                            'description' => '出方向规则的采集策略，取值：

- **accept**：采集网络流量。
- **drop**：不采集网络流量。',
                            'type' => 'string',
                            'example' => 'accept',
                          ),
                          'SourceCidrBlock' => 
                          array (
                            'description' => '出方向规则网络流量的源地址网段。',
                            'type' => 'string',
                            'example' => '10.0.0.0/24',
                          ),
                          'TrafficDirection' => 
                          array (
                            'description' => '网络流量的方向，取值：

- **egress**：出方向。

- **ingress**：入方向。',
                            'type' => 'string',
                            'example' => 'egress',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '出方向需要镜像的网络流量使用的协议类型，取值：

- **ALL**：所有协议。
- **ICMP**：网络控制报文协议。
- **TCP**：传输控制协议。
- **UDP**：用户数据报协议。',
                            'type' => 'string',
                            'example' => 'TCP',
                          ),
                          'DestinationPortRange' => 
                          array (
                            'description' => '出方向规则网络流量的目的端口范围。',
                            'type' => 'string',
                            'example' => '22/40',
                          ),
                          'TrafficMirrorFilterRuleId' => 
                          array (
                            'description' => '出方向规则的实例ID。',
                            'type' => 'string',
                            'example' => 'tmr-j6c89rzmtd3hhdugq****',
                          ),
                          'DestinationCidrBlock' => 
                          array (
                            'description' => '出方向规则网络流量的目的地址网段。',
                            'type' => 'string',
                            'example' => '10.0.0.0/24',
                          ),
                          'Priority' => 
                          array (
                            'description' => '出方向规则的优先级。数字越小，优先级越高。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'TrafficMirrorFilterId' => 
                          array (
                            'description' => '出方向规则关联的流量镜像筛选条件实例ID。',
                            'type' => 'string',
                            'example' => 'tmf-j6cmls82xnc86vtpe****',
                          ),
                          'SourcePortRange' => 
                          array (
                            'description' => '出方向规则网络流量的源端口范围。',
                            'type' => 'string',
                            'example' => '22/40',
                          ),
                        ),
                      ),
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '流量镜像所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-bp67acfmxazb4ph****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '流量镜像筛选条件的创建时间。',
                      'type' => 'string',
                      'example' => '2023-09-05T15:26Z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"739CA01C-92EB-4C69-BCC0-280149C6F41E\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"MaxResults\\": 20,\\n  \\"Count\\": 5,\\n  \\"TrafficMirrorFilters\\": [\\n    {\\n      \\"TrafficMirrorFilterStatus\\": \\"Created\\",\\n      \\"TrafficMirrorFilterDescription\\": \\"This is a filter.\\",\\n      \\"TrafficMirrorFilterId\\": \\"tmf-j6cmls82xnc86vtpe****\\",\\n      \\"TrafficMirrorFilterName\\": \\"abc\\",\\n      \\"IngressRules\\": [\\n        {\\n          \\"TrafficMirrorFilterRuleStatus\\": \\"Created\\",\\n          \\"Action\\": \\"accept\\",\\n          \\"SourceCidrBlock\\": \\"0.0.0.0/0\\",\\n          \\"TrafficDirection\\": \\"ingress\\",\\n          \\"Protocol\\": \\"ALL\\",\\n          \\"DestinationPortRange\\": \\"-1/-1\\",\\n          \\"TrafficMirrorFilterRuleId\\": \\"tmr-j6cezu8e68rnpepet****\\",\\n          \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",\\n          \\"Priority\\": 1,\\n          \\"TrafficMirrorFilterId\\": \\"tmf-j6cmls82xnc86vtpe****\\",\\n          \\"SourcePortRange\\": \\"-1/-1\\"\\n        }\\n      ],\\n      \\"EgressRules\\": [\\n        {\\n          \\"TrafficMirrorFilterRuleStatus\\": \\"Created\\",\\n          \\"Action\\": \\"accept\\",\\n          \\"SourceCidrBlock\\": \\"10.0.0.0/24\\",\\n          \\"TrafficDirection\\": \\"egress\\",\\n          \\"Protocol\\": \\"TCP\\",\\n          \\"DestinationPortRange\\": \\"22/40\\",\\n          \\"TrafficMirrorFilterRuleId\\": \\"tmr-j6c89rzmtd3hhdugq****\\",\\n          \\"DestinationCidrBlock\\": \\"10.0.0.0/24\\",\\n          \\"Priority\\": 1,\\n          \\"TrafficMirrorFilterId\\": \\"tmf-j6cmls82xnc86vtpe****\\",\\n          \\"SourcePortRange\\": \\"22/40\\"\\n        }\\n      ],\\n      \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ],\\n      \\"CreationTime\\": \\"2023-09-05T15:26Z\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTrafficMirrorFiltersResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>739CA01C-92EB-4C69-BCC0-280149C6F41E</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <Count>5</Count>\\n    <TrafficMirrorFilters>\\n        <TrafficMirrorFilterStatus>Created</TrafficMirrorFilterStatus>\\n        <TrafficMirrorFilterDescription>This is a filter.</TrafficMirrorFilterDescription>\\n        <TrafficMirrorFilterId>tmf-j6cmls82xnc86vtpe****</TrafficMirrorFilterId>\\n        <TrafficMirrorFilterName>abc</TrafficMirrorFilterName>\\n        <IngressRules>\\n            <TrafficMirrorFilterRuleStatus>Created</TrafficMirrorFilterRuleStatus>\\n            <Action>accept</Action>\\n            <SourceCidrBlock>0.0.0.0/0</SourceCidrBlock>\\n            <TrafficDirection>ingress</TrafficDirection>\\n            <Protocol>ALL</Protocol>\\n            <DestinationPortRange>-1/-1</DestinationPortRange>\\n            <TrafficMirrorFilterRuleId>tmr-j6cezu8e68rnpepet****</TrafficMirrorFilterRuleId>\\n            <DestinationCidrBlock>0.0.0.0/0</DestinationCidrBlock>\\n            <Priority>1</Priority>\\n            <TrafficMirrorFilterId>tmf-j6cmls82xnc86vtpe****</TrafficMirrorFilterId>\\n            <SourcePortRange>-1/-1</SourcePortRange>\\n        </IngressRules>\\n        <EgressRules>\\n            <TrafficMirrorFilterRuleStatus>Created</TrafficMirrorFilterRuleStatus>\\n            <Action>accept</Action>\\n            <SourceCidrBlock>10.0.0.0/24</SourceCidrBlock>\\n            <TrafficDirection>egress</TrafficDirection>\\n            <Protocol>TCP</Protocol>\\n            <DestinationPortRange>22/40</DestinationPortRange>\\n            <TrafficMirrorFilterRuleId>tmr-j6c89rzmtd3hhdugq****</TrafficMirrorFilterRuleId>\\n            <DestinationCidrBlock>10.0.0.0/24</DestinationCidrBlock>\\n            <Priority>1</Priority>\\n            <TrafficMirrorFilterId>tmf-j6cmls82xnc86vtpe****</TrafficMirrorFilterId>\\n            <SourcePortRange>22/40</SourcePortRange>\\n        </EgressRules>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n        <CreationTime>2023-09-05T15:26Z</CreationTime>\\n    </TrafficMirrorFilters>\\n</ListTrafficMirrorFiltersResponse>","errorExample":""}]',
      'title' => '查询流量镜像的筛选条件',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddSourcesToTrafficMirrorSession' => 
    array (
      'summary' => '调用AddSourcesToTrafficMirrorSession接口为镜像会话增加镜像源。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会添加镜像源。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接添加镜像源。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMirrorSessionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要增加镜像源的镜像会话实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tms-j6cla50buc44ap8tu****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMirrorSourceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要增加的镜像源的实例ID，目前支持弹性网卡作为镜像源。其中**N**的默认值为**1**，即一个镜像会话只支持添加一个镜像源。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需要增加的镜像源的实例ID，目前支持弹性网卡作为镜像源。其中**N**的默认值为**1**，即一个镜像会话只支持添加一个镜像源。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-j6c8znm5l1yt4sox****',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'eni-j6ccmrl8z3xkvxgw****',
            'maxLength' => 128,
            'maxItems' => 30,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。

关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '87F70089-5B38-41A8-BAD8-0B55E2F8DC57',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.TrafficMirror',
            'errorMessage' => 'The business status of traffic mirror is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OptInRequired.TrafficMirror',
            'errorMessage' => 'You need to subscribe to the traffic mirror service first.',
          ),
          2 => 
          array (
            'errorCode' => 'DuplicatedParam.SourceInstanceIds',
            'errorMessage' => 'The parameter of source instance IDs contains duplicate values.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorSession',
            'errorMessage' => 'The specified resource of traffic mirror session is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorSession',
            'errorMessage' => 'The status of traffic mirror session is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.TrafficMirrorSource',
            'errorMessage' => 'The specified traffic mirror source and session are already associated.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterface',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotFound.EcsInstance',
            'errorMessage' => 'The specified resource of ECS instance is not found.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationDenied.EcsNotSupportTrafficMirror',
            'errorMessage' => 'The ECS instance does not support traffic mirroring.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationDenied.DuplicateRole',
            'errorMessage' => 'The network interface must not be the source and the target of traffic mirror sessions at the same time.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.NetworkInterfaceRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one network interface is exceeded.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationDenied.FreeNetworkInterface',
            'errorMessage' => 'The network interface is not attached to any ECS instance.',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded.SourceNumPerSession',
            'errorMessage' => 'The quota of the number of traffic mirror sources per session is exceeded.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.SourceNumPerTarget',
            'errorMessage' => 'The maximum number of traffic mirror sources for a target is exceeded.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.BondingNetworkInterface',
            'errorMessage' => 'The specified traffic mirror source is bonding eni without slave.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationDenied.UnsupportedTargetType',
            'errorMessage' => 'Traffic mirror target must be SLB if traffic mirror sources contain nat gateway network interface.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorSessions',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"87F70089-5B38-41A8-BAD8-0B55E2F8DC57\\"\\n}","errorExample":""},{"type":"xml","example":"<AddSourcesToTrafficMirrorSessionResponse>\\n    <RequestId>87F70089-5B38-41A8-BAD8-0B55E2F8DC57</RequestId>\\n</AddSourcesToTrafficMirrorSessionResponse>","errorExample":""}]',
      'title' => '为镜像会话增加镜像源',
      'description' => '- **AddSourcesToTrafficMirrorSession**接口属于异步接口，即系统返回一个请求ID，但该镜像源尚未增加成功，系统后台的增加任务仍在进行。您可以调用[ListTrafficMirrorSessions](~~261367~~)查询镜像源的增加状态：
    - 当镜像会话处于**Modifying**状态时，表示镜像源正在增加中。
    - 当镜像会话处于**Created**状态时，表示镜像源增加成功。
- **AddSourcesToTrafficMirrorSession**接口不支持并发为同一个镜像会话增加镜像源。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTrafficMirrorSession' => 
    array (
      'summary' => '调用CreateTrafficMirrorSession创建镜像会话。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorSessionDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is a trafficmirrorsession.',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficMirrorSessionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会创建镜像会话。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接创建镜像会话。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficMirrorTargetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像目的的实例ID，目前支持弹性网卡和私网负载均衡实例作为镜像目的。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eni-j6c8znm5l1yt4sox****',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficMirrorTargetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像目的类型，取值：

- **NetworkInterface**：弹性网卡。

- **SLB**：私网负载均衡实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NetworkInterface',
          ),
        ),
        6 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        7 => 
        array (
          'name' => 'VirtualNetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定VNI（VXLAN Network Identifier），用来区分不同的镜像流量，取值范围为**0**~**16777215**。

您可以通过VNI在镜像目的区分不同会话的镜像流量。您可以自定义VNI的值，也可以由系统随机分配该值。如果由系统随机分配该值，请不传该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的优先级，取值范围为**1**~**32766**。
数字越小，优先级越高。同一账号在同一个地域创建的镜像会话优先级不能重复。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '32766',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Enabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启流量会话，取值：

- **false**（默认值）：不开启流量会话。

- **true**：开启流量会话。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'PacketLength',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定被镜像的原始报文长度（不包含VXLAN报文长度），默认值**1500**，取值范围：**64**～**8500**，单位：字节。
- 该参数的大小会影响镜像目的收到的报文长度，详情请参见[流量镜像概述](~~207513~~)中的镜像报文长度和MTU限制。

- 该参数仅在部分地域可用，详情请参见[创建和管理流量镜像](~~207514~~)中的镜像报文长度参数描述。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1500',
          ),
        ),
        11 => 
        array (
          'name' => 'TrafficMirrorSourceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '镜像源的实例ID，目前支持弹性网卡作为镜像源。其中**N**的默认值为**1**，即一个镜像会话只支持添加一个镜像源。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '镜像源的实例ID，目前支持弹性网卡作为镜像源。其中**N**的默认值为**1**，即一个镜像会话只支持添加一个镜像源。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-j6c2fp57q8rr47rp****',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'eni-j6c2fp57q8rr47rp****',
            'maxLength' => 128,
            'maxItems' => 30,
          ),
        ),
        12 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
        13 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        14 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '镜像会话的实例ID。',
            'type' => 'object',
            'properties' => 
            array (
              'TrafficMirrorSessionId' => 
              array (
                'description' => '镜像会话的实例ID。',
                'type' => 'string',
                'example' => 'tms-j6ce5di4w7nvigfjz****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '流量镜像所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-bp67acfmxazb4ph****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.TrafficMirror',
            'errorMessage' => 'The business status of traffic mirror is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OptInRequired.TrafficMirror',
            'errorMessage' => 'You need to subscribe to the traffic mirror service first.',
          ),
          2 => 
          array (
            'errorCode' => 'DuplicatedParam.SourceInstanceIds',
            'errorMessage' => 'The parameter of source instance IDs contains duplicate values.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.DuplicateRole',
            'errorMessage' => 'The network interface must not be the source and the target of traffic mirror sessions at the same time.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterface',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.EcsInstance',
            'errorMessage' => 'The specified resource of ECS instance is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.Slb',
            'errorMessage' => 'The specified resource of SLB is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.SlbNotInVpc',
            'errorMessage' => 'The specified SLB is not in any VPC.',
          ),
          8 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorFilter',
            'errorMessage' => 'The specified resource of traffic mirror filter is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationDenied.EcsNotSupportTrafficMirror',
            'errorMessage' => 'The ECS instance does not support traffic mirroring.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceeded.SessionNum',
            'errorMessage' => 'The quota of the number of traffic mirror sessions is exceeded.',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded.FilterRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one filter is exceeded.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.SourceNumPerSession',
            'errorMessage' => 'The quota of the number of traffic mirror sources per session is exceeded.',
          ),
          14 => 
          array (
            'errorCode' => 'QuotaExceeded.NetworkInterfaceRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one network interface is exceeded.',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.SlbRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one SLB is exceeded.',
          ),
          16 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature is not supported in current region.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidLoadBalancerId.NotFound',
            'errorMessage' => 'The specified resource of load balancer is not found.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationDenied.FreeNetworkInterface',
            'errorMessage' => 'The network interface is not attached to any ECS instance.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationDenied.ClassicSLB',
            'errorMessage' => 'The operation is not allowed because of ClassicSLB.',
          ),
          20 => 
          array (
            'errorCode' => 'ResourceNotFound.TargetInstance',
            'errorMessage' => 'The specified target instance for traffic mirroring is not found.',
          ),
          21 => 
          array (
            'errorCode' => 'QuotaExceeded.SourceNumPerTarget',
            'errorMessage' => 'The maximum number of traffic mirror sources for a target is exceeded.',
          ),
          22 => 
          array (
            'errorCode' => 'IncorrectStatus.NetworkInterface',
            'errorMessage' => 'The status of  network interface is incorrect.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportBizType',
            'errorMessage' => 'The specified instance type does not support the operation.',
          ),
          24 => 
          array (
            'errorCode' => 'IllegalParam.Priority',
            'errorMessage' => 'The specified Priority is illegal or the same as other mirroring sessions.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationDenied.UnsupportedTargetType',
            'errorMessage' => 'Traffic mirror target must be SLB if traffic mirror sources contain nat gateway network interface.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TrafficMirrorSessionId\\": \\"tms-j6ce5di4w7nvigfjz****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTrafficMirrorSessionResponse>\\n    <TrafficMirrorSessionId>tms-j6ce5di4w7nvigfjz****</TrafficMirrorSessionId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n</CreateTrafficMirrorSessionResponse>","errorExample":""}]',
      'title' => '创建流量镜像会话',
      'description' => '**CreateTrafficMirrorSession**接口属于异步接口，即系统返回一个实例ID，但该镜像会话尚未创建成功，系统后台的创建任务仍在进行。您可以调用[ListTrafficMirrorSessions](~~261367~~)查询镜像会话的创建状态：
- 当镜像会话处于**Creating**状态时，表示镜像会话正在创建中。
- 当镜像会话处于**Created**状态时，表示镜像会话创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTrafficMirrorSession' => 
    array (
      'summary' => '删除镜像会话。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除镜像会话。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接删除镜像会话。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMirrorSessionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tms-j6cla50buc44ap8tu****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorSession',
            'errorMessage' => 'The specified resource of traffic mirror session is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorSession',
            'errorMessage' => 'The status of traffic mirror session is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTrafficMirrorSessionResponse>\\r\\n<RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\r\\n</DeleteTrafficMirrorSessionResponse>","errorExample":""}]',
      'title' => '删除流量镜像会话',
      'description' => '- **DeleteTrafficMirrorSession**接口属于异步接口，即系统返回一个请求ID，但该镜像会话尚未删除成功，系统后台的删除任务仍在进行。您可以调用[ListTrafficMirrorSessions](~~261367~~)查询镜像会话的删除状态：
    - 当镜像会话处于**Deleting**状态时，表示镜像会话正在删除中。
    - 当查询不到指定的镜像会话时，表示镜像会话删除成功。
- **DeleteTrafficMirrorSession**接口不支持并发删除同一个镜像会话。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTrafficMirrorSessionAttribute' => 
    array (
      'summary' => '修改镜像会话的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorSessionDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的镜像会话描述。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is a new session.',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficMirrorSessionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的镜像会话名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改镜像会话的配置信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接修改镜像会话的配置信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficMirrorSessionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的镜像会话的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tms-j6cla50buc44ap8tu****',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficMirrorTargetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的镜像目的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-j6c2fp57q8rr47rp*****',
          ),
        ),
        6 => 
        array (
          'name' => 'TrafficMirrorTargetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的镜像目的类型，取值：

- **NetworkInterface**：弹性网卡。

- **SLB**：私网负载均衡实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'NetworkInterface',
          ),
        ),
        7 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        8 => 
        array (
          'name' => 'VirtualNetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的指定VNI，用来区分不同的镜像流量，取值范围为**0**~**16777215**。
您可以通过VNI在镜像目的区分不同会话的镜像流量。您可以自定义VNI的值，也可以由系统随机分配该值。如果由系统随机分配，该参数无需配置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的镜像会话的优先级，取值范围为**1**~**32766**。
数字越小，优先级越高。同一账号在同一个地域创建的镜像会话优先级不能重复。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        10 => 
        array (
          'name' => 'PacketLength',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定被镜像的原始报文长度（不包含VXLAN报文长度），默认值**1500**，取值范围：**64**～**8500**，单位：字节。
- 该参数的大小会影响镜像目的收到的报文长度，详情请参见[流量镜像概述](~~207513~~)中的镜像报文长度和MTU限制。

- 该参数仅在部分地域可用，详情请参见[创建和管理流量镜像](~~207514~~)中的镜像报文长度参数描述。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1500',
          ),
        ),
        11 => 
        array (
          'name' => 'Enabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启流量会话，取值：

- **false**（默认值）：不开启流量会话。

- **true**：开启流量会话。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '64DCAF03-E2C7-479A-ACEA-38B79876B006',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.TrafficMirror',
            'errorMessage' => 'The business status of traffic mirror is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OptInRequired.TrafficMirror',
            'errorMessage' => 'You need to subscribe to the traffic mirror service first.',
          ),
          2 => 
          array (
            'errorCode' => 'DuplicatedParam.Priority',
            'errorMessage' => 'The specified priority conflicts with the existing priority.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorSession',
            'errorMessage' => 'The specified resource of traffic mirror session is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorSession',
            'errorMessage' => 'The status of traffic mirror session is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorFilter',
            'errorMessage' => 'The specified resource of traffic mirror filter is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorFilter',
            'errorMessage' => 'The status of traffic mirror filter is incorrect.',
          ),
          7 => 
          array (
            'errorCode' => 'QuotaExceeded.FilterRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one filter is exceeded.',
          ),
          8 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterface',
            'errorMessage' => 'The specified resource of network interface is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'ResourceNotFound.EcsInstance',
            'errorMessage' => 'The specified resource of ECS instance is not found.',
          ),
          10 => 
          array (
            'errorCode' => 'ResourceNotFound.Slb',
            'errorMessage' => 'The specified resource of SLB is not found.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationDenied.SlbNotInVpc',
            'errorMessage' => 'The specified SLB is not in any VPC.',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded.NetworkInterfaceRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one network interface is exceeded.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.SlbRelatedSession',
            'errorMessage' => 'The quota of the number of traffic mirror sessions related to one SLB is exceeded.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationDenied.EcsNotSupportTrafficMirror',
            'errorMessage' => 'The ECS instance does not support traffic mirroring.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationDenied.DuplicateRole',
            'errorMessage' => 'The network interface must not be the source and the target of traffic mirror sessions at the same time.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidLoadBalancerId.NotFound',
            'errorMessage' => 'The specified resource of load balancer is not found.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationDenied.FreeNetworkInterface',
            'errorMessage' => 'The network interface is not attached to any ECS instance.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationDenied.ClassicSLB',
            'errorMessage' => 'The operation is not allowed because of ClassicSLB.',
          ),
          19 => 
          array (
            'errorCode' => 'QuotaExceeded.SourceNumPerTarget',
            'errorMessage' => 'The maximum number of traffic mirror sources for a target is exceeded.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportBizType',
            'errorMessage' => 'The specified instance type does not support the operation.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationDenied.UnsupportedTargetType',
            'errorMessage' => 'Traffic mirror target must be SLB if traffic mirror sources contain nat gateway network interface.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorSessions',
        'callbackInterval' => 2,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"64DCAF03-E2C7-479A-ACEA-38B79876B006\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTrafficMirrorSessionAttributeResponse>\\n    <RequestId>64DCAF03-E2C7-479A-ACEA-38B79876B006</RequestId>\\n</UpdateTrafficMirrorSessionAttributeResponse>","errorExample":""}]',
      'title' => '修改流量镜像会话的配置信息',
      'description' => '- **UpdateTrafficMirrorSessionAttribute**接口属于异步接口，即系统返回一个请求ID，但该镜像会话的配置信息尚未修改成功，系统后台的修改任务仍在进行。您可以调用[ListTrafficMirrorSessions](~~261367~~)查询镜像会话的配置信息的修改状态：
    - 当镜像会话的配置信息处于**Modifying**状态时，表示镜像会话的配置信息正在修改中。
    - 当镜像会话的配置信息处于**Created**状态时，表示镜像会话的配置信息修改成功。
- **UpdateTrafficMirrorSessionAttribute**接口不支持并发修改同一个镜像会话的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTrafficMirrorSessions' => 
    array (
      'summary' => '查询镜像会话的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TrafficMirrorSessionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        1 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次查询的最大记录条数。取值范围：**1**~**100**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMirrorSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像源的实例ID，目前支持弹性网卡作为镜像源。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-j6c8znm5l1yt4sox*****',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficMirrorTargetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像目的的实例ID，目前支持弹性网卡和私网负载均衡实例作为镜像目的。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-j6c2fp57q8rr47rp****',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficMirrorFilterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像筛选条件的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tmf-j6cmls82xnc86vtpe****',
          ),
        ),
        6 => 
        array (
          'name' => 'VirtualNetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定VNI，用来区分不同的镜像流量，取值范围为**0**~**16777215**。您可以通过VNI在镜像目的区分不同会话的镜像流量。您可以自定义VNI的值，也可以由系统随机分配该值。如果由系统随机分配该值，请不传该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的优先级，取值范围为**1**~**32766**。

数字越小，优先级越高。同一账号在同一个地域创建的镜像会话优先级不能重复。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Enabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启流量会话，取值：

- **false**（默认值）：不开启流量会话。

- **true**：开启流量会话。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'TrafficMirrorSessionIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '镜像会话的实例ID。其中**N**最大取值为**100**，即支持查询最多100个镜像会话。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '镜像会话的实例ID。其中**N**最大取值为**100**，即支持查询最多100个镜像会话。',
              'type' => 'string',
              'required' => false,
              'example' => 'tms-j6cla50buc44ap8tu****',
            ),
            'required' => false,
            'example' => 'tms-j6cla50buc44ap8tu****',
            'maxLength' => 128,
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
        11 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的流量镜像所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        12 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '739CA01C-92EB-4C69-BCC0-280149C6F41E',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果总数。',
                'type' => 'string',
                'example' => '1',
              ),
              'TrafficMirrorSessions' => 
              array (
                'description' => '镜像会话的详情列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '镜像会话的详情列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TrafficMirrorTargetId' => 
                    array (
                      'description' => '镜像目的的实例ID。',
                      'type' => 'string',
                      'example' => 'eni-j6c2fp57q8rr47rp****',
                    ),
                    'TrafficMirrorSessionId' => 
                    array (
                      'description' => '镜像会话的实例ID。',
                      'type' => 'string',
                      'example' => 'tms-j6cla50buc44ap8tu****',
                    ),
                    'Priority' => 
                    array (
                      'description' => '镜像会话的优先级。

数字越小，优先级越高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TrafficMirrorTargetType' => 
                    array (
                      'description' => '镜像目的类型，取值：

- **NetworkInterface**：弹性网卡。

- **SLB**：私网负载均衡实例。',
                      'type' => 'string',
                      'example' => 'NetworkInterface',
                    ),
                    'PacketLength' => 
                    array (
                      'description' => '指定被镜像的原始报文长度（不包含VXLAN报文长度），默认值**1500**，取值范围：**64**～**8500**，单位：字节。
- 该参数的大小会影响镜像目的收到的报文长度，详情请参见[流量镜像概述](~~207513~~)中的镜像报文长度和MTU限制。

- 该参数仅在部分地域可用，详情请参见[创建和管理流量镜像](~~207514~~)中的镜像报文长度参数描述。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1500',
                    ),
                    'TrafficMirrorSessionDescription' => 
                    array (
                      'description' => '镜像会话的描述信息。',
                      'type' => 'string',
                      'example' => 'This is a session.',
                    ),
                    'TrafficMirrorSessionStatus' => 
                    array (
                      'description' => '镜像会话的状态，取值：

- **Creating**：创建中。
- **Created**：已创建。
- **Modifying**：修改中。
- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'Enabled' => 
                    array (
                      'description' => '是否已开启流量会话，取值：

- **false**（默认值）：不开启流量会话。

- **true**：开启流量会话。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'TrafficMirrorSessionBusinessStatus' => 
                    array (
                      'description' => '镜像会话的业务状态，取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'VirtualNetworkId' => 
                    array (
                      'description' => '指定VNI，用来区分不同的镜像流量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'TrafficMirrorFilterId' => 
                    array (
                      'description' => '流量镜像筛选条件的实例ID。',
                      'type' => 'string',
                      'example' => 'tmf-j6cmls82xnc86vtpe****',
                    ),
                    'TrafficMirrorSessionName' => 
                    array (
                      'description' => '镜像会话的名称。',
                      'type' => 'string',
                      'example' => 'abc',
                    ),
                    'TrafficMirrorSourceIds' => 
                    array (
                      'description' => '镜像源的实例ID。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '镜像源的实例ID。',
                        'type' => 'string',
                        'example' => 'eni-j6c8znm5l1yt4sox****',
                      ),
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '流量镜像所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-bp67acfmxazb4ph****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '镜像会话的创建时间。',
                      'type' => 'string',
                      'example' => '2023-09-05T15:26Z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"739CA01C-92EB-4C69-BCC0-280149C6F41E\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"TrafficMirrorSessions\\": [\\n    {\\n      \\"TrafficMirrorTargetId\\": \\"eni-j6c2fp57q8rr47rp****\\",\\n      \\"TrafficMirrorSessionId\\": \\"tms-j6cla50buc44ap8tu****\\",\\n      \\"Priority\\": 1,\\n      \\"TrafficMirrorTargetType\\": \\"NetworkInterface\\",\\n      \\"PacketLength\\": 1500,\\n      \\"TrafficMirrorSessionDescription\\": \\"This is a session.\\",\\n      \\"TrafficMirrorSessionStatus\\": \\"Created\\",\\n      \\"Enabled\\": false,\\n      \\"TrafficMirrorSessionBusinessStatus\\": \\"Normal\\",\\n      \\"VirtualNetworkId\\": 10,\\n      \\"TrafficMirrorFilterId\\": \\"tmf-j6cmls82xnc86vtpe****\\",\\n      \\"TrafficMirrorSessionName\\": \\"abc\\",\\n      \\"TrafficMirrorSourceIds\\": [\\n        \\"eni-j6c8znm5l1yt4sox****\\"\\n      ],\\n      \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ],\\n      \\"CreationTime\\": \\"2023-09-05T15:26Z\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTrafficMirrorSessionsResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>739CA01C-92EB-4C69-BCC0-280149C6F41E</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <TrafficMirrorSessions>\\n        <TrafficMirrorTargetId>eni-j6c2fp57q8rr47rp****</TrafficMirrorTargetId>\\n        <TrafficMirrorSessionId>tms-j6cla50buc44ap8tu****</TrafficMirrorSessionId>\\n        <Priority>1</Priority>\\n        <TrafficMirrorTargetType>NetworkInterface</TrafficMirrorTargetType>\\n        <PacketLength>1500</PacketLength>\\n        <TrafficMirrorSessionDescription>This is a session.</TrafficMirrorSessionDescription>\\n        <TrafficMirrorSessionStatus>Created</TrafficMirrorSessionStatus>\\n        <Enabled>false</Enabled>\\n        <TrafficMirrorSessionBusinessStatus>Normal</TrafficMirrorSessionBusinessStatus>\\n        <VirtualNetworkId>10</VirtualNetworkId>\\n        <TrafficMirrorFilterId>tmf-j6cmls82xnc86vtpe****</TrafficMirrorFilterId>\\n        <TrafficMirrorSessionName>abc</TrafficMirrorSessionName>\\n        <TrafficMirrorSourceIds>eni-j6c8znm5l1yt4sox****</TrafficMirrorSourceIds>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n        <CreationTime>2023-09-05T15:26Z</CreationTime>\\n    </TrafficMirrorSessions>\\n</ListTrafficMirrorSessionsResponse>","errorExample":""}]',
      'title' => '查询镜像会话的详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveSourcesFromTrafficMirrorSession' => 
    array (
      'summary' => '调用RemoveSourcesFromTrafficMirrorSession接口删除镜像会话中的镜像源。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除镜像源。检查项包括是否填写了必需参数、请求格式和限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接删除镜像源。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMirrorSessionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除镜像源的镜像会话实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tms-j6cla50buc44ap8tu****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMirrorSourceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要删除的镜像源的实例ID，其中**N**最大值为**10**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需要删除的镜像源的实例ID，其中**N**最大值为**10**。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-j6c8znm5l1yt4sox****',
            ),
            'required' => true,
            'example' => 'eni-j6c8znm5l1yt4sox****',
            'maxLength' => 128,
            'maxItems' => 30,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像会话的所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。关于流量镜像支持的地域，请参见[流量镜像概述](~~207513~~)。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hongkong',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A33B2C6A-89D1-4DEA-A807-A6E8CC552484',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.TrafficMirror',
            'errorMessage' => 'The business status of traffic mirror is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OptInRequired.TrafficMirror',
            'errorMessage' => 'You need to subscribe to the traffic mirror service first.',
          ),
          2 => 
          array (
            'errorCode' => 'DuplicatedParam.SourceInstanceIds',
            'errorMessage' => 'The parameter of source instance IDs contains duplicate values.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.TrafficMirrorSession',
            'errorMessage' => 'The specified resource of traffic mirror session is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMirrorSession',
            'errorMessage' => 'The status of traffic mirror session is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotAssociated.TrafficMirrorSource',
            'errorMessage' => 'The specified traffic mirror source and session are not associated.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterface',
            'errorMessage' => 'The specified resource of network interface is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotFound.EcsInstance',
            'errorMessage' => 'The specified resource of ECS instance is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListTrafficMirrorSessions',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A33B2C6A-89D1-4DEA-A807-A6E8CC552484\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveSourcesFromTrafficMirrorSessionResponse>\\r\\n<RequestId>A33B2C6A-89D1-4DEA-A807-A6E8CC552484</RequestId>\\r\\n</RemoveSourcesFromTrafficMirrorSessionResponse>","errorExample":""}]',
      'title' => '删除镜像会话中的镜像源',
      'description' => '- **RemoveSourcesFromTrafficMirrorSession**接口属于异步接口，即系统返回一个请求ID，但该镜像源尚未删除成功，系统后台的删除任务仍在进行。您可以调用[ListTrafficMirrorSessions](~~261367~~)查询镜像会话的状态：
    - 当镜像会话处于**Modifying**状态时，表示镜像源正在删除中。
    - 当镜像会话处于**Created**状态时，表示镜像源删除成功。
- **RemoveSourcesFromTrafficMirrorSession**接口不支持并发删除同一个镜像会话中的镜像源。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'OpenTrafficMirrorService' => 
    array (
      'summary' => '开通流量镜像功能。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'APP' => 
          array (
          ),
        ),
        2 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
        3 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655442222',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4FCCF008-4C13-4231-BE77-D5203801A9E2',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '流量镜像开通成功返回的信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ExceedPurchaseLimit',
            'errorMessage' => 'You have reached the limit of purchase quantity.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.RAM',
            'errorMessage' => 'User not authorized to operate on the specified resource',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.AliGroupUserCanNotBuyInnerCommodity',
            'errorMessage' => 'Vpc_flowlog_public has no group cloud product label, and users within the group are not allowed to purchase.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.QuotaNotEnough',
            'errorMessage' => 'Your quota is insufficient. Please contact your channel partner to increase your quota',
          ),
          4 => 
          array (
            'errorCode' => 'Order.NoRealNameAuthentication',
            'errorMessage' => 'Real-name verification has not been completed for the account.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.BasicInfoUncompleted',
            'errorMessage' => 'You have not completed your basic personal information, please complete the information and try again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4FCCF008-4C13-4231-BE77-D5203801A9E2\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<OpenTrafficMirrorServiceResponse>\\n    <RequestId>4FCCF008-4C13-4231-BE77-D5203801A9E2</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n</OpenTrafficMirrorServiceResponse>","errorExample":""}]',
      'title' => '开通流量镜像功能',
      'description' => '流量镜像功能是按照地域粒度开通，**OpenTrafficMirrorService**接口不支持在同一个地域内并发开通流量镜像功能。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetTrafficMirrorServiceStatus' => 
    array (
      'summary' => '调用GetTrafficMirrorServiceStatus接口查询流量镜像功能的状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量镜像所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Enabled' => 
              array (
                'description' => '流量镜像功能是否开通，取值：

- **true**：已开通。

- **false**：未开通。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '37626066-2C6C-4B62-ADD3-498920C409C5',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Enabled\\": true,\\n  \\"RequestId\\": \\"37626066-2C6C-4B62-ADD3-498920C409C5\\"\\n}","errorExample":""},{"type":"xml","example":"<GetTrafficMirrorServiceStatusResponse>\\n    <Enabled>true</Enabled>\\n    <RequestId>37626066-2C6C-4B62-ADD3-498920C409C5</RequestId>\\n</GetTrafficMirrorServiceStatusResponse>","errorExample":""}]',
      'title' => '查询流量镜像功能的状态',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreatePublicIpAddressPool' => 
    array (
      'summary' => '调用CreatePublicIpAddressPool接口创建IP地址池。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：

- **BGP**（默认值）：BGP（多线）线路。

- **BGP_PRO**：BGP（多线）\\_精品线路。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

- 如果您是单线带宽的白名单用户，您还可以选择以下类型：
    -  **ChinaTelecom**：中国电信
    - **ChinaUnicom**：中国联通
    - **ChinaMobile**：中国移动
    - **ChinaTelecom_L2**：中国电信L2
    - **ChinaUnicom_L2**：中国联通L2
    - **ChinaMobile_L2**：中国移动L2
- 如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池实例的名称。

描述可以为空，或输入1~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPoolName',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池实例的描述。

描述可以为空，或输入2~256个中英文字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPoolDescription',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11****',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建IP地址池。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4pcdvf****',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的IP地址池所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
        7 => 
        array (
          'name' => 'BizType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池的业务类型。取值：
- **CloudBox**：云盒。仅云盒用户支持选择该类型。
- **Default**（默认值）：默认，表示非特殊类型。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Default',
          ),
        ),
        8 => 
        array (
          'name' => 'Zones',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IP地址池的可用区。
**BizType**取值为**CloudBox**，即IP地址池业务类型为云盒时，该参数必填。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IP地址池的可用区。
**BizType**取值为**CloudBox**，即IP地址池业务类型为云盒时，该参数必填。
目前仅支持传入1个可用区。',
              'type' => 'string',
              'required' => false,
              'example' => 'ap-southeast-1-lzdvn-cb',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        9 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        10 => 
        array (
          'name' => 'SecurityProtectionTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。',
              'type' => 'string',
              'required' => false,
              'example' => 'AntiDDoS_Enhanced',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'PulbicIpAddressPoolId' => 
              array (
                'description' => 'IP地址池的实例ID。',
                'type' => 'string',
                'deprecated' => true,
                'example' => 'pippool-6wetvn6fumkgycssx****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'IP地址池所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4pcdvf****',
              ),
              'PublicIpAddressPoolId' => 
              array (
                'description' => 'IP地址池的实例ID。',
                'type' => 'string',
                'example' => 'pippool-6wetvn6fumkgycssx****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Isp',
            'errorMessage' => 'The param of Isp [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => 'The param of Name [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => 'The param of Description [%s] is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.CreatePublicIpAddressPool',
            'errorMessage' => 'Authentication is failed for creating public ip address pool.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.PublicIpAddressPool',
            'errorMessage' => 'The quota of PublicIpAddressPool is exceeded.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParam.Zones',
            'errorMessage' => 'The Zones parameter is required.',
          ),
          6 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature is not supported in current region.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.Zones',
            'errorMessage' => 'The values of Zones [%s] are invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParamSize.Zones',
            'errorMessage' => 'An invalid number of zones is specified.',
          ),
          9 => 
          array (
            'errorCode' => 'UnsupportedFeature.Isp',
            'errorMessage' => 'The feature of Isp is not supported.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationDenied.ISPNotSupportDdosEnhanced',
            'errorMessage' => 'The operation is not allowed because of DdosEnhanced is not supported by current isp.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.SecurityProtectionTypes',
            'errorMessage' => 'The param of securityProtectionTypes is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.PublicIpAddressPool',
            'errorMessage' => 'The business status of publicIpAddressPool  is incorrect.',
          ),
          13 => 
          array (
            'errorCode' => 'OptInRequired.PublicIpAddressPool',
            'errorMessage' => 'You are not authorized to use the requested service of publicIpAddressPool. Ensure that you have subscribed to the service you are trying to use.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PulbicIpAddressPoolId\\": \\"pippool-6wetvn6fumkgycssx****\\",\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4pcdvf****\\",\\n  \\"PublicIpAddressPoolId\\": \\"pippool-6wetvn6fumkgycssx****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreatePublicIpAddressPoolResponse>\\n    <PulbicIpAddressPoolId>pippool-6wetvn6fumkgycssx****</PulbicIpAddressPoolId>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <ResourceGroupId>rg-acfmxazb4pcdvf****</ResourceGroupId>\\n    <PublicIpAddressPoolId>pippool-6wetvn6fumkgycssx****</PublicIpAddressPoolId>\\n</CreatePublicIpAddressPoolResponse>","errorExample":""}]',
      'title' => '创建IP地址池',
      'description' => 'IP地址池功能默认不开放。如需使用，请在配额中心申请**IP地址池功能**权益配额。具体操作，请参见[通过配额中心提升配额](~~108213~~)。',
    ),
    'AddPublicIpAddressPoolCidrBlock' => 
    array (
      'summary' => '调用AddPublicIpAddressPoolCidrBlock接口将IP地址网段添加至IP地址池。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pippool-6wetvn6fumkgycssx****',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => 'IP地址网段。
>不支持同时配置**CidrBlock**与**CidrMask**，请选择其中一个进行配置。',
            'type' => 'string',
            'required' => false,
            'example' => '47.0.XX.XX/24',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。
',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会添加网段。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要添加网段的IP地址池所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
        5 => 
        array (
          'name' => 'CidrMask',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => 'IP地址网段掩码。
输入掩码后，系统会自动分配IP地址网段。

取值范围：**24**~**28**。

>不支持同时配置**CidrBlock**与**CidrMask**，请选择其中一个进行配置。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'CidrBlock' => 
              array (
                'description' => 'IP地址段。',
                'type' => 'string',
                'example' => '47.0.XX.XX/28',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The param of CidrBlock [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlockMask',
            'errorMessage' => 'The param of CidrBlock Mask [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.PublicIpAddressPool',
            'errorMessage' => 'The status of PublicIpAddressPool [%s] is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.CidrBlock',
            'errorMessage' => 'The specified resource of CidrBlock is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.CidrBlockBelongToOtherUser',
            'errorMessage' => 'The operation is not allowed because of CidrBlock belong to other user.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.PublicIpAddressPool',
            'errorMessage' => 'The specified resource ofPublicIpAddressPool [%s] is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.PoolIpQuantity',
            'errorMessage' => 'The quota of PoolIpQuantity is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.OperateSharedResource',
            'errorMessage' => 'The operation is not allowed because of the PublicIpAddressPool is a shared resource.',
          ),
          8 => 
          array (
            'errorCode' => 'MissingParam.CidrBlockOrCidrMask',
            'errorMessage' => 'CidrBlock or CidrMask is not specified.',
          ),
          9 => 
          array (
            'errorCode' => 'DuplicatedParam.CidrBlockAndCidrMask',
            'errorMessage' => 'CidrBlock and CidrMask cannot be specified at the same time.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The instance is locked due to outstanding payments.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListPublicIpAddressPoolCidrBlocks',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 3,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"CidrBlock\\": \\"47.0.XX.XX/28\\"\\n}","errorExample":""},{"type":"xml","example":"<AddPublicIpAddressPoolCidrBlockResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</AddPublicIpAddressPoolCidrBlockResponse>","errorExample":""}]',
      'title' => '为IP地址池添加IP地址段',
      'description' => '在调用本接口时，请了解以下内容：
- IP地址网段和IP地址池需属于同一地域。
- IP地址网段和IP地址池需属于同一ISP线路类型。
- **AddPublicIpAddressPoolCidrBlock**接口属于异步接口，即系统会先返回一个请求ID，但IP地址网段并未添加完成，系统后台的添加任务仍在进行。您可以调用[ListPublicIpAddressPoolCidrBlocks](~~429436~~)查询IP地址池中IP地址网段的状态。
    - 当IP地址网段处于**Modifying**状态时，表示IP地址网段正在添加中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当IP地址网段处于**Created**状态时，表示IP地址网段添加完成。
- **AddPublicIpAddressPoolCidrBlock**接口不支持并发添加同一个IP地址网段至IP地址池。',
    ),
    'DeletePublicIpAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pippool-6wetvn6fumkgycssx****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe60000',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会删除地址池。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的IP地址池所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.PublicIpAddressPool',
            'errorMessage' => 'The specified resource ofPublicIpAddressPool [%s] is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.PublicIpAddressPool',
            'errorMessage' => 'The status of PublicIpAddressPool [%s] is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceInUse.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool [%s] is in use.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.ResourceIsShared',
            'errorMessage' => 'The operation is failed because of PublicIpAddressPool is shared with other users.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.OperateSharedResource',
            'errorMessage' => 'The operation is not allowed because of the PublicIpAddressPool is a shared resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DeletePublicIpAddressPoolResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DeletePublicIpAddressPoolResponse>","errorExample":""}]',
      'title' => '删除IP地址池',
      'summary' => '调用DeletePublicIpAddressPool接口删除IP地址池。',
      'description' => '在调用本接口时，请了解以下内容：
- 删除IP地址池前，请确保该地址池内的IP地址没有被使用。
- **DeletePublicIpAddressPool**接口属于异步接口，即系统会先返回一个请求ID，但IP地址池并未删除完成，系统后台的删除任务仍在进行。您可以调用[ListPublicIpAddressPools](~~429433~~)查询IP地址池的状态。 

    - 当IP地址池处于**Deleting**状态时，表示IP地址池正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当查询不到该IP地址池时，表示IP地址池删除完成。

- **DeletePublicIpAddressPool**接口不支持并发删除同一个IP地址池。',
    ),
    'DeletePublicIpAddressPoolCidrBlock' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pippool-6wetvn6fumkgycssx****',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址网段。',
            'type' => 'string',
            'required' => true,
            'example' => '47.0.XX.XX/24',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会删除IP地址网段。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除IP地址网段的IP地址池所在的地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The param of CidrBlock [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlockMask',
            'errorMessage' => 'The param of CidrBlock Mask [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.PublicIpAddressPool',
            'errorMessage' => 'The status of PublicIpAddressPool [%s] is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool [%s] is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.CidrBlock',
            'errorMessage' => 'The specified resource of CidrBlock [%s] is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.CidrBlock',
            'errorMessage' => 'The status of CidrBlock [%s] is incorrect.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceInUse.CidrBlock',
            'errorMessage' => 'The specified resource of CidrBlock [%s] is in use.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.OperateSharedResource',
            'errorMessage' => 'The operation is not allowed because of the PublicIpAddressPool is a shared resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DeletePublicIpAddressPoolCidrBlockResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DeletePublicIpAddressPoolCidrBlockResponse>","errorExample":""}]',
      'title' => '将IP地址段从IP地址池中删除',
      'summary' => '调用DeletePublicIpAddressPoolCidrBlock接口将IP地址网段从IP地址池中删除。',
      'description' => '在调用本接口时，请了解以下内容：
- 删除IP地址网段前，请确保该IP地址网段没有被使用。
- **DeletePublicIpAddressPoolCidrBlock**接口属于异步接口，即系统会先返回一个请求ID，但IP地址网段并未删除完成，系统后台的删除任务仍在进行。您可以调用[ListPublicIpAddressPoolCidrBlocks](~~429436~~)查询IP地址池中IP地址网段的状态。 
    - 当IP地址网段处于**Deleting**状态时，表示IP地址网段正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当查询不到该IP地址网段时，表示IP地址网段删除完成。
- **DeletePublicIpAddressPoolCidrBlock**接口不支持并发删除同一个IP地址网段。',
    ),
    'ModifyEipAddressAttribute' => 
    array (
      'summary' => '调用ModifyEipAddressAttribute接口修改指定EIP的名称、描述信息和带宽峰值。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的后付费类型EIP的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zeerraiwb7uj6i0d****',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 需要修改EIP的带宽峰值，取值：

- **1**~**200**，按使用流量计费，单位为Mbps。 

- **1**~**500**，按固定带宽计费，单位为Mbps。',
            'type' => 'string',
            'required' => false,
            'example' => '100',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的EIP的名称。  

长度为1~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Test123',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的EIP描述信息。  

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'The Account failed to create order.',
          ),
          1 => 
          array (
            'errorCode' => 'InsufficientBalance.Eip',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified value of "Bandwidth" is not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.ChargeTypeIsPrepaid',
            'errorMessage' => 'It?s forbidden to change prepaid EIP?s bandwidth by API.  It can be changed on Aliyun web console.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'Current elastic IP status does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBandwidth.OutOfMaxTrafficBindedOnNatgw',
            'errorMessage' => 'The bandwidth is out of max traffic binded on natgw.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.LargeSpecEip',
            'errorMessage' => 'Elastic IP address with large spec quota exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidEipAddressName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'ResourceQueryError',
            'errorMessage' => 'The specified resource is queried error.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'Invalid description.',
          ),
          10 => 
          array (
            'errorCode' => 'SYSTEM.UNKNOWN.ERROR',
            'errorMessage' => 'The Account failed to create order.',
          ),
          11 => 
          array (
            'errorCode' => 'Abs.InvalidBandwidth.Malformed',
            'errorMessage' => 'Specified value of Bandwidth is not supported.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.SaleValidate',
            'errorMessage' => 'Validate sale condition with subArticle failed.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.SyncOrderToSub',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          15 => 
          array (
            'errorCode' => 'COMMODITY.INVALID_COMPONENT',
            'errorMessage' => 'The instance component is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.CompleteUserInfo',
            'errorMessage' => 'Complete user info failed.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentRequest',
            'errorMessage' => 'Operation failed because concurrent request.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectStatus.ResourceStatus',
            'errorMessage' => 'Resource status is abnormal for renew.',
          ),
          19 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'MissingParam.InstanceId',
            'errorMessage' => 'The parameter InstanceId is mandatory.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation id is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.InCommonBandwidthPackage',
            'errorMessage' => 'Specified allocation ID in common bandwidth package.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified region is not found during access authentication.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
          1 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'The Account failed to create order.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyEipAddressAttributeResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</ModifyEipAddressAttributeResponse>","errorExample":""}]',
      'title' => '修改EIP属性',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetHighDefinitionMonitorLogStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'LogProject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务LogProject的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'hdmonitor-cn-shenzhen',
          ),
        ),
        2 => 
        array (
          'name' => 'LogStore',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务LogStore的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'hdmonitor',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要配置高精度秒级监控的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-wz9fi6qboho9fwgx7****',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的类型，仅取值为**EIP**。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP',
            'default' => 'EIP',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的高精度秒级监控状态。取值：

- **ON**：开启高精度秒级监控。
- **OFF**：关闭高精度秒级监控。',
            'type' => 'string',
            'required' => true,
            'example' => 'ON',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数列表。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '结果是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'This api does not support sub user or role.',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidAction.NotSupport',
            'errorMessage' => 'This region does not support this action.',
          ),
          6 => 
          array (
            'errorCode' => 'RuleExist',
            'errorMessage' => 'The rule has already existed.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidHdMonitorStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          8 => 
          array (
            'errorCode' => 'HdMonitorEipNumberOverLimit',
            'errorMessage' => 'This user has reached the maximum Eip number of high definination.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation id is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\"\\n}","errorExample":""},{"type":"xml","example":"<SetHighDefinitionMonitorLogStatusResponse>\\n    <Success>true</Success>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457</RequestId>\\n</SetHighDefinitionMonitorLogStatusResponse>","errorExample":""}]',
      'title' => '为EIP配置高精度秒级监控',
      'summary' => '调用SetHighDefinitionMonitorLogStatus接口为EIP配置高精度秒级监控。',
      'description' => '**SetHighDefinitionMonitorLogStatus**接口不支持同一个EIP实例并发配置高精度秒级监控。',
    ),
    'UpdatePublicIpAddressPoolAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pippool-6wetvn6fumkgycssx****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池实例的名称。

描述可以为空，或输入1~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`http://`或`https://`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPoolName',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池实例的描述。

描述可以为空，或输入长度为2~256个中英文字符，不能以http://或https://开头。
',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPoolDescription',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改地址池属性。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的IP地址池所在的地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Name ',
            'errorMessage' => 'The param of Name [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => 'The param of Description [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool [%s] is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.OperateSharedResource',
            'errorMessage' => 'The operation is not allowed because of the PublicIpAddressPool is a shared resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdatePublicIpAddressPoolAttributeResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</UpdatePublicIpAddressPoolAttributeResponse>","errorExample":""}]',
      'title' => '修改地址池属性',
      'summary' => '调用UpdatePublicIpAddressPoolAttribute接口修改地址池属性。',
      'description' => '**UpdatePublicIpAddressPoolAttribute**接口不支持并发修改同一个地址池的属性。',
    ),
    'DescribeEipAddresses' => 
    array (
      'summary' => '查询指定地域已创建的EIP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含未生效的订购数据，取值：

- **false**（默认值）：不包含未生效的订购数据。

- **true**：包含未生效的订购数据。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的状态，取值：

- **Associating**：绑定中。

- **Unassociating**：解绑中。

- **InUse**：已分配。

- **Available**：可用。
- **Releasing**：释放中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        3 => 
        array (
          'name' => 'EipAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的EIP的IP地址。

最多支持输入50个EIP的IP地址，IP地址之间用半角逗号（,）分隔。

>如果同时传入**EipAddress**和**AllocationId**参数，**EipAddress**可输入50个EIP的IP地址，**AllocationId**也可同时输入50个EIP的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => '47.75.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的EIP实例的ID。 

最多支持输入50个EIP实例ID，实例ID之间用半角逗号（,）分隔。

>如果同时传入**EipAddress**和**AllocationId**参数，**AllocationId**可输入50个EIP的实例ID，**EipAddress**也可同时输入50个EIP的IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'eip-2zeerraiwb7ujxscd****',
          ),
        ),
        5 => 
        array (
          'name' => 'SegmentInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eipsg-t4nr90yik5oy38xdy****',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP所属的资源组的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4pcdvf****',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
            'default' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**100**。默认值：**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'ISP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：

- **BGP**（默认值）：BGP（多线）线路。目前全部地域都支持BGP（多线）线路EIP。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、日本（东京）、马来西亚（吉隆坡）、菲律宾（马尼拉）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路EIP。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

如果您是单线带宽的白名单用户，您还可以选择以下类型：
-  **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        10 => 
        array (
          'name' => 'Filter.1.Key',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询资源时的筛选键，必须取值为**CreationStartTime**（资源创建的开始时间）。',
            'type' => 'string',
            'required' => false,
            'example' => 'CreationStartTime',
          ),
        ),
        11 => 
        array (
          'name' => 'Filter.2.Key',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询资源时的筛选键，必须取值为**CreationEndTime**（资源创建的结束时间）。',
            'type' => 'string',
            'required' => false,
            'example' => 'CreationEndTime',
          ),
        ),
        12 => 
        array (
          'name' => 'Filter.1.Value',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询资源时的筛选值。使用UTC时间，格式为`YYYY-MM-DDThh:mmZ`。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-01-01T01:00Z',
          ),
        ),
        13 => 
        array (
          'name' => 'Filter.2.Value',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询资源时的筛选值。使用UTC时间，格式为`YYYY-MM-DDThh:mmZ`。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-01-06T02:00Z',
          ),
        ),
        14 => 
        array (
          'name' => 'LockReason',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '锁定类型，取值：

- **financial**：因欠费被锁定。

- **security**：因安全原因被锁定。',
            'type' => 'string',
            'required' => false,
            'example' => 'financial',
          ),
        ),
        15 => 
        array (
          'name' => 'AssociatedInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的云产品实例的类型，取值： 
- **EcsInstance**（默认值）：VPC类型的ECS实例。
- **SlbInstance**：VPC类型的CLB实例。
- **Nat**：NAT网关。
- **HaVip**：高可用虚拟IP。 
- **NetworkInterface**：辅助弹性网卡。
- **IpAddress**：IP地址。

> 每个ECS实例、CLB实例、高可用虚拟IP和IP地址同时只能绑定一个EIP，NAT网关可以绑定多个EIP。辅助弹性网卡可以绑定EIP的个数受EIP绑定模式影响，更多信息，请参见[弹性公网IP概述](~~72125~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
        16 => 
        array (
          'name' => 'AssociatedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 云产品的实例ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2zebb08phyccdvf****',
          ),
        ),
        17 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的付费模式，取值：
- **PostPaid**：按量计费。
- **PrePaid**：包年包月。
',
            'type' => 'string',
            'required' => false,
            'example' => 'PostPaid',
          ),
        ),
        18 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会查询资源状况。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        19 => 
        array (
          'name' => 'EipName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的名称。

长度为1~128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP-01',
          ),
        ),
        20 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定标签筛选EIP。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '指定标签筛选EIP。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

一个标签值最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        21 => 
        array (
          'name' => 'SecurityProtectionEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启安全防护',
            'description' => '是否开启了DDoS防护（增强版）。取值：
- **false**：未开启。
- **true**：已开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        22 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的EIP所属IP地址池ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'pippool-2vc0kxcedhquybdsz****',
          ),
        ),
        23 => 
        array (
          'name' => 'ServiceManaged',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为托管实例。取值：
- **true**：是托管实例。
- **false**：不是托管实例。

不填默认查询所有实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'EipAddresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EipAddress' => 
                  array (
                    'description' => 'EIP的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'EIP的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ReservationActiveTime' => 
                        array (
                          'description' => '续费生效时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2021-05-23T16:00:00Z',
                        ),
                        'Status' => 
                        array (
                          'description' => 'EIP的状态。

- **Associating**：绑定中。

- **Unassociating**：解绑中。   

- **InUse**：已分配。   

- **Available**：可用。   
- **Releasing**：释放中。
',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'ReservationOrderType' => 
                        array (
                          'description' => '续费订单类型。

- **RENEWCHANGE**：续费变配。
- **TEMP_UPGRADE**：短时升配。
- **UPGRADE** ：升级。',
                          'type' => 'string',
                          'example' => 'RENEWCHANGE',
                        ),
                        'AllocationTime' => 
                        array (
                          'description' => 'EIP的创建时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2021-04-23T01:37:38Z',
                        ),
                        'Netmode' => 
                        array (
                          'description' => '网络类型。仅取值：**public**，表示公网。',
                          'type' => 'string',
                          'example' => 'public',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => 'EIP的付费模式，取值：
- **PostPaid**：按量计费。
- **PrePaid**：包年包月。
',
                          'type' => 'string',
                          'example' => 'PostPaid',
                        ),
                        'Description' => 
                        array (
                          'description' => 'EIP的描述信息。',
                          'type' => 'string',
                          'example' => 'abc',
                        ),
                        'Mode' => 
                        array (
                          'description' => '绑定模式，取值：

- **NAT**：NAT模式（普通模式）。

- **MULTI_BINDED**：多EIP网卡可见模式。

- **BINDED**：EIP网卡可见模式。',
                          'type' => 'string',
                          'example' => 'NAT',
                        ),
                        'SegmentInstanceId' => 
                        array (
                          'description' => '连续EIP的实例ID。

仅EIP属于连续EIP时才会返回该参数值。',
                          'type' => 'string',
                          'example' => 'eipsg-t4nr90yik5oy38xd****',
                        ),
                        'ReservationInternetChargeType' => 
                        array (
                          'description' => '续费付费类型。

- **PayByBandwidth**：按固定带宽计费。

- **PayByTraffic**：按使用流量计费。',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'BandwidthPackageId' => 
                        array (
                          'description' => '加入的共享带宽ID。',
                          'type' => 'string',
                          'example' => 'cbwp-bp1ego3i4j07ccdvf****',
                        ),
                        'IpAddress' => 
                        array (
                          'description' => 'EIP的IP地址。',
                          'type' => 'string',
                          'example' => '47.75.XX.XX',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => 'EIP的带宽峰值。单位：Mbps。',
                          'type' => 'string',
                          'example' => '5',
                        ),
                        'ReservationBandwidth' => 
                        array (
                          'description' => '续费带宽。单位：Mbps。',
                          'type' => 'string',
                          'example' => '12',
                        ),
                        'EipBandwidth' => 
                        array (
                          'description' => 'EIP加入共享带宽之前或退出共享带宽之后的带宽。单位：Mbps。',
                          'type' => 'string',
                          'example' => '101',
                        ),
                        'Name' => 
                        array (
                          'description' => 'EIP的名称。',
                          'type' => 'string',
                          'example' => 'EIP-01',
                        ),
                        'PrivateIpAddress' => 
                        array (
                          'description' => 'EIP所绑定的辅助弹性网卡实例的私网IP地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'InstanceRegionId' => 
                        array (
                          'description' => '当前绑定的资源的地域ID。',
                          'type' => 'string',
                          'example' => ' cn-hangzhou',
                        ),
                        'DeletionProtection' => 
                        array (
                          'description' => '是否开启了删除保护功能。

- **true**：已开启。

- **false**：未开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '当前绑定的实例的ID。',
                          'type' => 'string',
                          'example' => 'i-bp15zckdt37cdvf****',
                        ),
                        'SecondLimited' => 
                        array (
                          'description' => '是否配置了二级限速。

- **true**：已配置。

- **false**：未配置。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '当前绑定的实例类型。

- **EcsInstance**：VPC类型的ECS实例。

- **SlbInstance**：VPC类型的CLB实例。

- **Nat**：NAT网关。

- **HaVip**：高可用虚拟IP。 

- **NetworkInterface**：辅助弹性网卡。
- **IpAddress**：IP地址。',
                          'type' => 'string',
                          'example' => 'EcsInstance',
                        ),
                        'HDMonitorStatus' => 
                        array (
                          'description' => 'EIP是否开启了秒级监控。

- **false**：未开启。

- **true**：已开启。',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'EIP所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'BandwidthPackageBandwidth' => 
                        array (
                          'description' => 'EIP加入的共享带宽的带宽值。单位：Mbps。',
                          'type' => 'string',
                          'example' => '50',
                        ),
                        'ServiceManaged' => 
                        array (
                          'description' => '是否为托管实例。取值：

- **1**：是托管实例。

- **0**：不是托管实例。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => '到期时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2021-05-23T02:00:00Z',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazcdxs****',
                        ),
                        'AllocationId' => 
                        array (
                          'description' => 'EIP的实例ID。',
                          'type' => 'string',
                          'example' => 'eip-2zeerraiwb7ujcdvf****',
                        ),
                        'InternetChargeType' => 
                        array (
                          'description' => 'EIP的计费方式。

- **PayByBandwidth**：按固定带宽计费。

- **PayByTraffic**：按使用流量计费。',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => 'EIP实例的业务状态。

- **Normal**：正常。
- **FinancialLocked**：被锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'BandwidthPackageType' => 
                        array (
                          'description' => '带宽的类型，仅支持返回**CommonBandwidthPackage**（共享带宽）。',
                          'type' => 'string',
                          'example' => 'CommonBandwidthPackage',
                        ),
                        'HasReservationData' => 
                        array (
                          'description' => '是否有续费数据。
- **false**：无续费数据。
- **true**：有续费数据。只有在入参**IncludeReservationData**为**true**，且有未生效订购数据时才会为**true**。

',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'ISP' => 
                        array (
                          'description' => '线路类型。

- **BGP**：BGP（多线）线路。目前全部地域都支持BGP（多线）线路EIP。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、日本（东京）、马来西亚（吉隆坡）、菲律宾（马尼拉）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路EIP。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

如果您是单线带宽的白名单用户，返回类型还可能为：
-  **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，返回**BGP_FinanceCloud**。',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'OperationLocks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'LockReason' => 
                            array (
                              'description' => '锁定详情。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '锁定详情。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'LockReason' => 
                                  array (
                                    'description' => '锁定类型。

- **financial**：因欠费被锁定。

- **security**：因安全原因被锁定。',
                                    'type' => 'string',
                                    'example' => 'financial',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => 'EIP的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'EIP的标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => 'EIP的标签键。',
                                    'type' => 'string',
                                    'example' => 'KeyTest',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => 'EIP的标签值。',
                                    'type' => 'string',
                                    'example' => 'ValueTest',
                                  ),
                                ),
                                'example' => '"Tag": [ { "Value": "000", "Key": "yyy" }, { "Value": "111","Key": "kkk" }',
                              ),
                            ),
                          ),
                        ),
                        'AvailableRegions' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                          ),
                        ),
                        'SecurityProtectionTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SecurityProtectionType' => 
                            array (
                              'description' => '安全防护级别。

- 返回为空时，表示DDoS防护（基础版）。

- 返回**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '安全防护级别。

- 返回为空时，表示DDoS防护（基础版）。

- 返回**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。',
                                'type' => 'string',
                                'example' => 'AntiDDoS_Enhanced',
                              ),
                            ),
                          ),
                        ),
                        'PublicIpAddressPoolId' => 
                        array (
                          'description' => 'EIP所属的IP地址池ID。
',
                          'type' => 'string',
                          'example' => 'pippool-2vc0kxcedhquybdsz****',
                        ),
                        'VpcId' => 
                        array (
                          'description' => '开通了IPv4网关功能且与EIP同地域的VPC ID。

EIP绑定IP地址时，系统可以根据该VPC的路由配置，使绑定的IP地址具备公网访问能力。

> **InstanceType**为**IpAddress**时，即绑定EIP的实例类型为IP地址时，返回该参数。',
                          'type' => 'string',
                          'example' => 'vpc-bp15zckdt37pq72zv****',
                        ),
                        'Zone' => 
                        array (
                          'description' => 'EIP的可用区。

仅当EIP业务类型为云盒时，返回该参数。',
                          'type' => 'string',
                          'example' => 'ap-southeast-1-lzdvn-cb',
                        ),
                        'BizType' => 
                        array (
                          'description' => 'EIP的业务类型。
- **CloudBox**：云盒。仅云盒用户支持该类型。
- **Default**（默认值）：默认，表示非特殊类型。',
                          'type' => 'string',
                          'example' => 'CloudBox',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIAssociatedInstanceType.ValueNotSupported',
            'errorMessage' => 'The specified value of AssociatedInstanceType is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidChargeType.ValueNotSupported',
            'errorMessage' => 'The specified ChargeType is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidAliuid',
            'errorMessage' => 'User Id is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'InstanceType.Invalid',
            'errorMessage' => 'InstanceType is not null',
          ),
          5 => 
          array (
            'errorCode' => 'InstanceIdLength.Exceed',
            'errorMessage' => 'InstanceId length is exceed',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.ResourceGroupId',
            'errorMessage' => 'ResourceGroup is not supported in this region.',
          ),
          9 => 
          array (
            'errorCode' => 'IellgalParameter.OwnerAccount',
            'errorMessage' => 'The specified parameter OwnerAccount is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidFilterValue',
            'errorMessage' => 'The specified FilterValue is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified region is not found during access authentication.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFilterKey.NotFound',
            'errorMessage' => 'The specified Filterkey is not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidLockReason.NotFound',
            'errorMessage' => 'The specified LockReason is not found',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"PageNumber\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"EipAddresses\\": {\\n    \\"EipAddress\\": [\\n      {\\n        \\"ReservationActiveTime\\": \\"2021-05-23T16:00:00Z\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"ReservationOrderType\\": \\"RENEWCHANGE\\",\\n        \\"AllocationTime\\": \\"2021-04-23T01:37:38Z\\",\\n        \\"Netmode\\": \\"public\\",\\n        \\"ChargeType\\": \\"PostPaid\\",\\n        \\"Description\\": \\"abc\\",\\n        \\"Mode\\": \\"NAT\\",\\n        \\"SegmentInstanceId\\": \\"eipsg-t4nr90yik5oy38xd****\\",\\n        \\"ReservationInternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"BandwidthPackageId\\": \\"cbwp-bp1ego3i4j07ccdvf****\\",\\n        \\"IpAddress\\": \\"47.75.XX.XX\\",\\n        \\"Bandwidth\\": \\"5\\",\\n        \\"ReservationBandwidth\\": \\"12\\",\\n        \\"EipBandwidth\\": \\"101\\",\\n        \\"Name\\": \\"EIP-01\\",\\n        \\"PrivateIpAddress\\": \\"192.168.XX.XX\\",\\n        \\"InstanceRegionId\\": \\" cn-hangzhou\\",\\n        \\"DeletionProtection\\": true,\\n        \\"InstanceId\\": \\"i-bp15zckdt37cdvf****\\",\\n        \\"SecondLimited\\": false,\\n        \\"InstanceType\\": \\"EcsInstance\\",\\n        \\"HDMonitorStatus\\": \\"false\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"BandwidthPackageBandwidth\\": \\"50\\",\\n        \\"ServiceManaged\\": 0,\\n        \\"ExpiredTime\\": \\"2021-05-23T02:00:00Z\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmxazcdxs****\\",\\n        \\"AllocationId\\": \\"eip-2zeerraiwb7ujcdvf****\\",\\n        \\"InternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"BandwidthPackageType\\": \\"CommonBandwidthPackage\\",\\n        \\"HasReservationData\\": \\"false\\",\\n        \\"ISP\\": \\"BGP\\",\\n        \\"OperationLocks\\": {\\n          \\"LockReason\\": [\\n            {\\n              \\"LockReason\\": \\"financial\\"\\n            }\\n          ]\\n        },\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"KeyTest\\",\\n              \\"Value\\": \\"ValueTest\\"\\n            }\\n          ]\\n        },\\n        \\"SecurityProtectionTypes\\": {\\n          \\"SecurityProtectionType\\": [\\n            \\"AntiDDoS_Enhanced\\"\\n          ]\\n        },\\n        \\"PublicIpAddressPoolId\\": \\"pippool-2vc0kxcedhquybdsz****\\",\\n        \\"VpcId\\": \\"vpc-bp15zckdt37pq72zv****\\",\\n        \\"Zone\\": \\"ap-southeast-1-lzdvn-cb\\",\\n        \\"BizType\\": \\"CloudBox\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEipAddressesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <PageNumber>10</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <EipAddresses>\\n        <ReservationActiveTime>2021-05-23T16:00:00Z</ReservationActiveTime>\\n        <Status>Available</Status>\\n        <ReservationOrderType>RENEWCHANGE</ReservationOrderType>\\n        <AllocationTime>2021-04-23T01:37:38Z</AllocationTime>\\n        <Netmode>public</Netmode>\\n        <ChargeType>PostPaid</ChargeType>\\n        <Description>abc</Description>\\n        <SegmentInstanceId>eipsg-t4nr90yik5oy38xd****</SegmentInstanceId>\\n        <ReservationInternetChargeType>PayByBandwidth</ReservationInternetChargeType>\\n        <BandwidthPackageId>cbwp-bp1ego3i4j07ccdvf****</BandwidthPackageId>\\n        <IpAddress>47.75.XX.XX</IpAddress>\\n        <Bandwidth>5</Bandwidth>\\n        <ReservationBandwidth>12</ReservationBandwidth>\\n        <EipBandwidth>101</EipBandwidth>\\n        <Name>EIP-01</Name>\\n        <InstanceRegionId> cn-hangzhou</InstanceRegionId>\\n        <DeletionProtection>true</DeletionProtection>\\n        <InstanceId>i-bp15zckdt37cdvf****</InstanceId>\\n        <SecondLimited>false</SecondLimited>\\n        <InstanceType>EcsInstance</InstanceType>\\n        <HDMonitorStatus>false</HDMonitorStatus>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <BandwidthPackageBandwidth>50</BandwidthPackageBandwidth>\\n        <ServiceManaged>0</ServiceManaged>\\n        <ExpiredTime>2021-05-23T02:00:00Z</ExpiredTime>\\n        <ResourceGroupId>rg-acfmxazcdxs****</ResourceGroupId>\\n        <AllocationId>eip-2zeerraiwb7ujcdvf****</AllocationId>\\n        <InternetChargeType>PayByBandwidth</InternetChargeType>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <BandwidthPackageType>CommonBandwidthPackage</BandwidthPackageType>\\n        <HasReservationData>false</HasReservationData>\\n        <ISP>BGP</ISP>\\n        <OperationLocks>\\n            <LockReason>financial</LockReason>\\n        </OperationLocks>\\n        <Tags>\\n            <Key>KeyTest</Key>\\n            <Value>ValueTest</Value>\\n        </Tags>\\n        <SecurityProtectionTypes>AntiDDoS_Enhanced</SecurityProtectionTypes>\\n        <PublicIpAddressPoolId>pippool-2vc0kxcedhquybdsz****</PublicIpAddressPoolId>\\n        <VpcId>vpc-bp15zckdt37pq72zv****</VpcId>\\n        <Zone>ap-southeast-1-lzdvn-cb</Zone>\\n        <BizType>CloudBox</BizType>\\n    </EipAddresses>\\n</DescribeEipAddressesResponse>","errorExample":""}]',
      'title' => '查询指定地域已创建的EIP',
      'description' => '本接口可以查询指定地域已创建的EIP信息，包括EIP的带宽峰值、计费方式，当前绑定的实例类型等。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEipSegment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001sdfg',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP组所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'SegmentInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的连续EIP组的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eipsg-2zett8ba055tbsxme****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => 'F7A6301A-64BA-41EC-8284-8F4838C15D1F',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'EipSegments' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EipSegment' => 
                  array (
                    'description' => '连续EIP组详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '连续EIP组详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '连续EIP组的创建时间。按照ISO8601标准表示，并需要使用UTC+0时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2020-03-06T12:30:07Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '连续EIP组的状态。

- **Allocating**：分配中。

- **Allocated**：已分配。

- **Releasing**：释放中。',
                          'type' => 'string',
                          'example' => 'Allocated',
                        ),
                        'Descritpion' => 
                        array (
                          'description' => '连续EIP组的描述。',
                          'type' => 'string',
                          'example' => 'MyEipSegment',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '连续EIP组的实例ID。',
                          'type' => 'string',
                          'example' => 'eipsg-2zett8ba055tbsxme****',
                        ),
                        'IpCount' => 
                        array (
                          'description' => '连续EIP组中包含的IP个数。',
                          'type' => 'string',
                          'example' => '16',
                        ),
                        'Name' => 
                        array (
                          'description' => '连续EIP组名称。',
                          'type' => 'string',
                          'example' => 'MyEipSegment',
                        ),
                        'Segment' => 
                        array (
                          'description' => '连续EIP组的网段与掩码。',
                          'type' => 'string',
                          'example' => '161.xx.xx.32/28',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '连续EIP组所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Zone' => 
                        array (
                          'description' => '连续EIP组的可用区。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-a',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.QueryDbError',
            'errorMessage' => 'Operation failed because query db error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"F7A6301A-64BA-41EC-8284-8F4838C15D1F\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 10,\\n  \\"EipSegments\\": {\\n    \\"EipSegment\\": [\\n      {\\n        \\"CreationTime\\": \\"2020-03-06T12:30:07Z\\",\\n        \\"Status\\": \\"Allocated\\",\\n        \\"Descritpion\\": \\"MyEipSegment\\",\\n        \\"InstanceId\\": \\"eipsg-2zett8ba055tbsxme****\\",\\n        \\"IpCount\\": \\"16\\",\\n        \\"Name\\": \\"MyEipSegment\\",\\n        \\"Segment\\": \\"161.xx.xx.32/28\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"Zone\\": \\"cn-hangzhou-a\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEipSegmentResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>F7A6301A-64BA-41EC-8284-8F4838C15D1F</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>10</TotalCount>\\n    <EipSegments>\\n        <CreationTime>2020-03-06T12:30:07Z</CreationTime>\\n        <Status>Allocated</Status>\\n        <Descritpion>MyEipSegment</Descritpion>\\n        <InstanceId>eipsg-2zett8ba055tbsxme****</InstanceId>\\n        <IpCount>16</IpCount>\\n        <Name>MyEipSegment</Name>\\n        <Segment>161.xx.xx.32/28</Segment>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </EipSegments>\\n</DescribeEipSegmentResponse>","errorExample":""}]',
      'title' => '查询连续EIP组',
      'summary' => '调用DescribeEipSegment查询连续EIP组的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEipGatewayInfo' => 
    array (
      'summary' => '调用DescribeEipGatewayInfo接口查询EIP的网关和掩码信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的EIP绑定的辅助弹性网卡的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eni-bp1d66qjxb3qoin3****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的EIP所属的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-zhangjiakou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的EIP所属的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-zhangjiakou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数列表。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '操作状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '传递的操作信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0FD0EED-F90D-4479-803D-DD62335357E5	',
              ),
              'EipInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EipInfo' => 
                  array (
                    'description' => 'EIP详细信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'EIP详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Ip' => 
                        array (
                          'description' => 'EIP的IP地址。',
                          'type' => 'string',
                          'example' => '47.XX.XX.236',
                        ),
                        'IpGw' => 
                        array (
                          'description' => 'EIP的网关地址。',
                          'type' => 'string',
                          'example' => '47.XX.XX.1',
                        ),
                        'IpMask' => 
                        array (
                          'description' => 'EIP的子网掩码。',
                          'type' => 'string',
                          'example' => '255.255.255.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidNetworkInterface.NotFound',
            'errorMessage' => 'The specified network interface is not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"C0FD0EED-F90D-4479-803D-DD62335357E5\\\\t\\",\\n  \\"EipInfos\\": {\\n    \\"EipInfo\\": [\\n      {\\n        \\"Ip\\": \\"47.XX.XX.236\\",\\n        \\"IpGw\\": \\"47.XX.XX.1\\",\\n        \\"IpMask\\": \\"255.255.255.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEipGatewayInfoResponse>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n    <RequestId>C0FD0EED-F90D-4479-803D-DD62335357E5\\t</RequestId>\\n    <EipInfos>\\n        <Ip>47.XX.XX.236</Ip>\\n        <IpGw>47.XX.XX.1</IpGw>\\n        <IpMask>255.255.255.0</IpMask>\\n    </EipInfos>\\n</DescribeEipGatewayInfoResponse>","errorExample":""}]',
      'title' => '查询EIP的网关和掩码信息',
      'description' => '仅支持查询以多EIP网卡可见模式绑定辅助弹性网卡的EIP的网关和掩码信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePublicIpAddress' => 
    array (
      'summary' => '调用DescribePublicIpAddress接口查询指定地域中位于专有网络的公网IP地址的范围。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。

取值范围：**1**~**100**。默认值：**100**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
            'default' => '100',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定查询的地域。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定查询的地域。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回请求列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'Success' => 
              array (
                'description' => '是否查询成功。

- **true**：成功。

- **false**：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'test',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RegionId' => 
              array (
                'description' => '公网IP所属地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'PublicIpAddress' => 
              array (
                'description' => '指定地域中位于专有网络的公网IP地址的范围。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '指定地域中位于专有网络的公网IP地址的范围。',
                  'type' => 'string',
                  'example' => '101.37.XX.XX/24',
                ),
                'example' => '110.11.1.0/24',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"test\\",\\n  \\"PageSize\\": 100,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"PublicIpAddress\\": [\\n    \\"101.37.XX.XX/24\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribePublicIpAddressResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n    <Message>test</Message>\\n    <PageSize>100</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <PublicIpAddress>101.37.XX.XX/24</PublicIpAddress>\\n</DescribePublicIpAddressResponse>","errorExample":""}]',
      'title' => '查询专有网络中公网IP地址的范围',
      'description' => '您不能通过**DescribePublicIpAddress**接口查询位于经典网络中的公网IP的范围。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEipMonitorData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP所属地域ID。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-2zeerraiwb7uj6idcfv****',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的起始时间。使用UTC时间。按照ISO8601标准，格式为`YYYY-MM-DDThh:mm:ssZ`。例如，北京时间2013年01月10日20点00分00秒，表示为`2013-01-10T12:00:00Z`。

如果不是整分，则自动取下一分钟为起始时间点。 ',
            'type' => 'string',
            'required' => true,
            'example' => '2020-01-05T01:05:05Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的结束时间。使用UTC时间。按照ISO8601标准，格式为`YYYY-MM-DDThh:mm:ssZ`。例如，北京时间2013年01月10日20点00分00秒，表示为`2013-01-10T12:00:00Z`。

如果不是整分，则自动取下一分钟为结束时间点。 ',
            'type' => 'string',
            'required' => true,
            'example' => '2020-01-05T03:05:10Z',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每条监控数据的时间长度。单位：秒。取值：**60**（默认值） 、**300** 、 **900** 或 **3600**。

- 如果（**EndTime**–**StartTime**）/ **Period**大于200，则最多返回200条监控数据。

- 如果（**EndTime**–**StartTime**）/ **Period**小于等于200，则只返回起始时间点到结束时间点的监控数据。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
            'default' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C8B26B44-0189-443E-9816-D951F59623A9',
              ),
              'EipMonitorDatas' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EipMonitorData' => 
                  array (
                    'description' => 'EIP监控数据的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'EIP监控数据的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EipTX' => 
                        array (
                          'description' => '流出的流量。单位：Byte。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '343',
                        ),
                        'EipPackets' => 
                        array (
                          'description' => '包数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3434',
                        ),
                        'EipBandwidth' => 
                        array (
                          'description' => '平均带宽值，该值等于**EipFlow**/**Period**。单位：Byte/s。

其中**Period**默认值为**60**，单位为秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'TimeStamp' => 
                        array (
                          'description' => '查询监控信息的时间戳。ISO8601格式，如`2020-01-21T09:50:23Z`。',
                          'type' => 'string',
                          'example' => '2020-01-21T09:50:23Z',
                        ),
                        'EipFlow' => 
                        array (
                          'description' => '流入和流出的流量总和。单位：Byte。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '465',
                        ),
                        'EipRX' => 
                        array (
                          'description' => '流入的流量。单位：Byte。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '122',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter.TooMany',
            'errorMessage' => 'monitor parameter too many data required.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidStartTime.Malformed',
            'errorMessage' => 'The specified parameter "StartTime" is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidEndTime.Malformed',
            'errorMessage' => 'The specified parameter "EndTime" is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeriod.ValueNotSupported',
            'errorMessage' => 'The specified parameter "Period" is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidStartTime.TooEarly',
            'errorMessage' => 'The specified parameter "StartTime" is too early.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation id is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationDenied.TooManyDataQueried',
            'errorMessage' => 'Specified operation is denied as too many data to return.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpInstanceId.NotFound',
            'errorMessage' => 'The specified Eip InstanceId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The InstanceId provided does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified region is not found during access authentication.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C8B26B44-0189-443E-9816-D951F59623A9\\",\\n  \\"EipMonitorDatas\\": {\\n    \\"EipMonitorData\\": [\\n      {\\n        \\"EipTX\\": 343,\\n        \\"EipPackets\\": 3434,\\n        \\"EipBandwidth\\": 10,\\n        \\"TimeStamp\\": \\"2020-01-21T09:50:23Z\\",\\n        \\"EipFlow\\": 465,\\n        \\"EipRX\\": 122\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEipMonitorDataResponse>\\n    <RequestId>C8B26B44-0189-443E-9816-D951F59623A9</RequestId>\\n    <EipMonitorDatas>\\n        <EipTX>343</EipTX>\\n        <EipPackets>3434</EipPackets>\\n        <EipBandwidth>10</EipBandwidth>\\n        <TimeStamp>2020-01-21T09:50:23Z</TimeStamp>\\n        <EipFlow>465</EipFlow>\\n        <EipRX>122</EipRX>\\n    </EipMonitorDatas>\\n</DescribeEipMonitorDataResponse>","errorExample":""}]',
      'title' => '查看EIP的监控信息',
      'summary' => '调用DescribeEipMonitorData接口查看弹性公网IP（Elastic IP Address，简称EIP）的监控信息，最多查询30天内的数据，单次最多查询400个流量点的数据。',
      'description' => '为了提供更好的获取监控数据接口体验，建议您使用云监控（CloudMonitor）提供的统一接口DescribeMetricList查询EIP相关数据。更多信息，请参见[DescribeMetricList](~~51936~~)和[弹性公网IP相关数据](~~162874~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeHighDefinitionMonitorLogAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在的地域ID。

您可以通过调用[DescribeRegions](~~448570~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询高精度秒级监控的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-wz9fi6qboho9fwgx7****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的类型，仅取值为**EIP**。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP',
            'default' => 'EIP',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'LogProject' => 
              array (
                'description' => '日志服务LogProject的名称。',
                'type' => 'string',
                'example' => 'hdmonitor-cn-shenzhen-1658206966225390',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
              'LogStore' => 
              array (
                'description' => '日志服务LogStore的名称。',
                'type' => 'string',
                'example' => 'hdmonitor',
              ),
              'Success' => 
              array (
                'description' => '结果是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'InstanceId' => 
              array (
                'description' => '要查看高精度秒级监控的实例ID。',
                'type' => 'string',
                'example' => 'eip-wz9fi6qboho9fwgx7****',
              ),
              'InstanceType' => 
              array (
                'description' => '要查看高精度秒级监控的实例类型，仅可以取值为**EIP**。',
                'type' => 'string',
                'example' => 'EIP',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId',
            'errorMessage' => 'Instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProjectNotExist',
            'errorMessage' => 'The Project does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidHdMonitorStatus',
            'errorMessage' => 'Current instance status is not valid for this action.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidAction.NotSupport',
            'errorMessage' => 'This region does not support this action.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation id is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"LogProject\\": \\"hdmonitor-cn-shenzhen-1658206966225390\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\",\\n  \\"LogStore\\": \\"hdmonitor\\",\\n  \\"Success\\": \\"true\\",\\n  \\"InstanceId\\": \\"eip-wz9fi6qboho9fwgx7****\\",\\n  \\"InstanceType\\": \\"EIP\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeHighDefinitionMonitorLogAttributeResponse>\\n<RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457</RequestId>\\n<LogStore>hdmonitor</LogStore>\\n<InstanceId>eip-wz9fi6qboho9fwgx7****</InstanceId>\\n<InstanceType>EIP</InstanceType>\\n<LogProject>hdmonitor-cn-shenzhen-1658206966225390</LogProject>\\n<Success>true</Success>\\n</DescribeHighDefinitionMonitorLogAttributeResponse>","errorExample":""}]',
      'title' => '查询EIP秒级监控的SLS log信息',
      'summary' => '调用DescribeHighDefinitionMonitorLogAttribute接口查询EIP高精度秒级监控的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListPublicIpAddressPools' => 
    array (
      'summary' => '调用ListPublicIpAddressPools接口查询可使用的IP地址池信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PublicIpAddressPoolIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IP地址池的实例ID列表。

您最多可输入100个IP地址池的实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IP地址池的实例ID列表。

您最多可输入100个IP地址池的实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pippool-6wetvn6fumkgycssx****',
            ),
            'required' => false,
            'maxItems' => 100,
            'minItems' => 0,
          ),
        ),
        1 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池实例状态。取值：
- **Created**：可用。
- **Deleting**：删除中。
- **Modifying**：修改中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Created',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量。取值范围：**10**~**100**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        4 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：

- **BGP**（默认值）：BGP（多线）线路。

- **BGP_PRO**：BGP（多线）\\_精品线路。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

如果您是单线带宽的白名单用户，您还可以选择以下类型：
-  **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        5 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池实例的名称。

描述可以为空，或输入1~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPoolName',
          ),
        ),
        6 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会查询可使用的IP地址池信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4pcdvf****',
          ),
        ),
        8 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IP地址池所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
        10 => 
        array (
          'name' => 'SecurityProtectionEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启DDoS防护（增强版）。取值：
- **false**：不开启。
- **true**：开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '本次请求条件下的数据总量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PublicIpAddressPoolList' => 
              array (
                'description' => 'IP地址池的实例列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IP地址池的实例结构体。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PublicIpAddressPoolId' => 
                    array (
                      'description' => 'IP地址池的实例ID。',
                      'type' => 'string',
                      'example' => 'pippool-6wetvn6fumkgycssx****',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '要查询的IP地址池所在的地域ID。
',
                      'type' => 'string',
                      'example' => 'cn-chengdu',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                      'type' => 'string',
                      'example' => '2022-05-10T01:37:38Z',
                    ),
                    'Isp' => 
                    array (
                      'description' => '线路类型。

- **BGP**：BGP（多线）线路。

- **BGP_PRO**：BGP（多线）\\_精品线路。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

如果您是单线带宽的白名单用户，返回类型还可能为：
-  **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，返回**BGP_FinanceCloud**。',
                      'type' => 'string',
                      'example' => 'BGP',
                    ),
                    'Name' => 
                    array (
                      'description' => 'IP地址池实例的名称。
',
                      'type' => 'string',
                      'example' => 'AddressPoolName',
                    ),
                    'Status' => 
                    array (
                      'description' => 'IP地址池实例状态。
- **Created**：可用。
- **Deleting**：删除中。
- **Modifying**：修改中。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'Description' => 
                    array (
                      'description' => 'IP地址池实例的描述。',
                      'type' => 'string',
                      'example' => 'AddressPoolDescription',
                    ),
                    'TotalIpNum' => 
                    array (
                      'description' => '公网IP地址池可用IP地址总数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                    'UsedIpNum' => 
                    array (
                      'description' => '公网IP地址池已用IP地址数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '20',
                    ),
                    'IpAddressRemaining' => 
                    array (
                      'description' => '是否还有空闲的IP地址。
- **true**：是。
- **false**：否。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'UserType' => 
                    array (
                      'description' => '用户的类型。取值：
- **admin**：管理员，表示可以删除、修改、查询IP地址池以及为IP地址池分配弹性公网IP（Elastic IP Address，简称EIP）等操作。
- **user**：普通用户，表示只能为IP地址池分配EIP以及查询IP地址池，但是无法修改以及删除IP地址池。',
                      'type' => 'boolean',
                      'example' => 'admin',
                    ),
                    'OwnerId' => 
                    array (
                      'description' => 'IP地址池所属的阿里云账号（主账号）。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '121012345612*****',
                    ),
                    'ShareType' => 
                    array (
                      'description' => 'IP地址池的共享类型。

- **Shared**：表示该IP地址池为共享的IP地址池。
- 空：表示该IP地址池不是共享的IP地址池。',
                      'type' => 'string',
                      'example' => 'Shared',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => 'IP地址池所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-acfmxazb4pcdvf****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                        ),
                      ),
                    ),
                    'BizType' => 
                    array (
                      'description' => 'IP地址池的业务类型。
- **CloudBox**：云盒。仅云盒用户支持该类型。
- **Default**（默认值）：默认，表示非特殊类型。',
                      'type' => 'string',
                      'example' => 'CloudBox',
                    ),
                    'Zones' => 
                    array (
                      'description' => 'IP地址池的可用区。
仅当IP地址池业务类型为云盒时，返回该参数。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'IP地址池的可用区。
仅当IP地址池业务类型为云盒时，返回该参数。',
                        'type' => 'string',
                        'example' => 'ap-southeast-1-lzdvn-cb',
                      ),
                    ),
                    'SecurityProtectionTypes' => 
                    array (
                      'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。',
                        'type' => 'string',
                        'example' => 'AntiDDoS_Enhanced',
                      ),
                    ),
                    'BusinessStatus' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Isp',
            'errorMessage' => 'The param of Isp [%s] is illegal.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 1,\\n  \\"PublicIpAddressPoolList\\": [\\n    {\\n      \\"PublicIpAddressPoolId\\": \\"pippool-6wetvn6fumkgycssx****\\",\\n      \\"RegionId\\": \\"cn-chengdu\\",\\n      \\"CreationTime\\": \\"2022-05-10T01:37:38Z\\",\\n      \\"Isp\\": \\"BGP\\",\\n      \\"Name\\": \\"AddressPoolName\\",\\n      \\"Status\\": \\"Created\\",\\n      \\"Description\\": \\"AddressPoolDescription\\",\\n      \\"TotalIpNum\\": 100,\\n      \\"UsedIpNum\\": 20,\\n      \\"IpAddressRemaining\\": true,\\n      \\"UserType\\": true,\\n      \\"OwnerId\\": 0,\\n      \\"ShareType\\": \\"Shared\\",\\n      \\"ResourceGroupId\\": \\"rg-acfmxazb4pcdvf****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceDept\\"\\n        }\\n      ],\\n      \\"BizType\\": \\"CloudBox\\",\\n      \\"Zones\\": [\\n        \\"ap-southeast-1-lzdvn-cb\\"\\n      ],\\n      \\"SecurityProtectionTypes\\": [\\n        \\"AntiDDoS_Enhanced\\"\\n      ],\\n      \\"BusinessStatus\\": \\"\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListPublicIpAddressPoolsResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>1</TotalCount>\\n    <PublicIpAddressPoolList>\\n        <PublicIpAddressPoolId>pippool-6wetvn6fumkgycssx****</PublicIpAddressPoolId>\\n        <RegionId>cn-chengdu</RegionId>\\n        <CreationTime>2022-05-10T01:37:38Z</CreationTime>\\n        <Isp>BGP</Isp>\\n        <Name>AddressPoolName</Name>\\n        <Status>Created</Status>\\n        <Description>AddressPoolDescription</Description>\\n        <TotalIpNum>100</TotalIpNum>\\n        <UsedIpNum>20</UsedIpNum>\\n        <IpAddressRemaining>true</IpAddressRemaining>\\n        <UserType>false</UserType>\\n        <ShareType>Shared</ShareType>\\n        <ResourceGroupId>rg-acfmxazb4pcdvf****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceDept</Value>\\n        </Tags>\\n        <BizType>CloudBox</BizType>\\n        <Zones>ap-southeast-1-lzdvn-cb</Zones>\\n    </PublicIpAddressPoolList>\\n</ListPublicIpAddressPoolsResponse>","errorExample":""}]',
      'title' => '查询IP地址池信息',
      'description' => '

',
    ),
    'ListPublicIpAddressPoolCidrBlocks' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pippool-6wetvn6fumkgycssx****',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址网段。',
            'type' => 'string',
            'required' => false,
            'example' => '47.0.XX.XX/24',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本次读取的最大数据记录数量，取值范围：**10**~**100**，默认为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会查询IP地址池中的IP地址网段信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IP地址网段所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '本次请求条件下的数据总量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PublicIpPoolCidrBlockList' => 
              array (
                'description' => 'IP地址池的IP地址网段数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IP地址池的IP地址网段结构体。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PublicIpAddressPoolId' => 
                    array (
                      'description' => 'IP地址池的实例ID。',
                      'type' => 'string',
                      'example' => 'pippool-6wetvn6fumkgycssx****',
                    ),
                    'CidrBlock' => 
                    array (
                      'description' => 'IP地址段。',
                      'type' => 'string',
                      'example' => '47.0.XX.XX/24',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                      'type' => 'string',
                      'example' => '2022-05-10T01:37:38Z',
                    ),
                    'Status' => 
                    array (
                      'description' => 'IP地址池中的IP地址网段状态。取值：
- **Created**：可用。
- **Deleting**：删除中。
- **Modifying**：修改中。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'UsedIpNum' => 
                    array (
                      'description' => 'IP地址池中IP地址网段的可用IP地址总数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '20',
                    ),
                    'TotalIpNum' => 
                    array (
                      'description' => 'IP地址池中IP地址网段的已用IP地址数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '20',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 10,\\n  \\"PublicIpPoolCidrBlockList\\": [\\n    {\\n      \\"PublicIpAddressPoolId\\": \\"pippool-6wetvn6fumkgycssx****\\",\\n      \\"CidrBlock\\": \\"47.0.XX.XX/24\\",\\n      \\"CreationTime\\": \\"2022-05-10T01:37:38Z\\",\\n      \\"Status\\": \\"Created\\",\\n      \\"UsedIpNum\\": 20,\\n      \\"TotalIpNum\\": 20\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListPublicIpAddressPoolCidrBlocksResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <MaxResults>10</MaxResults>\\n    <TotalCount>10</TotalCount>\\n    <PublicIpPoolCidrBlockList>\\n        <PublicIpAddressPoolId>pippool-6wetvn6fumkgycssx****</PublicIpAddressPoolId>\\n        <CidrBlock>47.0.XX.XX/24</CidrBlock>\\n        <CreationTime>2022-05-10T01:37:38Z</CreationTime>\\n        <Status>Created</Status>\\n        <UsedIpNum>20</UsedIpNum>\\n        <TotalIpNum>20</TotalIpNum>\\n    </PublicIpPoolCidrBlockList>\\n</ListPublicIpAddressPoolCidrBlocksResponse>","errorExample":""}]',
      'title' => '查询IP地址池的地址段信息',
      'summary' => '调用ListPublicIpAddressPoolCidrBlocks接口查询IP地址池中的IP地址网段信息。',
    ),
    'AllocateEipAddress' => 
    array (
      'summary' => '申请弹性公网IP（Elastic IP Address，简称EIP）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性公网IP所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的带宽峰值。单位：Mbps。

- 当**InstanceChargeType**取值为**PostPaid**，且**InternetChargeType**取值为**PayByBandwidth**时，**Bandwidth**取值范围为**1**~**500**。

- 当**InstanceChargeType**取值为**PostPaid**，且**InternetChargeType**取值为**PayByTraffic**时，**Bandwidth**取值范围为**1**~**200**。

- 当**InstanceChargeType**取值为**PrePaid**时，**Bandwidth**取值范围为**1**~**1000**。

默认值：**5** Mbps。  ',
            'type' => 'string',
            'required' => false,
            'example' => '5',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买时长。

当**PricingCycle**取值**Month**时，**Period**取值范围为**1**~**9**。

当**PricingCycle**取值**Year**时，**Period**取值范围为**1**~**5**。

当**InstanceChargeType**参数的值为**PrePaid**时，该参数必选，当**InstanceChargeType**参数的值为**PostPaid**时，该参数不填。




',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'ISP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：
- **BGP**（默认值）：BGP（多线）线路。目前全部地域都支持BGP（多线）线路EIP。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、日本（东京）、马来西亚（吉隆坡）、菲律宾（马尼拉）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路EIP。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

- 如果您是单线带宽的白名单用户，您还可以选择以下类型：
    -  **ChinaTelecom**：中国电信
    - **ChinaUnicom**：中国联通
    - **ChinaMobile**：中国移动
    - **ChinaTelecom_L2**：中国电信L2
    - **ChinaUnicom_L2**：中国联通L2
    - **ChinaMobile_L2**：中国移动L2
- 如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        4 => 
        array (
          'name' => 'ActivityId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '特殊活动ID，无需配置此参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '123456',
          ),
        ),
        5 => 
        array (
          'name' => 'Netmode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，仅取值为**public**（默认值），表示公网。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        6 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动付费，取值：

- **false**（默认值）：不开启自动付费，生成订单后需要到订单中心完成支付。

- **true**：开启自动付费，自动支付订单。

当**InstanceChargeType**参数的值为**PrePaid**时，该参数必选；当**InstanceChargeType**参数的值为**PostPaid**时，该参数可不填。


',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月的计费周期，取值：
- **Month**（默认值）：按月付费。
- **Year**：按年付费。

当**InstanceChargeType**参数的值为**PrePaid**时，该参数必选；当**InstanceChargeType**参数的值为**PostPaid**时，该参数可不填。


',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的计费方式，取值：
          
- **PrePaid**：包年包月。

- **PostPaid**（默认值）：按量计费。

当**InstanceChargeType**取值为**PrePaid**时，**InternetChargeType**必须取值**PayByBandwidth**；当**InstanceChargeType**取值为**PostPaid**时，**InternetChargeType**可取值**PayByBandwidth**或**PayByTraffic**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'PostPaid',
          ),
        ),
        9 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的计量方式，取值：

- **PayByBandwidth**（默认值）：按带宽计费。

- **PayByTraffic**：按流量计费。

当**InstanceChargeType**取值为**PrePaid**时，**InternetChargeType**必须取值**PayByBandwidth**。

当**InstanceChargeType**取值为**PostPaid**时，**InternetChargeType**可取值**PayByBandwidth**或**PayByTraffic**。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByTraffic',
            'default' => 'PayByBandwidth',
          ),
        ),
        10 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazffggds****',
          ),
        ),
        11 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        12 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的名称。

长度为1~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。

> 创建预付费的EIP实例时，不支持设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP1',
          ),
        ),
        13 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的描述。

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。
> 创建预付费的EIP实例时，不支持设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        14 => 
        array (
          'name' => 'SecurityProtectionTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

您最多可以设置10个安全防护级别。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

您最多可以设置10个安全防护级别。',
              'type' => 'string',
              'required' => false,
              'example' => 'AntiDDoS_Enhanced',
            ),
            'required' => false,
            'example' => 'AntiDDoS_Enhanced',
            'maxItems' => 10,
          ),
        ),
        15 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池ID。

EIP将从该IP地址池中分配。

IP地址池功能默认不开放。如需使用，请在配额中心申请IP地址池功能权益配额。具体操作，请参见[通过配额中心提升配额](~~108213~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'pippool-2vc0kxcedhquybdsz****',
          ),
        ),
        16 => 
        array (
          'name' => 'Zone',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的可用区。

当**PublicIpAddressPoolId**中指定的IP地址池为云盒业务类型时，该参数默认与IP地址池的可用区一致。

如何查看IP地址池业务类型，请参见[ListPublicIpAddressPools](~~429098~~)',
            'type' => 'string',
            'required' => false,
            'example' => 'ap-southeast-1-lzdvn-cb',
          ),
        ),
        17 => 
        array (
          'name' => 'IpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的IP地址。

**IpAddress**和**InstanceId**参数仅需传入一个，如果都不传，系统会随机申请EIP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.XX.XX',
          ),
        ),
        18 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的实例ID。

**IpAddress**和**InstanceId**参数仅需传入一个，如果都不传，系统会随机申请EIP。',
            'type' => 'string',
            'required' => false,
            'example' => 'eip-25877c70gddh****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。<props="china">当InstanceChargeType（EIP的计费方式）取值为PrePaid（包年包月）时，返回该参数。如果AutoPay（自动付费）未打开，即未开启自动支付账单时，请前往[订单中心](https://usercenter2.aliyun.com/order/list)完成支付。</props>
<props="intl">当InstanceChargeType（EIP的计费方式）取值为PrePaid（包年包月）时，返回该参数。如果AutoPay（自动付费）未打开，即未开启自动支付账单时，请前往[订单中心](https://usercenter2-intl.aliyun.com/order/list)完成支付。</props>',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。仅**InstanceChargeType**取值为**PostPaid**时返回。',
                'type' => 'string',
                'example' => 'rg-acfmxazfdgdg****',
              ),
              'EipAddress' => 
              array (
                'description' => '分配的EIP。仅**InstanceChargeType**取值为**PostPaid**时返回。',
                'type' => 'string',
                'example' => '192.0.XX.XX',
              ),
              'AllocationId' => 
              array (
                'description' => 'EIP实例的ID。',
                'type' => 'string',
                'example' => 'eip-25877c70gddh****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'COMMODITY_NO_EXIST',
            'errorMessage' => 'commodity is not exist',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Eip',
            'errorMessage' => 'Elastic IP address quota exceeded',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified value of "InternetChargeType" is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'InsufficientBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          4 => 
          array (
            'errorCode' => 'ReserveIpFail',
            'errorMessage' => 'Reserve eip failed.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidRegion.NotSupport',
            'errorMessage' => 'The specified region does not support.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBandwidth.Malformed',
            'errorMessage' => 'The specified Bandwidth is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'INSTANCE_TYPE_NOT_SUPPORT',
            'errorMessage' => 'The instance type is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'QueryParameter.Illegal',
            'errorMessage' => 'query parameter illegal',
          ),
          9 => 
          array (
            'errorCode' => 'TokenVerfiy.Failed',
            'errorMessage' => 'token verify failed.',
          ),
          10 => 
          array (
            'errorCode' => 'OrderFailed',
            'errorMessage' => 'The Account failed to create order.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceeded.LargeSpecEip',
            'errorMessage' => 'Elastic IP address with large spec quota exceeded.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          13 => 
          array (
            'errorCode' => 'PAYFOR.CREDIT_PAY_INSUFFICIENT_BALANCE',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          14 => 
          array (
            'errorCode' => 'SYSTEM.SALE_VALIDATE_UNEXPECTED_ERROR',
            'errorMessage' => 'You have arrears and do not meet the purchase conditions.',
          ),
          15 => 
          array (
            'errorCode' => 'Trade_Sync_Create_Sub_ERROR',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidComponent.EipBandwidthMax',
            'errorMessage' => 'The eip_bandwidth_max component is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.RiskControl',
            'errorMessage' => 'Risk control check failed.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.SaleValidate',
            'errorMessage' => 'Validate sale condition with subArticle failed.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.OrderParamComponent',
            'errorMessage' => 'Product order param has invalid component.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.SaleExpression',
            'errorMessage' => 'Get the sales expression exception attached to the item.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.CompleteUserInfo',
            'errorMessage' => 'Complete user info failed.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.QueryPrice',
            'errorMessage' => 'Query price failed when create order.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.InsufficientEIP',
            'errorMessage' => 'Eip resource is not enough.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.InvokeInnerApi',
            'errorMessage' => 'Failed to invoke inner api.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.AccountMoneyInvalid',
            'errorMessage' => 'Account money is invalid.',
          ),
          26 => 
          array (
            'errorCode' => 'OperationFailed.QueryCredtiInfo',
            'errorMessage' => 'Failed to query credit info.',
          ),
          27 => 
          array (
            'errorCode' => 'FrequentPurchase.EIP',
            'errorMessage' => 'eip frequent purchase',
          ),
          28 => 
          array (
            'errorCode' => 'OperationFailed.QueryUserLabel',
            'errorMessage' => 'Failed to query user label info.',
          ),
          29 => 
          array (
            'errorCode' => 'PAY.INSUFFICIENT_BALANCE',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          30 => 
          array (
            'errorCode' => 'PAY.MAYI_WITHHOLDING_AGREEMENT_ILLEGAL',
            'errorMessage' => 'User withhoding argeement is illegal.',
          ),
          31 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'FThe Account failed to create order.',
          ),
          32 => 
          array (
            'errorCode' => 'IellgalParameter.OwnerAccount',
            'errorMessage' => 'The specified parameter OwnerAccount is not valid.',
          ),
          33 => 
          array (
            'errorCode' => 'ResourceNotFound.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool is not found.',
          ),
          34 => 
          array (
            'errorCode' => 'ResourceNotEnough.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool is not enough.',
          ),
          35 => 
          array (
            'errorCode' => 'Mismatch.IpAndPublicIpAddressPool',
            'errorMessage' => 'The Ip and PublicIpAddressPool are mismatched.',
          ),
          36 => 
          array (
            'errorCode' => 'CreditPayInsufficientBalance',
            'errorMessage' => 'The balance is insufficient, please contact your channel partner to increase the balance',
          ),
          37 => 
          array (
            'errorCode' => 'OperationDenied.NotOpenDdosOriginProtectService',
            'errorMessage' => 'The operation is not allowed because of you do not open Ddos Origin Protection Service',
          ),
          38 => 
          array (
            'errorCode' => 'IncorrectStatus.PublicIpAddressPool',
            'errorMessage' => 'The status of PublicIpAddressPool is incorrect.',
          ),
          39 => 
          array (
            'errorCode' => 'IllegalParam.Isp',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          40 => 
          array (
            'errorCode' => 'AccountMoneyValidateError',
            'errorMessage' => 'The available amount of the account is insufficient.',
          ),
          41 => 
          array (
            'errorCode' => 'OrderFailed.ConcurrentOperate',
            'errorMessage' => 'Failed to create the order due to concurrent operations.',
          ),
          42 => 
          array (
            'errorCode' => 'OperationFailed.BasicInfoUncompleted',
            'errorMessage' => 'Your information is incomplete. Complete your information before the operation.',
          ),
          43 => 
          array (
            'errorCode' => 'OperationFailed.QuotaNotEnough',
            'errorMessage' => 'Your quota is insufficient. Please contact your channel partner to increase your quota',
          ),
          44 => 
          array (
            'errorCode' => 'ExclusiveParam.ZoneAndPublicIpAddressPoolId',
            'errorMessage' => 'The Zone and PublicIpAddressPoolId parameters are mutually exclusive.',
          ),
          45 => 
          array (
            'errorCode' => 'IllegalParam.Zone',
            'errorMessage' => 'The specified zone is invalid.',
          ),
          46 => 
          array (
            'errorCode' => 'OperationFailed.AllocateUnfamiliarIp',
            'errorMessage' => 'The operation failed because only IP addresses used within the last seven days can be allocated.',
          ),
          47 => 
          array (
            'errorCode' => 'Ip.Allocated',
            'errorMessage' => 'The reserve ip has been allocated.',
          ),
          48 => 
          array (
            'errorCode' => 'IncorrectStatus.Ip',
            'errorMessage' => 'The status of ip is incorrect.',
          ),
          49 => 
          array (
            'errorCode' => 'UnsupportedFeature.AllocateEipAddressWithZone',
            'errorMessage' => 'The feature of AllocateEipAddressWithZone is not supported.',
          ),
          50 => 
          array (
            'errorCode' => 'ResourceNotFound.Ip',
            'errorMessage' => 'The specified ip is not found.',
          ),
          51 => 
          array (
            'errorCode' => 'OperationFailed.CreditPayInsufficientBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          52 => 
          array (
            'errorCode' => 'OperationFailed.ResourceNotEnough',
            'errorMessage' => 'The resources you have applied for are insufficient.',
          ),
          53 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of bandwidth is illegal.',
          ),
          54 => 
          array (
            'errorCode' => 'OperationFailed.IpIsLocked',
            'errorMessage' => 'The operation is failed because of ip is locked.',
          ),
          55 => 
          array (
            'errorCode' => 'Mismatch.EipSecurityProtectionTypeAndPoolSecurityProtectionType',
            'errorMessage' => 'The EipSecurityProtectionType and PoolSecurityProtectionType are mismatched.',
          ),
          56 => 
          array (
            'errorCode' => 'IllegalParam.SecurityProtectionTypes',
            'errorMessage' => 'The param of securityProtectionTypes is illegal.',
          ),
          57 => 
          array (
            'errorCode' => 'IllegalParam.ServiceLocation',
            'errorMessage' => 'The param of serviceLocation is illegal.',
          ),
          58 => 
          array (
            'errorCode' => 'UnsupportedFeature.Isp',
            'errorMessage' => 'The feature of Isp is not supported.',
          ),
          59 => 
          array (
            'errorCode' => 'ExclusiveParam.ZoneAndIpAddress',
            'errorMessage' => 'The specified  param Zone and IpAddress or InstanceId are mutually exclusive.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "RegionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'FUWU_BIZ_COMMODITY_VERIFY_FAIL',
            'errorMessage' => '????????, ????????PD.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'Request was denied due to conflict with a previous request.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'The Account failed to create order.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.SystemBusy',
            'errorMessage' => 'Operation failed because system is busy.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"OrderId\\": 10,\\n  \\"ResourceGroupId\\": \\"rg-acfmxazfdgdg****\\",\\n  \\"EipAddress\\": \\"192.0.XX.XX\\",\\n  \\"AllocationId\\": \\"eip-25877c70gddh****\\"\\n}","errorExample":""},{"type":"xml","example":"<AllocateEipAddressResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <OrderId>10</OrderId>\\n    <ResourceGroupId>rg-acfmxazfdgdg****</ResourceGroupId>\\n    <EipAddress>192.0.XX.XX</EipAddress>\\n    <AllocationId>eip-25877c70gddh****</AllocationId>\\n</AllocateEipAddressResponse>","errorExample":""}]',
      'title' => '申请弹性公网IP（EIP）',
      'description' => '请确保在使用本接口前，您已充分了解EIP的收费方式和价格。更多信息，请参见[计费概述](~~122035~~)。

调用本接口后将在指定的地域内随机获取一个状态为**Available**的弹性公网IP。弹性公网IP在传输层目前只支持解析ICMP、TCP和UDP协议内容，不支持解析IGMP和SCTP等协议内容。',
    ),
    'AllocateEipAddressPro' => 
    array (
      'summary' => '调用AllocateEipAddressPro申请指定的EIP，可用于特定的网络配置需求。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的IP地址。

**IpAddress**和**InstanceId**参数仅需传入一个，如果都不传，系统会随机申请EIP。

',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.XX.XX',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的实例ID。

**IpAddress**和**InstanceId**参数仅需传入一个，如果都不传，系统会随机申请EIP。
',
            'type' => 'string',
            'required' => false,
            'example' => 'eip-25877c70gddh****',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的带宽峰值，单位：Mbps。

- 当**InstanceChargeType**取值为**PostPaid**，且**InternetChargeType**取值为**PayByBandwidth**时，**Bandwidth**取值范围为**1**~**500**。

- 当**InstanceChargeType**取值为**PostPaid**，且**InternetChargeType**取值为**PayByTraffic**时，**Bandwidth**取值范围为**1**~**200**。

- 当**InstanceChargeType**取值为**PrePaid**时，**Bandwidth**取值范围为**1**~**1000**。

默认值：**5**Mbps。',
            'type' => 'string',
            'required' => false,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买时长。

- 当**PricingCycle**取值**Month**时，**Period**取值范围为**1~9**。

- 当**PricingCycle**取值**Year**时，**Period**取值范围为**1~3**。

如果**InstanceChargeType**参数的值为**PrePaid**时，该参数必选。

如果**InstanceChargeType**参数的值为**PostPaid**时，该参数不填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'ISP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：

- **BGP**（默认值）：BGP（多线）线路。目前全部地域都支持BGP（多线）线路EIP。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、马来西亚（吉隆坡）、菲律宾（马尼拉）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路EIP。


关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

- 如果您是单线带宽的白名单用户，您还可以选择以下类型：
    -  **ChinaTelecom**：中国电信
    - **ChinaUnicom**：中国联通
    - **ChinaMobile**：中国移动
    - **ChinaTelecom_L2**：中国电信L2
    - **ChinaUnicom_L2**：中国联通L2
    - **ChinaMobile_L2**：中国移动L2
- 如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        6 => 
        array (
          'name' => 'Netmode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，仅取值为**public**（默认值），表示公网。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        7 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动付费，取值：

- **false**：不开启自动付费，生成订单后需要到订单中心完成支付。

- **true**：开启自动付费，自动支付订单。

当**InstanceChargeType**参数的值为**PrePaid**时，该参数必选；当**InstanceChargeType**参数的值为**PostPaid**时，该参数可不填。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月的计费周期，取值：

- **Month**（默认值）：按月付费。

- **Year**：按年付费。

当**InstanceChargeType**参数的值为**PrePaid**时，该参数必选；当**InstanceChargeType**参数的值为**PostPaid**时，该参数可不填。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        9 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的计费方式，取值：
          
- **PrePaid**：包年包月。

- **PostPaid**（默认值）：按量计费。

当**InstanceChargeType**取值为**PrePaid**时，**InternetChargeType**必须取值**PayByBandwidth**。

当**InstanceChargeType**取值为**PostPaid**时，**InternetChargeType**可取值**PayByBandwidth**或**PayByTraffic**。',
            'type' => 'string',
            'required' => false,
            'example' => 'PostPaid',
          ),
        ),
        10 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP的计量方式，取值：

- **PayByBandwidth**（默认值）：按带宽计费。

- **PayByTraffic**：按流量计费。

当**InstanceChargeType**取值为**PrePaid**时，**InternetChargeType**必须取值**PayByBandwidth**。

当**InstanceChargeType**取值为**PostPaid**时，**InternetChargeType**可取值**PayByBandwidth**或**PayByTraffic**。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByBandwidth',
            'default' => 'PayByBandwidth',
          ),
        ),
        11 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要指定申请的EIP所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-resourcegroup****',
          ),
        ),
        12 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe6****',
          ),
        ),
        13 => 
        array (
          'name' => 'SecurityProtectionTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

您最多可以为10个EIP设置安全防护级别。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

您最多可以为10个EIP设置安全防护级别。',
              'type' => 'string',
              'required' => false,
              'example' => 'AntiDDoS_Enhanced',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        14 => 
        array (
          'name' => 'PublicIpAddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址池ID。

EIP将从该IP地址池中分配。

IP地址池功能默认不开放。如需使用，请在配额中心申请IP地址池功能权益配额。具体操作，请参见[通过配额中心提升配额](~~108213~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'pippool-2vc0kxcedhquybdsz****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。
<props="china">当InstanceChargeType（要指定申请的EIP的计费方式）取值为PrePaid（包年包月）时，返回该参数。如果AutoPay取值为false，即未开启自动支付账单时，请前往[订单中心](https://usercenter2.aliyun.com/order/list)完成支付。</props>
<props="intl">当InstanceChargeType（要指定申请的EIP的计费方式）取值为PrePaid（包年包月）时，返回该参数。如果AutoPay取值为false，即未开启自动支付账单时，请前往[订单中心](https://usercenter2-intl.aliyun.com/order/list)完成支付。</props>',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20190000',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。仅**InstanceChargeType**取值为**PostPaid**时返回。',
                'type' => 'string',
                'example' => 'rg-resourcegroup****',
              ),
              'EipAddress' => 
              array (
                'description' => '您指定申请的EIP被分配到的IP地址。仅**InstanceChargeType**取值为**PostPaid**时返回。',
                'type' => 'string',
                'example' => '192.0.XX.XX',
              ),
              'AllocationId' => 
              array (
                'description' => 'EIP的ID。',
                'type' => 'string',
                'example' => 'eip-25877c70gddh****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'FrequentPurchase.EIP',
            'errorMessage' => 'eip frequent purchase',
          ),
          1 => 
          array (
            'errorCode' => 'COMMODITY_NO_EXIST',
            'errorMessage' => 'commodity is not exist',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.Eip',
            'errorMessage' => 'Elastic IP address quota exceeded',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified value of "InternetChargeType" is not valid',
          ),
          4 => 
          array (
            'errorCode' => 'InsufficientBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          5 => 
          array (
            'errorCode' => 'ReserveIpFail',
            'errorMessage' => 'Reserve eip failed.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRegion.NotSupport',
            'errorMessage' => 'The specified region does not support.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBandwidth.Malformed',
            'errorMessage' => 'The specified Bandwidth is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'INSTANCE_TYPE_NOT_SUPPORT',
            'errorMessage' => 'The instance type is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'QueryParameter.Illegal',
            'errorMessage' => 'query parameter illegal',
          ),
          10 => 
          array (
            'errorCode' => 'SYSTEM.UNKNOWN.ERROR',
            'errorMessage' => 'The Account failed to create order.',
          ),
          11 => 
          array (
            'errorCode' => 'TokenVerfiy.Failed',
            'errorMessage' => 'token verify failed.',
          ),
          12 => 
          array (
            'errorCode' => 'OrderFailed',
            'errorMessage' => 'The Account failed to create order.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.LargeSpecEip',
            'errorMessage' => 'Elastic IP address with large spec quota exceeded.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          15 => 
          array (
            'errorCode' => 'Invalid.Reserve.Ip',
            'errorMessage' => 'The reserve ip is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'Ip.Allocated',
            'errorMessage' => 'The reserve ip has been allocated.',
          ),
          17 => 
          array (
            'errorCode' => 'Ip.Keeped',
            'errorMessage' => 'The reserve ip been keeped in an hour.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.AllocateUnfamiliarIp',
            'errorMessage' => 'The operation failed because only IP addresses used within the last seven days can be allocated.',
          ),
          19 => 
          array (
            'errorCode' => 'INVALID_INSTANCE_STATUS',
            'errorMessage' => 'The instance status is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.InstanceNotExist',
            'errorMessage' => 'Eip instanceId does not exist.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidStatus.ValueNotSupported',
            'errorMessage' => 'The specified status is not supported.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.RiskControl',
            'errorMessage' => 'Risk control check failed.',
          ),
          23 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'The Account failed to create order.',
          ),
          24 => 
          array (
            'errorCode' => 'ResourceNotEnough.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool is not enough.',
          ),
          25 => 
          array (
            'errorCode' => 'Mismatch.IpAndPublicIpAddressPool',
            'errorMessage' => 'The Ip and PublicIpAddressPool are mismatched.',
          ),
          26 => 
          array (
            'errorCode' => 'ResourceNotFound.PublicIpAddressPool',
            'errorMessage' => 'The specified resource of PublicIpAddressPool is not found.',
          ),
          27 => 
          array (
            'errorCode' => 'ResourceNotFound.Ip',
            'errorMessage' => 'The specified ip is not found.',
          ),
          28 => 
          array (
            'errorCode' => 'OperationDenied.IpBelongToOtherUser',
            'errorMessage' => 'The operation is not allowed because of ip belong to other user.',
          ),
          29 => 
          array (
            'errorCode' => 'IncorrectStatus.Ip',
            'errorMessage' => 'The status of ip is incorrect.',
          ),
          30 => 
          array (
            'errorCode' => 'OperationFailed.IpIsLocked',
            'errorMessage' => 'The operation is failed because of ip is locked.',
          ),
          31 => 
          array (
            'errorCode' => 'Mismatch.IpAndIsp',
            'errorMessage' => 'The specified IP address does not match the ISP.',
          ),
          32 => 
          array (
            'errorCode' => 'IncorrectStatus.PublicIpAddressPool',
            'errorMessage' => 'The status of PublicIpAddressPool is incorrect.',
          ),
          33 => 
          array (
            'errorCode' => 'IllegalParam.IpAddress',
            'errorMessage' => 'The specified IpAddress (%s) is illegal.',
          ),
          34 => 
          array (
            'errorCode' => 'OperationFailed.ResourceNotEnough',
            'errorMessage' => 'The resources you have applied for are insufficient.',
          ),
          35 => 
          array (
            'errorCode' => 'Mismatch.EipSecurityProtectionTypeAndPoolSecurityProtectionType',
            'errorMessage' => 'The EipSecurityProtectionType and PoolSecurityProtectionType are mismatched.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "RegionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'FUWU_BIZ_COMMODITY_VERIFY_FAIL',
            'errorMessage' => '????????, ????????PD.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"OrderId\\": 20190000,\\n  \\"ResourceGroupId\\": \\"rg-resourcegroup****\\",\\n  \\"EipAddress\\": \\"192.0.XX.XX\\",\\n  \\"AllocationId\\": \\"eip-25877c70gddh****\\"\\n}","errorExample":""},{"type":"xml","example":"<AllocateEipAddressProResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <OrderId>20190000</OrderId>\\n    <ResourceGroupId>rg-resourcegroup****</ResourceGroupId>\\n    <EipAddress>192.0.XX.XX</EipAddress>\\n    <AllocationId>eip-25877c70gddh****</AllocationId>\\n</AllocateEipAddressProResponse>","errorExample":""}]',
      'title' => '申请指定的EIP',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleaseEipAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要释放的EIP所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要释放的EIP的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zeerraiwb7uj6i0d****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回请求列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '748C38F6-9A3D-482E-83FB-DB6C39C68AEA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'Current elastic IP status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.ChargeTypeIsPrepaid',
            'errorMessage' => 'It\'s forbidden to release a prepaid EIP',
          ),
          2 => 
          array (
            'errorCode' => 'TaskConflict.AssociateGlobalAccelerationInstance',
            'errorMessage' => 'Operate too frequent.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidOperation.DeletionProtection',
            'errorMessage' => 'The instance cannnot delete because of deletion protecion.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.ReleaseSegmentEip',
            'errorMessage' => 'Release single segment eip is forbidden.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'The eip instance owner error',
          ),
          6 => 
          array (
            'errorCode' => 'Mismatch.%sAnd%s',
            'errorMessage' => 'The %s and %s are mismatched.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation ID is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified region is not found during access authentication.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"748C38F6-9A3D-482E-83FB-DB6C39C68AEA\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleaseEipAddressResponse>\\n    <RequestId>748C38F6-9A3D-482E-83FB-DB6C39C68AEA</RequestId>\\n</ReleaseEipAddressResponse>","errorExample":""}]',
      'title' => '释放指定EIP',
      'summary' => '调用ReleaseEipAddress接口释放指定的弹性公网IP（EIP）。',
      'description' => '在调用本接口时，请了解以下内容：

- 释放EIP前，请确保满足以下条件：

    - 只有处于**Available**状态的EIP才可以被释放。

    - 仅按量计费类型的EIP支持释放，包年包月类型的EIP不支持释放。

- **ReleaseEipAddress**接口属于异步接口，即系统会先返回一个请求ID，但该EIP实例并未释放完成，系统后台的释放任务仍在进行。您可以调用[DescribeEipAddresses](~~120193~~)查询EIP实例的状态：

    - 当EIP实例处于**Releasing**状态时，表示EIP实例正在释放中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当查询不到该EIP实例时，表示EIP实例释放完成。

- **ReleaseEipAddress**接口不支持并发释放同一个EIP实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AllocateEipSegmentAddress' => 
    array (
      'summary' => '连续EIP是一组按序排列的弹性公网IP地址，您可以在进行网络设计时，为需要连续公网IP地址的云资源批量申请和使用这些IP地址。您可以通过调用AllocateEipSegmentAddress接口申请连续EIP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的带宽峰值。单位：Mbps。

- 当**InternetChargeType**取值为**PayByBandwidth**时，**Bandwidth**取值范围为**1**~**500**。

- 当**InternetChargeType**取值为**PayByTraffic**时，**Bandwidth**取值范围为**1**~**200**。

默认值为**5** Mbps。',
            'type' => 'string',
            'required' => false,
            'example' => '5',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'EipMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP的掩码，取值：

- **28**：单次调用，系统将分配16个连续EIP。

- **27**：单次调用，系统将分配32个连续EIP。

- **26**：单次调用，系统将分配64个连续EIP。

- **25**：单次调用，系统将分配128个连续EIP。

- **24**：单次调用，系统将分配256个连续EIP。

>由于IP地址保留，实际申请到的连续EIP可能缺少1、3或者4个EIP。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '28',
          ),
        ),
        4 => 
        array (
          'name' => 'Netmode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，仅取值：**public**，表示公网。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        5 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP的计费方式，取值：

- **PayByBandwidth**（默认值）：按固定带宽计费。

- **PayByTraffic**：按使用流量计费。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByBandwidth',
            'default' => 'PayByBandwidth',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        7 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：

- **BGP**（默认值）：BGP（多线）线路。目前全部地域都支持BGP（多线）线路EIP。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、日本（东京）、马来西亚（吉隆坡）、菲律宾（马尼拉）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路EIP。

关于BGP（多线）线路和BGP（多线）_精品线路的更多信息，请参见[EIP线路类型](~~32321~~)。

如果您是单线带宽的白名单用户，您还可以选择以下类型：
-  **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        8 => 
        array (
          'name' => 'Zone',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP组的可用区。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7A6301A-64BA-41EC-8284-8F4838C15D1F',
              ),
              'EipSegmentInstanceId' => 
              array (
                'description' => '连续EIP组的实例ID。',
                'type' => 'string',
                'example' => 'eipsg-2zett8ba055tbsxme****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'COMMODITY_NO_EXIST',
            'errorMessage' => 'commodity is not exist',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Eip',
            'errorMessage' => 'Elastic IP address quota exceeded',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Specified value of "InternetChargeType" is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'InsufficientBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          4 => 
          array (
            'errorCode' => 'ReserveIpFail',
            'errorMessage' => 'Reserve eip failed.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidRegion.NotSupport',
            'errorMessage' => 'The specified region does not support.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBandwidth.Malformed',
            'errorMessage' => 'The specified Bandwidth is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'INSTANCE_TYPE_NOT_SUPPORT',
            'errorMessage' => 'The instance type is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'QueryParameter.Illegal',
            'errorMessage' => 'query parameter illegal',
          ),
          9 => 
          array (
            'errorCode' => 'TokenVerfiy.Failed',
            'errorMessage' => 'token verify failed.',
          ),
          10 => 
          array (
            'errorCode' => 'OrderFailed',
            'errorMessage' => 'The Account failed to create order.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceeded.LargeSpecEip',
            'errorMessage' => 'Elastic IP address with large spec quota exceeded.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          13 => 
          array (
            'errorCode' => 'PAYFOR.CREDIT_PAY_INSUFFICIENT_BALANCE',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          14 => 
          array (
            'errorCode' => 'SYSTEM.SALE_VALIDATE_UNEXPECTED_ERROR',
            'errorMessage' => 'You have arrears and do not meet the purchase conditions.',
          ),
          15 => 
          array (
            'errorCode' => 'Trade_Sync_Create_Sub_ERROR',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidComponent.EipBandwidthMax',
            'errorMessage' => 'The eip_bandwidth_max component is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.RiskControl',
            'errorMessage' => 'Risk control check failed.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.SaleValidate',
            'errorMessage' => 'Validate sale condition with subArticle failed.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.OrderParamComponent',
            'errorMessage' => 'Product order param has invalid component.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.SaleExpression',
            'errorMessage' => 'Get the sales expression exception attached to the item.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.CompleteUserInfo',
            'errorMessage' => 'Complete user info failed.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.QueryPrice',
            'errorMessage' => 'Query price failed when create order.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.InsufficientEIP',
            'errorMessage' => 'Eip resource is not enough.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.InvokeInnerApi',
            'errorMessage' => 'Failed to invoke inner api.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.AccountMoneyInvalid',
            'errorMessage' => 'Account money is invalid.',
          ),
          26 => 
          array (
            'errorCode' => 'OperationFailed.QueryCredtiInfo',
            'errorMessage' => 'Failed to query credit info.',
          ),
          27 => 
          array (
            'errorCode' => 'FrequentPurchase.EIP',
            'errorMessage' => 'eip frequent purchase',
          ),
          28 => 
          array (
            'errorCode' => 'OperationFailed.QueryUserLabel',
            'errorMessage' => 'Failed to query user label info.',
          ),
          29 => 
          array (
            'errorCode' => 'PAY.INSUFFICIENT_BALANCE',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          30 => 
          array (
            'errorCode' => 'ORDER.QUANTITY_INVALID',
            'errorMessage' => 'User quota has exceeded the limit.',
          ),
          31 => 
          array (
            'errorCode' => 'PAY.MAYI_WITHHOLDING_AGREEMENT_ILLEGAL',
            'errorMessage' => 'User withhoding argeement is illegal.',
          ),
          32 => 
          array (
            'errorCode' => 'OperationFailed.ChargeTypeInvalid',
            'errorMessage' => 'Operation failed because hybrid netmode do not support PayByTraffic.',
          ),
          33 => 
          array (
            'errorCode' => 'IllegalParam.EipMask',
            'errorMessage' => 'EipMask is illegal.',
          ),
          34 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => 'Name is illegal.',
          ),
          35 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => 'Description is illegal.',
          ),
          36 => 
          array (
            'errorCode' => 'InstanceExist.EipSegment',
            'errorMessage' => 'The eipSegment instance already exists.',
          ),
          37 => 
          array (
            'errorCode' => 'OperationFailed.QuotaExceed',
            'errorMessage' => 'Operation failed because over threshold bandwidth quota exceed.',
          ),
          38 => 
          array (
            'errorCode' => 'OperationFailed.FrequentPurchase',
            'errorMessage' => 'Operation failed because eip frequent purchase.',
          ),
          39 => 
          array (
            'errorCode' => 'OperationFailed.AllocateEipSegment',
            'errorMessage' => 'Operation failed because eip segment is out of stock.',
          ),
          40 => 
          array (
            'errorCode' => 'OperationFailed.CreateOrderFailed',
            'errorMessage' => 'Operation failed because create order failed.',
          ),
          41 => 
          array (
            'errorCode' => 'MissingParam.Bandwidth',
            'errorMessage' => 'The parameter Bandwidth is mandatory when allocate hybrid EipSegment.',
          ),
          42 => 
          array (
            'errorCode' => 'OperationFailed.EipQuotaExceed',
            'errorMessage' => 'Operation failed because eip quota exceed.',
          ),
          43 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'The Account failed to create order.',
          ),
          44 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'Request was denied due to conflict with a previous request.',
          ),
          45 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          46 => 
          array (
            'errorCode' => 'UnsupportedFeature.AllocateEipAddressWithZone',
            'errorMessage' => 'The feature of AllocateEipAddressWithZone is not supported.',
          ),
          47 => 
          array (
            'errorCode' => 'IllegalParam.Zone',
            'errorMessage' => 'The specified zone is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "RegionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'FUWU_BIZ_COMMODITY_VERIFY_FAIL',
            'errorMessage' => '????????, ????????PD.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          1 => 
          array (
            'errorCode' => 'OrderError.EIP',
            'errorMessage' => 'The Account failed to create order.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F7A6301A-64BA-41EC-8284-8F4838C15D1F\\",\\n  \\"EipSegmentInstanceId\\": \\"eipsg-2zett8ba055tbsxme****\\"\\n}","errorExample":""},{"type":"xml","example":"<AllocateEipSegmentAddressResponse>\\n    <RequestId>F7A6301A-64BA-41EC-8284-8F4838C15D1F\\t</RequestId>\\n    <EipSegmentInstanceId>eipsg-2zett8ba055tbsxme****</EipSegmentInstanceId>\\n</AllocateEipSegmentAddressResponse>","errorExample":""}]',
      'title' => '申请连续EIP',
      'description' => '**AllocateEipSegmentAddress**接口属于异步接口，即系统会先返回一个连续EIP组的实例ID，但该连续EIP组并未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeEipSegment](~~156063~~)查询连续EIP组的状态。

- 当连续EIP组处于**Allocating**状态时，表示连续EIP组分配中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当连续EIP组处于**Allocated**状态时，表示连续EIP组已分配完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleaseEipSegmentAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续EIP所属的地域ID。可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SegmentInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要释放的连续EIP组的实例ID。

系统会释放该连续EIP组内的所有EIP。',
            'type' => 'string',
            'required' => true,
            'example' => 'eipsg-2zett8ba055tbsxme****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001sdfg',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7A6301A-64BA-41EC-8284-8F4838C15D1F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'Current elastic IP status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.ChargeTypeIsPrepaid',
            'errorMessage' => 'It\'s forbidden to release a prepaid EIP',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'The eip instance owener error',
          ),
          3 => 
          array (
            'errorCode' => 'TaskConflict.AssociateGlobalAccelerationInstance',
            'errorMessage' => 'Operate too frequent.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOperation.DeletionProtection',
            'errorMessage' => 'The instance cannnot delete because of deletion protecion.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.InstanceNotExist',
            'errorMessage' => 'Operation failed because eip segment instance not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.EipNumInconsistent',
            'errorMessage' => 'Operation failed because the number of eip is inconsistent.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.EipStatusInvalid',
            'errorMessage' => 'Operation failed because eip instance status invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.EipInBwp',
            'errorMessage' => 'Operation failed because eip instance has been added to the bandwidth package.',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.EipInBwp',
            'errorMessage' => 'The EIP has been associated with an EIP bandwidth plan.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation ID is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified region is not found during access authentication.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F7A6301A-64BA-41EC-8284-8F4838C15D1F\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleaseEipSegmentAddressResponse>\\n    <RequestId>F7A6301A-64BA-41EC-8284-8F4838C15D1F</RequestId>\\n</ReleaseEipSegmentAddressResponse>","errorExample":""}]',
      'title' => '释放连续EIP',
      'summary' => '调用ReleaseEipSegmentAddress释放连续EIP。',
      'description' => '- **ReleaseEipSegmentAddress**接口会释放连续EIP组内的所有EIP。

-  **ReleaseEipSegmentAddress**接口属于异步接口，即系统会先返回一个请求ID，但连续EIP并未完成释放，系统后台的释放任务仍在进行。您可以调用[DescribeEipSegment](~~156063~~)查询连续EIP组的状态： 
    - 当连续EIP组处于**Releasing**状态时，表示连续EIP正在释放中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当查询不到该连续EIP组时，表示连续EIP释放完成。

- **ReleaseEipSegmentAddress**接口不支持并发释放同一个连续EIP组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateEipAddress' => 
    array (
      'summary' => '调用AssociateEipAddress将弹性公网IP（EIP）绑定到同地域的云产品实例上。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定云产品实例的EIP所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定云产品实例的EIP的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zeerraiwb7ujsxdc****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定EIP的实例ID。

支持输入NAT网关实例ID、传统型负载均衡CLB实例ID、云服务器ECS实例ID、辅助弹性网卡实例ID、高可用虚拟IP实例ID、IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-2zebb08phyczzawe****',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定EIP的实例的类型，取值：

- **Nat**：NAT网关。

- **SlbInstance**：传统型负载均衡CLB。

- **EcsInstance**（默认值）：云服务器ECS。

- **NetworkInterface**：辅助弹性网卡。

- **HaVip**：高可用虚拟IP。 

- **IpAddress**：IP地址。

> 默认要绑定EIP的实例类型为**EcsInstance**，如果您需要绑定EIP的实例类型不为**EcsInstance**，则该值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定EIP的实例所属地域的ID。

>仅在EIP加入到带宽共享型全球加速实例后，才需要填写该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'PrivateIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机网段内的一个IP地址。

如果不输入该参数，系统根据VPC ID和交换机ID自动分配一个私网IP地址。
> 当**InstanceType**配置为**NetworkInterface**时，该参数必填，需输入要绑定的私网IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定模式，取值：

- **NAT**（默认值）：NAT模式（普通模式）。

- **MULTI_BINDED**：多EIP网卡可见模式。

- **BINDED**：EIP网卡可见模式。


> 仅**InstanceType**配置为**NetworkInterface**时，才需要配置该参数。
',
            'type' => 'string',
            'required' => false,
            'example' => 'NAT',
          ),
        ),
        7 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开通了IPv4网关功能且与EIP同地域的VPC ID。

EIP绑定IP地址时，系统可以根据该VPC的路由配置，使绑定的IP地址具备公网访问能力。

> **InstanceType**取值为**IpAddress**时，即要绑定EIP的实例类型为IP地址时，该参数必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-257gqcdfvx6n****',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAssociation.Duplicated',
            'errorMessage' => 'Specified instance already is associated.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Specified instance is not in VPC.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.Mismatch',
            'errorMessage' => 'Specified elastic IP address and ECS instance are not in the same region.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'Current elastic IP status does not support this operation',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'Current instance status does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidInstanceType.ValueNotSupported',
            'errorMessage' => 'The specified value of InstanceType is not supported.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'HaVip can be operated by this action only when it\'s status is Available or InUse.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The eip operate too frequent, TaskConflict.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidBindingStatus',
            'errorMessage' => 'The eip binding status invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'BIND_INSTANCE_HAVE_PORTMAP_OR_BIND_EIP',
            'errorMessage' => 'The instance may have portMap or already bind eip.',
          ),
          11 => 
          array (
            'errorCode' => 'EIP_CAN_NOT_ASSOCIATE_WITH_PUBLIC_IP',
            'errorMessage' => 'instance already bind natpublicip,cannot bind eip.',
          ),
          12 => 
          array (
            'errorCode' => 'BIND_INSTANCE_OWENER_ERROR',
            'errorMessage' => 'Cannot operate the eip.',
          ),
          13 => 
          array (
            'errorCode' => 'NATGATEWAY_FINANCIALLOCKED',
            'errorMessage' => 'The NatGateway has expire, cannot do bind operation.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.InstanceTypeNotSupport',
            'errorMessage' => 'The specified instance type is not support.',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.NumberOfTrafficEip',
            'errorMessage' => 'The number of traffic eip on natgw exceed limitation.',
          ),
          16 => 
          array (
            'errorCode' => 'QuotaExceeded.NumberOfEip',
            'errorMessage' => 'Binded eip Quota exceed on this NatGw.',
          ),
          17 => 
          array (
            'errorCode' => 'Forbidden.EipCanNotBindGatgw',
            'errorMessage' => 'Eip can not bind on natgw.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidAction.Denied',
            'errorMessage' => 'Action is denied due to unfinished Eip configuration modification.',
          ),
          19 => 
          array (
            'errorCode' => 'InstanceType.NotSupport',
            'errorMessage' => 'The instance type is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          21 => 
          array (
            'errorCode' => 'BindInstance.NotSupported',
            'errorMessage' => 'bind instance type %s is not supported.',
          ),
          22 => 
          array (
            'errorCode' => 'Forbidden.InstanceBandwidthNotZero',
            'errorMessage' => 'Eip can not bind with instance when it\'s bandwidth is not zero.',
          ),
          23 => 
          array (
            'errorCode' => 'INSTANCE_TYPE_NOT_SUPPORT',
            'errorMessage' => 'The instance type is invalid.',
          ),
          24 => 
          array (
            'errorCode' => 'ServerRegion.Invalid',
            'errorMessage' => 'Eip bind remote server region invalid.',
          ),
          25 => 
          array (
            'errorCode' => 'Eni.Attached',
            'errorMessage' => 'The eni should be detached from ecs when associating with direct eip.',
          ),
          26 => 
          array (
            'errorCode' => 'Eni.HasSubIp',
            'errorMessage' => 'Eni has sub ip can not bind direct eip.',
          ),
          27 => 
          array (
            'errorCode' => 'Invalid.DirectEip.BindType',
            'errorMessage' => 'The direct eip can be only associated with eni.',
          ),
          28 => 
          array (
            'errorCode' => 'InvalidStatus.EcsStatusNotSupport',
            'errorMessage' => 'The special instance status is not support operate',
          ),
          29 => 
          array (
            'errorCode' => 'Invalid.Function.NotSupported',
            'errorMessage' => 'Multi-IP function is under test, the region or uid is not supported.',
          ),
          30 => 
          array (
            'errorCode' => 'InvalidStatus.EniStatusNotSupport',
            'errorMessage' => '%s',
          ),
          31 => 
          array (
            'errorCode' => 'InvalidParameter.EniInstanceId',
            'errorMessage' => '%s',
          ),
          32 => 
          array (
            'errorCode' => 'InvalidNexthop.DirectEni',
            'errorMessage' => 'The direct Eni cannot be nexthop.',
          ),
          33 => 
          array (
            'errorCode' => 'Mode.Conflict',
            'errorMessage' => 'The eni can bind only one mode of eip.',
          ),
          34 => 
          array (
            'errorCode' => 'Mode.NotSupport',
            'errorMessage' => 'The user cannot use multi direct eip.',
          ),
          35 => 
          array (
            'errorCode' => 'QuotaExceed.MultiBindedEip',
            'errorMessage' => 'The number of multi binded eip is over limit.',
          ),
          36 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          37 => 
          array (
            'errorCode' => 'OperationFailed.EniSubIp',
            'errorMessage' => 'Eni has sub ip can not bind direct eip.',
          ),
          38 => 
          array (
            'errorCode' => 'InvalidEip.EipQuotaExceeded',
            'errorMessage' => 'The specified eni assigned eip is more than privateIp.',
          ),
          39 => 
          array (
            'errorCode' => 'OperationFailed.QueryCommodityInfo',
            'errorMessage' => 'Operation failed because quey commodity info error.',
          ),
          40 => 
          array (
            'errorCode' => 'OperationUnsupported.MultiIp',
            'errorMessage' => 'Multi ip function is not support.',
          ),
          41 => 
          array (
            'errorCode' => 'InvalidNicOrVm.NotFound',
            'errorMessage' => 'Bind nic or vm not exist.',
          ),
          42 => 
          array (
            'errorCode' => 'OperationUnsupported.EipBindModel',
            'errorMessage' => 'The instance type of ecs does not support MULTI_BINDED model Eip.',
          ),
          43 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => '%s',
          ),
          44 => 
          array (
            'errorCode' => 'EipBindRemote.BackendRegionMustBeSingle',
            'errorMessage' => 'eip bind remote instance, backend region must be single',
          ),
          45 => 
          array (
            'errorCode' => 'InvalidParameter.BindingInstanceRegion',
            'errorMessage' => 'The specified BindingInstanceRegion is not supported.',
          ),
          46 => 
          array (
            'errorCode' => 'OperationFailed.HavipBoundPortmap',
            'errorMessage' => '%s',
          ),
          47 => 
          array (
            'errorCode' => 'IllegalParam.Mode',
            'errorMessage' => '%s',
          ),
          48 => 
          array (
            'errorCode' => 'InvalidStatus.NotAllow',
            'errorMessage' => 'Bind instance status invalid',
          ),
          49 => 
          array (
            'errorCode' => 'InvalidInstance.NotExist',
            'errorMessage' => 'Bind instance data not exist',
          ),
          50 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId not exist.',
          ),
          51 => 
          array (
            'errorCode' => 'ResourceQueryError',
            'errorMessage' => 'The specified resource is queried error.',
          ),
          52 => 
          array (
            'errorCode' => 'InvalidStatus.InstanceHasBandWidth',
            'errorMessage' => 'The specified instance bandwidth invalid.',
          ),
          53 => 
          array (
            'errorCode' => 'OperationDenied.CloudBoxResourceExist',
            'errorMessage' => 'The operation is not allowed because there are resources related to the cloud box in VPC.',
          ),
          54 => 
          array (
            'errorCode' => 'OperationDenied.CloudBoxVSwitchExist',
            'errorMessage' => 'The operation is not allowed because a cloud box type vSwitch exists in VPC.',
          ),
          55 => 
          array (
            'errorCode' => 'OperationDenied.NoAvailablePrivateIp',
            'errorMessage' => 'The operation is failed because of vSwitch has not availalbe private ip',
          ),
          56 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => '%s',
          ),
          57 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.IpAddress',
            'errorMessage' => '%s',
          ),
          58 => 
          array (
            'errorCode' => 'OperationFailed.Ipv4GatewayNotOpenedInVpc',
            'errorMessage' => 'The operation is failed because Ipv4Gateway is not opened in Vpc.',
          ),
          59 => 
          array (
            'errorCode' => 'OperationFailed.Ipv4GatewayNotActivatedInVpc',
            'errorMessage' => 'The operation is failed because Ipv4Gateway is not activated in Vpc.',
          ),
          60 => 
          array (
            'errorCode' => 'OperationDenied.L2EipBindIpAddress',
            'errorMessage' => '%s',
          ),
          61 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'The eip instance owner error',
          ),
          62 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          63 => 
          array (
            'errorCode' => 'UnsupportedFeature.EipBindIpAddress',
            'errorMessage' => 'The feature of EipBindIpAddress is not supported.',
          ),
          64 => 
          array (
            'errorCode' => 'OperationFailed.InstanceNotExist',
            'errorMessage' => 'The ECS instance does not exist, or is not a VPC VM.',
          ),
          65 => 
          array (
            'errorCode' => 'OperationDenied.Ipv4GatewayExist',
            'errorMessage' => 'The operation is not allowed because of Ipv4GatewayExist.',
          ),
          66 => 
          array (
            'errorCode' => 'OperationFailed.EipBindModeConflict',
            'errorMessage' => 'Eips can not bind Eni with NAT mode and  MULTI_BINDED mode at the same time.',
          ),
          67 => 
          array (
            'errorCode' => 'OperationFailed.EcsMigrating',
            'errorMessage' => 'The operation is failed because of ECS is migrating.',
          ),
          68 => 
          array (
            'errorCode' => 'OperationFailed.IpPrefixConflict',
            'errorMessage' => 'The operation failed due to the IP prefix of the ENI.',
          ),
          69 => 
          array (
            'errorCode' => 'UnsupportedFeature.EipBindPrefixIp',
            'errorMessage' => 'The feature of EipBindPrefixIp is not supported.',
          ),
          70 => 
          array (
            'errorCode' => 'OperationDenied.UnsupportedEipBindMode',
            'errorMessage' => 'The operation is not supported for the NAT gateway due to its EIP binding mode.',
          ),
          71 => 
          array (
            'errorCode' => 'OperationDenied.Unauthorized',
            'errorMessage' => 'The operation is not allowed because the user is not in the whitelist.',
          ),
          72 => 
          array (
            'errorCode' => 'OperationFailed.SystemBusy',
            'errorMessage' => 'Operation failed because system is busy.',
          ),
          73 => 
          array (
            'errorCode' => 'OperationFailed.PrivateIpAddressNotExist',
            'errorMessage' => 'The operation failed because the PrivateIpAddress is not found.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation ID is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanId.NotFound',
            'errorMessage' => 'Specified instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of InstanceRegionId is not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified instance is not found during access authentication.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.VpcIpv4GatewayEnabled',
            'errorMessage' => 'The operation is not allowed because of the VPC of the NAT gateway has opened IPv4 Gateway.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceUnavailable',
            'errorMessage' => 'The request has failed due to a temporary failure of the server.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateEipAddressResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</AssociateEipAddressResponse>","errorExample":""}]',
      'title' => '将EIP绑定到云产品实例',
      'description' => '- EIP实例可绑定到同地域的专有网络类型的ECS实例、专有网络类型的CLB实例、辅助弹性网卡、NAT网关和高可用虚拟IP上。

- **AssociateEipAddress**接口属于异步接口，即系统会先返回一个请求ID，但EIP实例与云产品实例并未绑定完成，系统后台的绑定任务仍在进行。您可以调用[DescribeEipAddresses](~~120193~~)查询EIP实例的状态：
    - 当EIP实例处于**Associating**状态时，表示EIP实例正在绑定中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当EIP实例处于**InUse**状态时，表示EIP实例绑定完成。
- **AssociateEipAddress**接口不支持同一个EIP实例并发绑定云产品实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateEipAddressBatch' => 
    array (
      'summary' => '调用AssociateEipAddressBatch接口批量将弹性公网IP（Elastic IP Address，简称EIP）绑定到同地域的云产品实例上。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定云产品实例的EIP所在的地域ID。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BindedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定EIP的云产品实例ID。

支持输入NAT网关实例ID、辅助弹性网卡实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-hp3akk9irtd69jad****',
          ),
        ),
        2 => 
        array (
          'name' => 'BindedInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定EIP的实例的类型，取值：
- **Nat**：NAT网关。
- **NetworkInterface**：辅助弹性网卡。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Nat',
          ),
        ),
        3 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定模式，仅取值为**MULTI_BINDED**，表示多EIP网卡可见模式。

仅**InstanceType**配置为**NetworkInterface**时，才需要配置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'MULTI_BINDED',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要与云产品实例绑定的EIP列表。

需至少输入1个EIP，最多支持输入50个EIP。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需要与云产品实例绑定的EIP实例ID。

需至少输入1个EIP实例的ID，最多支持输入50个EIP实例的ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'eip-2zeerraiwb7ujsxdc****	',
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定云产品实例的EIP所在的地域ID。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAssociation.Duplicated',
            'errorMessage' => 'Specified instance already is associated.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Specified instance is not in VPC.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.Mismatch',
            'errorMessage' => 'Specified elastic IP address and ECS instance are not in the same region.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'Current elastic IP status does not support this operation',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'Current instance status does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidInstanceType.ValueNotSupported',
            'errorMessage' => 'The specified value of InstanceType is not supported.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'HaVip can be operated by this action only when it\'s status is Available or InUse.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'The eip instance owener error',
          ),
          9 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The eip operate too frequent, TaskConflict.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidBindingStatus',
            'errorMessage' => 'The eip binding status invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'BIND_INSTANCE_HAVE_PORTMAP_OR_BIND_EIP',
            'errorMessage' => 'The instance may have portMap or already bind eip.',
          ),
          12 => 
          array (
            'errorCode' => 'EIP_CAN_NOT_ASSOCIATE_WITH_PUBLIC_IP',
            'errorMessage' => 'instance already bind natpublicip,cannot bind eip.',
          ),
          13 => 
          array (
            'errorCode' => 'BIND_INSTANCE_OWENER_ERROR',
            'errorMessage' => 'Cannot operate the eip.',
          ),
          14 => 
          array (
            'errorCode' => 'NATGATEWAY_FINANCIALLOCKED',
            'errorMessage' => 'The NatGateway has expire, cannot do bind operation.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.InstanceTypeNotSupport',
            'errorMessage' => 'The specified instance type is not support.',
          ),
          16 => 
          array (
            'errorCode' => 'QuotaExceeded.NumberOfTrafficEip',
            'errorMessage' => 'The number of traffic eip on natgw exceed limitation.',
          ),
          17 => 
          array (
            'errorCode' => 'QuotaExceeded.NumberOfEip',
            'errorMessage' => 'Binded eip Quota exceed on this NatGw.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidEipBandwidth.OutOfMaxValue',
            'errorMessage' => 'The Eip Bandwidth is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'Forbidden.EipCanNotBindGatgw',
            'errorMessage' => 'Eip can not bind on natgw.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidAction.Denied',
            'errorMessage' => 'Action is denied due to unfinished Eip configuration modification.',
          ),
          21 => 
          array (
            'errorCode' => 'InstanceType.NotSupport',
            'errorMessage' => 'The instance type is invalid.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          23 => 
          array (
            'errorCode' => 'BindInstance.NotSupported',
            'errorMessage' => 'bind instance type %s is not supported.',
          ),
          24 => 
          array (
            'errorCode' => 'Forbidden.InstanceBandwidthNotZero',
            'errorMessage' => 'Eip can not bind with instance when it\'s bandwidth is not zero.',
          ),
          25 => 
          array (
            'errorCode' => 'INSTANCE_TYPE_NOT_SUPPORT',
            'errorMessage' => 'The instance type is invalid.',
          ),
          26 => 
          array (
            'errorCode' => 'ServerRegion.Invalid',
            'errorMessage' => 'Eip bind remote server region invalid.',
          ),
          27 => 
          array (
            'errorCode' => 'Eni.Attached',
            'errorMessage' => 'The eni should be detached from ecs when associating with direct eip.',
          ),
          28 => 
          array (
            'errorCode' => 'Invalid.DirectEip.BindType',
            'errorMessage' => 'The direct eip can be only associated with eni.',
          ),
          29 => 
          array (
            'errorCode' => 'Invalid.Function.NotSupported',
            'errorMessage' => 'Multi-IP function is under test, the region or uid is not supported.',
          ),
          30 => 
          array (
            'errorCode' => 'InvalidStatus.EniStatusNotSupport',
            'errorMessage' => '%s',
          ),
          31 => 
          array (
            'errorCode' => 'InvalidParameter.EniInstanceId',
            'errorMessage' => '%s',
          ),
          32 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          33 => 
          array (
            'errorCode' => 'EipBatchBind.TypeNotSupport',
            'errorMessage' => 'eip batch bind type not support',
          ),
          34 => 
          array (
            'errorCode' => 'OperationFailed.RegionNotMatch',
            'errorMessage' => 'The specified eip is not in this region',
          ),
          35 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          36 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          37 => 
          array (
            'errorCode' => 'OperationDenied.Unauthorized',
            'errorMessage' => 'The operation is not allowed because the user is not in the whitelist.',
          ),
          38 => 
          array (
            'errorCode' => 'OperationDenied.UnsupportedEipBindMode',
            'errorMessage' => 'The operation is not supported for the NAT gateway due to its EIP binding mode.',
          ),
          39 => 
          array (
            'errorCode' => 'OperationDenied.Ipv4GatewayExist',
            'errorMessage' => 'The operation is not allowed because of Ipv4GatewayExist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation ID is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanId.NotFound',
            'errorMessage' => 'Specified instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of InstanceRegionId is not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified instance is not found during access authentication.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.VpcIpv4GatewayEnabled',
            'errorMessage' => 'The operation is not allowed because of the VPC of the NAT gateway has opened IPv4 Gateway.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeEipAddresses',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateEipAddressBatchResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</AssociateEipAddressBatchResponse>","errorExample":""}]',
      'title' => '批量绑定EIP到云产品实例',
      'description' => '- **AssociateEipAddressBatch**用于批量绑定EIP到云产品实例，仅支持批量绑定EIP到同地域的NAT网关实例或辅助弹性网卡实例。EIP绑定其他云产品实例，请参见[AssociateEipAddress](~~120195~~)。
- **AssociateEipAddressBatch**接口属于异步接口，即系统会先返回一个请求ID，但EIP实例与云产品实例并未批量绑定完成，系统后台的绑定任务仍在进行。您可以调用[DescribeEipAddresses](~~120193~~)查询EIP实例的状态：
    - 当EIP实例处于**Associating**状态时，表示EIP实例正在绑定中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当EIP实例处于**InUse**状态时，表示EIP实例绑定完成。
- **AssociateEipAddressBatch**接口不支持同一个EIP实例并发绑定云产品实例。',
    ),
    'UnassociateEipAddress' => 
    array (
      'summary' => '调用UnassociateEipAddress将弹性公网IP（EIP）从绑定的云产品上解绑。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当EIP绑定了NAT网关，且NAT网关添加了DNAT或SNAT条目时，是否强制解绑EIP，取值：

- **false**（默认值）：不强制解绑EIP。

- **true**：强制解绑EIP。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的EIP的地域ID。
 您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要解绑的EIP的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zeerraiwb7uj6i0d****',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要解绑EIP的云产品实例的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'i-hp3akk9irtd69jad****',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑EIP的云产品类型，取值： 

- **EcsInstance**（默认值）：专有网络类型的ECS实例。   

- **SlbInstance**：专有网络类型的SLB实例。   

- **NetworkInterface**：专有网络类型的辅助弹性网卡。

- **Nat**：NAT网关。  

- **HaVip**：高可用虚拟IP。
- **IpAddress**：IP 地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
        5 => 
        array (
          'name' => 'PrivateIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑EIP的ECS实例或辅助弹性网卡实例的私网IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.2',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11****	',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'Current elastic IP status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'Specified instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of instance does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.ValueNotSupported',
            'errorMessage' => 'The specified value of InstanceType is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'This operation is denied because satus of the specified HaVip is neither Available nor InUse.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Eip of default vpc not allow this operation',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The eip operate too frequent, TaskConflict.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBindingStatus',
            'errorMessage' => 'The eip binding status invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidIpStatus.HasBeenUsedBySnatTable',
            'errorMessage' => 'The removed ip address has been used by snat table.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidIpStatus.HasBeenUsedByForwardEntry',
            'errorMessage' => 'The specified address has been used by forwardTable.',
          ),
          12 => 
          array (
            'errorCode' => 'Eni.Attached',
            'errorMessage' => 'The eni should be detached from ecs when associating with direct eip.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidStatus.EcsStatusNotSupport',
            'errorMessage' => 'The special instance status Pending is not support operate',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidStatus.EniStatusNotSupport',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidStatus.SnatOrDnat',
            'errorMessage' => 'Operation failed because snat or dnat in unstable status.',
          ),
          17 => 
          array (
            'errorCode' => 'DependencyViolation.SnatEntry',
            'errorMessage' => 'The specified eip is in ip pool.',
          ),
          18 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidStatus.NotAllow',
            'errorMessage' => 'Bind instance status invalid',
          ),
          20 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'The eip instance owener error',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidLoadBalancerId.NotFound',
            'errorMessage' => 'LoadBalancerId does not exist.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.SystemBusy',
            'errorMessage' => 'Operation failed because system is busy.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAllocationId.NotFound',
            'errorMessage' => 'Specified allocation ID is not found',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBindInstance.NotFound',
            'errorMessage' => 'The specified bind instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.RegionNotFound',
            'errorMessage' => 'Specified region is not found during access authentication.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<UnassociateEipAddressResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</UnassociateEipAddressResponse>","errorExample":""}]',
      'title' => '将EIP从云产品解绑',
      'description' => '-  **UnassociateEipAddress**接口属于异步接口，即系统会先返回一个请求ID，但EIP并未完成解绑，系统后台的解绑任务仍在进行。您可以调用[DescribeEipAddresses](~~120193~~)查询EIP的状态： 
    - 当EIP处于**Unassociating**状态时，表示EIP正在解绑中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当EIP处于**Available**时，表示EIP完成解绑。
- **UnassociateEipAddress**接口不支持并发解绑同一个EIP。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCommonBandwidthPackage' => 
    array (
      'summary' => '调用CreateCommonBandwidthPackage接口创建共享带宽实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Zone',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的可用区。
创建云盒共享带宽时，该参数必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'ap-southeast-1-lzdvn-cb',
          ),
        ),
        2 => 
        array (
          'name' => 'ISP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路类型。取值：
- **BGP**：BGP（多线）线路。目前全部地域都支持BGP（多线）线路。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、日本（东京）、菲律宾（马尼拉）、马来西亚（吉隆坡）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路共享带宽。

如果您是单线带宽的白名单用户，您还可以选择以下类型：
- **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，该字段必填，取值：**BGP_FinanceCloud**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的描述信息。

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazdjdhd****',
          ),
        ),
        7 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的带宽峰值。单位：Mbps。 

<props="intl"><ph>默认取值范围：**1**~**1000**。默认值：**1**。</ph></props>

<props="china">

- 当**InternetChargeType**取值为**PayByBandwidth**，即共享带宽的计费方式为按带宽计费时，**Bandwidth**的默认取值范围为**2**~**20000**。
- 当**InternetChargeType**取值为**95PayBy95**，即共享带宽的计费方式为按增强型95计费时，**Bandwidth**的默认取值范围为**200**~**20000**。
- 当 **InternetChargeType**取值为**PayByDominantTraffic**，即共享带宽的计费方式为按主流量计费时，**Bandwidth**的默认取值范围为**1**~**2000**。

 默认值：**1000**。
</props>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1000',
          ),
        ),
        8 => 
        array (
          'name' => 'Ratio',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的保底百分比，仅取值为**20**。

 <props="china"><ph>当**InternetChargeType**取值**PayBy95**时需配置此参数。</ph></props>
>仅中国站支持该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '20',
          ),
        ),
        9 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的计费方式，取值：
</props><props="intl">**PayByTraffic**（按流量计费）。</props>

<props="china">

- **PayByBandwidth**（默认值）：按带宽计费。
- **PayBy95**：按增强型95计费。
-  **PayByDominantTraffic**：按主流量计费。
</props>',
            'type' => 'string',
            'required' => false,
            'example' => '中国站示例值：PayByBandwidth，国际站示例值：PayByTraffic',
            'default' => 'PayByBandwidth',
          ),
        ),
        10 => 
        array (
          'name' => 'SecurityProtectionTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

<props="china"><ph>当**InternetChargeType**取值**PayBy95**时可以配置此参数。</ph></props>

最大支持添加10个安全防护级别。

> 该参数已废弃。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '安全防护级别。

- 配置为空时，默认为DDoS防护（基础版）。

- 配置为**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

<props="china"><ph>当**InternetChargeType**取值**PayBy95**时可以配置此参数。</ph></props>

**N**的取值范围：**1**~**10**。目前仅支持添加1个安全防护级别，添加多个可能无法成功调用该接口。

> 该参数已废弃。',
              'type' => 'string',
              'required' => false,
              'example' => 'AntiDDoS_Enhanced',
            ),
            'required' => false,
            'example' => 'AntiDDoS_Enhanced',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'BandwidthPackageId' => 
              array (
                'description' => '共享带宽实例的ID。',
                'type' => 'string',
                'example' => 'cbwp-bp1vevu8h3ieh****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FF39F653-033E-4CD9-9EDF-3CCA5A71FBC3',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazdjdhd****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotEnough.Bandwidth',
            'errorMessage' => 'The specified resource of Bandwidth is not enough.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.Description.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'BandwidthPackageOperation.conflict',
            'errorMessage' => 'BandwidthPackage operation conflict, please wait a moment and try again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.Bandwidth',
            'errorMessage' => 'The specified bandwidth is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'BandwidthPackage.QuotaExceeded',
            'errorMessage' => 'Create BandwidthPackage has exceeded quota.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.Zone',
            'errorMessage' => 'Zone is illegal.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.InvalidChargeType',
            'errorMessage' => 'The specified chargeType is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.SaleValidate',
            'errorMessage' => 'Validate sale condition with subArticle failed.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.SyncOrderToSub',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.Ratio',
            'errorMessage' => 'The specified ratio is not valid.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.InvalidZone',
            'errorMessage' => 'It is not allowed to create CBWP in the specified zone.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.AvailableZone',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'MissingParam.NameOrDescription',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.SystemBusy',
            'errorMessage' => 'Operation failed because system is busy.',
          ),
          17 => 
          array (
            'errorCode' => 'UnsupportedRegion.CloudBoxInternet',
            'errorMessage' => 'The region does not support cloud box public network.',
          ),
          18 => 
          array (
            'errorCode' => 'ResourceNotEnough.CommonBandWidthPackage',
            'errorMessage' => 'The specified resource commonBandWidthPackage is not enough.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidZoneId.NotFound',
            'errorMessage' => 'Specified value of ZoneId is not exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"BandwidthPackageId\\": \\"cbwp-bp1vevu8h3ieh****\\",\\n  \\"RequestId\\": \\"FF39F653-033E-4CD9-9EDF-3CCA5A71FBC3\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazdjdhd****\\"\\n}","type":"json"}]',
      'title' => '创建共享带宽实例',
      'description' => '<props="china"><ph>本接口仅支持创建按量付费共享带宽实例。如何创建包年包月共享带宽实例，请参见[创建共享带宽实例](~~65223~~)。</ph></props>',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddCommonBandwidthPackageIp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2ze2ic1xd2qeqasdf****',
          ),
        ),
        2 => 
        array (
          'name' => 'IpInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的ID。 

您可以通过调用[DescribeEipAddresses](~~36018~~)接口查询EIP实例的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zeerraiwb7uqwed****',
          ),
        ),
        3 => 
        array (
          'name' => 'IpType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP类型。取值：**EIP**，表示将EIP添加至共享带宽。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP',
            'default' => 'EIP',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回请求列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '01FDDD49-C4B7-4D2A-A8E5-A93915C450A6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.SecurityProtectionTypesInconsistent',
            'errorMessage' => 'The operation is not allowed because of SecurityProtectionTypesInconsistent.',
          ),
          1 => 
          array (
            'errorCode' => 'IpInstanceId.AlreadyInBandwidthPackage',
            'errorMessage' => 'The specified Eip InstanceId already in bandwidthPackage.',
          ),
          2 => 
          array (
            'errorCode' => 'IpInstanceId.BizStatusInvalid',
            'errorMessage' => 'The specified Eip BizStatus is Disable, Cannot add to bandwidthPackage.',
          ),
          3 => 
          array (
            'errorCode' => 'IpInstanceId.ChargeType.NotSupport',
            'errorMessage' => 'The specified Eip instance is PrePaid type, Cannot add to BandwidthPackage.',
          ),
          4 => 
          array (
            'errorCode' => 'BandwidthPackageId.InvalidBizStatus',
            'errorMessage' => 'The specified BandwidthPackageId has been FinancialLocked, Cannot add Ip.',
          ),
          5 => 
          array (
            'errorCode' => 'IpInstanceId.QuotaExceeded',
            'errorMessage' => 'The specified BandwidthPackageId has too many ip in it. exceed the quota , Cannot add more.',
          ),
          6 => 
          array (
            'errorCode' => 'EipOperation.TooFrequently',
            'errorMessage' => 'The specified Eip add into bandwidthPackage too frequently. please add later.',
          ),
          7 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.Eip',
            'errorMessage' => 'Eip status error.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationUnsupported.IpType',
            'errorMessage' => 'Ip type does not support the operation.',
          ),
          10 => 
          array (
            'errorCode' => 'ParamExclusive.IpInstanceIdAndBandwidthPackageId',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidBandwidthPackage.NotExist',
            'errorMessage' => 'Eip bandwidth package not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.ZoneIdInconsistent',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'AttrMismatching.BandwidthPackageIpVersion',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId not exist.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The InstanceId is not found.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          18 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'Mismatch.CloudBoxCbwpZoneAndEipZone',
            'errorMessage' => 'The CbwpZone and EipZone are mismatched.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpInstanceId.NotFound',
            'errorMessage' => 'The specified Eip InstanceId does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'IpInstanceId.InvalidIpInternetChargeType',
            'errorMessage' => 'The hybrid type eip not support add into bandwidthPackage of PayBytraffic type.',
          ),
          4 => 
          array (
            'errorCode' => 'BandwidthPackageId.InvalidBandwidth',
            'errorMessage' => 'The hybrid type eip can not add into low bandwidth bandwidthPackage.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"01FDDD49-C4B7-4D2A-A8E5-A93915C450A6\\"\\n}","errorExample":""},{"type":"xml","example":"<AddCommonBandwidthPackageIpResponse>\\n    <RequestId>01FDDD49-C4B7-4D2A-A8E5-A93915C450A6</RequestId>\\n</AddCommonBandwidthPackageIpResponse>","errorExample":""}]',
      'title' => '添加EIP到共享带宽中',
      'summary' => '调用AddCommonBandwidthPackageIp接口添加EIP到共享带宽中。',
      'description' => '在调用本接口时，请了解以下内容：
- 调用本接口添加EIP到共享带宽中时，EIP需满足以下条件：
    - EIP的计费方式为按量付费。
    - EIP的地域与要加入的共享带宽的地域相同。
    - EIP的线路类型与要加入的共享带宽的线路类型一致。
- **AddCommonBandwidthPackageIp**接口属于异步接口，即系统会先返回一个请求ID，但EIP并未成功添加到共享带宽，系统后台的添加任务仍在进行。您可以调用[DescribeCommonBandwidthPackages](~~120309~~)查询共享带宽和EIP的关联状态。 
    - 当共享带宽和EIP的关联状态处于**BINDING**时，表示共享带宽与EIP关联中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当共享带宽和EIP的关联状态处于**BINDED**时，表示共享带宽与EIP关联完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddCommonBandwidthPackageIps' => 
    array (
      'summary' => '调用AddCommonBandwidthPackageIps接口批量添加EIP到共享带宽中。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所在的地域ID。 

您可以通过调用[DescribeRegions](~~448570~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2ze2ic1xd2qeqasdf****',
          ),
        ),
        2 => 
        array (
          'name' => 'IpType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP类型。取值：**EIP**，表示将EIP添加至共享带宽。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP',
            'default' => 'EIP',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'IpInstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待添加的EIP实例ID列表。

一次最多支持添加10个EIP实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待添加的EIP实例ID列表。

一次最多支持添加10个EIP实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'eip-2zeerraiwb7uqwed****',
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '01FDDD49-C4B7-4D2A-A8E5-A93915C450A6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.SecurityProtectionTypesInconsistent',
            'errorMessage' => 'The operation is not allowed because of SecurityProtectionTypesInconsistent.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIpInstanceId.NotFound',
            'errorMessage' => 'The specified Eip InstanceId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'EIP_ALREADY_IN_BANDWIDTHPACKAGE',
            'errorMessage' => 'The Eip already in bandwidthPackage.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
          5 => 
          array (
            'errorCode' => 'IpInstanceId.AlreadyInBandwidthPackage',
            'errorMessage' => 'The specified Eip InstanceId already in bandwidthPackage.',
          ),
          6 => 
          array (
            'errorCode' => 'IpInstanceId.BizStatusInvalid',
            'errorMessage' => 'The specified Eip BizStatus is Disable, Cannot add to bandwidthPackage.',
          ),
          7 => 
          array (
            'errorCode' => 'IpInstanceId.ChargeType.NotSupport',
            'errorMessage' => 'The specified Eip instance is PrePaid type, Cannot add to BandwidthPackage.',
          ),
          8 => 
          array (
            'errorCode' => 'BandwidthPackageId.InvalidBizStatus',
            'errorMessage' => 'The specified BandwidthPackageId has been FinancialLocked, Cannot add Ip.',
          ),
          9 => 
          array (
            'errorCode' => 'IpInstanceId.QuotaExceeded',
            'errorMessage' => 'The specified BandwidthPackageId has too many ip in it. exceed the quota , Cannot add more.',
          ),
          10 => 
          array (
            'errorCode' => 'EipOperation.TooFrequently',
            'errorMessage' => 'The specified Eip add into bandwidthPackage too frequently. please add later.',
          ),
          11 => 
          array (
            'errorCode' => 'IpInstanceId.InvalidIpInternetChargeType',
            'errorMessage' => 'The hybrid type eip not support add into bandwidthPackage of PayBytraffic type.',
          ),
          12 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectStatus.Eip',
            'errorMessage' => 'Eip status error.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.IpType',
            'errorMessage' => 'Ip type does not support the operation.',
          ),
          15 => 
          array (
            'errorCode' => 'ParamExclusive.IpInstanceIdAndBandwidthPackageId',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidBandwidthPackage.NotExist',
            'errorMessage' => 'Eip bandwidth package not exist.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          18 => 
          array (
            'errorCode' => 'BandwidthPackageId.InvalidBandwidth',
            'errorMessage' => 'The hybrid type eip can not add into low bandwidth bandwidthPackage.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.ZoneIdInconsistent',
            'errorMessage' => '%s',
          ),
          20 => 
          array (
            'errorCode' => 'AttrMismatching.BandwidthPackageIpVersion',
            'errorMessage' => '%s',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          22 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          23 => 
          array (
            'errorCode' => 'Mismatch.CloudBoxCbwpZoneAndEipZone',
            'errorMessage' => 'The CbwpZone and EipZone are mismatched.',
          ),
          24 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The InstanceId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"01FDDD49-C4B7-4D2A-A8E5-A93915C450A6\\"\\n}","errorExample":""},{"type":"xml","example":"<AddCommonBandwidthPackageIpsResponse>\\n    <RequestId>01FDDD49-C4B7-4D2A-A8E5-A93915C450A6</RequestId>\\n</AddCommonBandwidthPackageIpsResponse>","errorExample":""}]',
      'title' => '批量添加EIP到共享带宽中',
      'description' => '- 调用本接口批量添加EIP到共享带宽中时，EIP需满足以下条件：
    - EIP的计费方式为按量付费。
    - EIP的地域与要加入的共享带宽的地域相同。
    - EIP的线路类型与要加入的共享带宽的线路类型一致。
- **AddCommonBandwidthPackageIps**接口属于异步接口，即系统会先返回一个请求ID，但EIP并未成功添加到共享带宽，系统后台的添加任务仍在进行。您可以调用[DescribeCommonBandwidthPackages](~~DescribeCommonBandwidthPackages~~)查询共享带宽和EIP的关联状态。 
    - 当共享带宽和EIP的关联状态处于**BINDING**时，表示共享带宽与EIP关联中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当共享带宽和EIP的关联状态处于**BINDED**时，表示共享带宽与EIP关联完成。',
    ),
    'RemoveCommonBandwidthPackageIp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽实例所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2ze2ic1xd2qeqk145****',
          ),
        ),
        2 => 
        array (
          'name' => 'IpInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的ID。 

您可以通过调用[DescribeEipAddresses](~~36018~~)接口查询EIP实例的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zeerraiwb7uj6i0d****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IpInstanceId.NotBandwidthPackage',
            'errorMessage' => 'The specified IpInstanceId does not in bandwidthPackage.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.ip',
            'errorMessage' => 'The specified BandwidthPackageId has eip in it.',
          ),
          2 => 
          array (
            'errorCode' => 'EIP_BIND_NATGATEWAY',
            'errorMessage' => 'The eip have bind natgateway.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.Eip',
            'errorMessage' => 'Eip status error.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.SnatPoolIp',
            'errorMessage' => 'Multi ip in snat pool cannot remove ip from bandwidth package.',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.RouteEntry',
            'errorMessage' => 'vpc route table has route entry.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          7 => 
          array (
            'errorCode' => 'Trade_Sync_Create_Sub_ERROR',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          8 => 
          array (
            'errorCode' => 'FAILED_INVOKE_INNER_API',
            'errorMessage' => 'Failed to invoke inner api.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.IpInSnatPool',
            'errorMessage' => 'Multi ip in snat pool cannot remove ip from bandwidth package.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.IpNotInCbwp',
            'errorMessage' => 'The specified eip not exist in the commonBandwidthPackage.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidIpInstanceId.Malformed',
            'errorMessage' => 'The specified IpInstanceId is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.EipBindRemote',
            'errorMessage' => 'Eip bind remote ecs/slb, cannot remove it from bandwidthPackage.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId not exist.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          16 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.SystemBusy',
            'errorMessage' => 'Operation failed because system is busy.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveCommonBandwidthPackageIpResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</RemoveCommonBandwidthPackageIpResponse>","errorExample":""}]',
      'title' => '移除共享带宽实例中的EIP',
      'summary' => '调用RemoveCommonBandwidthPackageIp接口移除共享带宽实例中的EIP。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCommonBandwidthPackage' => 
    array (
      'summary' => '调用DeleteCommonBandwidthPackage接口删除已创建的共享带宽实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除共享带宽实例。取值： 
          
- **false**（默认值）：只删除不包含EIP的共享带宽。

- **true**：将共享带宽实例中的EIP全部移出后，删除共享带宽。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2ze2ic1xd2qeqk145pn4u',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回请求列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B400EF57-60E3-4D61-B8FB-7FA8F72DF5A6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.%s',
            'errorMessage' => 'The param of %s is missing.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.Ips',
            'errorMessage' => 'The specified BandwidthPackageId has dependent resource ips.',
          ),
          2 => 
          array (
            'errorCode' => 'ForbiddenAction.PrePaid',
            'errorMessage' => 'The specified BandwidthPackageId is PrePaid.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.BandwidthPackageNotEmpty',
            'errorMessage' => 'Eip bandwidth package not empty.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOperation.DeletionProtection',
            'errorMessage' => 'The instance cannnot delete because of deletion protecion.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.Release95Instance',
            'errorMessage' => 'Releasing instances that payBy95 or payByOld95 is unsupported.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.AddIpTaskInProcessing',
            'errorMessage' => 'Operation failed because add ip to common bandwidth task in processing.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B400EF57-60E3-4D61-B8FB-7FA8F72DF5A6\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCommonBandwidthPackageResponse>\\n    <RequestId>B400EF57-60E3-4D61-B8FB-7FA8F72DF5A6</RequestId>\\n</DeleteCommonBandwidthPackageResponse>","errorExample":""}]',
      'title' => '删除共享带宽实例',
      'description' => '**DeleteCommonBandwidthPackage**接口不支持并发删除同一个共享带宽实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCommonBandwidthPackageAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2ze2ic1xd2qeqk145****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽的名称。  长度为 2~128个字符，必须以字母或中文开头，可包含数字，半角句点（.），下划线（_）和短划线（-）。但不能以`http://` 或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽的描述信息。  长度为 2~256个字符，必须以字母或中文开头，但不能以`http:// `或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => '描述',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B450CAD8-50BC-4506-ADA7-35C6CE63E96B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Description.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId not exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B450CAD8-50BC-4506-ADA7-35C6CE63E96B\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifyCommonBandwidthPackageAttributeResponse>\\n    <RequestId>B450CAD8-50BC-4506-ADA7-35C6CE63E96B</RequestId>\\n</ModifyCommonBandwidthPackageAttributeResponse>"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<ModifyCommonBandwidthPackageAttributeResponse>\\r\\n    <RequestId>B450CAD8-50BC-4506-ADA7-35C6CE63E96B</RequestId>\\r\\n</ModifyCommonBandwidthPackageAttributeResponse>","errorExample":"{\\n    \\"RequestId\\":B450CAD8-50BC-4506-ADA7-35C6CE63E96B6\\"\\n}"}]',
      'title' => '修改共享带宽实例的名称和描述信息',
      'summary' => '修改共享带宽实例的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCommonBandwidthPackageSpec' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽实例所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2ze2ic1xd2qeqk145****',
          ),
        ),
        2 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽实例的带宽峰值。单位：Mbps。 

<props="china">

 - 当共享带宽的计费方式为按带宽计费时，**Bandwidth**的默认取值范围为**2**~**20000**。
-  当共享带宽的计费方式为按增强型95计费时，**Bandwidth**的默认取值范围为**200**~**20000**。
- 当共享带宽的计费方式为按主流量计费时，**Bandwidth**的默认取值范围为**1**~**2000**。

</props>
<props="intl">取值范围：**1**~**1000**。</props>',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F129000-F929-4AF5-BE8D-BAE434C795306',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotEnough.Bandwidth',
            'errorMessage' => 'The specified resource of Bandwidth is not enough.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Bandwidth',
            'errorMessage' => 'The specified bandwidth is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidCommonBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.ResourceStatus',
            'errorMessage' => 'Resource status is abnormal for renew.',
          ),
          5 => 
          array (
            'errorCode' => 'SYSTEM.SALE_VALIDATE_UNEXPECTED_ERROR',
            'errorMessage' => 'You have arrears and do not meet the purchase conditions.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.SyncOrderToSub',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.SaleValidate',
            'errorMessage' => 'Validate sale condition with subArticle failed.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.QueryCommodityInfo',
            'errorMessage' => 'Operation failed because quey commodity info error.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.QueryPrice',
            'errorMessage' => 'Query price failed when create order.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.ChargeTypeIsPrepaid',
            'errorMessage' => 'It\'s forbidden to change prepaid CBWP\'s bandwidth by API.  It can be changed on Aliyun web console.',
          ),
          11 => 
          array (
            'errorCode' => 'IncorrectStatus.CbwpModifying',
            'errorMessage' => 'Cbwp Modifying status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified BandwidthPackageId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidBandwidth.ValueNotSupported',
            'errorMessage' => 'The specified value of Bandwidth not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'BandwidthPackage.FinancialLocked',
            'errorMessage' => 'The specified BandwidthPackage has been Financial Lock.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderError.BandwidthPackage',
            'errorMessage' => 'The Account failed to create order.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7F129000-F929-4AF5-BE8D-BAE434C795306\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyCommonBandwidthPackageSpecResponse>\\n    <RequestId>7F129000-F929-4AF5-BE8D-BAE434C795306</RequestId>\\n</ModifyCommonBandwidthPackageSpecResponse>","errorExample":""}]',
      'title' => '修改共享带宽的带宽峰值',
      'summary' => '调用ModifyCommonBandwidthPackageSpec接口修改共享带宽的带宽峰值。',
      'description' => '在调用本接口时，请了解以下内容：
- **ModifyCommonBandwidthPackageSpec**接口属于异步接口，即系统会先返回一个请求ID，但共享带宽的带宽峰值并未修改完成，系统后台的修改任务仍在进行。您可以调用[DescribeCommonBandwidthPackages](~~120309~~)查询共享带宽实例的状态。
    - 当共享带宽实例处于**Modifying**状态时，表示共享带宽的带宽峰值正在修改中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当共享带宽实例处于**Available**状态时，表示共享带宽的带宽峰值修改完成。
- **ModifyCommonBandwidthPackageSpec**接口不支持并发修改同一个共享带宽的带宽峰值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCommonBandwidthPackages' => 
    array (
      'summary' => '调用DescribeCommonBandwidthPackages接口查询指定地域中共享带宽实例列表及其信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含未生效的订购数据。取值：
-  **false**（默认值）：不包含。
- **true**：包含。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽实例的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'cbwp-2ze2ic1xd2qeqk145****',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 列表的页码。默认值：**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会查询实例信息。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '共享带宽实例的标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '共享带宽实例的标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'KeyTest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ValueTest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        9 => 
        array (
          'name' => 'SecurityProtectionEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启安全防护',
            'description' => '是否开启DDoS防护（增强版）。取值：
- **false**：不开启。
- **true**：开启。

> 该参数已废弃。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数列表。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '20E6FD1C-7321-4DAD-BDFD-EC8769E4AA33',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'CommonBandwidthPackages' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CommonBandwidthPackage' => 
                  array (
                    'description' => '共享带宽的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '共享带宽的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ReservationActiveTime' => 
                        array (
                          'description' => '续费生效时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2018-08-30T16:00:00Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '共享带宽实例的状态。
- **Available**：可用。
- **Modifying**：修改中。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '共享带宽实例创建的时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2017-06-28T06:39:20Z',
                        ),
                        'ReservationOrderType' => 
                        array (
                          'description' => '续费变配方式。

- **RENEWCHANGE**：续费变配。
- **TEMP_UPGRADE**：短时升配。
- **UPGRADE**：升级。',
                          'type' => 'string',
                          'example' => 'RENEWCHANGE',
                        ),
                        'DeletionProtection' => 
                        array (
                          'description' => '是否开启删除保护。
- **true**：开启。
- **false**：关闭。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ReservationInternetChargeType' => 
                        array (
                          'description' => '变配之后的计费方式。

<props="china">

- **PayBy95**：按增强型95计费。
- **PayByBandwidth**：按带宽计费。
- **PayByDominantTraffic**：按主流量计费。

</props>
<props="intl">**PayByTraffic**：按流量计费。</props>',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'Ratio' => 
                        array (
                          'description' => '共享带宽的保底百分比，仅返回：**20**。

 <props="china"><ph>当**InternetChargeType**取值**PayBy95**时返回该参数。</ph></props>

>仅中国站支持该参数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'InstanceChargeType' => 
                        array (
                          'description' => '共享带宽实例的计费类型。

<props="china">

- **PostPaid**：按量计费。
-  **PrePaid**：包年包月。

</props>
<props="intl"><ph>**PostPaid**：按量计费。</ph></props>',
                          'type' => 'string',
                          'example' => 'PostPaid',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '共享带宽实例所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'BandwidthPackageId' => 
                        array (
                          'description' => ' 共享带宽的ID。 ',
                          'type' => 'string',
                          'example' => 'cbwp-bp1t3sm1ffzmshdki****',
                        ),
                        'ServiceManaged' => 
                        array (
                          'description' => '是否为服务账号创建的资源。
- **0**：非服务账号创建。
- **1**：服务账号创建。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => ' 共享带宽的带宽峰值， 单位：Mbps。',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'Description' => 
                        array (
                          'description' => ' 共享带宽的描述信息。 ',
                          'type' => 'string',
                          'example' => 'none',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => '共享带宽实例的过期时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                          'type' => 'string',
                          'example' => '2019-01-15T03:08:37Z',
                        ),
                        'ReservationBandwidth' => 
                        array (
                          'description' => '变配之后的带宽值， 单位：Mbps。',
                          'type' => 'string',
                          'example' => '1000',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph****',
                        ),
                        'InternetChargeType' => 
                        array (
                          'description' => '共享带宽的计费方式。

<props="china"> 

- **PayBy95**：按增强型95计费。
- **PayByBandwidth**：按带宽计费。
- **PayByDominantTraffic**：按主流量计费。

</props>
<props="intl">**PayByTraffic**：按流量计费。</props>',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => '共享带宽实例的业务状态。
- **Normal**：正常状态。
- **FinancialLocked**：欠费。
- **Unactivated**：未激活。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Name' => 
                        array (
                          'description' => ' 共享带宽的名称。 ',
                          'type' => 'string',
                          'example' => 'abc',
                        ),
                        'ISP' => 
                        array (
                          'description' => '线路类型。
- **BGP**：BGP（多线）线路。目前全部地域都支持BGP（多线）线路。
- **BGP_PRO**：BGP（多线）\\_精品线路。目前仅中国香港、新加坡、日本（东京）、菲律宾（马尼拉）、马来西亚（吉隆坡）、印度尼西亚（雅加达）和泰国（曼谷）地域支持BGP（多线）\\_精品线路共享带宽。

如果您是单线带宽的白名单用户，返回类型还可能为：

- **ChinaTelecom**：中国电信
- **ChinaUnicom**：中国联通   
- **ChinaMobile**：中国移动
- **ChinaTelecom_L2**：中国电信L2
- **ChinaUnicom_L2**：中国联通L2
- **ChinaMobile_L2**：中国移动L2

如果您是杭州金融云用户，返回**BGP_FinanceCloud**。


',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'HasReservationData' => 
                        array (
                          'description' => '是否有待生效的订单。

- **false**：没有待生效的订单。
- **true**：有待生效的订单。',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'PublicIpAddresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PublicIpAddresse' => 
                            array (
                              'description' => '共享带宽实例中的公网IP地址。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '共享带宽实例中的公网IP地址。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'IpAddress' => 
                                  array (
                                    'description' => '公网IP地址。',
                                    'type' => 'string',
                                    'example' => '47.95.XX.XX',
                                  ),
                                  'AllocationId' => 
                                  array (
                                    'description' => '公网IP的实例ID。',
                                    'type' => 'string',
                                    'example' => 'eip-bp13e9i2qst4g6jzi****',
                                  ),
                                  'BandwidthPackageIpRelationStatus' => 
                                  array (
                                    'description' => '共享带宽和EIP的关联状态。
- **BINDED**：EIP与共享带宽关联完成。
- **BINDING**：关联中。',
                                    'type' => 'string',
                                    'example' => 'BINDED',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SecurityProtectionTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SecurityProtectionType' => 
                            array (
                              'description' => '安全防护级别。

- 返回为空时，表示默认的DDoS防护（基础版）。

- 返回**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

> 该参数已废弃。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '安全防护级别。

- 返回为空时，表示默认的DDoS防护（基础版）。

- 返回**AntiDDoS_Enhanced**时，表示DDoS防护（增强版）。

> 该参数已废弃。',
                                'type' => 'string',
                                'example' => 'AntiDDoS_Enhanced',
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '共享带宽实例的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '共享带宽实例的标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '共享带宽实例的标签键。',
                                    'type' => 'string',
                                    'example' => 'KeyTest',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '共享带宽实例的标签值。',
                                    'type' => 'string',
                                    'example' => 'ValueTest',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'BizType' => 
                        array (
                          'description' => '共享带宽的业务类型。
- **CloudBox**：云盒。仅云盒用户支持该类型。
- **Default**（默认值）：默认，表示非特殊类型。',
                          'type' => 'string',
                          'example' => 'CloudBox',
                        ),
                        'Zone' => 
                        array (
                          'description' => '共享带宽的可用区。

当可用区资源过载时，为保证服务稳定性，共享带宽可能会被调度至其他可用区。',
                          'type' => 'string',
                          'example' => 'ap-southeast-1-lzdvn-cb',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageIdNumber.NotSupported',
            'errorMessage' => 'The number of BandwidthPackageIds exceeds the limit.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.ResourceGroupId',
            'errorMessage' => 'ResourceGroup is not supported in this region.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"20E6FD1C-7321-4DAD-BDFD-EC8769E4AA33\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"CommonBandwidthPackages\\": {\\n    \\"CommonBandwidthPackage\\": [\\n      {\\n        \\"ReservationActiveTime\\": \\"2018-08-30T16:00:00Z\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"CreationTime\\": \\"2017-06-28T06:39:20Z\\",\\n        \\"ReservationOrderType\\": \\"RENEWCHANGE\\",\\n        \\"DeletionProtection\\": true,\\n        \\"ReservationInternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"Ratio\\": 20,\\n        \\"InstanceChargeType\\": \\"PostPaid\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"BandwidthPackageId\\": \\"cbwp-bp1t3sm1ffzmshdki****\\",\\n        \\"ServiceManaged\\": 1,\\n        \\"Bandwidth\\": \\"20\\",\\n        \\"Description\\": \\"none\\",\\n        \\"ExpiredTime\\": \\"2019-01-15T03:08:37Z\\",\\n        \\"ReservationBandwidth\\": \\"1000\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\",\\n        \\"InternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"Name\\": \\"abc\\",\\n        \\"ISP\\": \\"BGP\\",\\n        \\"HasReservationData\\": \\"false\\",\\n        \\"PublicIpAddresses\\": {\\n          \\"PublicIpAddresse\\": [\\n            {\\n              \\"IpAddress\\": \\"47.95.XX.XX\\",\\n              \\"AllocationId\\": \\"eip-bp13e9i2qst4g6jzi****\\",\\n              \\"BandwidthPackageIpRelationStatus\\": \\"BINDED\\"\\n            }\\n          ]\\n        },\\n        \\"SecurityProtectionTypes\\": {\\n          \\"SecurityProtectionType\\": [\\n            \\"AntiDDoS_Enhanced\\"\\n          ]\\n        },\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"KeyTest\\",\\n              \\"Value\\": \\"ValueTest\\"\\n            }\\n          ]\\n        },\\n        \\"BizType\\": \\"CloudBox\\",\\n        \\"Zone\\": \\"ap-southeast-1-lzdvn-cb\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCommonBandwidthPackagesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>20E6FD1C-7321-4DAD-BDFD-EC8769E4AA33</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <CommonBandwidthPackages>\\n        <ReservationActiveTime>2018-08-30T16:00:00Z</ReservationActiveTime>\\n        <Status>Available</Status>\\n        <CreationTime>2017-06-28T06:39:20Z</CreationTime>\\n        <ReservationOrderType>RENEWCHANGE</ReservationOrderType>\\n        <DeletionProtection>true</DeletionProtection>\\n        <ReservationInternetChargeType>PayByBandwidth</ReservationInternetChargeType>\\n        <Ratio>20</Ratio>\\n        <InstanceChargeType>PostPaid</InstanceChargeType>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <BandwidthPackageId>cbwp-bp1t3sm1ffzmshdki****</BandwidthPackageId>\\n        <ServiceManaged>1</ServiceManaged>\\n        <Bandwidth>20</Bandwidth>\\n        <Description>none</Description>\\n        <ExpiredTime>2019-01-15T03:08:37Z</ExpiredTime>\\n        <ReservationBandwidth>1000</ReservationBandwidth>\\n        <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n        <InternetChargeType>PayByBandwidth</InternetChargeType>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <Name>abc</Name>\\n        <ISP>BGP</ISP>\\n        <HasReservationData>false</HasReservationData>\\n        <PublicIpAddresses>\\n            <IpAddress>47.95.XX.XX</IpAddress>\\n            <AllocationId>eip-bp13e9i2qst4g6jzi****</AllocationId>\\n            <BandwidthPackageIpRelationStatus>BINDED</BandwidthPackageIpRelationStatus>\\n        </PublicIpAddresses>\\n        <SecurityProtectionTypes>AntiDDoS_Enhanced</SecurityProtectionTypes>\\n        <Tags>\\n            <Key>KeyTest</Key>\\n            <Value>ValueTest</Value>\\n        </Tags>\\n        <BizType>CloudBox</BizType>\\n        <Zone>ap-southeast-1-lzdvn-cb</Zone>\\n    </CommonBandwidthPackages>\\n</DescribeCommonBandwidthPackagesResponse>","errorExample":""}]',
      'title' => '查询指定地域中共享带宽实例列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCommonBandwidthPackageIpBandwidth' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-2zep6hw5d6y8exscd****',
          ),
        ),
        2 => 
        array (
          'name' => 'EipId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已经加入到共享带宽的EIP的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zewysoansu0svfbg****',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '在共享带宽内最大可分配的带宽值。单位：Mbps。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '500',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回请求列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '63D187BF-A30A-4DD6-B68D-FF182C96D8A2	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.DistibuteLock',
            'errorMessage' => 'Distibute lock fail.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"63D187BF-A30A-4DD6-B68D-FF182C96D8A2\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyCommonBandwidthPackageIpBandwidth>\\r\\n\\t<RequestId>63D187BF-A30A-4DD6-B68D-FF182C96D8A2</RequestId>\\r\\n</ModifyCommonBandwidthPackageIpBandwidth>","errorExample":""}]',
      'title' => '为EIP设置最大可用带宽值',
      'summary' => '调用ModifyCommonBandwidthPackageIpBandwidth接口为已经加入到共享带宽的EIP设置最大可用带宽值。',
      'description' => '通过调用**ModifyCommonBandwidthPackageIpBandwidth**接口，您可以灵活分配加入到共享带宽中的每个EIP的最大可用带宽值，避免共享带宽的带宽值被某个EIP一直占用。

例如，2个EIP加入一个800 Mbps的共享带宽，可以为第一个EIP设置最大可用带宽值为500 Mbps，另外一个EIP设置最大可用带宽值为400 Mbps。设置完成后，第一个EIP可用的带宽值将不大于500 Mbps，第二个EIP可用的带宽值将不大于400 Mbps。

调用该接口前，请了解以下注意事项：

- 该接口仅针对EIP绑定ECS实例的场景生效，EIP绑定CLB实例、NAT网关、辅助弹性网卡、高可用虚拟IP场景配置该功能后无效。

- 该接口处于公测期，且仅可以通过该接口实现为已经加入到共享带宽的EIP设置最大可用带宽值，控制台暂不支持该功能。

- 该接口不支持对同一个EIP并发设置最大可用带宽值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelCommonBandwidthPackageIpBandwidth' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享带宽的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-bp13d0m4e2qv8xxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'EipId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已经加入到共享带宽的EIP的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eip-2zewysoansu0sxxxxxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '63D187BF-A30A-4DD6-B68D-FF182C96D8A2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidEIPStatus.BizDisabled',
            'errorMessage' => 'The EIP has been locked.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"63D187BF-A30A-4DD6-B68D-FF182C96D8A2\\"\\n}","errorExample":""},{"type":"xml","example":"<CancelCommonBandwidthPackageIpBandwidthResponse>\\n    <RequestId>63D187BF-A30A-4DD6-B68D-FF182C96D8A2</RequestId>\\n</CancelCommonBandwidthPackageIpBandwidthResponse>","errorExample":""}]',
      'title' => '取消EIP最大可用带宽值设置',
      'summary' => '调用CancelCommonBandwidthPackageIpBandwidth接口取消已经加入共享带宽中的EIP的最大可用带宽值的设置。',
      'description' => '在调用本接口时，请了解以下内容：
- 取消后，EIP的最大可用带宽值和共享带宽一致。
- **CancelCommonBandwidthPackageIpBandwidth**接口不支持并发取消同一个EIP的最大可用带宽值设置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'Describe95Traffic' => 
    array (
      'summary' => '调用Describe95Traffic接口查询按增强型95计费共享带宽的95流量数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，仅支持**cbwp**，表示共享带宽。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cbwp-wz9j19xrwf78fvz7*****',
          ),
        ),
        3 => 
        array (
          'name' => 'Day',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定待查询日期，使用北京时间，格式：年-月-日。

> 查询日期至少须为2天前。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-10-22',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求 ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'Traffic95Summary' => 
              array (
                'description' => '增强型95计费共享带宽的带宽统计信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'InternetChargeType' => 
                  array (
                    'description' => '共享带宽实例在所查询时间当天的计费方式。取值
- **PayBy95**：按增强型 95 计费。
- **PayByBandwidth**：按带宽计费。
- **PayByDominantTraffic**：按主流量计费。',
                    'type' => 'string',
                    'example' => 'PayBy95',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '资源 ID。',
                    'type' => 'string',
                    'example' => 'cbwp-wz9j19xrwf78fvz7*****
',
                  ),
                  'Bandwidth' => 
                  array (
                    'description' => '共享带宽实例在所查询时间当天的峰值带宽。单位：Mbps。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '20000.0',
                  ),
                  'FifthPeakBandwidth' => 
                  array (
                    'description' => '日峰值带宽，单位为Mbps。

<props="china">更多信息，请参见[日峰值带宽](~~89729~~)。</props>',
                    'type' => 'string',
                    'example' => '1064.244837773641',
                  ),
                  'MinimumConsumeBandwidth' => 
                  array (
                    'description' => '共享带宽实例在所查询时间当天的保底带宽。单位：Mbps。',
                    'type' => 'string',
                    'example' => '0.0',
                  ),
                  'Traffic95DetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Traffic95Detail' => 
                      array (
                        'description' => '入方向和出方向当天每5分钟内的带宽平均值列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '以5分钟为粒度采样，入方向和出方向在所查询日期每5分钟内的带宽平均值。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Time' => 
                            array (
                              'description' => '统计时间（字符串）。',
                              'type' => 'string',
                              'example' => '2024-01-01T00:00:00Z',
                            ),
                            'BillBandwidth' => 
                            array (
                              'description' => '采样点带宽值，为该时间区间内入方向和出方向中较大的带宽。单位：Mbps。',
                              'type' => 'string',
                              'example' => '118.5090322113037',
                            ),
                            'OutBandwidth' => 
                            array (
                              'description' => '出方向带宽。单位：Mbps。',
                              'type' => 'string',
                              'example' => '96.41217480977376',
                            ),
                            'InBandwidth' => 
                            array (
                              'description' => '入方向带宽。单位：Mbps。',
                              'type' => 'string',
                              'example' => '118.5090322113037',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstance.NotFound',
            'errorMessage' => 'The specified Instance does not exist in the specified region.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Day',
            'errorMessage' => 'The specified parameter day is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.ResourceType',
            'errorMessage' => 'Invalid Resource Type value.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"Traffic95Summary\\": {\\n    \\"InternetChargeType\\": \\"PayBy95\\",\\n    \\"InstanceId\\": \\"cbwp-wz9j19xrwf78fvz7*****\\\\n\\",\\n    \\"Bandwidth\\": 20000,\\n    \\"FifthPeakBandwidth\\": \\"1064.244837773641\\",\\n    \\"MinimumConsumeBandwidth\\": \\"0.0\\",\\n    \\"Traffic95DetailList\\": {\\n      \\"Traffic95Detail\\": [\\n        {\\n          \\"Time\\": \\"2024-01-01T00:00:00Z\\",\\n          \\"BillBandwidth\\": \\"118.5090322113037\\",\\n          \\"OutBandwidth\\": \\"96.41217480977376\\",\\n          \\"InBandwidth\\": \\"118.5090322113037\\"\\n        }\\n      ]\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '查询按增强型95计费的共享带宽的95流量数据',
      'description' => '本接口适用于使用按增强型95计费共享带宽的中国站用户。',
    ),
    'CreateVirtualPhysicalConnection' => 
    array (
      'summary' => '调用CreateVirtualPhysicalConnection接口创建共享专线。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vpconn的支付方',
            'description' => '共享专线的付费方式。取值：

- **PayByPhysicalConnectionOwner**：表示合作伙伴付费。
- **PayByVirtualPhysicalConnectionOwner**：表示租户付费。',
            'type' => 'string',
            'required' => true,
            'example' => 'PayByVirtualPhysicalConnectionOwner',
            'enum' => 
            array (
              0 => 'PayByVirtualPhysicalConnectionOwner',
              1 => 'PayByPhysicalConnectionOwner',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'VlanId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vpconn的VlanID',
            'description' => '共享专线的VLAN ID。取值范围：**0**~**2999**。

- VLAN ID为**0**时，表示边界路由器VBR（Virtual Border Router）的物理交换机端口不使用VLAN模式，而使用三层路由接口模式。三层路由接口模式下每一条物理专线对应一个VBR。
- VLAN ID为**1**~**2999**时，表示VBR的物理交换机端口使用基于VLAN的三层子接口。三层子接口模式下每个VLAN ID对应一个VBR。此时，该VBR的物理专线可以连接多个账号下的VPC。不同VLAN下的VBR二层网络隔离，无法互通。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '4',
          ),
        ),
        2 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vpconn规格',
            'description' => '共享专线的带宽值。

取值：**50M**、**100M**、**200M**、**300M**、**400M**、**500M**、**1G**、**2G**、**5G**、**8G**、**10G**。

<props="china">
> **2G**、**5G**、**8G**、**10G**的带宽值默认不开放，如需使用，请联系您的客户经理申请。</props>

<props="intl">
> **2G**、**5G**、**8G**、**10G**的带宽值默认不开放，如需使用，请联系您的客户经理申请。</props>

单位：**M**表示Mbps，**G**表示Gbps。
',
            'type' => 'string',
            'required' => true,
            'example' => '50M',
          ),
        ),
        3 => 
        array (
          'name' => 'VpconnAliUid',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn拥有者',
            'description' => '租户的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1210123456123456',
          ),
        ),
        4 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn的主Pconn',
            'description' => '共享专线关联的物理专线ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1ciz7ekd2grn1as****',
          ),
        ),
        5 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn的name',
            'description' => '共享专线的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-），但不能以`http:// `或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        6 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等Token',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'DryRun',
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建共享专线。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回`DRYRUN.SUCCESS`。
- **false**（默认值）：发送正常请求，通过检查后直接创建共享专线。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn的description',
            'description' => '共享专线的描述信息。

长度为2～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        10 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aekzjty2chzuqky',
          ),
        ),
        11 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

最多支持64个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CD14EA74-E9C3-59A9-942A-DFEC7E12818D',
              ),
              'VirtualPhysicalConnection' => 
              array (
                'title' => 'Vpconn的实例ID',
                'description' => '共享专线实例ID。',
                'type' => 'string',
                'example' => 'pc-bp1mrgfbtmc9brre7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.VbrBindedPconn',
            'errorMessage' => 'The operation is failed because of VbrBindedPconn.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of Bandwidth [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'The specified PhysicalConnectionId [%s] is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.VPconnCreated',
            'errorMessage' => 'The operation is failed because of VPconnCreated.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.Spec',
            'errorMessage' => 'The param of Spec is missing.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.Spec',
            'errorMessage' => 'The param of Spec is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.VlanId',
            'errorMessage' => 'The param of VlanId is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'VLAN_ID_HAS_BEEN_USED_IN_PHYSICAL_CONNECTION',
            'errorMessage' => 'vlan id has been used in physical connection',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The specified PhysicalConnectionId is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter \'PhysicalConnectionId\' that is mandatory for processing this request is not supplied.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotEnabled',
            'errorMessage' => 'The specified PhysicalConnectionId is not in Enabled state.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.PconnAllocateVlan0',
            'errorMessage' => 'The operation is failed because of PconnAllocatedResource.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidVlanId.Malformed',
            'errorMessage' => 'The specified VlanId is not valid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          14 => 
          array (
            'errorCode' => 'ResourceNotEnough.Bandwidth',
            'errorMessage' => 'The specified resource of Bandwidth is not enough.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.VpconnAliUid',
            'errorMessage' => 'The specified AliUid of Vpconn is illegal.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.OrderMode',
            'errorMessage' => 'The param of OrderMode is illegal.',
          ),
          17 => 
          array (
            'errorCode' => 'Forbidden.VpconnAliUid',
            'errorMessage' => 'Vpconn UID is forbidden to belong to a RAM account or partner account.',
          ),
          18 => 
          array (
            'errorCode' => 'QuotaExceeded.VPCONN',
            'errorMessage' => 'The quota of VPCONN_COUNT_PER_PCONN is exceeded',
          ),
          19 => 
          array (
            'errorCode' => 'OperationDenied.CreateVpconn',
            'errorMessage' => 'You are not allowed to create virtual physical connection. Please contact your CBM.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          21 => 
          array (
            'errorCode' => 'EcAssociatedQoSPconnNotAllowCreateVpconn',
            'errorMessage' => 'The specified Pconn associated with Qos is not allowed to create Vpconn.Please contact the business manager.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.ResourceGroupId',
            'errorMessage' => 'Invalid ResourceGroupld value.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CD14EA74-E9C3-59A9-942A-DFEC7E12818D\\",\\n  \\"VirtualPhysicalConnection\\": \\"pc-bp1mrgfbtmc9brre7****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVirtualPhysicalConnectionResponse>\\n    <RequestId>CD14EA74-E9C3-59A9-942A-DFEC7E12818D</RequestId>\\n    <VirtualPhysicalConnection>pc-bp1mrgfbtmc9brre7****</VirtualPhysicalConnection>\\n</CreateVirtualPhysicalConnectionResponse>","errorExample":""}]',
      'title' => '创建共享专线',
      'description' => '在调用接口前，请先了解共享专线的创建流程及环境要求。更多信息，请参见[共享专线连接概述](~~146571~~)和[合作伙伴操作指导](~~155987~~)。',
    ),
    'UpdateVirtualPhysicalConnection' => 
    array (
      'summary' => '调用UpdateVirtualPhysicalConnection接口修改共享专线的VLAN ID。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VlanId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vpconn的VlanID',
            'description' => '共享专线的VLAN ID。取值范围：**0**~**2999**。

- VLAN ID为**0**时，表示边界路由器VBR（Virtual Border Router）的物理交换机端口不使用VLAN模式，而使用三层路由接口模式。三层路由接口模式下每一条物理专线对应一个VBR。
- VLAN ID为**1**~**2999**时，表示VBR的物理交换机端口使用基于VLAN的三层子接口。三层子接口模式下每个VLAN ID对应一个VBR。此时，该VBR的物理专线可以连接多个账号下的VPC。不同VLAN下的VBR二层网络隔离，无法互通。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn的实例ID',
            'description' => '共享专线实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1mrgfbtmc9brre7****',
          ),
        ),
        2 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等Token',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'DryRun',
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会修改共享专线的VLAN ID。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。
- **false**（默认值）：发送正常请求，通过检查后直接修改共享专线的VLAN ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ExpectSpec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ExpectSpec',
            'description' => '共享专线的预计带宽值。完成支付后，带宽值才能生效。

取值：**50M**、**100M**、**200M**、**300M**、**400M**、**500M**、**1G**、**2G**、**5G**、**8G**、**10G**。

<props="china">
> **2G**、**5G**、**8G**、**10G**的带宽值默认不开放，如需使用，请向您的客户经理申请。</props>

<props="intl">
> **2G**、**5G**、**8G**、**10G**的带宽值默认不开放，如需使用，请向您的客户经理申请。</props>

单位：**M**表示Mbps，**G**表示Gbps。',
            'type' => 'string',
            'required' => false,
            'example' => '50M',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7035627E-1C1D-5BC7-A830-F897A35912D1',
              ),
              'Success' => 
              array (
                'title' => '是否修改成功',
                'description' => '是否已成功修改共享专线的VLAN ID。

- **true**：已成功修改。
- **false**：未成功修改。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.VlanId',
            'errorMessage' => 'The param of VlanId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'The specified PhysicalConnectionId [%s] is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotEnough.Bandwidth',
            'errorMessage' => 'The specified resource of Bandwidth is not enough.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of bandwidth is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.PhysicalConnection',
            'errorMessage' => 'Only parent physical connection account is allowed to modify the virtual physical connection.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.PhysicalConnectionFinancialLocked',
            'errorMessage' => 'Update failed, the physical connection is financial locked.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.PhysicalConnectionTerminated',
            'errorMessage' => 'Update failed, the physical connection is terminated.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.CreateVpconn',
            'errorMessage' => 'You are not allowed to create virtual physical connection. Please contact your CBM.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.VBR',
            'errorMessage' => 'The status of VBR is incorrect.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7035627E-1C1D-5BC7-A830-F897A35912D1\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateVirtualPhysicalConnectionResponse>\\n    <RequestId>7035627E-1C1D-5BC7-A830-F897A35912D1</RequestId>\\n    <Success>true</Success>\\n</UpdateVirtualPhysicalConnectionResponse>","errorExample":""}]',
      'title' => '修改共享专线的VLAN ID',
    ),
    'ListVirtualPhysicalConnections' => 
    array (
      'summary' => '调用ListVirtualPhysicalConnections接口查询共享专线的信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn的主Pconn',
            'description' => '共享专线关联的物理专线ID。

本文以下内容将共享专线关联的物理专线，简称为物理专线，和共享专线互做区分。',
            'type' => 'string',
            'required' => false,
            'example' => 'pc-bp1ciz7ekd2grn1as****',
          ),
        ),
        1 => 
        array (
          'name' => 'VirtualPhysicalConnectionBusinessStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn的商业状态',
            'description' => '共享专线的商业状态。取值：

- **Normal**：正常。
- **FinancialLocked**：欠费锁定。
- **SecurityLocked**：因安全原因被锁定。',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        2 => 
        array (
          'name' => 'VirtualPhysicalConnectionIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '根据Vpconn的ID列表过滤',
            'description' => '共享专线信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '共享专线实例ID。

支持输入多个实例ID，**N**的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-bp1mrgfbtmc9brre7****',
            ),
            'required' => false,
            'example' => 'pc-xxx',
            'maxItems' => 20,
          ),
        ),
        3 => 
        array (
          'name' => 'IsConfirmed',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Vpconn是否被确认',
            'description' => '共享专线是否已被租户确认接收。取值：

- **true**：是。
- **false**：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'VirtualPhysicalConnectionStatuses',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Vpconn的状态',
            'description' => '共享专线的业务状态信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '共享专线的业务状态。取值：

- **Confirmed**：共享专线已被确认接收。
- **UnConfirmed**：共享专线未被确认接收。
- **Deleted**：共享专线已被删除。

支持输入多种业务状态，**N**的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'Confirmed',
            ),
            'required' => false,
            'example' => 'pc-xxx',
            'maxItems' => 20,
          ),
        ),
        5 => 
        array (
          'name' => 'VirtualPhysicalConnectionAliUids',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Vpconn的OwnerUid',
            'description' => '共享专线拥有者的阿里云账号信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '共享专线拥有者的阿里云账号（主账号）ID。

支持输入多个阿里云账号（主账号）ID，**N**的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => '15346073170691****',
            ),
            'required' => false,
            'example' => '189xxx',
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'VlanIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Vpconn的vlanId',
            'description' => '共享专线的VLAN ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '共享专线的VLAN ID。

支持输入多个VLAN ID，**N**的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => '10',
            ),
            'required' => false,
            'example' => 'pc-xxx',
            'maxItems' => 20,
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '单次查询最大量',
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '单次查询最大量',
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'dd20****',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        10 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

最多支持64个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        11 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4p****	',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2A55F69E-EE3D-5CBE-8805-734F7D5B46B9',
              ),
              'VirtualPhysicalConnections' => 
              array (
                'title' => 'Vpconn',
                'description' => '共享专线信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '共享专线详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'description' => '物理专线的类型。默认值为**VPC**。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'Status' => 
                    array (
                      'description' => '物理专线的状态。取值：

- **Initial**：申请中。
- **Approved**：审批通过。
- **Allocating**：正在分配资源。
- **Allocated**：接入施工中。
- **Confirmed**：等待用户确认。
- **Enabled**：已开通。
- **Rejected**：申请被拒绝。
- **Canceled**：已取消。
- **Allocation Failed**：资源分配失败。
- **Terminated**：已终止。',
                      'type' => 'string',
                      'example' => 'Enabled',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '物理专线的创建时间。',
                      'type' => 'string',
                      'example' => '2021-06-08T12:20:55',
                    ),
                    'AdLocation' => 
                    array (
                      'description' => '物理专线接入设备所在的物理位置。',
                      'type' => 'string',
                      'example' => '余杭经济开发区XXX交叉口, 余杭XX机房, E***包间',
                    ),
                    'PortNumber' => 
                    array (
                      'description' => '物理专线接入设备的端口号。',
                      'type' => 'string',
                      'example' => '80',
                    ),
                    'Spec' => 
                    array (
                      'description' => '共享专线的带宽值。

单位：**M**表示Mbps，**G**表示Gbps。',
                      'type' => 'string',
                      'example' => '50M',
                    ),
                    'ChargeType' => 
                    array (
                      'description' => '物理专线的付费方式。

取值：**Prepaid**，表示预付费。',
                      'type' => 'string',
                      'example' => 'Prepaid',
                    ),
                    'Description' => 
                    array (
                      'description' => '物理专线的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'Bandwidth' => 
                    array (
                      'description' => '物理专线的带宽。单位：Mbps。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '50',
                    ),
                    'EnabledTime' => 
                    array (
                      'description' => '物理专线的开通时间。',
                      'type' => 'string',
                      'example' => '2021-10-08T10:44Z',
                    ),
                    'LineOperator' => 
                    array (
                      'description' => '提供接入物理线路的运营商。取值：

- **CT**：中国电信。
- **CU**：中国联通。
- **CM**：中国移动。
- **CO**：中国其他。
- **Equinix**：Equinix。
- **Other**：境外其他。',
                      'type' => 'string',
                      'example' => 'CU',
                    ),
                    'PeerLocation' => 
                    array (
                      'description' => '本地数据中心的地理位置。',
                      'type' => 'string',
                      'example' => '浙江省杭州市XX区XX街道XX号',
                    ),
                    'RedundantPhysicalConnectionId' => 
                    array (
                      'description' => '冗余物理专线的ID。',
                      'type' => 'string',
                      'example' => 'pc-119mfjzm****',
                    ),
                    'Name' => 
                    array (
                      'description' => '物理专线的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'CircuitCode' => 
                    array (
                      'description' => '运营商为物理专线提供的电路编码。',
                      'type' => 'string',
                      'example' => 'longtel001',
                    ),
                    'EndTime' => 
                    array (
                      'description' => '共享专线的到期时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2021-11-08T16:00:00Z',
                    ),
                    'PortType' => 
                    array (
                      'description' => '物理专线接入端口类型。取值：

- **100Base-T**：百兆电口。
- **1000Base-T**：千兆电口。
- **1000Base-LX**：千兆单模光口（10千米）。
- **10GBase-T**：万兆电口。
- **10GBase-LR**：万兆单模光口（10千米）。
- **40GBase-LR**：四万兆单模光口。
- **100GBase-LR**：十万兆单模光口。',
                      'type' => 'string',
                      'example' => '10GBase-LR',
                    ),
                    'BusinessStatus' => 
                    array (
                      'description' => '物理专线的商业状态。取值：

- **Normal**：已开通。
- **FinancialLocked**：欠费锁定。
- **SecurityLocked**：因安全原因被锁定。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'LoaStatus' => 
                    array (
                      'description' => 'LOA的状态。取值：

- **Applying**：LOA申请中。
- **Accept**：LOA申请通过。
- **Available**：LOA可用。
- **Rejected**：LOA申请驳回。
- **Completing**：专线施工中。
- **Complete**：专线施工完成。
- **Deleted**：LOA已删除。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'AccessPointId' => 
                    array (
                      'description' => '物理专线的接入点ID。',
                      'type' => 'string',
                      'example' => 'ap-cn-hangzhou-finance-yh-E',
                    ),
                    'PhysicalConnectionId' => 
                    array (
                      'description' => '共享专线实例ID。',
                      'type' => 'string',
                      'example' => 'pc-bp1mrgfbtmc9brre7****',
                    ),
                    'ProductType' => 
                    array (
                      'description' => '物理专线类型。取值：

- **VirtualPhysicalConnection**：共享专线。
- **PhysicalConnection**：独享专线。',
                      'type' => 'string',
                      'example' => 'VirtualPhysicalConnection',
                    ),
                    'ParentPhysicalConnectionId' => 
                    array (
                      'description' => '物理专线的实例ID。',
                      'type' => 'string',
                      'example' => 'pc-bp1ciz7ekd2grn1as****',
                    ),
                    'VirtualPhysicalConnectionStatus' => 
                    array (
                      'description' => '共享专线的业务状态。取值：

- **Confirmed**：共享专线已确认接收。
- **UnConfirmed**：共享专线未被确认接收。
- **Deleted**：共享专线已被删除。',
                      'type' => 'string',
                      'example' => 'Confirmed',
                    ),
                    'ParentPhysicalConnectionAliUid' => 
                    array (
                      'description' => '物理专线所属的阿里云账号（主账号）ID。',
                      'type' => 'string',
                      'example' => '18311773240248****',
                    ),
                    'OrderMode' => 
                    array (
                      'description' => '共享专线的付费方式。取值：

- **PayByPhysicalConnectionOwner**：表示共享专线关联的物理专线的拥有者付费。
- **PayByVirtualPhysicalConnectionOwner**：表示共享专线的拥有者付费。',
                      'type' => 'string',
                      'example' => 'PayByPhysicalConnectionOwner',
                    ),
                    'AliUid' => 
                    array (
                      'description' => '共享专线拥有者的阿里云账号（主账号）ID。',
                      'type' => 'string',
                      'example' => '15346073170691****',
                    ),
                    'VlanId' => 
                    array (
                      'description' => '共享专线的VLAN ID。',
                      'type' => 'string',
                      'example' => '10',
                    ),
                    'ExpectSpec' => 
                    array (
                      'description' => '共享专线的预计带宽值。完成支付后，预计带宽值才能生效。

单位：**M**表示Mbps，**G**表示Gbps。',
                      'type' => 'string',
                      'example' => '50M',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '共享专线所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-acfm3wmsyui****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '资源的标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

最多支持64个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'dd20****',
              ),
              'TotalCount' => 
              array (
                'title' => '总数',
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Count' => 
              array (
                'title' => '本次查询数量',
                'description' => '本次查询的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of Bandwidth [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'The specified PhysicalConnectionId [%s] is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2A55F69E-EE3D-5CBE-8805-734F7D5B46B9\\",\\n  \\"VirtualPhysicalConnections\\": [\\n    {\\n      \\"Type\\": \\"VPC\\",\\n      \\"Status\\": \\"Enabled\\",\\n      \\"CreationTime\\": \\"2021-06-08T12:20:55\\",\\n      \\"AdLocation\\": \\"余杭经济开发区XXX交叉口, 余杭XX机房, E***包间\\",\\n      \\"PortNumber\\": \\"80\\",\\n      \\"Spec\\": \\"50M\\",\\n      \\"ChargeType\\": \\"Prepaid\\",\\n      \\"Description\\": \\"desctest\\",\\n      \\"Bandwidth\\": 50,\\n      \\"EnabledTime\\": \\"2021-10-08T10:44Z\\",\\n      \\"LineOperator\\": \\"CU\\",\\n      \\"PeerLocation\\": \\"浙江省杭州市XX区XX街道XX号\\",\\n      \\"RedundantPhysicalConnectionId\\": \\"pc-119mfjzm****\\",\\n      \\"Name\\": \\"nametest\\",\\n      \\"CircuitCode\\": \\"longtel001\\",\\n      \\"EndTime\\": \\"2021-11-08T16:00:00Z\\",\\n      \\"PortType\\": \\"10GBase-LR\\",\\n      \\"BusinessStatus\\": \\"Normal\\",\\n      \\"LoaStatus\\": \\"Available\\",\\n      \\"AccessPointId\\": \\"ap-cn-hangzhou-finance-yh-E\\",\\n      \\"PhysicalConnectionId\\": \\"pc-bp1mrgfbtmc9brre7****\\",\\n      \\"ProductType\\": \\"VirtualPhysicalConnection\\",\\n      \\"ParentPhysicalConnectionId\\": \\"pc-bp1ciz7ekd2grn1as****\\",\\n      \\"VirtualPhysicalConnectionStatus\\": \\"Confirmed\\",\\n      \\"ParentPhysicalConnectionAliUid\\": \\"18311773240248****\\",\\n      \\"OrderMode\\": \\"PayByPhysicalConnectionOwner\\",\\n      \\"AliUid\\": \\"15346073170691****\\",\\n      \\"VlanId\\": \\"10\\",\\n      \\"ExpectSpec\\": \\"50M\\",\\n      \\"ResourceGroupId\\": \\"rg-acfm3wmsyui****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"NextToken\\": \\"dd20****\\",\\n  \\"TotalCount\\": 1,\\n  \\"Count\\": 1\\n}","errorExample":""},{"type":"xml","example":"<ListVirtualPhysicalConnectionsResponse>\\n    <RequestId>2A55F69E-EE3D-5CBE-8805-734F7D5B46B9</RequestId>\\n    <VirtualPhysicalConnections>\\n        <Type>VPC</Type>\\n        <Status>Enabled</Status>\\n        <CreationTime>2021-06-08T12:20:55</CreationTime>\\n        <AdLocation>余杭经济开发区XXX交叉口, 余杭XX机房, E***包间</AdLocation>\\n        <PortNumber>80</PortNumber>\\n        <Spec>50M</Spec>\\n        <ChargeType>Prepaid</ChargeType>\\n        <Description>desctest</Description>\\n        <Bandwidth>50</Bandwidth>\\n        <EnabledTime>2021-10-08T10:44Z</EnabledTime>\\n        <LineOperator>CU</LineOperator>\\n        <PeerLocation>浙江省杭州市XX区XX街道XX号</PeerLocation>\\n        <RedundantPhysicalConnectionId>pc-119mfjzm****</RedundantPhysicalConnectionId>\\n        <Name>nametest</Name>\\n        <CircuitCode>longtel001</CircuitCode>\\n        <EndTime>2021-11-08T16:00:00Z</EndTime>\\n        <PortType>10GBase-LR</PortType>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <LoaStatus>Available</LoaStatus>\\n        <AccessPointId>ap-cn-hangzhou-finance-yh-E</AccessPointId>\\n        <PhysicalConnectionId>pc-bp1mrgfbtmc9brre7****</PhysicalConnectionId>\\n        <ProductType>VirtualPhysicalConnection</ProductType>\\n        <ParentPhysicalConnectionId>pc-bp1ciz7ekd2grn1as****</ParentPhysicalConnectionId>\\n        <VirtualPhysicalConnectionStatus>Confirmed</VirtualPhysicalConnectionStatus>\\n        <ParentPhysicalConnectionAliUid>283117732402483989</ParentPhysicalConnectionAliUid>\\n        <OrderMode>PayByPhysicalConnectionOwner</OrderMode>\\n        <AliUid>253460731706911258</AliUid>\\n        <VlanId>10</VlanId>\\n        <ExpectSpec>50M</ExpectSpec>\\n    </VirtualPhysicalConnections>\\n    <NextToken>dd20****</NextToken>\\n    <TotalCount>1</TotalCount>\\n    <Count>1</Count>\\n</ListVirtualPhysicalConnectionsResponse>","errorExample":""}]',
      'title' => '查询共享专线的信息',
    ),
    'OpenPhysicalConnectionService' => 
    array (
      'summary' => '调用OpenPhysicalConnectionService接口开通出方向流量服务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PURCHASE_QUANTITY_LIMIT',
            'errorMessage' => 'Your purchase quantity exceeds the maximum limit.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.OrderOpened',
            'errorMessage' => 'You have already open the service. Go to the console to start using it.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<OpenPhysicalConnectionServiceResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</OpenPhysicalConnectionServiceResponse>","errorExample":""}]',
      'title' => '开通出云流量服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreatePhysicalConnection' => 
    array (
      'summary' => '调用CreatePhysicalConnection接口申请物理专线接入。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AccessPointId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的接入点ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-cn-beijing-ft-A',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的类型。默认值为**VPC**。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
            'default' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'LineOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提供接入物理线路的运营商。取值：

- **CT**：中国电信。

- **CU**：中国联通。

- **CM**：中国移动。

- **CO**：中国其他。 

- **Equinix**：Equinix。

- **Other**：境外其他。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CT',
          ),
        ),
        4 => 
        array (
          'name' => 'bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线的带宽。单位：Mbps。

取值分别为**50**、**100**、**200**、**300**、**400**、**500**、**1000**、**2000**、**4000**、**5000**、**8000**、**10000**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
            'default' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'PeerLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心的地理位置。 ',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'XX街道',
          ),
        ),
        6 => 
        array (
          'name' => 'PortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入端口类型。取值：

- **100Base-T**：百兆电口。

- **1000Base-T**：千兆电口。

- **1000Base-LX**：千兆单模光口（10千米）。

- **10GBase-T**：万兆电口。

- **10GBase-LR**：万兆单模光口（10千米）。

- **40GBase-LR**：四万兆单模光口。

- **100GBase-LR**：十万兆单模光口。
    

>40GBase-LR和100GBase-LR需要根据实际后台端口水位情况进行创建，具体水位情况请联系商务经理。 ',
            'type' => 'string',
            'required' => false,
            'example' => '1000Base-T',
            'default' => '1000Base-T',
          ),
        ),
        7 => 
        array (
          'name' => 'RedundantPhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '冗余物理专线的实例ID。该专线的状态必须为**Allocated**、**Confirmed**或**Enabled**。',
            'type' => 'string',
            'required' => false,
            'example' => 'pc-119mfjzm****',
          ),
        ),
        8 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的描述信息。 

长度为2～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        9 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的名称。  

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-），但不能以`http:// `或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        10 => 
        array (
          'name' => 'CircuitCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商为物理专线提供的电路编码。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'longtel001',
          ),
        ),
        11 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        12 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        13 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmoiyermp****',
          ),
        ),
        14 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        15 => 
        array (
          'name' => 'DeviceAdvancedCapacity',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备高级能力列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '设备高级能力列表，取值如下：
- **SubifRateLimit**：支持基于VBR粒度的带宽限速能力。
- **DualStack**：支持IPv6协议能力。
- **BFD**：支持转发点之间故障检测的网络协议能力。
- **CEN**：支持MP-BGP协议能力。
- **CENv6**：支持MP-BGPv6协议能力。',
              'type' => 'string',
              'required' => false,
              'enumValueTitles' => 
              array (
                'BFD' => 'BFD',
                'SubifRateLimit' => 'SubifRateLimit',
                'DualStack' => 'DualStack',
                'CENv6' => 'CENv6',
                'CEN' => 'CEN',
              ),
              'example' => 'CENv6',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PhysicalConnectionId' => 
              array (
                'description' => '物理专线实例ID。',
                'type' => 'string',
                'example' => 'pc-bp1ciz7ekd2grn1as****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8A6A5EC5-6F6C-4906-9689-56ACE58A13E0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid.Status',
            'errorMessage' => 'The device or interface status invalid, or has been used..',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidType.Malformd',
            'errorMessage' => 'The Type provided was invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidPeerLocation.Malformd',
            'errorMessage' => 'The PeerLocation provided was invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidLineOperator.Malformd',
            'errorMessage' => 'The LineOperator provided was invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidPortType.Malformd',
            'errorMessage' => 'The PortType provided was invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specifid ?Description? is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnectionId.NotFound',
            'errorMessage' => 'The RedundantPhysicalConnectionId  does not found.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified ?Name? is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaExceeded.pConnPerAP',
            'errorMessage' => 'Physical connection count per ap quota exceed.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidBandwidth',
            'errorMessage' => 'invalid physical connection banwidth.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnection',
            'errorMessage' => 'redundant physical connection doesn\'t belong to current user.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnectionStatus',
            'errorMessage' => 'invalid redundant physical connection status.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidCircuitCode.Malformed',
            'errorMessage' => 'circuitCode is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.freePconnPerAP',
            'errorMessage' => 'free physical connections count excceeded.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionOperator.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Operator is not valid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionPortType.Malformed',
            'errorMessage' => 'Specified PhysicalConnection PortType is not valid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionBandwidth.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Bandwidth is not valid.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.ClientToken',
            'errorMessage' => 'Token verify failed because client token length too long.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidPortType.NotFound',
            'errorMessage' => 'Specified port type is not found.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPortType.NotFound',
            'errorMessage' => 'There are no resources with the portType.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribePhysicalConnections',
        'callbackInterval' => 5,
        'maxCallbackTimes' => 100,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PhysicalConnectionId\\": \\"pc-bp1ciz7ekd2grn1as****\\",\\n  \\"RequestId\\": \\"8A6A5EC5-6F6C-4906-9689-56ACE58A13E0\\"\\n}","errorExample":""},{"type":"xml","example":"<CreatePhysicalConnectionResponse>\\n    <PhysicalConnectionId>pc-bp1ciz7ekd2grn1as****</PhysicalConnectionId>\\n    <RequestId>8A6A5EC5-6F6C-4906-9689-56ACE58A13E0</RequestId>\\n</CreatePhysicalConnectionResponse>","errorExample":""}]',
      'title' => '申请物理专线接入',
      'description' => '您可以申请独享物理专线，也可以为租户申请共享物理专线。 申请完成后，物理专线的状态为**Initial**，请联系运营商进行施工。 
    
调用该接口时，请注意： 
      
- 申请物理专线时，处于**Enabled**状态之外的物理专线不得超过5条。  

- 若账号下存在欠费状态的物理专线，则不能再申请物理专线。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ApplyPhysicalConnectionLOA' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线带宽值。单位：Mbps。

取值范围：**2**~**10240**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
            'default' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'PeerLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署物理专线的地理位置。',
            'type' => 'string',
            'required' => false,
            'example' => '杭州',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-bp1qrb3044eqi****',
          ),
        ),
        6 => 
        array (
          'name' => 'CompanyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入的客户公司名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'company',
          ),
        ),
        7 => 
        array (
          'name' => 'LineType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线类型。取值：

- **MSTP**：MSTP专线。
- **MPLSVPN**：MPLSVPN专线。
- **FIBRE**：光纤直连。
- **Other**：其它类型专线。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'FIBRE',
          ),
        ),
        8 => 
        array (
          'name' => 'Si',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线施工单位。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '阿里',
          ),
        ),
        9 => 
        array (
          'name' => 'ConstructionTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '施工单位入场时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-02-28T16:00:00Z',
          ),
        ),
        10 => 
        array (
          'name' => 'PMInfo',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '施工工程师信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '
施工工程师信息。',
              'type' => 'object',
              'properties' => 
              array (
                'PMCertificateNo' => 
                array (
                  'description' => '施工工程师证件号码，可以填身份证号码或者国际护照号码。

最多可配置16个施工工程师的信息。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => '5****************9',
                ),
                'PMName' => 
                array (
                  'description' => '施工工程师姓名。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => '张三',
                ),
                'PMCertificateType' => 
                array (
                  'description' => '施工工程师证件类型。取值：

- **IDCard**：身份证。
- **Passport**：国际护照。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => 'IDCard',
                ),
                'PMGender' => 
                array (
                  'description' => '施工工程师性别。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => 'Male',
                ),
                'PMContactInfo' => 
                array (
                  'description' => '施工工程师联系方式。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => '1390000****',
                ),
              ),
              'required' => false,
              'docRequired' => true,
            ),
            'required' => false,
            'maxItems' => 16,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A47BD386-7FDE-42C4-8D22-C6223D18AA1C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.AliUid',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.InstanceId',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.RegionNo',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.PMInfo',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.LineOperator',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.LineType',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.PeerLocation',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.PmCertificateType',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.PmCertificateNo',
            'errorMessage' => '%s',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.PmContactInfo',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.PmGender',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.PmName',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.Si',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidConstructionTime.Malformed',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnectionLOA',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnection',
            'errorMessage' => '%s',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.CompanyName',
            'errorMessage' => '%s',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of bandwidth is illegal.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A47BD386-7FDE-42C4-8D22-C6223D18AA1C\\"\\n}","errorExample":""},{"type":"xml","example":"<ApplyPhysicalConnectionLOAResponse>\\n    <RequestId>A47BD386-7FDE-42C4-8D22-C6223D18AA1C</RequestId>\\n</ApplyPhysicalConnectionLOAResponse>","errorExample":""}]',
      'title' => '申请LOA',
      'summary' => '调用ApplyPhysicalConnectionLOA接口申请LOA。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SecondApplyPhysicalConnectionLOA' => 
    array (
      'summary' => '如果之前调用ApplyPhysicalConnectionLOA接口申请LOA被拒绝，可以调用本接口重新申请LOA。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。 

由客户端生成该参数值，要保证在不同请求间唯一。 

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域。您可以通过调用[describeregions](~~36063~~)接口获取地域id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线带宽值。单位：Mbps。

取值范围：**2**~**10240**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
            'default' => '100',
          ),
        ),
        3 => 
        array (
          'name' => 'PeerLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署物理专线的地理位置。',
            'type' => 'string',
            'required' => false,
            'example' => '杭州',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-bp1qrb3044eqi****',
          ),
        ),
        5 => 
        array (
          'name' => 'CompanyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入的客户公司名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'company',
          ),
        ),
        6 => 
        array (
          'name' => 'LineType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线类型。取值：

- **MSTP**
- **MPLSVPN**
- **FIBRE**
- **Other**',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'FIBRE',
          ),
        ),
        7 => 
        array (
          'name' => 'Si',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线施工单位。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '阿里',
          ),
        ),
        8 => 
        array (
          'name' => 'ConstructionTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '施工单位入场时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-02-28T16:00:00Z',
          ),
        ),
        9 => 
        array (
          'name' => 'PMInfo',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '施工工程师信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '施工工程师信息。',
              'type' => 'object',
              'properties' => 
              array (
                'PMCertificateNo' => 
                array (
                  'description' => '施工工程师证件号码，可以填身份证号码或者国际护照号码。

最多可配置16个施工工程师的信息。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => '5****************9	
',
                ),
                'PMName' => 
                array (
                  'description' => '施工工程师姓名。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => '张三',
                ),
                'PMCertificateType' => 
                array (
                  'description' => '施工工程师证件类型。取值：

- **IDCard**：身份证。
- **Passport**：国际护照。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => 'IDCard',
                ),
                'PMGender' => 
                array (
                  'description' => '施工工程师性别。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => 'Male',
                ),
                'PMContactInfo' => 
                array (
                  'description' => '施工工程师联系方式。',
                  'type' => 'string',
                  'required' => false,
                  'docRequired' => true,
                  'example' => '1390000****',
                ),
              ),
              'required' => false,
              'docRequired' => true,
            ),
            'required' => false,
            'maxItems' => 16,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A47BD386-7FDE-42C4-8D22-C6223D18AA1C	
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'Invalid Bandwidth.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.CompanyLocalizedName',
            'errorMessage' => 'Invalid CompanyLocalizedName.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CompanyName',
            'errorMessage' => 'Invalid CompanyName.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.LineType',
            'errorMessage' => 'Invalid LineType.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.PeerLocation',
            'errorMessage' => 'Invalid PeerLocation.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.PmCertificateType',
            'errorMessage' => 'Invalid PmCertificateType.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.PmCertificateNo',
            'errorMessage' => 'Invalid PmCertificateNo.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.PmContactInfo',
            'errorMessage' => 'Invalid PmContactInfo.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.PmGender',
            'errorMessage' => 'Invalid PmGender.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.PmName',
            'errorMessage' => 'Invalid PmName.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.Si',
            'errorMessage' => 'Invalid Si.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'InstanceId is not found.',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnection',
            'errorMessage' => 'Invalid physical connection status.',
          ),
          14 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnectionLOA',
            'errorMessage' => 'Invalid Express Connect circuit LOA status.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationDenied.LOAForVirtualPhysicalConnection',
            'errorMessage' => 'The operation is not allowed because of LOAForVirtualPhysicalConnection.',
          ),
          16 => 
          array (
            'errorCode' => 'MissingParam.InstanceId',
            'errorMessage' => 'The parameter InstanceId is mandatory.',
          ),
          17 => 
          array (
            'errorCode' => 'MissingParam.ConstructionTime',
            'errorMessage' => 'The parameter ConstructionTime is mandatory.',
          ),
          18 => 
          array (
            'errorCode' => 'MissingParam.PMInfo',
            'errorMessage' => 'The parameter PMInfo is mandatory.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"A47BD386-7FDE-42C4-8D22-C6223D18AA1C\\\\t\\\\n\\"\\n}","type":"json"}]',
      'title' => '再次申请物理专线LOA',
    ),
    'CreatePhysicalConnectionSetupOrder' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-beijing',
          ),
        ),
        1 => 
        array (
          'name' => 'AccessPointId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接入点ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-cn-beijing-ft-A',
          ),
        ),
        2 => 
        array (
          'name' => 'LineOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提供接入物理线路的运营商。取值：

- **CT**：中国电信

- **CU**：中国联通

- **CM**：中国移动

- **CO**：中国其他

- **Equinix**：Equinix

- **Other**：中国境外其他',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CT',
          ),
        ),
        3 => 
        array (
          'name' => 'PortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入端口类型。取值：

- **100Base-T**：百兆电口。

- **1000Base-T**（默认值）：千兆电口。

- **1000Base-LX**：千兆单模光口（10千米）。

- **10GBase-T**：万兆电口。

- **10GBase-LR**：万兆单模光口（10千米）。

- **40GBase-LR**：四万兆单模光口。

- **100GBase-LR**：十万兆单模光口。

> 40GBase-LR和100GBase-LR需要根据实际后台端口水位情况进行创建，具体水位情况请联系商务经理。
',
            'type' => 'string',
            'required' => false,
            'example' => '100Base-T',
            'default' => '1000Base-T',
          ),
        ),
        4 => 
        array (
          'name' => 'RedundantPhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '冗余物理专线的ID，该专线的状态必须为**Allocated**、**Confirmed**或**Enabled**。',
            'type' => 'string',
            'required' => false,
            'example' => 'pc-bp10zsv5ntp****',
          ),
        ),
        5 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付。取值：

- **false**（默认值）：不自动支付。
- **true**：自动支付。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '318BB676-0A2B-43A0-9AD8-F1D34E93750F',
          ),
        ),
        7 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '318BB676-0A2B-43A0-9AD8-F1D34E93750F',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7A6301A-64BA-41EC-8284-8F4838C15D1F',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '202844382740728',
              ),
              'PhysicalConnectionId' => 
              array (
                'description' => '物理专线ID。',
                'type' => 'string',
                'example' => 'pc-2zegmc02v7ss4****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPrice.NotFound',
            'errorMessage' => 'Pricing plan result not found.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.PerAccessPoint',
            'errorMessage' => 'Physical connection count per ap quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionOperator.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Operator is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionPortType.Malformed',
            'errorMessage' => 'Specified PhysicalConnection PortType is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidPortType.NotFound',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidInstance.NotFound',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.AccessPoint',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F7A6301A-64BA-41EC-8284-8F4838C15D1F\\",\\n  \\"OrderId\\": \\"202844382740728\\",\\n  \\"PhysicalConnectionId\\": \\"pc-2zegmc02v7ss4****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreatePhysicalConnectionSetupOrderResponse>\\n    <RequestId>F7A6301A-64BA-41EC-8284-8F4838C15D1F</RequestId>\\n    <OrderId>202844382740728</OrderId>\\n    <PhysicalConnectionId>pc-2zegmc02v7ss4****</PhysicalConnectionId>\\n</CreatePhysicalConnectionSetupOrderResponse>","errorExample":""}]',
      'title' => '创建端口初装费订单',
      'summary' => '调用CreatePhysicalConnectionSetupOrder创建端口初装费订单。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreatePhysicalConnectionOccupancyOrder' => 
    array (
      'summary' => '调用CreatePhysicalConnectionOccupancyOrder接口创建资源占用费用的订单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1hp0wr072f6****',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买时长。

- 当**PricingCycle**取值**Month**时，**Period**取值范围为**1～9**。
- 当**PricingCycle**取值**Year**时，**Period**取值范围为**1～5**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的付费方式。取值：

**PrePaid**：预付费，包年包月。选择该类付费方式时，您必须确认您阿里云账号支持余额支付或信用支付。',
            'type' => 'string',
            'required' => false,
            'example' => 'PrePaid',
          ),
        ),
        4 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付。取值：

- **true**：自动支付。您需要确保账户余额充足，如果账户余额不足会生成异常订单，只能作废订单。
- **false**（默认值）：只生成订单不扣费。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 预付费的计费周期，取值：

- **Month**（默认值）：按月购买。
- **Year**：按年购买。



',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9B9300FE-11E2-4E3B-949C-BED3B44DD26D',
              ),
              'Data' => 
              array (
                'description' => '数据的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '已下订单的ID。',
                    'type' => 'string',
                    'example' => '50187055895****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IAbs.InvalidStatus.ValueNotSupported',
            'errorMessage' => 'status is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPrice.NotFound',
            'errorMessage' => 'Pricing plan result not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionChargeType.Malformed',
            'errorMessage' => 'Specified Physical Connection ChargeType is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionPeriod.Malformed',
            'errorMessage' => 'Specified Physical Connection Period is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionPricingCycle.Malformed',
            'errorMessage' => 'Specified Physical Connection PricingCycle is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedInState',
            'errorMessage' => 'The request does not allow in this state.',
          ),
          6 => 
          array (
            'errorCode' => 'INSTANCE.STATUS.NOT.ALLOW',
            'errorMessage' => 'Instance status not allow',
          ),
          7 => 
          array (
            'errorCode' => 'Abs.InstanceNotExist',
            'errorMessage' => 'The specified instance does not exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The PhysicalConnectionId provided does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9B9300FE-11E2-4E3B-949C-BED3B44DD26D\\",\\n  \\"Data\\": {\\n    \\"OrderId\\": \\"50187055895****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreatePhysicalConnectionOccupancyOrderResponse>\\n    <RequestId>9B9300FE-11E2-4E3B-949C-BED3B44DD26D</RequestId>\\n    <Data>\\n        <OrderId>50187055895****</OrderId>\\n    </Data>\\n</CreatePhysicalConnectionOccupancyOrderResponse>","errorExample":""}]',
      'title' => '创建资源占用费订单',
      'description' => '> 只有物理专线状态为等待用户支付（**Complete**）的实例允许执行此操作。',
    ),
    'CreateHighReliablePhysicalConnection' => 
    array (
      'summary' => '调用CreateHighReliablePhysicalConnection接口创还能高可靠模式物理专线，以满足您多线接入阿里云上业务的稳定性以及多线路容灾后可避免因为单线而导致的业务受损。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4p****',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

最多支持64个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        5 => 
        array (
          'name' => 'HighReliableType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高可靠模式。取值：

- **MultiApMultiDevice**：最强容灾能力。该模式支持两个不同接入点和两台不同设备，具备最强容灾能力。
- **MultiApSingleDevice**：强大容灾能力。该模式支持两个不同接入点和一台设备，具备强大容灾能力。
- **SingleApMultiDevice**：开发和测试。该模式支持一个接入点和两台设备，一般仅推荐用于非关键业务的开发和测试工作。
- **SingleApMultiConnection**：大带宽负载均衡能力。该模式为白名单开放，支持一个接入点一台设备多个物理端口，如有需求请联系商务经理。',
            'type' => 'string',
            'required' => true,
            'example' => 'MultiApMultiDevice',
          ),
        ),
        6 => 
        array (
          'name' => 'PortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入端口类型。取值：

- **1000Base-LX**：千兆单模光口（10千米）。

- **10GBase-LR**：万兆单模光口（10千米）。

- **40GBase-LR**：四万兆单模光口。

- **100GBase-LR**：十万兆单模光口。
    
>40GBase-LR和100GBase-LR需要根据实际后台端口水位情况进行创建，具体水位情况请联系商务经理。',
            'type' => 'string',
            'required' => true,
            'example' => '1000Base-LX',
          ),
        ),
        7 => 
        array (
          'name' => 'DeviceAdvancedCapacity',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备高级能力。取值：
- **SubifRateLimit**：VBR限速。
- **DualStack**：支持IPv6。
- **BFD**：双向转发检测。
- **CEN**：支持多协议BGP。
- **CENv6**：支持多协议BGPv6。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '设备高级能力。取值：
- **SubifRateLimit**：VBR限速。
- **DualStack**：支持IPv6。
- **BFD**：双向转发检测。
- **CEN**：支持多协议BGP。
- **CENv6**：支持多协议BGPv6。',
              'type' => 'string',
              'required' => false,
              'example' => 'SubifRateLimit, DualStack',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        8 => 
        array (
          'name' => 'ApList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '接入点列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'description' => '物理专线的名称。  

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-），但不能以`http:// `或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Description' => 
                array (
                  'description' => '物理专线的描述信息。

长度为2～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'description',
                ),
                'RegionId' => 
                array (
                  'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-shanghai',
                ),
                'LineOperator' => 
                array (
                  'description' => '提供接入物理线路的运营商。取值：

- **CT**：中国电信。

- **CU**：中国联通。

- **CM**：中国移动。

- **CO**：中国其他。 

- **Equinix**：Equinix。

- **Other**：境外其他。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'CT',
                ),
                'AccessPointId' => 
                array (
                  'description' => '物理专线所在的接入点ID。

> **HighReliableType**为**MultiApMultiDevice**和**MultiApSingleDevice**的时候要求传入两个不同的接入点，**HighReliableType**为**SingleApMultiDevice**和**SingleApMultiConnection**的时候要求传入一个接入点。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ap-cn-beijing-ft-A',
                ),
                'PortNum' => 
                array (
                  'description' => '端口数量。仅在**HighReliableType**为**SingleApMultiConnection**的时候要求传入，取值范围为2-16。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '2',
                ),
                'Type' => 
                array (
                  'description' => '物理专线的类型。默认值为**VPC**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'VPC',
                ),
                'Bandwidth' => 
                array (
                  'description' => '共享专线的带宽。单位：Mbps。

取值分别为50、100、200、300、400、500、1000、2000、4000、5000、8000、10000。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '50',
                ),
                'PeerLocation' => 
                array (
                  'description' => '本地数据中心的地理位置。 ',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'XX街道',
                ),
                'CircuitCode' => 
                array (
                  'description' => '运营商为物理专线提供的电路编码。 ',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'longtel001',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        9 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会启动实例。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，返回编码`DRYRUN.FAIL`，并且返回对应错误列表。如果检查通过，则返回编码`DRYRUN.SUCCESS`。

- **false**（默认值）：发送正常请求，通过检查后直接启动实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- **zh-CN**（默认值）：中文。
- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PhysicalConnectionList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'physicalConnectionList' => 
                  array (
                    'description' => '物理专线实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'description' => '物理专线实例ID。',
                          'type' => 'string',
                          'example' => 'pc-j5e5qqo616p81ncsp****',
                        ),
                        'RegionNo' => 
                        array (
                          'description' => '物理专线实例对应的地域ID',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'ErrorInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'errorInfoList' => 
                  array (
                    'description' => 'dryrun不通过的时候，返回的错误码和错误信息，会返回所有的错误信息，主要包括：

- `pconn.high.reliable.dryrun.error.disable.outbound.data.transfer.billing`：用户没有开通出云流量费。

- `pconn.high.reliable.dryrun.error.incompatable.device.capacity`：用户选择的接入点没有设备符合设备高级能力。

- `pconn.high.reliable.dryrun.error.quota.exceeded`：用户的quota不足。

- `pconn.high.reliable.dryrun.error.not.enough.resource`：接入点资源不足。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorCode' => 
                        array (
                          'description' => '错误码。',
                          'type' => 'string',
                          'example' => 'pconn.high.reliable.dryrun.error.disable.outbound.data.transfer.billing',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '错误信息。',
                          'type' => 'string',
                          'example' => 'pconn.high.reliable.dryrun.error.disable.outbound.data.transfer.billing',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '物理专线实例ID。',
                          'type' => 'string',
                          'example' => 'pc-j5e5qqo616p81ncsp****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid.Status',
            'errorMessage' => 'The device or interface status invalid, or has been used..',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidType.Malformd',
            'errorMessage' => 'The Type provided was invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidPeerLocation.Malformd',
            'errorMessage' => 'The PeerLocation provided was invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidLineOperator.Malformd',
            'errorMessage' => 'The LineOperator provided was invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidPortType.Malformd',
            'errorMessage' => 'The PortType provided was invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specifid ?Description? is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnectionId.NotFound',
            'errorMessage' => 'The RedundantPhysicalConnectionId  does not found.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified ?Name? is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaExceeded.pConnPerAP',
            'errorMessage' => 'Physical connection count per ap quota exceed.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidBandwidth',
            'errorMessage' => 'invalid physical connection banwidth.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnection',
            'errorMessage' => 'redundant physical connection doesn\'t belong to current user.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnectionStatus',
            'errorMessage' => 'invalid redundant physical connection status.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidCircuitCode.Malformed',
            'errorMessage' => 'circuitCode is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.freePconnPerAP',
            'errorMessage' => 'free physical connections count excceeded.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionOperator.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Operator is not valid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionPortType.Malformed',
            'errorMessage' => 'Specified PhysicalConnection PortType is not valid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionBandwidth.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Bandwidth is not valid.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.ClientToken',
            'errorMessage' => 'Token verify failed because client token length too long.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidPortType.NotFound',
            'errorMessage' => 'Specified port type is not found.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          20 => 
          array (
            'errorCode' => 'EcNotSupportRegion',
            'errorMessage' => 'High reliable physical connection is not support in this region.',
          ),
          21 => 
          array (
            'errorCode' => 'EcFailToGetAp',
            'errorMessage' => 'Fail to get access point details.',
          ),
          22 => 
          array (
            'errorCode' => 'EcNotEnoughResource',
            'errorMessage' => 'Insufficient access point resources.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPortType.NotFound',
            'errorMessage' => 'There are no resources with the portType.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribePhysicalConnections',
        'callbackInterval' => 5,
        'maxCallbackTimes' => 100,
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PhysicalConnectionList\\": {\\n    \\"physicalConnectionList\\": [\\n      {\\n        \\"InstanceId\\": \\"pc-j5e5qqo616p81ncsp****\\",\\n        \\"RegionNo\\": \\"cn-shanghai\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"ErrorInfoList\\": {\\n    \\"errorInfoList\\": [\\n      {\\n        \\"ErrorCode\\": \\"pconn.high.reliable.dryrun.error.disable.outbound.data.transfer.billing\\",\\n        \\"ErrorMessage\\": \\"pconn.high.reliable.dryrun.error.disable.outbound.data.transfer.billing\\",\\n        \\"InstanceId\\": \\"pc-j5e5qqo616p81ncsp****\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '创建高可靠物理专线',
      'description' => '您在购买端口时，可以选择以下三种组合类型为您的业务或工作提供容灾能力。
- 最强容灾能力：您将申请2个接入点内的资源，建立4条独立的物理专线连接。对于最强容灾能力的SLA可用性指标不低于99.99%。

- 强大容灾能力：您将申请2个接入点内的资源，建立2条独立的物理专线连接。对于强大容灾能力的SLA可用性指标不低于99.95%。

- 开发和测试：您将申请1个接入点的资源，建立2条独立的物理专线连接。',
    ),
    'CreateVpconnFromVbr' => 
    array (
      'summary' => '将共享专线从推送跨账号边界路由器VBR（Virtual Border Router）的方式转换为推送跨账号共享端口的方式。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vpconn的支付方',
            'description' => '共享专线的付费方式。取值：

- **PayByPhysicalConnectionOwner**：表示共享专线关联的物理专线的拥有者付费。
- **PayByVirtualPhysicalConnectionOwner**：表示共享专线的拥有者付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByVirtualPhysicalConnectionOwner',
            'enum' => 
            array (
              0 => 'PayByVirtualPhysicalConnectionOwner',
              1 => 'PayByPhysicalConnectionOwner',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '跨帐号的VBR',
            'description' => '跨账号的VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vbr-bp136flp1mf8mlq6r****',
          ),
        ),
        2 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等Token',
            'description' => '客户端Token用于保证请求的幂等性。

要保证Client Token在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'DryRun',
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会转换共享专线形式。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。
- **false**（默认值）：发送正常请求，通过检查后直接转换共享专线形式。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5356F028-0F5C-56FC-8574-897D24379041',
              ),
              'VirtualPhysicalConnection' => 
              array (
                'title' => 'Vpconn的实例ID',
                'description' => '共享专线实例ID。',
                'type' => 'string',
                'example' => 'pc-bp1mrgfbtmc9brre7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.TargetUserPconnTrafficNotEnable',
            'errorMessage' => 'The operation failed because of TargetUserPconnTrafficNotEnable.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotEnough.Bandwidth',
            'errorMessage' => 'The specified resource of Bandwidth is not enough.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.VbrBindedPconn',
            'errorMessage' => 'The operation is failed because of VbrBindedPconn.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of Bandwidth [%s] is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.VbrId',
            'errorMessage' => 'The status of %s is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'PhysicalConnection is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.VPconnCreated',
            'errorMessage' => 'The operation is failed because of VPconnCreated.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.BandwidthOrVlanIdEmpty',
            'errorMessage' => 'The operation is failed because of BandwidthOrVlanIdEmpty.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5356F028-0F5C-56FC-8574-897D24379041\\",\\n  \\"VirtualPhysicalConnection\\": \\"pc-bp1mrgfbtmc9brre7****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVpconnFromVbrResponse>\\n    <RequestId>5356F028-0F5C-56FC-8574-897D24379041</RequestId>\\n    <VirtualPhysicalConnection>pc-bp1mrgfbtmc9brre7****</VirtualPhysicalConnection>\\n</CreateVpconnFromVbrResponse>","errorExample":""}]',
      'title' => '转换共享专线推送方式',
      'description' => '通过CreateVpconnFromVbr接口，合作伙伴可以将租户使用的共享专线从推送跨账号VBR的方式转换为推送跨账号共享端口的方式。转换过程不会影响租户的业务。

在执行转换操作前：

合作伙伴需提前知会租户关于服务升级的相关事项，并确保租户已开通出方向流量费。关于如何开通出方向流量费，请参见[开通出方向流量费](~~274385~~)。

在转换操作完成后：

1. 租户的账号下会新增一个共享端口，租户需调用[ConfirmPhysicalConnection](~~324198~~)接口确认接收共享端口。
2. 在租户确认接收共享端口后，合作伙伴需调用[AttachVbrToVpconn](~~324191~~)接口将VBR实例绑定至租户的共享专线实例。',
    ),
    'DeletePhysicalConnection' => 
    array (
      'summary' => '调用DeletePhysicalConnection接口删除物理专线连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'high',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-119mfjzm7*********',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotMatched',
            'errorMessage' => 'instance id not matched.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.VBRExists',
            'errorMessage' => 'physical connection owner\'s vbr still exists.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.AssociateToVBR',
            'errorMessage' => 'The physical connection still associate to VBR.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.NeedVpconnOwner',
            'errorMessage' => 'The operation is denied.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.NeedPconnOwner',
            'errorMessage' => 'The operation is denied.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.NotInAllowDeleteStatus',
            'errorMessage' => 'Only physical connection in the Cancelled, Rejected, Terminated, Allocated, or AllocationFailed states can be deleted.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.PconnQos',
            'errorMessage' => 'The specified resource of PconnQos is already associated.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'PhysicalConnection is not found.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The PhysicalConnectionId provided does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeletePhysicalConnectionResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeletePhysicalConnectionResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeletePhysicalConnectionResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeletePhysicalConnectionResponse>"}]',
      'title' => '删除物理专线',
      'description' => '只能删除**Rejected**、**Canceled**、**AllocationFailed**和**Terminated**状态的物理专线连接。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelPhysicalConnection' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 物理专线的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-119mfjzm7****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedInState',
            'errorMessage' => 'The request does not allow in this state.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The PhysicalConnectionId provided does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<CancelPhysicalConnectionResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</CancelPhysicalConnectionResponse>","errorExample":"{\\n    \\"RequestId\\": \\"BE36E95A-F83E-4127-A29E-F2F35D4C999A\\"\\n}"}]',
      'title' => '取消物理专线接入',
      'summary' => '取消物理专线接入，取消后物理专线进入Canceled状态。',
      'description' => '只能取消处于**Initial**、**Approved**、**Allocated**和**Confirmed**状态（未开通状态）的物理专线接入。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyPhysicalConnectionAttribute' => 
    array (
      'summary' => '调用ModifyPhysicalConnectionAttribute接口修改物理专线的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-119mfjzm******',
          ),
        ),
        2 => 
        array (
          'name' => 'LineOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提供接入物理线路的运营商，取值： 
             
- **CT**：中国电信   

- **CU**：中国联通   

- **CM**：中国移动   

- **CO**：中国其他   

- **Equinix**：Equinix   

- **Other**：境外其他   
   ',
            'type' => 'string',
            'required' => false,
            'example' => 'CT',
          ),
        ),
        3 => 
        array (
          'name' => 'bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入接口带宽，单位Mbps，取值范围：2~10240。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'PeerLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 本地数据中心的地理位置。 ',
            'type' => 'string',
            'required' => false,
            'example' => '浙江省杭州市XX区XX街道XX号',
          ),
        ),
        5 => 
        array (
          'name' => 'PortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入端口类型，取值： 
             
- **100Base-T**：百兆电口。 

- **1000Base-T（默认值）**：千兆电口。   

- **1000Base-LX**：千兆单模光口（10千米）。   

- **10GBase-T**：万兆电口 。  

- **10GBase-LR**：万兆单模光口（10千米） 。  

- **40GBase-LR**：四万兆单模光口。   

- **100GBase-LR**：十万兆单模光口。   

> 40GBase-LR和100GBase-LR需要根据实际后台端口水位情况进行创建，具体水位情况请联系商务经理。

             ',
            'type' => 'string',
            'required' => false,
            'example' => '1000Base-LX',
          ),
        ),
        6 => 
        array (
          'name' => 'RedundantPhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '冗余物理专线的ID，该专线的状态必须为**Allocated**、**Confirmed**或**Enabled**。',
            'type' => 'string',
            'required' => false,
            'example' => 'pc-119mfjzm7',
          ),
        ),
        7 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 物理专线的描述信息。  

长度为 2~256个字符，必须以字母或中文开头，但不能以`http:// `或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => '物理专线的描述信息',
          ),
        ),
        8 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的名称。  

长度为 2~128个字符，必须以字母或中文开头，可包含数字，半角句号（.），下划线（_）和短划线（-）。但不能以`http:// `或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => '物理专线的名称',
          ),
        ),
        9 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'efefe566754h',
          ),
        ),
        10 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'efefe566754h',
          ),
        ),
        11 => 
        array (
          'name' => 'CircuitCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商为物理专线提供的电路编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'longtel001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '013EE132-A109-4247-91B0-099A8FF49AD7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidLineOperator.Malformd',
            'errorMessage' => 'The LineOperator provided was invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPeerLocation.Malformd',
            'errorMessage' => 'The PeerLocation provided was invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidPortType.Malformd',
            'errorMessage' => 'The PortType provided was invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified ?Name? is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidStatus',
            'errorMessage' => 'invalid physical connection status.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBandwidth',
            'errorMessage' => 'invalid physical connection banwidth.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnection',
            'errorMessage' => 'redundant physical connection doesn\'t belong to current user.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidRedundantPhysicalConnectionStatus',
            'errorMessage' => 'invalid redundant physical connection status.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidCircuitCode.Malformed',
            'errorMessage' => 'circuitCode is illegal.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionOperator.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Operator is not valid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionBandwidth.Malformed',
            'errorMessage' => 'Specified PhysicalConnection Bandwidth is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationDenied.VPconn',
            'errorMessage' => 'The operation is not allowed because of VPconn.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The PhysicalConnectionId provided does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"013EE132-A109-4247-91B0-099A8FF49AD7\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyPhysicalConnectionAttributeResponse>\\n    <RequestId>013EE132-A109-4247-91B0-099A8FF49AD7</RequestId>\\n</ModifyPhysicalConnectionAttributeResponse>","errorExample":""}]',
      'title' => '修改物理专线的配置',
      'description' => '调用该接口时，请注意： 

- 只有处于**Initial**、**Enabled**和**Rejected**状态的物理专线可以修改规格和冗余专线ID。  

- 无法修改处于**Canceled**、**Allocating**、**AllocationFailed**和**Terminated**状态的物理专线。  

- 处于**Rejected**状态的物理专线被修改后会进入**Initial**状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnablePhysicalConnection' => 
    array (
      'summary' => '开通处于Confirmed状态的物理专线，开通完成后物理专线进入Enabled状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'high',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域。

您可以通过调用DescribeRegions接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-2zeoaxkq3x****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        3 => 
        array (
          'name' => 'ByPassSp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表示是否跳过SP（即订单生命周期），取值：
- **true**：跳过SP，说明阿里云售卖系统不再管理该实例，可免费使用。
- **false**（默认值）：不跳过SP。

> 该功能需要向客户经理申请使用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '20365164-5b0d-460a-83c2-2189972b3349',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedInState',
            'errorMessage' => 'The request does not allow in this state.',
          ),
          1 => 
          array (
            'errorCode' => 'INSTANCE.STATUS.NOT.ALLOW',
            'errorMessage' => 'Instance status not allow',
          ),
          2 => 
          array (
            'errorCode' => 'ALIUID.NOT.ALLOW.WITHOUT.SP',
            'errorMessage' => 'AliUid not allow direct enable physical connection',
          ),
          3 => 
          array (
            'errorCode' => 'ACCESS.DEVICE.NOT.ALLOW.WITHOUT.SP',
            'errorMessage' => 'Access device not allow direct enable physical connection',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The PhysicalConnectionId provided does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"20365164-5b0d-460a-83c2-2189972b3349\\"\\n}","errorExample":""},{"type":"xml","example":"<EnablePhysicalConnectionResponse>\\n    <RequestId>20365164-5b0d-460a-83c2-2189972b3349</RequestId>\\n</EnablePhysicalConnectionResponse>","errorExample":""}]',
      'title' => '开通物理专线',
      'description' => '调用该接口时，请注意：

- 只允许开通处于**Confirmed**状态的物理专线。

- 开通完成后物理专线进入**Enabled**状态。

- **EnablePhysicalConnection**接口属于异步接口，即系统会返回一个实例ID，但该物理专线尚未开通完成，系统后台的开通任务仍在进行。您可以调用[DescribePhysicalConnections](~~36042~~)查询物理专线的开通状态。


- **EnablePhysicalConnection**接口不支持并发开通同一个处于**Confirmed**状态的物理专线。',
    ),
    'TerminatePhysicalConnection' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-119mfjzm****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedInState',
            'errorMessage' => 'The request does not allow in this state.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.VbrAttached',
            'errorMessage' => 'Cannot terminate physical connection when virtual border routers are still attached.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.VpconnAttached',
            'errorMessage' => 'Cannot terminate physical connection when vpconn are still attached.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The PhysicalConnectionId provided does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<TerminatePhysicalConnectionResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</TerminatePhysicalConnectionResponse>","errorExample":""}]',
      'title' => '终止物理专线接入',
      'summary' => '在物理专线开通后，终止物理专线接入。',
      'description' => '调用TerminatePhysicalConnection接口后，物理专线进入**Terminating**状态，处理完成后进入**Terminated**状态。
调用本接口终止物理专线时，请注意：

- 只能终止处于**Enabled**状态的物理专线。
- 终止物理专线之前，必须删除与其关联的VBR。',
    ),
    'RecoverPhysicalConnection' => 
    array (
      'summary' => '调用RecoverPhysicalConnection接口恢复物理专线接入。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '恢复的Pconn',
            'description' => '物理专线实例ID。

> 目前仅支持恢复共享专线的接入。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1mrgfbtmc9brre7****',
          ),
        ),
        1 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等Token',
            'description' => '客户端Token用于保证请求的幂等性。

由客户端生成该参数值，需保证该参数在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'DryRun',
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会恢复物理专线接入。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回请求ID。
- **false**（默认值）：发送正常请求，通过检查后直接恢复物理专线接入。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CD14EA74-E9C3-59A9-942A-DFEC7E12818D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnection',
            'errorMessage' => 'The status of %s is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource %s is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.TerminateVirtualPhysicalConnection',
            'errorMessage' => 'The operation is not allowed because of TerminateVirtualPhysicalConnection.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.PconnNotAllowRecover',
            'errorMessage' => 'Exclusive physical connection does not allow recovery.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CD14EA74-E9C3-59A9-942A-DFEC7E12818D\\"\\n}","errorExample":""},{"type":"xml","example":"<RecoverPhysicalConnectionResponse>\\n    <RequestId>CD14EA74-E9C3-59A9-942A-DFEC7E12818D</RequestId>\\n</RecoverPhysicalConnectionResponse>","errorExample":""}]',
      'title' => '恢复物理专线接入',
      'description' => '# 使用说明

您可以通过调用RecoverPhysicalConnection接口将已被终止接入的物理专线恢复接入。目前仅支持恢复共享专线的接入。',
    ),
    'AttachVbrToVpconn' => 
    array (
      'summary' => '关联边界路由器VBR（Virtual Border Router）实例至共享专线。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpconnId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '迁移到目标vpconn',
            'description' => '共享专线实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1mrgfbtmc9brre7****',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '待迁移的vbr',
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vbr-bp133sn3nwjvu7twc****',
          ),
        ),
        2 => 
        array (
          'name' => 'Token',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等Token',
            'description' => '客户端Token用于保证请求的幂等性。

要保证Client Token在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'DryRun',
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会关联VBR实例至共享专线。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回请求ID。
- **false**（默认值）：发送正常请求，通过检查后直接关联VBR实例至共享专线。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '共享专线所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5356F028-0F5C-56FC-8574-897D24379041',
              ),
              'VirtualPhysicalConnection' => 
              array (
                'title' => 'Vpconn的实例ID',
                'description' => '共享专线实例ID。',
                'type' => 'string',
                'example' => 'pc-bp1mrgfbtmc9brre7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.VPCONN',
            'errorMessage' => 'The quota of VBR_COUNT_PER_VPCONN is exceeded, usage 1/1.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.VbrBindedPconn',
            'errorMessage' => 'The operation is failed because of VbrBindedPconn.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'PhysicalConnection is not found.	',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnection',
            'errorMessage' => 'The specified PhysicalConnectionId [%s] is not in Enabled state.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5356F028-0F5C-56FC-8574-897D24379041\\",\\n  \\"VirtualPhysicalConnection\\": \\"pc-bp1mrgfbtmc9brre7****\\"\\n}","errorExample":""},{"type":"xml","example":"<AttachVbrToVpconnResponse>\\n    <RequestId>5356F028-0F5C-56FC-8574-897D24379041</RequestId>\\n    <VirtualPhysicalConnection>pc-bp1mrgfbtmc9brre7****</VirtualPhysicalConnection>\\n</AttachVbrToVpconnResponse>","errorExample":""}]',
      'title' => '共享专线关联VBR',
    ),
    'GetPhysicalConnectionServiceStatus' => 
    array (
      'summary' => '查看当前账号是否已开通出云流量费。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要查询是否开通出方向流量费的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'Enabled' => 
              array (
                'title' => '是否开通出云流量服务',
                'description' => '是否已开通出方向流量服务。
- **true**：已开通。

- **false**：未开通。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"Enabled\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetPhysicalConnectionServiceStatusResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <Enabled>true</Enabled>\\n</GetPhysicalConnectionServiceStatusResponse>","errorExample":""}]',
      'title' => '获取物理连接服务状态',
      'description' => '# 使用说明

您可以调用GetPhysicalConnectionServiceStatus接口查看当前账号是否已开通出方向流量费。关于出方向流量费的详细信息，请参见[开通出方向流量费](~~274385~~)和[计费说明](~~54582~~)。',
    ),
    'DescribeAccessPoints' => 
    array (
      'summary' => '调用DescribeAccessPoints接口查询指定地域中的物理专线接入点。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接入点所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- **zh-CN**：中文。
- **en-US**（默认值）：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3E85D803-C7CF-4BCD-9CFE-6DBA1DFFA027',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'AccessPointSet' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AccessPointType' => 
                  array (
                    'description' => '查询到的接入点信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '查询到的接入点信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '物理专线的接入点状态。

- **recommended** ：表示接入点状态良好，推荐接入。
- **hot** ：表示接入的物理专线较多，状态正常。
- **full** ：表示接入物理专线已满，不允许新增接入。
- **disabled** ：表示接入点不可用。',
                          'type' => 'string',
                          'example' => 'recommended',
                        ),
                        'Type' => 
                        array (
                          'description' => '物理专线的网络类型。默认值：**VPC**。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'HostOperator' => 
                        array (
                          'description' => '接入点所属的运营商。',
                          'type' => 'string',
                          'example' => '中国电信',
                        ),
                        'Description' => 
                        array (
                          'description' => '接入点描述信息。',
                          'type' => 'string',
                          'example' => '接入点描述信息',
                        ),
                        'AttachedRegionNo' => 
                        array (
                          'description' => '接入点所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Name' => 
                        array (
                          'description' => '接入点名称。',
                          'type' => 'string',
                          'example' => '杭州-余杭-C',
                        ),
                        'AccessPointId' => 
                        array (
                          'description' => '接入点ID。',
                          'type' => 'string',
                          'example' => 'ap-cn-hangzhou-****',
                        ),
                        'Location' => 
                        array (
                          'description' => '接入点的位置。',
                          'type' => 'string',
                          'example' => '杭州',
                        ),
                        'AccessPointFeatureModels' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AccessPointFeatureModel' => 
                            array (
                              'description' => '查询到的接入点特征模型。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '查询到的接入点特征模型。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'FeatureValue' => 
                                  array (
                                    'description' => '接入点特性值。',
                                    'type' => 'string',
                                    'example' => 'true',
                                  ),
                                  'FeatureKey' => 
                                  array (
                                    'description' => '接入点特性。',
                                    'type' => 'string',
                                    'example' => 'AP_Support_VbrBandwidthLimit',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAccessPointType.NotSupport',
            'errorMessage' => 'Invalid access point type.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionId.NotSupport',
            'errorMessage' => 'The RegionId provided does not support in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3E85D803-C7CF-4BCD-9CFE-6DBA1DFFA027\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 5,\\n  \\"AccessPointSet\\": {\\n    \\"AccessPointType\\": [\\n      {\\n        \\"Status\\": \\"recommended\\",\\n        \\"Type\\": \\"VPC\\",\\n        \\"HostOperator\\": \\"中国电信\\",\\n        \\"Description\\": \\"接入点描述信息\\",\\n        \\"AttachedRegionNo\\": \\"cn-hangzhou\\",\\n        \\"Name\\": \\"杭州-余杭-C\\",\\n        \\"AccessPointId\\": \\"ap-cn-hangzhou-****\\",\\n        \\"Location\\": \\"杭州\\",\\n        \\"AccessPointFeatureModels\\": {\\n          \\"AccessPointFeatureModel\\": [\\n            {\\n              \\"FeatureValue\\": \\"true\\",\\n              \\"FeatureKey\\": \\"AP_Support_VbrBandwidthLimit\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAccessPointsResponse>\\n    <RequestId>3E85D803-C7CF-4BCD-9CFE-6DBA1DFFA027</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>5</TotalCount>\\n    <AccessPointSet>\\n        <Status>recommended</Status>\\n        <Type>VPC</Type>\\n        <HostOperator>中国电信</HostOperator>\\n        <Description>接入点描述信息</Description>\\n        <AttachedRegionNo>cn-hangzhou</AttachedRegionNo>\\n        <Name>杭州-余杭-C</Name>\\n        <AccessPointId>ap-cn-hangzhou-****</AccessPointId>\\n        <Location>杭州</Location>\\n        <AccessPointFeatureModels>\\n            <FeatureValue>true</FeatureValue>\\n            <FeatureKey>AP_Support_VbrBandwidthLimit</FeatureKey>\\n        </AccessPointFeatureModels>\\n    </AccessPointSet>\\n</DescribeAccessPointsResponse>","errorExample":""}]',
      'title' => '查询指定地域中的物理专线接入点',
    ),
    'ConfirmPhysicalConnection' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-119mf****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'API-20365164-5b0d-460a-83c2-2189972b****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.PhysicalConnectionId',
            'errorMessage' => 'PhysicalConnection is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.RegionNo',
            'errorMessage' => 'RegionNo is missing.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.AliUid',
            'errorMessage' => 'AliUid is missing.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.PhysicalConnectionId',
            'errorMessage' => 'PhysicalConnectionId is missing.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The specified physicalConnection is not found',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnection',
            'errorMessage' => 'The specified PhysicalConnectionId is not in Allocated state.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.SkipConstruction',
            'errorMessage' => 'You can not skip construction.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"API-20365164-5b0d-460a-83c2-2189972b****\\"\\n}","errorExample":""},{"type":"xml","example":"<ConfirmPhysicalConnectionResponse>\\n    <RequestId>API-20365164-5b0d-460a-83c2-2189972b****</RequestId>\\n</ConfirmPhysicalConnectionResponse>","errorExample":""}]',
      'title' => '确认物理专线为可用状态',
      'summary' => '确认物理专线为可用状态，物理专线的状态会变为Confirmed。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePhysicalConnections' => 
    array (
      'summary' => '调用DescribePhysicalConnections接口查询指定地域内的物理专线信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值：**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值：**10**。  取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回未生效的订单数据。取值：

* **true**：返回。

* **false**（默认值）：不返回。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001',
          ),
        ),
        5 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件列表。



',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤条件。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件。取值：

- **PhysicalConnectionId**：物理专线ID。

- **AccessPointId**：接入点ID。

- **Type**：物理专线类型。该过滤条件仅支持过滤值**VPC**。

- **LineOperator**：物理专线的运营商。该过滤条件支持以下过滤值：
    - **CT**：中国电信。
    - **CU**：中国联通。
    - **CM**：中国移动。
    - **CO**：中国其他。 
    - **Equinix**：Equinix。
    - **Other**：境外其他。

- **Spec**：物理专线的规格。该过滤条件支持以下过滤值：
    - **1G及以下**。
    - **10G**。
    - **40G**。
    - **100G**。
>  **40G**、**100G**的规格默认不开放，向客户经理已提交申请并通过的用户才可使用该过滤值。

- **Status**：物理专线的状态。该过滤条件支持以下过滤值：
    - **Initial**：申请中。
    - **Approved**：审批通过。
    - **Allocating**：正在分配资源。
    - **Allocated**：接入施工中。   
    - **Confirmed**：等待用户确认。   
    - **Enabled**：已开通。
    - **Rejected**：申请被拒绝。
    - **Canceled**：已取消。
    - **Allocation Failed**：资源分配失败。
    - **Terminating**：终止中。
    - **Terminated**：已终止。

- **Name**：物理专线的名称。
- **ProductType**：专线类型。取值：
    - **VirtualPhysicalConnection**：共享专线。
    - **PhysicalConnection**：独享专线。
 


一次最多支持输入5个过滤条件。各个过滤条件之间为**与**关系，符合所有的过滤条件，才会返回正确的查询结果。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Name',
                ),
                'Value' => 
                array (
                  'description' => '过滤值列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '过滤条件对应的过滤值。

一个过滤条件支持最多输入5个过滤值，多个过滤值之间为**或**关系，只要与其中一个过滤值匹配则视为符合该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'nametest',
                  ),
                  'required' => false,
                  'example' => '1',
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        6 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

最多支持64个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aek2yvwibxr****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0E6D0EC4-7C91-53E2-9F65-64BF713114B0',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值：**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。默认值：**10**。  取值范围：**1**~**50**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PhysicalConnectionSet' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PhysicalConnectionType' => 
                  array (
                    'description' => '物理专线信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '物理专线的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '物理专线的类型。取值：**VPC**。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'Status' => 
                        array (
                          'description' => '物理专线的状态。取值：

- **Initial**：申请中。

- **Approved**：审批通过。

- **Allocating**：正在分配资源。

- **Allocated**：接入施工中。   

- **Confirmed**：等待用户确认。   

- **Enabled**：已开通。

- **Rejected**：申请被拒绝。

- **Canceled**：已取消。
 
- **Allocation Failed**：资源分配失败。

- **Terminating**：终止中。

- **Terminated**：已终止。',
                          'type' => 'string',
                          'example' => 'Enabled',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '物理专线的创建时间。',
                          'type' => 'string',
                          'example' => '2021-08-24T07:30:58Z',
                        ),
                        'AdLocation' => 
                        array (
                          'description' => '物理专线接入设备所在接入点位置。',
                          'type' => 'string',
                          'example' => '浙江省杭州市XX区XX镇XX路10号',
                        ),
                        'ReservationActiveTime' => 
                        array (
                          'description' => '未生效订单的生效时间。',
                          'type' => 'string',
                          'example' => '2022-02-25T11:01:04Z',
                        ),
                        'ReservationOrderType' => 
                        array (
                          'description' => '未生效订单的订单类型。

取值：**RENEW**，表示续费订单。',
                          'type' => 'string',
                          'example' => 'RENEW',
                        ),
                        'PortNumber' => 
                        array (
                          'description' => '物理专线接入设备的端口号。',
                          'type' => 'string',
                          'example' => '1/1/1',
                        ),
                        'Spec' => 
                        array (
                          'description' => '物理专线的规格。

单位：**G**表示Gbps。',
                          'type' => 'string',
                          'example' => '10G',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '物理专线的付费方式。

取值：**Prepaid**，表示预付费。
',
                          'type' => 'string',
                          'example' => 'Prepaid',
                        ),
                        'ReservationInternetChargeType' => 
                        array (
                          'description' => '未生效订单的付费类型。

取值：**PayByBandwidth**，表示按使用带宽付费。',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'Description' => 
                        array (
                          'description' => '物理专线的描述信息。',
                          'type' => 'string',
                          'example' => 'desctest',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => '物理专线的带宽。

单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'EnabledTime' => 
                        array (
                          'description' => '物理专线的开通时间。',
                          'type' => 'string',
                          'example' => '2021-08-24T07:33:18Z',
                        ),
                        'LineOperator' => 
                        array (
                          'description' => '提供接入物理线路的运营商。取值：

- **CT**：中国电信。

- **CU**：中国联通。

- **CM**：中国移动。

- **CO**：中国其他。 

- **Equinix**：Equinix。

- **Other**：境外其他。
  ',
                          'type' => 'string',
                          'example' => 'CT',
                        ),
                        'PeerLocation' => 
                        array (
                          'description' => '本地数据中心的地理位置。',
                          'type' => 'string',
                          'example' => '浙江省杭州市XX区XX镇XX路XX号',
                        ),
                        'RedundantPhysicalConnectionId' => 
                        array (
                          'description' => '冗余物理专线的ID。',
                          'type' => 'string',
                          'example' => 'pc-119mfjzm****',
                        ),
                        'Name' => 
                        array (
                          'description' => '物理专线的名称。',
                          'type' => 'string',
                          'example' => 'nametest',
                        ),
                        'CircuitCode' => 
                        array (
                          'description' => '运营商为物理专线提供的电路编码。',
                          'type' => 'string',
                          'example' => 'longtel001',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '物理专线的到期时间。',
                          'type' => 'string',
                          'example' => '2022-04-24T16:00:00Z',
                        ),
                        'PortType' => 
                        array (
                          'description' => '物理专线接入端口类型。取值：

- **100Base-T**：百兆电口。

- **1000Base-T**：千兆电口。

- **1000Base-LX**：千兆单模光口（10千米）。

- **10GBase-T**：万兆电口。

- **10GBase-LR**：万兆单模光口（10千米）。

- **40GBase-LR**：四万兆单模光口。

- **100GBase-LR**：十万兆单模光口。

> 40GBase-LR和100GBase-LR需要根据实际后台端口水位情况进行创建，具体水位情况请联系商务经理。


',
                          'type' => 'string',
                          'example' => '10GBase-LR',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => '物理专线的商业状态。取值：
         
- **Normal**：已开通。

- **FinancialLocked**：欠费锁定。   

- **SecurityLocked**：因安全原因被锁定。
',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'LoaStatus' => 
                        array (
                          'description' => 'LOA的状态。取值：

- **Applying**：LOA申请中。

- **Accept**：LOA申请通过。

- **Available**：LOA可用。

- **Rejected**：LOA申请驳回。

- **Completing**：专线施工中。

- **Complete**：专线施工完成。

- **Deleted**：LOA已删除。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'AccessPointId' => 
                        array (
                          'description' => '物理专线接入点的ID。',
                          'type' => 'string',
                          'example' => 'ap-cn-hangzhou-finance-yh-E',
                        ),
                        'AccessPointType' => 
                        array (
                          'description' => '物理专线接入点类型。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'HasReservationData' => 
                        array (
                          'description' => '是否包含未生效的订单数据。取值：
* **true**：包含。

* **false**：未包含。
',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'PhysicalConnectionId' => 
                        array (
                          'description' => '物理专线的实例ID。',
                          'type' => 'string',
                          'example' => 'pc-bp1ciz7ekd2grn1as****',
                        ),
                        'ProductType' => 
                        array (
                          'description' => '物理专线类型。取值：

- **VirtualPhysicalConnection**：共享专线。
- **PhysicalConnection**：独享专线。',
                          'type' => 'string',
                          'example' => 'PhysicalConnection',
                        ),
                        'VirtualPhysicalConnectionCount' => 
                        array (
                          'description' => '当前物理专线下已创建的共享专线数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ParentPhysicalConnectionId' => 
                        array (
                          'description' => '共享专线关联的物理专线实例ID。',
                          'type' => 'string',
                          'example' => 'pc-bp1ciz7ekd2grn1as****',
                        ),
                        'ParentPhysicalConnectionAliUid' => 
                        array (
                          'description' => '共享专线关联的物理专线所属的阿里云账号（主账号）ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '132193271328****',
                        ),
                        'VlanId' => 
                        array (
                          'description' => '共享专线的VLAN ID。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'OrderMode' => 
                        array (
                          'description' => '共享专线的付费方式。取值：

- **PayByPhysicalConnectionOwner**：表示合作伙伴付费。
- **PayByVirtualPhysicalConnectionOwner**：表示租户付费。',
                          'type' => 'string',
                          'example' => 'PayByPhysicalConnectionOwner',
                        ),
                        'VpconnStatus' => 
                        array (
                          'description' => '共享专线的业务状态。取值：

- **Confirmed**：共享专线已确认接收。
- **UnConfirmed**：共享专线未被确认接收。
- **Deleted**：共享专线已被删除。',
                          'type' => 'string',
                          'example' => 'Confirmed',
                        ),
                        'ExpectSpec' => 
                        array (
                          'description' => '共享专线的预计带宽值。完成支付后，预计带宽值才能生效。

单位：**M**表示Mbps，**G**表示Gbps。',
                          'type' => 'string',
                          'example' => '50M',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfmwu3k52p****',
                        ),
                        'AdDetailLocation' => 
                        array (
                          'description' => '表示机房及机柜的信息。',
                          'type' => 'string',
                          'example' => '浙江省杭州市XX区XX镇XX路10号, XX机房, ET135ET135-XX-2包间, JXX机柜,  position30',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'tags' => 
                            array (
                              'description' => '标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '资源的标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

最多支持64个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'QosId' => 
                        array (
                          'description' => 'QoS策略实例ID。',
                          'type' => 'string',
                          'example' => 'qos-bp10s3szn8rgnxuw7****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.ResourceGroupId',
            'errorMessage' => 'ResourceGroupId in  financial region is unsupported.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidFilterKey.ValueNotSupported',
            'errorMessage' => 'Specified filter key is not supported: Filter.X.key',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0E6D0EC4-7C91-53E2-9F65-64BF713114B0\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"PhysicalConnectionSet\\": {\\n    \\"PhysicalConnectionType\\": [\\n      {\\n        \\"Type\\": \\"VPC\\",\\n        \\"Status\\": \\"Enabled\\",\\n        \\"CreationTime\\": \\"2021-08-24T07:30:58Z\\",\\n        \\"AdLocation\\": \\"浙江省杭州市XX区XX镇XX路10号\\",\\n        \\"ReservationActiveTime\\": \\"2022-02-25T11:01:04Z\\",\\n        \\"ReservationOrderType\\": \\"RENEW\\",\\n        \\"PortNumber\\": \\"1/1/1\\",\\n        \\"Spec\\": \\"10G\\",\\n        \\"ChargeType\\": \\"Prepaid\\",\\n        \\"ReservationInternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"Description\\": \\"desctest\\",\\n        \\"Bandwidth\\": 10,\\n        \\"EnabledTime\\": \\"2021-08-24T07:33:18Z\\",\\n        \\"LineOperator\\": \\"CT\\",\\n        \\"PeerLocation\\": \\"浙江省杭州市XX区XX镇XX路XX号\\",\\n        \\"RedundantPhysicalConnectionId\\": \\"pc-119mfjzm****\\",\\n        \\"Name\\": \\"nametest\\",\\n        \\"CircuitCode\\": \\"longtel001\\",\\n        \\"EndTime\\": \\"2022-04-24T16:00:00Z\\",\\n        \\"PortType\\": \\"10GBase-LR\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"LoaStatus\\": \\"Available\\",\\n        \\"AccessPointId\\": \\"ap-cn-hangzhou-finance-yh-E\\",\\n        \\"AccessPointType\\": \\"VPC\\",\\n        \\"HasReservationData\\": \\"false\\",\\n        \\"PhysicalConnectionId\\": \\"pc-bp1ciz7ekd2grn1as****\\",\\n        \\"ProductType\\": \\"PhysicalConnection\\",\\n        \\"VirtualPhysicalConnectionCount\\": 0,\\n        \\"ParentPhysicalConnectionId\\": \\"pc-bp1ciz7ekd2grn1as****\\",\\n        \\"ParentPhysicalConnectionAliUid\\": 0,\\n        \\"VlanId\\": \\"10\\",\\n        \\"OrderMode\\": \\"PayByPhysicalConnectionOwner\\",\\n        \\"VpconnStatus\\": \\"Confirmed\\",\\n        \\"ExpectSpec\\": \\"50M\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmwu3k52p****\\",\\n        \\"AdDetailLocation\\": \\"浙江省杭州市XX区XX镇XX路10号, XX机房, ET135ET135-XX-2包间, JXX机柜,  position30\\",\\n        \\"Tags\\": {\\n          \\"tags\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        },\\n        \\"QosId\\": \\"qos-bp10s3szn8rgnxuw7****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribePhysicalConnectionsResponse>\\n    <RequestId>0E6D0EC4-7C91-53E2-9F65-64BF713114B0</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <PhysicalConnectionSet>\\n        <Type>VPC</Type>\\n        <Status>Enabled</Status>\\n        <CreationTime>2021-08-24T07:30:58Z</CreationTime>\\n        <AdLocation>浙江省杭州市XX区XX镇XX路10号</AdLocation>\\n        <ReservationActiveTime>2022-02-25T11:01:04Z</ReservationActiveTime>\\n        <ReservationOrderType>RENEW</ReservationOrderType>\\n        <PortNumber>1/1/1</PortNumber>\\n        <Spec>10G</Spec>\\n        <ChargeType>Prepaid</ChargeType>\\n        <ReservationInternetChargeType>PayByBandwidth</ReservationInternetChargeType>\\n        <Description>desctest</Description>\\n        <Bandwidth>10</Bandwidth>\\n        <EnabledTime>2021-08-24T07:33:18Z</EnabledTime>\\n        <LineOperator>CT</LineOperator>\\n        <PeerLocation>浙江省杭州市XX区XX镇XX路XX号</PeerLocation>\\n        <RedundantPhysicalConnectionId>pc-119mfjzm****</RedundantPhysicalConnectionId>\\n        <Name>nametest</Name>\\n        <CircuitCode>longtel001</CircuitCode>\\n        <EndTime>2022-04-24T16:00:00Z</EndTime>\\n        <PortType>10GBase-LR</PortType>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <LoaStatus>Available</LoaStatus>\\n        <AccessPointId>ap-cn-hangzhou-finance-yh-E</AccessPointId>\\n        <AccessPointType>VPC</AccessPointType>\\n        <HasReservationData>false</HasReservationData>\\n        <PhysicalConnectionId>pc-bp1ciz7ekd2grn1as****</PhysicalConnectionId>\\n        <ProductType>PhysicalConnection</ProductType>\\n        <VirtualPhysicalConnectionCount>0</VirtualPhysicalConnectionCount>\\n        <ParentPhysicalConnectionId>pc-bp1ciz7ekd2grn1as****</ParentPhysicalConnectionId>\\n        <VlanId>10</VlanId>\\n        <OrderMode>PayByPhysicalConnectionOwner</OrderMode>\\n        <VpconnStatus>Confirmed</VpconnStatus>\\n        <ExpectSpec>50M</ExpectSpec>\\n        <ResourceGroupId>rg-acfmwu3k52p****</ResourceGroupId>\\n        <AdDetailLocation>浙江省杭州市XX区XX镇XX路10号, XX机房, ET135ET135-XX-2包间, JXX机柜,  position30</AdDetailLocation>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </PhysicalConnectionSet>\\n</DescribePhysicalConnectionsResponse>","errorExample":""}]',
      'title' => '查询指定地域内的物理专线',
      'description' => '默认情况下，系统会查询指定地域内所有物理专线的信息，您可以通过**DescribePhysicalConnections**接口为您提供的过滤选项查询指定物理专线的信息。系统支持的过滤选项，请参见本文**请求参数**中**Key**的描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CompletePhysicalConnectionLOA' => 
    array (
      'summary' => '调用CompletePhysicalConnectionLOA完成施工完竣。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-230e-11e9-8e44-0016e04115b',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-230e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-bp10tvlhnwkw****',
          ),
        ),
        4 => 
        array (
          'name' => 'LineCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商线路编码。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'aaa111****',
          ),
        ),
        5 => 
        array (
          'name' => 'LineLabel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '机房楼内线缆标签。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'bbb222****',
          ),
        ),
        6 => 
        array (
          'name' => 'LineServiceProvider',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商主体。取值：
- **中国电信**。
- **中国联通**。
- **中国移动**。
- **中国其他**。',
            'type' => 'string',
            'required' => false,
            'example' => '中国其他',
          ),
        ),
        7 => 
        array (
          'name' => 'LineSPContactInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线路运维联系方式。',
            'type' => 'string',
            'required' => false,
            'example' => '1388888****',
          ),
        ),
        8 => 
        array (
          'name' => 'FinishWork',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否施工完竣。取值：
* **true**：完工报竣。
* **false**：线路运维。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F8983C74-E068-4509-B442-89BD82C8F43B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.AliUid',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.InstanceId',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.RegionNo',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.PhysicalConnectionLOA',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.LineCode',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.LineLabel',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.LOAStatusNotAllowComplete',
            'errorMessage' => 'The operation is not allowed because of LOAStatusNotAllowComplete.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.LineSPContactInfo',
            'errorMessage' => 'LineSPContactInfo is illegal.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F8983C74-E068-4509-B442-89BD82C8F43B\\"\\n}","errorExample":""},{"type":"xml","example":"<CompletePhysicalConnectionLOAResponse>\\n    <RequestId>F8983C74-E068-4509-B442-89BD82C8F43B</RequestId>\\n</CompletePhysicalConnectionLOAResponse>","errorExample":""}]',
      'title' => '完成施工完竣',
    ),
    'DescribePhysicalConnectionLOA' => 
    array (
      'summary' => '调用DescribePhysicalConnectionLOA查询物理专线LOA信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署物理专线的地域ID。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1ca4wca27ex****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '318BB676-0A2B-43A0-9AD8-F1D34E93750F',
              ),
              'PhysicalConnectionLOAType' => 
              array (
                'description' => '物理专线LOA信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => 'LOA的状态。取值：

- **Applying**：LOA申请中。
- **Accept**：LOA申请通过。
- **Available**：LOA可用。
- **Rejected**：LOA申请驳回。
- **Completing**：专线施工中。
- **Complete**：专线施工完成。
- **Deleted**：LOA已删除。

',
                    'type' => 'string',
                    'example' => 'Available',
                  ),
                  'LineLabel' => 
                  array (
                    'description' => '机房楼内线缆标签。',
                    'type' => 'string',
                    'example' => 'bbb222',
                  ),
                  'LineCode' => 
                  array (
                    'description' => '运营商线路编码。',
                    'type' => 'string',
                    'example' => 'aaa111',
                  ),
                  'ConstructionTime' => 
                  array (
                    'description' => '施工进场时间。',
                    'type' => 'string',
                    'example' => '2019-02-26T08:00:00Z',
                  ),
                  'SI' => 
                  array (
                    'description' => '入场施工单位。',
                    'type' => 'string',
                    'example' => 'ctcu',
                  ),
                  'LoaUrl' => 
                  array (
                    'description' => 'LOA文件下载地址。',
                    'type' => 'string',
                    'example' => 'http://******',
                  ),
                  'CompanyLocalizedName' => 
                  array (
                    'description' => '施工单位名称。',
                    'type' => 'string',
                    'example' => 'company',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '物理专线实例ID。',
                    'type' => 'string',
                    'example' => 'pc-bp1ca4wca27****',
                  ),
                  'LineType' => 
                  array (
                    'description' => '物理专线类型。取值：

- **MSTP**
- **MPLSVPN**
- **FIBRE**
- **Other**
',
                    'type' => 'string',
                    'example' => 'FIBRE',
                  ),
                  'CompanyName' => 
                  array (
                    'description' => '需要部署物理专线的单位名称。',
                    'type' => 'string',
                    'example' => 'test1234',
                  ),
                  'PMInfo' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PMInfo' => 
                      array (
                        'description' => '施工人员信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '施工人员信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PMGender' => 
                            array (
                              'description' => '施工人员性别。取值：

-  **Male**：男。
- **Female**：女。',
                              'type' => 'string',
                              'example' => 'Male',
                            ),
                            'PMCertificateNo' => 
                            array (
                              'description' => '施工人员证件号码。',
                              'type' => 'string',
                              'example' => '12345671****',
                            ),
                            'PMName' => 
                            array (
                              'description' => '施工人员姓名。',
                              'type' => 'string',
                              'example' => 'name',
                            ),
                            'PMCertificateType' => 
                            array (
                              'description' => '施工人员证件类型。取值：

- **IDCard**：身份证。
- **Passport**：护照。
- **Other**：其他。',
                              'type' => 'string',
                              'example' => 'Other',
                            ),
                            'PMContactInfo' => 
                            array (
                              'description' => '施工人员联系电话。',
                              'type' => 'string',
                              'example' => '18910010****',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'LineServiceProvider' => 
                  array (
                    'description' => '运营商主体。取值：
- **中国电信**。
- **中国联通**。
- **中国移动**。
- **中国其他**。',
                    'type' => 'string',
                    'example' => '中国其他',
                  ),
                  'LineSPContactInfo' => 
                  array (
                    'description' => '线路运维联系方式。',
                    'type' => 'string',
                    'example' => '1388888****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.AliUid',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.InstanceId',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.RegionNo',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"318BB676-0A2B-43A0-9AD8-F1D34E93750F\\",\\n  \\"PhysicalConnectionLOAType\\": {\\n    \\"Status\\": \\"Available\\",\\n    \\"LineLabel\\": \\"bbb222\\",\\n    \\"LineCode\\": \\"aaa111\\",\\n    \\"ConstructionTime\\": \\"2019-02-26T08:00:00Z\\",\\n    \\"SI\\": \\"ctcu\\",\\n    \\"LoaUrl\\": \\"http://******\\",\\n    \\"CompanyLocalizedName\\": \\"company\\",\\n    \\"InstanceId\\": \\"pc-bp1ca4wca27****\\",\\n    \\"LineType\\": \\"FIBRE\\",\\n    \\"CompanyName\\": \\"test1234\\",\\n    \\"PMInfo\\": {\\n      \\"PMInfo\\": [\\n        {\\n          \\"PMGender\\": \\"Male\\",\\n          \\"PMCertificateNo\\": \\"12345671****\\",\\n          \\"PMName\\": \\"name\\",\\n          \\"PMCertificateType\\": \\"Other\\",\\n          \\"PMContactInfo\\": \\"18910010****\\"\\n        }\\n      ]\\n    },\\n    \\"LineServiceProvider\\": \\"中国其他\\",\\n    \\"LineSPContactInfo\\": \\"1388888****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribePhysicalConnectionLOAResponse>\\n    <RequestId>318BB676-0A2B-43A0-9AD8-F1D34E93750F</RequestId>\\n    <PhysicalConnectionLOAType>\\n        <Status>Available</Status>\\n        <LineLabel>bbb222</LineLabel>\\n        <LineCode>aaa111</LineCode>\\n        <ConstructionTime>2019-02-26T08:00:00Z</ConstructionTime>\\n        <SI>ctcu</SI>\\n        <LoaUrl>http://******</LoaUrl>\\n        <CompanyLocalizedName>company</CompanyLocalizedName>\\n        <InstanceId>pc-bp1ca4wca27****</InstanceId>\\n        <LineType>FIBRE</LineType>\\n        <CompanyName>test1234</CompanyName>\\n        <PMInfo>\\n            <PMGender>Male</PMGender>\\n            <PMCertificateNo>12345671****</PMCertificateNo>\\n            <PMName>name</PMName>\\n            <PMCertificateType>Other</PMCertificateType>\\n            <PMContactInfo>18910010****</PMContactInfo>\\n        </PMInfo>\\n    </PhysicalConnectionLOAType>\\n</DescribePhysicalConnectionLOAResponse>","errorExample":""}]',
      'title' => '查询物理专线LOA信息',
    ),
    'ListGeographicSubRegions' => 
    array (
      'summary' => '调用ListGeographicSubRegions接口查询地域信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'GeographicSubRegions' => 
              array (
                'description' => '需要查询的地域列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '可以查询到的专线地域列表。',
                  'type' => 'string',
                  'example' => '["cn-beijing","cn-hangzhou"]',
                ),
              ),
              'Count' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"GeographicSubRegions\\": [\\n    \\"[\\\\\\"cn-beijing\\\\\\",\\\\\\"cn-hangzhou\\\\\\"]\\"\\n  ],\\n  \\"Count\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListGeographicSubRegionsResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <GeographicSubRegions>[\\"cn-beijing\\",\\"cn-hangzhou\\"]</GeographicSubRegions>\\n    <Count>10</Count>\\n</ListGeographicSubRegionsResponse>","errorExample":""}]',
      'title' => '查询地域信息',
    ),
    'ListBusinessAccessPoints' => 
    array (
      'summary' => '调用ListBusinessAccessPoints接口查询物理专线的接入点信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F',
              ),
              'BusinessAccessPoints' => 
              array (
                'description' => '物理专线所有接入点信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '物理专线所有接入点信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AccessPointId' => 
                    array (
                      'description' => '物理专线接入点的ID。',
                      'type' => 'string',
                      'example' => 'ap-cn-hangzhou-xs-B',
                    ),
                    'AccessPointName' => 
                    array (
                      'description' => '物理专线接入点的名称。',
                      'type' => 'string',
                      'example' => '杭州-萧山-B',
                    ),
                    'SupportLineOperator' => 
                    array (
                      'description' => '支持接入物理线路的运营商。取值：

- **CT**：中国电信。
- **CU**：中国联通。
- **CM**：中国移动。
- **CO**：中国其他。
- **Equinix**：Equinix。
- **Other**：境外其他。',
                      'type' => 'string',
                      'example' => 'CT',
                    ),
                    'SupportPortTypes' => 
                    array (
                      'description' => '物理专线接入点支持购买的端口类型。取值：

- **100Base-T**：百兆电口。
- **1000Base-T**：千兆电口。
- **1000Base-LX**：千兆单模光口（10千米）。
- **10GBase-T**：万兆电口。
- **10GBase-LR**：万兆单模光口（10千米）。
- **40GBase-LR**：四万兆单模光口。
- **100GBase-LR**：十万兆单模光口。

>  40GBase-LR和100GBase-LR需要根据实际后台端口水位情况进行创建，具体水位情况请联系商务经理。',
                      'type' => 'string',
                      'example' => '1000Base-T',
                    ),
                    'CloudBoxInstanceIds' => 
                    array (
                      'description' => '云盒实例ID。

> 当查询的物理专线和接入点为云盒物理专线和云盒接入点时，该参数可以查询。',
                      'type' => 'string',
                      'example' => 'cb-****',
                    ),
                    'Longitude' => 
                    array (
                      'description' => '接入点的经度。',
                      'type' => 'number',
                      'format' => 'double',
                      'example' => '120.247514',
                    ),
                    'Latitude' => 
                    array (
                      'description' => '接入点的纬度。',
                      'type' => 'number',
                      'format' => 'double',
                      'example' => '30.198416',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal system error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F\\",\\n  \\"BusinessAccessPoints\\": [\\n    {\\n      \\"AccessPointId\\": \\"ap-cn-hangzhou-xs-B\\",\\n      \\"AccessPointName\\": \\"杭州-萧山-B\\",\\n      \\"SupportLineOperator\\": \\"CT\\",\\n      \\"SupportPortTypes\\": \\"1000Base-T\\",\\n      \\"CloudBoxInstanceIds\\": \\"cb-****\\",\\n      \\"Longitude\\": 120.247514,\\n      \\"Latitude\\": 30.198416\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListBusinessAccessPointsResponse>\\n    <RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n    <BusinessAccessPoints>\\n        <AccessPointId>ap-cn-hangzhou-xs-B</AccessPointId>\\n        <AccessPointName>杭州-萧山-B</AccessPointName>\\n        <SupportLineOperator>CT</SupportLineOperator>\\n        <SupportPortTypes>1000Base-T</SupportPortTypes>\\n        <CloudBoxInstanceIds>cb-****</CloudBoxInstanceIds>\\n        <Longitude>120.247514</Longitude>\\n        <Latitude>30.198416</Latitude>\\n    </BusinessAccessPoints>\\n</ListBusinessAccessPointsResponse>","errorExample":""}]',
      'title' => '查询物理专线的接入点信息',
    ),
    'CreateFailoverTestJob' => 
    array (
      'summary' => '调用CreateFailoverTestJob接口创建高速通道故障演练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => '故障演练任务的名称。

长度为0～128个字符，不能以`http://` 或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => '故障演练任务的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源类型。取值：
● PHYSICALCONNECTION 物理专线',
            'description' => '演练资源类型。取值：**PHYSICALCONNECTION** 物理专线。',
            'type' => 'string',
            'required' => true,
            'example' => 'PHYSICALCONNECTION',
            'enum' => 
            array (
              0 => 'PHYSICALCONNECTION',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '资源ID列表。最多可以添加16个资源。',
            'description' => '演练资源ID列表。最多可以添加16个演练资源。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '演练资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-uf66k4e8pq3r00jfq****',
            ),
            'required' => true,
            'maxItems' => 16,
            'minItems' => 1,
          ),
        ),
        7 => 
        array (
          'name' => 'JobType',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '任务类型。取值：
● StartNow 立即开始
● StartLater 稍后开始',
            'description' => '故障演练任务方式。取值：

- **StartNow**：立即开始，演练任务创建成功后立即开始执行演练。

- **StartLater**：暂不演练，仅创建演练任务暂不执行演练。',
            'type' => 'string',
            'required' => true,
            'example' => 'StartNow',
            'enum' => 
            array (
              0 => 'StartNow',
              1 => 'StartLater',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'JobDuration',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务时长。单位为分钟，取值范围为：1-4320。',
            'description' => '故障演练任务时长。单位为分钟，取值范围为：**1~4320**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '4320',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF
',
              ),
              'JobId' => 
              array (
                'description' => '故障演练任务ID。',
                'type' => 'string',
                'example' => 'ftj-bp1yh6mvi13aq3g8w****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => 'The param of Name [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => 'The param of Description [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.ResourceType',
            'errorMessage' => 'Invalid Resource Type value.',
          ),
          3 => 
          array (
            'errorCode' => 'EcFailoverTestJobExceedMaxResourceNum',
            'errorMessage' => 'The input resource number is exceeded the quota of 16.',
          ),
          4 => 
          array (
            'errorCode' => 'EcFailoverTestJobResourceInAnotherProcessingJob',
            'errorMessage' => 'There is another processing failover test job.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.ResourceId',
            'errorMessage' => 'The input parameter resource ID is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.ResourceId',
            'errorMessage' => 'The specified resource status is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.ResourceId',
            'errorMessage' => 'The specified resource business status is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'VpconnNotAssociatedVbr',
            'errorMessage' => 'The specified vpconn is not associated with vbr.',
          ),
          9 => 
          array (
            'errorCode' => 'VpconnWithVlan0NotSupportShutdown',
            'errorMessage' => 'The specified virtualPhysicalConnection with vlan 0 does not support shutdown.',
          ),
          10 => 
          array (
            'errorCode' => 'PconnContainsMoreThanOneVpconn',
            'errorMessage' => 'The specified physicalConnection contains more than one virtualPhysicalConnection.',
          ),
          11 => 
          array (
            'errorCode' => 'PconnContailsMoreThanOneAcrossCountVbr',
            'errorMessage' => 'The specified physicalConnection contains more than one virtualBorderRouter which is across count.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.JobType',
            'errorMessage' => 'The specified parameter JobType is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.JobDuration',
            'errorMessage' => 'The specified parameter JobDuration is illegal.',
          ),
          14 => 
          array (
            'errorCode' => 'AnotherJobTesting',
            'errorMessage' => 'There is another job which is testing.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\\\n\\",\\n  \\"JobId\\": \\"ftj-bp1yh6mvi13aq3g8w****\\"\\n}","type":"json"}]',
      'title' => '创建高速通道故障演练任务',
      'description' => '以下场景不支持创建故障演练任务：

- 当前地域您已经有正在演练的故障演练任务，且本次创建故障演练任务的任务类型为立即开始。

- 物理专线实例或者共享物理专线实例没有支付完成或者处于欠费状态。

- 物理专线实例或者共享物理专线实例处于其他正在演练的故障演练任务中。
 
- 物理专线实例下有超过1个共享物理专线。

- 物理专线实例下有超过1个跨账号VBR。

- 共享物理专线实例没有绑定VBR。

- 共享物理专线实例的VLAN配置为0。',
    ),
    'StartFailoverTestJob' => 
    array (
      'summary' => '调用StartFailoverTestJob接口开始高速通道故障演练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        3 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务ID',
            'description' => '故障演练任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ftj-bp1yh6mvi13aq3g8w****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.JobId',
            'errorMessage' => 'The specified parameter JobId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.OnlyForInit',
            'errorMessage' => 'Only the init status failover test job can be started.',
          ),
          2 => 
          array (
            'errorCode' => 'EcFailoverTestJobResourceInAnotherProcessingJob',
            'errorMessage' => 'There is another processing failover test job.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.ResourceId',
            'errorMessage' => 'The input parameter resource ID is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.ResourceId',
            'errorMessage' => 'The specified resource status is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.ResourceId',
            'errorMessage' => 'The specified resource business status is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'VpconnNotAssociatedVbr',
            'errorMessage' => 'The specified vpconn is not associated with vbr.',
          ),
          7 => 
          array (
            'errorCode' => 'VpconnWithVlan0NotSupportShutdown',
            'errorMessage' => 'The specified virtualPhysicalConnection with vlan 0 does not support shutdown.',
          ),
          8 => 
          array (
            'errorCode' => 'PconnContainsMoreThanOneVpconn',
            'errorMessage' => 'The specified physicalConnection contains more than one virtualPhysicalConnection.',
          ),
          9 => 
          array (
            'errorCode' => 'PconnContailsMoreThanOneAcrossCountVbr',
            'errorMessage' => 'The specified physicalConnection contains more than one virtualBorderRouter which is across count.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\\\n\\"\\n}","type":"json"}]',
      'title' => '开始高速通道故障演练任务',
      'description' => '只支持开始处于**待演练**状态的故障演练任务。',
    ),
    'StopFailoverTestJob' => 
    array (
      'summary' => '调用StopFailoverTestJob接口结束高速通道故障演练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        3 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务ID',
            'description' => '故障演练任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ftj-bp1yh6mvi13aq3g8w****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.JobId',
            'errorMessage' => 'The specified parameter JobId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.OnlyForTesting',
            'errorMessage' => 'Only the failover test job in the testing state can be stopped.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\\\n\\"\\n}","type":"json"}]',
      'title' => '结束高速通道故障演练任务',
      'description' => '只支持结束处于**演练中**状态的故障演练任务。',
    ),
    'UpdateFailoverTestJob' => 
    array (
      'summary' => '调用UpdateFailoverTestJob接口更新高速通道故障演练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => '故障演练任务的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => '故障演练任务的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '资源ID列表。最多可以添加16个资源。',
            'description' => '故障演练资源ID列表。最多可以添加16个资源。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '故障演练资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-uf66k4e8pq3r00jfq****',
            ),
            'required' => false,
            'maxItems' => 16,
            'minItems' => 1,
          ),
        ),
        6 => 
        array (
          'name' => 'JobDuration',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务时长。单位为分钟，取值范围为：1-4320。',
            'description' => '故障演练任务时长。单位为分钟，取值范围为：**1~4320**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '4320',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        7 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务ID',
            'description' => '故障演练任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ftj-bp1yh6mvi13aq3g8w****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => 'The param of Name [%s] is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => 'The param of Description [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'EcFailoverTestJobExceedMaxResourceNum',
            'errorMessage' => 'The input resource number is exceeded the quota of 16.',
          ),
          3 => 
          array (
            'errorCode' => 'EcFailoverTestJobResourceInAnotherProcessingJob',
            'errorMessage' => 'There is another processing failover test job.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.ResourceId',
            'errorMessage' => 'The input parameter resource ID is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.ResourceId',
            'errorMessage' => 'The specified resource status is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.ResourceId',
            'errorMessage' => 'The specified resource business status is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'VpconnNotAssociatedVbr',
            'errorMessage' => 'The specified vpconn is not associated with vbr.',
          ),
          8 => 
          array (
            'errorCode' => 'VpconnWithVlan0NotSupportShutdown',
            'errorMessage' => 'The specified virtualPhysicalConnection with vlan 0 does not support shutdown.',
          ),
          9 => 
          array (
            'errorCode' => 'PconnContainsMoreThanOneVpconn',
            'errorMessage' => 'The specified physicalConnection contains more than one virtualPhysicalConnection.',
          ),
          10 => 
          array (
            'errorCode' => 'PconnContailsMoreThanOneAcrossCountVbr',
            'errorMessage' => 'The specified physicalConnection contains more than one virtualBorderRouter which is across count.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.JobDuration',
            'errorMessage' => 'The specified parameter JobDuration is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.JobId',
            'errorMessage' => 'The specified parameter JobId is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectStatus.OnlyForInit',
            'errorMessage' => 'Only the init status failover test job can be started.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\\\n\\"\\n}","type":"json"}]',
      'title' => '更新高速通道故障演练任务',
      'description' => '只支持更新处于**待演练**状态的故障演练任务。',
    ),
    'DeleteFailoverTestJob' => 
    array (
      'summary' => '调用DeleteFailoverTestJob接口删除高速通道故障演练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ch-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000
',
          ),
        ),
        3 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务ID',
            'description' => '故障演练任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ftj-bp1yh6mvi13aq3g8w****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.JobId',
            'errorMessage' => 'The specified parameter JobId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.OnlyForInitOrStopped',
            'errorMessage' => 'Only failover test job in the status of init  or stopped can be deleted.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\\\n\\"\\n}","type":"json"}]',
      'title' => '删除高速通道故障演练任务',
      'description' => '只支持删除处于**待演练**和**已完成**状态的故障演练任务。',
    ),
    'DescribeFailoverTestJob' => 
    array (
      'summary' => '调用DescribeFailoverTestJob接口查询高速通道故障演练任务详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '故障演练任务ID',
            'description' => '故障演练任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ftj-bp1yh6mvi13aq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
              'FailoverTestJobModel' => 
              array (
                'description' => '故障演练任务。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'title' => '故障演练任务ID。',
                    'description' => '故障演练任务ID。',
                    'type' => 'string',
                    'example' => 'ftj-bp1yh6mvi13aq3g8w****',
                  ),
                  'Name' => 
                  array (
                    'title' => '故障演练任务的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
                    'description' => '故障演练任务的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Description' => 
                  array (
                    'title' => '故障演练任务的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
                    'description' => '故障演练任务的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'ResourceType' => 
                  array (
                    'title' => '资源类型。取值：
● PHYSICALCONNECTION 物理专线',
                    'description' => '故障演练资源类型。取值：**PHYSICALCONNECTION**物理专线。',
                    'type' => 'string',
                    'example' => 'PHYSICALCONNECTION',
                  ),
                  'ResourceId' => 
                  array (
                    'description' => '故障演练资源ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '故障演练资源ID。',
                      'type' => 'string',
                      'example' => 'pc-hp34pxu31qo36a72u****',
                    ),
                  ),
                  'JobType' => 
                  array (
                    'title' => '演练类型。取值：
● StartNow 立即开始
● StartLater 稍后开始',
                    'description' => '故障演练类型。取值：

- **StartNow**：立即开始，任务演练任务创建成功后立即开始执行演练。

- **StartLater**：暂不演练，仅创建演练任务暂不执行演练。',
                    'type' => 'string',
                    'example' => 'StartNow',
                  ),
                  'JobDuration' => 
                  array (
                    'title' => '演练时长。单位为分钟，取值范围为：1-4320',
                    'description' => '故障演练时长。单位为分钟，取值范围为：**1~4320**。',
                    'type' => 'string',
                    'example' => '60',
                  ),
                  'StartTime' => 
                  array (
                    'title' => '故障演练任务开始时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                    'description' => '故障演练任务开始时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                    'type' => 'string',
                    'example' => '2023-11-21T14:00:00Z
',
                  ),
                  'StopTime' => 
                  array (
                    'title' => '故障演练任务结束时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                    'description' => '故障演练任务结束时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                    'type' => 'string',
                    'example' => '2023-11-21T15:00:00Z
',
                  ),
                  'Status' => 
                  array (
                    'title' => '故障演练任务状态。取值：
● Init 待演练
● Starting 开始中
● Testing 演练中
● Stopping 结束中
● Stopped 已结束',
                    'description' => '故障演练任务状态。取值：

- **Init**：待演练。

- **Starting**：开始中。

- **Testing**：演练中。

- **Stopping**：结束中。

- **Stopped**：已完成。',
                    'type' => 'string',
                    'example' => 'Init',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.JobId',
            'errorMessage' => 'The specified parameter JobId is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\",\\n  \\"FailoverTestJobModel\\": {\\n    \\"JobId\\": \\"ftj-bp1yh6mvi13aq3g8w****\\",\\n    \\"Name\\": \\"test\\",\\n    \\"Description\\": \\"test\\",\\n    \\"ResourceType\\": \\"PHYSICALCONNECTION\\",\\n    \\"ResourceId\\": [\\n      \\"pc-hp34pxu31qo36a72u****\\"\\n    ],\\n    \\"JobType\\": \\"StartNow\\",\\n    \\"JobDuration\\": \\"60\\",\\n    \\"StartTime\\": \\"2023-11-21T14:00:00Z\\\\n\\",\\n    \\"StopTime\\": \\"2023-11-21T15:00:00Z\\\\n\\",\\n    \\"Status\\": \\"Init\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询高速通道故障演练任务详情',
    ),
    'DescribeFailoverTestJobs' => 
    array (
      'summary' => '调用DescribeFailoverTestJobs接口批量查询高速通道故障演练任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障演练任务所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否拥有下一次查询的令牌（Token）。取值：
● 第一次查询和没有下一次查询时，均无需填写。
● 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分批次查询时每次显示的条目数。取值范围：1~100，默认值为20。',
            'description' => '分批次查询时每次显示的条目数。取值范围：**1~100**，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤信息列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'title' => '过滤条件。取值：
● JobId：故障演练任务ID
● JobName：故障演练任务名称
● JobStatus：任务状态
  ○ Init 待演练
  ○ Starting 开始中
  ○ Testing 演练中
  ○ Stopping 结束中
  ○ Stopped 已完成
● ResourceId：资源ID
● ResourceName：资源名称
● ResourceType：资源类型
  ○ PHYSICALCONNECTION 物理专线
一次最多支持输入5个过滤条件，过滤条件不支持重复，如果输入资源ID或者资源名称，必须输入资源类型。各个过滤条件之间为与关系，符合所有的过滤条件，才会返回正确的查询结果。',
                  'description' => '过滤条件。取值：

- **JobId**：故障演练任务ID。

- **JobName**：故障演练任务名称。

- **JobStatus**：故障演练任务状态。

- **ResourceId**：故障演练资源ID。

- **ResourceName**：故障演练资源名称。

- **ResourceType**：故障演练资源类型。

> 请确保最多输入5个不重复的过滤条件。当输入资源ID或资源名称时，需同时输入资源类型。所有过滤条件需同时满足才能得到准确的查询结果。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'JobId',
                  'enum' => 
                  array (
                    0 => 'JobId',
                    1 => 'JobName',
                    2 => 'JobStatus',
                    3 => 'ResourceId',
                    4 => 'ResourceName',
                    5 => 'ResourceType',
                  ),
                ),
                'Value' => 
                array (
                  'title' => '过滤条件对应的过滤值。
一个过滤条件支持最多输入5个过滤值，多个过滤值之间为或关系，只要与其中一个过滤值匹配则视为符合该过滤条件。',
                  'description' => '过滤条件对应的过滤值。

> 请确保每个过滤条件可以包含最多5个过滤值。这些过滤值之间采用"或"的关系，即只需满足其中任一过滤值，即可认为符合该过滤条件。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '过滤条件对应的过滤值。 

> 请确保每个过滤条件可以包含最多5个过滤值。这些过滤值之间采用"或"的关系，即只需满足其中任一过滤值，即可认为符合该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'ftj-bp1yh6mvi13aq3g8w****',
                  ),
                  'required' => false,
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'FailoverTestJobList' => 
              array (
                'description' => '故障演练任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '故障演练任务。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'title' => '故障演练任务ID。',
                      'description' => '故障演练任务ID。',
                      'type' => 'string',
                      'example' => 'ftj-bp1yh6mvi13aq3g8w****
',
                    ),
                    'Name' => 
                    array (
                      'title' => '故障演练任务的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
                      'description' => '故障演练任务的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Description' => 
                    array (
                      'title' => '故障演练任务的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
                      'description' => '故障演练任务的描述信息。

长度为0～256个字符，不能以**http://**或**https://**开头。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'ResourceType' => 
                    array (
                      'title' => '资源类型。取值：
● PHYSICALCONNECTION 物理专线',
                      'description' => '故障演练资源类型。取值：**PHYSICALCONNECTION**物理专线。',
                      'type' => 'string',
                      'example' => 'PHYSICALCONNECTION',
                    ),
                    'ResourceId' => 
                    array (
                      'title' => '资源ID列表',
                      'description' => '故障演练资源ID列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '资源ID。',
                        'type' => 'string',
                        'example' => 'pc-uf66k4e8pq3r00jfq****',
                      ),
                    ),
                    'JobType' => 
                    array (
                      'title' => '演练类型。取值：
● StartNow 立即开始
● StartLater 稍后开始',
                      'description' => '故障演练类型。取值：

- **StartNow**：立即开始，任务演练任务创建成功后立即开始执行演练。

- **StartLater**：暂不演练，仅创建演练任务暂不执行演练。',
                      'type' => 'string',
                      'example' => 'StartNow',
                    ),
                    'JobDuration' => 
                    array (
                      'title' => '演练时长。单位为分钟，取值范围为：1-4320',
                      'description' => '演练时长。单位为分钟，取值范围为：**1~4320**。',
                      'type' => 'string',
                      'example' => '60',
                    ),
                    'StartTime' => 
                    array (
                      'title' => '故障演练任务开始时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'description' => '故障演练任务开始时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2023-11-21T14:00:00Z',
                    ),
                    'StopTime' => 
                    array (
                      'title' => '故障演练任务结束时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'description' => '故障演练任务结束时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2023-11-21T15:00:00Z
',
                    ),
                    'Status' => 
                    array (
                      'title' => '故障演练任务状态。取值：
● Init 待演练
● Starting 开始中
● Testing 演练中
● Stopping 结束中
● Stopped 已结束',
                      'description' => '故障演练任务状态。取值：

- **Init**：待演练。

- **Starting**：开始中。

- **Testing**：演练中。

- **Stopping**：结束中。

- **Stopped**：已完成。',
                      'type' => 'string',
                      'example' => 'Init',
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'title' => '是否拥有下一次查询的令牌（Token）。取值：
● 第一次查询和没有下一次查询时，均无需填写。
● 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'MaxResults' => 
              array (
                'title' => '分批次查询时每次显示的条目数。取值范围：1~100，默认值为20。',
                'description' => '分批次查询时每次显示的条目数。取值范围：**1~100**，默认值为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalCount' => 
              array (
                'title' => '列表总条目数。',
                'description' => '列表总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Count' => 
              array (
                'title' => '列表当前条目数。',
                'description' => '列表当前条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Filter.Key',
            'errorMessage' => 'The filter parameter Key is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Filter.Value',
            'errorMessage' => 'The filter parameter Value is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'SystemQuotaConstraint.Filter.Value',
            'errorMessage' => 'The number of values in a key in the filter parameter cannot exceed 5.',
          ),
          3 => 
          array (
            'errorCode' => 'SystemQuotaConstraint.Filter.Key',
            'errorMessage' => 'The number of keys in the filter parameter cannot exceed 5.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.FilterKey.ResourceType',
            'errorMessage' => 'Filter parameters do not support entering only ResourceId or ResourceName without entering ResourceType.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.JobId',
            'errorMessage' => 'The specified parameter JobId is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.ResourceType',
            'errorMessage' => 'Invalid %s value.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"FailoverTestJobList\\": [\\n    {\\n      \\"JobId\\": \\"ftj-bp1yh6mvi13aq3g8w****\\\\n\\",\\n      \\"Name\\": \\"test\\",\\n      \\"Description\\": \\"test\\",\\n      \\"ResourceType\\": \\"PHYSICALCONNECTION\\",\\n      \\"ResourceId\\": [\\n        \\"pc-uf66k4e8pq3r00jfq****\\"\\n      ],\\n      \\"JobType\\": \\"StartNow\\",\\n      \\"JobDuration\\": \\"60\\",\\n      \\"StartTime\\": \\"2023-11-21T14:00:00Z\\",\\n      \\"StopTime\\": \\"2023-11-21T15:00:00Z\\\\n\\",\\n      \\"Status\\": \\"Init\\"\\n    }\\n  ],\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"MaxResults\\": 20,\\n  \\"TotalCount\\": 10,\\n  \\"Count\\": 10\\n}","type":"json"}]',
      'title' => '批量查询高速通道故障演练任务',
    ),
    'DescribeExpressConnectTrafficQosRule' => 
    array (
      'summary' => '调用DescribeExpressConnectTrafficQosRule查询高速通道QoS规则，不支持分页参数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'RuleIdList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Qos队列ID集合。',
            'description' => 'QoS规则ID集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'QoS规则ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'qos-rule-iugg0l9x27f2no****
',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'RuleNameList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Qos队列名称集合。',
            'description' => 'QoS规则名称集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'QoS规则名称。',
              'type' => 'string',
              'required' => false,
              'example' => 'qos-rule-test',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        6 => 
        array (
          'name' => 'QueueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS队列ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-queue-9nyx2u7n71s2rc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9C7FA9D6-72E0-48A9-A9C3-2DA8569CD5EB',
              ),
              'RuleList' => 
              array (
                'description' => 'QoS规则列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'QoS规则信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'QosId' => 
                    array (
                      'description' => 'QoS策略ID。',
                      'type' => 'string',
                      'example' => 'qos-pksbqfmotl5hzq****',
                    ),
                    'QueueId' => 
                    array (
                      'description' => 'QoS队列ID。',
                      'type' => 'string',
                      'example' => 'qos-queue-9nyx2u7n71s2rc****
',
                    ),
                    'Priority' => 
                    array (
                      'description' => 'QoS规则优先级。取值范围：**1**~**9000**，数字越大优先级越高，在同一个QoS策略内QoS规则优先级不允许重复。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Protocol' => 
                    array (
                      'description' => 'QoS规则协议类型，取值：

- **ALL**

- **ICMP(IPv4)**

- **ICMPv6(IPv6)**

- **TCP**

- **UDP**

- **GRE**

- **SSH**

- **Telnet**

- **HTTP**

- **HTTPS**

- **MS SQL**

- **Oracle**

- **MySql**

- **RDP**

- **PostgreSQL**

- **Redis**',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                      ),
                      'example' => 'ALL',
                    ),
                    'SrcCidr' => 
                    array (
                      'description' => 'QoS规则流量匹配源IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
                      'type' => 'string',
                      'example' => '1.1.**.**/24
',
                    ),
                    'DstCidr' => 
                    array (
                      'description' => 'QoS规则流量匹配目的IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
                      'type' => 'string',
                      'example' => '1.1.**.**/24
',
                    ),
                    'SrcIPv6Cidr' => 
                    array (
                      'description' => 'QoS规则流量匹配源IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
                      'type' => 'string',
                      'example' => '2001:0db8:1234:****::/64
',
                    ),
                    'DstIPv6Cidr' => 
                    array (
                      'description' => 'QoS规则流量匹配目的IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
                      'type' => 'string',
                      'example' => '2001:0db8:1234:****::/64
',
                    ),
                    'SrcPortRange' => 
                    array (
                      'description' => 'QoS规则流量匹配源端口号范围，取值范围：**0**~**65535**，当不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。',
                      'type' => 'string',
                      'example' => '-1/-1
',
                    ),
                    'DstPortRange' => 
                    array (
                      'description' => 'QoS规则流量匹配目的端口号范围。取值范围：**0**~**65535**，如果不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。不同的协议类型，对应的目的端口号范围是固定的，取值如下：

- **ALL**：-1/-1，不可编辑。

- **ICMP(IPv4)**：-1/-1，不可编辑。

- **ICMPv6(IPv6)**：-1/-1，不可编辑。

- **TCP**：-1/-1，可编辑。

- **UDP**：-1/-1，可编辑。

- **GRE**：-1/-1，不可编辑。

- **SSH**：22/22，不可编辑。

- **Telnet**：23/23，不可编辑。

- **HTTP**：80/80，不可编辑。

- **HTTPS**：443/443，不可编辑。

- **MS SQL**：1443/1443，不可编辑。

- **Oracle**：1521/1521，不可编辑。

- **MySql**：3306/3306，不可编辑。

- **RDP**：3389/3389，不可编辑。

- **PostgreSQL**：5432/5432，不可编辑。

- **Redis**：6379/6379，不可编辑。',
                      'type' => 'string',
                      'example' => '-1/-1
',
                    ),
                    'MatchDscp' => 
                    array (
                      'description' => 'QoS规则匹配流量的DSCP值。取值范围：**0**~**63**，如果不匹配时取值为-1。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'RemarkingDscp' => 
                    array (
                      'description' => '修改流量中的DSCP值。取值范围：**0**~**63**，如果不修改时取值为-1。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'RuleName' => 
                    array (
                      'description' => 'QoS规则的名称。

长度为0～128个字符，不能以`http://` 或`https://`开头。',
                      'type' => 'string',
                      'example' => 'qos-rule-test
',
                    ),
                    'RuleDescription' => 
                    array (
                      'description' => 'QoS规则的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'qos-rule-test
',
                    ),
                    'RuleId' => 
                    array (
                      'description' => 'QoS规则ID。',
                      'type' => 'string',
                      'example' => 'qos-rule-iugg0l9x27f2noc****',
                    ),
                    'Status' => 
                    array (
                      'description' => 'QoS规则的状态。取值：

- **Normal**：可用。

- **Configuring**：配置中。

- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9C7FA9D6-72E0-48A9-A9C3-2DA8569CD5EB\\",\\n  \\"RuleList\\": [\\n    {\\n      \\"QosId\\": \\"qos-pksbqfmotl5hzq****\\",\\n      \\"QueueId\\": \\"qos-queue-9nyx2u7n71s2rc****\\\\n\\",\\n      \\"Priority\\": 1,\\n      \\"Protocol\\": \\"ALL\\",\\n      \\"SrcCidr\\": \\"1.1.**.**/24\\\\n\\",\\n      \\"DstCidr\\": \\"1.1.**.**/24\\\\n\\",\\n      \\"SrcIPv6Cidr\\": \\"2001:0db8:1234:****::/64\\\\n\\",\\n      \\"DstIPv6Cidr\\": \\"2001:0db8:1234:****::/64\\\\n\\",\\n      \\"SrcPortRange\\": \\"-1/-1\\\\n\\",\\n      \\"DstPortRange\\": \\"-1/-1\\\\n\\",\\n      \\"MatchDscp\\": 1,\\n      \\"RemarkingDscp\\": 1,\\n      \\"RuleName\\": \\"qos-rule-test\\\\n\\",\\n      \\"RuleDescription\\": \\"qos-rule-test\\\\n\\",\\n      \\"RuleId\\": \\"qos-rule-iugg0l9x27f2noc****\\",\\n      \\"Status\\": \\"Normal\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询高速通道QoS规则',
    ),
    'DescribeExpressConnectTrafficQosQueue' => 
    array (
      'summary' => '调用DescribeExpressConnectTrafficQosQueue查询高速通道QoS队列。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai
',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        3 => 
        array (
          'name' => 'QueueIdList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Qos队列ID集合。',
            'description' => 'QoS队列ID集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'QoS队列ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'qos-queue-9nyx2u7n71s2rc****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'QueueNameList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Qos队列名称集合。',
            'description' => 'QoS队列名称集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'QoS队列名称。',
              'type' => 'string',
              'required' => false,
              'example' => 'qos-queue-test',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
              'QueueList' => 
              array (
                'description' => 'QoS队列列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'QoS队列信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'QosId' => 
                    array (
                      'description' => 'QoS策略ID。',
                      'type' => 'string',
                      'example' => 'qos-ncfgzxg40zks5n****',
                    ),
                    'QueueId' => 
                    array (
                      'description' => 'QoS队列ID。',
                      'type' => 'string',
                      'example' => 'qos-queue-9nyx2u7n71s2rc****',
                    ),
                    'QueueType' => 
                    array (
                      'description' => 'QoS队列类型，取值：

- **High**：高优先级队列。

- **Medium**：普通优先级队列。

- **Default**：默认优先级队列。

> 默认优先级队列无法创建。',
                      'type' => 'string',
                      'example' => 'High',
                    ),
                    'BandwidthPercent' => 
                    array (
                      'description' => 'QoS队列带宽百分比。

* 当QoS队列类型为**Medium**的时候，此字段必须输入，取值范围为：**1**~**100**。

* 当QoS队列类型为**Default**的时候，此字段为"-"。',
                      'type' => 'string',
                      'example' => '100',
                    ),
                    'QueueName' => 
                    array (
                      'description' => 'QoS队列的名称。

长度为**0**～**128**个字符，不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'qos-queue-test',
                    ),
                    'QueueDescription' => 
                    array (
                      'description' => 'QoS队列的描述信息。

长度为**0**～**256**个字符，不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'qos-queue-test',
                    ),
                    'RuleList' => 
                    array (
                      'description' => 'QoS规则列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'QoS规则信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'QosId' => 
                          array (
                            'description' => 'QoS策略ID。',
                            'type' => 'string',
                            'example' => 'qos-91xz9f8zd7yj8x****',
                          ),
                          'QueueId' => 
                          array (
                            'description' => 'QoS队列ID。',
                            'type' => 'string',
                            'example' => 'qos-queue-iugg0l9x27f2no****',
                          ),
                          'Priority' => 
                          array (
                            'description' => 'QoS规则优先级。取值范围：**1**~**9000**，数字越大优先级越高，在同一个QoS策略内QoS规则优先级不允许重复。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'Protocol' => 
                          array (
                            'description' => 'QoS规则协议类型，取值：

- **ALL**

- **ICMP(IPv4)**

- **ICMPv6(IPv6)**

- **TCP**

- **UDP**

- **GRE**

- **SSH**

- **Telnet**

- **HTTP**

- **HTTPS**

- **MS SQL**

- **Oracle**

- **MySql**

- **RDP**

- **PostgreSQL**

- **Redis**',
                            'type' => 'string',
                            'enumValueTitles' => 
                            array (
                            ),
                            'example' => 'ALL',
                          ),
                          'SrcCidr' => 
                          array (
                            'description' => 'QoS规则流量匹配源IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
                            'type' => 'string',
                            'example' => '1.1.**.**/24',
                          ),
                          'DstCidr' => 
                          array (
                            'description' => 'QoS规则流量匹配目的IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
                            'type' => 'string',
                            'example' => '1.1.**.**/24
',
                          ),
                          'SrcIPv6Cidr' => 
                          array (
                            'description' => 'QoS规则流量匹配源IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
                            'type' => 'string',
                            'example' => '2001:0db8:1234:****::/64',
                          ),
                          'DstIPv6Cidr' => 
                          array (
                            'description' => 'QoS规则流量匹配目的IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
                            'type' => 'string',
                            'example' => '2001:0db8:1234:****::/64',
                          ),
                          'SrcPortRange' => 
                          array (
                            'description' => 'QoS规则流量匹配源端口号范围，取值范围：**0**~**65535**，当不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。',
                            'type' => 'string',
                            'example' => '-1/-1',
                          ),
                          'DstPortRange' => 
                          array (
                            'description' => 'QoS规则流量匹配目的端口号范围。取值范围：**0**~**65535**，如果不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。不同的协议类型，对应的目的端口号范围是固定的，取值如下：

- **ALL**：-1/-1，不可编辑。

- **ICMP(IPv4)**：-1/-1，不可编辑。

- **ICMPv6(IPv6)**：-1/-1，不可编辑。

- **TCP**：-1/-1，可编辑。

- **UDP**：-1/-1，可编辑。

- **GRE**：-1/-1，不可编辑。

- **SSH**：22/22，不可编辑。

- **Telnet**：23/23，不可编辑。

- **HTTP**：80/80，不可编辑。

- **HTTPS**：443/443，不可编辑。

- **MS SQL**：1443/1443，不可编辑。

- **Oracle**：1521/1521，不可编辑。

- **MySql**：3306/3306，不可编辑。

- **RDP**：3389/3389，不可编辑。

- **PostgreSQL**：5432/5432，不可编辑。

- **Redis**：6379/6379，不可编辑。',
                            'type' => 'string',
                            'example' => '-1/-1',
                          ),
                          'MatchDscp' => 
                          array (
                            'description' => 'QoS规则匹配流量的DSCP值。取值范围：**0**~**63**，如果不匹配时取值为-1。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'RemarkingDscp' => 
                          array (
                            'description' => '修改流量中的DSCP值。取值范围：**0**~**63**，如果不修改时取值为-1。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'RuleName' => 
                          array (
                            'description' => 'QoS规则的名称。

长度为**0**～**128**个字符，不能以`http://` 或`https://`开头。',
                            'type' => 'string',
                            'example' => 'qos-rule-test',
                          ),
                          'RuleDescription' => 
                          array (
                            'description' => 'QoS规则的描述信息。

长度为**0**～**256**个字符，不能以`http://`或`https://`开头。',
                            'type' => 'string',
                            'example' => 'qos-rule-test',
                          ),
                          'RuleId' => 
                          array (
                            'description' => 'QoS规则ID。',
                            'type' => 'string',
                            'example' => 'qos-rule-iugg0l9x27f2no****
',
                          ),
                          'Status' => 
                          array (
                            'description' => 'QoS规则的状态。取值：

- **Normal**：可用。

- **Configuring**：配置中。

- **Deleting**：删除中。',
                            'type' => 'string',
                            'example' => 'Normal',
                          ),
                        ),
                      ),
                    ),
                    'Status' => 
                    array (
                      'description' => 'QoS队列的状态。取值：

- **Normal**：可用。

- **Configuring**：配置中。

- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\",\\n  \\"QueueList\\": [\\n    {\\n      \\"QosId\\": \\"qos-ncfgzxg40zks5n****\\",\\n      \\"QueueId\\": \\"qos-queue-9nyx2u7n71s2rc****\\",\\n      \\"QueueType\\": \\"High\\",\\n      \\"BandwidthPercent\\": \\"100\\",\\n      \\"QueueName\\": \\"qos-queue-test\\",\\n      \\"QueueDescription\\": \\"qos-queue-test\\",\\n      \\"RuleList\\": [\\n        {\\n          \\"QosId\\": \\"qos-91xz9f8zd7yj8x****\\",\\n          \\"QueueId\\": \\"qos-queue-iugg0l9x27f2no****\\",\\n          \\"Priority\\": 1,\\n          \\"Protocol\\": \\"ALL\\",\\n          \\"SrcCidr\\": \\"1.1.**.**/24\\",\\n          \\"DstCidr\\": \\"1.1.**.**/24\\\\n\\",\\n          \\"SrcIPv6Cidr\\": \\"2001:0db8:1234:****::/64\\",\\n          \\"DstIPv6Cidr\\": \\"2001:0db8:1234:****::/64\\",\\n          \\"SrcPortRange\\": \\"-1/-1\\",\\n          \\"DstPortRange\\": \\"-1/-1\\",\\n          \\"MatchDscp\\": 1,\\n          \\"RemarkingDscp\\": 1,\\n          \\"RuleName\\": \\"qos-rule-test\\",\\n          \\"RuleDescription\\": \\"qos-rule-test\\",\\n          \\"RuleId\\": \\"qos-rule-iugg0l9x27f2no****\\\\n\\",\\n          \\"Status\\": \\"Normal\\"\\n        }\\n      ],\\n      \\"Status\\": \\"Normal\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询高速通道QoS队列',
    ),
    'DescribeExpressConnectTrafficQos' => 
    array (
      'summary' => '调用DescribeExpressConnectTrafficQos接口查询高速通道QoS策略，支持分页参数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        3 => 
        array (
          'name' => 'QosIdList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Qos策略ID集合。',
            'description' => 'QoS策略ID集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'QoS策略ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'qos-2giu0a6vd5x0mv****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'QosNameList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'Qos策略名称集合。',
            'description' => 'QoS策略名称集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'QoS策略名称。',
              'type' => 'string',
              'required' => false,
              'example' => 'qos-test',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否拥有下一次查询的令牌（Token）。取值：
● 第一次查询和没有下一次查询时，均无需填写。
● 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

* 第一次查询和没有下一次查询时，均无需填写。

* 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分批次查询时每次显示的条目数。取值范围：1~100，默认值为20。',
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalCount' => 
              array (
                'description' => '返回结果总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Count' => 
              array (
                'description' => '列表当前条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'QosList' => 
              array (
                'description' => 'QoS策略信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'QoS策略信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'QosId' => 
                    array (
                      'description' => 'QoS策略ID。',
                      'type' => 'string',
                      'example' => 'qos-pksbqfmotl5hzq****',
                    ),
                    'QosName' => 
                    array (
                      'description' => 'QoS策略的名称。 

长度为**0**～**128**个字符，不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'qos-test',
                    ),
                    'QosDescription' => 
                    array (
                      'description' => 'QoS策略的描述信息。 

长度为**0**～**256**个字符，不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'qos-test',
                    ),
                    'Status' => 
                    array (
                      'description' => 'QoS策略的状态。取值：

- **Normal**：可用。

- **Configuring**：配置中。

> 处于配置中状态的QoS将会限制绝大部分的QoS策略、QoS队列，QoS规则的创建、更新和删除操作。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Configuring' => 'Configuring',
                        'Normal' => 'Normal',
                      ),
                      'example' => 'Normal',
                    ),
                    'Progressing' => 
                    array (
                      'description' => 'QoS策略整体配置进度，取值范围为：**0**~**100**。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                    'AssociatedInstanceList' => 
                    array (
                      'description' => '关联实例列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '关联实例信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'InstanceId' => 
                          array (
                            'description' => '关联实例的ID。',
                            'type' => 'string',
                            'example' => 'pc-bp159zj8zujwy3p07****',
                          ),
                          'InstanceType' => 
                          array (
                            'description' => '关联实例的类型。取值：**PHYSICALCONNECTION**物理专线。',
                            'type' => 'string',
                            'enumValueTitles' => 
                            array (
                              'PHYSICALCONNECTION' => 'PHYSICALCONNECTION',
                            ),
                            'example' => 'PHYSICALCONNECTION',
                          ),
                          'InstanceStatus' => 
                          array (
                            'description' => '关联实例的状态。取值：

- **Normal**：可用。

- **Configuring**：配置中。

- **Deleting**：删除中。',
                            'type' => 'string',
                            'enumValueTitles' => 
                            array (
                              'Configuring' => 'Configuring',
                              'Normal' => 'Normal',
                              'Deleting' => 'Deleting',
                            ),
                            'example' => 'Normal',
                          ),
                          'InstanceProgressing' => 
                          array (
                            'description' => '关联实例的配置进度，取值范围为：**0**~**100**。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '100',
                          ),
                        ),
                      ),
                    ),
                    'QueueList' => 
                    array (
                      'description' => 'QoS队列列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'QoS队列信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'QosId' => 
                          array (
                            'description' => 'QoS策略ID。',
                            'type' => 'string',
                            'example' => 'qos-pksbqfmotl5hzq****',
                          ),
                          'QueueId' => 
                          array (
                            'description' => 'QoS队列ID。',
                            'type' => 'string',
                            'example' => 'qos-queue-9nyx2u7n71s2rc****',
                          ),
                          'QueueType' => 
                          array (
                            'description' => 'QoS队列类型，取值：

- **High**：高优先级队列。

- **Medium**：普通优先级队列。

- **Default**：默认优先级队列。

> 默认优先级队列无法创建。',
                            'type' => 'string',
                            'enumValueTitles' => 
                            array (
                              'High' => 'High',
                              'Medium' => 'Medium',
                              'Default' => 'Default',
                            ),
                            'example' => 'High',
                          ),
                          'BandwidthPercent' => 
                          array (
                            'description' => 'QoS队列带宽百分比。

* 当QoS队列类型为**Medium**的时候，此字段必须输入，取值范围为：**1**~**100**。

* 当QoS队列类型为**Default**的时候，此字段为"-"。',
                            'type' => 'string',
                            'example' => '100',
                          ),
                          'QueueName' => 
                          array (
                            'description' => 'QoS队列的名称。

长度为**0**～**128**个字符，不能以`http://`或`https://`开头。',
                            'type' => 'string',
                            'example' => 'qos-queue-test',
                          ),
                          'QueueDescription' => 
                          array (
                            'description' => 'QoS队列的描述信息。

长度为**0**～**256**个字符，不能以`http://`或`https://`开头。',
                            'type' => 'string',
                            'example' => 'qos-queue-test',
                          ),
                          'Status' => 
                          array (
                            'description' => 'QoS队列的状态。取值：

- **Normal**：可用。

- **Configuring**：配置中。

- **Deleting**：删除中。',
                            'type' => 'string',
                            'example' => 'Normal',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"MaxResults\\": 20,\\n  \\"TotalCount\\": 10,\\n  \\"Count\\": \\"1\\",\\n  \\"QosList\\": [\\n    {\\n      \\"QosId\\": \\"qos-pksbqfmotl5hzq****\\",\\n      \\"QosName\\": \\"qos-test\\",\\n      \\"QosDescription\\": \\"qos-test\\",\\n      \\"Status\\": \\"Normal\\",\\n      \\"Progressing\\": 100,\\n      \\"AssociatedInstanceList\\": [\\n        {\\n          \\"InstanceId\\": \\"pc-bp159zj8zujwy3p07****\\",\\n          \\"InstanceType\\": \\"PHYSICALCONNECTION\\",\\n          \\"InstanceStatus\\": \\"Normal\\",\\n          \\"InstanceProgressing\\": 100\\n        }\\n      ],\\n      \\"QueueList\\": [\\n        {\\n          \\"QosId\\": \\"qos-pksbqfmotl5hzq****\\",\\n          \\"QueueId\\": \\"qos-queue-9nyx2u7n71s2rc****\\",\\n          \\"QueueType\\": \\"High\\",\\n          \\"BandwidthPercent\\": \\"100\\",\\n          \\"QueueName\\": \\"qos-queue-test\\",\\n          \\"QueueDescription\\": \\"qos-queue-test\\",\\n          \\"Status\\": \\"Normal\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询高速通道QoS策略',
    ),
    'DeleteExpressConnectTrafficQosQueue' => 
    array (
      'summary' => '调用DeleteExpressConnectTrafficQosQueue接口删除高速通道QoS队列。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        3 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        4 => 
        array (
          'name' => 'QueueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS队列ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-queue-9nyx2u7n71s2rc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9B9300FE-11E2-4E3B-949C-BED3B44DD26D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9B9300FE-11E2-4E3B-949C-BED3B44DD26D\\"\\n}","type":"json"}]',
      'title' => '删除高速通道QoS队列',
    ),
    'DeleteExpressConnectTrafficQos' => 
    array (
      'summary' => '调用DeleteExpressConnectTrafficQos接口删除高速通道QoS策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai
',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
          3 => 
          array (
            'errorCode' => 'EcQoSWithPconnNotSupportDelete',
            'errorMessage' => 'The Qos policy associated with Pconn cannot be deleted. Please disassociate it first.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}","type":"json"}]',
      'title' => '删除高速通道QoS策略',
      'description' => '关联了物理专线的QoS策略无法直接删除，需要先解除关联。',
    ),
    'DeleteExpressConnectTrafficQosRule' => 
    array (
      'summary' => '调用DeleteExpressConnectTrafficQosRule接口删除高速通道QoS规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '02fb3da4-130e-11e9-8e44-00****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '02fb3da4-130e-11e9-8e44-00****',
          ),
        ),
        3 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        4 => 
        array (
          'name' => 'QueueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => 'QoS队列ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-queue-9nyx2u7n71s2rc****',
          ),
        ),
        5 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-rule-iugg0l9x27f2no****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\"\\n}","type":"json"}]',
      'title' => '删除高速通道QoS规则',
    ),
    'ModifyExpressConnectTrafficQos' => 
    array (
      'summary' => '调用ModifyExpressConnectTrafficQos接口修改高速通道QoS策略，也可通过本接口关联独享物理专线。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        3 => 
        array (
          'name' => 'QosName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => 'QoS策略的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-test',
          ),
        ),
        4 => 
        array (
          'name' => 'QosDescription',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => 'QoS策略的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-test',
          ),
        ),
        5 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        6 => 
        array (
          'name' => 'AddInstanceList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '本次更新需要添加的实例列表，如果没有需要添加的实例可以不用传递此参数',
            'description' => '本次更新需要添加的实例列表，如果没有需要添加的实例可以不用传递此参数。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'InstanceId' => 
                array (
                  'description' => '需要关联的实例ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pc-bp159zj8zujwy3p07****',
                ),
                'InstanceType' => 
                array (
                  'description' => '需要关联实例的类型。取值：**PHYSICALCONNECTION**物理专线。',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                  ),
                  'example' => 'PHYSICALCONNECTION',
                  'enum' => 
                  array (
                    0 => 'PHYSICALCONNECTION',
                  ),
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        7 => 
        array (
          'name' => 'RemoveInstanceList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '本次更新需要移除的实例列表，如果没有需要移除的实例可以不用传递此参数',
            'description' => '本次更新需要移除的实例列表，如果没有需要移除的实例可以不用传递此参数。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'InstanceId' => 
                array (
                  'description' => '关联的实例ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pc-bp1j37am632492qzw****',
                ),
                'InstanceType' => 
                array (
                  'description' => '关联实例的类型。取值：**PHYSICALCONNECTION**物理专线。',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                  ),
                  'example' => 'PHYSICALCONNECTION',
                  'enum' => 
                  array (
                    0 => 'PHYSICALCONNECTION',
                  ),
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.PconnIdList',
            'errorMessage' => 'The status of PconnIdList is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.PconnQos',
            'errorMessage' => 'The specified resource of PconnQos is already associated.',
          ),
          4 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.PconnIdList',
            'errorMessage' => 'The business status of PconnIdList is incorrect.',
          ),
          6 => 
          array (
            'errorCode' => 'EcPconnWithVpconnNotAllowAssociateQoS',
            'errorMessage' => 'The specified Pconn with Vpconn is not allowed to associate with Qos.',
          ),
          7 => 
          array (
            'errorCode' => 'EcPconnWithCrossAccountVbrNotAllowAssociateQoS',
            'errorMessage' => 'The specified Pconn with cross account VBR is not allowed to associate with Qos.',
          ),
          8 => 
          array (
            'errorCode' => 'EcDeviceNotSupportQoS',
            'errorMessage' => 'The specified Pconn is on the device which is not supported QoS.',
          ),
          9 => 
          array (
            'errorCode' => 'EcPconnVbrMustContainsAll',
            'errorMessage' => 'In the single VBR with multiple Pconn scene, all Pconn must be associated with the same Qos.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\"\\n}","type":"json"}]',
      'title' => '修改高速通道QoS策略',
      'description' => '- 当前只支持关联处于正常状态，并且不欠费的独享物理专线，暂不支持共享物理专线端口和VBR实例。

- 关联独享物理专线的时候，只能进行全量操作，如果需要全部取消关联，需要传入空字符串。

- 如果独享物理专线拥有共享物理专线或者跨账号VBR，需要开通白名单才支持进行关联。

- 独享物理专线所在的设备需要支持QoS特性才可以进行关联。

- 单VBR关联多物理专线场景，需要一次性关联该VBR所有的物理专线。',
    ),
    'ModifyExpressConnectTrafficQosQueue' => 
    array (
      'summary' => '调用ModifyExpressConnectTrafficQosQueue接口修改高速通道QoS队列。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'QueueName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos队列的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => 'QoS队列的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-queue-test',
          ),
        ),
        4 => 
        array (
          'name' => 'QueueDescription',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos队列的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => 'QoS队列的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-queue-test',
          ),
        ),
        5 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        6 => 
        array (
          'name' => 'QueueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos队列ID。',
            'description' => 'QoS队列ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-queue-9nyx2u7n71s2rc****',
          ),
        ),
        7 => 
        array (
          'name' => 'BandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS队列带宽百分比。
* 当QoS队列类型为**Medium**的时候，此字段必须输入，取值范围为：1~100。
* 当QoS队列类型为**Default**的时候，此字段为"-"。',
            'type' => 'string',
            'required' => false,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '079874CD-AEC1-43E6-AC03-ADD96B6E4907',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.QosMediumPriorityQueueBandwidthPercent',
            'errorMessage' => 'The quota of QosMediumPriorityQueueBandwidthPercent is exceeded.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"079874CD-AEC1-43E6-AC03-ADD96B6E4907\\"\\n}","type":"json"}]',
      'title' => '修改高速通道QoS队列',
    ),
    'ModifyExpressConnectTrafficQosRule' => 
    array (
      'summary' => '调用ModifyExpressConnectTrafficQosRule接口修改高速通道QoS规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai
',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        3 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        4 => 
        array (
          'name' => 'QueueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => 'QoS队列ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-queue-9nyx2u7n71s2rc****',
          ),
        ),
        5 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则优先级。取值范围：**1**~**9000**，数字越大优先级越高，在同一个QoS策略内QoS规则优先级不允许重复。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则协议类型，取值：

- **ALL**

- **ICMP(IPv4)**

- **ICMPv6(IPv6)**

- **TCP**

- **UDP**

- **GRE**

- **SSH**

- **Telnet**

- **HTTP**

- **HTTPS**

- **MS SQL**

- **Oracle**

- **MySql**

- **RDP**

- **PostgreSQL**

- **Redis**',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'ALL',
          ),
        ),
        7 => 
        array (
          'name' => 'SrcCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配源IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.**.**/24',
          ),
        ),
        8 => 
        array (
          'name' => 'DstCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配目的IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.**.**/24',
          ),
        ),
        9 => 
        array (
          'name' => 'SrcIPv6Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配源IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:0db8:1234:****::/64',
          ),
        ),
        10 => 
        array (
          'name' => 'DstIPv6Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配目的IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:0db8:1234:****::/64',
          ),
        ),
        11 => 
        array (
          'name' => 'SrcPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配源端口号范围，取值范围：**0**~**65535**，当不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。',
            'type' => 'string',
            'required' => false,
            'example' => '-1/-1',
          ),
        ),
        12 => 
        array (
          'name' => 'DstPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配目的端口号范围。取值范围：**0**~**65535**，如果不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。不同的协议类型，对应的目的端口号范围是固定的，取值如下：

- **ALL**：-1/-1，不可编辑。

- **ICMP(IPv4)**：-1/-1，不可编辑。

- **ICMPv6(IPv6)**：-1/-1，不可编辑。

- **TCP**：-1/-1，可编辑。

- **UDP**：-1/-1，可编辑。

- **GRE**：-1/-1，不可编辑。

- **SSH**：22/22，不可编辑。

- **Telnet**：23/23，不可编辑。

- **HTTP**：80/80，不可编辑。

- **HTTPS**：443/443，不可编辑。

- **MS SQL**：1443/1443，不可编辑。

- **Oracle**：1521/1521，不可编辑。

- **MySql**：3306/3306，不可编辑。

- **RDP**：3389/3389，不可编辑。

- **PostgreSQL**：5432/5432，不可编辑。

- **Redis**：6379/6379，不可编辑。',
            'type' => 'string',
            'required' => false,
            'example' => '-1/-1',
          ),
        ),
        13 => 
        array (
          'name' => 'MatchDscp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则匹配流量的DSCP值。取值范围：**0**~**63**，如果不匹配时取值为-1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        14 => 
        array (
          'name' => 'RemarkingDscp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改流量中的DSCP值。取值范围：**0**~**63**，如果不修改时取值为-1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        15 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则的名称。

长度为0～128个字符，不能以`http://` 或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-rule-test',
          ),
        ),
        16 => 
        array (
          'name' => 'RuleDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-rule-test',
          ),
        ),
        17 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-rule-iugg0l9x27f2no****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7B48B4B9-1EAD-469F-B488-594DAB4B6A1A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
          3 => 
          array (
            'errorCode' => 'EcQosRuleNotAllowV4AndV6',
            'errorMessage' => 'QoS rules do not allow IPv4 and IPv6 addresses to be mixed and updated.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7B48B4B9-1EAD-469F-B488-594DAB4B6A1A\\"\\n}","type":"json"}]',
      'title' => '修改高速通道QoS规则',
    ),
    'CreateExpressConnectTrafficQos' => 
    array (
      'summary' => '调用CreateExpressConnectTrafficQos接口创建高速通道QoS策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'QosName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => 'QoS策略的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-test',
          ),
        ),
        4 => 
        array (
          'name' => 'QosDescription',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => 'QoS策略的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-test
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC668356-BCB4-42FD-9BC3-FA2B2E04B634',
              ),
              'QosId' => 
              array (
                'title' => 'Qos策略ID。',
                'description' => 'QoS策略ID。',
                'type' => 'string',
                'example' => 'qos-2giu0a6vd5x0mv****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.Qos',
            'errorMessage' => 'QoS is unsupported.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.Qos',
            'errorMessage' => 'The quota of QoS is exceeded.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC668356-BCB4-42FD-9BC3-FA2B2E04B634\\",\\n  \\"QosId\\": \\"qos-2giu0a6vd5x0mv****\\"\\n}","type":"json"}]',
      'title' => '创建高速通道QoS策略',
      'description' => '- 当前高速通道QoS功能处于邀测状态，调用本接口需要先联系商务经理开通白名单

- 每个用户能够创建的QoS策略数量有配额限制，如果需要扩充配额，请联系商务经理',
    ),
    'CreateExpressConnectTrafficQosQueue' => 
    array (
      'summary' => '调用CreateExpressConnectTrafficQosQueue接口创建高速通道QoS队列。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai
',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        3 => 
        array (
          'name' => 'QueueName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的名称。
长度为0～128个字符，不能以http:// 或https://开头。',
            'description' => 'QoS队列的名称。

长度为0～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-queue-test',
          ),
        ),
        4 => 
        array (
          'name' => 'QueueDescription',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略的描述信息。
长度为0～256个字符，不能以http://或https://开头。',
            'description' => 'QoS队列的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-queue-test
',
          ),
        ),
        5 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        6 => 
        array (
          'name' => 'QueueType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS队列类型，取值：

- **High**：高优先级队列。

- **Medium**：普通优先级队列。

- **Default**：默认优先级队列。

> 默认优先级队列无法创建。',
            'type' => 'string',
            'required' => true,
            'example' => 'High',
          ),
        ),
        7 => 
        array (
          'name' => 'BandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS队列带宽百分比。

* 当QoS队列类型为**Medium**的时候，此字段必须输入，取值范围为：1~100。
* 当QoS队列类型为**Default**的时候，此字段为"-"。',
            'type' => 'string',
            'required' => false,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7',
              ),
              'QosId' => 
              array (
                'title' => 'Qos策略ID。',
                'description' => 'QoS策略ID。',
                'type' => 'string',
                'example' => 'qos-2giu0a6vd5x0mv****',
              ),
              'QueueId' => 
              array (
                'description' => 'QoS队列ID。',
                'type' => 'string',
                'example' => 'qos-queue-9nyx2u7n71s2rc****
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.QosMediumPriorityQueueCount',
            'errorMessage' => 'The quota of QosMediumPriorityQueueCount is exceeded.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.QosHighPriorityQueueCount',
            'errorMessage' => 'The quota of QosHighPriorityQueueCount is exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.QosMediumPriorityQueueBandwidthPercent',
            'errorMessage' => 'The quota of QosMediumPriorityQueueBandwidthPercent is exceeded.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4CF20CC7-D1FC-425B-A15B-DF7C8E2131A7\\",\\n  \\"QosId\\": \\"qos-2giu0a6vd5x0mv****\\",\\n  \\"QueueId\\": \\"qos-queue-9nyx2u7n71s2rc****\\\\n\\"\\n}","type":"json"}]',
      'title' => '创建高速通道QoS队列',
      'description' => '- 默认队列不支持创建。

- 高优先级队列数量有上限，如果需要提升配额，请联系商务经理。

- 普通优先级队列数量有上限，如果需要提升配额，请联系商务经理。

- 所有普通优先级队列的带宽百分比之和有上限。',
    ),
    'CreateExpressConnectTrafficQosRule' => 
    array (
      'summary' => '调用CreateExpressConnectTrafficQosRule接口创建高速通道QoS规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai
',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos策略ID。',
            'description' => 'QoS策略ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-2giu0a6vd5x0mv****',
          ),
        ),
        4 => 
        array (
          'name' => 'QueueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Qos队列ID。',
            'description' => 'QoS队列ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'qos-queue-9nyx2u7n71s2rc****',
          ),
        ),
        5 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则优先级。取值范围：**1**~**9000**，数字越大优先级越高，在同一个QoS策略内QoS规则优先级不允许重复。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则协议类型，取值：

- **ALL**

- **ICMP(IPv4)**

- **ICMPv6(IPv6)**

- **TCP**

- **UDP**

- **GRE**

- **SSH**

- **Telnet**

- **HTTP**

- **HTTPS**

- **MS SQL**

- **Oracle**

- **MySql**

- **RDP**

- **PostgreSQL**

- **Redis**',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'ALL',
          ),
        ),
        7 => 
        array (
          'name' => 'SrcCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配源IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.**.**/24
',
          ),
        ),
        8 => 
        array (
          'name' => 'DstCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配目的IPv4网段。

> 不支持输入本参数时，再输入参数**SrcIPv6Cidr**或**DstIPv6Cidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.**.**/24
',
          ),
        ),
        9 => 
        array (
          'name' => 'SrcIPv6Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配源IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:0db8:1234:****::/64
',
          ),
        ),
        10 => 
        array (
          'name' => 'DstIPv6Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配目的IPv6网段。

> 不支持输入本参数时，再输入参数**SrcCidr**或**DstCidr**。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:0db8:1234:****::/64',
          ),
        ),
        11 => 
        array (
          'name' => 'SrcPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配源端口号范围，取值范围：**0**~**65535**，当不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。',
            'type' => 'string',
            'required' => false,
            'example' => '-1/-1
',
          ),
        ),
        12 => 
        array (
          'name' => 'DstPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则流量匹配目的端口号范围。取值范围：**0**~**65535**，如果不匹配时取值为-1。当前只支持指定单个端口号，端口号的起始和终止需要相同。不同的协议类型，对应的目的端口号范围是固定的，取值如下：

- **ALL**：-1/-1，不可编辑。

- **ICMP(IPv4)**：-1/-1，不可编辑。

- **ICMPv6(IPv6)**：-1/-1，不可编辑。

- **TCP**：-1/-1，可编辑。

- **UDP**：-1/-1，可编辑。

- **GRE**：-1/-1，不可编辑。

- **SSH**：22/22，不可编辑。

- **Telnet**：23/23，不可编辑。

- **HTTP**：80/80，不可编辑。

- **HTTPS**：443/443，不可编辑。

- **MS SQL**：1443/1443，不可编辑。

- **Oracle**：1521/1521，不可编辑。

- **MySql**：3306/3306，不可编辑。

- **RDP**：3389/3389，不可编辑。

- **PostgreSQL**：5432/5432，不可编辑。

- **Redis**：6379/6379，不可编辑。',
            'type' => 'string',
            'required' => false,
            'example' => '-1/-1
',
          ),
        ),
        13 => 
        array (
          'name' => 'MatchDscp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则匹配流量的DSCP值。取值范围：**0**~**63**，如果不匹配时取值为-1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        14 => 
        array (
          'name' => 'RemarkingDscp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改流量中的DSCP值。取值范围：**0**~**63**，如果不修改时取值为-1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        15 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则的名称。

长度为0～128个字符，不能以`http://` 或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-rule-test
',
          ),
        ),
        16 => 
        array (
          'name' => 'RuleDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS规则的描述信息。

长度为0～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-rule-test
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
              'QosId' => 
              array (
                'title' => 'Qos策略ID。',
                'description' => 'QoS策略ID。',
                'type' => 'string',
                'example' => 'qos-2giu0a6vd5x0mv****',
              ),
              'QueueId' => 
              array (
                'description' => 'QoS队列ID。',
                'type' => 'string',
                'example' => 'qos-queue-9nyx2u7n71s2rc****',
              ),
              'RuleId' => 
              array (
                'description' => 'QoS规则ID。',
                'type' => 'string',
                'example' => 'qos-rule-iugg0l9x27f2no****
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Qos',
            'errorMessage' => 'The status of QoS is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'EcQoSConflict',
            'errorMessage' => 'The specified QoS is conflict with other QoS.',
          ),
          3 => 
          array (
            'errorCode' => 'EcQosRuleNotAllowV4AndV6',
            'errorMessage' => 'QoS rules do not allow IPv4 and IPv6 addresses to be mixed and updated.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.QosRuleCount',
            'errorMessage' => 'The quota of QosRuleCount is exceeded.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\",\\n  \\"QosId\\": \\"qos-2giu0a6vd5x0mv****\\",\\n  \\"QueueId\\": \\"qos-queue-9nyx2u7n71s2rc****\\",\\n  \\"RuleId\\": \\"qos-rule-iugg0l9x27f2no****\\\\n\\"\\n}","type":"json"}]',
      'title' => '创建高速通道QoS规则',
      'description' => '- QoS规则的优先级，需要在一个QoS策略中唯一。

- 单个QoS队列的QoS规则数量有限制，如果想要提升配额，请联系商务经理。',
    ),
    'CreateVbrHa' => 
    array (
      'summary' => '调用CreateVbrHa接口创建VBR倒换组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR倒换组的描述信息。

长度为 2～256个字符，必须以字母或中文开头，但不能以`http://` 或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'VBRHa',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR倒换组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'VBRHa',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会启动实例。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回`DRYRUN.SUCCESS`。

- **false**（默认值）：发送正常请求，通过检查后直接启动实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp1jcg5cmxjbl9xgc****',
          ),
        ),
        5 => 
        array (
          'name' => 'PeerVbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR倒换组中另一个VBR的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp12mw1f8k3jgygk9****',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'VbrHaId' => 
              array (
                'description' => 'VBR倒换组实例ID。',
                'type' => 'string',
                'example' => 'vbrha-sa1sxheuxtd98****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.VbrCenNotConsistent',
            'errorMessage' => 'The VBR and the peer VBR are attached to different CENs.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.VbrAliUidNotConsistent',
            'errorMessage' => 'The VBR and the peer VBR belong to different AliUids.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.VbrAccessDeviceSame',
            'errorMessage' => 'The VBR and the peer VBR are in the same device.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.VbrBandWidthExceed',
            'errorMessage' => 'The VBR bandwidth exceeds the limit.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.VbrInUsedByOtherHa',
            'errorMessage' => 'The VBR is used by another VBR HA.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.VbrBgpPeerNotEnableBfd',
            'errorMessage' => 'The VBR BGP has not enabled BFD.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.VbrCenNotRelation',
            'errorMessage' => 'The VBR is not attached to any CEN.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Vbr',
            'errorMessage' => 'The VBR resource is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VbrHaId\\": \\"vbrha-sa1sxheuxtd98****\\",\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<CreateVbrHaResponse>\\n    <VbrHaId>vbrha-sa1sxheuxtd98****</VbrHaId>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</CreateVbrHaResponse>","errorExample":""}]',
      'title' => '创建VBR倒换组',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVbrHa' => 
    array (
      'summary' => '调用DeleteVbrHa删除VBR倒换组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR倒换组实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbrha-sa1******',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.%s',
            'errorMessage' => 'The param of %s is illegal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.VbrHa',
            'errorMessage' => 'The VBR HA resource is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVbrHaResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DeleteVbrHaResponse>","errorExample":""}]',
      'title' => '删除VBR倒换组',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVbrHa' => 
    array (
      'summary' => '调用DescribeVbrHa接口查询已创建的VBR倒换组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'CBCE910E-D396-4944-8****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值范围：

- **true**：发送检查请求，不会启动实例。检查项包括是否填写了必需参数、请求格式、实例状态。如果检查不通过，则返回对应错误。如果检查通过，则返回`DRYRUN.SUCCESS`。

- **false**（默认值）：发送正常请求，通过检查后直接启动实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vbr-bp1jcg5cmxjbl9xgc****',
          ),
        ),
        3 => 
        array (
          'name' => 'VbrHaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR倒换组实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vbrha-sa1sxheuxtd98****',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CreationTime' => 
              array (
                'description' => 'VBR的创建时间。',
                'type' => 'string',
                'example' => '2021-06-08T12:20:55',
              ),
              'Status' => 
              array (
                'description' => 'VBR倒换组的状态。

- **Creating**：创建中。

- **Active**：正常。',
                'type' => 'string',
                'example' => 'Active',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'Description' => 
              array (
                'description' => 'VBR倒换组的描述信息。

长度为 2～256个字符，必须以字母或中文开头，但不能以`http://` 或`https://`开头。',
                'type' => 'string',
                'example' => 'desc',
              ),
              'VbrHaId' => 
              array (
                'description' => 'VBR倒换组实例ID。',
                'type' => 'string',
                'example' => 'vbrha-sa1sxheuxtd98****',
              ),
              'PeerVbrId' => 
              array (
                'description' => 'VBR倒换组中另一个VBR的实例ID。',
                'type' => 'string',
                'example' => 'vbr-bp12mw1f8k3jgygk9****',
              ),
              'Name' => 
              array (
                'description' => 'VBR倒换组名称。',
                'type' => 'string',
                'example' => 'VBRHa',
              ),
              'VbrId' => 
              array (
                'description' => 'VBR实例ID。',
                'type' => 'string',
                'example' => 'vbr-bp1jcg5cmxjbl9xgc****',
              ),
              'RegionId' => 
              array (
                'description' => 'VBR所属的地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.VbrHa',
            'errorMessage' => 'The VBR HA resource is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CreationTime\\": \\"2021-06-08T12:20:55\\",\\n  \\"Status\\": \\"Active\\",\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"Description\\": \\"desc\\",\\n  \\"VbrHaId\\": \\"vbrha-sa1sxheuxtd98****\\",\\n  \\"PeerVbrId\\": \\"vbr-bp12mw1f8k3jgygk9****\\",\\n  \\"Name\\": \\"VBRHa\\",\\n  \\"VbrId\\": \\"vbr-bp1jcg5cmxjbl9xgc****\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<DescribeVbrHaResponse>\\n    <Status>Active</Status>\\n    <VbrHaId>vbrha-sa1sxheuxtd98****</VbrHaId>\\n    <Description>desc</Description>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <CreationTime>2021-06-08T12:20:55</CreationTime>\\n    <VbrId>vbr-bp1jcg5cmxjbl9xgc****</VbrId>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <PeerVbrId>vbr-bp12mw1f8k3jgygk9****</PeerVbrId>\\n    <Name>VBRHa</Name>\\n</DescribeVbrHaResponse>","errorExample":""}]',
      'title' => '查询VBR倒换组',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVirtualBorderRouter' => 
    array (
      'summary' => '调用CreateVirtualBorderRouter接口创建边界路由器VBR（Virtual Border Router）实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。 

可以为独享专线创建VBR实例，也可以为共享专线创建VBR实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-2zextbehcx****',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所有者的账号ID。

默认为登录的阿里云账号ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '168811111****',
          ),
        ),
        3 => 
        array (
          'name' => 'VlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的VLAN ID，取值范围：**0～2999**。 

> 只有物理专线的所有者可以指定该参数，同一条物理专线下的两个VBR的VLAN ID不能相同。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'CircuitCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商为物理专线提供的电路编码。 
          
> 只有物理专线所有者可以指定该参数。
',
            'type' => 'string',
            'required' => false,
            'example' => 'longtel001',
          ),
        ),
        5 => 
        array (
          'name' => 'LocalGatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧互联IP。 该属性只允许VBR所有者指定或者修改。

为物理专线所有者创建VBR实例时必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.168.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'PeerGatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的客户侧互联IP。该属性只允许VBR所有者指定或者修改。

为物理专线所有者创建VBR实例时必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '116.62.XX.XX',
          ),
        ),
        7 => 
        array (
          'name' => 'PeeringSubnetMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧和客户侧互联IP的子网掩码。 

两个IP地址必须位于同一个子网中。 ',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '255.255.255.252',
          ),
        ),
        8 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的描述信息。  

长度为2～256个字符，必须以字母或中文开头，但不能以`http://` 或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        9 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        10 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        11 => 
        array (
          'name' => 'LocalIpv6GatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧互联IPv6地址。该属性只允许VBR所有者指定或者修改。

为物理专线所有者创建VBR实例时必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
          ),
        ),
        12 => 
        array (
          'name' => 'PeerIpv6GatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的客户侧互联IPv6地址。该属性只允许VBR所有者指定或者修改。

为物理专线所有者创建VBR实例时必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2001:XXXX:4:4:4:4:4:4',
          ),
        ),
        13 => 
        array (
          'name' => 'PeeringIpv6SubnetMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧和客户侧互联IPv6的子网掩码。 

两个IPv6地址必须位于同一个子网中。 ',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2408:4004:cc:400::/56',
          ),
        ),
        14 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用IPv6功能。取值：

- **true**：开启。

- **false**（默认值）：关闭。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        15 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的带宽值，单位：Mbps。

- 当为独享专线创建VBR实例时，取值分别为**50**、**100**、**200**、**300**、**400**、**500**、**1000**、**2048**、**5120**、**8192**、**10240**、**20480**、**40960**、**50120**、**61440**和**102400**。
- 当为共享专线创建VBR实例时，无需配置，VBR的带宽即为创建共享物理专线时设置的共享专线带宽。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '100',
          ),
        ),
        16 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        17 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。至少输入1个标签键，最多支持输入20个标签键。如需传入该值，不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'VbrId' => 
              array (
                'description' => 'VBR实例ID。',
                'type' => 'string',
                'example' => 'vbr-bp1jcg5cmxjbl9xgc****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.PconnAllocateVlan0',
            'errorMessage' => 'Vlan 0 Vbr cannot share the physical connection with another Vbr.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.IpAddress',
            'errorMessage' => 'The specified IpAddress (%s) is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The specified CidrBlock (%s) is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The specified PhysicalConnectionId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVlanId.Used',
            'errorMessage' => 'The specified VlanId has been used.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter \'PhysicalConnectionId\' that is mandatory for processing this request is not supplied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotEnabled',
            'errorMessage' => 'The specified PhysicalConnectionId is not in Enabled state.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVlanId.Malformed',
            'errorMessage' => 'The specified VlanId is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidCircuitCode.Malformed',
            'errorMessage' => 'The specified CircuitCode is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidLocalGatewayIp.Malformed',
            'errorMessage' => 'The specified LocalGatewayIp is not valid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeeringSubnetMask.Malformed',
            'errorMessage' => 'The specified PeeringSubnetMask is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified ?Name? is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specifid ?Description? is not valid.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.vbrPerpConn',
            'errorMessage' => 'Virtual boarder router per PhysicalConnection quota exceed.',
          ),
          14 => 
          array (
            'errorCode' => 'QuotaExceeded.freevbr',
            'errorMessage' => 'Free virtual boarder router quota exceed.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidIp.NotSameSubnet',
            'errorMessage' => 'Local gateway ip and peer gateway ip are not in the same subnet.',
          ),
          16 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          17 => 
          array (
            'errorCode' => 'QuotaExceeded.CrossUserVBRPerUser',
            'errorMessage' => 'Cross virtual boarder router per user quota exceed.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationFailed.VlanIdInUse',
            'errorMessage' => 'Operation failed because vlanId is in use.',
          ),
          19 => 
          array (
            'errorCode' => 'QuotaExceeded.SameAccountVBRPerPconn',
            'errorMessage' => 'Same account virtual boarder router per physicalConnection quota exceed.',
          ),
          20 => 
          array (
            'errorCode' => 'QuotaExceeded.VbrPerPconnPortSpec',
            'errorMessage' => 'Quota exceed for current port spec',
          ),
          21 => 
          array (
            'errorCode' => 'QuotaExceeded.VbrPerAccessDevice',
            'errorMessage' => 'Virtual boarder router per access device quota exceed.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationUnsupported.IPV6ForThisRegion',
            'errorMessage' => 'This Region do not support IPV6.',
          ),
          23 => 
          array (
            'errorCode' => 'VbrBandwidthExceed',
            'errorMessage' => 'VBR bandwidth exceed for this physical connection.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.PconnExistVlan0Vbr',
            'errorMessage' => 'The physical connection has VLAN 0 VBR. You cannot create another VBR.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.Vlan0VbrUnSharePconn',
            'errorMessage' => 'VLAN 0 VBR cannot share the physical connection with another VBR.',
          ),
          26 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          27 => 
          array (
            'errorCode' => 'ResourceNotEnough.Bandwidth',
            'errorMessage' => 'The specified resource of Bandwidth is not enough.',
          ),
          28 => 
          array (
            'errorCode' => 'OperationUnsupported.VirtualBorderRouterEnableIPv6',
            'errorMessage' => 'The operation failed. The device or region does not support IPv6 functions.',
          ),
          29 => 
          array (
            'errorCode' => 'IllegalParam.OwnerAliUid',
            'errorMessage' => 'The param of VbrOwnerId is illegal.',
          ),
          30 => 
          array (
            'errorCode' => 'Forbidden.OwnerAliUid',
            'errorMessage' => 'RAM account or Partner account is forbidden to be OwnerAliUid.',
          ),
          31 => 
          array (
            'errorCode' => 'OperationDenied.VPconn',
            'errorMessage' => 'Vpconn is forbidden to create vbr for another account.',
          ),
          32 => 
          array (
            'errorCode' => 'OperationFailed.NotConsistentWithVpconn',
            'errorMessage' => 'VBR bandwidth is not consistent with vpconn',
          ),
          33 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of bandwidth is illegal.',
          ),
          34 => 
          array (
            'errorCode' => 'OperationFailed.VirtualPhysicalConnectionExistVBR',
            'errorMessage' => 'The virtual physical connect has already created another VBR.',
          ),
          35 => 
          array (
            'errorCode' => 'ResourceNotInResourceGroup',
            'errorMessage' => 'The specified resource is not in the specified ResourceGroup.',
          ),
          36 => 
          array (
            'errorCode' => 'IncorrectStatus.VirtualPhysicalConnection',
            'errorMessage' => 'The status of PhysicalConnection [%s] is incorrect.',
          ),
          37 => 
          array (
            'errorCode' => 'EcAssociatedQoSPconnNotAllowCreateCrossAccountVbr',
            'errorMessage' => 'The specified Pconn associated with Qos is not allowed to create cross account VBR.Please contact the business manager.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.LocalGatewayIpNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the LocalGatewayIp parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.PeerGatewayIpNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the PeerGatewayIp  parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.PeeringSubnetMaskNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the PeeringSubnetMask parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.NameNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the Name parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.DescriptionNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the Description parameter.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVbrOwnerId.NotFound',
            'errorMessage' => 'The specified VbrOwnerId is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'CROSS_BID.FORBIDDEN',
            'errorMessage' => 'Create VBR across bid is illegal',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.AccessDeviceDisabled',
            'errorMessage' => 'Access device is disabled and can not create vbr.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VbrId\\": \\"vbr-bp1jcg5cmxjbl9xgc****\\",\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVirtualBorderRouterResponse>\\n    <VbrId>vbr-bp1jcg5cmxjbl9xgc****</VbrId>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</CreateVirtualBorderRouterResponse>","errorExample":""}]',
      'title' => '新建边界路由器（VBR）',
      'description' => '创建VBR实例后，VBR实例状态为**active**。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociatePhysicalConnectionToVirtualBorderRouter' => 
    array (
      'summary' => '调用AssociatePhysicalConnectionToVirtualBorderRouter接口将边界路由器VBR（Virtual Border Router）关联到物理专线。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp186tnz6rijyhj******',
          ),
        ),
        2 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-bp1qrb3044eqixog****',
          ),
        ),
        3 => 
        array (
          'name' => 'VlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR的VLAN ID，取值范围：**0～2999**。 

> 只有物理专线的所有者可以指定该参数，同一条物理专线下的两个VBR的VLAN ID不能相同。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '123',
          ),
        ),
        4 => 
        array (
          'name' => 'CircuitCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商为物理专线提供的电路编码。 

> 只有物理专线的所有者可以指定该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'longtel001',
          ),
        ),
        5 => 
        array (
          'name' => 'LocalGatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧互联IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'PeerGatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的客户侧互联IP。

- 该属性只允许VBR所有者指定或修改。

- 为物理专线所有者创建VBR实例时必填。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX',
          ),
        ),
        7 => 
        array (
          'name' => 'PeeringSubnetMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧和客户侧互联IP的子网掩码。

两个IP地址必须位于同一个子网中。',
            'type' => 'string',
            'required' => false,
            'example' => '255.255.255.0',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        9 => 
        array (
          'name' => 'LocalIpv6GatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧互联IPv6地址。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
          ),
        ),
        10 => 
        array (
          'name' => 'PeerIpv6GatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的客户侧互联IPv6地址。

- 该属性只允许VBR所有者指定或者修改。

- 为物理专线所有者创建VBR实例时必填。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:XXXX:4:4:4:4:4:4',
          ),
        ),
        11 => 
        array (
          'name' => 'PeeringIpv6SubnetMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧和客户侧互联IPv6的子网掩码。

两个IPv6地址必须位于同一个子网中。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:4004:cc:400::/56',
          ),
        ),
        12 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用IPv6。取值：

- **true**：开启。

- **false**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '980960B0-2969-40BF-8542-EBB34FD358AB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.RouterInterfaceNotDeleted',
            'errorMessage' => 'The specified VirutalBorderRouter still has routerInterface.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.OperationNotAllowedInState',
            'errorMessage' => 'The specified VirutalBorderRouter is in invalid state.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidStatus.NotAllowed',
            'errorMessage' => 'Invalid virtual border router status.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The specified PhysicalConnectionId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVlanId.Used',
            'errorMessage' => 'The specified VlanId has been used.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter \'PhysicalConnectionId\' that is mandatory for processing this request is not supplied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotEnabled',
            'errorMessage' => 'The specified PhysicalConnectionId is not in Enabled state.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVlanId.Malformed',
            'errorMessage' => 'The specified VlanId is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidCircuitCode.Malformed',
            'errorMessage' => 'The specified CircuitCode is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidLocalGatewayIp.Malformed',
            'errorMessage' => 'The specified LocalGatewayIp is not valid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerGatewayIp.Malformed',
            'errorMessage' => 'The specified PeerGatewayIp is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidPeeringSubnetMask.Malformed',
            'errorMessage' => 'The specified PeeringSubnetMask is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified ?Name? is not valid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specifid ?Description? is not valid.',
          ),
          14 => 
          array (
            'errorCode' => 'QuotaExceeded.vbrPerpConn',
            'errorMessage' => 'Virtual boarder router per PhysicalConnection quota exceed.',
          ),
          15 => 
          array (
            'errorCode' => 'EXCEED_ASSOCIATE_MAX_NUM',
            'errorMessage' => 'assocaite virtual boarder num too many.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidIp.NotSameSubnet',
            'errorMessage' => 'Local gateway ip and peer gateway ip are not in the same subnet.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidStatus.StatusNotEnabled',
            'errorMessage' => 'The physical connection status is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'physical connection has already associated with vbr.',
          ),
          20 => 
          array (
            'errorCode' => 'PHYSICAL_NOT_ALLOW_ASSOCIATE_VBR',
            'errorMessage' => 'The specified operation not allow.',
          ),
          21 => 
          array (
            'errorCode' => 'Forbidden.OperationNotAllowed',
            'errorMessage' => 'The caller must be PhysicalConnection or VirtualBorderRouter\'s owner.',
          ),
          22 => 
          array (
            'errorCode' => 'Forbidden.NotSameAccessDevice',
            'errorMessage' => 'Vbr and physicalConnection are not on the same accessDevice.',
          ),
          23 => 
          array (
            'errorCode' => 'Duplicated.LocalGatewayIp',
            'errorMessage' => 'Vbr has conflict local gateway ip.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.VlanIdInUse',
            'errorMessage' => 'Operation failed because vlanId is in use.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          26 => 
          array (
            'errorCode' => 'DuplicatedParam.LocalGatewayIp',
            'errorMessage' => 'Duplicated LocalGatewayIp values.',
          ),
          27 => 
          array (
            'errorCode' => 'DuplicatedParam.PeerGatewayIp',
            'errorMessage' => 'Duplicated PeerGatewayIp values.',
          ),
          28 => 
          array (
            'errorCode' => 'DuplicatedParam.LocalIpv6GatewayIp',
            'errorMessage' => 'Duplicated LocalIpv6GatewayIp values.',
          ),
          29 => 
          array (
            'errorCode' => 'DuplicatedParam.PeerIpv6GatewayIp',
            'errorMessage' => 'Duplicated PeerIpv6GatewayIp values.',
          ),
          30 => 
          array (
            'errorCode' => 'EcPconnVbrMustContainsAll',
            'errorMessage' => 'In the single VBR with multiple Pconn scene, all Pconn must be associated with the same Qos.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.OperationNotAllowedByUser',
            'errorMessage' => 'The caller is not allowed to delete the specified VirtualBorderRouter.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.MultiVlanRi',
            'errorMessage' => 'Multiple vlan router interfaces are found.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.NoRiFound',
            'errorMessage' => 'No vlan router interfaces are found.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.LocalGatewayIpNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the LocalGatewayIp parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.PeerGatewayIpNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the PeerGatewayIp  parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.PeeringSubnetMaskNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the PeeringSubnetMask parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.NameNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the Name parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.DescriptionNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the Description parameter.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified Instance does not exist in the specified region.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVbrId.NotFound',
            'errorMessage' => 'The specified VirutalBorderRouter does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVbrOwnerId.NotFound',
            'errorMessage' => 'The specified VbrOwnerId is not valid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"980960B0-2969-40BF-8542-EBB34FD358AB\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociatePhysicalConnectionToVirtualBorderRouterResponse>\\n    <RequestId>980960B0-2969-40BF-8542-EBB34FD358AB</RequestId>\\n</AssociatePhysicalConnectionToVirtualBorderRouterResponse>","errorExample":""}]',
      'title' => '将VBR关联物理专线',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVirtualBorderRouter' => 
    array (
      'summary' => '调用DeleteVirtualBorderRouter接口删除VBR实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所属的地域ID。 您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp12mw1f8k3jgygk9****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。 ',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.RouterInterfaceNotDeleted',
            'errorMessage' => 'The specified VirutalBorderRouter still has routerInterface.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.OperationNotAllowedInState',
            'errorMessage' => 'The specified VirutalBorderRouter is in invalid state.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidStatus.NotAllowed',
            'errorMessage' => 'The virtual border has been associated by physicalConnection.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.RouterInterfaceReferedByRouteEntry',
            'errorMessage' => 'The specified VirutalBorderRouter is refered by routeEntry.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.BgpGroup',
            'errorMessage' => 'bgp group exists, cannot delete vbr.',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.Nqa',
            'errorMessage' => 'nqa exists, cannot delete vbr.',
          ),
          6 => 
          array (
            'errorCode' => 'DependencyViolation.BgpNetwork',
            'errorMessage' => 'bgp network exists, cannot delete vbr.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.VBRAttachedCen',
            'errorMessage' => 'Operation failed because the VBR is attached to CEN.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidStatus.vbrAttatchToEcr',
            'errorMessage' => 'Invalid virtual border router ecr status.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.OperationDeleteNotAllowedByUser',
            'errorMessage' => 'The caller is not allowed to delete the specified VirtualBorderRouter.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.MultiVlanRi',
            'errorMessage' => 'Multiple vlan router interfaces are found.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.NoRiFound',
            'errorMessage' => 'No vlan router interfaces are found.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVbrId.NotFound',
            'errorMessage' => 'The specified VirutalBorderRouter does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVirtualBorderRouterResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteVirtualBorderRouterResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteVirtualBorderRouterResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteVirtualBorderRouterResponse>"}]',
      'title' => '删除边界路由器（VBR）',
      'description' => '在调用DeleteVirtualBorderRouter接口删除VBR实例之前，请注意： 
- 删除VBR实例之前，必须删除VBR实例上所有的路由器接口。 
- 只能删除**unconfirmed**、**active**或**terminated**状态的VBR实例。 
- 其他账号的VBR实例只有处于**unconfirmed**状态时，才可以被物理专线的所有者删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociatePhysicalConnectionFromVirtualBorderRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要与物理专线解绑的VBR的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vbr-bp16ksp61j7e0tkn*****',
          ),
        ),
        2 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp1qrb3044eqixog****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '980960B0-2969-40BF-8542-EBB34FD358AB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PARAMETER_MUST_NOT_NULL',
            'errorMessage' => 'The specified physical connection id or vbrId must not be null.',
          ),
          1 => 
          array (
            'errorCode' => 'PHYSICAL_NOT_ASSOCIATE_TO_VBR',
            'errorMessage' => 'The specified PhysicalConnection have not associate to the vbr.',
          ),
          2 => 
          array (
            'errorCode' => 'ROUTER_INTERFACE_REFERED_BY_ROUTEENTRY',
            'errorMessage' => 'The specified VlanInterface has been used by routeEntry.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidStatus.NotAllowed',
            'errorMessage' => 'Invalid virtual border router status.',
          ),
          4 => 
          array (
            'errorCode' => 'PHYSICAL_NOT_ALLOW_ASSOCIATE_VBR',
            'errorMessage' => 'The specified operation not allow.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.OperationNotAllowed',
            'errorMessage' => 'The caller must be PhysicalConnection or VirtualBorderRouter\'s owner.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVbrId.NotFound',
            'errorMessage' => 'The specified VirutalBorderRouter does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"980960B0-2969-40BF-8542-EBB34FD358AB\\"\\n}","errorExample":""},{"type":"xml","example":"<UnassociatePhysicalConnectionFromVirtualBorderRouterResponse>\\n    <RequestId>980960B0-2969-40BF-8542-EBB34FD358AB</RequestId>\\n</UnassociatePhysicalConnectionFromVirtualBorderRouterResponse>","errorExample":""}]',
      'title' => '解绑VBR和物理专线',
      'summary' => '调用UnassociatePhysicalConnectionFromVirtualBorderRouter解绑VBR和物理专线。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateVirtualBorderBandwidth' => 
    array (
      'summary' => '调用UpdateVirtualBorderBandwidth接口更新边界路由器上下云双方向的带宽限速。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VirtualBorderRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp15zckdt37pq72****',
          ),
        ),
        2 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的VBR限速带宽，单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AA4486A8-B6AE-469E-AB09-820EF8ECFA2B',
              ),
              'Success' => 
              array (
                'description' => '是否修改成功。取值：

- **true**：成功。

- **false**：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.Vpconn',
            'errorMessage' => 'The operation is failed because of Vpconn.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.InstanceId',
            'errorMessage' => 'Missing param of InstanceId.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'InstanceId not found.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.Bandwidth',
            'errorMessage' => 'Missing param of Bandwidth.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'Illegal Param of Bandwidth.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParam.regionNo',
            'errorMessage' => 'Missing param of regionNo.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.VirtualBorderRouterBandwidth',
            'errorMessage' => 'Quota Exceeded of VirtualBorderRouterBandwidth',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.SetMultiPconnBandwidth',
            'errorMessage' => 'Set Multi PhysicalConnection Bandwidth Unsupported.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.ModifyBandwidth',
            'errorMessage' => 'Modify Sale VirtualBorderRouter Bandwidth Unsupported.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"AA4486A8-B6AE-469E-AB09-820EF8ECFA2B\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateVirtualBorderBandwidthResponse>\\n    <Code>200</Code>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <Message>successful</Message>\\n    <RequestId>AA4486A8-B6AE-469E-AB09-820EF8ECFA2B</RequestId>\\n    <Success>true</Success>\\n</UpdateVirtualBorderBandwidthResponse>","errorExample":""}]',
      'title' => '修改VBR上下云的带宽限速',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVirtualBorderRouterAttribute' => 
    array (
      'summary' => '调用ModifyVirtualBorderRouterAttribute接口修改边界路由器VBR（Virtual Border Router）的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp1lhl0taikrte****',
          ),
        ),
        2 => 
        array (
          'name' => 'VlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR的VLAN ID，取值范围：**0～2999**。 

> 只有物理专线的所有者可以指定该参数，同一条物理专线下的两个VBR的VLAN ID不能相同。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'CircuitCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商为物理专线提供的电路编码。 
          
> 只有物理专线的所有者可以指定该参数。
 
',
            'type' => 'string',
            'required' => false,
            'example' => 'longtel001',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalGatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧互联IP。

该属性只允许VBR所有者指定或修改。
',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'PeerGatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的客户侧互联IP。

该属性只允许VBR所有者指定或修改。
',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.X',
          ),
        ),
        6 => 
        array (
          'name' => 'PeeringSubnetMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧和客户侧互联IP的子网掩码。该属性只允许VBR所有者指定或修改。

两个IP地址必须位于同一个子网中。',
            'type' => 'string',
            'required' => false,
            'example' => '255.255.255.252',
          ),
        ),
        7 => 
        array (
          'name' => 'MinTxInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置BFD报文的发送间隔，取值：**200～1000**，单位：ms。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '300',
          ),
        ),
        8 => 
        array (
          'name' => 'MinRxInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置BFD报文的接收间隔，取值：**200～1000**，单位：ms。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '300',
          ),
        ),
        9 => 
        array (
          'name' => 'DetectMultiplier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检测时间倍数，即接收方允许发送方发送报文的最大连接丢包数，用来检测链路是否正常。

取值：**3～10**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3',
          ),
        ),
        10 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR的描述信息。

长度为2～256个字符，必须以字母或中文开头，但不能以`http:// `或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        11 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。但不能以`http:// `或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'VBR',
          ),
        ),
        12 => 
        array (
          'name' => 'AssociatedPhysicalConnections',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR关联的物理专线的列表信息，包含以下参数：

- **CircuitCode**：运营商为物理专线提供的电路编码。
- **LocalGatewayIp**：VBR实例的阿里云侧互联IP。
- **PeerGatewayIp**：VBR实例的客户侧互联IP。
- **PeeringSubnetMask**：VBR实例的阿里云侧和客户侧互联IP的子网掩码。
- **PhysicalConnectionId**：物理专线实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => '[   {     "CircuitCode ": "longtel001",     " LocalGatewayIp ": "192.168.XX.XX",     "PeerGatewayIp" : "192.168.XX.XX",     " PeeringSubnetMask ": "255.255.255.252",     " PhysicalConnectionId ": "pc-kojok19****"   } ]',
          ),
        ),
        13 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-00****',
          ),
        ),
        14 => 
        array (
          'name' => 'LocalIpv6GatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧互联IPv6地址。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
          ),
        ),
        15 => 
        array (
          'name' => 'PeerIpv6GatewayIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的客户侧互联IPv6地址。

- 该属性只允许VBR所有者指定或者修改。

- 为物理专线所有者创建VBR实例时必填，为其他账号创建VBR实例时无需填写。',
            'type' => 'string',
            'required' => false,
            'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:2a2b',
          ),
        ),
        16 => 
        array (
          'name' => 'PeeringIpv6SubnetMask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例的阿里云侧和客户侧互联IPv6的子网掩码。

两个IPv6地址必须位于同一个子网中。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:4004:cc:400::/56',
          ),
        ),
        17 => 
        array (
          'name' => 'EnableIpv6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用IPv6。

- **true**：开启。

- **false**（默认值）：关闭。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        18 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽值。单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        19 => 
        array (
          'name' => 'SitelinkEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许IDC间业务访问。

- true：允许。

- false（默认值）：不允许。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '980960B0-2969-40BF-8542-EBB34FD358AB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.AssociatedPhysicalConnections',
            'errorMessage' => 'The specified AssociatedPhysicalConnections is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.IpAddress',
            'errorMessage' => 'The specified IpAddress is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The specified CidrBlock is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidVbrId.NotFound',
            'errorMessage' => 'The specified VirutalBorderRouter is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.MinTxInterval',
            'errorMessage' => 'The specified MinTxInterval is not in proper range.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.MinRxInterval',
            'errorMessage' => 'The specified MinRxInterval is not in proper range.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.DetectMultiplier',
            'errorMessage' => 'The specified DetectMultiplier is not in proper range.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVlanId.Used',
            'errorMessage' => 'The specified VlanId has been used.',
          ),
          8 => 
          array (
            'errorCode' => 'Duplicated.LocalGatewayIp',
            'errorMessage' => 'The specified LocalGatewayIps are duplicated.',
          ),
          9 => 
          array (
            'errorCode' => 'Duplicated.PeerGatewayIp',
            'errorMessage' => 'The specified PeerGatewayIp are duplicated.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.LocalGatewayIp',
            'errorMessage' => 'The specified LocalGatewayIp already exists.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.PeerGatewayIp',
            'errorMessage' => 'The specified PeerGatewayIp already exists.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidCircuitCode.Malformed',
            'errorMessage' => 'The specified CircuitCode is not valid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidVlanId.Malformed',
            'errorMessage' => 'The specified VlanId is not valid.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidIp.Malformed',
            'errorMessage' => 'The specified ip address is not valid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidPeeringSubnetMask.Malformed',
            'errorMessage' => 'The specified PeeringSubnetMask is not valid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specifid Description is not valid.',
          ),
          18 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'LocalGatewayIp, peerGatewayIp and peeringSubnetMask must not be null.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidIp.NotSameSubnet',
            'errorMessage' => 'Local gateway ip and peer gateway ip are not in the same subnet.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.VlanIdInUse',
            'errorMessage' => 'Operation failed because vlanId is in use.',
          ),
          22 => 
          array (
            'errorCode' => 'IncorrectStatus.VirtualBorderRouter',
            'errorMessage' => '%s',
          ),
          23 => 
          array (
            'errorCode' => 'OperationUnsupported.IPV6ForThisRegion',
            'errorMessage' => 'This Region do not support IPV6.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationDenied.VBRAssociateVPconn',
            'errorMessage' => 'The operation is not allowed because of VBRAssociateVPconn.',
          ),
          26 => 
          array (
            'errorCode' => 'OperationFailed.PhysicalConnectionFinancialLocked',
            'errorMessage' => 'Update failed, the physical connection is financial locked.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationFailed.PhysicalConnectionTerminated',
            'errorMessage' => 'Update failed, the physical connection is terminated.',
          ),
          28 => 
          array (
            'errorCode' => 'DuplicatedParam.LocalGatewayIp',
            'errorMessage' => 'The LocalGatewayIp values are duplicated.',
          ),
          29 => 
          array (
            'errorCode' => 'Forbidden.VbrNotAllowModifySiteLink',
            'errorMessage' => 'Can not modify virtualBorderRouter site link, please call PD to authorize.',
          ),
          30 => 
          array (
            'errorCode' => 'OperationUnsupported.VirtualBorderRouterEnableIPv6',
            'errorMessage' => 'The operation failed. The device or region does not support IPv6 functions.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.CircuitCodeNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to modify.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.LocalGatewayIpNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the LocalGatewayIp parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.PeerGatewayIpNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the PeerGatewayIp  parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.PeeringSubnetMaskNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the PeeringSubnetMask parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.VlanIdNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the VlanId.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.NameNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the Name parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.DescriptionNotAllowedByCaller',
            'errorMessage' => 'The caller is not allowed to specify the Description parameter.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"980960B0-2969-40BF-8542-EBB34FD358AB\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVirtualBorderRouterAttributeResponse>\\n    <RequestId>980960B0-2969-40BF-8542-EBB34FD358AB</RequestId>\\n</ModifyVirtualBorderRouterAttributeResponse>","errorExample":""}]',
      'title' => '修改边界路由器（VBR）的配置',
      'description' => '* **VlanId**只允许物理专线的所有者修改。

* 同一物理专线下的同一VLAN ID不允许被两个VBR同时使用。

* 进入**terminated**状态的VBR会在7天内自动保留其VLAN ID，不允许其他VBR使用。7天后可以被其他VBR使用。  

* 其他账号的VBR实例，不能配置**LocalGatewayIp**、**PeerGatewayIp**和**PeeringSubnetMask**。

* **PeeringSubnetMask**支持24～30位（255.255.255.0～255.255.255.252）。
* **LocalGatewayIp**和**PeerGatewayIp**必须在同一个网段内。例如，LocalGatewayIp：192.168.XX.XX，PeerGatewayIp：192.168.XX.XX，PeeringSubnetMask：255.255.255.248。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TerminateVirtualBorderRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'vbr-bp15zckdt37pq72****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.OperationNotAllowedInState',
            'errorMessage' => 'The specified VirutalBorderRouter is in invalid state.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.OperationTerminateNotAllowedByUser',
            'errorMessage' => 'The caller is not allowed to terminate the specified VirtualBorderRouter.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVbrId.NotFound',
            'errorMessage' => 'The specified VirutalBorderRouter is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<TerminateVirtualBorderRouterResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</TerminateVirtualBorderRouterResponse>","errorExample":""}]',
      'title' => '终止边界路由器（VBR）',
      'summary' => '调用TerminateVirtualBorderRouter接口终止边界路由器（VBR）。',
      'description' => '调用该接口后VBR从**active**状态进入**terminating**状态，终止成功后进入**terminated**状态。 

> 只有物理专线的所有者可以调用该接口。',
    ),
    'RecoverVirtualBorderRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp1lhl0taikrte****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.OperationNotAllowedInState',
            'errorMessage' => 'The specified VirutalBorderRouter is in invalid state',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.VlanIdAlreadyInUse',
            'errorMessage' => 'The specifed vlanId has been used.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.OperationRecoverNotAllowedByUser',
            'errorMessage' => 'The caller is not allowed to recover the specified VirtualBorderRouter.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVbrId.NotFound',
            'errorMessage' => 'The specified VirutalBorderRouter is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":"{ \\n    \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<RecoverVirtualBorderRouterResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</RecoverVirtualBorderRouterResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<RecoverVirtualBorderRouterResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</RecoverVirtualBorderRouterResponse>"}]',
      'title' => '恢复被终止的边界路由器（VBR）',
      'summary' => '调用RecoverVirtualBorderRouter接口恢复被终止的VBR实例。',
      'description' => '调用该接口后VBR从**terminated**状态变为**recovering**状态，恢复成功后进入**active**状态。

在调用本接口恢复VBR之前，请注意： 
      
- 只有物理专线的所有者可以调用该接口。  

- VBR所属的物理专线必须处于**Enabled**状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVirtualBorderRouters' => 
    array (
      'summary' => '调用DescribeVirtualBorderRouters接口查询已创建的VBR实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件，最多可提供5个过滤条件。支持如下过滤条件：

* **PhysicalConnectionId**：物理专线实例ID。

* **VbrId**：边界路由器实例ID。

* **Status**：边界路由器状态。

* **Name**：边界路由器名称。

* **AccessPointId**：接入点ID。

* **eccId**：高速上云服务实例ID。

* **type**：物理专线类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Status',
                ),
                'Value' => 
                array (
                  'description' => '根据Key指定过滤值。一个Key支持指定多个过滤值，每个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '根据Key指定过滤值。一个Key支持指定多个过滤值，每个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Active',
                  ),
                  'required' => false,
                  'example' => 'Active',
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        4 => 
        array (
          'name' => 'IncludeCrossAccountVbr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含跨账号的边界路由器。

- **true**：包含。

- **false**（默认值）：不包含。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。至少输入1个标签键，最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'VBR信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VirtualBorderRouterSet' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VirtualBorderRouterType' => 
                  array (
                    'description' => '查询到的VBR合集。 ',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VBR的创建时间。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => 'VBR的创建时间。',
                          'type' => 'string',
                          'example' => '2020-06-08T12:20:55',
                        ),
                        'Status' => 
                        array (
                          'description' => 'VBR实例状态。
         
- **unconfirmed**：等待他人确认。

- **active**：正常。   

- **terminating**：终止接入中。  

- **terminated**：已终止接入。   

- **recovering**：恢复中。   

- **deleting**：删除中。   

',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'Type' => 
                        array (
                          'description' => 'VBR类型。',
                          'type' => 'string',
                          'example' => 'pconnVBR',
                        ),
                        'MinTxInterval' => 
                        array (
                          'description' => '配置BFD报文的发送间隔，取值：**200～1000**，单位为ms。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '300',
                        ),
                        'PeerIpv6GatewayIp' => 
                        array (
                          'description' => 'VBR实例的客户侧互联IPv6地址。',
                          'type' => 'string',
                          'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
                        ),
                        'PConnVbrExpireTime' => 
                        array (
                          'description' => '计费VBR的超期时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'PhysicalConnectionOwnerUid' => 
                        array (
                          'description' => '物理专线所属的账号ID。',
                          'type' => 'string',
                          'example' => '1688000000000****',
                        ),
                        'ActivationTime' => 
                        array (
                          'description' => 'VBR第一次激活的时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'PhysicalConnectionBusinessStatus' => 
                        array (
                          'description' => '物理专线业务状态。

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Description' => 
                        array (
                          'description' => 'VBR的描述信息。',
                          'type' => 'string',
                          'example' => 'desc',
                        ),
                        'TerminationTime' => 
                        array (
                          'description' => 'VBR最近一次被终止的时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'MinRxInterval' => 
                        array (
                          'description' => '配置BFD报文的接收间隔，取值：**200～1000**，单位为ms。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '300',
                        ),
                        'PeerGatewayIp' => 
                        array (
                          'description' => 'VBR实例的客户侧互联IPv4地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'Name' => 
                        array (
                          'description' => 'VBR实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'VbrId' => 
                        array (
                          'description' => 'VBR实例ID。',
                          'type' => 'string',
                          'example' => 'vbr-bp1jcg5cmxjbl9xgc****',
                        ),
                        'VlanId' => 
                        array (
                          'description' => 'VBR实例的VLAN ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'VlanInterfaceId' => 
                        array (
                          'description' => 'VBR的路由器接口的ID。',
                          'type' => 'string',
                          'example' => 'ri-2zeo3xzyf38r4xx****',
                        ),
                        'CircuitCode' => 
                        array (
                          'description' => '运营商为物理专线提供的电路编码。',
                          'type' => 'string',
                          'example' => 'longtel0****',
                        ),
                        'LocalIpv6GatewayIp' => 
                        array (
                          'description' => 'VBR实例的阿里云侧互联IPv6地址。',
                          'type' => 'string',
                          'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
                        ),
                        'LocalGatewayIp' => 
                        array (
                          'description' => 'VBR实例的阿里云侧互联IPv4地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'PeeringSubnetMask' => 
                        array (
                          'description' => 'VBR实例的阿里云侧互联IPv4和客户侧互联IPv4的子网掩码。',
                          'type' => 'string',
                          'example' => '255.255.255.252',
                        ),
                        'EnableIpv6' => 
                        array (
                          'description' => '是否启用IPv6。

- **true**：开启。

- **false**：关闭。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'RouteTableId' => 
                        array (
                          'description' => 'VBR的路由表ID。',
                          'type' => 'string',
                          'example' => 'rtb-bp1****',
                        ),
                        'DetectMultiplier' => 
                        array (
                          'description' => '检测时间倍数。

即接收方允许发送方发送报文的最大连接丢包数，用来检测链路是否正常。

取值：**3～10**。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                        'EccId' => 
                        array (
                          'description' => '高速上云服务实例ID。',
                          'type' => 'string',
                          'example' => 'ecc-h****',
                        ),
                        'CloudBoxInstanceId' => 
                        array (
                          'description' => '云盒实例ID。',
                          'type' => 'string',
                          'example' => 'cb-****',
                        ),
                        'RecoveryTime' => 
                        array (
                          'description' => 'VBR最近一次从**terminated**状态恢复到**active**状态的时间。',
                          'type' => 'string',
                          'example' => '2021-05-08T12:20:55',
                        ),
                        'PhysicalConnectionStatus' => 
                        array (
                          'description' => '物理专线状态。

- **Initial**：申请中。

- **Approved**：审批通过。

- **Allocating**：正在分配资源。

- **Allocated**：接入施工中。

- **Confirmed**：等待用户确认。

- **Enabled**：已开通。

- **Rejected**：申请被拒绝。

- **Canceled**：已取消。

- **Allocation Failed**：资源分配失败。

- **Terminated**：已终止。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'PeeringIpv6SubnetMask' => 
                        array (
                          'description' => 'VBR实例的阿里云侧互联IPv6与客户侧互联IPv6的子网掩码。',
                          'type' => 'string',
                          'example' => '2000:1234:0:a000::/55',
                        ),
                        'AccessPointId' => 
                        array (
                          'description' => '物理专线接入点的ID。',
                          'type' => 'string',
                          'example' => 'ap-cn-kojok1x****',
                        ),
                        'PConnVbrChargeType' => 
                        array (
                          'description' => '物理专线绑定的边界路由器付费类型。

- **PrePaid**：预付费，包年包月。选择该类付费方式时，您必须确认自己的账号支持余额支付或信用支付。
- **PostPaid**：按量付费。',
                          'type' => 'string',
                          'example' => 'PrePaid',
                        ),
                        'PhysicalConnectionId' => 
                        array (
                          'description' => 'VBR所属的物理专线的ID。',
                          'type' => 'string',
                          'example' => 'pc-119mfjzm7x****',
                        ),
                        'AssociatedPhysicalConnections' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AssociatedPhysicalConnection' => 
                            array (
                              'description' => '关联的物理专线信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '关联的物理专线信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Status' => 
                                  array (
                                    'description' => 'VBR实例状态。
         
- **unconfirmed**：等待他人确认。

- **active**：正常。   

- **terminating**：终止接入中。  

- **terminated**：已终止接入。   

- **recovering**：恢复中。   

- **deleting**：删除中。   ',
                                    'type' => 'string',
                                    'example' => 'active',
                                  ),
                                  'VlanInterfaceId' => 
                                  array (
                                    'description' => 'VBR的路由器接口ID，可以作为VBR路由的下一跳。',
                                    'type' => 'string',
                                    'example' => 'ri-kojok19x3j0q6k****',
                                  ),
                                  'CircuitCode' => 
                                  array (
                                    'description' => '运营商为物理专线提供的电路编码。',
                                    'type' => 'string',
                                    'example' => 'longtel0**',
                                  ),
                                  'PeerIpv6GatewayIp' => 
                                  array (
                                    'description' => 'VBR实例的客户侧互联IPv6地址。
',
                                    'type' => 'string',
                                    'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
                                  ),
                                  'LocalIpv6GatewayIp' => 
                                  array (
                                    'description' => 'VBR实例的阿里云侧互联IPv6地址。',
                                    'type' => 'string',
                                    'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
                                  ),
                                  'PhysicalConnectionOwnerUid' => 
                                  array (
                                    'description' => '物理专线所有者的账号ID。',
                                    'type' => 'string',
                                    'example' => '12345678****',
                                  ),
                                  'LocalGatewayIp' => 
                                  array (
                                    'description' => 'VBR实例的阿里云侧互联IPv4地址。',
                                    'type' => 'string',
                                    'example' => '192.168.XX.XX',
                                  ),
                                  'PhysicalConnectionBusinessStatus' => 
                                  array (
                                    'description' => '物理专线业务状态。

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
                                    'type' => 'string',
                                    'example' => 'Normal',
                                  ),
                                  'PeeringSubnetMask' => 
                                  array (
                                    'description' => 'VBR实例的阿里云侧和客户侧互联IPv4的子网掩码。 

两个IPv4地址必须位于同一个子网。 ',
                                    'type' => 'string',
                                    'example' => '255.255.255.252',
                                  ),
                                  'EnableIpv6' => 
                                  array (
                                    'description' => '是否启用IPv6。

- **true**：开启。

- **false**：关闭。',
                                    'type' => 'boolean',
                                    'example' => 'true',
                                  ),
                                  'PhysicalConnectionStatus' => 
                                  array (
                                    'description' => '物理专线状态。

- **Initial**：申请中。

- **Approved**：审批通过。

- **Allocating**：正在分配资源。

- **Allocated**：接入施工中。

- **Confirmed**：等待用户确认。

- **Enabled**：已开通。

- **Rejected**：申请被拒绝。

- **Canceled**：已取消。

- **Allocation Failed**：资源分配失败。

- **Terminated**：已终止。',
                                    'type' => 'string',
                                    'example' => 'Enabled',
                                  ),
                                  'PeerGatewayIp' => 
                                  array (
                                    'description' => 'VBR实例的客户侧互联IPv4地址。',
                                    'type' => 'string',
                                    'example' => '116.62.XX.XX',
                                  ),
                                  'PeeringIpv6SubnetMask' => 
                                  array (
                                    'description' => 'VBR实例的阿里云侧和客户侧互联IPv6的子网掩码。 

两个IPv6地址必须位于同一个子网。 ',
                                    'type' => 'string',
                                    'example' => '2408:4004:cc:400::/56',
                                  ),
                                  'PhysicalConnectionId' => 
                                  array (
                                    'description' => '物理专线ID。',
                                    'type' => 'string',
                                    'example' => 'pc-119mfjzm7****',
                                  ),
                                  'VlanId' => 
                                  array (
                                    'description' => 'VBR实例的VLAN ID。',
                                    'type' => 'string',
                                    'example' => '0',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AssociatedCens' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AssociatedCen' => 
                            array (
                              'description' => '关联的云企业网实例信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CenOwnerId' => 
                                  array (
                                    'description' => '云企业网实例所属账号的ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1688000000000****',
                                  ),
                                  'CenId' => 
                                  array (
                                    'description' => '云企业网实例ID。',
                                    'type' => 'string',
                                    'example' => 'cen-kojok19xxx****',
                                  ),
                                  'CenStatus' => 
                                  array (
                                    'description' => '云企业网状态。

- **Attached**：已关联。

- **Attaching**：关联中。

- **Detached**：已取消关联。

- **Detaching**：取消关联中。

- 空：未关联。',
                                    'type' => 'string',
                                    'example' => 'Attached',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => 'VBR实例的带宽值，单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph6aiy****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tags' => 
                            array (
                              'description' => '资源的标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '资源的标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '资源的标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EcrId' => 
                        array (
                          'description' => '关联的专线网关实例ID。',
                          'type' => 'string',
                          'example' => 'ecr-7vrbqv9lcgvzqbwwkm',
                        ),
                        'SitelinkEnable' => 
                        array (
                          'description' => '是否允许IDC间业务访问。取值：

* **true**：是。
* **false**：否。

>如果不传入任何取值表示不允许IDC间业务访问。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'EcrAttatchStatus' => 
                        array (
                          'description' => '专线网关关联状态。

- **Attached**：已关联。

- **Attaching**：关联中。

- **Detached**：已取消关联。

- **Detaching**：取消关联中。

- **空**：未关联。',
                          'type' => 'string',
                          'example' => 'Attached',
                        ),
                        'EcrOwnerId' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidFilterKey.ValueNotSupported',
            'errorMessage' => 'Specified filter key is not supported: Filter.X.key',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"VirtualBorderRouterSet\\": {\\n    \\"VirtualBorderRouterType\\": [\\n      {\\n        \\"CreationTime\\": \\"2020-06-08T12:20:55\\",\\n        \\"Status\\": \\"active\\",\\n        \\"Type\\": \\"pconnVBR\\",\\n        \\"MinTxInterval\\": 300,\\n        \\"PeerIpv6GatewayIp\\": \\"2001:XXXX:3c4d:0015:0000:0000:0000:1a2b\\",\\n        \\"PConnVbrExpireTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"PhysicalConnectionOwnerUid\\": \\"1688000000000****\\",\\n        \\"ActivationTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"PhysicalConnectionBusinessStatus\\": \\"Normal\\",\\n        \\"Description\\": \\"desc\\",\\n        \\"TerminationTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"MinRxInterval\\": 300,\\n        \\"PeerGatewayIp\\": \\"192.168.XX.XX\\",\\n        \\"Name\\": \\"test\\",\\n        \\"VbrId\\": \\"vbr-bp1jcg5cmxjbl9xgc****\\",\\n        \\"VlanId\\": 10,\\n        \\"VlanInterfaceId\\": \\"ri-2zeo3xzyf38r4xx****\\",\\n        \\"CircuitCode\\": \\"longtel0****\\",\\n        \\"LocalIpv6GatewayIp\\": \\"2001:XXXX:3c4d:0015:0000:0000:0000:1a2b\\",\\n        \\"LocalGatewayIp\\": \\"192.168.XX.XX\\",\\n        \\"PeeringSubnetMask\\": \\"255.255.255.252\\",\\n        \\"EnableIpv6\\": false,\\n        \\"RouteTableId\\": \\"rtb-bp1****\\",\\n        \\"DetectMultiplier\\": 3,\\n        \\"EccId\\": \\"ecc-h****\\",\\n        \\"CloudBoxInstanceId\\": \\"cb-****\\",\\n        \\"RecoveryTime\\": \\"2021-05-08T12:20:55\\",\\n        \\"PhysicalConnectionStatus\\": \\"Normal\\",\\n        \\"PeeringIpv6SubnetMask\\": \\"2000:1234:0:a000::/55\\",\\n        \\"AccessPointId\\": \\"ap-cn-kojok1x****\\",\\n        \\"PConnVbrChargeType\\": \\"PrePaid\\",\\n        \\"PhysicalConnectionId\\": \\"pc-119mfjzm7x****\\",\\n        \\"AssociatedPhysicalConnections\\": {\\n          \\"AssociatedPhysicalConnection\\": [\\n            {\\n              \\"Status\\": \\"active\\",\\n              \\"VlanInterfaceId\\": \\"ri-kojok19x3j0q6k****\\",\\n              \\"CircuitCode\\": \\"longtel0**\\",\\n              \\"PeerIpv6GatewayIp\\": \\"2001:XXXX:3c4d:0015:0000:0000:0000:1a2b\\",\\n              \\"LocalIpv6GatewayIp\\": \\"2001:XXXX:3c4d:0015:0000:0000:0000:1a2b\\",\\n              \\"PhysicalConnectionOwnerUid\\": \\"12345678****\\",\\n              \\"LocalGatewayIp\\": \\"192.168.XX.XX\\",\\n              \\"PhysicalConnectionBusinessStatus\\": \\"Normal\\",\\n              \\"PeeringSubnetMask\\": \\"255.255.255.252\\",\\n              \\"EnableIpv6\\": true,\\n              \\"PhysicalConnectionStatus\\": \\"Enabled\\",\\n              \\"PeerGatewayIp\\": \\"116.62.XX.XX\\",\\n              \\"PeeringIpv6SubnetMask\\": \\"2408:4004:cc:400::/56\\",\\n              \\"PhysicalConnectionId\\": \\"pc-119mfjzm7****\\",\\n              \\"VlanId\\": \\"0\\"\\n            }\\n          ]\\n        },\\n        \\"AssociatedCens\\": {\\n          \\"AssociatedCen\\": [\\n            {\\n              \\"CenOwnerId\\": 0,\\n              \\"CenId\\": \\"cen-kojok19xxx****\\",\\n              \\"CenStatus\\": \\"Attached\\"\\n            }\\n          ]\\n        },\\n        \\"Bandwidth\\": 50,\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n        \\"Tags\\": {\\n          \\"Tags\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        },\\n        \\"EcrId\\": \\"ecr-7vrbqv9lcgvzqbwwkm\\",\\n        \\"SitelinkEnable\\": false,\\n        \\"EcrAttatchStatus\\": \\"Attached\\",\\n        \\"EcrOwnerId\\": \\"\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVirtualBorderRoutersResponse>\\n    <RequestId>DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <VirtualBorderRouterSet>\\n        <CreationTime>2020-06-08T12:20:55</CreationTime>\\n        <Status>active</Status>\\n        <Type>pconnVBR</Type>\\n        <MinTxInterval>300</MinTxInterval>\\n        <PeerIpv6GatewayIp>2001:XXXX:3c4d:0015:0000:0000:0000:1a2b</PeerIpv6GatewayIp>\\n        <PConnVbrExpireTime>2021-06-08T12:20:55</PConnVbrExpireTime>\\n        <PhysicalConnectionOwnerUid>1688000000000****</PhysicalConnectionOwnerUid>\\n        <ActivationTime>2021-06-08T12:20:55</ActivationTime>\\n        <PhysicalConnectionBusinessStatus>Normal</PhysicalConnectionBusinessStatus>\\n        <Description>desc</Description>\\n        <TerminationTime>2021-06-08T12:20:55</TerminationTime>\\n        <MinRxInterval>300</MinRxInterval>\\n        <PeerGatewayIp>192.168.XX.XX</PeerGatewayIp>\\n        <Name>test</Name>\\n        <VbrId>vbr-bp1jcg5cmxjbl9xgc****</VbrId>\\n        <VlanId>10</VlanId>\\n        <VlanInterfaceId>ri-2zeo3xzyf38r4xx****</VlanInterfaceId>\\n        <CircuitCode>longtel0****</CircuitCode>\\n        <LocalIpv6GatewayIp>2001:XXXX:3c4d:0015:0000:0000:0000:1a2b</LocalIpv6GatewayIp>\\n        <LocalGatewayIp>192.168.XX.XX</LocalGatewayIp>\\n        <PeeringSubnetMask>255.255.255.252</PeeringSubnetMask>\\n        <EnableIpv6>false</EnableIpv6>\\n        <RouteTableId>rtb-bp1****</RouteTableId>\\n        <DetectMultiplier>3</DetectMultiplier>\\n        <EccId>ecc-h****</EccId>\\n        <CloudBoxInstanceId>cb-****</CloudBoxInstanceId>\\n        <RecoveryTime>2021-05-08T12:20:55</RecoveryTime>\\n        <PhysicalConnectionStatus>Normal</PhysicalConnectionStatus>\\n        <PeeringIpv6SubnetMask>2000:1234:0:a000::/55</PeeringIpv6SubnetMask>\\n        <AccessPointId>ap-cn-kojok1x****</AccessPointId>\\n        <PConnVbrChargeType>PrePaid</PConnVbrChargeType>\\n        <PhysicalConnectionId>pc-119mfjzm7x****</PhysicalConnectionId>\\n        <AssociatedPhysicalConnections>\\n            <Status>active</Status>\\n            <VlanInterfaceId>ri-kojok19x3j0q6k****</VlanInterfaceId>\\n            <CircuitCode>longtel0**</CircuitCode>\\n            <PeerIpv6GatewayIp>2001:XXXX:3c4d:0015:0000:0000:0000:1a2b</PeerIpv6GatewayIp>\\n            <LocalIpv6GatewayIp>2001:XXXX:3c4d:0015:0000:0000:0000:1a2b</LocalIpv6GatewayIp>\\n            <PhysicalConnectionOwnerUid>12345678****</PhysicalConnectionOwnerUid>\\n            <LocalGatewayIp>192.168.XX.XX</LocalGatewayIp>\\n            <PhysicalConnectionBusinessStatus>Normal</PhysicalConnectionBusinessStatus>\\n            <PeeringSubnetMask>255.255.255.252</PeeringSubnetMask>\\n            <EnableIpv6>true</EnableIpv6>\\n            <PhysicalConnectionStatus>Enabled</PhysicalConnectionStatus>\\n            <PeerGatewayIp>116.62.XX.XX</PeerGatewayIp>\\n            <PeeringIpv6SubnetMask>2408:4004:cc:400::/56</PeeringIpv6SubnetMask>\\n            <PhysicalConnectionId>pc-119mfjzm7****</PhysicalConnectionId>\\n            <VlanId>0</VlanId>\\n        </AssociatedPhysicalConnections>\\n        <AssociatedCens>\\n            <CenId>cen-kojok19xxx****</CenId>\\n            <CenStatus>Attached</CenStatus>\\n        </AssociatedCens>\\n        <Bandwidth>50</Bandwidth>\\n        <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </VirtualBorderRouterSet>\\n</DescribeVirtualBorderRoutersResponse>","errorExample":""}]',
      'title' => '查询已创建的边界路由器（VBR）',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '
',
    ),
    'DescribeVirtualBorderRoutersForPhysicalConnection' => 
    array (
      'summary' => '查询指定物理专线下的边界路由器（VBR），包括物理专线所有者的VBR和其他账号的VBR。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线所在的地域。 您可以通过调用[DescribeRegions](~~36063~~) 接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PhysicalConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pc-119mfj****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 分页查询时每页的行数，最大值为**50**。默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件列表。



',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤条件列表。



',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件，最多可提供5个过滤条件。支持如下过滤条件：

* **PhysicalConnectionId**：物理专线实例ID。

* **VbrId**：边界路由器实例ID。

* **Status**：边界路由器状态。

* **Name**：边界路由器名称。

* **AccessPointId**：接入点ID。

* **eccId**：高速上云服务实例ID。

* **type**：边界路由器类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Status',
                ),
                'Value' => 
                array (
                  'description' => '根据Key指定过滤值。一个Key支持指定多个过滤值，每个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '根据Key指定过滤值。一个Key支持指定多个过滤值，每个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Active',
                  ),
                  'required' => false,
                  'example' => 'Active',
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7C5AE8B3-A2D8-428D-A2FF-93A225C0821E',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值：**50**。默认值：**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VirtualBorderRouterForPhysicalConnectionSet' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VirtualBorderRouterForPhysicalConnectionType' => 
                  array (
                    'description' => '查询到的VBR实例信息合集。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'VBR实例状态。取值：
         
- **unconfirmed**：等待他人确认。

- **active**：正常。   

- **terminating**：终止接入中。  

- **terminated**：已终止接入。   

- **recovering**：恢复中。   

- **deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '创建VBR的时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'Type' => 
                        array (
                          'description' => 'VBR类型。',
                          'type' => 'string',
                          'example' => 'pconnVBR',
                        ),
                        'PeerIpv6GatewayIp' => 
                        array (
                          'description' => 'VBR实例的客户侧互联IPv6地址。


为物理专线所有者创建VBR实例时必填，为其他账号创建VBR实例时无需填写。',
                          'type' => 'string',
                          'example' => '2001:XXXX:3c4d:0015:0000:0000:0000:1a2b',
                        ),
                        'CircuitCode' => 
                        array (
                          'description' => '运营商为物理专线提供的电路编码。',
                          'type' => 'string',
                          'example' => 'longtel0**',
                        ),
                        'LocalIpv6GatewayIp' => 
                        array (
                          'description' => 'VBR实例的阿里云侧互联IPv6地址。',
                          'type' => 'string',
                          'example' => 'ipv6bw-uf6hcyzu65v98v3du****',
                        ),
                        'PConnVbrExpireTime' => 
                        array (
                          'description' => '物理专线绑定的VBR到期时间。',
                          'type' => 'string',
                          'example' => '2021-06-10T12:20:55',
                        ),
                        'LocalGatewayIp' => 
                        array (
                          'description' => 'VBR实例的阿里云侧互联IPv4地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.X',
                        ),
                        'BandwidthStatus' => 
                        array (
                          'description' => '带宽生效状态。取值：

- **Active**：正常。

- **Inactive**：异常。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'ActivationTime' => 
                        array (
                          'description' => 'VBR第一次激活的时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'VbrOwnerUid' => 
                        array (
                          'description' => 'VBR所有者的账号ID。

VBR和物理专线的所有者相同时该参数为空。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '253460731706911258',
                        ),
                        'PeeringSubnetMask' => 
                        array (
                          'description' => 'VBR实例的阿里云侧和客户侧互联IPv4的子网掩码。

两个IPv4地址必须位于同一个子网。',
                          'type' => 'string',
                          'example' => '255.255.255.0',
                        ),
                        'EnableIpv6' => 
                        array (
                          'description' => '是否启用IPv6。取值：

- **true**：开启。

- **false**：关闭。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'EccId' => 
                        array (
                          'description' => '高速上云服务实例ID。',
                          'type' => 'string',
                          'example' => 'ecc-sjghe****',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => '物理专线下绑定的边界路由器带宽值，单位：Mbps。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'RecoveryTime' => 
                        array (
                          'description' => 'VBR最近一次从Terminated状态恢复到Active状态的时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'TerminationTime' => 
                        array (
                          'description' => 'VBR最近一次被终止的时间。',
                          'type' => 'string',
                          'example' => '2021-06-07T12:20:55',
                        ),
                        'PConnVbrBussinessStatus' => 
                        array (
                          'description' => '物理专线绑定的VBR运行状态。取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'PeerGatewayIp' => 
                        array (
                          'description' => 'VBR实例的客户侧互联IPv4地址。',
                          'type' => 'string',
                          'example' => '162.62.XX.XX',
                        ),
                        'PeeringIpv6SubnetMask' => 
                        array (
                          'description' => 'VBR实例的阿里云侧和客户侧互联IPv6的子网掩码。 

两个IPv6地址必须位于同一个子网。 ',
                          'type' => 'string',
                          'example' => '2408:4004:cc:400::/56',
                        ),
                        'VbrId' => 
                        array (
                          'description' => 'VBR实例ID。',
                          'type' => 'string',
                          'example' => 'vbr-bp16ksp61j7e0tk****',
                        ),
                        'PConnVbrChargeType' => 
                        array (
                          'description' => '物理专线绑定的边界路由器付费类型。取值：

* **PrePaid**：预付费，包年包月。选择该类付费方式时，您必须确认自己的账号支持余额支付或信用支付。

* **PostPaid**：按量付费。',
                          'type' => 'string',
                          'example' => 'PrePaid',
                        ),
                        'VlanId' => 
                        array (
                          'description' => 'VBR实例的VLAN ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1678',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The specified physicalConnection is not found.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionId.NotFound',
            'errorMessage' => 'The specified PhysicalConnectionId does not belong to user.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7C5AE8B3-A2D8-428D-A2FF-93A225C0821E\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"VirtualBorderRouterForPhysicalConnectionSet\\": {\\n    \\"VirtualBorderRouterForPhysicalConnectionType\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"CreationTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"Type\\": \\"pconnVBR\\",\\n        \\"PeerIpv6GatewayIp\\": \\"2001:XXXX:3c4d:0015:0000:0000:0000:1a2b\\",\\n        \\"CircuitCode\\": \\"longtel0**\\",\\n        \\"LocalIpv6GatewayIp\\": \\"ipv6bw-uf6hcyzu65v98v3du****\\",\\n        \\"PConnVbrExpireTime\\": \\"2021-06-10T12:20:55\\",\\n        \\"LocalGatewayIp\\": \\"192.168.XX.X\\",\\n        \\"BandwidthStatus\\": \\"Active\\",\\n        \\"ActivationTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"VbrOwnerUid\\": 253460731706911260,\\n        \\"PeeringSubnetMask\\": \\"255.255.255.0\\",\\n        \\"EnableIpv6\\": true,\\n        \\"EccId\\": \\"ecc-sjghe****\\",\\n        \\"Bandwidth\\": \\"10\\",\\n        \\"RecoveryTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"TerminationTime\\": \\"2021-06-07T12:20:55\\",\\n        \\"PConnVbrBussinessStatus\\": \\"Normal\\",\\n        \\"PeerGatewayIp\\": \\"162.62.XX.XX\\",\\n        \\"PeeringIpv6SubnetMask\\": \\"2408:4004:cc:400::/56\\",\\n        \\"VbrId\\": \\"vbr-bp16ksp61j7e0tk****\\",\\n        \\"PConnVbrChargeType\\": \\"PrePaid\\",\\n        \\"VlanId\\": 1678\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVirtualBorderRoutersForPhysicalConnectionResponse>\\n    <RequestId>7C5AE8B3-A2D8-428D-A2FF-93A225C0821E</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <VirtualBorderRouterForPhysicalConnectionSet>\\n        <Status>Active</Status>\\n        <CreationTime>2021-06-08T12:20:55</CreationTime>\\n        <Type>pconnVBR</Type>\\n        <PeerIpv6GatewayIp>2001:XXXX:3c4d:0015:0000:0000:0000:1a2b</PeerIpv6GatewayIp>\\n        <CircuitCode>longtel0**</CircuitCode>\\n        <LocalIpv6GatewayIp>ipv6bw-uf6hcyzu65v98v3du****</LocalIpv6GatewayIp>\\n        <PConnVbrExpireTime>2021-06-10T12:20:55</PConnVbrExpireTime>\\n        <LocalGatewayIp>192.168.XX.X</LocalGatewayIp>\\n        <BandwidthStatus>Active</BandwidthStatus>\\n        <ActivationTime>2021-06-08T12:20:55</ActivationTime>\\n        <VbrOwnerUid>253460731706911260</VbrOwnerUid>\\n        <PeeringSubnetMask>255.255.255.0</PeeringSubnetMask>\\n        <EnableIpv6>true</EnableIpv6>\\n        <EccId>ecc-sjghe****</EccId>\\n        <Bandwidth>10</Bandwidth>\\n        <RecoveryTime>2021-06-08T12:20:55</RecoveryTime>\\n        <TerminationTime>2021-06-07T12:20:55</TerminationTime>\\n        <PConnVbrBussinessStatus>Normal</PConnVbrBussinessStatus>\\n        <PeerGatewayIp>162.62.XX.XX</PeerGatewayIp>\\n        <PeeringIpv6SubnetMask>2408:4004:cc:400::/56</PeeringIpv6SubnetMask>\\n        <VbrId>vbr-bp16ksp61j7e0tk****</VbrId>\\n        <PConnVbrChargeType>PrePaid</PConnVbrChargeType>\\n        <VlanId>1678</VlanId>\\n    </VirtualBorderRouterForPhysicalConnectionSet>\\n</DescribeVirtualBorderRoutersForPhysicalConnectionResponse>","errorExample":""}]',
      'title' => '查询边界路由器（VBR）',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddBgpNetwork' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR组所在的地域。

 您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'DstCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和本地IDC互连的VPC或交换机的网段。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.10.XX.XX/32',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1qpo0kug3a2*****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口关联的路由器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vrt-2zeo3xzyf38r4u******',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9C7FA9D6-72E0-48A9-A9C3-2DA8569CD5EB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpDiscription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'parameter must not null.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
          17 => 
          array (
            'errorCode' => 'Duplicated.CidrBlock',
            'errorMessage' => 'bgp network cidr already exists.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidIP.IpInSnatPool',
            'errorMessage' => 'Multi ip in snat pool cannot remove ip from bandwidth package.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidDestCidrBlock.Malformed',
            'errorMessage' => 'Specified dstCidrBlock is not valid.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.ConflictWithDClass',
            'errorMessage' => 'DClass IP can not support.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.NoActiveRouterInterface',
            'errorMessage' => 'there\'s not active routerInterface,cannot add bgp network.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9C7FA9D6-72E0-48A9-A9C3-2DA8569CD5EB\\"\\n}","errorExample":""},{"type":"xml","example":"<AddBgpNetworkResponse>\\n    <RequestId>9C7FA9D6-72E0-48A9-A9C3-2DA8569CD5EB</RequestId>\\n</AddBgpNetworkResponse>","errorExample":""}]',
      'title' => '宣告BGP网络',
      'summary' => '调用AddBgpNetwork宣告BGP网络。',
    ),
    'CreateBgpGroup' => 
    array (
      'summary' => '为指定的边界路由器（VBR）创建一个BGP组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp1ctxy813985gkuk****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的名称。

长度为2~128个字符，必须以英文大小写字母或中文开头，可包含数字，半角句号（.），下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的描述信息。

长度为2~256个字符，必须以英文大小写字母或中文开头，但不能以`http:// `或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalAsn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义阿里云侧BGP AS号。取值：

- **45104**
- **64512~65534**
- **4200000000~4294967294**

> 其中**65025**为阿里云保留值，阿里侧默认使用**45104**作为**LocalAsn**，使用自定义**LocalAsn**功能在多线接入场景时可能存在BGP路由环路风险，请合理评估后使用。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '45104',
          ),
        ),
        5 => 
        array (
          'name' => 'PeerAsn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地IDC侧设备的AS号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1****',
          ),
        ),
        6 => 
        array (
          'name' => 'AuthKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的认证密钥。 ',
            'type' => 'string',
            'required' => false,
            'example' => '!PWZ2****',
          ),
        ),
        7 => 
        array (
          'name' => 'IsFakeAsn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否指定伪AS号。取值：

- **false**（默认值）：否。
- **true**：是。

> 运行BGP的路由器一般只能属于一个AS。当需要用新的AS替代原有的AS（例如AS需要迁移或者和其他AS合并），并且因为业务等客观因素无法立即修改BGP配置时，可以通过指定伪AS号与本端建立连接，保证业务不中断。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        9 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP版本。取值：

- **IPv4**（默认值）：IPv4版本。
- **IPv6**：IPv6版本，只有当创建BGP组的VBR开通IPv6功能时，支持IPv6版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        10 => 
        array (
          'name' => 'RouteQuota',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP邻居的路由条目上限。单位：条，默认值：**110**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '110',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建的BGP组ID。',
            'type' => 'object',
            'properties' => 
            array (
              'BgpGroupId' => 
              array (
                'description' => '创建的BGP组ID。',
                'type' => 'string',
                'example' => 'bgpg-bp1k25cyp26cllath****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C1221A1F-2ACD-4592-8F27-474E02883159',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpDescription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'params must not null.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidBgpGroup.LocalAsnInvalid',
            'errorMessage' => 'The specified BgpGroup LocalAsn is invalid, only support 64512 to 65534 or 4200000000 to 4294967294, but cannot be 65025.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.PeerAsn',
            'errorMessage' => 'The param of PeerAsn is illegal',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => 'The param of LocalAsn is illegal',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationUnsupport',
            'errorMessage' => 'Operation is unsupport, not in vbr support custom local asn white list.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.RouteLimit',
            'errorMessage' => 'The operation is failed because of bgp group max route entry num quota exceed.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.BgpGroupLocalAsn',
            'errorMessage' => 'VBR BgpGroup localAsn must same with ECR asn.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationDenied.VbrAttachEcrInMiddleStatus',
            'errorMessage' => 'The operation is not allowed because of VBR attach or detach ECR in middle status.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.BgpPeerConflictWithECR',
            'errorMessage' => 'The BGP neighbor created by the previous VBR conflicts with the ECR configuration.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"BgpGroupId\\": \\"bgpg-bp1k25cyp26cllath****\\",\\n  \\"RequestId\\": \\"C1221A1F-2ACD-4592-8F27-474E02883159\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateBgpGroupResponse>\\n    <BgpGroupId>bgpg-bp1k25cyp26cllath****</BgpGroupId>\\n    <RequestId>C1221A1F-2ACD-4592-8F27-474E02883159</RequestId>\\n</CreateBgpGroupResponse>","errorExample":""}]',
      'title' => '为指定的VBR创建一个BGP组',
      'description' => '您可以通过边界网关协议BGP（Border Gateway Protocol）实现VBR与本地IDC的互通。每个BGP组关联一个VBR，您仅需将与VBR通信的BGP邻居添加到对应的BGP组中，然后在VBR中宣告BGP网络即可。 

BGP组用于简化BGP配置，通过将相同配置的BGP邻居合并到一个BGP组，减少配置的复杂度。您需要先根据申请的ASN创建一个BGP组。 

调用本接口创建BGP组时，请注意： 
- VBR仅支持与物理专线对端的本地IDC建立BGP邻居。
- VBR支持的BGP版本为BGP-4。
- 每个VBR最多可以建立8个BGP邻居。
- 每个BGP邻居的动态路由条数上限为110条。
- 阿里云侧自治系统号ASN（Autonomous System Number）为45104，可接受用户侧传递2 Byte或4 Byte的ASN。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateBgpPeer' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' BGP组的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bgpg-wz9f62v4fbg****',
          ),
        ),
        2 => 
        array (
          'name' => 'PeerIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP邻居的IP地址。  ',
            'type' => 'string',
            'required' => false,
            'example' => '116.62.XX.XX',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableBfd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启BFD功能，取值：

- **true**：开启BFD功能。

- **false**：不开启BFD功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        5 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP版本。取值：

- **IPv4**（默认值）：IPv4版本。
- **IPv6**：IPv6版本，只有当创建BGP组的VBR开通IPv6功能时，支持IPv6版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        6 => 
        array (
          'name' => 'BfdMultiHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BFD跳数。取值范围：**1**~**255**。

选择开启BFD功能时，需要配置此参数。
输入BFD跳数，即数据从源端到目标端传输时经过的最大设备数量。您可以根据真实的物理链路因素配置不同的跳数。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BgpPeerId' => 
              array (
                'description' => 'BGP邻居的ID。',
                'type' => 'string',
                'example' => 'bgp-m5eoyp2mwegk8ce9v****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D4B7649A-61BB-4C64-A586-1DFF1EDA6A42',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidAccessDeviceId.NotFound',
            'errorMessage' => 'There is no Access_Device_Id in our records',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.BfdSession',
            'errorMessage' => 'Your Bfd Session number reaches the upper limit.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidBgpDiscription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
          19 => 
          array (
            'errorCode' => 'BgpPeer.Already.Exists',
            'errorMessage' => 'bgp peer already exists.',
          ),
          20 => 
          array (
            'errorCode' => 'MissingParam.EnableBfd',
            'errorMessage' => 'The parameter EnableBfd is missing.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationUnsupported.IPV6ForThisRegion',
            'errorMessage' => 'This Region is unsupported IPV6.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.BfdMultiHop',
            'errorMessage' => 'BfdMultiHop is illegal.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          24 => 
          array (
            'errorCode' => 'UnsupportedFeature.Vpconn',
            'errorMessage' => 'The feature of Vpconn is not supported.',
          ),
          25 => 
          array (
            'errorCode' => 'DuplicatedParam.PeerIpAddress',
            'errorMessage' => 'The param of PeerIpAddress is duplicated.',
          ),
          26 => 
          array (
            'errorCode' => 'DuplicatedParam.LocalIpAddress',
            'errorMessage' => 'The LocalIpAddress already exists.',
          ),
          27 => 
          array (
            'errorCode' => 'DuplicatedParam.PeerIpv6Address',
            'errorMessage' => 'The PeerIpv6Address already exists.',
          ),
          28 => 
          array (
            'errorCode' => 'DuplicatedParam.LocalIpv6Address',
            'errorMessage' => 'The LocalIpv6Address already exists.',
          ),
          29 => 
          array (
            'errorCode' => 'IllegalParam.LocalGatewayIpAndMask',
            'errorMessage' => 'The LocalGatewayIpAndMask value is invalid.',
          ),
          30 => 
          array (
            'errorCode' => 'IllegalParam.PeeringIpv6SubnetMask',
            'errorMessage' => 'The PeeringIpv6SubnetMask value is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"BgpPeerId\\": \\"bgp-m5eoyp2mwegk8ce9v****\\",\\n  \\"RequestId\\": \\"D4B7649A-61BB-4C64-A586-1DFF1EDA6A42\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateBgpPeerResponse>\\n    <BgpPeerId>bgp-m5eoyp2mwegk8ce9v****</BgpPeerId>\\n    <RequestId>D4B7649A-61BB-4C64-A586-1DFF1EDA6A42</RequestId>\\n</CreateBgpPeerResponse>","errorExample":""}]',
      'title' => '向指定的BGP组中添加BGP邻居',
      'summary' => '调用CreateBgpPeer接口向指定的BGP组中添加BGP邻居。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteBgpGroup' => 
    array (
      'summary' => '使用DeleteBgpGroup删除指定的BGP组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'bgpg-bp1k25cyp26cllath****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpDiscription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationDenied.VbrAttachEcrInMiddleStatus',
            'errorMessage' => 'The operation is not allowed because of VBR attach or detach ECR in middle status.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.BgpPeer',
            'errorMessage' => 'Specified object has dependent resources bgp peer.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteBgpGroupResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteBgpGroupResponse>","errorExample":""}]',
      'title' => '删除指定的BGP组',
    ),
    'DeleteBgpNetwork' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组所在的地域。 


您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DstCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和IDC互联的VPC或交换机的网段。',
            'type' => 'string',
            'required' => true,
            'example' => '10.110.192.12/32',
          ),
        ),
        2 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vrt-bp1lhl0taikrteen8****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpDiscription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteBgpNetworkResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteBgpNetworkResponse>","errorExample":""}]',
      'title' => '删除已宣告的BGP网络',
      'summary' => '使用DeleteBgpNetwork删除已宣告的BGP网络。',
    ),
    'DeleteBgpPeer' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpPeerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP邻居的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'bgp-wz977wcrmb69a********',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpDiscription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidBgpPeer.NotFound',
            'errorMessage' => 'Bgp peer not found.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectStatus.BgpPeer',
            'errorMessage' => 'Invalid BgpPeer status cannot operate.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteBgpPeerResponse>\\n    <RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n</DeleteBgpPeerResponse>","errorExample":""}]',
      'title' => '删除指定的BGP邻居',
      'summary' => '调用DeleteBgpPeer删除指定的BGP邻居。',
    ),
    'ModifyBgpGroupAttribute' => 
    array (
      'summary' => '调用ModifyBgpGroupAttribute接口修改BGP组的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定BGP组的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bgpg-wz9f62v4fbg2g****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的名称。 

长度为2～128个字符，必须以大小写字母或中文开头，可包含数字，半角句号（.），下划线（_）和短划线（-），但不能以`http://` 或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的描述信息。

长度为2～256个字符，必须以大小写字母或中文开头，但不能以`http://` 或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'BGP',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalAsn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义阿里云侧BGP AS号。取值：

- **45104**
- **64512~65534**
- **4200000000~4294967294**

> 其中**65025**为阿里云保留值，阿里侧默认使用**45104**作为**LocalAsn**，使用自定义**LocalAsn**功能在多线接入场景时可能存在BGP路由环路风险，请合理评估后使用。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '45104',
          ),
        ),
        5 => 
        array (
          'name' => 'PeerAsn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地侧设备的AS号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1****',
          ),
        ),
        6 => 
        array (
          'name' => 'AuthKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的认证密钥。',
            'type' => 'string',
            'required' => false,
            'example' => '!PWZ2****',
          ),
        ),
        7 => 
        array (
          'name' => 'IsFakeAsn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否指定伪AS号。取值;

- **false**（默认值）：否。
- **true**：是。

> 运行BGP的路由器一般只能属于一个AS。当需要用新的AS替代原有的AS（例如AS需要迁移或者和其他AS合并），并且因为业务等客观因素无法立即修改BGP配置时，可以通过指定伪AS号与本端建立连接，保证业务不中断。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        9 => 
        array (
          'name' => 'RouteQuota',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP邻居的路由条目上限。单位：条，默认值：**110**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '110',
          ),
        ),
        10 => 
        array (
          'name' => 'ClearAuthKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要清空密钥。取值：

- **true**：是。
- **false**（默认值）：否。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8C3C6D7C-A1CE-4FD8-BC57-DC493A55F76F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QuotaExceeded.Bgp',
            'errorMessage' => 'bgp peer count per vbr quota exceed.',
          ),
          1 => 
          array (
            'errorCode' => 'QuotaExceeded.Nqa',
            'errorMessage' => 'nqa count per vbr quota exceed.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BgpNetwork',
            'errorMessage' => 'bgp network count per vbr quota exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeerIpAddress',
            'errorMessage' => 'multi pconn peer ip can not be null.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbrNetwork',
            'errorMessage' => 'vbr netowrk not exists',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBgpGroup',
            'errorMessage' => 'bgp group not exists',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidBgpName.Malformed',
            'errorMessage' => 'Specified Bgp Group name is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidBgpDiscription.Malformed',
            'errorMessage' => 'Specified Bgp Group description is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBgpAuthkey.Malformed',
            'errorMessage' => 'Specified Bgp Group authkey is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidIP.Malformed',
            'errorMessage' => 'Ip malformed.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPeerAsn.Malformed',
            'errorMessage' => 'invalid peer asn cannot equals aliyun asn:45104',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidBgpGroup.LocalAsnInvalid',
            'errorMessage' => 'The specified BgpGroup LocalAsn is invalid, only support 64512 to 65534 or 4200000000 to 4294967294, and cannot be 65025.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParams.NotFound',
            'errorMessage' => 'instance not found',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParams.AlreadyExists',
            'errorMessage' => 'bgp network already exists',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidStatus.CannotOperate',
            'errorMessage' => 'invalid status cannot operate',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressMustPointOut',
            'errorMessage' => 'vbr has 0 or more than 1 subif ,point out peerIpAddress.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParams.PeerIpAddressInUse',
            'errorMessage' => 'peer ip address in use ,cannot create bgp peer.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.PeerAsn',
            'errorMessage' => '%s',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => '%s',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationUnsupport',
            'errorMessage' => 'Operation is unsupport, not in vbr support custom local asn white list.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.ClearAuthKeyForbidden',
            'errorMessage' => 'The specific auth key is not empty.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.RouteLimit',
            'errorMessage' => 'The operation is failed because of bgp group max route entry num quota exceed.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationDenied.VbrAttachEcrInMiddleStatus',
            'errorMessage' => 'The operation is not allowed because of VBR attach or detach ECR in middle status.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationUnsupported.VBRAttachedECR',
            'errorMessage' => 'VBR already attached to ECR, please delete it from ECR.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'Specified value of "regionId" is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8C3C6D7C-A1CE-4FD8-BC57-DC493A55F76F\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyBgpGroupAttributeResponse>\\n    <RequestId>8C3C6D7C-A1CE-4FD8-BC57-DC493A55F76F</RequestId>\\n</ModifyBgpGroupAttributeResponse>","errorExample":""}]',
      'title' => '修改BGP组的配置',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyBgpPeerAttribute' => 
    array (
      'summary' => '调用ModifyBgpPeerAttribute接口修改BGP邻居的属性。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改属性的BGP邻居所在BGP组的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpPeerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改属性的BGP邻居的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bgp-m5eoyp2mwegk8ce9v****',
          ),
        ),
        2 => 
        array (
          'name' => 'BgpGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改属性的BGP邻居所在BGP组的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'bgpg-m5eo12jxuw2hc0uqq****',
          ),
        ),
        3 => 
        array (
          'name' => 'PeerIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的BGP邻居的IP地址。  ',
            'type' => 'string',
            'required' => false,
            'example' => '116.62.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'EnableBfd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启BFD功能，取值：

- **true**：开启BFD功能。

- **false**（默认值）：不开启BFD功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        6 => 
        array (
          'name' => 'BfdMultiHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BFD跳数。取值范围：**1**~**255**。

选择开启BFD功能时，需要配置此参数。
输入BFD跳数，即数据从源端到目标端传输时经过的最大设备数量。您可以根据真实的物理链路因素配置不同的跳数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D4B7649A-61BB-4C64-A586-1DFF1EDA6A42',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.IpAddress',
            'errorMessage' => 'The specified IpAddress is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidAccessDeviceId.NotFound',
            'errorMessage' => 'There is no Access_Device_Id in our records',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.BfdSession',
            'errorMessage' => 'Your Bfd Session number reaches the upper limit.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.BgpPeerId',
            'errorMessage' => 'The parameter BgpPeerId is mandatory.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidBgpPeer.NotFound',
            'errorMessage' => 'The specified BgpPeerId does not exit in our records.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.BgpPeer',
            'errorMessage' => 'Invalid BgpPeer status cannot operate.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParam.EnableBfd',
            'errorMessage' => 'The parameter EnableBfd is missing.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.BfdMultiHop',
            'errorMessage' => 'BfdMultiHop is illegal.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          10 => 
          array (
            'errorCode' => 'DuplicatedParam.PeerIpAddress',
            'errorMessage' => 'The param of PeerIpAddress is duplicated.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBgpPeerId.NotFound',
            'errorMessage' => 'The specified BgpPeerId does not exit in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorretStatus.BgpPeer',
            'errorMessage' => 'The specified BgpPeer status is not stable, can not operate.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Internal.Error',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D4B7649A-61BB-4C64-A586-1DFF1EDA6A42\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyBgpPeerAttributeResponse>\\n    <RequestId>D4B7649A-61BB-4C64-A586-1DFF1EDA6A42</RequestId>\\n</ModifyBgpPeerAttributeResponse>","errorExample":""}]',
      'title' => '修改BGP邻居的属性',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeBgpGroups' => 
    array (
      'summary' => '查询指定地域下的BGP组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组关联的VBR的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vbr-bp1ctxy813985gkuk****',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'bgpg-bp1k25cyp26cllath****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为默认BGP组。取值：

- **false**：不是默认BGP组。
- **true**：是默认BGP组。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1D0971B2-A35A-42C1-A44C-E91360C36C0B',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'BgpGroups' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BgpGroup' => 
                  array (
                    'description' => 'BGP组的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'BGP组的状态。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'BgpGroupId' => 
                        array (
                          'description' => 'BGP组的ID。',
                          'type' => 'string',
                          'example' => 'bgpg-bp1k25cyp26cllath****',
                        ),
                        'RouterId' => 
                        array (
                          'description' => 'VBR的ID。',
                          'type' => 'string',
                          'example' => 'vbr-bp1ctxy813985gkuk****',
                        ),
                        'PeerAsn' => 
                        array (
                          'description' => '本地IDC侧设备的AS号。',
                          'type' => 'string',
                          'example' => '1****',
                        ),
                        'LocalAsn' => 
                        array (
                          'description' => '阿里云侧AS号。',
                          'type' => 'string',
                          'example' => '45104',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'BGP组所在地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'Hold' => 
                        array (
                          'description' => '等待BGP消息传入的保持时间，单位为秒。

> 如果超过保持时间还没有消息传入，则认为BGP邻居断开了连接。',
                          'type' => 'string',
                          'example' => '30',
                        ),
                        'IpVersion' => 
                        array (
                          'description' => 'BGP组的IP版本。取值：

- **IPv4**：IPv4版本。
- **IPv6**：IPv6版本，只有当创建BGP组的VBR开通IPv6功能时，支持IPv6版本。',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'Description' => 
                        array (
                          'description' => 'BGP组的描述信息。

',
                          'type' => 'string',
                          'example' => 'BGP组描述。',
                        ),
                        'Keepalive' => 
                        array (
                          'description' => '保活时间，单位为秒。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'IsFake' => 
                        array (
                          'description' => 'AS号是否为假。取值：

- **false**：否。
- **true**：是。',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                        'RouteLimit' => 
                        array (
                          'description' => 'BGP动态路由学习的路由条目上限。',
                          'type' => 'string',
                          'example' => '99',
                        ),
                        'Name' => 
                        array (
                          'description' => 'BGP组的名称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'AuthKey' => 
                        array (
                          'description' => 'BGP组使用的密钥。',
                          'type' => 'string',
                          'example' => '!PWZ****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IellgalParameter.OwnerAccount',
            'errorMessage' => 'The specified parameter OwnerAccount is not valid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"1D0971B2-A35A-42C1-A44C-E91360C36C0B\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"BgpGroups\\": {\\n    \\"BgpGroup\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"BgpGroupId\\": \\"bgpg-bp1k25cyp26cllath****\\",\\n        \\"RouterId\\": \\"vbr-bp1ctxy813985gkuk****\\",\\n        \\"PeerAsn\\": \\"1****\\",\\n        \\"LocalAsn\\": \\"45104\\",\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"Hold\\": \\"30\\",\\n        \\"IpVersion\\": \\"IPv4\\",\\n        \\"Description\\": \\"BGP组描述。\\",\\n        \\"Keepalive\\": \\"10\\",\\n        \\"IsFake\\": \\"true\\",\\n        \\"RouteLimit\\": \\"99\\",\\n        \\"Name\\": \\"name\\",\\n        \\"AuthKey\\": \\"!PWZ****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeBgpGroupsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>1D0971B2-A35A-42C1-A44C-E91360C36C0B</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <BgpGroups>\\n        <Status>Available</Status>\\n        <BgpGroupId>bgpg-bp1k25cyp26cllath****</BgpGroupId>\\n        <RouterId>vbr-bp1ctxy813985gkuk****</RouterId>\\n        <PeerAsn>1****</PeerAsn>\\n        <LocalAsn>45104</LocalAsn>\\n        <RegionId>cn-shanghai</RegionId>\\n        <Hold>30</Hold>\\n        <IpVersion>ipv4</IpVersion>\\n        <Description>BGP组描述。</Description>\\n        <Keepalive>10</Keepalive>\\n        <IsFake>true</IsFake>\\n        <RouteLimit>99</RouteLimit>\\n        <Name>name</Name>\\n        <AuthKey>!PWZ****</AuthKey>\\n    </BgpGroups>\\n</DescribeBgpGroupsResponse>","errorExample":""}]',
      'title' => '查询指定地域下的BGP组',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeBgpNetworks' => 
    array (
      'summary' => '调用DescribeBgpNetworks查询已宣告的BGP网络。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1lhl0taikrteen8****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP组所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6F513A15-669F-419D-B511-08A85292059B',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '已宣告的BGP网络总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'BgpNetworks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BgpNetwork' => 
                  array (
                    'description' => 'BGP网络。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'BGP网络。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '已宣告的BGP网络状态。',
                          'type' => 'string',
                          'example' => 'Enabled',
                        ),
                        'VpcId' => 
                        array (
                          'description' => 'VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1qpo0kug3a2*****',
                        ),
                        'DstCidrBlock' => 
                        array (
                          'description' => '已宣告的BGP网络的网段。',
                          'type' => 'string',
                          'example' => '10.1.XX.XX/24',
                        ),
                        'RouterId' => 
                        array (
                          'description' => '边界路由器ID。',
                          'type' => 'string',
                          'example' => 'vrt-bp1lhl0taikrteen8****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"6F513A15-669F-419D-B511-08A85292059B\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"BgpNetworks\\": {\\n    \\"BgpNetwork\\": [\\n      {\\n        \\"Status\\": \\"Enabled\\",\\n        \\"VpcId\\": \\"vpc-bp1qpo0kug3a2*****\\",\\n        \\"DstCidrBlock\\": \\"10.1.XX.XX/24\\",\\n        \\"RouterId\\": \\"vrt-bp1lhl0taikrteen8****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeBgpNetworksResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>6F513A15-669F-419D-B511-08A85292059B</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <BgpNetworks>\\n        <Status>Enabled</Status>\\n        <VpcId>vpc-bp1qpo0kug3a2*****</VpcId>\\n        <DstCidrBlock>10.1.XX.XX/24</DstCidrBlock>\\n        <RouterId>vrt-bp1lhl0taikrteen8****</RouterId>\\n    </BgpNetworks>\\n</DescribeBgpNetworksResponse>","errorExample":""}]',
      'title' => '查询已宣告的BGP网络',
    ),
    'DescribeBgpPeers' => 
    array (
      'summary' => '调用DescribeBgpPeers接口查询指定地域下的BGP邻居。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的BGP邻居关联的VBR ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vbr-2zecmmvg5gvu8i4te****',
          ),
        ),
        1 => 
        array (
          'name' => 'BgpPeerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的BGP邻居的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'bgp-2ze3un0ft1jd1xd****',
          ),
        ),
        2 => 
        array (
          'name' => 'BgpGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的BGP邻居所在BGP组的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'bgpg-2zev8h2wo414sfh****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的BGP邻居所在BGP组的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        4 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是默认BGP组。取值：


- **true**：是默认BGP组。

- **false**：不是默认BGP组。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'BGP邻居详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'BgpPeers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BgpPeer' => 
                  array (
                    'description' => '查询的BGP邻居的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '查询的BGP邻居的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'BGP邻居的状态。取值：

- **Pending**：待定。

- **Available**：可用。

- **Modifying**：修改中。

- **Deleting**：删除中。

- **Deleted**：已删除。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'PeerIpAddress' => 
                        array (
                          'description' => 'BGP邻居的IP地址。',
                          'type' => 'string',
                          'example' => '116.62.XX.XX',
                        ),
                        'RouterId' => 
                        array (
                          'description' => '路由器的ID。',
                          'type' => 'string',
                          'example' => 'vbr-2zecmmvg5gvu8i4te****',
                        ),
                        'BgpGroupId' => 
                        array (
                          'description' => 'BGP组的ID。',
                          'type' => 'string',
                          'example' => 'bgpg-2zev8h2wo414sfh****',
                        ),
                        'BgpStatus' => 
                        array (
                          'description' => 'BGP的连接状态。取值：

- **Idle**：未连接。
- **Connect**：使用中。
- **Active**：可用。
- **Established**：已建立。
- **Down**：不可用。',
                          'type' => 'string',
                          'example' => 'Connect',
                        ),
                        'BfdMultiHop' => 
                        array (
                          'description' => 'BFD跳数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'PeerAsn' => 
                        array (
                          'description' => 'BGP邻居的AS号。',
                          'type' => 'string',
                          'example' => '65515',
                        ),
                        'LocalAsn' => 
                        array (
                          'description' => '阿里云侧设备AS号。',
                          'type' => 'string',
                          'example' => '45104',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'BGP组所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'BgpPeerId' => 
                        array (
                          'description' => 'BGP邻居的ID。
',
                          'type' => 'string',
                          'example' => 'bgp-2ze3un0ft1jd1xd****',
                        ),
                        'EnableBfd' => 
                        array (
                          'description' => '是否开启BFD协议。取值：

- **true**：开启BFD协议。
- **false**：未开启BFD协议。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Hold' => 
                        array (
                          'description' => '保持时间。',
                          'type' => 'string',
                          'example' => '30',
                        ),
                        'IpVersion' => 
                        array (
                          'description' => 'IP版本。',
                          'type' => 'string',
                          'example' => 'ipv4',
                        ),
                        'Keepalive' => 
                        array (
                          'description' => '保活时间。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'Description' => 
                        array (
                          'description' => 'BGP组的描述信息。 ',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'RouteLimit' => 
                        array (
                          'description' => '路由限制。',
                          'type' => 'string',
                          'example' => '110',
                        ),
                        'IsFake' => 
                        array (
                          'description' => '是否启用Fake AS号。取值：

- **true**：启用Fake AS号。
- **false**：未启用Fake AS号。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'AuthKey' => 
                        array (
                          'description' => 'BGP组的认证密钥。',
                          'type' => 'string',
                          'example' => '!PWZ****',
                        ),
                        'Name' => 
                        array (
                          'description' => 'BGP邻居的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AdvertisedRouteCount' => 
                        array (
                          'description' => '宣告的路由数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ReceivedRouteCount' => 
                        array (
                          'description' => '接收的路由数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => 'BGP邻居的修改时间。',
                          'type' => 'string',
                          'format' => 'iso8601',
                          'example' => '2022-05-20T07:29:08Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceUnavailable',
            'errorMessage' => 'The request has failed due to a temporary failure of the server.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 10,\\n  \\"BgpPeers\\": {\\n    \\"BgpPeer\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"PeerIpAddress\\": \\"116.62.XX.XX\\",\\n        \\"RouterId\\": \\"vbr-2zecmmvg5gvu8i4te****\\",\\n        \\"BgpGroupId\\": \\"bgpg-2zev8h2wo414sfh****\\",\\n        \\"BgpStatus\\": \\"Connect\\",\\n        \\"BfdMultiHop\\": 3,\\n        \\"PeerAsn\\": \\"65515\\",\\n        \\"LocalAsn\\": \\"45104\\",\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"BgpPeerId\\": \\"bgp-2ze3un0ft1jd1xd****\\",\\n        \\"EnableBfd\\": true,\\n        \\"Hold\\": \\"30\\",\\n        \\"IpVersion\\": \\"ipv4\\",\\n        \\"Keepalive\\": \\"10\\",\\n        \\"Description\\": \\"test\\",\\n        \\"RouteLimit\\": \\"110\\",\\n        \\"IsFake\\": true,\\n        \\"AuthKey\\": \\"!PWZ****\\",\\n        \\"Name\\": \\"test\\",\\n        \\"AdvertisedRouteCount\\": 0,\\n        \\"ReceivedRouteCount\\": 0,\\n        \\"GmtModified\\": \\"2022-05-20T07:29:08Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeBgpPeersResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>10</TotalCount>\\n    <BgpPeers>\\n        <Status>Available</Status>\\n        <PeerIpAddress>116.62.XX.XX</PeerIpAddress>\\n        <RouterId>vbr-2zecmmvg5gvu8i4te****</RouterId>\\n        <BgpGroupId>bgpg-2zev8h2wo414sfh****</BgpGroupId>\\n        <BgpStatus>Connect</BgpStatus>\\n        <BfdMultiHop>3</BfdMultiHop>\\n        <PeerAsn>65515</PeerAsn>\\n        <LocalAsn>45104</LocalAsn>\\n        <RegionId>cn-shanghai</RegionId>\\n        <BgpPeerId>bgp-2ze3un0ft1jd1xd****</BgpPeerId>\\n        <EnableBfd>true</EnableBfd>\\n        <Hold>30</Hold>\\n        <IpVersion>ipv4</IpVersion>\\n        <Keepalive>10</Keepalive>\\n        <Description>test</Description>\\n        <RouteLimit>110</RouteLimit>\\n        <IsFake>true</IsFake>\\n        <AuthKey>!PWZ****</AuthKey>\\n        <Name>test</Name>\\n        <AdvertisedRouteCount>0</AdvertisedRouteCount>\\n        <ReceivedRouteCount>0</ReceivedRouteCount>\\n        <GmtModified>2022-05-20T07:29:08Z</GmtModified>\\n    </BgpPeers>\\n</DescribeBgpPeersResponse>","errorExample":""}]',
      'title' => '查询指定地域下的BGP邻居',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateNatGateway' => 
    array (
      'summary' => '调用CreateNatGateway接口创建增强型公网NAT网关或VPC NAT网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要创建NAT网关的VPC的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1di7uewzmtvfuq8****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。

如果没有指定该参数，系统会为NAT网关创建默认的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'fortest',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的描述。

描述可以为空；或填写2~256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testnat',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        5 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月公网NAT网关已停止新购，该参数不再使用。
',
            'type' => 'string',
            'required' => false,
            'example' => '无效参数',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的付费模式，取值：

**PostPaid**（默认值）：按量付费。
          
更多信息，请参见[公网NAT网关计费](~~48126~~)和[VPC NAT网关计费](~~270913~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'PostPaid',
          ),
        ),
        7 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月公网NAT网关已停止新购，该参数不再使用。',
            'type' => 'string',
            'required' => false,
            'example' => '无效参数',
          ),
        ),
        8 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月公网NAT网关已停止新购，该参数不再使用。',
            'type' => 'string',
            'required' => false,
            'example' => '无效参数',
          ),
        ),
        9 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月公网NAT网关已停止新购，该参数不再使用。',
            'type' => 'boolean',
            'required' => false,
            'example' => '无效参数',
          ),
        ),
        10 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的交换机的ID。

创建NAT网关时，您必须指定NAT网关所属的交换机，系统会为NAT网关分配一个交换机内的空闲私网IP地址。

- 如果您要在存量交换机中创建NAT网关，请确保交换机所属的可用区支持创建NAT网关，且交换机有可用的IP。

- 如果您还未创建交换机，请先在支持创建NAT网关的可用区创建交换机，然后再指定NAT网关所属的交换机。

> 您可以通过[ListEnhanhcedNatGatewayAvailableZones](~~182292~~)接口查询NAT网关的资源可用区，通过[DescribeVSwitches](~~35748~~)接口查询交换机中的可用IP数。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'vsw-bp1e3se98n9fq8hle****',
          ),
        ),
        11 => 
        array (
          'name' => 'NatType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的类型，取值：**Enhanced**，增强型NAT网关。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Enhanced',
          ),
        ),
        12 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的计费类型，取值：**PayByLcu**，表示按使用量计费。



',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByLcu',
          ),
        ),
        13 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的NAT网关类型，取值：

- **internet**：公网NAT网关。

- **intranet**：VPC NAT网关。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'internet',
          ),
        ),
        14 => 
        array (
          'name' => 'SecurityProtectionEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启防火墙功能，取值：

- **false**（默认值）：不开启。
><notice> 该参数已弃用。></notice>',
            'type' => 'boolean',
            'deprecated' => true,
            'required' => false,
            'example' => 'false',
          ),
        ),
        15 => 
        array (
          'name' => 'IcmpReplyEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启ICMP代回。取值：

- **true**（默认值）：开启。
- **false**：不开启。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        16 => 
        array (
          'name' => 'EipBindMode',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => 'NAT：NAT模式，支持SNAT/访问DANT，最多支持绑定50个EIP，支持ingress routing;
MULTI_BINDED：多EIP网卡可见模式。',
            'description' => 'NAT网关的EIP绑定模式，取值：
- **MULTI_BINDED**（默认值）：多EIP网卡可见模式。
- **NAT**：EIP普通模式，兼容IPv4网关。
  > NAT网关的EIP绑定模式为EIP普通模式时，EIP将占用NAT网关所在交换机的一个私网IP，请确保NAT网关所在交换机内私网IP地址充足，如果NAT网关所在的交换机没有可用的空闲私网地址时，将无法绑定新的EIP。NAT网关的EIP绑定模式为EIP普通模式时，NAT网关支持绑定的EIP数量上限为50个。',
            'type' => 'string',
            'required' => false,
            'example' => 'MULTI_BINDED',
            'default' => 'MULTI_BINDED',
            'enum' => 
            array (
            ),
          ),
        ),
        17 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。API调用时使用Tag.N.Key的形式，N的取值范围：1~20。一旦传入该值，则不允许为空字符串。最多支持128个字符，不能以aliyun或acs:开头，不能包含http://或https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TestKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。API调用时使用Tag.N.Value的形式，N的取值范围：1~20。一旦传入该值，则不允许为空字符串。最多支持128个字符，不能以aliyun或acs:开头，不能包含http://或https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TestValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'NatGatewayId' => 
              array (
                'description' => '创建的NAT网关的实例ID。
',
                'type' => 'string',
                'example' => 'ngw-112za33e4****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
              'ForwardTableIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ForwardTableId' => 
                  array (
                    'description' => 'DNAT列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'DNAT列表。',
                      'type' => 'string',
                      'example' => 'ftb-11tc6xgmv****',
                    ),
                  ),
                ),
              ),
              'SnatTableIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SnatTableId' => 
                  array (
                    'description' => 'SNAT列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'SNAT列表。',
                      'type' => 'string',
                      'example' => 'stb-SnatTableIds****',
                    ),
                  ),
                ),
              ),
              'BandwidthPackageIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                ),
              ),
              'FullNatTableIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FullNatTableId' => 
                  array (
                    'description' => 'FULLNAT列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'FULLNAT列表。',
                      'type' => 'string',
                      'example' => 'fulltb-gw88z7hhlv43rmb26****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.NatPayBySpec',
            'errorMessage' => 'Pay-by-specification NAT is no longer supported. Newly purchased pay-as-you-go NAT gateways only support the pay-by-CU metering method.',
          ),
          1 => 
          array (
            'errorCode' => 'UnsupportedFeature.PrivateLink',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.FullNatEntry',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          3 => 
          array (
            'errorCode' => 'UnsupportedFeature.InternetChargeType',
            'errorMessage' => 'The feature of InternetChargeType is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVPCStatus',
            'errorMessage' => 'vpc incorrect status.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidNatGatewayName.MalFormed',
            'errorMessage' => 'NatGateway name is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidNatGatewayDescription.MalFormed',
            'errorMessage' => 'NatGateway description is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParameter.BandwidthPackage',
            'errorMessage' => 'only support one BandwidthPackage be created with NatGateway.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'The user cannot allow to create natgw, please call PD to authorize',
          ),
          9 => 
          array (
            'errorCode' => 'RouterEntryConflict.Duplicated',
            'errorMessage' => 'A route entry already exists, which CIDR is \'0.0.0.0/0\'',
          ),
          10 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceeded.BandwidthPackageIps',
            'errorMessage' => 'The specified ipCount exceeded quota.',
          ),
          12 => 
          array (
            'errorCode' => 'AllocateIpFailed',
            'errorMessage' => 'Alloc bandwidthPackage ips failed, maybe no available ip.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.Description.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          15 => 
          array (
            'errorCode' => 'ZONE_NO_AVAILABLE_IP',
            'errorMessage' => 'The Zone have no available ip.',
          ),
          16 => 
          array (
            'errorCode' => 'ParameterIllegal',
            'errorMessage' => 'ipCount,bandwidth parameter invalid',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParameter.BandwidthPackage.n.ISP.ValueNotSupport',
            'errorMessage' => 'The specified ISP of BandwidthPackage is not valid.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidNatGatewayId.NotFound',
            'errorMessage' => 'The NatGatewayId not exist.',
          ),
          19 => 
          array (
            'errorCode' => 'VswitchStatusError',
            'errorMessage' => 'The VSwitch is creating .',
          ),
          20 => 
          array (
            'errorCode' => 'VpcStatusError',
            'errorMessage' => 'The Vpc is creating .',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidParameter.Spec.ValueNotSupported',
            'errorMessage' => 'The specified Spec is not valid.',
          ),
          22 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, TaskConflict.',
          ),
          23 => 
          array (
            'errorCode' => 'COMMODITY.INVALID_COMPONENT',
            'errorMessage' => 'The instance component is invalid.',
          ),
          24 => 
          array (
            'errorCode' => 'CreateNatGateway.RouteConflict.DynamicRoute',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationUnsupported.MultiNatGateway',
            'errorMessage' => 'More than one natGateway per vpc is unsupported.',
          ),
          26 => 
          array (
            'errorCode' => 'Forbidden.CheckEntryRuleQuota',
            'errorMessage' => 'Route entry quota rule check error.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationFailed.UnpaidBillsExist',
            'errorMessage' => 'The account has unpaid bills. Please pay your overdue bill first.',
          ),
          28 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteEntry',
            'errorMessage' => 'Specified routeEntry status error.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationFailed.RiskControl',
            'errorMessage' => 'Risk control check failed.',
          ),
          30 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTableStatus',
            'errorMessage' => '%s',
          ),
          31 => 
          array (
            'errorCode' => 'OperationFailed.TokenVerfiy',
            'errorMessage' => 'Token verify failed.',
          ),
          32 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          33 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => 'The specified Name is invalid, shorter than 2 characters.',
          ),
          34 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedQuotaExceed',
            'errorMessage' => 'Enhanced nat gateway per vpc quota is exceeded',
          ),
          35 => 
          array (
            'errorCode' => 'OrderError.NoAvailablePaymentMethod',
            'errorMessage' => '%s',
          ),
          36 => 
          array (
            'errorCode' => 'OrderError.BasicInfoUncompleted',
            'errorMessage' => '%s',
          ),
          37 => 
          array (
            'errorCode' => 'OperationUnsupported.EnhancedCURegion',
            'errorMessage' => '%s',
          ),
          38 => 
          array (
            'errorCode' => 'NoPermission.CreateServiceLinkedRole',
            'errorMessage' => 'You are not authorized to create service linked role',
          ),
          39 => 
          array (
            'errorCode' => 'OperationUnsupported.EnhancedRegion',
            'errorMessage' => '%s',
          ),
          40 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedInventoryNotEnough',
            'errorMessage' => 'Operation failed because inventory is not enough.',
          ),
          41 => 
          array (
            'errorCode' => 'OperationFailed.VswNotBelongToVpc',
            'errorMessage' => 'Operation failed because the specified VSwitch is not bound to the same VPC with NAT gateway.',
          ),
          42 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedUserIsUnAuthorized',
            'errorMessage' => 'Operation failed because the user is not authorized to create an enhanced NAT gateway.',
          ),
          43 => 
          array (
            'errorCode' => 'OperationUnsupported.PrePaidPyByLcu',
            'errorMessage' => 'The operation failed because the subscription NAT gateway does not support the pay-by-LCU billing method.',
          ),
          44 => 
          array (
            'errorCode' => 'OperationFailed.NormalInventoryNotEnough',
            'errorMessage' => 'Standard NAT gateways are no longer offered. You can create enhanced NAT gateways and set the correct natType.',
          ),
          45 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchNoAvailableIp',
            'errorMessage' => 'Operation failed because the specified vswitch does not have availabe ip.',
          ),
          46 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedCheckInventory',
            'errorMessage' => 'Operation failed because check inventory result is unexpected.',
          ),
          47 => 
          array (
            'errorCode' => 'UnsupportedFeature.IcmpReplyEnabled',
            'errorMessage' => 'The feature of IcmpReplyEnabled is not supported.',
          ),
          48 => 
          array (
            'errorCode' => 'UnsupportedFeature.SecurityProtectionEnabled',
            'errorMessage' => 'The feature of SecurityProtectionEnabled is not supported.',
          ),
          49 => 
          array (
            'errorCode' => 'OperationFailed.RegionConvert',
            'errorMessage' => 'Operation failed because do not find region info.',
          ),
          50 => 
          array (
            'errorCode' => 'UnsupportedFeature.VpcNat',
            'errorMessage' => 'The feature of VpcNat is not supported.',
          ),
          51 => 
          array (
            'errorCode' => 'InvalidVSWITCHID.NotFound',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          52 => 
          array (
            'errorCode' => 'Forbidden.OperateShareResource',
            'errorMessage' => 'Operate share resource  is forbidden.',
          ),
          53 => 
          array (
            'errorCode' => 'IncorrectStatus.VSWITCH',
            'errorMessage' => 'The status of VSWITCH is incorrect.',
          ),
          54 => 
          array (
            'errorCode' => 'OperationFailed.VpcNatGatewayInventoryNotEnough',
            'errorMessage' => 'The operation is failed because of inventory is not enough.',
          ),
          55 => 
          array (
            'errorCode' => 'OperationFailed.VpcNatGatewayCheckInventory',
            'errorMessage' => 'The operation is failed because of check inventory result is unexpected',
          ),
          56 => 
          array (
            'errorCode' => 'ExclusiveParam.%sAnd%s',
            'errorMessage' => 'The param of %s and %s are mutually exclusive.',
          ),
          57 => 
          array (
            'errorCode' => 'SecurityGroupType.NotSupported',
            'errorMessage' => 'The specified security group type is not supported.',
          ),
          58 => 
          array (
            'errorCode' => 'SecurityGroup.NotExist',
            'errorMessage' => 'The specified security group is not exist.',
          ),
          59 => 
          array (
            'errorCode' => 'OperationFailed.ContainForbiddenLabel',
            'errorMessage' => 'There is a label that prohibits ordering, please contact your distributor for processing.',
          ),
          60 => 
          array (
            'errorCode' => 'OperationDenied.PrePaidInstance',
            'errorMessage' => 'The operation is not allowed because prepaid instance is no longer supported.',
          ),
          61 => 
          array (
            'errorCode' => 'UnsupportedFeature.Geneve',
            'errorMessage' => 'The feature of Geneve is not supported.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidZoneId.NotFound',
            'errorMessage' => 'Specified value of ZoneId is not exists.',
          ),
          3 => 
          array (
            'errorCode' => 'VPC_ONLY_CAN_CREATE_ONE_NAT_GATEWAY',
            'errorMessage' => 'NatGateway in one vpc support only one.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.CrateEntryTimeOut',
            'errorMessage' => 'Operation failed because create custom routeEntry timeout.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.CreateSpecialSpecNatGateway',
            'errorMessage' => 'You are not authorized to create special spec nat gateway.',
          ),
          6 => 
          array (
            'errorCode' => 'UnsupportedZoneForFwNat',
            'errorMessage' => 'The zone is unsupported for FW NAT.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderError.NatGateway',
            'errorMessage' => 'The Account failed to create order.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.NoAvailableResource',
            'errorMessage' => 'The Zone have no available resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NatGatewayId\\": \\"ngw-112za33e4****\\",\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\",\\n  \\"ForwardTableIds\\": {\\n    \\"ForwardTableId\\": [\\n      \\"ftb-11tc6xgmv****\\"\\n    ]\\n  },\\n  \\"SnatTableIds\\": {\\n    \\"SnatTableId\\": [\\n      \\"stb-SnatTableIds****\\"\\n    ]\\n  },\\n  \\"FullNatTableIds\\": {\\n    \\"FullNatTableId\\": [\\n      \\"fulltb-gw88z7hhlv43rmb26****\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateNatGatewayResponse>\\n    <NatGatewayId>ngw-112za33e4****</NatGatewayId>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n    <ForwardTableIds>ftb-11tc6xgmv****</ForwardTableIds>\\n    <SnatTableIds>stb-SnatTableIds****</SnatTableIds>\\n    <FullNatTableIds>fulltb-gw88z7hhlv43rmb26****</FullNatTableIds>\\n</CreateNatGatewayResponse>","errorExample":""}]',
      'title' => '创建NAT网关',
      'description' => '在调用本接口时，请了解以下内容：

- 首次创建NAT网关时，系统会自动创建一个名称为AliyunServiceRoleForNatgw的服务关联角色，并且为该角色添加名称为AliyunServiceRolePolicyForNatgw的权限策略，授予NAT网关拥有访问其他云资源的权限。更多信息，请参见[服务关联角色](~~174251~~)。

- 增强型公网NAT网关创建后，系统会在VPC的路由表中自动添加一条目标网段为0.0.0.0/0，下一跳为NAT网关的路由条目，用于将流量路由到NAT网关。

- **CreateNatGateway**接口属于异步接口，即系统会先返回一个NAT网关（公网NAT网关或VPC NAT网关）实例ID，但该NAT网关实例并未创建完成，系统后台的创建任务仍在进行。您可以调用[DescribeNatGateways](~~36054~~)查询NAT网关的状态。

    - 当NAT网关处于**Creating**状态时，表示NAT网关正在创建中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当NAT网关处于**Available**状态时，表示NAT网关创建完成。
 
 NAT网关创建一般需要1~3分钟，请您耐心等待。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteNatGateway' => 
    array (
      'summary' => '调用DeleteNatGateway接口删除指定的公网NAT网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT网关的实例ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
        2 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除NAT网关，取值：

- **true**：强制删除。当取值为**true**时，说明如下：

    - 如果NAT网关有SNAT规则，系统会自动帮您删除SNAT规则。

    - 如果NAT网关有DNAT规则，系统会自动帮您删除DNAT规则。

    - 如果NAT网关有绑定EIP，系统会自动帮您解绑。

    - 如果NAT网关有未删除的NAT带宽包，系统会自动帮您删除NAT带宽包。

- **false**（默认值）：不强制删除。当取值为**false**时，说明如下：

    - 如果NAT网关有未删除的NAT带宽包，请先删除NAT带宽包。

    - 如果NAT网关有SNAT规则，请先删除SNAT规则。

    - 如果NAT网关有DNAT规则，请先删除DNAT规则。

    - 如果NAT网关有绑定EIP，请先解绑EIP。


',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.VpcEndpointService',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.FullNatEntry',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.RouterEntry',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.BandwidthPackages',
            'errorMessage' => 'There are BandwidthPackages on specified NatGateway not deleted.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.EIPS',
            'errorMessage' => 'There are Eips on specified NatGateway, please unbind it first.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.PrePaidNatGateway',
            'errorMessage' => 'The specified NatGateway is PrePaid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.DeletionProtection',
            'errorMessage' => 'The instance cannnot delete because of deletion protecion.',
          ),
          7 => 
          array (
            'errorCode' => 'DependencyViolation.SnatEntry',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.SnatEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          9 => 
          array (
            'errorCode' => 'DependencyViolation.ForwardEntry',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.ForwardEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          11 => 
          array (
            'errorCode' => 'DependencyViolation.NatIp',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          13 => 
          array (
            'errorCode' => 'DependencyViolation.NatIpCidr',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          14 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => 'The NatGateway instance is being deleted and needs to wait until the process is complete.',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectStatus.RouterEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          16 => 
          array (
            'errorCode' => 'IncorrectStatus.VSwitch',
            'errorMessage' => 'The specified vSwitch status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'INSTANCE_NOT_EXISTS',
            'errorMessage' => 'Instance not exists.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidNatGatewayId.NotFound',
            'errorMessage' => 'The specified NatGatewayId does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNatGatewayResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteNatGatewayResponse>","errorExample":""}]',
      'title' => '删除指定的NAT网关',
      'description' => '**DeleteNatGateway**接口属于异步接口，即系统会先返回一个请求ID，但该NAT网关实例并未删除完成，系统后台的删除任务仍在进行。您可以调用[DescribeNatGateways](~~36054~~)查询NAT网关的状态：
   
- 当NAT网关处于**Deleting**状态时，表示NAT网关正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当查询不到该NAT网关实例时，表示NAT网关删除完成。
       
> 删除NAT网关操作不可恢复，请您谨慎操作。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyNatGatewayAttribute' => 
    array (
      'summary' => '调用ModifyNatGatewayAttribute接口修改NAT网关的名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT网关的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ngw-2ze0dcn4mq31qx2jc****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT网关名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nat123',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT网关描述信息。

描述长度为1～128个字符，不能以`http://`或`https://`开头。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'Description',
          ),
        ),
        4 => 
        array (
          'name' => 'IcmpReplyEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启ICMP代回。取值：

- **true**（默认值）：开启。
- **false**：不开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'EipBindMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改NAT网关的EIP绑定模式。取值：可以为空，非空时只允许为**NAT**，表示绑定模式为EIP普通模式。


> - 只支持将**MULTI_BINDED**模式修改为**NAT**模式，不支持将**NAT**模式修改为**MULTI_BINDED**模式。关于**MULTI_BINDED**模式的具体信息，请参见[CreateNatGateway](~~120219~~)。
- 在EIP绑定模式切换过程中网络连接会出现秒级别闪断（闪断时间随着EIP数量增加而变长，目前最多支持绑定5个EIP的NAT网关进行配置变更），请您尽量在业务低峰期执行切换操作。
- EIP绑定模式变更为**NAT**后，公网NAT网关将兼容IPv4网关，但绑定一个公网EIP时将占用NAT网关所在交换机的一个私网IP，请确保NAT网关所在交换机内私网IP地址充足，如果NAT网关所在的交换机没有可用的空闲私网地址时，将无法绑定新的EIP。',
            'type' => 'string',
            'required' => false,
            'example' => 'NAT',
            'enum' => 
            array (
              0 => 'NAT',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'EnableSessionLog',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启会话日志，取值：

- **true**：已开启会话日志。

- **false**：已关闭会话日志。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'LogDelivery',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '会话日志配置信息。',
            'type' => 'object',
            'properties' => 
            array (
              'LogDeliveryType' => 
              array (
                'description' => '会话日志写入类型。取值：**sls**，阿里云日志服务SLS。',
                'type' => 'string',
                'required' => false,
                'example' => 'sls',
              ),
              'LogDestination' => 
              array (
                'description' => '会话日志写入地址。取值：acs:log:${regionName}:${projectOwnerAliUid}:project/${projectName}/logstore/${logstoreName}',
                'type' => 'string',
                'required' => false,
                'example' => 'acs:log:cn-hangzhou:0000:project/nat_session_log_project/logstore/session_log_test',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AB5F62CF-2B60-4458-A756-42C9DFE108D1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.PrivateLinkMode',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.NATGW',
            'errorMessage' => 'NATGW status is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'ExclusiveParam.%sAnd%s',
            'errorMessage' => 'The param of %s and %s are mutually exclusive.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => 'The status of natgateway is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.PrivateLinkMode',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          5 => 
          array (
            'errorCode' => 'UnsupportedFeature.IcmpReplyEnabled',
            'errorMessage' => 'The feature of IcmpReplyEnabled is not supported.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParams.NotNull',
            'errorMessage' => 'The parameter must not be null, name or description or icmpReplyEnabled',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.Description.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'UnsupportedFeature.IndirectConvertForVpcNat',
            'errorMessage' => 'The VPC NAT gateway is not support to change EIP bond type.',
          ),
          10 => 
          array (
            'errorCode' => 'UnsupportedFeature.NormalNatModifyEipBindMode',
            'errorMessage' => 'The normal NAT gateway is not support to change EIP bond type.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationDenied.EipBondTypeIsAlreadyNAT',
            'errorMessage' => 'The EIP bond type is already NAT type.',
          ),
          12 => 
          array (
            'errorCode' => 'UnsupportedFeature.IndirectConvertForFwNat',
            'errorMessage' => 'The security protection enabled NAT gateway is not support change EIP bond type.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.EipNumForModifyEipBondType',
            'errorMessage' => 'The quota of %s is exceeded, binded: %s, quota: %s.',
          ),
          14 => 
          array (
            'errorCode' => 'ResourceNotEnough.SwitchAvailableIps',
            'errorMessage' => 'The available private Ip number is not enough in your subnet.',
          ),
          15 => 
          array (
            'errorCode' => 'UnsupportedFeature.VpcNatSecurityProtectionEnabled',
            'errorMessage' => 'The VPC NAT gateway is not supported to enable security protection.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationDenied.NatGatewayStatusInvalid',
            'errorMessage' => 'The NAT gateway status is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationDenied.EipStatusInvalid',
            'errorMessage' => 'The NAT gateway has EIP in invalid status.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationDenied.SnatEntryStatusInvalid',
            'errorMessage' => 'The NAT gateway has SNAT entry in invalid status.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationDenied.DnatEntryStatusInvalid',
            'errorMessage' => 'The NAT gateway has DNAT entry in invalid status.',
          ),
          20 => 
          array (
            'errorCode' => 'UnsupportedFeature.MutilBindedTypeNatEnableFw',
            'errorMessage' => 'The NAT with Mutil-Binded Eip bind type is not support enable firewall.',
          ),
          21 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The instance is locked due to outstanding payments.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.PrivateLinkMode',
            'errorMessage' => 'The NAT gateway is not support to change PrivateLinkMode.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.SessionLogDeliveryDestination',
            'errorMessage' => 'The specified Delivery Destination is illegal.',
          ),
          24 => 
          array (
            'errorCode' => 'OperationFailed.LogDeliveryIsUnAuthorized',
            'errorMessage' => 'Operation failed because the user is not authorized to deliver NAT session log.',
          ),
          25 => 
          array (
            'errorCode' => 'IllegalParam.SessionLogDeliveryType',
            'errorMessage' => 'The specified Delivery Type is illegal.',
          ),
          26 => 
          array (
            'errorCode' => 'UnsupportedFeature.EnableSessionLog',
            'errorMessage' => 'The feature of EnableSessionLog is not supported.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.ModifyEipBondType',
            'errorMessage' => 'Authentication is failed for modify EIP bond type.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidNatGatewayId.NotFound',
            'errorMessage' => 'The specified NatGatewayId does not exist in our records.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ConfigSessionLog',
            'errorMessage' => 'Failed to configure session log due to a temporary failure of the server.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AB5F62CF-2B60-4458-A756-42C9DFE108D1\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyNatGatewayAttributeResponse>\\n    <RequestId>AB5F62CF-2B60-4458-A756-42C9DFE108D1</RequestId>\\n</ModifyNatGatewayAttributeResponse>","errorExample":""}]',
      'title' => '修改NAT网关的名称和描述',
      'description' => '本接口查询的NAT网关包括公网NAT网关和VPC NAT网关，文中出现的“NAT网关”不做具体的区分。',
    ),
    'ModifyNatGatewaySpec' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网NAT网关所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改规格的公网NAT网关的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
        2 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网NAT网关的规格，取值：

- **Small**：小型。

- **Middle**：中型。

- **Large**：大型。

',
            'type' => 'string',
            'required' => true,
            'example' => 'Middle',
          ),
        ),
        3 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动付费。

- **true**：开启自动付费，自动支付订单。

- **false**（默认值）：不开启自动付费，生成订单后需要到订单中心完成支付。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DBD4E4A2-786E-4BD2-8EB6-107FFC2B5B7D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NATGW_MODIFY_SPEC_SAME',
            'errorMessage' => 'The specified Spec is same with now.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.Spec.ValueNotSupported',
            'errorMessage' => 'The specified Spec is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.SyncOrderToSub',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.QueryPrice',
            'errorMessage' => 'Query price failed when create order.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidNatGatewayId.NotFound',
            'errorMessage' => 'The specified NatGatewayId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.PayByLcuNatModifySpec',
            'errorMessage' => 'The spec of payByLcu nat is unsupported to modify.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.ModifySpecToSpecialSpec',
            'errorMessage' => 'You are not authorized to modify nat spec to special spec.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.ModifySpecToSpecialSpecForNormalNat',
            'errorMessage' => 'Normal NAT is not allowed to change to special spec, only enhanced nat allowed.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.NoAvailableResource',
            'errorMessage' => 'The Zone have no available resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DBD4E4A2-786E-4BD2-8EB6-107FFC2B5B7D\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyNatGatewaySpecResponse>\\n    <RequestId>DBD4E4A2-786E-4BD2-8EB6-107FFC2B5B7D</RequestId>\\n</ModifyNatGatewaySpecResponse>","errorExample":""}]',
      'title' => '接口修改NAT网关的规格',
      'summary' => '使用ModifyNatGatewaySpec接口修改预付费公网NAT网关的规格。',
      'description' => '- **ModifyNatGatewaySpec**接口不支持预付费公网NAT网关规格降配，请在控制台执行降配操作。
- **ModifyNatGatewaySpec**接口在执行预付费公网NAT网关规格升配时，会生成升配订单，请在订单中心进行支付，支付完成后，公网NAT网关升配即可成功。

-  **ModifyNatGatewaySpec**接口属于异步接口，即系统会先返回一个请求ID，但该公网NAT网关实例的规格并未变配完成，系统后台的变配任务仍在进行。您可以调用[DescribeNatGateways](~~2522327~~)查询公网NAT网关的状态：

    - 当公网NAT网关处于**Modifying**状态时，表示公网NAT网关正在变配中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当公网NAT网关处于**Available**状态时，表示公网NAT网关变配完成。

- **ModifyNatGatewaySpec**接口不支持并发修改按规格计费NAT网关实例的规格。

公网NAT网关提供不同的规格。公网NAT网关的规格会影响SNAT功能的最大连接数和每秒新建连接数，但不会影响数据吞吐量。公网NAT网关规格与SNAT性能的关系如下表所示。

| 规格   | 最大连接数 | 每秒新建连接数
| ------------- |------------   | ------------   | 
| 小型      | 1万       |1千 
| 中型      | 5万     |   5千 
| 大型 | 20万      |    1万',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeNatGateways' => 
    array (
      'summary' => '调用DescribeNatGateways以列表形式查询指定地域指定条件NAT网关的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关所属VPC的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp15zckdt37pq72z****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。

如果没有指定该参数，系统会为NAT网关创建默认的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '<props="china">要查询的NAT网关实例的付费模式，取值：</props>

<props="china">
- **PostPaid**：按量付费。</props>
- **PrePaid**：存量包年包月付费模式。目前包年包月付费模式已停止新购。

</props>

<props="intl">要查询的NAT网关实例的付费模式，取值：**PostPaid**（按量付费）。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'PostPaid',
          ),
        ),
        5 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '<props="china">公网NAT网关的规格，仅当**InstanceChargeType**为**PrePaid**（存量包年包月公网NAT网关）支持按固定规格创建NAT网关，取值：</props>

<props="china">
- **Small**（默认值）：小型。
- **Middle**：中型。
- **Large**：大型。

</props>
<props="intl">NAT网关的规格，该参数不填。</props>',
            'type' => 'string',
            'required' => false,
            'example' => '中国站示例值：Small，国际站示例值：无需填写',
          ),
        ),
        6 => 
        array (
          'name' => 'NatType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的类型，取值：**Enhanced**，增强型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Enhanced',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
            'default' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '1',
            'default' => '10',
          ),
        ),
        10 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会查询资源状况。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接查询资源状况。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的状态，取值：
- **Creating**：创建NAT网关是异步操作，在创建完成之前是**Creating**状态。

- **Available**：NAT网关创建完成后的状态，是稳定状态。

- **Modifying**：变配NAT网关是异步操作，在变配的过程中是**Modifying**状态。

- **Deleting**：删除NAT网关是异步操作，在删除的过程中是**Deleting**状态。

- **Converting**：普通型NAT网关转换到增强型NAT网关是异步操作，在转换过程中是**Converting**状态。',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        12 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的类型，取值：

- **internet**：公网NAT网关。
- **intranet**：VPC NAT网关。',
            'type' => 'string',
            'required' => false,
            'example' => 'internet',
          ),
        ),
        13 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => 'NAT网关实例的标签键。最多支持输入20个标签键。

标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'KeyTest',
                ),
                'Value' => 
                array (
                  'description' => 'NAT网关实例的标签值。最多支持输入20个标签值。

标签值最多支持128个字符，不能以`aliyun`或`acs:`开头，不能包含`http://`和`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'valueTest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        14 => 
        array (
          'name' => 'ZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '可用区',
            'description' => 'NAT网关所在的可用区ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '每页包含的条目数。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '查询的NAT网关列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'NatGateways' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NatGateway' => 
                  array (
                    'description' => 'NAT网关的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'NAT网关的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'NAT网关的状态，取值：

- **Creating**：创建NAT网关是异步操作，在创建完成之前是**Creating**状态。

- **Available**：NAT网关创建完成后的状态，是稳定状态。

- **Modifying**：变配NAT网关是异步操作，在变配的过程中是**Modifying**状态。

- **Deleting**：删除NAT网关是异步操作，在删除的过程中是**Deleting**状态。

- **Converting**：普通型NAT网关转换到增强型NAT网关是异步操作，在转换过程中是**Converting**状态。',
                          'type' => 'string',
                          'example' => 'Creating',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => 'NAT网关的创建时间。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:20Z',
                        ),
                        'VpcId' => 
                        array (
                          'description' => 'NAT网关所属的VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp15zckdt37pq72z****',
                        ),
                        'NatType' => 
                        array (
                          'description' => 'NAT网关的类型，取值：**Enhanced**，增强型。',
                          'type' => 'string',
                          'example' => 'Enhanced',
                        ),
                        'AutoPay' => 
                        array (
                          'description' => '是否自动支付订单。取值：

- **false**：不自动支付订单。
- **true**：自动支付订单。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Spec' => 
                        array (
                          'description' => '<props="china">公网NAT网关的规格，仅当**InstanceChargeType**为**PrePaid**（存量包年包月公网NAT网关）支持按固定规格创建NAT网关，取值：</props>

<props="china">
- **Small**：小型。
- **Middle**：中型。
- **Large**：大型。

</props>

<props="intl">NAT网关的规格，该参数返回值为空。</props>

当**InternetChargeType**为**PayByLcu**时，返回值为空。',
                          'type' => 'string',
                          'example' => 'Small',
                        ),
                        'DeletionProtection' => 
                        array (
                          'description' => '是否开启了删除保护功能，取值：

- **true**：已开启。

- **false**：未开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => 'NAT网关的类型，取值：

- **internet**：公网NAT网关。

- **intranet**：VPC NAT网关。',
                          'type' => 'string',
                          'example' => 'internet',
                        ),
                        'SecurityProtectionEnabled' => 
                        array (
                          'description' => '是否开启防火墙功能，取值：

- **false**：不开启防火墙功能。

- **true**：开启防火墙功能。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InstanceChargeType' => 
                        array (
                          'description' => '<props="china">要查询的NAT网关实例的付费模式，取值：</props>

<props="china">
- **PostPaid**：按量付费。
- **PrePaid**：包年包月。

</props>

<props="intl">要查询的NAT网关实例的付费模式，取值：**PostPaid**（按量付费）。</props>
',
                          'type' => 'string',
                          'example' => 'PostPaid',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'NAT网关的所在地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'EcsMetricEnabled' => 
                        array (
                          'description' => '是否开启了网关流量监控功能，取值：

- **true**：已开启。

- **false**：未开启。
',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'IcmpReplyEnabled' => 
                        array (
                          'description' => '是否开启ICMP代回。取值：

- **true**（默认值）：开启。
- **false**：不开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Description' => 
                        array (
                          'description' => 'NAT网关的描述信息。',
                          'type' => 'string',
                          'example' => 'NAT',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => 'NAT网关的过期时间。',
                          'type' => 'string',
                          'example' => '2021-08-26T16:00Z',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-bp67acfmxazb4ph****',
                        ),
                        'NatGatewayId' => 
                        array (
                          'description' => 'NAT网关的ID。',
                          'type' => 'string',
                          'example' => 'ngw-bp1047e2d4z7kf2ki****',
                        ),
                        'InternetChargeType' => 
                        array (
                          'description' => 'NAT网关的计费类型，取值：

- **PayBySpec**：按固定规格计费。

- **PayByLcu**：按使用量计费。',
                          'type' => 'string',
                          'example' => 'PayByLcu',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => 'NAT网关的业务状态，取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Name' => 
                        array (
                          'description' => 'NAT网关实例名称。',
                          'type' => 'string',
                          'example' => 'abc',
                        ),
                        'IpLists' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IpList' => 
                            array (
                              'description' => '公网NAT网关绑定的EIP列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'NAT网关的IP信息列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'UsingStatus' => 
                                  array (
                                    'description' => '公网NAT网关实例绑定的EIP的关联关系。取值：

- **UsedByForwardTable**：使用该EIP配置了DNAT规则。
- **UsedBySnatTable**：使用该EIP配置了SNAT规则。
- **UsedByForwardSnatTable**：使用该EIP配置了DNAT和SNAT规则。
- **Idle**：闲置状态，未配置DNAT和SNAT规则。',
                                    'type' => 'string',
                                    'example' => 'UsedByForwardTable',
                                  ),
                                  'IpAddress' => 
                                  array (
                                    'description' => 'NAT网关绑定的EIP的IP地址。',
                                    'type' => 'string',
                                    'example' => '116.62.XX.XX',
                                  ),
                                  'SnatEntryEnabled' => 
                                  array (
                                    'description' => '已经用于DNAT条目的IP，是否还可用于SNAT条目，取值：

- **true**：还可用于SNAT条目。

- **false**：不可用于SNAT条目。',
                                    'type' => 'boolean',
                                    'example' => 'false',
                                  ),
                                  'AllocationId' => 
                                  array (
                                    'description' => 'NAT网关绑定的EIP的实例ID。',
                                    'type' => 'string',
                                    'example' => 'eip-m5egzuvp3dgixen6****',
                                  ),
                                  'PrivateIpAddress' => 
                                  array (
                                    'description' => 'NAT网关的私网IP地址。',
                                    'type' => 'string',
                                    'example' => '192.168.XX.XX',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ForwardTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ForwardTableId' => 
                            array (
                              'description' => 'NAT网关的私网IP地址。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'DNAT表ID。',
                                'type' => 'string',
                                'example' => 'ftb-uf6gj3mhsg94qsqst****',
                              ),
                            ),
                          ),
                        ),
                        'SnatTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SnatTableId' => 
                            array (
                              'description' => 'NAT网关的SNAT表ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'NAT网关的SNAT表ID。',
                                'type' => 'string',
                                'example' => 'stb-uf6dalcdu0krz423p****',
                              ),
                            ),
                          ),
                        ),
                        'FullNatTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FullNatTableId' => 
                            array (
                              'description' => 'FULLNAT表ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'FULLNAT表ID。',
                                'type' => 'string',
                                'example' => 'fulltb-gw88z7hhlv43rmb26****',
                              ),
                            ),
                          ),
                        ),
                        'BandwidthPackageIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                          ),
                        ),
                        'NatGatewayPrivateInfo' => 
                        array (
                          'description' => '增强型公网NAT网关的私网信息。

>**NatType**取值为**Normal**时，该列表中返回的参数均为空值。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VswitchId' => 
                            array (
                              'description' => 'NAT网关所属的交换机ID。',
                              'type' => 'string',
                              'example' => 'vsw-bp1s2laxhdf9ayjbo****',
                            ),
                            'EniInstanceId' => 
                            array (
                              'description' => '弹性网卡实例ID。',
                              'type' => 'string',
                              'example' => 'eni-m5eg4ozy5st8q3q4****',
                            ),
                            'MaxBandwidth' => 
                            array (
                              'description' => '最大带宽值，单位为Mbps。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5120',
                            ),
                            'MaxSessionQuota' => 
                            array (
                              'description' => 'NAT网关的并发连接数。单位：个。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2000000',
                            ),
                            'MaxSessionEstablishRate' => 
                            array (
                              'description' => 'NAT网关的新建连接数。单位：个/秒。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '100000',
                            ),
                            'PrivateIpAddress' => 
                            array (
                              'description' => '私网IP地址。',
                              'type' => 'string',
                              'example' => '192.168.XX.XX',
                            ),
                            'IzNo' => 
                            array (
                              'description' => 'NAT网关所属的可用区。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou-b',
                            ),
                            'EniType' => 
                            array (
                              'description' => '弹性网卡与NAT网关的绑定模式，取值：

- **indirect**：非直通模式。

- 返回值为空：直通模式。',
                              'type' => 'string',
                              'example' => 'indirect',
                            ),
                          ),
                        ),
                        'PrivateLinkEnabled' => 
                        array (
                          'title' => '默认不支持私网链接。设置为1则意味着支持私网链接',
                          'description' => '是否支持私网连接，取值：

- **true**：支持私网连接。
- **false**：不支持私网连接。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'PrivateLinkMode' => 
                        array (
                          'title' => 'Fullnat：使用FullNat模式 Geneve：使用Geneve模式。 预估大部分场景都是非Geneve模式的。',
                          'description' => '私网连接服务转化模式，取值：

- **FullNat**：使用FULLNAT模式。
- **Geneve**：使用Geneve模式。',
                          'type' => 'string',
                          'example' => 'FullNat',
                        ),
                        'EipBindMode' => 
                        array (
                          'title' => 'NAT网关的EIP绑定模式，取值：

MULTI_BINDED：多EIP网卡可见模式。
NAT：EIP普通模式，兼容IPv4网关。
说明 NAT网关的EIP绑定模式为EIP普通模式时，EIP将占用NAT网关所在交换机的一个私网IP，请确保NAT网关所在交换机内私网IP地址充足，如果NAT网关所在的交换机没有可用的空闲私网地址时，将无法绑定新的EIP。NAT网关的EIP绑定模式为EIP普通模式时，NAT网关支持绑定的EIP数量上限为50个。',
                          'description' => 'NAT网关的EIP绑定模式，取值：

- **MULTI_BINDED**：多EIP网卡可见模式。

- **NAT**：EIP普通模式，兼容IPv4网关。

>NAT网关的EIP绑定模式为EIP普通模式时，EIP将占用NAT网关所在交换机的一个私网IP，请确保NAT网关所在交换机内私网IP地址充足，如果NAT网关所在的交换机没有可用的空闲私网地址时，将无法绑定新的EIP。NAT网关的EIP绑定模式为EIP普通模式时，NAT网关支持绑定的EIP数量上限为50个。',
                          'type' => 'string',
                          'example' => 'MULTI_BINDED',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'title' => '',
                              'description' => '标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TagKey' => 
                                  array (
                                    'description' => '实例的标签键。',
                                    'type' => 'string',
                                    'example' => 'KeyTest',
                                  ),
                                  'TagValue' => 
                                  array (
                                    'description' => '实例的标签值。',
                                    'type' => 'string',
                                    'example' => 'valueTest',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EnableSessionLog' => 
                        array (
                          'description' => '是否开启会话日志，取值：

- **true**：已开启会话日志。

- **false**：已关闭会话日志。',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"PageNumber\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"NatGateways\\": {\\n    \\"NatGateway\\": [\\n      {\\n        \\"Status\\": \\"Creating\\",\\n        \\"CreationTime\\": \\"2021-06-08T12:20:20Z\\",\\n        \\"VpcId\\": \\"vpc-bp15zckdt37pq72z****\\",\\n        \\"NatType\\": \\"Enhanced\\",\\n        \\"AutoPay\\": false,\\n        \\"Spec\\": \\"Small\\",\\n        \\"DeletionProtection\\": true,\\n        \\"NetworkType\\": \\"internet\\",\\n        \\"SecurityProtectionEnabled\\": false,\\n        \\"InstanceChargeType\\": \\"PostPaid\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"EcsMetricEnabled\\": true,\\n        \\"IcmpReplyEnabled\\": true,\\n        \\"Description\\": \\"NAT\\",\\n        \\"ExpiredTime\\": \\"2021-08-26T16:00Z\\",\\n        \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n        \\"NatGatewayId\\": \\"ngw-bp1047e2d4z7kf2ki****\\",\\n        \\"InternetChargeType\\": \\"PayByLcu\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"Name\\": \\"abc\\",\\n        \\"IpLists\\": {\\n          \\"IpList\\": [\\n            {\\n              \\"UsingStatus\\": \\"UsedByForwardTable\\",\\n              \\"IpAddress\\": \\"116.62.XX.XX\\",\\n              \\"SnatEntryEnabled\\": false,\\n              \\"AllocationId\\": \\"eip-m5egzuvp3dgixen6****\\",\\n              \\"PrivateIpAddress\\": \\"192.168.XX.XX\\"\\n            }\\n          ]\\n        },\\n        \\"ForwardTableIds\\": {\\n          \\"ForwardTableId\\": [\\n            \\"ftb-uf6gj3mhsg94qsqst****\\"\\n          ]\\n        },\\n        \\"SnatTableIds\\": {\\n          \\"SnatTableId\\": [\\n            \\"stb-uf6dalcdu0krz423p****\\"\\n          ]\\n        },\\n        \\"FullNatTableIds\\": {\\n          \\"FullNatTableId\\": [\\n            \\"fulltb-gw88z7hhlv43rmb26****\\"\\n          ]\\n        },\\n        \\"NatGatewayPrivateInfo\\": {\\n          \\"VswitchId\\": \\"vsw-bp1s2laxhdf9ayjbo****\\",\\n          \\"EniInstanceId\\": \\"eni-m5eg4ozy5st8q3q4****\\",\\n          \\"MaxBandwidth\\": 5120,\\n          \\"MaxSessionQuota\\": 2000000,\\n          \\"MaxSessionEstablishRate\\": 100000,\\n          \\"PrivateIpAddress\\": \\"192.168.XX.XX\\",\\n          \\"IzNo\\": \\"cn-hangzhou-b\\",\\n          \\"EniType\\": \\"indirect\\"\\n        },\\n        \\"PrivateLinkEnabled\\": true,\\n        \\"PrivateLinkMode\\": \\"FullNat\\",\\n        \\"EipBindMode\\": \\"MULTI_BINDED\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"TagKey\\": \\"KeyTest\\",\\n              \\"TagValue\\": \\"valueTest\\"\\n            }\\n          ]\\n        },\\n        \\"EnableSessionLog\\": \\"true\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeNatGatewaysResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <PageNumber>10</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <NatGateways>\\n        <Status>Creating</Status>\\n        <CreationTime>2021-06-08T12:20:20Z</CreationTime>\\n        <VpcId>vpc-bp15zckdt37pq72z****</VpcId>\\n        <NatType>Enhanced</NatType>\\n        <AutoPay>false</AutoPay>\\n        <Spec>Small</Spec>\\n        <DeletionProtection>true</DeletionProtection>\\n        <NetworkType>internet</NetworkType>\\n        <SecurityProtectionEnabled>false</SecurityProtectionEnabled>\\n        <InstanceChargeType>PostPaid</InstanceChargeType>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <EcsMetricEnabled>true</EcsMetricEnabled>\\n        <IcmpReplyEnabled>true</IcmpReplyEnabled>\\n        <Description>NAT</Description>\\n        <ExpiredTime>2021-08-26T16:00Z</ExpiredTime>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <NatGatewayId>ngw-bp1047e2d4z7kf2ki****</NatGatewayId>\\n        <InternetChargeType>PayByLcu</InternetChargeType>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <Name>abc</Name>\\n        <IpLists>\\n            <UsingStatus>UsedByForwardTable</UsingStatus>\\n            <IpAddress>116.62.XX.XX</IpAddress>\\n            <SnatEntryEnabled>false</SnatEntryEnabled>\\n            <AllocationId>eip-m5egzuvp3dgixen6****</AllocationId>\\n            <PrivateIpAddress>192.168.XX.XX</PrivateIpAddress>\\n        </IpLists>\\n        <ForwardTableIds>ftb-uf6gj3mhsg94qsqst****</ForwardTableIds>\\n        <SnatTableIds>stb-uf6dalcdu0krz423p****</SnatTableIds>\\n        <FullNatTableIds>fulltb-gw88z7hhlv43rmb26****</FullNatTableIds>\\n        <NatGatewayPrivateInfo>\\n            <VswitchId>vsw-bp1s2laxhdf9ayjbo****</VswitchId>\\n            <EniInstanceId>eni-m5eg4ozy5st8q3q4****</EniInstanceId>\\n            <MaxBandwidth>5120</MaxBandwidth>\\n            <MaxSessionQuota>2000000</MaxSessionQuota>\\n            <MaxSessionEstablishRate>100000</MaxSessionEstablishRate>\\n            <PrivateIpAddress>192.168.XX.XX</PrivateIpAddress>\\n            <IzNo>cn-hangzhou-b</IzNo>\\n            <EniType>indirect</EniType>\\n        </NatGatewayPrivateInfo>\\n        <PrivateLinkEnabled>true</PrivateLinkEnabled>\\n        <PrivateLinkMode>FullNat</PrivateLinkMode>\\n        <EipBindMode>MULTI_BINDED</EipBindMode>\\n        <Tags>\\n            <TagKey>KeyTest</TagKey>\\n            <TagValue>valueTest</TagValue>\\n        </Tags>\\n    </NatGateways>\\n</DescribeNatGatewaysResponse>","errorExample":""}]',
      'title' => '查询已创建的NAT网关',
      'description' => '本接口支持查询公网NAT网关或VPC NAT网关的详细信息，文中出现的“NAT网关”不做具体的区分。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'VpcDescribeVpcNatGatewayNetworkInterfaceQuota' => 
    array (
      'summary' => '调用VpcDescribeVpcNatGatewayNetworkInterfaceQuota接口查询反向访问VPC NAT当前可以创建的EP个数。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '132193271328****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询NAT网关关联的ENI实例信息',
            'description' => '要查询的VPC NAT网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的VPC NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F',
              ),
              'Quota' => 
              array (
                'title' => '分页大小',
                'description' => '表示能创建的EP的个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.PrivateLinkNotEnabled',
            'errorMessage' => 'The NAT gateway is not enable for private link.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The NatGateway instance not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F\\",\\n  \\"Quota\\": 2\\n}","errorExample":""},{"type":"xml","example":"<VpcDescribeVpcNatGatewayNetworkInterfaceQuotaResponse>\\n    <RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n    <Quota>2</Quota>\\n</VpcDescribeVpcNatGatewayNetworkInterfaceQuotaResponse>","errorExample":""}]',
      'title' => '查询反向访问VPC NAT当前可以创建的EP个数',
      'description' => '在调用该接口前，请确保您已经创建了一个VPC NAT网关实例。具体操作，请参见 [CreateNatGateway](~~120219~~)。',
    ),
    'GetNatGatewayAttribute' => 
    array (
      'summary' => '调用GetNatGatewayAttribute接口查询单个NAT网关实例的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-bp1b0lic8uz4r6vf2****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-qingdao',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => 'NAT网关实例所属VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-bp15zckdt37pq72z****',
              ),
              'CreationTime' => 
              array (
                'description' => 'NAT网关的创建时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                'type' => 'string',
                'example' => '2021-12-08T12:20:20Z',
              ),
              'Status' => 
              array (
                'description' => 'NAT网关的状态。取值：

- **Creating**：创建中。创建NAT网关是异步操作，在创建完成之前是**Creating**状态。
- **Available**：可用。NAT网关创建完成后的状态，是稳定状态。
- **Modifying**：修改中。变配NAT网关是异步操作，在变配的过程中是**Modifying**状态。
- **Deleting**：删除中。删除NAT网关是异步操作，在删除的过程中是**Deleting**状态。
- **Converting**：转换中。普通型NAT网关转换到增强型NAT网关是异步操作，在转换过程中是**Converting**状态。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'NatType' => 
              array (
                'description' => '公网NAT网关的类型，当前取值为**Enhanced**，即增强型公网NAT网关。',
                'type' => 'string',
                'example' => 'Enhanced',
              ),
              'NetworkType' => 
              array (
                'description' => 'NAT网关的类型。取值：

- **internet**：公网NAT网关。
- **intranet**：VPC NAT网关。',
                'type' => 'string',
                'example' => 'internet',
              ),
              'RegionId' => 
              array (
                'description' => 'NAT网关实例所在的地域ID。',
                'type' => 'string',
                'example' => 'cn-qingdao',
              ),
              'EcsMetricEnabled' => 
              array (
                'description' => '是否开启了网关流量监控功能。取值：
- **true**：开启了网关流量监控功能。
- **false**：未开启网关流量监控功能。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'Description' => 
              array (
                'description' => 'NAT网关实例的描述。',
                'type' => 'string',
                'example' => 'NAT',
              ),
              'ExpiredTime' => 
              array (
                'description' => 'NAT网关实例的过期时间。',
                'type' => 'string',
                'example' => '2021-12-26T12:20:20Z',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-bp67acfmxazb4ph****',
              ),
              'NatGatewayId' => 
              array (
                'description' => 'NAT网关实例的ID。',
                'type' => 'string',
                'example' => 'ngw-bp1047e2d4z7kf2ki****',
              ),
              'BusinessStatus' => 
              array (
                'description' => 'NAT网关的业务状态。取值：

- **Normal**：正常。
- **FinancialLocked**：欠费锁定状态。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'Name' => 
              array (
                'description' => 'NAT网关实例名称。',
                'type' => 'string',
                'example' => 'abc',
              ),
              'ForwardTable' => 
              array (
                'description' => 'DNAT列表的信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ForwardTableId' => 
                  array (
                    'description' => 'DNAT表的ID。',
                    'type' => 'string',
                    'example' => 'ftb-uf6gj3mhsg94qsqst****',
                  ),
                  'ForwardEntryCount' => 
                  array (
                    'description' => 'DNAT条目的个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
              'SnatTable' => 
              array (
                'description' => 'SNAT列表信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'SnatEntryCount' => 
                  array (
                    'description' => 'SANT条目的个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'SnatTableId' => 
                  array (
                    'description' => 'SNAT列表的ID。',
                    'type' => 'string',
                    'example' => 'stb-SnatTableIds****',
                  ),
                ),
              ),
              'FullNatTable' => 
              array (
                'description' => 'FULLNAT列表的信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'FullNatEntryCount' => 
                  array (
                    'description' => 'FULLNAT条目的个数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'FullNatTableId' => 
                  array (
                    'description' => 'FULLNAT表的ID。',
                    'type' => 'string',
                    'example' => 'fulltb-gw88z7hhlv43rmb26****',
                  ),
                ),
              ),
              'BillingConfig' => 
              array (
                'description' => '账单配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'InternetChargeType' => 
                  array (
                    'description' => 'NAT网关实例的计费类型。取值：

- **PayBySpec**：按固定规格计费。
- **PayByLcu**：按使用量计费。',
                    'type' => 'string',
                    'example' => 'PayBySpec',
                  ),
                  'AutoPay' => 
                  array (
                    'description' => '是否自动付费，当**InstanceChargeType**参数的值为**PrePaid**时，返回以下值：

- **false**：不开启自动付费，生成订单后需要到订单中心完成支付。

- **true**：开启自动付费，自动支付订单。

当**InstanceChargeType**参数的值为**PostPaid**时，返回值为空。',
                    'type' => 'string',
                    'example' => 'false',
                  ),
                  'Spec' => 
                  array (
                    'description' => '公网NAT网关实例的规格，且当**InternetChargeType**为**PayBySpec**时，返回以下值：
- **Small**：小型。
- **Middle**：中型。
- **Large**：大型。
当**InternetChargeType**为**PayByLcu**时，返回值为空。',
                    'type' => 'string',
                    'example' => 'Small',
                  ),
                  'InstanceChargeType' => 
                  array (
                    'description' => '<props="china">NAT网关实例的付费模式，取值：</props>

<props="china">- **PostPaid**：按量付费。</props>

<props="china">- **PrePaid**：包年包月。</props>

<props="intl">NAT网关实例的付费模式，取值：**PostPaid**（按量付费）。</props>',
                    'type' => 'string',
                    'example' => 'PostPaid',
                  ),
                ),
              ),
              'PrivateInfo' => 
              array (
                'description' => 'NAT网关实例的私网信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'MaxBandwidth' => 
                  array (
                    'description' => '最大带宽值，单位为Mbps。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5120',
                  ),
                  'VswitchId' => 
                  array (
                    'description' => 'NAT网关实例所属的交换机ID。',
                    'type' => 'string',
                    'example' => 'vsw-bp1s2laxhdf9ayjbo***',
                  ),
                  'PrivateIpAddress' => 
                  array (
                    'description' => '私网IP地址。',
                    'type' => 'string',
                    'example' => '192.168.XX.XX',
                  ),
                  'IzNo' => 
                  array (
                    'description' => 'NAT网关实例所属的可用区。',
                    'type' => 'string',
                    'example' => 'cn-qingdao-b',
                  ),
                  'EniInstanceId' => 
                  array (
                    'description' => '弹性网卡实例ID。',
                    'type' => 'string',
                    'example' => 'eni-bp1cmgtoaka8vfyg****',
                  ),
                ),
              ),
              'DeletionProtectionInfo' => 
              array (
                'description' => '删除保护信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Enabled' => 
                  array (
                    'description' => '是否开启删除保护功能。
- **true**：开启了删除保护功能。
- **false**：未开启删除保护功能。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
              'IpList' => 
              array (
                'description' => '公网NAT网关绑定的弹性公网IP列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '公网NAT网关绑定的弹性公网IP列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'UsingStatus' => 
                    array (
                      'description' => '公网NAT网关实例绑定的弹性公网IP的关联关系。

- **idle**：弹性公网IP未关联SNAT条目或DNAT条目。
- **UsedBySnatTable**：弹性公网IP已关联SNAT条目。
- **UsedByForwardTable**：弹性公网IP已关联DNAT条目。',
                      'type' => 'string',
                      'example' => 'idle',
                    ),
                    'IpAddress' => 
                    array (
                      'description' => '弹性公网IP的地址。',
                      'type' => 'string',
                      'example' => '116.33.XX.XX',
                    ),
                    'AllocationId' => 
                    array (
                      'description' => '弹性公网IP的实例ID。',
                      'type' => 'string',
                      'example' => 'eip-bp13e9i2qst4g6jzi****',
                    ),
                  ),
                ),
              ),
              'PrivateLinkEnabled' => 
              array (
                'title' => '默认不支持私网链接。设置为1则意味着支持私网链接',
                'description' => '是否支持私网连接，取值：

- **true**：支持私网连接。
- **false**：不支持私网连接。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'PrivateLinkMode' => 
              array (
                'title' => 'Fullnat：使用FullNat模式 Geneve：使用Geneve模式。 预估大部分场景都是非Geneve模式的。',
                'description' => '私网连接服务转化模式，取值：

- **FullNat**：使用FULLNAT模式。
- **Geneve**：使用Geneve模式。',
                'type' => 'string',
                'example' => 'FullNat',
              ),
              'EnableSessionLog' => 
              array (
                'description' => '是否开启会话日志，取值：

- **true**：已开启会话日志。

- **false**：已关闭会话日志。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'LogDelivery' => 
              array (
                'description' => '会话日志配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'LogDeliveryType' => 
                  array (
                    'description' => '会话日志投递目的类型。取值：
**sls**，阿里云日志服务SLS。',
                    'type' => 'string',
                    'example' => 'sls',
                  ),
                  'LogDestination' => 
                  array (
                    'description' => '会话日志写入目的地址。',
                    'type' => 'string',
                    'example' => 'acs:log:cn-hangzhou:0000:project/nat_session_log_project/logstore/session_log_test',
                  ),
                  'DeliveryStatus' => 
                  array (
                    'description' => '会话日志写入状态。取值：

- **Succsess**：成功。
- **Failure**：失败。',
                    'type' => 'string',
                    'example' => 'Failure',
                  ),
                  'DeliverLogsErrorMessage' => 
                  array (
                    'description' => '会话日志写入失败的错误信息。',
                    'type' => 'string',
                    'example' => 'LogStoreNotExist: logstore session_log_test does not exist',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpcId\\": \\"vpc-bp15zckdt37pq72z****\\",\\n  \\"CreationTime\\": \\"2021-12-08T12:20:20Z\\",\\n  \\"Status\\": \\"Available\\",\\n  \\"NatType\\": \\"Enhanced\\",\\n  \\"NetworkType\\": \\"internet\\",\\n  \\"RegionId\\": \\"cn-qingdao\\",\\n  \\"EcsMetricEnabled\\": true,\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"Description\\": \\"NAT\\",\\n  \\"ExpiredTime\\": \\"2021-12-26T12:20:20Z\\",\\n  \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n  \\"NatGatewayId\\": \\"ngw-bp1047e2d4z7kf2ki****\\",\\n  \\"BusinessStatus\\": \\"Normal\\",\\n  \\"Name\\": \\"abc\\",\\n  \\"ForwardTable\\": {\\n    \\"ForwardTableId\\": \\"ftb-uf6gj3mhsg94qsqst****\\",\\n    \\"ForwardEntryCount\\": 1\\n  },\\n  \\"SnatTable\\": {\\n    \\"SnatEntryCount\\": 1,\\n    \\"SnatTableId\\": \\"stb-SnatTableIds****\\"\\n  },\\n  \\"FullNatTable\\": {\\n    \\"FullNatEntryCount\\": 1,\\n    \\"FullNatTableId\\": \\"fulltb-gw88z7hhlv43rmb26****\\"\\n  },\\n  \\"BillingConfig\\": {\\n    \\"InternetChargeType\\": \\"PayBySpec\\",\\n    \\"AutoPay\\": \\"false\\",\\n    \\"Spec\\": \\"Small\\",\\n    \\"InstanceChargeType\\": \\"PostPaid\\"\\n  },\\n  \\"PrivateInfo\\": {\\n    \\"MaxBandwidth\\": 5120,\\n    \\"VswitchId\\": \\"vsw-bp1s2laxhdf9ayjbo***\\",\\n    \\"PrivateIpAddress\\": \\"192.168.XX.XX\\",\\n    \\"IzNo\\": \\"cn-qingdao-b\\",\\n    \\"EniInstanceId\\": \\"eni-bp1cmgtoaka8vfyg****\\"\\n  },\\n  \\"DeletionProtectionInfo\\": {\\n    \\"Enabled\\": true\\n  },\\n  \\"IpList\\": [\\n    {\\n      \\"UsingStatus\\": \\"idle\\",\\n      \\"IpAddress\\": \\"116.33.XX.XX\\",\\n      \\"AllocationId\\": \\"eip-bp13e9i2qst4g6jzi****\\"\\n    }\\n  ],\\n  \\"PrivateLinkEnabled\\": true,\\n  \\"PrivateLinkMode\\": \\"FullNat\\",\\n  \\"EnableSessionLog\\": true,\\n  \\"LogDelivery\\": {\\n    \\"LogDeliveryType\\": \\"sls\\",\\n    \\"LogDestination\\": \\"acs:log:cn-hangzhou:0000:project/nat_session_log_project/logstore/session_log_test\\",\\n    \\"DeliveryStatus\\": \\"Failure\\",\\n    \\"DeliverLogsErrorMessage\\": \\"LogStoreNotExist: logstore session_log_test does not exist\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetNatGatewayAttributeResponse>\\n    <VpcId>vpc-bp15zckdt37pq72z****</VpcId>\\n    <CreationTime>2021-12-08T12:20:20Z</CreationTime>\\n    <Status>Available</Status>\\n    <NatType>Enhanced</NatType>\\n    <NetworkType>internet</NetworkType>\\n    <RegionId>cn-qingdao</RegionId>\\n    <EcsMetricEnabled>true</EcsMetricEnabled>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <Description>NAT</Description>\\n    <ExpiredTime>2021-12-26T12:20:20Z</ExpiredTime>\\n    <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n    <NatGatewayId>ngw-bp1047e2d4z7kf2ki****</NatGatewayId>\\n    <BusinessStatus>Normal</BusinessStatus>\\n    <Name>abc</Name>\\n    <ForwardTable>\\n        <ForwardTableId>ftb-uf6gj3mhsg94qsqst****</ForwardTableId>\\n        <ForwardEntryCount>1</ForwardEntryCount>\\n    </ForwardTable>\\n    <SnatTable>\\n        <SnatEntryCount>1</SnatEntryCount>\\n        <SnatTableId>stb-SnatTableIds****</SnatTableId>\\n    </SnatTable>\\n    <FullNatTable>\\n        <FullNatEntryCount>1</FullNatEntryCount>\\n        <FullNatTableId>fulltb-gw88z7hhlv43rmb26****</FullNatTableId>\\n    </FullNatTable>\\n    <BillingConfig>\\n        <InternetChargeType>PayBySpec</InternetChargeType>\\n        <AutoPay>false</AutoPay>\\n        <Spec>Small</Spec>\\n        <InstanceChargeType>PostPaid</InstanceChargeType>\\n    </BillingConfig>\\n    <PrivateInfo>\\n        <MaxBandwidth>5120</MaxBandwidth>\\n        <VswitchId>vsw-bp1s2laxhdf9ayjbo***</VswitchId>\\n        <PrivateIpAddress>192.168.XX.XX</PrivateIpAddress>\\n        <IzNo>cn-qingdao-b</IzNo>\\n        <EniInstanceId>eni-bp1cmgtoaka8vfyg****</EniInstanceId>\\n    </PrivateInfo>\\n    <DeletionProtectionInfo>\\n        <Enabled>true</Enabled>\\n    </DeletionProtectionInfo>\\n    <IpList>\\n        <UsingStatus>idle</UsingStatus>\\n        <IpAddress>116.33.XX.XX</IpAddress>\\n        <AllocationId>eip-bp13e9i2qst4g6jzi****</AllocationId>\\n    </IpList>\\n    <PrivateLinkEnabled>true</PrivateLinkEnabled>\\n    <PrivateLinkMode>FullNat</PrivateLinkMode>\\n</GetNatGatewayAttributeResponse>","errorExample":""}]',
      'title' => '查看单个NAT网关实例详细信息',
      'description' => '本接口可以查询单个公网NAT网关或VPC NAT网关的信息，文中出现的“NAT网关”不做具体的区分。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListEnhanhcedNatGatewayAvailableZones' => 
    array (
      'summary' => '调用ListEnhanhcedNatGatewayAvailableZones接口查询NAT网关的资源可用区。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
本示例查询阿联酋（迪拜）地域NAT网关资源的可用区。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'me-east-1',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- **zh-CN**（默认值）：中文。
- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
            'default' => 'zh-CN',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
本示例查询阿联酋（迪拜）地域NAT网关资源的可用区。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'me-east-1',
          ),
        ),
        3 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'allowEmptyValue' => true,
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '过滤信息，支持传入键值对查询结果进行过滤。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件。目前仅支持对**PrivateLinkEnabled**进行过滤。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'PrivateLinkEnabled',
                ),
                'Value' => 
                array (
                  'description' => '过滤条件对应的过滤值。

> 当过滤条件为**PrivateLinkEnabled**时，需要配置过滤值。 取值为**true**或**false**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'true',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '结果信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8AE6F367-52EA-535D-9A3D-EF23D70527C8',
              ),
              'Zones' => 
              array (
                'description' => '可用区集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '可用区集合。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ZoneId' => 
                    array (
                      'description' => '可用区ID。',
                      'type' => 'string',
                      'example' => 'me-east-1a',
                    ),
                    'LocalName' => 
                    array (
                      'description' => '可用区名称。',
                      'type' => 'string',
                      'example' => '中东1 可用区A',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8AE6F367-52EA-535D-9A3D-EF23D70527C8\\",\\n  \\"Zones\\": [\\n    {\\n      \\"ZoneId\\": \\"me-east-1a\\",\\n      \\"LocalName\\": \\"中东1 可用区A\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListEnhanhcedNatGatewayAvailableZonesResponse>\\n    <RequestId>8AE6F367-52EA-535D-9A3D-EF23D70527C8</RequestId>\\n    <Zones>\\n        <ZoneId>me-east-1a</ZoneId>\\n        <LocalName>中东1 可用区A</LocalName>\\n    </Zones>\\n</ListEnhanhcedNatGatewayAvailableZonesResponse>","errorExample":""}]',
      'title' => '查询增强型NAT网关的资源可用区',
      'description' => '本接口查询公网NAT网关或VPC NAT网关的资源可用区，文中出现的“NAT网关”不做具体的区分。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateNatGatewayNatType' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要升级的普通型公网NAT网关所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要升级的普通型公网NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-bp1b0lic8uz4r6vf2****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级后增强型公网NAT网关所属的交换机。

>如果不设置该参数，系统会随机将增强型公网NAT网关创建在VPC内的任意一台交换机。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-bp17nszybg8epodke****',
          ),
        ),
        3 => 
        array (
          'name' => 'NatType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网NAT网关类型。取值：**Enhanced**，表示增强型公网NAT网关。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Enhanced',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送请求，不会升级公网NAT网关类型。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并直接升级公网NAT网关类型。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要升级的普通型公网NAT网关所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-qingdao',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.NatConvert',
            'errorMessage' => 'The NAT gateway conversion function is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'NATGW_NOT_EXIST',
            'errorMessage' => 'The specified NAT gateway does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.VpcNotExist',
            'errorMessage' => 'The specified VPC does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.VswNotExist',
            'errorMessage' => 'The specified VSwitch does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.NatTypeNotEnhanced',
            'errorMessage' => 'Operation failed because the specified NAT gateway type is not enhanced.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.NatGwBindWithBandwidthPackage',
            'errorMessage' => 'Operation failed because the NAT gateway is bound to bandwidth packages.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => 'The status of NAT gateway is incorrect.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.EipInMiddleStatus',
            'errorMessage' => 'Operation failed because the status of EIP associated with the specified NAT gateway is abnormal.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.SnatInMiddleStatus',
            'errorMessage' => 'Operation failed because the status of the SNAT entry of the specified NAT gateway is abnormal.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.DnatInMiddleStatus',
            'errorMessage' => 'Operation failed because the status of the DNAT entry associated with the NAT gateway is abnormal.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.NatGwRouteInMiddleStatus',
            'errorMessage' => 'Operation failed because the status of the route entry associated with the NAT gateway is abnormal.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedInventoryNotEnough',
            'errorMessage' => 'The enhanced NAT gateway inventory is insufficient in the specified zone.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedUserIsUnAuthorized',
            'errorMessage' => 'Operation failed because the user is not authorized to create an enhanced NAT gateway.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedRegion',
            'errorMessage' => 'Operation failed because enhanced NAT gateways are not available for sale in the specified region.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.EnhancedQuotaExceed',
            'errorMessage' => 'Operation failed because the maximum number of enhanced NAT gateways in the same VPC is exceeded.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageIdNumber.NotSupported',
            'errorMessage' => 'The number of BandwidthPackageIds exceeds the limit.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.VswNotBelongToVpc',
            'errorMessage' => 'Operation failed because the specified VSwitch is not bound to the same VPC with NAT gateway.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationUnsupported.VpcAttachedCen',
            'errorMessage' => 'Operation failed because the VPC is attached to CEN.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationUnsupported.RouterInterfaceExist',
            'errorMessage' => 'Operation failed because the VPC has a router interface.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.VRouterNotExist',
            'errorMessage' => 'Operation failed because the VRouter does not exist.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.SnatQuotaExceed',
            'errorMessage' => 'Operation failed because the maximum number of SNAT entry is exceeded.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.DnatQuotaExceed',
            'errorMessage' => 'Operation failed because the maximum number of forward entry is exceeded.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.VswBindedRouteTable',
            'errorMessage' => 'The operation failed because a custom route table that contains subnet routes is associated with the specified VSwitch.',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.VswBindedAcl',
            'errorMessage' => 'The operation failed because a network ACL is associated with the specified VSwitch.',
          ),
          24 => 
          array (
            'errorCode' => 'Forbidden.Convert',
            'errorMessage' => 'User does not have permission to operate.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateNatGatewayNatTypeResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</UpdateNatGatewayNatTypeResponse>","errorExample":""}]',
      'title' => '将普通型NAT网关切换为增强型',
      'summary' => '将普通型NAT网关切换为增强型NAT网关。',
      'description' => '## 使用说明

调用UpdateNatGatewayNatType接口前，请先了解以下内容：

- **UpdateNatGatewayNatType**接口属于异步接口，即系统会先返回一个请求ID，但NAT网关的网关类型并未升级完成，系统后台的升级任务仍在进行。您可以调用GetNatGatewayConvertStatus查询NAT网关的升级状态，更多信息，请参见[GetNatGatewayConvertStatus](~~184744~~)。

    - 当NAT网关的升级状态处于**processing**时，表示正在升级中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当NAT网关的升级状态处于**successful**时，表示NAT网关的网关类型升级完成。

    - 当NAT网关的升级状态处于**failed**时，表示NAT网关的网关类型升级失败。

-  **UpdateNatGatewayNatType**接口在同一个NAT网关中不支持并发升级NAT网关的网关类型。

- 增强型NAT网关与普通型NAT网关的计费相同，升级过程和升级后计费方式不会改变。

- 每个资源升级过程可能会持续5分钟，升级过程中会出现1~2次秒级闪断，业务重连即可恢复。重连机制为自动重连还是手动重连由业务本身决定。

- 仅支持将普通型NAT网关升级至增强型NAT网关，不支持将增强型NAT网关降级至普通型NAT网关。




',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ConvertBandwidthPackage' => 
    array (
      'summary' => '转换NAT带宽包。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT带宽包的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bwp-bp1xea10o8qxw4f****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符，且不能超过64个字符。详细信息，请参见[如何保证幂等性](~~36569~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ConvertInstanceId' => 
              array (
                'description' => '转换后的共享带宽实例ID。',
                'type' => 'string',
                'example' => 'cbwp-s6lmotmkkf567b****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotOpen.Api',
            'errorMessage' => 'The api is not open.',
          ),
          1 => 
          array (
            'errorCode' => 'NotFound.BandwidthPackage',
            'errorMessage' => 'BandwidthPackage is not exist',
          ),
          2 => 
          array (
            'errorCode' => 'ORDER.QUOTA_EXCEEDED',
            'errorMessage' => 'The EIP quota is exceeded',
          ),
          3 => 
          array (
            'errorCode' => 'ORDER.ERROR',
            'errorMessage' => 'Create order failed.Commodity configuration does not support.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ConvertInstanceId\\": \\"cbwp-s6lmotmkkf567b****\\",\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<ConvertBandwidthPackageResponse>\\r\\n\\t<RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\r\\n\\t<ConvertInstanceId>cbwp-s6lmotmkkf567b****</ConvertInstanceId>\\r\\n</ConvertBandwidthPackageResponse>","errorExample":""}]',
      'title' => '将NAT带宽包转换为共享带宽',
      'description' => 'NAT带宽包转换为共享带宽前，请先了解：

- 转换操作，不会产生额外费用。

- 转换过程中，NAT网关原有SNAT条目和DNAT条目不受影响，也不会对正在运行的业务产生影响，但还是建议您在业务低峰期进行转换操作。

- 转换后，NAT带宽包中的公网IP将转换为EIP。共享带宽的带宽峰值、计费方式与原有NAT带宽包保持一致。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableNatGatewayEcsMetric' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的地域，您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会开启ECS流量监控。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回2XX HTTP状态码并开启ECS流量监控。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要开启ECS流量监控功能的NAT网关ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-2vc53wynunp35lw1y****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的地域，您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.NatGatewayId',
            'errorMessage' => 'The parameter NatGatewayId is mandatory.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RegionNotSupport',
            'errorMessage' => 'Operation failed because region not support.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.NoPermission',
            'errorMessage' => 'Operation failed because user does not have permissions.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.NatGatewayNotExist',
            'errorMessage' => 'Operation failed because NatGateway not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.NatTypeInvalid',
            'errorMessage' => 'Operation failed because only the enhanced NAT gateway supports this operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableNatGatewayEcsMetricResponse>\\r\\n    <RequestId>5AF873FB-6669-4AD5-A4DA-478D535C8F0D</RequestId>\\r\\n</EnableNatGatewayEcsMetricResponse>","errorExample":""}]',
      'title' => '开启ECS流量监控',
      'summary' => '调用EnableNatGatewayEcsMetric接口开启ECS流量监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableNatGatewayEcsMetric' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的地域，您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

**true**：发送检查请求，不会关闭ECS流量监控。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

**false**（默认值）：发送正常请求，通过检查后返回2XX HTTP状态码并关闭ECS流量监控。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要关闭ECS流量监控功能的NAT网关ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-2vc53wynunp35lw1y****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所属的地域，您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-chengdu',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.NatGatewayId',
            'errorMessage' => 'The parameter NatGatewayId is mandatory.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RegionNotSupport',
            'errorMessage' => 'Operation failed because region not support.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.NoPermission',
            'errorMessage' => 'Operation failed because user does not have permissions.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.NatGatewayNotExist',
            'errorMessage' => 'Operation failed because NatGateway not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.NatTypeInvalid',
            'errorMessage' => 'Operation failed because only the enhanced NAT gateway supports this operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableNatGatewayEcsMetricResponse>\\r\\n      <RequestId>5AF873FB-6669-4AD5-A4DA-478D535C8F0D</RequestId>\\r\\n</DisableNatGatewayEcsMetricResponse>","errorExample":""}]',
      'title' => '关闭ECS流量监控',
      'summary' => '调用DisableNatGatewayEcsMetric接口关闭ECS流量监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSnatEntry' => 
    array (
      'summary' => '调用CreateSnatEntry接口在SNAT列表中添加SNAT条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'ap-northeast-2-pop' => 'ap-northeast-2-pop',
            ),
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT表的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'stb-bp190wu8io1vgev****',
          ),
        ),
        2 => 
        array (
          'name' => 'SourceVSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的ID。

* 当为公网NAT网关添加SNAT条目时，该参数表示该交换机内的ECS实例均可以通过SNAT规则访问公网。指定多个EIP配置SNAT IP地址池时，业务连接会通过哈希算法分配到多个EIP，由于每个连接的流量不同，可能会出现多EIP业务流量不均匀的情况，建议您将每个EIP都加入到同一个共享带宽中以避免单EIP带宽达到上限导致业务受损。

* 当为VPC NAT网关添加SNAT条目时，该参数表示该交换机内的ECS实例均可以通过SNAT规则访问外部网络。

> 参数**SourceCIDR**和参数**SourceVSwtichId**必须输入一个且不能都输入。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-bp1nhx2s9ui5o****',
          ),
        ),
        3 => 
        array (
          'name' => 'SourceCIDR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入VPC、交换机或ECS实例的网段，还可以输入任意网段。

SNAT条目有以下几种粒度： 

- VPC粒度：NAT网关所在VPC的网段，该VPC下的所有ECS实例均可以通过SNAT规则访问互联网或者外部网络。

- 交换机粒度：指定交换机的网段（如192.168.1.0/24），该交换机下的ECS实例均可以通过SNAT规则访问互联网或者外部网络。

- ECS粒度：指定ECS实例的地址（如192.168.1.1/32），该ECS实例可以通过SNAT规则访问互联网或者外部网络。

- 输入任意网段，该网段下的所有ECS实例均可以通过SNAT服务访问互联网或者外部网络。

当为公网NAT网关添加SNAT条目时，如果**SnatIp**仅指定了一个公网IP，ECS实例使用指定的公网IP访问互联网；

如果**SnatIp**指定了多个公网IP，ECS实例随机使用**SnatIp**中的公网IP访问互联网。

> 参数**SourceCIDR**和参数**SourceVSwtichId**必须输入一个且不能都输入。',
            'type' => 'string',
            'required' => false,
            'example' => '10.1.1.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '* 为公网NAT网关添加SNAT条目时，该参数为SNAT条目中的EIP，多个EIP之间用半角逗号（,）隔开。

>指定多个EIP配置SNAT IP地址池时，业务连接会通过哈希算法分配到多个EIP，由于每个连接的流量不同，可能会出现多EIP业务流量不均匀的情况，建议您将每个EIP都加入到同一个共享带宽中以避免单EIP带宽达到上限导致业务受损。

* 为VPC NAT网关添加SNAT条目时，该参数为SNAT条目中的NAT IP地址，多个NAT IP地址之间用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '47.98.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'SnatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的名称。

长度为2~128个字符，必须以大小写字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'SnatEntry-1',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。`ClientToken`只支持ASCII字符。

>若您未指定，则系统自动使用API请求的**Requestld**作为**ClientToken**标识。每次API请求的**Requestld**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44****',
          ),
        ),
        7 => 
        array (
          'name' => 'EipAffinity',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否打开IP亲和性。取值：

- **0**：关闭IP亲和性。

- **1**：打开IP亲和性。

> 打开IP亲和性开关后，如果SNAT条目绑定多个EIP或NAT IP，同一个客户端将使用相同的EIP或NAT IP进行访问，否则客户端将从绑定的EIP或NAT IP中随机选取进行访问。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'SNAT条目ID。',
            'type' => 'object',
            'properties' => 
            array (
              'SnatEntryId' => 
              array (
                'description' => 'SNAT条目ID。',
                'type' => 'string',
                'example' => 'snat-kmd6nv8fy****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.PrivateLinkEnabled',
            'errorMessage' => 'The feature of PrivateLinkEnabled is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSourceCIDR.Malformed',
            'errorMessage' => 'SourceCIDR is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'NOT_ALLOW_USE_SOURCECIDR_OUTSIDEVPC',
            'errorMessage' => 'The User not in sourcecidr_unlimited_outsidevpc white list. Cannot use SourceCidr outside VpcCidr.',
          ),
          3 => 
          array (
            'errorCode' => 'NOT_ALLOW_USE_SOURCECIDR_AUTODEFINE',
            'errorMessage' => 'The User not in sourcecidr_unlimited_insidevpc white list. Cannot use SourceCidr auto defined.',
          ),
          4 => 
          array (
            'errorCode' => 'NOT_ALLOW_USE_SOURCECIDR_CONTAINSZERO',
            'errorMessage' => 'The User not in sourcecidr_unlimited_outsidevpc_containszero white list. Cannot use SourceCidr outside VpcCidr.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.IpHasBeenUsedInDnat',
            'errorMessage' => 'The snat ip can\'t be used. Because it has been used in dnat',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.SourceVSwitchId.IncludeHaVip',
            'errorMessage' => 'There is some HaVips under specified VSwitch',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidSnatIp.Malformed',
            'errorMessage' => 'The specified SnatIp is not a valid IP address.',
          ),
          8 => 
          array (
            'errorCode' => 'SNAT_IP_POOL_COUNT_TOO_MANY',
            'errorMessage' => 'The Snat pool ip too many.',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.SnatEntryCountLimited',
            'errorMessage' => 'SNAT entry in the specified SNAT table reach its limit.',
          ),
          10 => 
          array (
            'errorCode' => 'NOT_ALLOW_USE_SOURCECIDR',
            'errorMessage' => 'The User not in nat_scope_unlimited white list. Cannot use SourceCidr param.',
          ),
          11 => 
          array (
            'errorCode' => 'INVALID_PARAMETER',
            'errorMessage' => 'The parameter invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'Forbidden.SourceVSwitchId.Duplicated',
            'errorMessage' => 'The specified SourceCIDRis duplicated.',
          ),
          13 => 
          array (
            'errorCode' => 'Forbidden.IpUsedInForwardTable',
            'errorMessage' => 'The specified SnatIp already used in forward table',
          ),
          14 => 
          array (
            'errorCode' => 'Forbindden',
            'errorMessage' => 'The specified Instance already bind eip',
          ),
          15 => 
          array (
            'errorCode' => 'EIP_NOT_SUPPORT_SNAT_POOL',
            'errorMessage' => 'The Eip cannot support snat pool',
          ),
          16 => 
          array (
            'errorCode' => 'EIP_NOT_IN_GATEWAY',
            'errorMessage' => 'The Eip not in nat gateway',
          ),
          17 => 
          array (
            'errorCode' => 'OperationUnsupported.CidrConflict',
            'errorMessage' => 'The specified CIDR block conflicts with an existing SNAT entry.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationUnsupported.EipNatIpCheck',
            'errorMessage' => '%s',
          ),
          19 => 
          array (
            'errorCode' => 'OperationUnsupported.EipNatBWPCheck',
            'errorMessage' => '%s',
          ),
          20 => 
          array (
            'errorCode' => 'OperationUnsupported.EipNatGWCheck',
            'errorMessage' => '%s',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpPoolBwpRules',
            'errorMessage' => '%s',
          ),
          22 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpsCheck',
            'errorMessage' => '%s',
          ),
          23 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpPoolCbwpRules',
            'errorMessage' => '%s',
          ),
          24 => 
          array (
            'errorCode' => 'CreateSnatEntry.ParamExclusive.sourceVSwitchIdAndsourceCIDR',
            'errorMessage' => '%s',
          ),
          25 => 
          array (
            'errorCode' => 'InvalidNatGatewayId.NotFound',
            'errorMessage' => 'The NatGateway instance not exist.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          27 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIp',
            'errorMessage' => 'Ip semgment must be subnet cidr.',
          ),
          28 => 
          array (
            'errorCode' => 'IncorrectStatus.SnatEntry',
            'errorMessage' => '%s',
          ),
          29 => 
          array (
            'errorCode' => 'QuotaExceeded.SnatIp',
            'errorMessage' => 'Public ip number exceeds quota.',
          ),
          30 => 
          array (
            'errorCode' => 'OperationUnsupported.EipInBinding',
            'errorMessage' => 'Create snat entry with eip in associating status is unsupported.',
          ),
          31 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchNotInVpc',
            'errorMessage' => 'The specified vswitch and natgateway are not in the same vpc.',
          ),
          32 => 
          array (
            'errorCode' => 'QuotaExceeded.SnatEntry',
            'errorMessage' => 'SNAT entry in the specified SNAT table reach it?s limit.',
          ),
          33 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => '%s',
          ),
          34 => 
          array (
            'errorCode' => 'IncorrectStatus.NATGW',
            'errorMessage' => 'NATGW status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSnatTableId.NotFound',
            'errorMessage' => 'Specified SNAT table does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified virtual switch does not exists.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidSnatIp.NotFound',
            'errorMessage' => 'Specified SnatIp does not found on the NAT Gateway',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The NatGateway instance not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'The NatIp instance not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.VSwitch',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'DefaultValidate.Error',
            'errorMessage' => 'validte fail.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.CrateSnatEntryTimeOut',
            'errorMessage' => 'Operation failed because create snatEntry timeout.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SnatEntryId\\": \\"snat-kmd6nv8fy****\\",\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSnatEntryResponse>\\n    <SnatEntryId>snat-kmd6nv8fy****</SnatEntryId>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n</CreateSnatEntryResponse>","errorExample":""}]',
      'title' => '在SNAT列表中添加SNAT条目',
      'description' => '本接口可以为增强型公网NAT网关和VPC NAT网关添加SNAT条目，文中出现的**NAT网关**不做具体的区分。

调用本接口添加SNAT条目时，请了解以下内容：

- **CreateSnatEntry**接口属于异步接口，即系统会先返回一个SNAT条目ID，但该SNAT条目并未添加完成，系统后台的添加任务仍在进行。您可以调用[DescribeSnatTableEntries](~~42677~~)查询SNAT条目的状态：

    - 当SNAT条目处于**Pending**状态时，表示SNAT条目正在添加中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当SNAT条目处于**Available**状态时，表示SNAT条目添加完成。

- SNAT条目中指定的交换机和ECS实例必须在NAT网关所属的VPC内。

- 每个交换机和ECS实例只能属于一个SNAT条目。
  
- 如果交换机中存在高可用虚拟IP实例，则无法添加SNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSnatEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目所属的SNAT表的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'stb-bp190wu8io1vgev80****',
          ),
        ),
        2 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的SNAT条目的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'snat-bp1vcgcf8tm0plqcg****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'Some Snat entry status blocked this operation..',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.SnatEntry',
            'errorMessage' => 'The Specified SnatEntry is not stable status, can not operation',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSnatEntryId.NotFound',
            'errorMessage' => 'Specified Snat entry ID does not exist',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidSnatTableId.NotFound',
            'errorMessage' => 'Specified SNAT table does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.SnatEntry',
            'errorMessage' => 'Specified SNAT entry does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSnatEntryResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteSnatEntryResponse>","errorExample":""}]',
      'title' => '删除指定的SNAT条目',
      'summary' => '调用DeleteSnatEntry接口删除指定的SNAT条目。',
      'description' => '**DeleteSnatEntry**接口属于异步接口，即系统会先返回一个请求ID，但SNAT条目并未删除完成，系统后台的删除任务仍在进行。您可以调用[DescribeSnatTableEntries](~~42677~~)查询SNAT条目的状态：

- 当SNAT条目处于**Deleting**状态时，表示SNAT条目正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当返回的SNAT条目列表为空时，表示SNAT条目删除完成。

如果SNAT表中有SNAT条目的状态为**Pending**时，无法删除该SNAT表中的SNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySnatEntry' => 
    array (
      'summary' => '调用ModifySnatEntry接口修改指定的SNAT条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' SNAT条目所在的SNAT表的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'stb-8vbczigrhop8x5u3t****',
          ),
        ),
        2 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要修改的SNAT条目的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'snat-bp1vcgcf8tm0plqcg****',
          ),
        ),
        3 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 为公网NAT网关修改SNAT条目时，该参数为SNAT条目中的EIP，多个EIP之间用半角逗号（,）隔开。
 
    指定多个EIP配置SNAT IP地址池时，业务连接会通过哈希算法分配到多个EIP，由于每个连接的流量不同，可能会出现多EIP业务流量不均匀的情况，建议您将每个EIP都加入到同一个共享带宽中以避免单EIP带宽达到上限导致业务受损。

- 为VPC NAT网关修改SNAT条目时，该参数为SNAT条目中的NAT IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '47.98.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'SnatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的名称。

长度为2~128个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'SnatEntry-1',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        6 => 
        array (
          'name' => 'EipAffinity',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否打开IP亲和性。取值：

- **0**：关闭IP亲和性。

- **1**：打开IP亲和性。

> 打开IP亲和性开关后，如果SNAT条目绑定多个EIP或NAT IP，同一个客户端将使用相同的EIP或NAT IP进行访问，否则客户端将从绑定的EIP或NAT IP中随机选取进行访问。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的响应体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSnatIp.Malformed',
            'errorMessage' => 'The specified SnatIp is not a valid IP address.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.SourceVSwitchId.Duplicated',
            'errorMessage' => 'The specified SourceCIDRis duplicated.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.IpUsedInForwardTable',
            'errorMessage' => 'The specified SnatIp already used in forward table',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.EipForSnatPool',
            'errorMessage' => 'The Eip cannot support snat pool',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'The Specified SnatEntry is not stable status, can not operation',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpsCheck',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpPoolCbwpRules',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'EIP_NOT_IN_GATEWAY',
            'errorMessage' => 'The Eip not in nat gateway',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIp',
            'errorMessage' => 'Error public ip must in same bandwidth package.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.SnatIp',
            'errorMessage' => 'Public ip number exceeds quota.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidSnatEntryId.NotFound',
            'errorMessage' => 'Specified SNAT entry does not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpPoolBwpRules',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectStatus.SnatEntry',
            'errorMessage' => 'The Specified SnatEntry is not stable status, can not operation',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.SnatIpsTooMany',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'OperationFailed.CanNotUseEipInDnat',
            'errorMessage' => 'Operation failed because the eip can not used by forward entry.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationUnsupported.EipNatGWCheck',
            'errorMessage' => 'Operation unsupported because the relation check of eip and nat gateway is failed.',
          ),
          17 => 
          array (
            'errorCode' => 'ResourceNotFound.SnatEntry',
            'errorMessage' => 'Specified SNAT entry does not exist.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'Specified NatIp does not exist.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.CanNotUseNatIpInDnat',
            'errorMessage' => 'Operation failed because the NatIp can not used by forward entry.',
          ),
          20 => 
          array (
            'errorCode' => 'IncorrectStatus.NATGW',
            'errorMessage' => 'NATGW status is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationUnsupported.EipInBinding',
            'errorMessage' => 'Create snat entry with eip in associating status is unsupported.',
          ),
          22 => 
          array (
            'errorCode' => 'OperationUnsupported.EipNatBWPCheck',
            'errorMessage' => 'The EIP is not associated with a NAT service plan.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSnatTableId.NotFound',
            'errorMessage' => 'Specified SNAT table does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidSnatEntryId.NotFound',
            'errorMessage' => 'Specified SNAT entry does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidSnatIp.NotFound',
            'errorMessage' => 'Specified SnatIp does not found on the NAT Gateway',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'Specified NatIp does not found on the NAT Gateway',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySnatEntryResponse>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n</ModifySnatEntryResponse>","errorExample":""}]',
      'title' => '修改指定的SNAT条目',
      'description' => '**ModifySnatEntry**接口属于异步接口，即系统会先返回一个请求ID，但SNAT条目并未修改完成，系统后台的修改任务仍在进行。您可以调用[DescribeSnatTableEntries](~~42677~~)查询SNAT条目的状态：

- 当SNAT条目处于**Pending**状态时，表示SNAT条目正在修改中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当SNAT条目处于**Available**状态时，表示SNAT条目修改完成。

> 如果SNAT表中有SNAT条目的状态为**Pending**时，无法修改该SNAT表中的SNAT条目。


**ModifySnatEntry**接口在同一个SNAT条目实例下不支持并发修改指定的SNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSnatTableEntries' => 
    array (
      'summary' => '调用DescribeSnatTableEntries接口查询已创建的SNAT条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT表ID。 

> **SnatTableId**和**NatGatewayId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'stb-8vbczigrhop8x5u3t****',
          ),
        ),
        2 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'snat-8vbae8uqh7rjpk7d2****',
          ),
        ),
        3 => 
        array (
          'name' => 'SourceVSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的ID。

- 当查询公网NAT网关的SNAT条目时，该参数表示该交换机内的ECS实例均可以通过SNAT规则访问公网。

- 当查询VPC NAT网关的SNAT条目时，该参数表示该交换机内的ECS实例均可以通过SNAT规则访问外部网络。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-3xbjkhjshjdf****',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceCIDR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的源网段。 ',
            'type' => 'string',
            'required' => false,
            'example' => '116.22.XX.XX/24',
          ),
        ),
        5 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当查询公网NAT网关的SNAT条目时，该参数为SNAT条目中的EIP。
 
- 当查询VPC NAT网关的SNAT条目时，该参数为SNAT条目中的NAT IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '116.22.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'SnatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的名称。

名称长度为2~128个字符，以大小写字母或中文开头， 可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'SnatEntry-1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的ID。

> **SnatTableId**和**NatGatewayId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6D7E89B1-1C5B-412B-8585-4908E222EED5',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'SnatTableEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SnatTableEntry' => 
                  array (
                    'description' => '查询的SNAT列表详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'SNAT列表的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'SNAT条目状态，取值：

- **Pending**：配置中，可能是创建中或修改中。

- **Available**：可用。

- **Deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Pending',
                        ),
                        'SnatEntryName' => 
                        array (
                          'description' => 'SNAT条目的名称。',
                          'type' => 'string',
                          'example' => 'SnatEntry-1',
                        ),
                        'SourceVSwitchId' => 
                        array (
                          'description' => '- 当查询公网NAT网关时，该返回参数为通过SNAT功能访问互联网的交换机ID。

- 当查询VPC NAT网关时，该返回参数为通过SNAT功能访问外部网络的交换机ID。 ',
                          'type' => 'string',
                          'example' => 'vsw-3xbdsffvfgdfds****',
                        ),
                        'SourceCIDR' => 
                        array (
                          'description' => 'SNAT条目的源网段。 ',
                          'type' => 'string',
                          'example' => '116.22.XX.XX/24',
                        ),
                        'SnatEntryId' => 
                        array (
                          'description' => 'SNAT条目的ID。 ',
                          'type' => 'string',
                          'example' => 'snat-kmd6nv8fy****',
                        ),
                        'SnatTableId' => 
                        array (
                          'description' => 'SNAT条目所属的SNAT表ID。 ',
                          'type' => 'string',
                          'example' => 'stb-gz3r3odawdgffde****',
                        ),
                        'SnatIp' => 
                        array (
                          'description' => '- 当查询公网NAT网关的SNAT条目时，该返回参数为SNAT条目中的EIP。
 
- 当查询VPC NAT网关的SNAT条目时，该返回参数为SNAT条目中的NAT IP地址。',
                          'type' => 'string',
                          'example' => '116.22.XX.XX',
                        ),
                        'NatGatewayId' => 
                        array (
                          'description' => 'SNAT条目所属的NAT网关的ID。',
                          'type' => 'string',
                          'example' => 'ngw-bp1uewa15k4iy5770****',
                        ),
                        'EipAffinity' => 
                        array (
                          'description' => '是否打开IP亲和性。取值：

- **0**：关闭IP亲和性。

- **1**：打开IP亲和性。

> 打开IP亲和性开关后，如果SNAT条目绑定多个EIP或NAT IP，同一个客户端将使用相同的EIP或NAT IP进行访问，否则客户端将从绑定的EIP或NAT IP中随机选取进行访问。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'DESCRIBE_SNAT_PARAM_INVALID',
            'errorMessage' => 'SnatTableId and natGatewayId can not both be null',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSnatTableId.NotFound',
            'errorMessage' => 'Specified SNAT table does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 5,\\n  \\"RequestId\\": \\"6D7E89B1-1C5B-412B-8585-4908E222EED5\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"SnatTableEntries\\": {\\n    \\"SnatTableEntry\\": [\\n      {\\n        \\"Status\\": \\"Pending\\",\\n        \\"SnatEntryName\\": \\"SnatEntry-1\\",\\n        \\"SourceVSwitchId\\": \\"vsw-3xbdsffvfgdfds****\\",\\n        \\"SourceCIDR\\": \\"116.22.XX.XX/24\\",\\n        \\"SnatEntryId\\": \\"snat-kmd6nv8fy****\\",\\n        \\"SnatTableId\\": \\"stb-gz3r3odawdgffde****\\",\\n        \\"SnatIp\\": \\"116.22.XX.XX\\",\\n        \\"NatGatewayId\\": \\"ngw-bp1uewa15k4iy5770****\\",\\n        \\"EipAffinity\\": \\"1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSnatTableEntriesResponse>\\n    <PageSize>5</PageSize>\\n    <RequestId>6D7E89B1-1C5B-412B-8585-4908E222EED5</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <SnatTableEntries>\\n        <Status>Pending</Status>\\n        <SnatEntryName>SnatEntry-1</SnatEntryName>\\n        <SourceVSwitchId>vsw-3xbdsffvfgdfds****</SourceVSwitchId>\\n        <SourceCIDR>116.22.XX.XX/24</SourceCIDR>\\n        <SnatEntryId>snat-kmd6nv8fy****</SnatEntryId>\\n        <SnatTableId>stb-gz3r3odawdgffde****</SnatTableId>\\n        <SnatIp>116.22.XX.XX</SnatIp>\\n    </SnatTableEntries>\\n</DescribeSnatTableEntriesResponse>","errorExample":""}]',
      'title' => '查询已创建的SNAT条目',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateForwardEntry' => 
    array (
      'summary' => '调用CreateForwardEntry接口在DNAT列表中添加DNAT条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ForwardTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT列表的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ftb-bp1mbjubq34hlcqpa****',
          ),
        ),
        2 => 
        array (
          'name' => 'ExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当为公网NAT网关配置DNAT条目时，提供公网访问的弹性公网IP地址。
- 当为VPC NAT网关配置DNAT条目时，提供外部网络访问的NAT IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '116.28.XX.XX',
          ),
        ),
        3 => 
        array (
          'name' => 'ExternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当为公网NAT网关配置DNAT条目时， 需要进行端口转发的外部端口或端口段。
 
    - 输入的端口范围需要在**1**~**65535**之间。
    - 如果需要在端口段内转发，请在输入时以正斜线（/）隔开起始端口，例如`10/20`。
    - 如果**ExternalPort**设置为端口段，则**InternalPort**也需要设置为端口段，且端口段的端口个数相同，例如**ExternalPort**设置为`10/20`，**InternalPort**设置为`80/90`。

- 当为VPC NAT网关配置DNAT条目时，NAT IP地址被外部网络访问的端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8080',
          ),
        ),
        4 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当为公网NAT网关配置DNAT条目时，需要进行公网通信的ECS实例的私网IP地址，该私网IP地址需满足以下条件： 
        
    - 必须属于NAT网关所在的VPC的网段。 

    - 必须被一个ECS实例使用且该实例没有绑定EIP时，DNAT条目才生效。 

- 当为VPC NAT网关配置DNAT条目时，需要通过DNAT规则进行通信的私网IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'InternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当为公网NAT网关配置DNAT条目时，需要进行端口转发的内部端口或端口段，取值范围：**1**~**65535**。

- 当为VPC NAT网关配置DNAT条目时，需要映射的目标ECS实例端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型，取值： 

- **TCP**：转发TCP协议的报文。   

- **UDP**：转发UDP协议的报文。   

- **Any**：转发所有协议的报文。如果**IpProtocol**配置为**Any**，则**ExternalPort**和**InternalPort**也必须配置为**Any**，实现DNAT IP映射。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'ForwardEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT规则的名称。

长度为2~128个字符，必须以大小写字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ForwardEntry-1',
          ),
        ),
        8 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe6****',
          ),
        ),
        9 => 
        array (
          'name' => 'PortBreak',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启端口突破，取值：

- **true**：开启端口突破。

- **false**（默认值）：不开启端口突破。

>当DNAT条目和SNAT条目使用同一个公网IP地址时，如果您需要配置大于1024的端口号，您需要指定**PortBreak**为**true**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ForwardEntryId' => 
              array (
                'description' => 'DNAT条目的ID。',
                'type' => 'string',
                'example' => 'fwd-119smw5tkasdf****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A4AEE536-A97A-40EB-9EBE-53A6948A6928',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.PrivateLinkEnabled',
            'errorMessage' => 'The feature of PrivateLinkEnabled is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'UnsupportedFeature.PortSegment',
            'errorMessage' => 'The feature of PortSegment is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'ExclusiveParam.%sAnd%s',
            'errorMessage' => 'The param of %s and %s are mutually exclusive.',
          ),
          3 => 
          array (
            'errorCode' => 'DuplicatedParam.InternalPort',
            'errorMessage' => 'The param of %s is duplicated.',
          ),
          4 => 
          array (
            'errorCode' => 'DuplicatedParam.ExternalPort',
            'errorMessage' => 'The param of %s is duplicated.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.AnyPortConfig',
            'errorMessage' => 'Operation failed because any port correspondence any protocol',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.ForwardEntry',
            'errorMessage' => 'Duplicated destination ip port is unsupported.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidIp.NotInNatgw',
            'errorMessage' => 'The specified Ip not belong to natgateway.',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaExceeded.ForwardEntry',
            'errorMessage' => 'The quota of %s is exceeded, usage %s/%s.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.IpHasBeenUsedInSnat',
            'errorMessage' => 'The source ip can\'t be used. Because it has been used in snat.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidExternalIp.Malformed',
            'errorMessage' => 'The specified ExternalIp is not a valid IP address.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidInternalIp.Malformed',
            'errorMessage' => 'The specified InternalIp is not a valid IP address.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidExternalPort.Malformed',
            'errorMessage' => 'The specified ExternalPort is not a valid port.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidInternalPort.Malformed',
            'errorMessage' => 'The specified InternalPort is not a valid port.',
          ),
          15 => 
          array (
            'errorCode' => 'Forbidden.DestnationIpOutOfVpcCIDR',
            'errorMessage' => 'The specified Internal Ip is Out of VPC CIDR.',
          ),
          16 => 
          array (
            'errorCode' => 'Forbidden.DestinationIpOutOfVswitchCIDR',
            'errorMessage' => 'The specified Internal Ip is Out of VSwitch CIDR.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidProtocal.ValueNotSupported',
            'errorMessage' => 'The specified IpProtocol does not support.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorretForwardEntryStatus',
            'errorMessage' => 'Some Forward entry status blocked this operation..',
          ),
          19 => 
          array (
            'errorCode' => 'ForwardEntry.Duplicated',
            'errorMessage' => 'The specified ExternalIp, IpProtocol, ExternalPort,InternalIp, InternalPort  is duplicated',
          ),
          20 => 
          array (
            'errorCode' => 'Forbidden.ExternalIp.UsedInSnatTable',
            'errorMessage' => 'The specified ExternalIp is already used in SnatTable',
          ),
          21 => 
          array (
            'errorCode' => 'Forbindden',
            'errorMessage' => 'The specified Instance already bind eip',
          ),
          22 => 
          array (
            'errorCode' => 'Forbidden.InternalIpOutOfVpcCIDR',
            'errorMessage' => 'The specified Internal Ip is Out of VPC CIDR.',
          ),
          23 => 
          array (
            'errorCode' => 'Invalid.natgwNotExist',
            'errorMessage' => 'The specified natgateway not exist.',
          ),
          24 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Missing mandatory parameter',
          ),
          25 => 
          array (
            'errorCode' => 'AnyPort.PortMustBeZero',
            'errorMessage' => 'any port port must be zero.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          27 => 
          array (
            'errorCode' => 'IncorrectStatus.ForwardEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          28 => 
          array (
            'errorCode' => 'Duplicated.DestinationPort',
            'errorMessage' => 'The specified param DestinationPort is duplicated.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationUnsupported.EipInBinding',
            'errorMessage' => 'Create snat entry with eip in associating status is unsupported.',
          ),
          30 => 
          array (
            'errorCode' => 'QuotaExceeded.ForwardEntrySessionManytoOne',
            'errorMessage' => 'The dnat session quota is exceed.',
          ),
          31 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          32 => 
          array (
            'errorCode' => 'OperationFailed.DnatPortRangeLimit',
            'errorMessage' => 'The maximum number of port ranges that can be specified is exceeded.',
          ),
          33 => 
          array (
            'errorCode' => 'IncorrectStatus.NATGW',
            'errorMessage' => 'NATGW status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidForwardTableId.NotFound',
            'errorMessage' => 'Specified forward table does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidExternalIp.NotFound',
            'errorMessage' => 'Specified External Ip address does not found on the VRouter',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'System.Error',
            'errorMessage' => 'ERROR SYSTEM ERROR.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ForwardEntryId\\": \\"fwd-119smw5tkasdf****\\",\\n  \\"RequestId\\": \\"A4AEE536-A97A-40EB-9EBE-53A6948A6928\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateForwardEntryResponse>\\n    <ForwardEntryId>fwd-119smw5tkasdf****</ForwardEntryId>\\n    <RequestId>A4AEE536-A97A-40EB-9EBE-53A6948A6928</RequestId>\\n</CreateForwardEntryResponse>","errorExample":""}]',
      'title' => '在DNAT列表中添加DNAT条目',
      'description' => '每条DNAT条目由五部分组成，包括**ExternalIp**、**ExternalPort**、**IpProtocol**、**InternalIp**和**InternalPort**。添加DNAT条目后，NAT网关会将**ExternalIp:ExternalPort**上收到的指定协议的报文转发给**InternalIp:InternalPort**，并将回复消息原路返回。 

调用本接口添加DNAT条目时，请注意： 
     
- **CreateForwardEntry**接口属于异步接口，即系统会先返回一个DNAT条目ID，但该DNAT条目并未添加完成，系统后台的添加任务仍在进行。您可以调用[DescribeForwardTableEntries](~~36053~~)查询DNAT条目的状态：

    - 当DNAT条目处于**Pending**状态时，表示DNAT条目正在添加中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当DNAT条目处于**Available**状态时，表示DNAT条目添加完成。
 
- 所有DNAT条目的**ExternalIp**、**ExternalPort**和**IpProtocol**三个字段组成的组合必须互不重复，即不允许将同一个源IP、同一个端口、同一个协议的消息转发到多个目标ECS实例。  

- 所有DNAT条目的**IpProtocol**、**InternalIp**和**InternalPort**三个字段组成的组合也必须互不重复。  

- 一个DNAT表最多可添加100条DNAT条目。 

- DNAT条目中配置了IP映射方式的IP（公网NAT网关使用的EIP或VPC NAT网关使用的NAT IP地址）不能再被其他DNAT条目或SNAT条目使用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteForwardEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ForwardTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目所属的DNAT列表ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ftb-8vbx8xu2lqj9qb334****',
          ),
        ),
        2 => 
        array (
          'name' => 'ForwardEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的DNAT条目ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fwd-8vbn3bc8roygjp0gy****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorretForwardEntryStatus',
            'errorMessage' => 'Some Forward entry status blocked this operation..',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Missing mandatory parameter',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.NATGW',
            'errorMessage' => 'The status of the specified NAT gateway is abnormal.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.ForwardEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidForwardEntryId.NotFound',
            'errorMessage' => 'Specified forward entry ID does not exist',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidForwardTableId.NotFound',
            'errorMessage' => 'Specified forward table does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.ForwardEntry',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteForwardEntryResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteForwardEntryResponse>","errorExample":""}]',
      'title' => '删除指定的DNAT条目',
      'summary' => '调用DeleteForwardEntry接口删除指定的DNAT条目。',
      'description' => '**DeleteForwardEntry**接口属于异步接口，即系统会先返回一个请求ID，但DNAT条目并未删除完成，系统后台的删除任务仍在进行。您可以调用[DescribeForwardTableEntries](~~36053~~)查询DNAT条目的状态：

- 当DNAT条目处于**Deleting**状态时，表示DNAT条目正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当查询不到该DNAT条目时，表示DNAT条目已删除完成。

>  如果DNAT表中有DNAT条目的状态为**Pending**时，无法删除该DNAT表中的DNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyForwardEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ForwardTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目所属的DNAT列表的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ftb-8vbx8xu2lqj9qb334****',
          ),
        ),
        1 => 
        array (
          'name' => 'ForwardEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的DNAT条目的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fwd-8vbn3bc8roygjp0gy****',
          ),
        ),
        2 => 
        array (
          'name' => 'ExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当修改公网NAT网关的DNAT条目时，该参数为提供公网访问的公网IP地址。

- 当修改VPC NAT网关的DNAT条目时，该参数为供外部网络访问的NAT IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '116.85.XX.XX',
          ),
        ),
        3 => 
        array (
          'name' => 'ExternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当修改公网NAT网关的DNAT条目时，该参数为DNAT条目中进行端口转发的外部端口或端口段。
    - 修改的端口范围需要在**1**~**65535**之间。
    - 如果需要修改端口段，请在输入时以正斜线（/）隔开起始端口，例如`10/20`。
    - 如果需要同时修改**ExternalPort**和**InternalPort**，而且**ExternalPort**为端口段，则**InternalPort**也需要设置为端口段，且端口段的端口个数相同，例如**ExternalPort**设置为`10/20`，**InternalPort**设置为`80/90`。

- 当修改VPC NAT网关的DNAT条目时，该参数为被外部网络访问的端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '80',
          ),
        ),
        4 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当修改公网NAT网关的DNAT条目时，该参数为通过DNAT条目进行公网通信的ECS实例的私网IP地址。

- 当修改VPC NAT网关的DNAT条目时，该参数为需要通过DNAT规则进行通信的私网IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.0.78',
          ),
        ),
        5 => 
        array (
          'name' => 'InternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当修改公网NAT网关的DNAT条目时，该参数为DNAT条目中进行端口转发的内部端口或端口段，取值范围：**1**~**65535**。

- 当修改VPC NAT网关的DNAT条目时，该参数为需要映射的目标ECS实例端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型，取值：
           
- **TCP**：转发TCP协议的报文。
   
- **UDP**：转发UDP协议的报文。
   
- **Any**：转发所有协议的报文。   ',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'ForwardEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的DNAT条目名称。

长度为2~128个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => ' cn-hangzhou',
          ),
        ),
        9 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        10 => 
        array (
          'name' => 'PortBreak',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启端口突破，取值：

- **true**：开启端口突破。
- **false**：不开启端口突破。当DNAT条目和SNAT条目使用同一个公网IP地址时，如果您需要配置大于`1024`的端口号，您需要指定`PortBreak`为`true`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.PortSegment',
            'errorMessage' => 'The feature of PortSegment is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'ExclusiveParam.%sAnd%s',
            'errorMessage' => 'The param of %s and %s are mutually exclusive.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIp.NotInNatgw',
            'errorMessage' => 'The specified Ip not belong to natgateway.',
          ),
          3 => 
          array (
            'errorCode' => 'DuplicatedParam.InternalPort',
            'errorMessage' => 'The param of %s is duplicated.',
          ),
          4 => 
          array (
            'errorCode' => 'DuplicatedParam.ExternalPort',
            'errorMessage' => 'The param of %s is duplicated.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.AnyPortConfig',
            'errorMessage' => 'Operation failed because any port correspondence any protocol',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.ForwardEntry',
            'errorMessage' => 'Duplicated destination ip port is unsupported.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.IpHasBeenUsedInSnat',
            'errorMessage' => 'The source ip can\'t be used. Because it has been used in snat.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.ForwardEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidExternalIp.Malformed',
            'errorMessage' => 'The specified ExternalIp is not a valid IP address.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidInternalIp.Malformed',
            'errorMessage' => 'The specified InternalIp is not a valid IP address.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidExternalPort.Malformed',
            'errorMessage' => 'The specified ExternalPort is not a valid port.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidInternalPort.Malformed',
            'errorMessage' => 'The specified InternalPort is not a valid port.',
          ),
          14 => 
          array (
            'errorCode' => 'Forbidden.DestnationIpOutOfVpcCIDR',
            'errorMessage' => 'The specified Destination Ip is Out of VPC CIDR.',
          ),
          15 => 
          array (
            'errorCode' => 'Forbidden.DestinationIpOutOfVswitchCIDR',
            'errorMessage' => 'The specified Internal Ip is Out of VSwitch CIDR.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidProtocal.ValueNotSupported',
            'errorMessage' => 'The specified IpProtocol does not support.',
          ),
          17 => 
          array (
            'errorCode' => 'IncorretForwardEntryStatus',
            'errorMessage' => 'Some Forward entry status blocked this operation..',
          ),
          18 => 
          array (
            'errorCode' => 'QuotaExceeded',
            'errorMessage' => 'Forward entry quota exceeded in this route table.',
          ),
          19 => 
          array (
            'errorCode' => 'ForwardEntry.Duplicated',
            'errorMessage' => 'The specified ExternalIp, IpProtocol, ExternalPort,InternalIp, InternalPort  is duplicated',
          ),
          20 => 
          array (
            'errorCode' => 'Forbidden.ExternalIp.UsedInSnatTable',
            'errorMessage' => 'The specified ExternalIp is already used in SnatTable',
          ),
          21 => 
          array (
            'errorCode' => 'Forbidden.Already.Bounded',
            'errorMessage' => 'The specified instance  already bounded',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidIp.NotFound',
            'errorMessage' => 'The specified ip does not exist.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidParameter.Name.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          24 => 
          array (
            'errorCode' => 'IncorretStatus.ForwardEntry',
            'errorMessage' => 'The Specified forwardEntry is not stable status, can not operation',
          ),
          25 => 
          array (
            'errorCode' => 'IllegalParam.AnyPortNotZero',
            'errorMessage' => 'Any port port must be zero.',
          ),
          26 => 
          array (
            'errorCode' => 'Duplicated.DestinationPort',
            'errorMessage' => 'The specified param DestinationPort is duplicated.',
          ),
          27 => 
          array (
            'errorCode' => 'InvalidForwardEntryId.NotFound',
            'errorMessage' => 'Specified forward entry ID does not exist',
          ),
          28 => 
          array (
            'errorCode' => 'OperationUnsupported.EipInBinding',
            'errorMessage' => 'Create snat entry with eip in associating status is unsupported.',
          ),
          29 => 
          array (
            'errorCode' => 'QuotaExceeded.ForwardEntrySessionManytoOne',
            'errorMessage' => 'The dnat session quota is exceed.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.ForwardEntry',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidForwardEntryId.NotFound',
            'errorMessage' => 'Specified forward entry ID does not exist',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidExternalIp.NotFound',
            'errorMessage' => 'Specified External Ip address does not found on the VRouter',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidForwardTableId.NotFound',
            'errorMessage' => 'Specified forward table does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyForwardEntryResponse>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n</ModifyForwardEntryResponse>","errorExample":""}]',
      'title' => '修改指定的DNAT条目',
      'summary' => '调用ModifyForwardEntry接口修改指定的DNAT条目。',
      'description' => '- **ModifyForwardEntry**接口属于异步接口，即系统会先返回一个请求ID，但DNAT条目并未修改完成，系统后台的修改任务仍在进行。您可以调用[DescribeForwardTableEntries](~~36053~~)查询DNAT条目的状态：

    - 当DNAT条目处于**Pending**状态时，表示DNAT条目正在修改中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当DNAT条目处于**Available**状态时，表示DNAT条目修改完成。

- **ModifyForwardEntry**接口在同一个DNAT条目下不支持并发修改指定的DNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeForwardTableEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ForwardTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT列表的ID。 

> **ForwardTableId**和**NatGatewayId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'ftb-bp1mbjubq34hlcqpa****',
          ),
        ),
        2 => 
        array (
          'name' => 'ForwardEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'fwd-8vbn3bc8roygjp0gy****',
          ),
        ),
        3 => 
        array (
          'name' => 'ExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当查询公网NAT网关的DNAT条目时，该参数为DNAT条目中提供公网访问的弹性公网IP地址。

- 当查询VPC NAT网关的DNAT条目时，该参数为供外部网络访问的NAT IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '116.28.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'ExternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当查询公网NAT网关的DNAT条目时，该参数为进行端口转发的外部端口或端口段。
    - 查询的端口范围需要在**1**~**65535**之间。
    - 如果需要查询的是端口段，请在输入时以正斜线（/）隔开起始端口，例如`10/20`。
    - 如果查询的**ExternalPort**为端口段，查询的**InternalPort**也需要设置为端口段，且端口段的端口个数相同，例如**ExternalPort**设置为`10/20`，**InternalPort**设置为`80/90`。

- 当查询VPC NAT网关的DNAT条目时，该参数为NAT IP地址被外部网络访问的端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '8080',
          ),
        ),
        5 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网IP地址。

- 当查询公网NAT网关的DNAT条目时，该参数为通过DNAT条目进行公网通信的ECS实例的私网IP地址。

- 当查询VPC NAT网关的DNAT条目时，该参数为需要通过DNAT规则进行通信的私网IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX	',
          ),
        ),
        6 => 
        array (
          'name' => 'InternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 当查询公网NAT网关的DNAT条目时，该参数为进行端口转发的内部端口或端口段，取值范围：**1**~**65535**。

- 当查询VPC NAT网关的DNAT条目时，该参数为需要映射的目标ECS实例端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '80',
          ),
        ),
        7 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型，取值：

- **tcp**：转发TCP协议的报文。

- **udp**：转发UDP协议的报文。

- **any**：转发所有协议的报文。',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
          ),
        ),
        8 => 
        array (
          'name' => 'ForwardEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目的名称。

名称长度为2~128个字符，以大小写字母或中文开头， 可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ForwardEntry-1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        11 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的ID。

> **ForwardTableId**和**NatGatewayId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A6C4A8B1-7561-4509-949C-20DEB40D71E6',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'ForwardTableEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ForwardTableEntry' => 
                  array (
                    'description' => '查询的DNAT列表详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '查询的DNAT列表详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'DNAT条目的状态，取值：

- **Pending**：配置中，可能是创建中或修改中。

- **Available**：可用。

- **Deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'ForwardEntryId' => 
                        array (
                          'description' => 'DNAT条目的ID。 ',
                          'type' => 'string',
                          'example' => 'fwd-119smw5tk****',
                        ),
                        'InternalIp' => 
                        array (
                          'description' => '私网IP地址。

- 当查询公网NAT网关的DNAT条目时，该返回参数为通过DNAT条目进行公网通信的ECS实例的私网IP地址。

- 当查询VPC NAT网关的DNAT条目时，该返回参数为需要通过DNAT规则进行通信的私网IP地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'InternalPort' => 
                        array (
                          'description' => '

- 当查询公网NAT网关的DNAT条目时，该参数为进行端口转发的内部端口或端口段。

- 当查询VPC NAT网关的DNAT条目时，该参数为需要映射的目标ECS实例端口。',
                          'type' => 'string',
                          'example' => '25',
                        ),
                        'ForwardEntryName' => 
                        array (
                          'description' => 'DNAT条目的名称。',
                          'type' => 'string',
                          'example' => 'ForwardEntry-1',
                        ),
                        'ForwardTableId' => 
                        array (
                          'description' => 'DNAT条目所属DNAT表的ID。 ',
                          'type' => 'string',
                          'example' => 'ftb-11tc6xgmv****',
                        ),
                        'IpProtocol' => 
                        array (
                          'description' => '协议类型，取值：

- **tcp**：转发TCP协议的报文。

- **udp**：转发UDP协议的报文。

- **any**：转发所有协议的报文。',
                          'type' => 'string',
                          'example' => 'tcp',
                        ),
                        'ExternalPort' => 
                        array (
                          'description' => '
- 当查询公网NAT网关的DNAT条目时，该返回参数为进行端口转发的外部端口或端口段。

- 当查询VPC NAT网关的DNAT条目时，该返回参数为NAT IP地址被外部网络访问的端口。',
                          'type' => 'string',
                          'example' => '80',
                        ),
                        'ExternalIp' => 
                        array (
                          'description' => '- 当查询公网NAT网关的DNAT条目时，该返回参数为DNAT条目中提供公网访问的公网IP地址。

- 当查询VPC NAT网关的DNAT条目时，该返回参数为供外部网络访问的NAT IP地址。',
                          'type' => 'string',
                          'example' => '139.79.XX.XX',
                        ),
                        'NatGatewayId' => 
                        array (
                          'description' => 'DNAT条目所属的NAT网关的ID。',
                          'type' => 'string',
                          'example' => 'ngw-bp1uewa15k4iy5770****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorretForwardEntryStatus',
            'errorMessage' => 'Some Forward entry status blocked this operation..',
          ),
          1 => 
          array (
            'errorCode' => 'DESCRIBE_FORWARD_PARAM_INVALID',
            'errorMessage' => 'ForwardTableId and natGatewayId can not both be null',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidForwardTableId.NotFound',
            'errorMessage' => 'Specified forwardTableId does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"A6C4A8B1-7561-4509-949C-20DEB40D71E6\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 5,\\n  \\"ForwardTableEntries\\": {\\n    \\"ForwardTableEntry\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"ForwardEntryId\\": \\"fwd-119smw5tk****\\",\\n        \\"InternalIp\\": \\"192.168.XX.XX\\",\\n        \\"InternalPort\\": \\"25\\",\\n        \\"ForwardEntryName\\": \\"ForwardEntry-1\\",\\n        \\"ForwardTableId\\": \\"ftb-11tc6xgmv****\\",\\n        \\"IpProtocol\\": \\"tcp\\",\\n        \\"ExternalPort\\": \\"80\\",\\n        \\"ExternalIp\\": \\"139.79.XX.XX\\",\\n        \\"NatGatewayId\\": \\"ngw-bp1uewa15k4iy5770****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeForwardTableEntriesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>A6C4A8B1-7561-4509-949C-20DEB40D71E6</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>5</TotalCount>\\n    <ForwardTableEntries>\\n        <Status>Available</Status>\\n        <ForwardEntryId>fwd-119smw5tk****</ForwardEntryId>\\n        <InternalIp>192.168.XX.XX</InternalIp>\\n        <InternalPort>25</InternalPort>\\n        <ForwardEntryName>ForwardEntry-1</ForwardEntryName>\\n        <ForwardTableId>ftb-11tc6xgmv****</ForwardTableId>\\n        <IpProtocol>TCP</IpProtocol>\\n        <ExternalPort>80</ExternalPort>\\n        <ExternalIp>139.79.XX.XX</ExternalIp>\\n        <NatGatewayId>ngw-bp1uewa15k4iy5770****</NatGatewayId>\\n    </ForwardTableEntries>\\n</DescribeForwardTableEntriesResponse>","errorExample":""}]',
      'title' => '查询已创建的DNAT条目',
      'summary' => '调用DescribeForwardTableEntries接口查询已创建的DNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateFullNatEntry' => 
    array (
      'summary' => '调用CreateFullNatEntry接口在FULLNAT列表中添加FULLNAT条目。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        1 => 
        array (
          'name' => 'FullNatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'FullNAT条目所属的FullNAT列表的ID。',
            'description' => 'FullNAT条目所属的FullNAT列表的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fulltb-gw88z7hhlv43rmb26****',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eni-gw8g131ef2dnbu3k****',
          ),
        ),
        3 => 
        array (
          'name' => 'NatIp',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '提供入方向访问的IP地址，该公网IP需要是当前VpcNat下的NatIP',
            'description' => '提供地址转换的NAT IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'NatIpPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要进行端口转发的外部端口，取值范围：1~65535。',
            'description' => '需要修改的FULLNAT端口映射的前端端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '80',
          ),
        ),
        5 => 
        array (
          'name' => 'AccessIp',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要进行转发的后端IP',
            'description' => '需要修改的FULLNAT地址转换的后端IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'AccessPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要进行端口转发的内部端口，取值范围：1~65535。',
            'description' => '需要修改的FULLNAT端口映射的后端端口，取值范围：**1**~**65535**。',
            'type' => 'string',
            'required' => true,
            'example' => '80',
          ),
        ),
        7 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '协议类型，取值： • TCP：转发TCP协议的报文。 • UDP：转发UDP协议的报文。',
            'description' => '转发端口的协议类型，取值：

-  **TCP**：转发TCP协议的报文。 
-  **UDP**：转发UDP协议的报文。',
            'type' => 'string',
            'required' => true,
            'example' => 'TCP',
          ),
        ),
        8 => 
        array (
          'name' => 'FullNatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'FULLNAT规则的名称。 长度为2~128个字符，必须以大小写字母或中文开头，但不能以http://或https://开头。',
            'description' => 'FULLNAT条目的名称。 长度为2~128个字符，必须以大小写字母或中文开头，但不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        9 => 
        array (
          'name' => 'FullNatEntryDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'FULLNAT条目的描述信息。

描述可以为空；或填写2~256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        10 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会添加FULLNAT条目。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并添加FULLNAT条目。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要添加FULLNAT条目的VPC NAT网关所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
              'FullNatEntryId' => 
              array (
                'description' => 'FULLNAT条目的ID。',
                'type' => 'string',
                'example' => 'fullnat-gw8fz23jezpbblf1j****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParamFormat.NatIp',
            'errorMessage' => 'The param format of %s[%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'UnsupportedFeature.PrivateLinkMode',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.FullNatEntry',
            'errorMessage' => 'The quota of %s is exceeded, usage %s/%s.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyExist.FullNatEntry',
            'errorMessage' => 'The specified resource of %s is already exist.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.NetworkInterface',
            'errorMessage' => 'The status of  network interface is incorrect.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.AllocateNatIpPortFailed',
            'errorMessage' => 'NatIpPort allocation failed.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The NatGateway instance not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\",\\n  \\"FullNatEntryId\\": \\"fullnat-gw8fz23jezpbblf1j****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateFullNatEntryResponse>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n    <FullNatEntryId>fullnat-gw8fz23jezpbblf1j****</FullNatEntryId>\\n</CreateFullNatEntryResponse>","errorExample":""}]',
      'title' => '添加FULLNAT条目',
      'description' => '**CreateFullNatEntry**接口属于异步接口，即系统会先返回一个FULLNAT条目，但该FULLNAT条目并未添加完成，系统后台的添加任务仍在进行。您可以调用[ListFullNatEntries](~~348779~~)查询FULLNAT条目添加的状态：
- 当FULLNAT条目处于**Creating**状态时，表示FULLlNAT条目正在添加中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当FULLNAT条目处于**Available**状态时，表示FULLlNAT条目已添加完成。',
    ),
    'DeleteFullNatEntry' => 
    array (
      'summary' => '调用DeleteFullNatEntry接口删除FULLNAT条目。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        1 => 
        array (
          'name' => 'FullNatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'FullNAT条目所属的FullNAT列表的ID。',
            'description' => '要删除的FULLNAT条目所属的FULLNAT表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fulltb-gw88z7hhlv43rmb26****',
          ),
        ),
        2 => 
        array (
          'name' => 'FullNatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要修改的DNAT条目的ID。',
            'description' => '要删除的FULLNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fullnat-gw8fz23jezpbblf1j****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除FULLNAT条目。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码DryRunOperation。
- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并删除FULLNAT条目。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的FULLNAT条目所在VPC NAT网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2BCC426F-A9F2-3F03-99D2-1E0D647236DB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.FullNatEntry',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FullNatEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.FullNatTableId',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2BCC426F-A9F2-3F03-99D2-1E0D647236DB\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteFullNatEntryResponse>\\n    <RequestId>2BCC426F-A9F2-3F03-99D2-1E0D647236DB</RequestId>\\n</DeleteFullNatEntryResponse>","errorExample":""}]',
      'title' => '删除FULLNAT条目',
      'description' => '**DeleteFullNatEntry**接口属于异步接口，即系统会先返回一个请求ID，但该FULLNAT条目并未删除完成，系统后台的删除任务仍在进行。您可以调用[ListFullNatEntries](~~348779~~)查询删除FULLNAT条目的状态：

- 当FULLNAT条目处于**Deleting**状态时，表示FULLNAT条目正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当查询不到该FULLNAT条目时，表示该FULLNAT条目删除完成。',
    ),
    'ModifyFullNatEntryAttribute' => 
    array (
      'summary' => '调用ModifyFullNatEntryAttribute接口修改FULLNAT条目。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        1 => 
        array (
          'name' => 'FullNatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fulltb-gw88z7hhlv43rmb26****',
          ),
        ),
        2 => 
        array (
          'name' => 'FullNatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fullnat-gw8fz23jezpbblf1j****',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的弹性网卡ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-gw8g131ef2dnbu3k****',
          ),
        ),
        4 => 
        array (
          'name' => 'NatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的NAT IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'NatIpPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT端口映射的前端端口，取值：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'AccessIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT地址转换的后端IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.XX.XX',
          ),
        ),
        7 => 
        array (
          'name' => 'AccessPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT端口映射的后端端口，取值：**1**~**65535**。',
            'type' => 'string',
            'required' => false,
            'example' => '80',
          ),
        ),
        8 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发端口的协议类型，取值：

- **TCP**：转发TCP协议的报文。 
- **UDP**：转发UDP协议的报文。',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        9 => 
        array (
          'name' => 'FullNatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT条目名称，即修改后的名称。

长度为2~128个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'modify',
          ),
        ),
        10 => 
        array (
          'name' => 'FullNatEntryDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT条目的描述信息，即修改后的描述信息。

描述可以为空；或填写2~256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abcd',
          ),
        ),
        11 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改FULLNAT条目。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并修改FULLNAT条目。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的FULLNAT条目所在VPC NAT网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterfaceId',
            'errorMessage' => 'The specified resource is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceAlreadyExist.FullNatEntry',
            'errorMessage' => 'The specified resource of %s is already exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'UnsupportedFeature.PrivateLinkMode',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.PrivateLinkMode',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyFullNatEntryAttributeResponse>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n</ModifyFullNatEntryAttributeResponse>","errorExample":""}]',
      'title' => '修改FULLNAT条目',
      'description' => '- **ModifyFullNatEntryAttribute**接口属于异步接口，即系统会先返回一个请求ID，但该FULLNAT条目并未修改完成，系统后台的修改任务仍在进行。您可以调用[ListFullNatEntries](~~348779~~)查询FULLNAT条目的修改状态：

    - 当FULLNAT条目处于**Modifying**状态时，表示FULLNAT条目正在修改中，在该状态下，您只能执行查询操作，不能执行其他操作。

    - 当FULLNAT条目处于**Available**状态时，表示FULLNAT条目修改完成。

- **ModifyFullNatEntryAttribute**接口在同一个FULLNAT条目下不支持并发修改指定的FULLNAT条目。',
    ),
    'ListFullNatEntries' => 
    array (
      'summary' => '调用ListFullNatEntries接口查询FULLNAT条目的列表信息。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        1 => 
        array (
          'name' => 'FullNatTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的FULLNAT条目所属的FULLNAT表ID。


>**FullNatTableId**和**NatGatewayId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'fulltb-gw88z7hhlv43rmb26****',
          ),
        ),
        2 => 
        array (
          'name' => 'FullNatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的FULLNAT条目ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'fullnat-gw8fz23jezpbblf1j****',
          ),
        ),
        3 => 
        array (
          'name' => 'FullNatEntryNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的FULLNAT条目的名称。最多支持查询20个FULLNAT条目的名称。

名称长度在2~128个字符之间，以英文字母或中文开头，可包含数字、短划线（-）和下划线（_）。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要查询的FULLNAT条目的名称。最多支持输入20个FULLNAT条目的名称。

名称长度在2~128个字符之间，以英文字母或中文开头，可包含数字、短划线（-）和下划线（_）。
',
              'type' => 'string',
              'required' => false,
              'example' => 'test',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        4 => 
        array (
          'name' => 'NetworkInterfaceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的弹性网卡ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要查询的弹性网卡ID。最多支持输入20个弹性网卡ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-gw80wedm8pq0tpr2****',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2be03f84eb48b699f0a4883',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询FULLNAT条目所属VPC NAT网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eu-central-1',
          ),
        ),
        8 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发端口的协议类型，取值：

- **TCP**：转发TCP协议的报文。
-  **UDP**：转发UDP协议的报文。',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        9 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT网关的ID。

>**FullNatTableId**和**NatGatewayId**参数至少输入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'ngw-bp1uewa15k4iy5770****',
          ),
        ),
        10 => 
        array (
          'name' => 'NatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的FULLNAT条目的NAT IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.XX.XX',
          ),
        ),
        11 => 
        array (
          'name' => 'NatIpPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的FULLNAT条目的前端端口值，取值范围：1～65535。',
            'type' => 'string',
            'required' => false,
            'example' => '443',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F03E41F6-1A74-311F-8D98-124EEE9F37B8',
              ),
              'NatGatewayId' => 
              array (
                'description' => 'VPC NAT网关的实例ID。',
                'type' => 'string',
                'example' => 'ngw-gw8054kn57y3hq3bv****',
              ),
              'FullNatTableId' => 
              array (
                'description' => '查询的FULLNAT条目所属的FULLNAT表的ID。',
                'type' => 'string',
                'example' => 'fullnat-gw8fz23jezpbblf1j****',
              ),
              'TotalCount' => 
              array (
                'description' => '查询的FULLNAT条目的结果个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一个查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一个查询开始的令牌。',
                'type' => 'string',
                'example' => 'caeba0bbb2be03f84eb48b699f0a4883',
              ),
              'MaxResults' => 
              array (
                'description' => '查询的最大结果个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'FullNatEntries' => 
              array (
                'description' => '查询的FULLNAT条目的列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询的FULLNAT条目的列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NatIp' => 
                    array (
                      'title' => 'DNAT条目中提供公网访问的公网IP地址。',
                      'description' => 'FULLNAT条目中提供地址转换的NAT IP地址。',
                      'type' => 'string',
                      'example' => '192.168.XX.XX',
                    ),
                    'NatIpPort' => 
                    array (
                      'title' => 'DNAT条目中进行端口转发的外部端口，取值范围：1~65535。',
                      'description' => 'FULLNAT条目中进行端口映射的前端端口，取值范围：**1**~**65535**。',
                      'type' => 'string',
                      'example' => '80',
                    ),
                    'AccessIp' => 
                    array (
                      'title' => '通过DNAT条目进行公网通信的ECS实例的私网IP地址。',
                      'description' => 'FULLNAT条目中进行FULLNAT地址转换的后端IP地址。',
                      'type' => 'string',
                      'example' => '192.168.XX.XX',
                    ),
                    'AccessPort' => 
                    array (
                      'title' => 'DNAT条目中进行端口转发的内部端口，取值范围：1-65535。',
                      'description' => 'FULLNAT条目中进行端口映射的后端端口，取值范围：**1**~**65535**。',
                      'type' => 'string',
                      'example' => '80',
                    ),
                    'IpProtocol' => 
                    array (
                      'title' => '协议类型，取值： • TCP：转发TCP协议的报文。 • UDP：转发UDP协议的报文。',
                      'description' => '转发协议类型，取值： 

- **TCP**：转发TCP协议的报文。 
- **UDP**：转发UDP协议的报文。',
                      'type' => 'string',
                      'example' => 'TCP',
                    ),
                    'NetworkInterfaceId' => 
                    array (
                      'title' => '当前VpcNat作为服务资源所加入的eni',
                      'description' => '弹性网卡ID。',
                      'type' => 'string',
                      'example' => 'eni-gw80wedm8pq0tpr2****',
                    ),
                    'NetworkInterfaceType' => 
                    array (
                      'title' => 'ENI类型，目前仅支持Endpoint',
                      'description' => '弹性网卡的类型，目前仅取值为**Endpoint**（反向终端节点）。',
                      'type' => 'string',
                      'example' => 'Endpoint',
                    ),
                    'FullNatEntryName' => 
                    array (
                      'title' => 'FULLNAT规则的名称。 长度为2~128个字符，必须以大小写字母或中文开头，但不能以http://或https://开头。',
                      'description' => 'FULLNAT条目的名称。 


名称长度在2~128个字符之间，以英文字母或中文开头，可包含数字、短划线（-）和下划线（_）。
',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'FullNatEntryDescription' => 
                    array (
                      'description' => 'FULLNAT条目的描述信息。

长度为2~128个字符，必须以大小写字母或中文开头，但不能以`http://`或`https://`开头。',
                      'type' => 'string',
                      'example' => 'abc',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => 'FULLNAT条目的创建时间。',
                      'type' => 'string',
                      'example' => '2021-10-27T02:44:40Z',
                    ),
                    'FullNatEntryId' => 
                    array (
                      'description' => 'FULLNAT条目的ID。',
                      'type' => 'string',
                      'example' => 'fullnat-gw8fz23jezpbblf1j****',
                    ),
                    'FullNatEntryStatus' => 
                    array (
                      'description' => 'FULLNAT条目的状态，取值：

- **Pending**：配置中。
- **Available**：可用。
- **Deleting**：删除中。
- **Deleted**：已删除。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'FullNatTableId' => 
                    array (
                      'description' => 'FullNAT条目所属的FullNAT列表的ID。',
                      'type' => 'string',
                      'example' => 'fulltb-gw88z7hhlv43rmb26****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.FullNatTableId',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.FullnatTableIdOrNatGatewayId',
            'errorMessage' => 'FullnatTableId and natGatewayId can not both be null',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.FullNatTable',
            'errorMessage' => 'The NAT gateway has no full nat table.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F03E41F6-1A74-311F-8D98-124EEE9F37B8\\",\\n  \\"NatGatewayId\\": \\"ngw-gw8054kn57y3hq3bv****\\",\\n  \\"FullNatTableId\\": \\"fullnat-gw8fz23jezpbblf1j****\\",\\n  \\"TotalCount\\": 1,\\n  \\"NextToken\\": \\"caeba0bbb2be03f84eb48b699f0a4883\\",\\n  \\"MaxResults\\": 1,\\n  \\"FullNatEntries\\": [\\n    {\\n      \\"NatIp\\": \\"192.168.XX.XX\\",\\n      \\"NatIpPort\\": \\"80\\",\\n      \\"AccessIp\\": \\"192.168.XX.XX\\",\\n      \\"AccessPort\\": \\"80\\",\\n      \\"IpProtocol\\": \\"TCP\\",\\n      \\"NetworkInterfaceId\\": \\"eni-gw80wedm8pq0tpr2****\\",\\n      \\"NetworkInterfaceType\\": \\"Endpoint\\",\\n      \\"FullNatEntryName\\": \\"test\\",\\n      \\"FullNatEntryDescription\\": \\"abc\\",\\n      \\"CreationTime\\": \\"2021-10-27T02:44:40Z\\",\\n      \\"FullNatEntryId\\": \\"fullnat-gw8fz23jezpbblf1j****\\",\\n      \\"FullNatEntryStatus\\": \\"Available\\",\\n      \\"FullNatTableId\\": \\"fulltb-gw88z7hhlv43rmb26****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListFullNatEntriesResponse>\\n    <RequestId>F03E41F6-1A74-311F-8D98-124EEE9F37B8</RequestId>\\n    <NatGatewayId>ngw-gw8054kn57y3hq3bv****</NatGatewayId>\\n    <FullNatTableId>fullnat-gw8fz23jezpbblf1j****</FullNatTableId>\\n    <TotalCount>1</TotalCount>\\n    <NextToken>caeba0bbb2be03f84eb48b699f0a4883</NextToken>\\n    <MaxResults>1</MaxResults>\\n    <FullNatEntries>\\n        <NatIp>192.168.XX.XX</NatIp>\\n        <NatIpPort>80</NatIpPort>\\n        <AccessIp>192.168.XX.XX</AccessIp>\\n        <AccessPort>80</AccessPort>\\n        <IpProtocol>TCP</IpProtocol>\\n        <NetworkInterfaceId>eni-gw80wedm8pq0tpr2****</NetworkInterfaceId>\\n        <NetworkInterfaceType>Endpoint</NetworkInterfaceType>\\n        <FullNatEntryName>test</FullNatEntryName>\\n        <FullNatEntryDescription>abc</FullNatEntryDescription>\\n        <CreationTime>2021-10-27T02:44:40Z</CreationTime>\\n        <FullNatEntryId>fullnat-gw8fz23jezpbblf1j****</FullNatEntryId>\\n        <FullNatEntryStatus>Available</FullNatEntryStatus>\\n        <FullNatTableId>fulltb-gw88z7hhlv43rmb26****</FullNatTableId>\\n    </FullNatEntries>\\n</ListFullNatEntriesResponse>","errorExample":""}]',
      'title' => '查询FULLNAT条目的列表信息',
    ),
    'CreateNatIp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建NAT IP地址所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT IP地址所属的VPC NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-gw8v16wgvtq26vh59****',
          ),
        ),
        2 => 
        array (
          'name' => 'NatIpName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的NAT IP地址的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'newnatip',
          ),
        ),
        3 => 
        array (
          'name' => 'NatIpDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的NAT IP地址的描述信息。

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会创建NAT IP地址。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并创建NAT IP地址。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        6 => 
        array (
          'name' => 'NatIpCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建NAT IP地址的地址段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.0.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'NatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的NAT IP地址。

如果您不指定该IP地址，系统会在您的NAT IP地址段中随机分配一个IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.34',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建NAT IP地址所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建的NAT IP地址。',
            'type' => 'object',
            'properties' => 
            array (
              'NatIp' => 
              array (
                'description' => '创建的NAT IP地址。',
                'type' => 'string',
                'example' => '192.168.0.34',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9AD97A0-5338-43F8-8A80-5E274CCBA11B',
              ),
              'NatIpId' => 
              array (
                'description' => '创建的NAT IP地址实例ID。',
                'type' => 'string',
                'example' => 'vpcnatip-gw8y7q3cpk3fggs8****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Mismatch.NatIpAndNatIpCidr',
            'errorMessage' => 'The %s and %s are mismatched.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIpCidr',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => '%The status of %s [%s] is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.NatIp',
            'errorMessage' => 'The quota of %s is exceeded, usage %s/%s.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyExist.NatIp',
            'errorMessage' => 'The specified resource of %s is already exist.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotEnough.SwitchAvailableIps',
            'errorMessage' => 'The available private Ip number is not enough in your subnet.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotEnough.NatIp',
            'errorMessage' => 'The specified resource of NatIp is not enough.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NatIp\\": \\"192.168.0.34\\",\\n  \\"RequestId\\": \\"E9AD97A0-5338-43F8-8A80-5E274CCBA11B\\",\\n  \\"NatIpId\\": \\"vpcnatip-gw8y7q3cpk3fggs8****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateNatIpResponse>\\n    <NatIp>192.168.0.34</NatIp>\\n    <RequestId>E9AD97A0-5338-43F8-8A80-5E274CCBA11B</RequestId>\\n    <NatIpId>vpcnatip-gw8y7q3cpk3fggs8****</NatIpId>\\n</CreateNatIpResponse>","errorExample":""}]',
      'title' => '创建NAT IP地址',
      'summary' => '调用CreateNatIp接口创建NAT IP地址。',
      'description' => '**CreateNatIp**接口属于异步接口，即系统会先返回一个NAT IP地址，但该NAT IP地址并未创建完成，系统后台的创建任务仍在进行。您可以调用[ListNatIps](~~287000~~)查询NAT IP地址创建的状态：

- 当NAT IP地址处于**Creating**状态时，表示NAT IP地址正在创建中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当NAT IP地址处于**Available**状态时，表示NAT IP地址创建完成。

**CreateNatIp**接口在同一个NAT网关内不支持并发创建NAT IP地址。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteNatIp' => 
    array (
      'summary' => '调用DeleteNatIp接口删除NAT IP地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT IP地址所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'NatIpId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT IP地址实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpcnatip-gw8y7q3cpk3fggs87****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除NAT IP地址。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并删除NAT IP地址。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT IP地址所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-qingdao',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9AD97A0-5338-43F8-8A80-5E274CCBA11B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.NatIp',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.DefaultNatIp',
            'errorMessage' => 'The operation is failed because of default NatIP can not be deleted.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.NatIp',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.FullNatEntry',
            'errorMessage' => 'The fullnat entry depends on this nat ip,so the operation cannot be completed.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIpCidr',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E9AD97A0-5338-43F8-8A80-5E274CCBA11B\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNatIpResponse>\\n    <RequestId>E9AD97A0-5338-43F8-8A80-5E274CCBA11B</RequestId>\\n</DeleteNatIpResponse>","errorExample":""}]',
      'title' => '删除NAT IP地址',
      'description' => '**DeleteNatIp**接口属于异步接口，即系统会先返回一个请求ID，但该NAT IP地址并未删除完成，系统后台的删除任务仍在进行。您可以调用[ListNatIps](~~281979~~)查询NAT IP地址的删除状态：

- 当NAT IP地址处于**Deleting**状态时，表示NAT IP地址正在删除中，在该状态下，您只能执行查询操作，不能执行其他操作。

- 当查询不到该NAT IP地址时，表示NAT IP地址已删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyNatIpAttribute' => 
    array (
      'summary' => '调用ModifyNatIpAttribute接口修改NAT IP地址的名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatIpId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpcnatip-gw8e1n11f44wpg****',
          ),
        ),
        2 => 
        array (
          'name' => 'NatIpName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'newname',
          ),
        ),
        3 => 
        array (
          'name' => 'NatIpDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址的描述信息。

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改NAT IP地址的信息。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并修改NAT IP地址的信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6CC9456C-2E29-452A-9180-B6926E51B5CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIp',
            'errorMessage' => 'The specified resource of NatIp is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6CC9456C-2E29-452A-9180-B6926E51B5CA\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyNatIpAttributeResponse>\\n    <RequestId>6CC9456C-2E29-452A-9180-B6926E51B5CA</RequestId>\\n</ModifyNatIpAttributeResponse>","errorExample":""}]',
      'title' => '修改NAT IP地址的名称和描述',
      'description' => '**ModifyNatIpAttribute**接口不支持并发修改同一个NAT IP地址的名称和描述。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListNatIps' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址列表所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询NAT IP地址所属NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-gw8v16wgvtq26vh59****',
          ),
        ),
        2 => 
        array (
          'name' => 'NatIpCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址所在的地址段。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '192.168.0.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会查询NAT IP地址列表。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        5 => 
        array (
          'name' => 'NatIpStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的NAT IP地址的状态。取值：

- **Available**：可用状态。
- **Deleting**：删除中。
- **Creating**：创建中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****f84eb48b699f0a4883',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'string',
            'required' => false,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'NatIpName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址的名称。**N**取值为**1**~**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要查询的NAT IP地址的名称。**N**取值为**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'test',
            ),
            'required' => false,
            'example' => 'test',
            'maxItems' => 100,
          ),
        ),
        9 => 
        array (
          'name' => 'NatIpIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址实例ID。**N**取值为**1**~**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要查询的NAT IP地址实例ID。**N**取值为**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpcnatcidr-gw8ov42ei6xh1jys2****',
            ),
            'required' => false,
            'example' => 'vpcnatip-gw8a863sut1zijxh0****',
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址列表所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7E78CEEA-BF8F-44D1-9DCD-D9141135B71E',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的NAT IP地址结果数目。',
                'type' => 'string',
                'example' => '1',
              ),
              'NatIps' => 
              array (
                'description' => 'NAT IP地址列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IsDefault' => 
                    array (
                      'description' => '是否是默认NAT IP地址。取值：

- **true**：是默认NAT IP地址。

- **false**：不是默认NAT IP地址。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'NatIp' => 
                    array (
                      'description' => '查询的NAT IP地址。',
                      'type' => 'string',
                      'example' => '192.168.0.126',
                    ),
                    'NatIpCidr' => 
                    array (
                      'description' => '查询的NAT IP地址所在的地址段。',
                      'type' => 'string',
                      'example' => '192.168.0.0/24',
                    ),
                    'NatIpId' => 
                    array (
                      'description' => '查询的NAT IP地址实例ID。',
                      'type' => 'string',
                      'example' => 'vpcnatip-gw8a863sut1zijxh0****',
                    ),
                    'NatIpDescription' => 
                    array (
                      'description' => '查询的NAT IP地址的描述信息。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'NatGatewayId' => 
                    array (
                      'description' => '查询的NAT IP地址所属的VPC NAT网关实例ID。',
                      'type' => 'string',
                      'example' => 'ngw-gw8v16wgvtq26vh59****',
                    ),
                    'NatIpName' => 
                    array (
                      'description' => '查询的NAT IP地址的名称。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'NatIpStatus' => 
                    array (
                      'description' => '查询的NAT IP地址的状态。取值：

- **Available**：可用状态。
- **Deleted**：已删除。
- **Deleting**：删除中。
- **Creating**：创建中。
- **Associated**：已关联SNAT或DNAT条目。
- **Associating**：关联SNAT或DNAT条目中。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"7E78CEEA-BF8F-44D1-9DCD-D9141135B71E\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"NatIps\\": [\\n    {\\n      \\"IsDefault\\": true,\\n      \\"NatIp\\": \\"192.168.0.126\\",\\n      \\"NatIpCidr\\": \\"192.168.0.0/24\\",\\n      \\"NatIpId\\": \\"vpcnatip-gw8a863sut1zijxh0****\\",\\n      \\"NatIpDescription\\": \\"default\\",\\n      \\"NatGatewayId\\": \\"ngw-gw8v16wgvtq26vh59****\\",\\n      \\"NatIpName\\": \\"default\\",\\n      \\"NatIpStatus\\": \\"Available\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListNatIpsResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>7E78CEEA-BF8F-44D1-9DCD-D9141135B71E</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <NatIps>\\n        <IsDefault>true</IsDefault>\\n        <NatIp>192.168.0.126</NatIp>\\n        <NatIpCidr>192.168.0.0/24</NatIpCidr>\\n        <NatIpId>vpcnatip-gw8a863sut1zijxh0****</NatIpId>\\n        <NatIpDescription>default</NatIpDescription>\\n        <NatGatewayId>ngw-gw8v16wgvtq26vh59****</NatGatewayId>\\n        <NatIpName>default</NatIpName>\\n        <NatIpStatus>Available</NatIpStatus>\\n    </NatIps>\\n</ListNatIpsResponse>","errorExample":""}]',
      'title' => '查询NAT IP地址列表',
      'summary' => '调用ListNatIps接口查询NAT IP地址列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateNatIpCidr' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待创建的NAT IP地址段所属的NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建NAT IP地址段所属的VPC NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-gw8v16wgvtq26vh59****',
          ),
        ),
        2 => 
        array (
          'name' => 'NatIpCidrName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT IP地址段的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'newcidr',
          ),
        ),
        3 => 
        array (
          'name' => 'NatIpCidrDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT IP地址段的描述信息。

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mycidr',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建NAT IP地址段。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        6 => 
        array (
          'name' => 'NatIpCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的NAT IP地址段。

新建的地址段必须满足以下条件：

- 属于10.0.0.0/8、172.16.0.0/12或192.168.0.0/16网段及其子网。
- 支持的子网掩码位数范围为16至32位。
- 不能与VPC NAT网关所属VPC的私网网段重叠。如果您需要将私网地址转换为VPC私网网段内的其他地址，请在对应的VPC私网网段内创建交换机，然后在该交换机中创建新的VPC NAT网关提供私网地址转换服务。
- 如需使用公网地址段作为NAT IP地址段，则该地址段必须属于VPC NAT网关所属VPC的用户网段。关于用户网段的更多信息，请参见[什么是用户网段](~~185311~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '172.16.0.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待创建的NAT IP地址段所属的NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NatIpCidrId' => 
              array (
                'description' => '创建的NAT IP地址段的实例ID。',
                'type' => 'string',
                'example' => 'vpcnatcidr-gw8lhqtvdn4qnea****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7021BEB1-210F-48A9-AB82-BE9A9110BB89',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.NatIpCidrInUse',
            'errorMessage' => 'The operation is failed because of %s.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.NatIpCidr',
            'errorMessage' => 'The quota of %s is exceeded, usage %s/%s.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.CreateNatIpCidrInVpcCidrBlock',
            'errorMessage' => 'The operation is failed because of Creating NatIpCidr in Vpc Cidr.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.CreateNatIpCidrNotInUserCidr',
            'errorMessage' => 'The operation is failed because of Creating NatIpCidr not in UserCidr.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyExist.NatIpCidr',
            'errorMessage' => 'The specified resource of %s is already exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.NatGateway',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.VPC',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NatIpCidrId\\": \\"vpcnatcidr-gw8lhqtvdn4qnea****\\",\\n  \\"RequestId\\": \\"7021BEB1-210F-48A9-AB82-BE9A9110BB89\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateNatIpCidrResponse>\\n    <NatIpCidrId>vpcnatcidr-gw8lhqtvdn4qnea****</NatIpCidrId>\\n    <RequestId>7021BEB1-210F-48A9-AB82-BE9A9110BB89</RequestId>\\n</CreateNatIpCidrResponse>","errorExample":""}]',
      'title' => '创建NAT IP地址段',
      'summary' => '调用CreateNatIpCidr接口创建NAT IP地址段。',
      'description' => '**CreateNatIpCidr**接口在同一个NAT网关内不支持并发创建NAT IP的地址段。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteNatIpCidr' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT IP地址段所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatIpCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT IP地址段。

- 删除NAT IP地址段前需要将该地址段中的NAT IP地址全部删除。
- 默认NAT IP地址段不能删除。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.16.0.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除NAT IP地址段。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并删除NAT IP地址段。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        4 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除NAT IP地址段所属的NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-gw8v16wgvtq26vh59****',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT IP地址段所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7021BEB1-210F-48A9-AB82-BE9A9110BB89',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIpCidr',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.DefaultNatIpCidr',
            'errorMessage' => 'The operation is failed because of default NatIPCidr can not be deleted.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.NatIp',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.NatGateway',
            'errorMessage' => '%The status of %s [%s] is incorrect.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7021BEB1-210F-48A9-AB82-BE9A9110BB89\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNatIpCidrResponse>\\n    <RequestId>7021BEB1-210F-48A9-AB82-BE9A9110BB89</RequestId>\\n</DeleteNatIpCidrResponse>","errorExample":""}]',
      'title' => '删除NAT IP地址段',
      'summary' => '调用DeleteNatIpCidr接口删除NAT IP地址段。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyNatIpCidrAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址段所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatIpCidrName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址段的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'newname',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改NAT IP地址段的信息。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并修改NAT IP地址段的信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        4 => 
        array (
          'name' => 'NatIpCidrDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址段的描述信息。

长度为2～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'newtest',
          ),
        ),
        5 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址段所属的VPC NAT网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-gw8v16wgvtq26vh59****',
          ),
        ),
        6 => 
        array (
          'name' => 'NatIpCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.16.0.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的NAT IP地址段所属NAT网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.NatIpCidr',
            'errorMessage' => 'The specified resource of NatIpCidr is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyNatIpCidrAttributeResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</ModifyNatIpCidrAttributeResponse>","errorExample":""}]',
      'title' => '修改NAT IP地址段的名称和描述',
      'summary' => '调用ModifyNatIpCidrAttribute接口修改NAT IP地址段的名称和描述。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListNatIpCidrs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的NAT IP地址段所属VPC NAT网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询NAT IP地址段的VPC NAT网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ngw-gw8v16wgvtq26vh59****',
          ),
        ),
        2 => 
        array (
          'name' => 'NatIpCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址段。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '172.16.0.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会查询NAT IP地址段列表。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码DryRunOperation。

- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并查询NAT IP地址段列表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        5 => 
        array (
          'name' => 'NatIpCidrStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址段的状态。取值：**Available**，表示可用状态。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2be03f84eb48b699f0a4883',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'string',
            'required' => false,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'NatIpCidrName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址段的名称。**N**取值为**1**~**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要查询的NAT IP地址段的名称。**N**取值为**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'cidrname',
            ),
            'required' => false,
            'example' => 'test',
            'maxItems' => 100,
          ),
        ),
        9 => 
        array (
          'name' => 'NatIpCidrs',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的NAT IP地址段。**N**取值为**1**~**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要查询的NAT IP地址段。**N**取值为**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => '172.16.0.0/24',
            ),
            'required' => false,
            'example' => '172.16.0.0/24',
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的NAT IP地址段所属VPC NAT网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'caeba0bbb2be03f84eb48b699f0a4883',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7479A224-4A28-4895-9604-11F48BCE6A88',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的NAT IP地址段的列表条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'NatIpCidrs' => 
              array (
                'description' => 'NAT IP地址段列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'NAT IP地址段列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => 'NAT IP地址段的创建时间。',
                      'type' => 'string',
                      'example' => '2021-06-28T20:50Z',
                    ),
                    'NatIpCidrId' => 
                    array (
                      'description' => 'NAT IP地址段实例ID。',
                      'type' => 'string',
                      'example' => 'vpcnatcidr-gw8ov42ei6xh1jys2****',
                    ),
                    'IsDefault' => 
                    array (
                      'description' => '是否为默认NAT IP地址段。取值：

- **true**：是默认NAT IP地址段。
- **false**：不是默认NAT IP地址段。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'NatIpCidrStatus' => 
                    array (
                      'description' => 'NAT IP地址段的状态。取值：**Available**，表示可用状态。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'NatIpCidrName' => 
                    array (
                      'description' => 'NAT IP地址段的名称。',
                      'type' => 'string',
                      'example' => 'Name',
                    ),
                    'NatIpCidr' => 
                    array (
                      'description' => 'NAT IP地址段。',
                      'type' => 'string',
                      'example' => '172.16.0.0/24',
                    ),
                    'NatGatewayId' => 
                    array (
                      'description' => 'NAT IP地址段所属的VPC NAT网关实例ID。',
                      'type' => 'string',
                      'example' => 'ngw-gw8v16wgvtq26vh59****',
                    ),
                    'NatIpCidrDescription' => 
                    array (
                      'description' => 'NAT IP地址段的描述信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"caeba0bbb2be03f84eb48b699f0a4883\\",\\n  \\"RequestId\\": \\"7479A224-4A28-4895-9604-11F48BCE6A88\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"NatIpCidrs\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-06-28T20:50Z\\",\\n      \\"NatIpCidrId\\": \\"vpcnatcidr-gw8ov42ei6xh1jys2****\\",\\n      \\"IsDefault\\": true,\\n      \\"NatIpCidrStatus\\": \\"Available\\",\\n      \\"NatIpCidrName\\": \\"Name\\",\\n      \\"NatIpCidr\\": \\"172.16.0.0/24\\",\\n      \\"NatGatewayId\\": \\"ngw-gw8v16wgvtq26vh59****\\",\\n      \\"NatIpCidrDescription\\": \\"test\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListNatIpCidrsResponse>\\n    <NextToken>caeba0bbb2be03f84eb48b699f0a4883</NextToken>\\n    <RequestId>7479A224-4A28-4895-9604-11F48BCE6A88</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <NatIpCidrs>\\n        <CreationTime>2021-06-28T20:50Z</CreationTime>\\n        <NatIpCidrId>vpcnatcidr-gw8ov42ei6xh1jys2****</NatIpCidrId>\\n        <IsDefault>true</IsDefault>\\n        <NatIpCidrStatus>Available</NatIpCidrStatus>\\n        <NatIpCidrName>default</NatIpCidrName>\\n        <NatIpCidr>172.16.0.0/24</NatIpCidr>\\n        <NatGatewayId>ngw-gw8v16wgvtq26vh59****</NatGatewayId>\\n        <NatIpCidrDescription>default</NatIpCidrDescription>\\n    </NatIpCidrs>\\n</ListNatIpCidrsResponse>","errorExample":""}]',
      'title' => '查询NAT IP地址段列表',
      'summary' => '调用ListNatIpCidrs接口查询NAT IP地址段列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIpv4Gateway' => 
    array (
      'summary' => '调用CreateIpv4Gateway接口创建IPv4网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ipv4GatewayName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的IPv4网关的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv4GatewayDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的IPv4网关的描述信息。

描述长度为1～256个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建的IPv4网关所在VPC的ID。

一个VPC仅支持创建一个IPv4网关。

IPv4网关属于VPC高级功能。当VPC不支持该高级功能（不支持创建IPv4网关）时，您需要联系阿里云工程师处理。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-5tss06uvoyps5xoya****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建IPv4网关。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接创建IPv4网关。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建IPv4网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建IPv4网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '创建的IPv4网关的实例ID。',
            'type' => 'object',
            'properties' => 
            array (
              'Ipv4GatewayId' => 
              array (
                'description' => '创建的IPv4网关的实例ID。',
                'type' => 'string',
                'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph6aiy****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F282742B-1BBB-5F63-A3AF-E92EC575A1A6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.ExistDirectEip',
            'errorMessage' => 'The operation is not allowed because of existing direct eip.',
          ),
          1 => 
          array (
            'errorCode' => 'UnsupportedRegion',
            'errorMessage' => 'The feature of ipv4Gateway is not supported in the region.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.OperateShareResource',
            'errorMessage' => 'You cannot operate shared resources.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.SubnetRouteV1Exist',
            'errorMessage' => 'The operation is not allowed because of existing subnetRouteV1.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.NormalNatExist',
            'errorMessage' => 'The operation is not allowed because of existing normalNat.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationDenied.VpcExistIpv4Gateway',
            'errorMessage' => 'An IPv4 gateway already exists in the VPC.',
          ),
          6 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv4Gateway',
            'errorMessage' => 'The feature of ipv4Gateway is not supported for [%s].',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.VpnExist',
            'errorMessage' => 'The operation is not allowed because of existing vpn.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationDenied.DirectEipExist',
            'errorMessage' => 'The operation is not allowed because of existing directEip.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.GetNfvServiceList',
            'errorMessage' => 'The operation is failed because of get nfv serviceList failed.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.VpcNotExist',
            'errorMessage' => 'The operation is failed because of vpc is not found.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.ResourceGroupId',
            'errorMessage' => 'Invalid ResourceGroupld value.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::GetIpv4GatewayAttribute',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv4GatewayId\\": \\"ipv4gw-5tsnc6s4ogsedtp3k****\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n  \\"RequestId\\": \\"F282742B-1BBB-5F63-A3AF-E92EC575A1A6\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIpv4GatewayResponse>\\n    <Ipv4GatewayId>ipv4gw-5tsnc6s4ogsedtp3k****</Ipv4GatewayId>\\n    <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n    <RequestId>F282742B-1BBB-5F63-A3AF-E92EC575A1A6</RequestId>\\n</CreateIpv4GatewayResponse>","errorExample":""}]',
      'title' => '创建IPv4网关',
      'description' => '- **CreateIpv4Gateway**接口属于异步接口，即系统返回一个实例ID，但该IPv4网关尚未创建成功，系统后台的创建任务仍在进行。您可以调用[GetIpv4GatewayAttribute](~~407670~~)查询IPv4网关的创建状态：
    - 当IPv4网关处于**Creating**状态时，表示IPv4网关正在创建中。
    - 当IPv4网关处于**Created**状态时，表示IPv4网关创建完成。
- **CreateIpv4Gateway**接口不支持在同一个VPC下并发创建IPv4网关。',
    ),
    'DeleteIpv4Gateway' => 
    array (
      'summary' => '调用DeleteIpv4Gateway接口删除IPv4网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ipv4GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的IPv4网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
          ),
        ),
        1 => 
        array (
          'name' => 'InternetMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '选择删除IPv4网关后，VPC的公网模式，取值：

- **private**：默认值，删除IPv4网关后，VPC将变成纯私网VPC，不具备公网访问能力。
- **public**：删除IPv4网关后，VPC公网访问不再受IPv4网关集中控制，公网IP绑定实例后缺省可以直接访问公网。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'enumValueTitles' => 
            array (
              'private' => 'private',
              'public' => 'public',
            ),
            'example' => 'public',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的IPv4网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会删除IPv4网关。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接删除IPv4网关。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的IPv4网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '21133AC0-0636-521B-A400-253818691A56',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'The specified resource ipv4Gateway is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.RouteEntryExist',
            'errorMessage' => 'The operation is not allowed because of existing routeEntry point to ipv4Gateway.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.GatewayAlreadyAssociated',
            'errorMessage' => 'The operation is not allowed because of the specified resource %s is already associated.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.Ipv4GatewayUsedByEipBindIpAddress',
            'errorMessage' => 'Failed to delete the IPv4 gateway because the EIP associated with a private IP address requires the IPv4 gateway to implement outbound Internet access.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::GetIpv4GatewayAttribute',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"21133AC0-0636-521B-A400-253818691A56\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIpv4GatewayResponse>\\n    <RequestId>21133AC0-0636-521B-A400-253818691A56</RequestId>\\n</DeleteIpv4GatewayResponse>","errorExample":""}]',
      'title' => '删除IPv4网关',
      'description' => '- 删除IPv4网关实例前，请确保已解绑IPv4网关实例关联的路由表。

- **DeleteIpv4Gateway**接口属于异步接口，即系统会先返回一个**RequestId**，但该IPv4网关实例并未删除完成，系统后台的删除任务仍在进行。您可以调用[GetIpv4GatewayAttribute](~~407670~~)查询IPv4网关实例的状态。

    - 当IPv4网关实例处于**Deleting**状态时，表示正在删除中。

    - 当IPv4网关实例无法被查询到时，表示删除完成。

- **DeleteIpv4Gateway**接口不支持并发删除同一个IPv4网关实例。',
    ),
    'EnableVpcIpv4Gateway' => 
    array (
      'summary' => '调用EnableVpcIpv4Gateway接口激活IPv4网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ipv4GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要激活的IPv4网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv4gw-5tsp9lumsxoqizvq2****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv4网关所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会激活IPv4网关。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接激活IPv4网关。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteTableList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由表列表。系统会为路由表列表中的路由表添加一条0.0.0.0/0指向IPv4网关的路由条目。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由表列表。系统会为路由表列表中的路由表添加一条0.0.0.0/0指向IPv4网关的路由条目。系统支持的最大路由表数量为10。

> 路由表与IPv4网关需要属于同一个VPC。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-5ts0ohchwkp3dydt2****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv4网关所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VPC_ROUTE_ENTRY_CIDR_BLOCK_DUPLICATE',
            'errorMessage' => 'Specified CIDR block is already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'The specified resource ipv4Gateway is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.Ipv4GatewayAlreadyActive.',
            'errorMessage' => 'The operation failed because of ipv4Gateway is already active.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.ConflictOfAllZeroRouting',
            'errorMessage' => 'The operation is not allowed  because of routetable [%s] exist all-zero route entry.',
          ),
          5 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv4Gateway',
            'errorMessage' => 'The feature of ipv4Gateway is not supported for [%s].',
          ),
          6 => 
          array (
            'errorCode' => 'OperationDenied.VpnExist',
            'errorMessage' => 'The operation is not allowed because of existing vpn.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.NatgatewayExist',
            'errorMessage' => 'The operation is not allowed because of existing nat.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationDenied.DirectEipExist',
            'errorMessage' => 'The operation is not allowed because of existing directEip.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationDenied.VpcHasAlreadyActive',
            'errorMessage' => 'The operation is not allowed because of vpc has already been active.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::GetIpv4GatewayAttribute',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableVpcIpv4GatewayResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</EnableVpcIpv4GatewayResponse>","errorExample":""}]',
      'title' => '激活IPv4网关',
      'description' => '- **EnableVpcIpv4Gateway**接口属于异步接口，即系统会先返回一个**RequestId**，但该IPv4网关实例并未激活完成，系统后台的激活任务仍在进行。您可以调用[GetIpv4GatewayAttribute](~~407670~~)查询IPv4网关实例的状态。

    - 当IPv4网关实例处于**Activating**状态时，表示正在激活中。

    - 当IPv4网关实例处于**Created**状态时，表示激活完成。

- **EnableVpcIpv4Gateway**接口不支持并发激活同一个IPv4网关。',
    ),
    'UpdateIpv4GatewayAttribute' => 
    array (
      'summary' => '调用UpdateIpv4GatewayAttribut修改IPv4网关的名称或描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ipv4GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改名称或描述信息的IPv4网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv4GatewayName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的IPv4网关实例的名称，即修改后的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'newname',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改IPv4网关的名称或描述信息。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接修改IPv4网关的名称或描述信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'Ipv4GatewayDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的IPv4网关实例的描述信息，即修改后的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'new',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改名称或描述信息的IPv4网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改名称或描述信息的IPv4网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '671CEB03-C98D-5916-950C-C55B0BD06621',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'The specified resource ipv4Gateway is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"671CEB03-C98D-5916-950C-C55B0BD06621\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateIpv4GatewayAttributeResponse>\\n    <RequestId>671CEB03-C98D-5916-950C-C55B0BD06621</RequestId>\\n</UpdateIpv4GatewayAttributeResponse>","errorExample":""}]',
      'title' => '修改IPv4网关的名称或描述信息',
      'description' => '**UpdateIpv4GatewayAttribute**接口不支持并发修改同一个IPv4网关的名称或描述信息。',
    ),
    'UpdateGatewayRouteTableEntryAttribute' => 
    array (
      'summary' => '修改网关路由表的下一跳类型和下一跳。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的网关路由表所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'IPv4GatewayRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的网关路由表ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vtb-5ts0ohchwkp3dydt2****',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要修改的网关路由表 ID。',
            'description' => '要修改的网关路由表ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'vtb-5ts0ohchwkp3dydt2****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改网关路由表。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接修改网关路由表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关路由表的路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '47.100.XX.XX/16',
          ),
        ),
        6 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的路由条目下一跳类型。取值：

- **Instance**：ECS实例。
- **NetworkInterface**：弹性网卡实例。

- **Local**：本地。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Instance',
          ),
        ),
        7 => 
        array (
          'name' => 'NextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的下一跳的实例ID。

- 当**NextHopType**取值为**Instance**时，**NextHopId**为ECS实例ID。
- 当**NextHopType**取值为**NetworkInterface**时，**NextHopId**为弹性网卡实例ID。
- 当**NextHopType**取值为**Local**时，**NextHopId**为空，表示本地。

> 当路由条目的下一跳类型为**Instance**或**NetworkInterface**时需要修改下一跳，您需要先将**NextHopType**修改为**Local**，然后再将**NextHopType**修改为**Instance**或**NetworkInterface**之后修改具体的**NextHopId**。当下一跳类型为弹性网卡或ECS实例时，不支持直接修改下一跳为其他的弹性网卡或ECS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp18xq9yguxoxe7m****',
          ),
        ),
        8 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关路由表的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        9 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关路由表的描述信息。

长度为2～256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'new',
          ),
        ),
        10 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的网关路由表所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.UpdateGatewayRouteEntry',
            'errorMessage' => 'The operation is not allowed because of need switch to local first.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.DestCidrBlock',
            'errorMessage' => 'The destCidrBlock is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.NetworkInterface',
            'errorMessage' => 'The specified resource nextHop is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteEntry',
            'errorMessage' => 'The specified resource routeEntry is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteEntry',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.Vswitch',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.Instance',
            'errorMessage' => 'The specified resource nextHop is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.NextHop',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationDenied.NextHopTypeNonsupport',
            'errorMessage' => 'The operation is not allowed because of nextHopType is nonsupport.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationDenied.LocalEntryCanOnlyModifyNextHop',
            'errorMessage' => 'Only the nextHop parameter can be modified for a local route entry.',
          ),
          10 => 
          array (
            'errorCode' => 'ExclusiveParam.NextHopTypeAndNextHopId',
            'errorMessage' => 'The param of nextHopType and nextHopId are mutually exclusive.',
          ),
          11 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteTable',
            'errorMessage' => 'The specified resource gatewayRouteTable is not found.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceId.NotFound',
            'errorMessage' => 'The specified RouterInterfaceId does not exist in our record.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.OnlySupportNormalNetworkInterface',
            'errorMessage' => 'Next hop only supports binding normal network Interface.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListGatewayRouteTableEntries',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateGatewayRouteTableEntryAttributeResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</UpdateGatewayRouteTableEntryAttributeResponse>","errorExample":""}]',
      'title' => '修改网关路由表的下一跳类型和下一跳',
    ),
    'ListIpv4Gateways' => 
    array (
      'summary' => '调用ListIpv4Gateways接口查询IPv4网关实例的列表信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv4网关列表信息的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        3 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv4网关实例关联的VPC的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-5tsrxlw7dv074gci4****',
          ),
        ),
        4 => 
        array (
          'name' => 'Ipv4GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv4网关实例的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
          ),
        ),
        5 => 
        array (
          'name' => 'Ipv4GatewayName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv4网关实例的名称。

名称长度为1～128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv4网关列表信息的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv4网关所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2D265800-E306-529C-8418-84B0A1D201DB',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'Ipv4GatewayModels' => 
              array (
                'description' => 'IPv4网关实例的列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IPv4网关实例的列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpcId' => 
                    array (
                      'description' => 'IPv4网关实例关联的VPC的ID。',
                      'type' => 'string',
                      'example' => 'vpc-5tsrxlw7dv074gci4****',
                    ),
                    'Status' => 
                    array (
                      'description' => 'IPv4网关实例的状态。取值：

- **Creating**：创建中。
- **Created**：已创建，可用状态。
- **Modifying**：修改中。
- **Deleting**：删除中。
- **Deleted**：已删除。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'Ipv4GatewayId' => 
                    array (
                      'description' => 'IPv4网关的实例ID。',
                      'type' => 'string',
                      'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
                    ),
                    'Ipv4GatewayDescription' => 
                    array (
                      'description' => 'IPv4网关实例的描述信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Enabled' => 
                    array (
                      'description' => 'IPv4网关实例是否已经激活。取值：

- **true**；已激活。
- **false**：未激活。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => 'IPv4网关创建时间',
                      'type' => 'string',
                      'example' => '2021-12-02T07:07:35Z',
                    ),
                    'Ipv4GatewayRouteTableId' => 
                    array (
                      'description' => 'IPv4网关实例关联的路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-5ts0ohchwkp3dydt2****',
                    ),
                    'Ipv4GatewayName' => 
                    array (
                      'description' => 'IPv4网关实例的名称。',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => 'IPv4网关所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-bp67acfmxazb4ph****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"2D265800-E306-529C-8418-84B0A1D201DB\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"Ipv4GatewayModels\\": [\\n    {\\n      \\"VpcId\\": \\"vpc-5tsrxlw7dv074gci4****\\",\\n      \\"Status\\": \\"Created\\",\\n      \\"Ipv4GatewayId\\": \\"ipv4gw-5tsnc6s4ogsedtp3k****\\",\\n      \\"Ipv4GatewayDescription\\": \\"test\\",\\n      \\"Enabled\\": true,\\n      \\"GmtCreate\\": \\"2021-12-02T07:07:35Z\\",\\n      \\"Ipv4GatewayRouteTableId\\": \\"vtb-5ts0ohchwkp3dydt2****\\",\\n      \\"Ipv4GatewayName\\": \\"name\\",\\n      \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListIpv4GatewaysResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>2D265800-E306-529C-8418-84B0A1D201DB</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <Ipv4GatewayModels>\\n        <VpcId>vpc-5tsrxlw7dv074gci4****</VpcId>\\n        <Status>Created</Status>\\n        <Ipv4GatewayId>ipv4gw-5tsnc6s4ogsedtp3k****</Ipv4GatewayId>\\n        <Ipv4GatewayDescription>test</Ipv4GatewayDescription>\\n        <Enabled>true</Enabled>\\n        <GmtCreate>2021-12-02T07:07:35Z</GmtCreate>\\n        <Ipv4GatewayRouteTableId>vtb-5ts0ohchwkp3dydt2****</Ipv4GatewayRouteTableId>\\n        <Ipv4GatewayName>name</Ipv4GatewayName>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </Ipv4GatewayModels>\\n</ListIpv4GatewaysResponse>","errorExample":""}]',
      'title' => '查询IPv4网关实例的列表信息',
    ),
    'GetIpv4GatewayAttribute' => 
    array (
      'summary' => '调用GetIpv4GatewayAttribute接口',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询IPv4网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv4GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv4网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询IPv4网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '查询的IPv4网关实例的详细信息。',
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => 'IPv4网关实例关联的VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-5tsrxlw7dv074gci4****',
              ),
              'Status' => 
              array (
                'description' => 'IPv4网关实例的状态。取值：

- **Creating**：创建中。

- **Created**：已创建，可用状态。

- **Modifying**：修改中。

- **Deleting**：删除中。

- **Deleted**：已删除。

- **Activating**：使能中。',
                'type' => 'string',
                'example' => 'Created',
              ),
              'Ipv4GatewayId' => 
              array (
                'description' => 'IPv4网关的实例ID。',
                'type' => 'string',
                'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F79A919-6FE9-50C4-967B-45705E1F9C38',
              ),
              'Ipv4GatewayDescription' => 
              array (
                'description' => 'IPv4网关实例的描述信息。',
                'type' => 'string',
                'example' => 'new',
              ),
              'Enabled' => 
              array (
                'description' => 'IPv4网关是否已经激活。取值：

- **true**：已激活。

- **false**：未激活。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Ipv4GatewayRouteTableId' => 
              array (
                'description' => 'IPv4网关实例关联的路由表ID。',
                'type' => 'string',
                'example' => 'vtb-5ts0ohchwkp3dydt2****',
              ),
              'Ipv4GatewayName' => 
              array (
                'description' => 'IPv4网关的实例名称。',
                'type' => 'string',
                'example' => 'name',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2022-02-24T09:02:36Z',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'IPv4网关所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-bp67acfmxazb4ph****',
              ),
              'Tags' => 
              array (
                'description' => '标签列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '标签列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '标签键。',
                      'type' => 'string',
                      'example' => 'FinanceDept',
                    ),
                    'Value' => 
                    array (
                      'description' => '标签值。',
                      'type' => 'string',
                      'example' => 'FinanceJoshua',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'The specified resource ipv4Gateway is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpcId\\": \\"vpc-5tsrxlw7dv074gci4****\\",\\n  \\"Status\\": \\"Created\\",\\n  \\"Ipv4GatewayId\\": \\"ipv4gw-5tsnc6s4ogsedtp3k****\\",\\n  \\"RequestId\\": \\"7F79A919-6FE9-50C4-967B-45705E1F9C38\\",\\n  \\"Ipv4GatewayDescription\\": \\"new\\",\\n  \\"Enabled\\": true,\\n  \\"Ipv4GatewayRouteTableId\\": \\"vtb-5ts0ohchwkp3dydt2****\\",\\n  \\"Ipv4GatewayName\\": \\"name\\",\\n  \\"CreateTime\\": \\"2022-02-24T09:02:36Z\\",\\n  \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n  \\"Tags\\": [\\n    {\\n      \\"Key\\": \\"FinanceDept\\",\\n      \\"Value\\": \\"FinanceJoshua\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetIpv4GatewayAttributeResponse>\\n    <VpcId>vpc-5tsrxlw7dv074gci4****</VpcId>\\n    <Status>Created</Status>\\n    <Ipv4GatewayId>ipv4gw-5tsnc6s4ogsedtp3k****</Ipv4GatewayId>\\n    <RequestId>7F79A919-6FE9-50C4-967B-45705E1F9C38</RequestId>\\n    <Ipv4GatewayDescription>new</Ipv4GatewayDescription>\\n    <Enabled>true</Enabled>\\n    <Ipv4GatewayRouteTableId>vtb-5ts0ohchwkp3dydt2****</Ipv4GatewayRouteTableId>\\n    <Ipv4GatewayName>name</Ipv4GatewayName>\\n    <CreateTime>2022-02-24T09:02:36Z</CreateTime>\\n    <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</GetIpv4GatewayAttributeResponse>","errorExample":""}]',
      'title' => '查询指定的IPv4网关属性',
    ),
    'ListGatewayRouteTableEntries' => 
    array (
      'summary' => '调用ListGatewayRouteTableEntries接口查询网关路由表列表信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询网关路由表列表信息的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网关路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-5ts0ohchwkp3dydt2****',
          ),
        ),
        4 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网关路由表中路由条目的目标网段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.5',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询网关路由表列表信息的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '网关路由表列表信息。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'GatewayRouteEntryModels' => 
              array (
                'description' => '网关路由表中路由条目的详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '网关路由表中路由条目的详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '路由条目的状态。

- **Pending**：配置中。
- **Available**：可用。
- **Modifying**：修改中。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'NextHopId' => 
                    array (
                      'description' => '下一跳实例ID。',
                      'type' => 'string',
                      'example' => 'i-bp11gcl0sm85t9bi****',
                    ),
                    'Description' => 
                    array (
                      'description' => '路由条目的名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'NextHopType' => 
                    array (
                      'description' => '下一跳的类型。取值：

- **EcsInstance**：ECS实例。
- **NetworkInterface**：弹性网卡。
- **Local**：本地。',
                      'type' => 'string',
                      'example' => 'EcsInstance',
                    ),
                    'DestinationCidrBlock' => 
                    array (
                      'description' => '路由条目的目标网段。',
                      'type' => 'string',
                      'example' => '192.168.0.5',
                    ),
                    'Name' => 
                    array (
                      'description' => '路由条目的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                    'NextHops' => 
                    array (
                      'description' => '下一跳信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'NextHopId' => 
                          array (
                            'description' => '下一跳实例ID。',
                            'type' => 'string',
                            'example' => 'vpn-bp10zyaph5cc8b7c7****',
                          ),
                          'NextHopType' => 
                          array (
                            'description' => '下一跳类型。取值：

- **Instance**（默认值）：ECS实例。
- **HaVip**：高可用虚拟IP。
- **VpnGateway**：VPN网关。
- **NatGateway**：NAT网关。
- **NetworkInterface**：辅助弹性网卡。
- **RouterInterface**：路由器接口。
- **IPv6Gateway**：IPv6网关。
- **Attachment**：转发路由器。',
                            'type' => 'string',
                            'example' => 'Instance',
                          ),
                          'Weight' => 
                          array (
                            'description' => '路由条目的权重。',
                            'type' => 'string',
                            'example' => '100',
                          ),
                          'Enabled' => 
                          array (
                            'description' => '路由是否可用。取值：

- **0**：不可用。
- **1**：可用。',
                            'type' => 'string',
                            'example' => '1',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayRouteTable',
            'errorMessage' => 'The specified resource GatewayRouteTable is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The param of nextToken is illegal',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"GatewayRouteEntryModels\\": [\\n    {\\n      \\"Status\\": \\"Available\\",\\n      \\"NextHopId\\": \\"i-bp11gcl0sm85t9bi****\\",\\n      \\"Description\\": \\"test\\",\\n      \\"NextHopType\\": \\"EcsInstance\\",\\n      \\"DestinationCidrBlock\\": \\"192.168.0.5\\",\\n      \\"Name\\": \\"name\\",\\n      \\"NextHops\\": [\\n        {\\n          \\"NextHopId\\": \\"vpn-bp10zyaph5cc8b7c7****\\",\\n          \\"NextHopType\\": \\"Instance\\",\\n          \\"Weight\\": \\"100\\",\\n          \\"Enabled\\": \\"1\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListGatewayRouteTableEntriesResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <GatewayRouteEntryModels>\\n        <Status>Available</Status>\\n        <NextHopId>i-bp11gcl0sm85t9bi****</NextHopId>\\n        <Description>test</Description>\\n        <NextHopType>EcsInstance</NextHopType>\\n        <DestinationCidrBlock>192.168.0.5</DestinationCidrBlock>\\n        <Name>name</Name>\\n    </GatewayRouteEntryModels>\\n</ListGatewayRouteTableEntriesResponse>","errorExample":""}]',
      'title' => '查询网关路由表列表信息',
    ),
    'AssociateRouteTableWithGateway' => 
    array (
      'summary' => '调用AssociateRouteTableWithGateway接口将网关路由表和同一VPC内的IPv4网关实例绑定。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的网关路由表和IPv4网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的网关路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-5ts0ohchwkp3dydt2****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会关联网关路由表和IPv4网关实例。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接关联网关路由表和IPv4网关实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要关联的IPv4网关实例ID。

要关联的IPv4网关实例必须为**已激活**状态。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
          ),
        ),
        5 => 
        array (
          'name' => 'GatewayType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要关联的网关实例的类型。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'Ipv4Gateway',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的网关路由表和IPv4网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F89C2176-8F10-55EF-90CF-CF99D1E3F816',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'The specified resource ipv4Gateway is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.Ipv4Gateway',
            'errorMessage' => 'The specified resource %s is already associated.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayRouteTable',
            'errorMessage' => 'The specified resource GatewayRouteTable is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.GatewayRouteTable',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.GatewayRouteTable',
            'errorMessage' => 'The specified resource %s is already associated.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationDenied.Ipv4GatewayNotActive',
            'errorMessage' => 'The operation is not allowed because of ipv4Gateway [%s] is not active.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableTypeIncorrect',
            'errorMessage' => 'The operation is not allowed because of routeTableType is incorrect.',
          ),
          8 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteTable',
            'errorMessage' => 'The specified resource gatewayRouteTable is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationDenied.GatewayAndTableNotInOneVpc',
            'errorMessage' => 'The operation is not allowed because of GatewayAndTableNotInOneVpc.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTable',
            'errorMessage' => 'The status of the specified route table is incorrect.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.GatewayType',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'UnsupportedFeature.Ipv6GatewayRouteTable',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F89C2176-8F10-55EF-90CF-CF99D1E3F816\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateRouteTableWithGatewayResponse>\\n    <RequestId>F89C2176-8F10-55EF-90CF-CF99D1E3F816</RequestId>\\n</AssociateRouteTableWithGatewayResponse>","errorExample":""}]',
      'title' => '绑定网关路由表和IPv4网关',
    ),
    'DissociateRouteTableFromGateway' => 
    array (
      'summary' => '调用DissociateRouteTableFromGateway解绑网关路由表和IPv4网关实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的网关路由表和IPv4网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的网关路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-5ts0ohchwkp3dydt2****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会解绑网关路由表和IPv4网关实例。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接解绑网关路由表和IPv4网关实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的IPv4网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv4gw-5tsnc6s4ogsedtp3k****',
          ),
        ),
        5 => 
        array (
          'name' => 'GatewayType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的网关实例的类型。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Ipv4Gateway',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的网关路由表和IPv4网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-6',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C5644C9A-7480-13B6-AECB-30FF142E3724',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.NotExistAssociateRelation',
            'errorMessage' => 'The operation is not failed because of not exist this associate relation.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv4Gateway',
            'errorMessage' => 'The specified resource ipv4Gateway is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv4Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayRouteTable',
            'errorMessage' => 'The specified resource GatewayRouteTable is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.GatewayRouteTable',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteTable',
            'errorMessage' => 'The specified resource gatewayRouteTable is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableTypeIncorrect',
            'errorMessage' => 'The operation is not allowed because of %s.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv6Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C5644C9A-7480-13B6-AECB-30FF142E3724\\"\\n}","errorExample":""},{"type":"xml","example":"<DissociateRouteTableFromGatewayResponse>\\n    <RequestId>C5644C9A-7480-13B6-AECB-30FF142E3724</RequestId>\\n</DissociateRouteTableFromGatewayResponse>","errorExample":""}]',
      'title' => '解绑网关路由表和IPv4网关',
    ),
    'CreateVpnGateway' => 
    array (
      'summary' => '调用CreateVpnGateway接口创建VPN网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'high',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的名称，默认值为VPN网关的ID。

长度为2～100个字符，不能以`http://`或`https://`开头，需要以大写或小写字母开头，后面可包含大小写字母、数字、下划线（_）、短划线（-）和半角句号（.），不支持其他特殊字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'MYVPN',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所属的VPC实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1ub1yt9cvakoelj****',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '<props="china">VPN网关的计费方式。仅取值：**PREPAY**，包年包月。</props>
<props="intl">VPN网关的计费方式。仅取值：**POSTPAY**，按量计费。</props>
<props="partner">VPN网关的计费方式。仅取值：**POSTPAY**，按量计费。</props>

<props="china">在您创建VPN网关时，该参数为必填项。</props>',
            'type' => 'string',
            'required' => false,
            'example' => '中国站示例值：PREPAY，国际站示例值：POSTPAY',
            'default' => 'POSTPAY',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买时长。单位：月。取值：**1**~**9**、**12**、**24**或**36**。

<props="china">
> **InstanceChargeType**参数的值为**PREPAY**时，该参数必选。</props>
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付VPN网关的账单。取值：

- **true**：自动支付VPN网关的账单。

- **false**（默认值）：不自动支付VPN网关的账单。

> 为了成功创建VPN网关实例，建议您开启自动支付。如果您关闭了自动支付，则需要手动支付账单才能成功创建VPN网关实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的带宽规格。单位：Mbps。

<props="china">- 如果您要创建公网VPN网关，则取值为：**5**、**10**、**20**、**50**、**100**、**200**、**500**或**1000**。</props>
<props="china">- 如果您要创建私网VPN网关，则取值为：**200**或**1000**。</props>
<props="intl">- 如果您要创建公网VPN网关，则取值为：**10**、**100**、**200**、**500**或**1000**。</props>
<props="intl">- 如果您要创建私网VPN网关，则取值为：**200**或**1000**。</props>

>部分地域下VPN网关支持的最大带宽规格为200 Mbps。更多信息，请参见[VPN网关使用限制](~~65290~~)。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableIpsec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启IPsec-VPN功能。取值：

- **true**（默认值）：开启IPsec-VPN功能。

- **false**：不开启IPsec-VPN功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'EnableSsl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启SSL-VPN功能。取值：

- **true**：开启SSL-VPN功能。

- **false**（默认值）：不开启SSL-VPN功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'SslConnections',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '允许同时连接的最大客户端数量。取值：**5**（默认值）、**10**、**20**、**50**、**100**、**200**、**500**、**1000**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        10 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定VPN网关实例关联的交换机实例。 

- 在支持创建双隧道模式IPsec-VPN连接的地域，本参数必填，您必须指定一个交换机实例，同时您还要指定**DisasterRecoveryVSwitchId**参数的值。
- 在支持创建单隧道模式IPsec-VPN连接的地域，如果您不指定交换机实例，系统将从VPC下自动选择一个交换机实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-bp1j5miw2bae9s2vt****',
          ),
        ),
        11 => 
        array (
          'name' => 'VpnType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关类型。取值：
- **Normal**（默认值）：普通型。
<props="china">- **NationalStandard**：国密型。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        12 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4****',
          ),
        ),
        13 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的网络类型。取值：

- **public**（默认值）：公网VPN网关。
- **private**：私网VPN网关。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        14 => 
        array (
          'name' => 'DisasterRecoveryVSwitchId',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '指定VPN网关实例关联的第二个交换机实例。

- 如果当前地域支持创建双隧道模式的IPsec-VPN连接，则本参数必填。
- 您需要从VPN网关实例关联的VPC实例下指定两个分布在不同可用区的交换机实例，以实现IPsec-VPN连接可用区级别的容灾。
- 对于仅支持一个可用区的地域 ，不支持可用区级别的容灾，建议您在该可用区下指定两个不同的交换机实例以实现IPsec-VPN连接的高可用，支持指定相同的交换机实例。

关于支持双隧道模式IPsec-VPN连接的地域和可用区的信息，请参见[IPsec-VPN连接升级为双隧道模式](~~2358946~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-p0wiz7obm0tbimu4r****',
          ),
        ),
        15 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所属的资源组ID。

- 您可以调用[ListResourceGroups](~~158855~~)接口查询资源组ID。
- 如果您未指定资源组ID，VPN网关创建完成后将归属于默认资源组。
- VPN网关创建完成后，如果您在VPN网关下创建SSL服务端、SSL客户端证书、IPsec服务端或IPsec连接（指IPsec连接绑定VPN网关的场景），则这些资源将直接归属在VPN网关所属的资源组下，且不支持修改。

  如果您修改了VPN网关所属的资源组，则上述资源所属的资源组也将一并被修改。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-uf68lxhgr7ftbqr3p****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EB2C156A-41F8-49CC-A756-D55AFC8BFD69',
              ),
              'Name' => 
              array (
                'description' => 'VPN网关的名称。',
                'type' => 'string',
                'example' => 'MYVPN',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。

<props="china">如果您未选择自动支付VPN网关的账单，请前往[阿里云用户中心](https://usercenter2.aliyun.com/home)完成支付。</props>
<props="intl">如果您未选择自动支付VPN网关的账单，请前往[阿里云用户中心](https://usercenter2-intl.aliyun.com/billing/#/account/overview)完成支付。</props>
',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '208240895400460',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'The specified VPC id does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified value of Name not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidSpec.NotFound',
            'errorMessage' => 'The specified Spec does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidPeriod',
            'errorMessage' => 'The specified period is not valid',
          ),
          4 => 
          array (
            'errorCode' => 'ChargeType.NotSupport',
            'errorMessage' => 'The specified charge type is not support.',
          ),
          5 => 
          array (
            'errorCode' => 'InventoryNotEnough',
            'errorMessage' => 'The inventory is not enough.',
          ),
          6 => 
          array (
            'errorCode' => 'UnnecessarySslConnection',
            'errorMessage' => 'The SSL connection is unnecessary for ssl vpn disabled.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVpnEnable',
            'errorMessage' => 'Either IPsec or SSL VPN must be set enable.',
          ),
          8 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified vswitchId is not found.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.InventoryNotEnough',
            'errorMessage' => 'No enough available resource. Try another vswitch with different available zone.',
          ),
          11 => 
          array (
            'errorCode' => 'Forbidden.OperateShareResource',
            'errorMessage' => 'Operating shared resources is forbidden.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.IpNotEnough',
            'errorMessage' => 'Operation failed because private ip address of the virtual switch is not enough.',
          ),
          13 => 
          array (
            'errorCode' => 'Forbidden.NoSLRPermission',
            'errorMessage' => 'User not authorized to create service linked role.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchConflict',
            'errorMessage' => 'The vswitch can\'t create vpn. Try another vswitch.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationFailed.AzNotSupport',
            'errorMessage' => 'Current available zone can\'t create vpn. Try another vswitch with different available zone.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.NetworkTypeNotMatch',
            'errorMessage' => 'Create NationalStandard vpn with private networkType is unsupported.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.SslNotSupport',
            'errorMessage' => 'Enable ssl vpn with private networkType is unsupported.',
          ),
          18 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          19 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          22 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
          23 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          24 => 
          array (
            'errorCode' => 'InvalidVSwitchId.SecondVswitchNotSupport',
            'errorMessage' => 'The available zone of vswitch2 not supported.',
          ),
          25 => 
          array (
            'errorCode' => 'InvalidVSwitchId.FirstVswitchNotSupport',
            'errorMessage' => 'The available zone of vswitch1 not supported.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidVSwitchId.VswitchIdShouldDifferent',
            'errorMessage' => 'The VSwitch ids should be different.',
          ),
          27 => 
          array (
            'errorCode' => 'InvalidVSwitchId.FirstVswitchIpNotEnough',
            'errorMessage' => 'The ip of vswitch1 not enough.',
          ),
          28 => 
          array (
            'errorCode' => 'InvalidVSwitchId.SecondVswitchIpNotEnough',
            'errorMessage' => 'The ip of vswitch2 not enough.',
          ),
          29 => 
          array (
            'errorCode' => 'InvalidVSwitchId.ZoneIdShouldDifferent',
            'errorMessage' => 'Two vSwitches should belong to different Availability Zones.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 6000,
        'maxCallbackTimes' => 100,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpnGatewayId\\": \\"vpn-uf68lxhgr7ftbqr3p****\\",\\n  \\"RequestId\\": \\"EB2C156A-41F8-49CC-A756-D55AFC8BFD69\\",\\n  \\"Name\\": \\"MYVPN\\",\\n  \\"OrderId\\": 208240895400460\\n}","errorExample":""},{"type":"xml","example":"<CreateVpnGatewayResponse>\\n    <VpnGatewayId>vpn-uf68lxhgr7ftbqr3p****</VpnGatewayId>\\n    <RequestId>EB2C156A-41F8-49CC-A756-D55AFC8BFD69</RequestId>\\n    <Name>MYVPN</Name>\\n    <OrderId>208240895400460</OrderId>\\n</CreateVpnGatewayResponse>","errorExample":""}]',
      'title' => '创建VPN网关',
      'description' => '- 在您创建VPN网关前，建议您先了解VPN网关的使用限制。更多信息，请参见[VPN网关使用限制](~~65290~~)。
- 部分地域的VPN网关实例默认仅支持创建双隧道模式IPsec-VPN连接，您在这些地域调用`CreateVpnGateway`接口创建VPN网关实例时，除了需要输入必填参数外，还需要输入**VSwitchId**和**DisasterRecoveryVSwitchId**参数的值。关于支持双隧道模式IPsec-VPN连接的地域和可用区信息，请参见[IPsec-VPN连接升级为双隧道模式](~~2358946~~)。
- **CreateVpnGateway**接口属于异步接口，即系统先返回一个实例ID，但该VPN网关尚未创建成功，系统后台的创建任务仍在进行。您可以调用 [DescribeVpnGateway](~~73720~~)查询VPN网关的创建状态：
        
    - 当VPN网关处于**provisioning**状态时，表示VPN网关正在创建中。
    - 当VPN网关处于**active**状态时，表示VPN网关创建成功。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateVpnGatewayWithCertificate' => 
    array (
      'summary' => '调用AssociateVpnGatewayWithCertificate接口为VPN网关绑定证书。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。

>仅国密型VPN网关支持绑定证书。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
          ),
        ),
        2 => 
        array (
          'name' => 'CertificateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书类型。取值：

- **Encryption**：表示指定SSL证书为加密证书。
- **Signature**：表示指定SSL证书为签名证书。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Signature',
          ),
        ),
        3 => 
        array (
          'name' => 'CertificateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6bfe4218-ea1d****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea****',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：表示只预检此次请求合法性，不会进行绑定操作。检查项包括是否填写了必需参数、请求格式、实例状态等。如果检查不通过，则返回对应错误；如果检查通过，则返回对应请求ID。

- **false**（默认值）：表示发送正常请求，通过检查后直接将VPN网关和证书进行绑定。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.CertificateType',
            'errorMessage' => 'The specified certificate type (%s) is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.NotNationalStandard',
            'errorMessage' => 'The VPN gateway is not national standard.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.NoRamPermission',
            'errorMessage' => 'VPN service has no permission to operate your KMS instances.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociationExist',
            'errorMessage' => 'The association already exists.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.AnotherAssociationExist',
            'errorMessage' => 'The VPN gateway has associated with %s.',
          ),
          6 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.InvalidCertificate',
            'errorMessage' => 'The specified certificate is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.NoSlrPermission',
            'errorMessage' => 'User not authorized to create service linked role.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidCertificateId.NotFound',
            'errorMessage' => 'The specified certificate ID (%s) does not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'The operation against this instance is too frequent, please try again later.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 30,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateVpnGatewayWithCertificateResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</AssociateVpnGatewayWithCertificateResponse>","errorExample":""}]',
      'title' => '将VPN网关与证书关联',
      'description' => '在将VPN网关和SSL证书进行绑定前，请先了解以下信息：

- 仅国密型VPN网关支持绑定SSL证书，您需要为国密型VPN网关绑定2个SSL证书，一个作为加密证书，一个作为签名证书。
- SSL证书需使用国密算法。
- 在同一个VPN网关实例下，不支持将同一个SSL证书同时指定为加密证书和签名证书。

<props="china">

- 首次绑定VPN网关和SSL证书时，系统会自动创建一个名称为AliyunServiceRoleForVPNCertificate的服务关联角色，并且为该角色添加名称AliyunServiceRolePolicyForVPNCertificate的权限策略，授予VPN网关拥有访问其他云资源的权限。更多信息，请参见[AliyunServiceRoleForVPNCertificate](~~203323~~)。

</props>

- **AssociateVpnGatewayWithCertificate**接口属于异步接口，即系统先返回一个请求ID，但该VPN网关尚未成功绑定SSL证书，系统后台的绑定任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询SSL证书的绑定状态：
    - 当VPN网关处于**updating**状态时，表示SSL证书正在绑定中。
    - 当VPN网关处于**active**状态时，表示SSL证书绑定成功。
- **AssociateVpnGatewayWithCertificate**接口不支持为同一个VPN网关并发绑定SSL证书。

### 前提条件

请确保您已经在阿里云数字证书管理服务控制台拥有2个使用国密算法的SSL证书。关于SSL证书的更多信息，请参见[什么是数字证书管理服务](~~28535~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVpnGateway' => 
    array (
      'summary' => '调用DeleteVpnGateway接口删除指定的VPN网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'high',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关实例的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '>0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.VpnConnection',
            'errorMessage' => 'There are vpn connections on specified customer gateway not deleted.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.SslVpnServer',
            'errorMessage' => 'There is SSL VPN server on specified vpn gateway not deleted.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.GreTunnel',
            'errorMessage' => 'There is Gre tunnel on specified vpn gateway not deleted.',
          ),
          4 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          5 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The eip operate too frequent, TaskConflict.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'ForbiddenRelease',
            'errorMessage' => 'Forbidden to release a prepaid instance within validity period',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 6000,
        'maxCallbackTimes' => 100,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\">0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":"{ \\n    \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteNatGatewayResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteNatGatewayResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteNatGatewayResponse>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DeleteNatGatewayResponse>"}]',
      'title' => '删除指定的VPN网关',
      'description' => '> 无法删除已有IPsec连接的VPN网关。
 
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DissociateVpnGatewayWithCertificate' => 
    array (
      'summary' => '调用DissociateVpnGatewayWithCertificate接口解除VPN网关和证书的绑定关系。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
          ),
        ),
        2 => 
        array (
          'name' => 'CertificateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书类型。取值：

- **Encryption**：加密证书。

- **Signature**：签名证书。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Encryption',
          ),
        ),
        3 => 
        array (
          'name' => 'CertificateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书ID。

> 证书ID是指SSL证书与VPN网关绑定后产生的证书ID，并非SSL证书本身的证书ID。您可以调用[ListVpnCertificateAssociations](~~2521961~~)接口查询证书ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6bfe4218-ea1d****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e*******',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：表示只预检此次请求合法性，不会进行解绑操作。检查项包括是否填写了必需参数、请求格式、实例状态等。如果检查不通过，则返回对应错误；如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：表示发送正常请求，通过检查后直接对VPN网关和SSL证书进行解绑。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.CertificateType',
            'errorMessage' => 'The specified certificate type (%s) is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidAssociateRelation.NotFound',
            'errorMessage' => 'The specified association does not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'The operation against this instance is too frequent, please try again later.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 30,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F\\"\\n}","errorExample":""},{"type":"xml","example":"<DissociateVpnGatewayWithCertificateResponse>  \\r\\n<RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\r\\n</DissociateVpnGatewayWithCertificateResponse>  ","errorExample":""}]',
      'title' => '分离VPN网关与证书',
      'description' => '- **DissociateVpnGatewayWithCertificate**接口属于异步接口，即系统先返回一个请求ID，但该VPN网关尚未解除与SSL证书的绑定，系统后台的解绑任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询VPN网关实例的状态，来确认SSL证书的解绑状态：
    - 当VPN网关处于**updating**状态时，表示SSL证书正在解绑中。
    - 当VPN网关处于**active**状态时，表示SSL证书解绑成功。
- **DissociateVpnGatewayWithCertificate**接口不支持为同一个VPN网关并发解绑SSL证书。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVpnGatewayAttribute' => 
    array (
      'summary' => '调用ModifyVpnGatewayAttribute接口修改VPN网关的名称和描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的新名称。  

长度为2～100个字符，不能以`http://`或`https://`开头，需要以大写或小写字母开头，后面可包含大小写字母、数字、下划线（_）、短划线（-）和半角句号（.），不支持其他特殊字符。
',
            'type' => 'string',
            'required' => false,
            'example' => 'myvpn',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关新的描述信息。  
 
描述信息长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'AutoPropagate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将BGP路由自动传播到VPC。取值：

- **true**：自动传播。

- **false**：不自动传播。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => 'VPN网关实例所属VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-bp1ub1yt9cvakoel****',
              ),
              'Status' => 
              array (
                'description' => 'VPN网关的状态。

- **init**：初始化。
- **provisioning**：准备中。
- **active**：正常。
- **updating**：更新中。
- **deleting**：删除中。',
                'type' => 'string',
                'example' => 'active',
              ),
              'InternetIp' => 
              array (
                'description' => '- 在VPN网关实例支持创建单隧道模式IPsec-VPN连接的场景下，该地址为VPN网关实例的IP地址，可用于创建IPsec-VPN连接或SSL-VPN连接。

- 在VPN网关实例支持创建双隧道模式IPsec-VPN连接的场景下，该地址为用于创建IPsec-VPN连接的第一个IP地址，不能用于创建SSL-VPN连接。

    在VPN网关实例支持创建双隧道模式IPsec-VPN连接的场景下，系统会为VPN网关实例分配两个IPsec地址，用于创建双隧道模式的IPsec-VPN连接。',
                'type' => 'string',
                'example' => '116.62.XX.XX',
              ),
              'Spec' => 
              array (
                'description' => 'VPN网关实例的带宽规格。单位：Mbps。',
                'type' => 'string',
                'example' => '5M',
              ),
              'CreateTime' => 
              array (
                'description' => 'VPN网关实例的创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建VPN网关实例时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492753580000',
              ),
              'AutoPropagate' => 
              array (
                'description' => 'BGP路由是否自动传播到VPC。取值：

- **true**：自动传播。

- **false**：不自动传播。

',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例的ID。',
                'type' => 'string',
                'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
              ),
              'IntranetIp' => 
              array (
                'description' => 'VPN网关实例的IP地址。

当VPN网关的网络类型为私网，且仅支持创建单隧道模式的IPsec-VPN连接时会返回当前参数。',
                'type' => 'string',
                'example' => '172.27.30.24',
              ),
              'EndTime' => 
              array (
                'description' => 'VPN网关实例的到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至VPN网关实例到期时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1495382400000',
              ),
              'VSwitchId' => 
              array (
                'description' => 'VPN网关实例关联的交换机ID。',
                'type' => 'string',
                'example' => 'vsw-bp1y9ovl1cu9ou4tv****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
              'Description' => 
              array (
                'description' => 'VPN网关实例的描述信息。',
                'type' => 'string',
                'example' => 'test',
              ),
              'EnableBgp' => 
              array (
                'description' => 'VPN网关BGP功能的开启状态。取值：

- **true**：开启。

- **false**：未开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BusinessStatus' => 
              array (
                'description' => 'VPN网关实例的付费状态。取值：

- **Normal**：正常。
- **FinancialLocked**：欠费锁定。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'Name' => 
              array (
                'description' => 'VPN网关实例的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'DisasterRecoveryInternetIp' => 
              array (
                'description' => '系统为VPN网关实例分配的用于创建IPsec-VPN连接的第二个IP地址。

仅支持创建双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                'type' => 'string',
                'example' => '116.11.XX.XX',
              ),
              'DisasterRecoveryVSwitchId' => 
              array (
                'description' => 'VPN网关实例关联的第二个交换机ID。

仅支持创建双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                'type' => 'string',
                'example' => 'vsw-p0w95ql6tmr2ludkt****',
              ),
              'SslVpnInternetIp' => 
              array (
                'description' => 'SSL-VPN连接的IP地址。

仅支持创建双隧道模式IPsec-VPN连接的公网网络类型的VPN网关实例开启SSL-VPN功能后，才会返回当前参数。',
                'type' => 'string',
                'example' => '116.33.XX.XX',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'VPN网关实例所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The description is not valid',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.EnableBgp',
            'errorMessage' => 'Current version of the VPN does not support enable BGP.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.VpnConnectionExist',
            'errorMessage' => 'Auto propagate cannot be closed when VPN connections with BGP enabled exist.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.CenLevelNotSupport',
            'errorMessage' => 'When the VPC to which the VPN gateway belongs is attached to a FULL-mode CEN, the VPN gateway cannot enable BGP.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpcId\\": \\"vpc-bp1ub1yt9cvakoel****\\",\\n  \\"Status\\": \\"active\\",\\n  \\"InternetIp\\": \\"116.62.XX.XX\\",\\n  \\"Spec\\": \\"5M\\",\\n  \\"CreateTime\\": 1492753580000,\\n  \\"AutoPropagate\\": true,\\n  \\"VpnGatewayId\\": \\"vpn-bp1q8bgx4xnkm2ogj****\\",\\n  \\"IntranetIp\\": \\"172.27.30.24\\",\\n  \\"EndTime\\": 1495382400000,\\n  \\"VSwitchId\\": \\"vsw-bp1y9ovl1cu9ou4tv****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\",\\n  \\"Description\\": \\"test\\",\\n  \\"EnableBgp\\": true,\\n  \\"BusinessStatus\\": \\"Normal\\",\\n  \\"Name\\": \\"test\\",\\n  \\"DisasterRecoveryInternetIp\\": \\"116.11.XX.XX\\",\\n  \\"DisasterRecoveryVSwitchId\\": \\"vsw-p0w95ql6tmr2ludkt****\\",\\n  \\"SslVpnInternetIp\\": \\"116.33.XX.XX\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnGatewayAttributeResponse>\\n    <VpcId>vpc-bp1ub1yt9cvakoel****</VpcId>\\n    <Status>active</Status>\\n    <InternetIp>116.62.XX.XX</InternetIp>\\n    <Spec>5M</Spec>\\n    <CreateTime>1492753580000</CreateTime>\\n    <AutoPropagate>true</AutoPropagate>\\n    <VpnGatewayId>vpn-bp1q8bgx4xnkm2ogj****</VpnGatewayId>\\n    <EndTime>1495382400000</EndTime>\\n    <VSwitchId>vsw-bp1y9ovl1cu9ou4tv****</VSwitchId>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457</RequestId>\\n    <Description>test</Description>\\n    <EnableBgp>true</EnableBgp>\\n    <BusinessStatus>Normal</BusinessStatus>\\n    <DisasterRecoveryVSwitchId>vsw-p0w95ql6tmr2ludkt****</DisasterRecoveryVSwitchId>\\n    <DisasterRecoveryInternetIp>116.11.XX.XX</DisasterRecoveryInternetIp>\\n    <SslVpnInternetIp>116.33.XX.XX</SslVpnInternetIp>\\n    <Name>test</Name>\\n</ModifyVpnGatewayAttributeResponse>","errorExample":""}]',
      'title' => '修改VPN网关的名称和描述信息',
      'description' => '- **ModifyVpnGatewayAttribute**接口属于异步接口，即系统先返回VPN网关的信息，但该VPN网关的配置尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询VPN网关的配置的修改状态：
    - 当VPN网关处于**updating**状态时，表示VPN网关的配置正在修改中。
    - 当VPN网关处于**active**状态时，表示VPN网关的配置修改成功。
- **ModifyVpnGatewayAttribute**接口不支持并发修改同一个VPN网关的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'MoveVpnResourceGroup' => 
    array (
      'summary' => '修改VPN网关资源所属的资源组。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpn-8vb3lzn7biepthri8****',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。

- **VpnGateway**：VPN网关实例。

  改变VPN网关实例所属的资源组后，将一并修改该VPN网关实例下IPsec服务端、SSL服务端、SSL客户端证书、IPsec连接（指绑定VPN网关实例的IPsec连接）所属的资源组。
- **CustomerGateway**：用户网关实例。
- **VpnAttachment**：IPsec连接实例。
    
  指绑定转发路由器实例的IPsec连接或未绑定任何资源的IPsec连接。',
            'type' => 'string',
            'required' => true,
            'example' => 'VpnGateway',
          ),
        ),
        2 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的新资源组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-zhangjiakou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '89ED47AF-3319-566E-A5F5-94E3F47F54A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'InstanceId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidResourceId.NotFound',
            'errorMessage' => 'The specified ResourceId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.ResourceType',
            'errorMessage' => 'Invalid Resource Type value.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"89ED47AF-3319-566E-A5F5-94E3F47F54A8\\"\\n}","type":"json"}]',
      'title' => '修改VPN网关资源所属的资源组',
    ),
    'DescribeVpnGateway' => 
    array (
      'summary' => '调用DescribeVpnGateway接口查询指定VPN网关的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1r3v1xqkl0w519g****',
          ),
        ),
        2 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含未生效的订单数据。取值：

- **false**（默认值）：不包含未生效的订单数据。

- **true**：包含未生效的订单数据。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'VpnType' => 
              array (
                'description' => 'VPN网关类型。

<props="intl">取值：**Normal**，表示普通型。</props>

<props="china">取值：</props>
<props="china">

- **Normal**：普通型。

</props>
<props="china">

- **NationalStandard**：国密型。

</props>
',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'Status' => 
              array (
                'description' => 'VPN网关的状态。取值：

- **init**：初始化。

- **provisioning**：准备中。

- **active**：正常。

- **updating**：更新中。

- **deleting**：删除中。',
                'type' => 'string',
                'example' => 'init',
              ),
              'VpcId' => 
              array (
                'description' => 'VPN网关所属VPC的ID。',
                'type' => 'string',
                'example' => 'vpc-bp19m2yx1m5q0avyq****',
              ),
              'SslMaxConnections' => 
              array (
                'description' => 'SSL-VPN并发连接用户数的规格。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'Spec' => 
              array (
                'description' => 'VPN网关的带宽规格。单位：Mbps。',
                'type' => 'string',
                'example' => '5',
              ),
              'InternetIp' => 
              array (
                'description' => '- 在VPN网关实例支持创建单隧道模式IPsec-VPN连接的场景下，该地址为VPN网关实例的IP地址，可用于创建IPsec-VPN连接或SSL-VPN连接。

- 在VPN网关实例支持创建双隧道模式IPsec-VPN连接的场景下，该地址为用于创建IPsec-VPN连接的第一个IP地址，不能用于创建SSL-VPN连接。

    在VPN网关实例支持创建双隧道模式IPsec-VPN连接的场景下，系统会为VPN网关实例分配两个IPsec地址，用于创建双隧道模式的IPsec-VPN连接。',
                'type' => 'string',
                'example' => '47.22.XX.XX',
              ),
              'CreateTime' => 
              array (
                'description' => '创建VPN网关的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建VPN网关时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1495382400000',
              ),
              'AutoPropagate' => 
              array (
                'description' => '是否将BGP路由自动传播到VPC。取值：

- **true**：自动传播。

- **false**：不自动传播。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ChargeType' => 
              array (
                'description' => '付费类型。仅取值：

<props="intl">**POSTPAY**，按量计费。</props>

<props="partner">**POSTPAY**，按量计费。</props>

<props="china">**Prepay**，包年包月。</props>
',
                'type' => 'string',
                'example' => '中国站示例值：Prepay，国际站示例值：POSTPAY',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-bp1r3v1xqkl0w519g****',
              ),
              'Tag' => 
              array (
                'description' => '系统自动生成的VPN网关标签。

- **VpnEnableBgp**：表示VPN网关是否支持BGP功能。
    - **true**：支持。
    - **false**：不支持。
- **VisuallySsl**：表示VPN网关是否支持查看SSL客户端的连接信息。
    - **true**：支持。
    - **false**：不支持。
- **PbrPriority**：表示VPN网关是否支持为策略路由配置策略优先级。
    - **true**：支持。
    - **false**：不支持。
- **VpnNewImage**：表示VPN网关是否为新型VPN网关。
    - **true**：是。
    - **false**：否。
- **description**：表示VPN网关的描述信息，仅供系统内部使用。
- **VpnVersion**：表示VPN网关的版本号。',
                'type' => 'string',
                'example' => '{\\"VpnEnableBgp\\":\\"true\\",\\"VisuallySsl\\":\\"true\\",\\"PbrPriority\\":\\"true\\",\\"VpnNewImage\\":\\"true\\",\\"description\\":\\"转发1.3.7\\",\\"VpnVersion\\":\\"v1.2.4\\"}',
              ),
              'IpsecVpn' => 
              array (
                'description' => '是否开启了IPsec-VPN功能。取值：

- **enable**：已开启。

- **disable**：未开启。',
                'type' => 'string',
                'example' => 'enable',
              ),
              'EndTime' => 
              array (
                'description' => 'VPN网关到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至VPN网关到期时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1544666102000',
              ),
              'VSwitchId' => 
              array (
                'description' => 'VPN网关所属交换机的ID。',
                'type' => 'string',
                'example' => 'vsw-bp1dmzugdikc6hdgx****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '27E4E088-8DE0-4672-BF5C-0A412389DB9E',
              ),
              'Description' => 
              array (
                'description' => 'VPN网关的描述信息。',
                'type' => 'string',
                'example' => 'vpngatewaydescription',
              ),
              'EnableBgp' => 
              array (
                'description' => 'VPN网关BGP功能的开启状态。取值：

- **true**：已开启。

- **false**：未开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BusinessStatus' => 
              array (
                'description' => 'VPN网关的付费状态。取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'SslVpn' => 
              array (
                'description' => 'SSL-VPN功能的开启状态。取值：

- **enable**：已开启。

- **disable**：未开启。',
                'type' => 'string',
                'example' => 'enable',
              ),
              'Name' => 
              array (
                'description' => 'VPN网关的名称。',
                'type' => 'string',
                'example' => 'vpngatewayname',
              ),
              'ReservationData' => 
              array (
                'description' => '未生效的订单数据。

>仅**IncludeReservationData**传入**true**才会返回该组参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '未生效订单状态。取值：

- **1**：表示续费或续费变配的订单未生效。

- **2**：表示临时升配的订单已生效。在到达还原时间后，系统会将VPN网关规格恢复到临时升配前的规格。此时**ReservationIpsec**、**ReservationMaxConnections**、**ReservationSpec**、**ReservationSsl**表示为VPN网关临时升配前的规格。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'ReservationOrderType' => 
                  array (
                    'description' => '未生效订单类型。取值：

- **RENEWCHANGE**：续费变配。

- **TEMP_UPGRADE**：临时升配。

- **RENEW**：续费。',
                    'type' => 'string',
                    'example' => 'TEMP_UPGRADE',
                  ),
                  'ReservationIpsec' => 
                  array (
                    'description' => '未生效订单IPsec-VPN功能开启状态。取值：

- **enable**：已开启。

- **disable**：未开启。',
                    'type' => 'string',
                    'example' => 'enable',
                  ),
                  'ReservationSpec' => 
                  array (
                    'description' => '未生效订单的带宽规格。单位：Mbps。',
                    'type' => 'string',
                    'example' => '5',
                  ),
                  'ReservationSsl' => 
                  array (
                    'description' => '未生效订单SSL-VPN功能开启状态。取值：

- **enable**：已开启。

- **disable**：未开启。',
                    'type' => 'string',
                    'example' => 'enable',
                  ),
                  'ReservationMaxConnections' => 
                  array (
                    'description' => '未生效订单SSL-VPN并发连接用户数的规格。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'ReservationEndTime' => 
                  array (
                    'description' => '如果未生效订单类型为**TEMP_UPGRADE**（临时升配）时，该参数表示为临时升配的还原时间。

如果未生效订单类型为**RENEWCHANGE**（续费变配）或**RENEW**（续费）时，该参数表示为续费或续费变配开始生效时间。',
                    'type' => 'string',
                    'example' => '2020-07-20T16:00:00Z',
                  ),
                ),
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => '您自定义的VPN网关标签。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '您自定义的VPN网关标签。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'aaa',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'bbb',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'NetworkType' => 
              array (
                'description' => 'VPN网关的网络类型。

- **public**：公网VPN网关。
- **private**：私网VPN网关。',
                'type' => 'string',
                'example' => 'public',
              ),
              'DisasterRecoveryInternetIp' => 
              array (
                'description' => '系统为VPN网关实例分配的用于创建IPsec-VPN连接的第二个IP地址。

仅支持创建双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                'type' => 'string',
                'example' => '47.91.XX.XX',
              ),
              'DisasterRecoveryVSwitchId' => 
              array (
                'description' => 'VPN网关实例关联的第二个交换机ID。

仅支持创建双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                'type' => 'string',
                'example' => 'vsw-p0w95ql6tmr2ludkt****',
              ),
              'SslVpnInternetIp' => 
              array (
                'description' => 'SSL-VPN连接的IP地址。

仅支持创建双隧道模式IPsec-VPN连接的公网网络类型的VPN网关实例开启SSL-VPN功能后，才会返回当前参数。',
                'type' => 'string',
                'example' => '47.74.XX.XX',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'VPN网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
              'EniInstanceIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EniInstanceId' => 
                  array (
                    'description' => '系统为VPN网关实例创建的弹性网卡ENI（Elastic Network Interfaces）列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'ENI ID。',
                      'type' => 'string',
                      'example' => 'eni-7xvcxgmd4y2ypibn****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpnType\\": \\"Normal\\",\\n  \\"Status\\": \\"init\\",\\n  \\"VpcId\\": \\"vpc-bp19m2yx1m5q0avyq****\\",\\n  \\"SslMaxConnections\\": 5,\\n  \\"Spec\\": \\"5\\",\\n  \\"InternetIp\\": \\"47.22.XX.XX\\",\\n  \\"CreateTime\\": 1495382400000,\\n  \\"AutoPropagate\\": true,\\n  \\"ChargeType\\": \\"中国站示例值：Prepay，国际站示例值：POSTPAY\\",\\n  \\"VpnGatewayId\\": \\"vpn-bp1r3v1xqkl0w519g****\\",\\n  \\"Tag\\": \\"{\\\\\\\\\\\\\\"VpnEnableBgp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"VisuallySsl\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"PbrPriority\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"VpnNewImage\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"转发1.3.7\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"VpnVersion\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"v1.2.4\\\\\\\\\\\\\\"}\\",\\n  \\"IpsecVpn\\": \\"enable\\",\\n  \\"EndTime\\": 1544666102000,\\n  \\"VSwitchId\\": \\"vsw-bp1dmzugdikc6hdgx****\\",\\n  \\"RequestId\\": \\"27E4E088-8DE0-4672-BF5C-0A412389DB9E\\",\\n  \\"Description\\": \\"vpngatewaydescription\\",\\n  \\"EnableBgp\\": true,\\n  \\"BusinessStatus\\": \\"Normal\\",\\n  \\"SslVpn\\": \\"enable\\",\\n  \\"Name\\": \\"vpngatewayname\\",\\n  \\"ReservationData\\": {\\n    \\"Status\\": \\"1\\",\\n    \\"ReservationOrderType\\": \\"TEMP_UPGRADE\\",\\n    \\"ReservationIpsec\\": \\"enable\\",\\n    \\"ReservationSpec\\": \\"5\\",\\n    \\"ReservationSsl\\": \\"enable\\",\\n    \\"ReservationMaxConnections\\": 5,\\n    \\"ReservationEndTime\\": \\"2020-07-20T16:00:00Z\\"\\n  },\\n  \\"Tags\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"Key\\": \\"aaa\\",\\n        \\"Value\\": \\"bbb\\"\\n      }\\n    ]\\n  },\\n  \\"NetworkType\\": \\"public\\",\\n  \\"DisasterRecoveryInternetIp\\": \\"47.91.XX.XX\\",\\n  \\"DisasterRecoveryVSwitchId\\": \\"vsw-p0w95ql6tmr2ludkt****\\",\\n  \\"SslVpnInternetIp\\": \\"47.74.XX.XX\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\",\\n  \\"EniInstanceIds\\": {\\n    \\"EniInstanceId\\": [\\n      \\"eni-7xvcxgmd4y2ypibn****\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnGatewayResponse>\\n    <VpnType>Normal</VpnType>\\n    <Status>init</Status>\\n    <VpcId>vpc-bp19m2yx1m5q0avyq****</VpcId>\\n    <SslMaxConnections>5</SslMaxConnections>\\n    <Spec>5</Spec>\\n    <InternetIp>47.22.XX.XX</InternetIp>\\n    <CreateTime>1495382400000</CreateTime>\\n    <AutoPropagate>true</AutoPropagate>\\n    <ChargeType>中国站示例值：Prepay，国际站示例值：POSTPAY</ChargeType>\\n    <VpnGatewayId>vpn-bp1r3v1xqkl0w519g****</VpnGatewayId>\\n    <Tag>{\\\\\\"VpnEnableBgp\\\\\\":\\\\\\"true\\\\\\",\\\\\\"VisuallySsl\\\\\\":\\\\\\"true\\\\\\",\\\\\\"PbrPriority\\\\\\":\\\\\\"true\\\\\\",\\\\\\"VpnNewImage\\\\\\":\\\\\\"true\\\\\\",\\\\\\"description\\\\\\":\\\\\\"转发1.3.7\\\\\\",\\\\\\"VpnVersion\\\\\\":\\\\\\"v1.2.4\\\\\\"}</Tag>\\n    <IpsecVpn>enable</IpsecVpn>\\n    <EndTime>1544666102000</EndTime>\\n    <VSwitchId>vsw-bp1dmzugdikc6hdgx****</VSwitchId>\\n    <RequestId>27E4E088-8DE0-4672-BF5C-0A412389DB9E</RequestId>\\n    <Description>vpngatewaydescription</Description>\\n    <EnableBgp>true</EnableBgp>\\n    <BusinessStatus>Normal</BusinessStatus>\\n    <SslVpn>enable</SslVpn>\\n    <Name>vpngatewayname</Name>\\n    <DisasterRecoveryVSwitchId>vsw-p0w95ql6tmr2ludkt****</DisasterRecoveryVSwitchId>\\n    <DisasterRecoveryInternetIp>47.91.XX.XX</DisasterRecoveryInternetIp>\\n    <SslVpnInternetIp>47.74.XX.XX</SslVpnInternetIp>\\n    <ReservationData>\\n        <Status>1</Status>\\n        <ReservationOrderType>TEMP_UPGRADE</ReservationOrderType>\\n        <ReservationIpsec>enable</ReservationIpsec>\\n        <ReservationSpec>5</ReservationSpec>\\n        <ReservationSsl>enable</ReservationSsl>\\n        <ReservationMaxConnections>5</ReservationMaxConnections>\\n        <ReservationEndTime>2020-07-20T16:00:00Z</ReservationEndTime>\\n    </ReservationData>\\n    <Tags>\\n        <Key>aaa</Key>\\n        <Value>bbb</Value>\\n    </Tags>\\n    <NetworkType>public</NetworkType>\\n</DescribeVpnGatewayResponse>","errorExample":""}]',
      'title' => '查询指定VPN网关的详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVpnGateways' => 
    array (
      'summary' => '调用DescribeVpnGateways接口查询指定地域下已创建的VPN网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关所属专有网络VPC（Virtual Private Cloud）的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1m3i0kn1nd4wiw9****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-bp17lofy9fd0dnvzv****',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的状态。取值：

- **init** ：初始化。

- **provisioning** ：准备中。

- **active** ：正常。

- **updating** ：更新中。

- **deleting** ：删除中。
',
            'type' => 'string',
            'required' => false,
            'example' => 'active',
          ),
        ),
        4 => 
        array (
          'name' => 'BusinessStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的付费状态。取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含未生效的订购数据。取值：

- **false**（默认值）：不包含未生效的订购数据。

- **true**：包含未生效的订购数据。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'VPN网关绑定的标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'VPN网关绑定的标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签的标签键。一旦输入该值，则不允许为空字符串。

最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '标签的标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        9 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DF11D6F6-E35A-41C3-9B20-6FC8A901FE65',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VpnGateways' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VpnGateway' => 
                  array (
                    'description' => 'VPN网关信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPN网关的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpnType' => 
                        array (
                          'description' => 'VPN网关类型。
	
<props="china">

- **Normal**：普通型。
- **NationalStandard**：国密型。

</props>

<props="intl">取值：**Normal**，表示普通型。</props>
',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Status' => 
                        array (
                          'description' => 'VPN网关的状态。

- **init** ：初始化。

- **provisioning** ：准备中。

- **active** ：正常。

- **updating** ：更新中。

- **deleting** ：删除中。
',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'VpcId' => 
                        array (
                          'description' => ' VPN网关所属VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1m3i0kn1nd4wiw9****',
                        ),
                        'SslMaxConnections' => 
                        array (
                          'description' => 'VPN网关SSL连接数的规格。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '5',
                        ),
                        'Spec' => 
                        array (
                          'description' => 'VPN网关的带宽峰值。**M**表示单位Mbps。',
                          'type' => 'string',
                          'example' => '5M',
                        ),
                        'InternetIp' => 
                        array (
                          'description' => '- 在VPN网关实例支持创建单隧道模式IPsec-VPN连接的场景下，该地址为VPN网关实例的IP地址，可用于创建IPsec-VPN连接或SSL-VPN连接。

- 在VPN网关实例支持创建双隧道模式IPsec-VPN连接的场景下，该地址为用于创建IPsec-VPN连接的第一个IP地址，不能用于创建SSL-VPN连接。

    在VPN网关实例支持创建双隧道模式IPsec-VPN连接的场景下，系统会为VPN网关实例分配两个IPsec地址，用于创建双隧道模式的IPsec-VPN连接。',
                          'type' => 'string',
                          'example' => '47.12.XX.XX',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建VPN网关的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建VPN网关实例时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1515383700000',
                        ),
                        'AutoPropagate' => 
                        array (
                          'description' => '是否将BGP路由自动传播到VPC。

- **true**：自动传播。

- **false**：不自动传播。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => 'VPN网关的付费类型。

<props="china">仅取值：**Prepay**，包年包月。</props>

<props="intl">仅取值：**POSTPAY**，按量计费。</props>

<props="partner">仅取值： **POSTPAY**，按量计费。</props>',
                          'type' => 'string',
                          'example' => '中国站示例值：Prepay，国际站示例值：POSTPAY',
                        ),
                        'VpnGatewayId' => 
                        array (
                          'description' => 'VPN网关的ID。',
                          'type' => 'string',
                          'example' => 'vpn-bp17lofy9fd0dnvzv****',
                        ),
                        'Tag' => 
                        array (
                          'description' => '系统自动生成的VPN网关标签。

- **VpnEnableBgp**：表示VPN网关是否支持BGP功能。
    - **true**：支持。
    - **false**：不支持。
- **VisuallySsl**：表示VPN网关是否支持查看SSL客户端的连接信息。
    - **true**：支持。
    - **false**：不支持。
- **PbrPriority**：表示VPN网关是否支持为策略路由配置策略优先级。
    - **true**：支持。
    - **false**：不支持。
- **VpnNewImage**：表示VPN网关是否为新型VPN网关。
    - **true**：是。
    - **false**：否。
- **description**：表示VPN网关的描述信息，仅供系统内部使用。
- **VpnVersion**：表示VPN网关的版本号。',
                          'type' => 'string',
                          'example' => '{\\"VpnEnableBgp\\":\\"true\\",\\"VisuallySsl\\":\\"true\\",\\"PbrPriority\\":\\"true\\",\\"VpnNewImage\\":\\"true\\",\\"description\\":\\"转发1.3.7\\",\\"VpnVersion\\":\\"v1.2.4\\"}',
                        ),
                        'IpsecVpn' => 
                        array (
                          'description' => 'VPN网关是否开启了IPsec-VPN功能。

- **enable**：已开启。

- **disable**：未开启。',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'EndTime' => 
                        array (
                          'description' => 'VPN网关到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至VPN网关实例到期时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1518105600000',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => 'VPN网关所属交换机的ID。',
                          'type' => 'string',
                          'example' => 'vsw-bp15lbk8sgtr6r5b0****',
                        ),
                        'Description' => 
                        array (
                          'description' => 'VPN网关的描述信息。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'EnableBgp' => 
                        array (
                          'description' => 'VPN网关BGP功能的开启状态。

- **true**：已开启。

- **false**：未开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => 'VPN网关的付费状态。

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'SslVpn' => 
                        array (
                          'description' => 'VPN网关是否开启了SSL-VPN功能。

- **enable**：已开启。

- **disable**：未开启。',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'Name' => 
                        array (
                          'description' => 'VPN网关的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => 'VPN网关的网络类型。

- **public**：公网VPN网关。
- **private**：私网VPN网关。',
                          'type' => 'string',
                          'example' => 'public',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => 'VPN网关绑定的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'VPN网关绑定的标签信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ReservationData' => 
                        array (
                          'description' => '未生效的订购数据。

>仅**IncludeReservationData**传入**true**才会返回该组参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '未生效订单状态。

- **1**：表示续费或续费变配的订单未生效。

- **2**：表示临时升配的订单已生效。在到达还原时间后，系统会将VPN网关规格恢复到临时升配前的规格。此时**ReservationIpsec**、**ReservationMaxConnections**、**ReservationSpec**、**ReservationSsl**表示为VPN网关临时升配前的规格。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'ReservationOrderType' => 
                            array (
                              'description' => '未生效订单类型。

- **RENEWCHANGE**：续费变配。

- **TEMP_UPGRADE**：临时升配。

- **RENEW**：续费。',
                              'type' => 'string',
                              'example' => 'TEMP_UPGRADE',
                            ),
                            'ReservationIpsec' => 
                            array (
                              'description' => '未生效订单IPsec-VPN功能开启状态。

- **enable**：已开启。

- **disable**：未开启。',
                              'type' => 'string',
                              'example' => 'enable',
                            ),
                            'ReservationSpec' => 
                            array (
                              'description' => '未生效订单的带宽规格。单位：Mbps。',
                              'type' => 'string',
                              'example' => '5',
                            ),
                            'ReservationSsl' => 
                            array (
                              'description' => '未生效订单SSL-VPN功能开启状态。
- **enable**：已开启。

- **disable**：未开启。',
                              'type' => 'string',
                              'example' => 'enable',
                            ),
                            'ReservationMaxConnections' => 
                            array (
                              'description' => '未生效订单SSL-VPN并发连接用户数的规格。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'ReservationEndTime' => 
                            array (
                              'description' => '如果未生效订单类型为**TEMP_UPGRADE**（临时升配）时，该参数表示为临时升配的还原时间。

如果未生效订单类型为**RENEWCHANGE**（续费变配）或**RENEW**（续费）时，该参数表示为续费或续费变配开始生效时间。',
                              'type' => 'string',
                              'example' => '2021-07-20T16:00:00Z',
                            ),
                          ),
                        ),
                        'DisasterRecoveryInternetIp' => 
                        array (
                          'description' => '系统为VPN网关实例分配的用于创建IPsec-VPN连接的第二个IP地址。

仅支持创建双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                          'type' => 'string',
                          'example' => '47.91.XX.XX',
                        ),
                        'DisasterRecoveryVSwitchId' => 
                        array (
                          'description' => 'VPN网关实例关联的第二个交换机ID。

仅支持创建双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                          'type' => 'string',
                          'example' => 'vsw-p0w95ql6tmr2ludkt****',
                        ),
                        'SslVpnInternetIp' => 
                        array (
                          'title' => '',
                          'description' => 'SSL-VPN连接的IP地址。

仅支持创建双隧道模式IPsec-VPN连接的公网网络类型的VPN网关实例开启SSL-VPN功能后，才会返回当前参数。',
                          'type' => 'string',
                          'example' => '47.74.XX.XX',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'VPN网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                          'type' => 'string',
                          'example' => 'rg-acfmzs372yg****',
                        ),
                        'EniInstanceIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EniInstanceId' => 
                            array (
                              'description' => '系统为VPN网关实例创建的弹性网卡ENI（Elastic Network Interfaces）列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'ENI ID。',
                                'type' => 'string',
                                'example' => 'eni-7xvcxgmd4y2ypibn****',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"DF11D6F6-E35A-41C3-9B20-6FC8A901FE65\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VpnGateways\\": {\\n    \\"VpnGateway\\": [\\n      {\\n        \\"VpnType\\": \\"Normal\\",\\n        \\"Status\\": \\"active\\",\\n        \\"VpcId\\": \\"vpc-bp1m3i0kn1nd4wiw9****\\",\\n        \\"SslMaxConnections\\": 5,\\n        \\"Spec\\": \\"5M\\",\\n        \\"InternetIp\\": \\"47.12.XX.XX\\",\\n        \\"CreateTime\\": 1515383700000,\\n        \\"AutoPropagate\\": true,\\n        \\"ChargeType\\": \\"中国站示例值：Prepay，国际站示例值：POSTPAY\\",\\n        \\"VpnGatewayId\\": \\"vpn-bp17lofy9fd0dnvzv****\\",\\n        \\"Tag\\": \\"{\\\\\\\\\\\\\\"VpnEnableBgp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"VisuallySsl\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"PbrPriority\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"VpnNewImage\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"转发1.3.7\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"VpnVersion\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"v1.2.4\\\\\\\\\\\\\\"}\\",\\n        \\"IpsecVpn\\": \\"enable\\",\\n        \\"EndTime\\": 1518105600000,\\n        \\"VSwitchId\\": \\"vsw-bp15lbk8sgtr6r5b0****\\",\\n        \\"Description\\": \\"test\\",\\n        \\"EnableBgp\\": true,\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"SslVpn\\": \\"enable\\",\\n        \\"Name\\": \\"test\\",\\n        \\"NetworkType\\": \\"public\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        },\\n        \\"ReservationData\\": {\\n          \\"Status\\": \\"1\\",\\n          \\"ReservationOrderType\\": \\"TEMP_UPGRADE\\",\\n          \\"ReservationIpsec\\": \\"enable\\",\\n          \\"ReservationSpec\\": \\"5\\",\\n          \\"ReservationSsl\\": \\"enable\\",\\n          \\"ReservationMaxConnections\\": 5,\\n          \\"ReservationEndTime\\": \\"2021-07-20T16:00:00Z\\"\\n        },\\n        \\"DisasterRecoveryInternetIp\\": \\"47.91.XX.XX\\",\\n        \\"DisasterRecoveryVSwitchId\\": \\"vsw-p0w95ql6tmr2ludkt****\\",\\n        \\"SslVpnInternetIp\\": \\"47.74.XX.XX\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\",\\n        \\"EniInstanceIds\\": {\\n          \\"EniInstanceId\\": [\\n            \\"eni-7xvcxgmd4y2ypibn****\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnGatewaysResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>DF11D6F6-E35A-41C3-9B20-6FC8A901FE65</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VpnGateways>\\n        <VpnType>Normal</VpnType>\\n        <Status>Active</Status>\\n        <VpcId>vpc-bp1m3i0kn1nd4wiw9****</VpcId>\\n        <SslMaxConnections>5</SslMaxConnections>\\n        <Spec>5M</Spec>\\n        <InternetIp>47.12.XX.XX</InternetIp>\\n        <CreateTime>1515383700000</CreateTime>\\n        <AutoPropagate>true</AutoPropagate>\\n        <ChargeType>中国站示例值：Prepay，国际站示例值：POSTPAY</ChargeType>\\n        <VpnGatewayId>vpn-bp17lofy9fd0dnvzv****</VpnGatewayId>\\n        <Tag>{\\\\\\"VpnEnableBgp\\\\\\":\\\\\\"true\\\\\\",\\\\\\"VisuallySsl\\\\\\":\\\\\\"true\\\\\\",\\\\\\"PbrPriority\\\\\\":\\\\\\"true\\\\\\",\\\\\\"VpnNewImage\\\\\\":\\\\\\"true\\\\\\",\\\\\\"description\\\\\\":\\\\\\"转发1.3.7\\\\\\",\\\\\\"VpnVersion\\\\\\":\\\\\\"v1.2.4\\\\\\"}</Tag>\\n        <IpsecVpn>enable</IpsecVpn>\\n        <EndTime>1518105600000</EndTime>\\n        <VSwitchId>vsw-bp15lbk8sgtr6r5b0****</VSwitchId>\\n        <Description>test</Description>\\n        <EnableBgp>true</EnableBgp>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <SslVpn>enable</SslVpn>\\n        <Name>test</Name>\\n        <NetworkType>public</NetworkType>\\n        <DisasterRecoveryVSwitchId>vsw-p0w95ql6tmr2ludkt****</DisasterRecoveryVSwitchId>\\n        <DisasterRecoveryInternetIp>47.91.XX.XX</DisasterRecoveryInternetIp>\\n        <SslVpnInternetIp>47.74.XX.XX</SslVpnInternetIp>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n        <ReservationData>\\n            <Status>1</Status>\\n            <ReservationOrderType>TEMP_UPGRADE</ReservationOrderType>\\n            <ReservationIpsec>enable</ReservationIpsec>\\n            <ReservationSpec>5</ReservationSpec>\\n            <ReservationSsl>enable</ReservationSsl>\\n            <ReservationMaxConnections>5</ReservationMaxConnections>\\n            <ReservationEndTime>2021-07-20T16:00:00Z</ReservationEndTime>\\n        </ReservationData>\\n    </VpnGateways>\\n</DescribeVpnGatewaysResponse>","errorExample":""}]',
      'title' => '查询已创建的VPN网关',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListVpnCertificateAssociations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'CertificateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书类型。取值：

- **Encryption**：加密证书。

- **Signature**：签名证书。',
            'type' => 'string',
            'required' => false,
            'example' => 'Signature',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2be0****',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**20**，默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID列表。

一次最多支持查询20个VPN网关实例与SSL证书的绑定关系。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'VPN网关实例ID。

一次最多支持查询20个VPN网关实例与SSL证书的绑定关系。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
            ),
            'required' => false,
            'example' => 'vpn-bp1q8bgx4xnkm****',
            'maxLength' => 128,
            'maxItems' => 20,
          ),
        ),
        5 => 
        array (
          'name' => 'CertificateId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '证书ID列表。

一次最多支持查询20个SSL证书与VPN网关实例的绑定关系。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '证书ID。

一次最多支持查询20个SSL证书与VPN网关实例的绑定关系。',
              'type' => 'string',
              'required' => false,
              'example' => '848****',
            ),
            'required' => false,
            'example' => '6bfe4218-ea1d****',
            'maxLength' => 128,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。

- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'caeba0bbb2be****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '197AF2BD-547F-470C-B29A-8400400233EB',
              ),
              'TotalCount' => 
              array (
                'description' => '绑定关系总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'VpnCertificateRelations' => 
              array (
                'description' => '绑定关系列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '绑定关系。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpnGatewayId' => 
                    array (
                      'description' => 'VPN网关实例ID。',
                      'type' => 'string',
                      'example' => 'vpn-bp1usbiorilk51760****',
                    ),
                    'CertificateType' => 
                    array (
                      'description' => '证书类型。

- **Encryption**：加密证书。

- **Signature**：签名证书。',
                      'type' => 'string',
                      'example' => 'Signature',
                    ),
                    'CertificateId' => 
                    array (
                      'description' => '证书ID。',
                      'type' => 'string',
                      'example' => '6bfe4218-ea1d****',
                    ),
                    'AssociationTime' => 
                    array (
                      'description' => '绑定时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2020-12-29T09:30:29Z',
                    ),
                    'RegionId' => 
                    array (
                      'description' => 'VPN网关所在地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified next token (%s) is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"caeba0bbb2be****\\",\\n  \\"RequestId\\": \\"197AF2BD-547F-470C-B29A-8400400233EB\\",\\n  \\"TotalCount\\": 4,\\n  \\"MaxResults\\": 10,\\n  \\"VpnCertificateRelations\\": [\\n    {\\n      \\"VpnGatewayId\\": \\"vpn-bp1usbiorilk51760****\\",\\n      \\"CertificateType\\": \\"Signature\\",\\n      \\"CertificateId\\": \\"6bfe4218-ea1d****\\",\\n      \\"AssociationTime\\": \\"2020-12-29T09:30:29Z\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListVpnCertificateAssociationsResponse>\\n    <TotalCount>4</TotalCount>\\n    <RequestId>197AF2BD-547F-470C-B29A-8400400233EB</RequestId>\\n    <VpnCertificateRelations>\\n        <CertificateType>Signature</CertificateType>\\n        <AssociationTime>2020-12-29T09:30:29Z</AssociationTime>\\n        <VpnGatewayId>vpn-bp1usbiorilk51760****</VpnGatewayId>\\n        <CertificateId>848****</CertificateId>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </VpnCertificateRelations>\\n    <VpnCertificateRelations>\\n        <CertificateType>Encryption</CertificateType>\\n        <AssociationTime>2020-12-29T09:30:16Z</AssociationTime>\\n        <VpnGatewayId>vpn-bp1usbiorilk51760****</VpnGatewayId>\\n        <CertificateId>848****</CertificateId>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </VpnCertificateRelations>\\n    <VpnCertificateRelations>\\n        <CertificateType>Signature</CertificateType>\\n        <AssociationTime>2020-12-09T02:36:23Z</AssociationTime>\\n        <VpnGatewayId>vpn-bp1mrlw7134czer3l****</VpnGatewayId>\\n        <CertificateId>848****</CertificateId>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </VpnCertificateRelations>\\n    <VpnCertificateRelations>\\n        <CertificateType>Encryption</CertificateType>\\n        <AssociationTime>2020-12-09T02:35:50Z</AssociationTime>\\n        <VpnGatewayId>vpn-bp1mrlw7134czer3l****</VpnGatewayId>\\n        <CertificateId>848****</CertificateId>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </VpnCertificateRelations>\\n    <MaxResults>10</MaxResults>\\n</ListVpnCertificateAssociationsResponse>","errorExample":""}]',
      'title' => '获取VPN证书关联列表',
      'summary' => '调用ListVpnCertificateAssociations接口查询指定地域下VPN网关实例和证书的绑定关系。',
      'description' => '在调用**ListVpnCertificateAssociations**时：

- 如果您仅指定了**RegionId**参数的值，则表示您要查询指定地域下所有VPN网关实例和SSL证书的绑定关系。
- 如果您指定了**RegionId**和**CertificateType**参数的值，则表示您要查询指定地域下VPN网关实例与指定证书类型的SSL证书的绑定关系。
- 如果您指定了**RegionId**和**VpnGatewayId**参数的值，则表示您要查询指定地域下指定VPN网关实例与SSL证书的绑定关系。
- 如果您指定了**RegionId**和**CertificateId**参数的值，则表示您要查询指定地域下指定SSL证书与VPN网关实例的绑定关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DiagnoseVpnGateway' => 
    array (
      'summary' => '调用DiagnoseVpnGateway接口一键诊断指定的VPN网关实例。',
      'description' => '仅部分地域下的VPN网关实例支持一键诊断功能。关于地域的更多信息，请参见[VPN网关功能支持的地域](~~430697~~)。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'RegionId',
            'description' => 'VPN网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ResourceId',
            'description' => '待诊断的资源ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-uf66xniofskqtuoz1****',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ResourceType',
            'description' => '待诊断的资源类型。

仅取值：**IPsec**，表示IPsec连接。',
            'type' => 'string',
            'required' => true,
            'example' => 'IPsec',
          ),
        ),
        3 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VpnGatewayId',
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpn-m5efhj0k1p47ctuhl****',
          ),
        ),
        4 => 
        array (
          'name' => 'IPsecExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'IPsecExtendInfo',
            'description' => '检查指定地址间的私网连通性。取值：

- **PrivateSourceIp**：源IP地址。源IP地址需为VPC侧的地址。
- **PrivateDestinationIp**：目的IP地址。目的IP地址需为本地数据中心侧的地址。',
            'type' => 'string',
            'required' => false,
            'example' => '{"PrivateSourceIp":"192.168.1.1","PrivateDestinationIp":"192.168.0.1"}',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'system param',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'DiagnoseId' => 
              array (
                'title' => 'DiagnoseId',
                'description' => '诊断ID。

当前接口返回诊断ID后，您可以调用[GetVpnGatewayDiagnoseResult](~~2521963~~)接口查询诊断报告。',
                'type' => 'string',
                'example' => 'vpndgn-uf6kuxbe3iv028k3s****',
              ),
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.DiagnoseVpn',
            'errorMessage' => 'Current version of the VPN does not support diagnose.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.ResourceType',
            'errorMessage' => 'The specified resource type [%s] is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.VpnGatewayDiagnosing',
            'errorMessage' => 'The VPN gateway is diagnosing.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.StartDiagnose',
            'errorMessage' => 'Start VPN gateway diagnose failed.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.PrivateSourceIp',
            'errorMessage' => 'The specified private source IP [%s] is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.PrivateDestinationIp',
            'errorMessage' => 'The specified private destination IP [%s] is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidResourceId.NotFound',
            'errorMessage' => 'The specified resource id [%s] does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"DiagnoseId\\": \\"vpndgn-uf6kuxbe3iv028k3s****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DiagnoseVpnGatewayResponse>\\n    <DiagnoseId>vpndgn-uf6kuxbe3iv028k3s****</DiagnoseId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n</DiagnoseVpnGatewayResponse>","errorExample":""}]',
      'title' => '一键诊断指定的VPN网关实例',
    ),
    'GetVpnGatewayDiagnoseResult' => 
    array (
      'summary' => '调用GetVpnGatewayDiagnoseResult接口查询VPN网关实例的一键诊断结果。',
      'description' => '调用**GetVpnGatewayDiagnoseResult**接口时，除必填参数外，**DiagnoseId**和**VpnGatewayId**参数需至少输入一个。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'RegionId',
            'description' => 'VPN网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'DiagnoseId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'DiagnoseId',
            'description' => '诊断ID。

在您[DiagnoseVpnGateway](~~469751~~)调用接口时，系统会返回对应的诊断ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpndgn-uf6kuxbe3iv028k3s****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VpnGatewayId',
            'description' => 'VPN网关实例ID。

',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-uf6fzwp0ck3frwtbk****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'system param',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema object',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'BeginTime' => 
              array (
                'title' => 'FinishTime',
                'description' => '诊断开始的时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mm:ssZ`。',
                'type' => 'string',
                'example' => '2022-12-15T05:28:57Z',
              ),
              'DiagnoseId' => 
              array (
                'title' => 'DiagnoseId',
                'description' => '诊断ID。',
                'type' => 'string',
                'example' => 'vpndgn-uf6sgneym02lxyuv4****',
              ),
              'DiagnoseResult' => 
              array (
                'title' => 'DiagnoseResult',
                'description' => '诊断项信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '诊断项信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DiagnoseName' => 
                    array (
                      'title' => 'diagnoseName',
                      'description' => '诊断项。

- **RouteEntryConflict**：路由冲突。
- **VpnRouteQuota**：VPN网关目的路由配额。
- **VpnIPsecQuota**：VPN网关IPsec连接配额。
- **VpnPbrRouteQuota**：VPN网关策略路由配额。
- **VcoConfigConsistency**：IPsec配置一致性。
- **VcoUserInternetIpConnectivity**：用户网关公网连通性。
- **VcoPrivateConnectivity**：私网连通性。

关于每个诊断项的说明信息，请参见[一键诊断背景信息](~~190330~~)。
',
                      'type' => 'string',
                      'example' => 'RouteEntryConflict',
                    ),
                    'DiagnoseResultDescription' => 
                    array (
                      'title' => 'DiagnoseResultDescription',
                      'description' => '诊断项的诊断结果。

针对每个诊断项，接口会返回不同的信息，说明如下：

- **RouteEntryConflict**：系统会返回对应路由冲突的信息。
- **VpnRouteQuota**：
    - **quotaName**：目的路由配额ID。
    - **quantity**：当前VPN网关实例支持创建的目的路由条目数量。
    - **used**：当前VPN网关实例已创建的目的路由条目数量。
- **VpnIPsecQuota**：
    - **quotaName**：IPsec连接配额ID。
    - **quantity**：当前VPN网关实例支持创建的IPsec连接数量。
    - **used**：当前VPN网关实例已创建的IPsec连接数量。
- **VpnPbrRouteQuota**：
    - **quotaName**：策略路由配额ID。
    - **quantity**：当前VPN网关实例支持创建的策略路由条目数量。
    - **used**：当前VPN网关实例已创建的策略路由条目数量。
- **VcoConfigConsistency**：
    - **vcoLackConf**：系统无法获取IPsec连接对端的配置。
    - **vcoRunningConf**：IPsec连接对端已添加的配置信息。
    - **vcoDiffConf**：IPsec连接侧（本端）和对端不一致的配置列表。
    - **vcoConf**：IPsec连接侧（本端）已添加的配置信息。
- **VcoUserInternetIpConnectivity**：
    - **targetIp**：用户网关的公网IP地址。
    - **rtt**：系统访问用户网关公网IP地址时的时延。单位：ms。
    - **lossRate**：系统访问用户网关公网IP地址时的丢包率。
- **VcoPrivateConnectivity**：
    - **targetIp**：源IP地址。
    - **srcIp**：目的IP地址。
    - **rtt**：源IP地址访问目的IP地址时的时延。单位：ms。
    - **lossRate**：源IP地址访问目的IP地址时的丢包率。

',
                      'type' => 'string',
                      'example' => '{\\"targetIp\\":\\"192.168.0.1\\",\\"srcIp\\":\\"192.168.1.1\\",\\"rtt\\":-1.0,\\"lossRate\\":100.0}',
                    ),
                    'DiagnoseResultLevel' => 
                    array (
                      'title' => 'DiagnoseResultLevel',
                      'description' => '诊断项的诊断结果级别。

- **normal**：正常。
- **warning**：警告。
- **error**：异常。

关于每个诊断项对应的每个诊断结果级别的说明，请参见[一键诊断背景信息](~~190330~~)。',
                      'type' => 'string',
                      'example' => 'normal',
                    ),
                  ),
                ),
              ),
              'FinishTime' => 
              array (
                'title' => 'FinishTime',
                'description' => '诊断结束的时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mm:ssZ`。',
                'type' => 'string',
                'example' => '2022-12-15T05:29:08Z',
              ),
              'FinishedCount' => 
              array (
                'title' => 'FinishedCount',
                'description' => '已完成诊断的诊断项数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '312C4D5A-6563-5FC6-8C6E-A43A5A316FEB',
              ),
              'ResourceInstanceId' => 
              array (
                'title' => 'ResourceInstanceId',
                'description' => '诊断的资源ID。',
                'type' => 'string',
                'example' => 'vco-uf6huqsu63azl7mdp****',
              ),
              'ResourceType' => 
              array (
                'title' => 'ResourceType',
                'description' => '诊断的资源类型。

取值：**IPsec**，表示IPsec连接。',
                'type' => 'string',
                'example' => 'IPsec',
              ),
              'TotalCount' => 
              array (
                'title' => 'TotalCount',
                'description' => '诊断项总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'VpnGatewayId' => 
              array (
                'title' => 'VpnGatewayId',
                'description' => 'VPN网关实例ID。
',
                'type' => 'string',
                'example' => 'vpn-uf6fzwp0ck3frwtbk****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'param_error',
            'errorMessage' => 'The param is must be in ...',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.DiagnoseInfo',
            'errorMessage' => 'The VPN gateway ID and diagnose ID cannot be empty at the same time.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.DiagnoseTimeout',
            'errorMessage' => 'Diagnose failed because of timeout.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.VpnConnectionDeleted',
            'errorMessage' => 'Diagnose failed because the VPN connection has been deleted.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDiagnoseId.NotFound',
            'errorMessage' => 'The specified diagnose ID [%s] does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpnGatewayId.NotFound',
            'errorMessage' => 'The specified VPN gateway [%s] does not have any diagnoses.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"BeginTime\\": \\"2022-12-15T05:28:57Z\\",\\n  \\"DiagnoseId\\": \\"vpndgn-uf6sgneym02lxyuv4****\\",\\n  \\"DiagnoseResult\\": [\\n    {\\n      \\"DiagnoseName\\": \\"RouteEntryConflict\\",\\n      \\"DiagnoseResultDescription\\": \\"{\\\\\\\\\\\\\\"targetIp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"192.168.0.1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"srcIp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"192.168.1.1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"rtt\\\\\\\\\\\\\\":-1.0,\\\\\\\\\\\\\\"lossRate\\\\\\\\\\\\\\":100.0}\\",\\n      \\"DiagnoseResultLevel\\": \\"normal\\"\\n    }\\n  ],\\n  \\"FinishTime\\": \\"2022-12-15T05:29:08Z\\",\\n  \\"FinishedCount\\": 7,\\n  \\"RequestId\\": \\"312C4D5A-6563-5FC6-8C6E-A43A5A316FEB\\",\\n  \\"ResourceInstanceId\\": \\"vco-uf6huqsu63azl7mdp****\\",\\n  \\"ResourceType\\": \\"IPsec\\",\\n  \\"TotalCount\\": 7,\\n  \\"VpnGatewayId\\": \\"vpn-uf6fzwp0ck3frwtbk****\\"\\n}","errorExample":""},{"type":"xml","example":"<GetVpnGatewayDiagnoseResultResponse>\\n    <TotalCount>7</TotalCount>\\n    <FinishTime>2022-12-15T05:29:08Z</FinishTime>\\n    <RequestId>312C4D5A-6563-5FC6-8C6E-A43A5A316FEB</RequestId>\\n    <VpnGatewayId>vpn-uf6fzwp0ck3frwtbk****</VpnGatewayId>\\n    <FinishedCount>7</FinishedCount>\\n    <DiagnoseId>vpndgn-uf6sgneym02lxyuv4****</DiagnoseId>\\n    <BeginTime>2022-12-15T05:28:57Z</BeginTime>\\n    <ResourceType>IPsec</ResourceType>\\n    <ResourceInstanceId>vco-uf6huqsu63azl7mdp****</ResourceInstanceId>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>normal</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>No routing conflict</DiagnoseResultDescription>\\n        <DiagnoseName>RouteEntryConflict</DiagnoseName>\\n    </DiagnoseResult>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>normal</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>{\\"quotaName\\":\\"vpn_route_entry_quota\\",\\"quantity\\":\\"30\\",\\"used\\":\\"0\\"}</DiagnoseResultDescription>\\n        <DiagnoseName>VpnRouteQuota</DiagnoseName>\\n    </DiagnoseResult>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>normal</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>{\\"quotaName\\":\\"vpn_quota_ipsec_connetcions_num\\",\\"quantity\\":\\"10\\",\\"used\\":\\"1\\"}</DiagnoseResultDescription>\\n        <DiagnoseName>VpnIPsecQuota</DiagnoseName>\\n    </DiagnoseResult>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>normal</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>{\\"quotaName\\":\\"vpn_pbr_route_entry_quota\\",\\"quantity\\":\\"20\\",\\"used\\":\\"0\\"}</DiagnoseResultDescription>\\n        <DiagnoseName>VpnPbrRouteQuota</DiagnoseName>\\n    </DiagnoseResult>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>warning</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>{\\"vcoLackConf\\":[\\"leftid\\",\\"rightid\\",\\"right\\",\\"leftsubnets\\",\\"rightsubnets\\",\\"ike_auth_alg\\",\\"ike_enc_alg\\",\\"ike_lifetime\\",\\"ipsec_auth_alg\\",\\"ipsec_enc_alg\\",\\"ipsec_lifetime\\",\\"nat_traversal\\",\\"dpd\\",\\"ike_pfs\\",\\"ipsec_pfs\\"],\\"vcoRunningConf\\":{},\\"vcoDiffConf\\":{},\\"vcoConf\\":{\\"ipsec_lifetime\\":\\"86400\\",\\"ike_pfs\\":\\"group2\\",\\"ike_enc_alg\\":\\"aes\\",\\"leftsubnets\\":\\"0.0.0.0/0\\",\\"nat_traversal\\":\\"true\\",\\"leftid\\":\\"47.XX.XX.15\\",\\"right\\":\\"1.XX.XX.1\\",\\"rightsubnets\\":\\"0.0.0.0/0\\",\\"ipsec_pfs\\":\\"group2\\",\\"ike_auth_alg\\":\\"sha1\\",\\"ike_lifetime\\":\\"86400\\",\\"rightid\\":\\"1.XX.XX.1\\",\\"dpd\\":\\"true\\",\\"ipsec_auth_alg\\":\\"sha1\\",\\"ipsec_enc_alg\\":\\"aes\\"}}</DiagnoseResultDescription>\\n        <DiagnoseName>VcoConfigConsistency</DiagnoseName>\\n    </DiagnoseResult>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>error</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>{\\"targetIp\\":\\"1.XX.XX.1\\",\\"rtt\\":-1.0,\\"lossRate\\":100.0}</DiagnoseResultDescription>\\n        <DiagnoseName>VcoUserInternetIpConnectivity</DiagnoseName>\\n    </DiagnoseResult>\\n    <DiagnoseResult>\\n        <DiagnoseResultLevel>error</DiagnoseResultLevel>\\n        <DiagnoseResultDescription>{\\"targetIp\\":\\"192.168.0.1\\",\\"srcIp\\":\\"192.168.1.1\\",\\"rtt\\":-1.0,\\"lossRate\\":100.0}</DiagnoseResultDescription>\\n        <DiagnoseName>VcoPrivateConnectivity</DiagnoseName>\\n    </DiagnoseResult>\\n</GetVpnGatewayDiagnoseResultResponse>","errorExample":""}]',
      'title' => '查询VPN网关实例的一键诊断结果',
    ),
    'DescribeVpnGatewayAvailableZones' => 
    array (
      'summary' => '调用DescribeVpnGatewayAvailableZones接口查询指定地域支持部署IPsec连接的可用区列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽规格。
- 对于IPsec连接绑定VPN网关实例的场景，该参数表示VPN网关实例的带宽规格。
- 对于IPsec连接绑定转发路由器的场景，该参数表示您期望的IPsec连接可以支持的带宽规格。

不同的带宽规格可能会影响查询出的可用区信息。取值：

- **5M**
- **10M**
- **20M**
- **50M**
- **100M**
- **200M**
- **500M**
- **1000M**',
            'type' => 'string',
            'required' => true,
            'example' => '5M',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- **zh-CN**：中文。
- **en-US**（默认值）：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RegionId' => 
              array (
                'description' => '地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '29784052-931F-543D-A612-36B3838163FA',
              ),
              'AvailableZoneIdList' => 
              array (
                'description' => '可用区列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '可用区信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ZoneId' => 
                    array (
                      'description' => '可用区ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-h',
                    ),
                    'ZoneName' => 
                    array (
                      'description' => '可用区名称。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-h',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"RequestId\\": \\"29784052-931F-543D-A612-36B3838163FA\\",\\n  \\"AvailableZoneIdList\\": [\\n    {\\n      \\"ZoneId\\": \\"cn-hangzhou-h\\",\\n      \\"ZoneName\\": \\"cn-hangzhou-h\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询指定地域支持部署IPsec连接的可用区列表',
    ),
    'CreateCustomerGateway' => 
    array (
      'summary' => '调用CreateCustomerGateway接口创建用户网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44****',
          ),
        ),
        2 => 
        array (
          'name' => 'IpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心网关设备的公网IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '101.12.XX.XX',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关的名称。  

名称长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关的描述信息。  

描述信息长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'Asn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心网关设备的自治系统号。

**Asn**是一个4字节的号码，支持按照两段位的格式进行输入，即：前16位比特.后16位比特。每个段位使用十进制输入。

例如输入123.456，则表示自治系统号：123*65536+456=8061384。',
            'type' => 'string',
            'required' => false,
            'example' => '65530',
          ),
        ),
        6 => 
        array (
          'name' => 'AuthKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心网关设备BGP路由协议的认证密钥。

密钥长度为1~64个字符，只支持ASCII字符，不支持空格、中文和半角问号（?）。',
            'type' => 'string',
            'required' => false,
            'example' => 'AuthKey****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '用户网关待添加的标签列表。

一次最多支持为用户网关添加20个标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。一旦输入该值，则不允许为空字符串。

最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        8 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所属的资源组ID。

- 您可以调用[ListResourceGroups](~~158855~~)接口查询资源组ID。
- 如果您未指定资源组，用户网关创建后将归属于默认资源组。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aek2qo2h4jy****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D32B3C26-6C6C-4988-93E9-D2A6444CE6AE',
              ),
              'IpAddress' => 
              array (
                'description' => '本地数据中心网关设备的公网IP地址。',
                'type' => 'string',
                'example' => '101.12.XX.XX',
              ),
              'Description' => 
              array (
                'description' => '用户网关的描述信息。',
                'type' => 'string',
                'example' => 'desctest',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => '用户网关的实例ID。',
                'type' => 'string',
                'example' => 'cgw-bp1jrawp82av6bws9****',
              ),
              'CreateTime' => 
              array (
                'description' => '创建用户网关的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建用户网关时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1493363486000',
              ),
              'Name' => 
              array (
                'description' => '用户网关的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthkey.Malformed',
            'errorMessage' => 'The specified BGP authentication key (%s) is malformed.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIpAddress.AlreadyExist',
            'errorMessage' => 'Specified IpAddress is already exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpAddress.WrongFormat',
            'errorMessage' => 'Specified IpAddress is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The description is not valid',
          ),
          5 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.Asn',
            'errorMessage' => 'The specified Asn is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.MissingAsn',
            'errorMessage' => 'The autonomous system number of the customer gateway is mandatory when BGP authentication key is specified.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.NoRamPermission',
            'errorMessage' => 'Vpn Service has no permission to operate your IDaaS instances.',
          ),
          14 => 
          array (
            'errorCode' => 'CreateVpnUserGatewayQuotaFull.QuotaFull',
            'errorMessage' => 'The number of created VPN customer gateways exceeds the quota.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'The operation against this instance is too frequent, please try again later.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D32B3C26-6C6C-4988-93E9-D2A6444CE6AE\\",\\n  \\"IpAddress\\": \\"101.12.XX.XX\\",\\n  \\"Description\\": \\"desctest\\",\\n  \\"CustomerGatewayId\\": \\"cgw-bp1jrawp82av6bws9****\\",\\n  \\"CreateTime\\": 1493363486000,\\n  \\"Name\\": \\"nametest\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateCustomerGatewayResponse>\\n    <RequestId>D32B3C26-6C6C-4988-93E9-D2A6444CE6AE</RequestId>\\n    <IpAddress>101.12.XX.XX</IpAddress>\\n    <Description>desctest</Description>\\n    <CustomerGatewayId>cgw-bp1jrawp82av6bws9****</CustomerGatewayId>\\n    <CreateTime>1493363486000</CreateTime>\\n    <Name>nametest</Name>\\n</CreateCustomerGatewayResponse>","errorExample":""}]',
      'title' => '创建用户网关',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCustomerGateway' => 
    array (
      'summary' => '调用DeleteCustomerGateway接口删除指定的用户网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04****',
          ),
        ),
        2 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 用户网关的实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cgw-bp1pvpl9r9adju6l5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.VpnConnection',
            'errorMessage' => 'There are vpn connections on specified customer gateway not deleted.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.task.conflict',
            'errorMessage' => 'The VPN is in the configuration state, please wait a while before operating.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidCustomerGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified customer gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCustomerGatewayResponse>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteCustomerGatewayResponse>","errorExample":""}]',
      'title' => '删除指定的用户网关',
      'description' => '删除用户网关前，请确保用户网关未关联任何IPsec连接。删除IPsec连接，请参见[DeleteVpnAttachment](~~2526938~~)或[DeleteVpnConnection](~~2526948~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCustomerGatewayAttribute' => 
    array (
      'summary' => '调用ModifyCustomerGatewayAttribute接口修改用户网关的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所属的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44****',
          ),
        ),
        2 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cgw-bp1pvpl9r9adju6l5****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关的名称。  

名称长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关的描述信息。  

描述信息长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'AuthKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心网关设备BGP路由协议的认证密钥。

密钥长度为1~64个字符，只支持ASCII字符，不支持空格、中文和半角问号（?）。',
            'type' => 'string',
            'required' => false,
            'example' => 'AuthKey****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8AA5CE21-2E6A-4530-BDF5-F055849476E6',
              ),
              'IpAddress' => 
              array (
                'description' => '本地数据中心网关设备的公网IP地址。',
                'type' => 'string',
                'example' => '139.32.XX.XX',
              ),
              'Description' => 
              array (
                'description' => '用户网关的描述信息。',
                'type' => 'string',
                'example' => 'desctest',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => '用户网关的实例ID。',
                'type' => 'string',
                'example' => 'cgw-bp1pvpl9r9adju6l5****',
              ),
              'CreateTime' => 
              array (
                'description' => '创建用户网关的时间戳。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492747187000',
              ),
              'Name' => 
              array (
                'description' => '用户网关的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '用户网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The description is not valid',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.MissingAsn',
            'errorMessage' => 'The autonomous system number of the customer gateway is mandatory when BGP authentication key is specified.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidAuthkey.Malformed',
            'errorMessage' => 'The specified BGP authentication key (%s) is malformed.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationDenied.VpnFinancialLocked',
            'errorMessage' => 'The associated VPN gateway is financially locked. You cannot update the attributes of the customer gateway.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationDenied.VpnConfiguring',
            'errorMessage' => 'The associated VPN gateway is being configured. You cannot update the attributes of the customer gateway.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidCustomerGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified customer gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8AA5CE21-2E6A-4530-BDF5-F055849476E6\\",\\n  \\"IpAddress\\": \\"139.32.XX.XX\\",\\n  \\"Description\\": \\"desctest\\",\\n  \\"CustomerGatewayId\\": \\"cgw-bp1pvpl9r9adju6l5****\\",\\n  \\"CreateTime\\": 1492747187000,\\n  \\"Name\\": \\"nametest\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyCustomerGatewayAttributeResponse>\\n    <RequestId>8AA5CE21-2E6A-4530-BDF5-F055849476E6</RequestId>\\n    <IpAddress>139.32.XX.XX</IpAddress>\\n    <Description>desctest</Description>\\n    <CustomerGatewayId>cgw-bp1pvpl9r9adju6l5****</CustomerGatewayId>\\n    <CreateTime>1492747187000</CreateTime>\\n    <Name>nametest</Name>\\n</ModifyCustomerGatewayAttributeResponse>","errorExample":""}]',
      'title' => '修改用户网关的名称和描述信息',
      'description' => '- 调用**ModifyCustomerGatewayAttribute**接口时，如果参数**AuthKey**不为空时，该接口为异步接口，即系统先返回用户网关的信息，但该用户网关的配置尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询用户网关的配置的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示用户网关的配置正在修改中。
    - 当VPN网关实例处于**active**状态时，表示用户网关的配置修改成功。
- 调用**ModifyCustomerGatewayAttribute**接口时，如果参数**AuthKey**为空时，该接口为同步接口。

- **ModifyCustomerGatewayAttribute**接口不支持并发修改同一个用户网关的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomerGateway' => 
    array (
      'summary' => '查询已创建的用户网关的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所属的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 用户网关的实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cgw-bp1pvpl9r9adju6l5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Asn' => 
              array (
                'description' => '本地数据中心网关设备的自治系统号。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '65535',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A0457BC9-6C0F-4437-AB9D-FB2EABC1D6A2',
              ),
              'IpAddress' => 
              array (
                'description' => '本地数据中心网关设备的IP地址。',
                'type' => 'string',
                'example' => '139.32.XX.XX',
              ),
              'Description' => 
              array (
                'description' => '用户网关的描述信息。',
                'type' => 'string',
                'example' => 'desctest',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => '用户网关的实例ID。',
                'type' => 'string',
                'example' => 'cgw-bp1pvpl9r9adju6l5****',
              ),
              'CreateTime' => 
              array (
                'description' => '创建用户网关的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建用户网关时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492747187000',
              ),
              'Name' => 
              array (
                'description' => '用户网关的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'AuthKey' => 
              array (
                'description' => '本地数据中心网关设备BGP路由协议的认证密钥。',
                'type' => 'string',
                'example' => 'AuthKey****',
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => '用户网关绑定的标签列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'TagKey',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'TagValue',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ResourceGroupId' => 
              array (
                'description' => '用户网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidCustomerGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified customer gateway instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Asn\\": 65535,\\n  \\"RequestId\\": \\"A0457BC9-6C0F-4437-AB9D-FB2EABC1D6A2\\",\\n  \\"IpAddress\\": \\"139.32.XX.XX\\",\\n  \\"Description\\": \\"desctest\\",\\n  \\"CustomerGatewayId\\": \\"cgw-bp1pvpl9r9adju6l5****\\",\\n  \\"CreateTime\\": 1492747187000,\\n  \\"Name\\": \\"nametest\\",\\n  \\"AuthKey\\": \\"AuthKey****\\",\\n  \\"Tags\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"Key\\": \\"TagKey\\",\\n        \\"Value\\": \\"TagValue\\"\\n      }\\n    ]\\n  },\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomerGatewayResponse>\\n    <Asn>65535</Asn>\\n    <RequestId>A0457BC9-6C0F-4437-AB9D-FB2EABC1D6A2</RequestId>\\n    <IpAddress>139.32.XX.XX</IpAddress>\\n    <Description>desctest</Description>\\n    <CustomerGatewayId>cgw-bp1pvpl9r9adju6l5****</CustomerGatewayId>\\n    <CreateTime>1492747187000</CreateTime>\\n    <Name>nametest</Name>\\n    <AuthKey>AuthKey****</AuthKey>\\n    <Tags>\\n        <Key>TagKey</Key>\\n        <Value>TagValue</Value>\\n    </Tags>\\n</DescribeCustomerGatewayResponse>","errorExample":""}]',
      'title' => '查询已创建的用户网关',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomerGateways' => 
    array (
      'summary' => '调用DescribeCustomerGateways接口查询用户网关的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所属的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关的实例ID。 

> 如果您不指定用户网关的实例ID，则系统默认查询当前地域下所有用户网关的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'cgw-bp1pvpl9r9adju6l5****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '用户网关绑定的标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。一旦输入该值，则不允许为空字符串。

最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E82612A9-CB90-4D7E-B394-1DB7F6509B29',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'CustomerGateways' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CustomerGateway' => 
                  array (
                    'description' => '用户网关信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '用户网关的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IpAddress' => 
                        array (
                          'description' => '本地数据中心网关设备的IP地址。',
                          'type' => 'string',
                          'example' => '139.32.XX.XX',
                        ),
                        'Asn' => 
                        array (
                          'description' => '本地数据中心网关设备的自治系统号。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '65530',
                        ),
                        'Description' => 
                        array (
                          'description' => '用户网关的描述信息。',
                          'type' => 'string',
                          'example' => 'desctest',
                        ),
                        'CustomerGatewayId' => 
                        array (
                          'description' => '用户网关的实例ID。',
                          'type' => 'string',
                          'example' => 'cgw-bp1pvpl9r9adju6l5****',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建用户网关的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建用户网关时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1492747187000',
                        ),
                        'Name' => 
                        array (
                          'description' => '用户网关的名称。',
                          'type' => 'string',
                          'example' => 'nametest',
                        ),
                        'AuthKey' => 
                        array (
                          'description' => '本地数据中心网关设备BGP路由协议的认证密钥。',
                          'type' => 'string',
                          'example' => 'AuthKey****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '用户网关绑定的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'TagKey',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'TagValue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '用户网关所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                          'type' => 'string',
                          'example' => 'rg-acfmzs372yg****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"E82612A9-CB90-4D7E-B394-1DB7F6509B29\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"CustomerGateways\\": {\\n    \\"CustomerGateway\\": [\\n      {\\n        \\"IpAddress\\": \\"139.32.XX.XX\\",\\n        \\"Asn\\": 65530,\\n        \\"Description\\": \\"desctest\\",\\n        \\"CustomerGatewayId\\": \\"cgw-bp1pvpl9r9adju6l5****\\",\\n        \\"CreateTime\\": 1492747187000,\\n        \\"Name\\": \\"nametest\\",\\n        \\"AuthKey\\": \\"AuthKey****\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"TagKey\\",\\n              \\"Value\\": \\"TagValue\\"\\n            }\\n          ]\\n        },\\n        \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomerGatewaysResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>E82612A9-CB90-4D7E-B394-1DB7F6509B29</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <CustomerGateways>\\n        <IpAddress>139.32.XX.XX</IpAddress>\\n        <Asn>65530</Asn>\\n        <Description>desctest</Description>\\n        <CustomerGatewayId>cgw-bp1pvpl9r9adju6l5****</CustomerGatewayId>\\n        <CreateTime>1492747187000</CreateTime>\\n        <Name>nametest</Name>\\n        <AuthKey>AuthKey****</AuthKey>\\n        <Tags>\\n            <Key>TagKey</Key>\\n            <Value>TagValue</Value>\\n        </Tags>\\n    </CustomerGateways>\\n</DescribeCustomerGatewaysResponse>","errorExample":""}]',
      'title' => '查询已创建的用户网关列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVpnConnection' => 
    array (
      'summary' => '调用CreateVpnConnection接口创建IPsec连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        2 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数，且该参数必填。

用户网关的ID。 



',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cgw-p0w2jemrcj5u61un8****',
          ),
        ),
        3 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1q8bgx4xnkm****',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的名称。

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPsec',
          ),
        ),
        5 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和本地数据中心互通的VPC侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.1.0/24,192.168.2.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.10.1.0/24,10.10.2.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'RemoteSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和VPC互通的本地数据中心侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.3.0/24,192.168.4.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.10.3.0/24,10.10.4.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'EffectImmediately',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '选择IPsec连接的配置是否立即生效。取值：
           
- **true**：是，配置完成后系统立即进行IPsec协议协商。
   
- **false**（默认值）：否，当有流量进入时系统才进行IPsec协议协商。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'IkeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

第一阶段协商的配置信息：
           
- **IkeConfig.Psk**：预共享密钥，用于VPN网关与本地数据中心之间的身份认证。

    - 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!\\`@#$%^&*()_-+={}[]|;:\',.<>/?```
    - 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~2526951~~)接口查询系统自动生成的预共享密钥。     

        > IPsec连接侧的预共享密钥需和本地数据中心侧的认证密钥一致，否则本地数据中心和VPN网关之间无法建立连接。

- **IkeConfig.IkeVersion**：IKE协议的版本。取值：**ikev1**或**ikev2**。默认值：**ikev1**。  

    相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。

   <props="china"><ph>如果VPN网关实例类型为国密型，则IKE版本仅支持**ikev1**。</ph></props>

- **IkeConfig.IkeMode**：IKE版本的协商模式。取值：**main**或**aggressive**。默认值：**main**。   

    - **main**：主模式，协商过程安全性高。
    - **aggressive**：野蛮模式，协商快速且协商成功率高。

   <props="china"><ph>如果VPN网关实例类型为国密型，则协商模式仅支持**main**。</ph></props>

- **IkeConfig.IkeEncAlg**：第一阶段协商的加密算法。

   <props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。 </ph></props>

   <props="china">如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。</props>

   <props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm4**（默认值）。</ph></props>

- **IkeConfig.IkeAuthAlg**：第一阶段协商的认证算法。

   <props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

   <props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

   <props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm3**（默认值）。</ph></props>

- **IkeConfig.IkePfs**：第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**group1**、**group2**、**group5**、**group14**。默认值：**group2**。   

- **IkeConfig.IkeLifetime**：第一阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。默认值：**86400**。   

- **IkeConfig.LocalId**：VPN网关的标识，长度限制为100个字符，默认值为VPN网关的IP地址。 

- **IkeConfig.RemoteId**：用户网关的标识，长度限制为100个字符，默认值为用户网关的IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '{"Psk":"1234****","IkeVersion":"ikev1","IkeMode":"main","IkeEncAlg":"aes","IkeAuthAlg":"sha1","IkePfs":"group2","IkeLifetime":86400,"LocalId":"47.XX.XX.1","RemoteId":"47.XX.XX.2"}',
          ),
        ),
        9 => 
        array (
          'name' => 'IpsecConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

第二阶段协商的配置信息： 

- **IpsecConfig.IpsecEncAlg**：第二阶段协商的加密算法。

   <props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。 </ph></props>

   <props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。</ph></props>

   <props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm4**（默认值）。</ph></props>

- **IpsecConfig. IpsecAuthAlg**：第二阶段协商的认证算法。

   <props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

   <props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

   <props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm3**（默认值）。</ph></props>

- **IpsecConfig. IpsecPfs**：第二阶段协商使用的Diffie-Hellman密钥交换算法。取值：**disabled**、**group1**、**group2**、**group5**、**group14**。默认值：**group2**。   

- **IpsecConfig. IpsecLifetime**：第二阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。默认值：**86400**。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IpsecEncAlg":"aes","IpsecAuthAlg":"sha1","IpsecPfs":"group2","IpsecLifetime":86400}',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

健康检查配置信息：

- **HealthCheckConfig.enable**：是否开启健康检查，取值：**true**或**false**（默认值）。

- **HealthCheckConfig.dip**：健康检查的目的IP地址。

- **HealthCheckConfig.sip**：健康检查的源IP地址。

- **HealthCheckConfig.interval**：健康检查的重试间隔时间，单位：秒。默认值：**3**。

- **HealthCheckConfig.retry**：健康检查的重试发包次数。默认值：**3**。',
            'type' => 'string',
            'required' => false,
            'example' => '{"enable":"true","dip":"192.168.10.1","sip":"10.10.1.1","interval":"3","retry":"3"}',
          ),
        ),
        11 => 
        array (
          'name' => 'AutoConfigRoute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动配置路由。取值：

- **true**（默认值）：自动配置路由。

- **false**：不自动配置路由。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'EnableDpd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

是否开启DPD（对等体存活检测）功能。取值：

- **true**（默认值）：开启DPD功能。IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'EnableNatTraversal',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

是否开启NAT穿越功能。取值：

- **true**（默认值）：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'BgpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

BGP的配置信息：

- **BgpConfig.EnableBgp**：是否开启BGP功能。取值：**true**或**false**（默认值）。
- **BgpConfig.LocalAsn**：阿里云侧的自治系统号。自治系统号取值范围：**1**~**4294967295**。默认值：**45104**。
    
    支持按照两段位的格式进行输入，即：前16位比特.后16位比特。每个段位使用十进制输入。
    
    例如输入123.456，则表示自治系统号：123*65536+456=8061384。
- **BgpConfig.TunnelCidr**：IPsec隧道网段。该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。
    > 一个VPN网关实例下每个IPsec连接的IPsec隧道网段需保持唯一。
- **LocalBgpIp**：阿里云侧的BGP地址。该地址为IPsec隧道网段内的一个IP地址。 

>- 在添加BGP配置前，建议您先了解BGP动态路由功能的工作机制和使用限制。更多信息，请参见[VPN网关支持BGP动态路由公告](~~170235~~)。
>- 建议您使用自治系统号的私有号码与阿里云建立BGP连接。自治系统号的私有号码范围请自行查阅文档。',
            'type' => 'string',
            'required' => false,
            'example' => '{"EnableBgp":"true","LocalAsn":"45104","TunnelCidr":"169.254.11.0/30","LocalBgpIp":"169.254.11.1"}',
          ),
        ),
        15 => 
        array (
          'name' => 'RemoteCaCertificate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建单隧道模式的IPsec-VPN连接时支持配置该参数。

如果当前VPN网关实例为国密型VPN网关，您需要配置对端的CA证书。

- 对于国密型VPN网关，创建IPsec连接时，此项必填。

- 对于普通型VPN网关，此项需要为空。',
            'type' => 'string',
            'required' => false,
            'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
          ),
        ),
        16 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IPsec连接待添加的标签列表。

一次最多支持为IPsec连接添加20个标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。一旦输入该值，则不允许为空字符串。

最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        17 => 
        array (
          'name' => 'TunnelOptionsSpecification',
          'in' => 'formData',
          'allowEmptyValue' => true,
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '配置隧道。

- 创建双隧道模式的IPsec-VPN连接时支持配置**TunnelOptionsSpecification**数组下的参数。
- 创建双隧道模式的IPsec-VPN连接时，您必须同时为IPsec-VPN连接添加主隧道和备隧道的配置。一个IPsec-VPN连接下仅支持添加主备两条隧道。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '配置隧道信息。',
              'type' => 'object',
              'properties' => 
              array (
                'CustomerGatewayId' => 
                array (
                  'description' => '隧道关联的用户网关ID。

>- 创建双隧道模式IPsec-VPN连接时本参数必填。
>- 创建双隧道模式的IPsec-VPN连接时支持配置**TunnelOptionsSpecification**数组下的参数。
>- 创建双隧道模式的IPsec-VPN连接时，您必须同时为IPsec-VPN连接添加主隧道和备隧道的配置。一个IPsec-VPN连接下仅支持添加主备两条隧道。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cgw-p0wy363lucf1uyae8****',
                ),
                'EnableDpd' => 
                array (
                  'description' => '是否为隧道开启DPD（对等体存活检测）功能。取值：

- **true**（默认值）：开启DPD功能。IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'EnableNatTraversal' => 
                array (
                  'description' => '是否为隧道开启NAT穿越功能。取值：

- **true**（默认值）：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'RemoteCaCertificate' => 
                array (
                  'description' => '如果当前VPN网关实例为国密型VPN网关，您需要为隧道配置对端的CA证书。

- 对于国密型VPN网关，此项必填。

- 对于普通型VPN网关，此项需要为空。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
                ),
                'Role' => 
                array (
                  'description' => '隧道的角色。取值：

- **master**：表示当前隧道为主隧道。
- **slave**：表示当前隧道为备隧道。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'master',
                ),
                'TunnelBgpConfig' => 
                array (
                  'description' => '为隧道添加BGP配置。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'LocalAsn' => 
                    array (
                      'description' => '隧道本端（阿里云侧）的自治系统号。自治系统号取值范围：**1**~**4294967295**。默认值：**45104**。

> - 当您为IPsec连接开启BGP功能后（即指定**EnableTunnelsBgp**参数的值为**true**）需要配置该参数。
>- 在添加BGP配置前，建议您先了解BGP动态路由功能的工作机制和使用限制。更多信息，请参见[VPN网关支持BGP动态路由公告](~~170235~~)。
>- 建议您使用自治系统号的私有号码与阿里云建立BGP连接。自治系统号的私有号码范围请自行查阅文档。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '65530',
                    ),
                    'LocalBgpIp' => 
                    array (
                      'description' => '隧道本端（阿里云侧）的BGP地址。该地址为BGP网段内的一个IP地址。 ',
                      'type' => 'string',
                      'required' => false,
                      'example' => '169.254.10.1',
                    ),
                    'TunnelCidr' => 
                    array (
                      'description' => '隧道的BGP网段。该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。

>在一个VPN网关实例下，每个隧道的BGP网段需保持唯一。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '169.254.10.0/30',
                    ),
                  ),
                  'required' => false,
                ),
                'TunnelIkeConfig' => 
                array (
                  'description' => '第一阶段协商的配置信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IkeAuthAlg' => 
                    array (
                      'description' => '第一阶段协商的认证算法。

<props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm3**（默认值）。</ph></props>
',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'md5',
                    ),
                    'IkeEncAlg' => 
                    array (
                      'description' => '第一阶段协商的加密算法。

<props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。 </ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm4**（默认值）。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'aes',
                    ),
                    'IkeLifetime' => 
                    array (
                      'description' => '第一阶段协商出的SA的生存周期。单位：秒。

取值范围：**0**~**86400**。默认值：**86400**。   ',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '86400',
                    ),
                    'IkeMode' => 
                    array (
                      'description' => 'IKE版本的协商模式。取值：**main**或**aggressive**。默认值：**main**。   

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。

<props="china"><ph>如果VPN网关实例类型为国密型，则协商模式仅支持**main**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'main',
                    ),
                    'IkePfs' => 
                    array (
                      'description' => '第一阶段协商使用的Diffie-Hellman密钥交换算法。默认值：**group2**。   
取值：**group1**、**group2**、**group5**、**group14**。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'group2',
                    ),
                    'IkeVersion' => 
                    array (
                      'description' => 'IKE协议的版本。取值：**ikev1**或**ikev2**。默认值：**ikev1**。

相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。
   
<props="china"><ph>如果VPN网关实例类型为国密型，则IKE版本仅支持**ikev1**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'ikev1',
                    ),
                    'LocalId' => 
                    array (
                      'description' => '隧道本端（阿里云侧）的标识，用于第一阶段的协商。长度限制为100个字符。默认值为隧道的IP地址。

**LocalId**支持FQDN格式，如果您使用FQDN格式，协商模式建议选择为**aggressive**（野蛮模式）。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '47.21.XX.XX',
                    ),
                    'Psk' => 
                    array (
                      'description' => '预共享密钥，用于隧道与隧道对端之间的身份认证。

- 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!\\`@#$%^&*()_-+={}[]|;:\',.<>/?```

- 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~2526951~~)接口查询系统自动生成的预共享密钥。     

> 隧道及隧道对端的预共享密钥需一致，否则系统无法正常建立隧道。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '123456****',
                    ),
                    'RemoteId' => 
                    array (
                      'description' => '隧道对端的标识，用于第一阶段的协商。长度限制为100个字符。默认值为隧道关联的用户网关的IP地址。

**RemoteId**支持FQDN格式，如果您使用FQDN格式，协商模式建议选择为**aggressive**（野蛮模式）。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '47.42.XX.XX',
                    ),
                  ),
                  'required' => false,
                ),
                'TunnelIpsecConfig' => 
                array (
                  'description' => '第二阶段协商的配置信息。 


  



',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IpsecAuthAlg' => 
                    array (
                      'description' => '第二阶段协商的认证算法。

<props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm3**（默认值）。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'md5',
                    ),
                    'IpsecEncAlg' => 
                    array (
                      'description' => '第二阶段协商的加密算法。

<props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。 </ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则取值为**sm4**（默认值）。</ph></props>
',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'aes',
                    ),
                    'IpsecLifetime' => 
                    array (
                      'description' => '第二阶段协商出的SA的生存周期。单位：秒。

取值范围：**0**~**86400**。默认值：**86400**。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '86400',
                    ),
                    'IpsecPfs' => 
                    array (
                      'description' => '第二阶段协商使用的Diffie-Hellman密钥交换算法。默认值：**group2**。   

取值：**disabled**、**group1**、**group2**、**group5**、**group14**。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'group2',
                    ),
                  ),
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        18 => 
        array (
          'name' => 'EnableTunnelsBgp',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '创建双隧道模式的IPsec-VPN连接时支持配置该参数。

是否为隧道开启BGP功能。取值：**true**或**false**（默认值）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '082AD562-B8DB-4BB2-861F-DA1FCA01FD76',
              ),
              'VpnConnectionId' => 
              array (
                'description' => 'IPsec连接的ID。',
                'type' => 'string',
                'example' => 'vco-bp15oes1py4i6****',
              ),
              'Name' => 
              array (
                'description' => 'IPsec连接的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'CreateTime' => 
              array (
                'description' => 'IPsec连接的创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建IPsec连接时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1544666102000',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpnConnection.AlreadyExists',
            'errorMessage' => 'Vpn connection already exists.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnGateway.IpsecVpnDisabled',
            'errorMessage' => 'The vpn gateway does not enable IPSec VPN.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          7 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecPfs',
            'errorMessage' => 'The specified vpn connection ipsec Ipsec Pfs is not support.',
          ),
          8 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecAuthAlg',
            'errorMessage' => 'The specified vpn connection ipsec Auth Alg is not support.',
          ),
          9 => 
          array (
            'errorCode' => 'VpnRouteEntry.ConflictSSL',
            'errorMessage' => 'The specified route entry has conflict with SSL client.',
          ),
          10 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          11 => 
          array (
            'errorCode' => 'VpnRouteEntry.InvalidWeight',
            'errorMessage' => 'Invalid route entry weight value.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter.VpnConnectionName',
            'errorMessage' => 'The specified vpn connection name is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.SetDPD',
            'errorMessage' => 'Current version of the VPN does not support setting DPD.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.SetNatTraversal',
            'errorMessage' => 'Current version of the VPN does not support setting NAT traversal.',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.PolicyBasedRoute',
            'errorMessage' => 'The maximum number of policy-based routes is exceeded. Existing routes: %s. Routes to be created: %s. Maximum routes: %s.',
          ),
          16 => 
          array (
            'errorCode' => 'MissingParameter.TunnelCidr',
            'errorMessage' => 'The parameter TunnelCidr is mandatory when BGP is enabled.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationUnsupported.EnableBgp',
            'errorMessage' => 'Current version of the VPN does not support enable BGP.',
          ),
          18 => 
          array (
            'errorCode' => 'MissingParam.CustomerGatewayAsn',
            'errorMessage' => 'Asn of customer gateway is mandatory when BGP is enabled.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => 'The specified LocalAsn is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.BgpConfig',
            'errorMessage' => 'The specified BgpConfig is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'IllegalParam.EnableBgp',
            'errorMessage' => 'VPN connection must enable BGP when VPN gateway has enabled BGP.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.TunnelCidr',
            'errorMessage' => 'The specified TunnelCidr is invalid.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidLocalBgpIp.Malformed',
            'errorMessage' => 'The specified LocalBgpIp is malformed.',
          ),
          24 => 
          array (
            'errorCode' => 'IllegalParam.LocalBgpIp',
            'errorMessage' => 'The specified LocalBgpIp is invalid.',
          ),
          25 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          26 => 
          array (
            'errorCode' => 'IllegalParam.RemoteSubnet',
            'errorMessage' => 'The specified "RemoteSubnet" (%s) is invalid.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationFailed.MissCertificate',
            'errorMessage' => 'The VPN gateway has not associated any certificates.',
          ),
          28 => 
          array (
            'errorCode' => 'MissingParam.RemoteId',
            'errorMessage' => 'The remote ID is mandatory when creating national standard VPN connection.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationFailed.CenLevelNotSupport',
            'errorMessage' => 'When the VPC to which the VPN gateway belongs is attached to a FULL-mode CEN, the VPN gateway cannot enable BGP.',
          ),
          30 => 
          array (
            'errorCode' => 'CustomerGateway.ConflictRouteEntry',
            'errorMessage' => 'The specified customer gateway has conflict with route entry.',
          ),
          31 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
          32 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          33 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          34 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          35 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          36 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
          37 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          38 => 
          array (
            'errorCode' => 'InvalidTunnelCidr.Malformed',
            'errorMessage' => 'The specified TunnelCidr is malformed.',
          ),
          39 => 
          array (
            'errorCode' => 'VpnConnectionParamInvalid.SameVpnAndCgwDifferentIkeConfigs',
            'errorMessage' => 'IPSec connections associated with the same user gateway and VPN gateway should have the same pre-shared key and IKE configuration.',
          ),
          40 => 
          array (
            'errorCode' => 'VpnConnectionParamInvalid.SameVpnAndCgwTrafficSelectorOverlap',
            'errorMessage' => 'Traffic selectors of IPSec connections associated with the same user gateway and VPN gateway should not overlap.',
          ),
          41 => 
          array (
            'errorCode' => 'CustomerGateway.ConflictVpnIp',
            'errorMessage' => 'The customer gateway associated with the IPSec connection should not have the same IP address as the VPN gateway.',
          ),
          42 => 
          array (
            'errorCode' => 'VpnGateway.IPsecServerAndVpnConnectionConflict',
            'errorMessage' => 'The IPSec connection and IPSec server cannot be configured on the same VPN gateway at the same time.',
          ),
          43 => 
          array (
            'errorCode' => 'InvalidSslVpnServerCertId.NotFound',
            'errorMessage' => 'The parameter is incorrect. The corresponding SSL VPN server certificate cannot be found.',
          ),
          44 => 
          array (
            'errorCode' => 'MissingParameter.TunnelOptionsSpecification',
            'errorMessage' => 'The required parameters are missing when creating a tunnel for dual-tunnel VPN.',
          ),
          45 => 
          array (
            'errorCode' => 'CreateDbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of created destination routes exceeds the quota limit.',
          ),
          46 => 
          array (
            'errorCode' => 'CreatePbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of policy routes exceeds the quota limit.',
          ),
          47 => 
          array (
            'errorCode' => 'CreateVpnConnectionsQuotaFull.QuotaFull',
            'errorMessage' => 'The number of VPN connections exceeds the quota limit.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidCustomerGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified customer gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"082AD562-B8DB-4BB2-861F-DA1FCA01FD76\\",\\n  \\"VpnConnectionId\\": \\"vco-bp15oes1py4i6****\\",\\n  \\"Name\\": \\"test\\",\\n  \\"CreateTime\\": 1544666102000\\n}","errorExample":""},{"type":"xml","example":"<CreateVpnConnectionResponse>\\n    <RequestId>082AD562-B8DB-4BB2-861F-DA1FCA01FD76</RequestId>\\n    <VpnConnectionId>vco-bp15oes1py4i6****</VpnConnectionId>\\n    <Name>test</Name>\\n    <CreateTime>1544666102000</CreateTime>\\n</CreateVpnConnectionResponse>","errorExample":""}]',
      'title' => '创建IPsec连接',
      'description' => '- 如果VPN网关实例支持创建双隧道模式的IPsec-VPN连接，则调用`CreateVpnConnection`接口时除支持配置必填参数外，还支持配置以下请求参数：

    **ClientToken**、**Name**、**EffectImmediately**、**AutoConfigRoute**、**Tags**数组、**TunnelOptionsSpecification**数组、**EnableTunnelsBgp**。

    支持创建双隧道模式IPsec-VPN连接的地域和可用区信息，请参见[IPsec-VPN连接升级为双隧道模式](~~2358946~~)。
- 如果VPN网关实例仅支持创建单隧道模式的IPsec-VPN连接，则调用`CreateVpnConnection`接口时除支持配置必填参数外，还支持配置以下请求参数：

     **ClientToken**、**CustomerGatewayId**、**Name**、**EffectImmediately**、**IkeConfig**、**IpsecConfig**、**HealthCheckConfig**、**AutoConfigRoute**、**EnableDpd**、**EnableNatTraversal**、**BgpConfig**、**RemoteCaCertificate**、**Tags**数组。

- **CreateVpnConnection**接口属于异步接口，即系统返回一个实例ID，但该IPsec连接尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询VPN网关实例的状态，来确定IPsec连接的创建状态：
    - 当VPN网关实例处于**updating**状态时，表示IPsec连接正在创建中。
    - 当VPN网关实例处于**active**状态时，表示IPsec连接创建成功。

- **CreateVpnConnection**接口不支持在同一VPN网关下并发创建IPsec连接。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVpnConnection' => 
    array (
      'summary' => '调用DeleteVpnConnection接口删除指定的IPsec连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPsec连接的ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-bp1bbi27hojx80nck****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}","errorExample":"{\\n  \\"RequestId\\":\\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteVpnConnectionResponse>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteVpnConnectionResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteVpnConnection>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteVpnConnection>"}]',
      'title' => '删除指定的IPsec连接',
      'description' => '- **DeleteVpnConnection**接口属于异步接口，即系统返回一个请求ID，但该IPsec连接尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询VPN网关实例的状态，来确定IPsec连接的删除状态：
    - 当VPN网关实例处于**updating**状态时，表示IPsec连接正在删除中。
    - 当VPN网关实例处于**active**状态时，表示IPsec连接删除成功。
- **DeleteVpnConnection**接口不支持在同一VPN网关下并发删除指定的IPsec连接。

> 删除IPsec连接后，本地IDC与阿里云之间的连接将中断。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVpnConnectionAttribute' => 
    array (
      'summary' => '调用ModifyVpnConnectionAttribute接口修改IPsec连接的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => ' cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp1bbi27hojx80nck****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的名称。  

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和本地数据中心互连的VPC侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.1.0/24,192.168.2.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => false,
            'example' => '10.1.1.0/24,10.1.2.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'RemoteSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.3.0/24,192.168.4.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => false,
            'example' => '10.2.1.0/24,10.2.2.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'EffectImmediately',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '选择IPsec连接的配置是否立即生效。取值：
           
- **true**：是，配置完成后系统立即进行IPsec协议协商。
   
- **false**：否，当有流量进入时系统才进行IPsec协议协商。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'IkeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

第一阶段协商的配置信息： 
           
- **IkeConfig.Psk**：预共享密钥，用于VPN网关与本地数据中心之间的身份认证。

    - 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!`@#$%^&*()_-+={}[]|;:\',.<>/?```
    - 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~2526951~~)接口查询系统自动生成的预共享密钥。
    > IPsec连接侧的预共享密钥需和本地数据中心侧的认证密钥一致，否则本地数据中心和VPN网关之间无法建立连接。 

- **IkeConfig.IkeVersion**：IKE协议的版本。取值：**ikev1**或**ikev2**。 

    相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。

    <props="china"><ph>如果VPN网关实例类型为国密型，则IKE版本仅支持**ikev1**。</ph></props>

- **IkeConfig.IkeMode**：IKE版本的协商模式。取值：**main**或**aggressive**。   
    - **main**：主模式，协商过程安全性高。
    - **aggressive**：野蛮模式，协商快速且协商成功率高。

    <props="china"><ph>如果VPN网关实例类型为国密型，则协商模式仅支持**main**。</ph></props>

- **IkeConfig.IkeEncAlg**：第一阶段协商的加密算法。

    <props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm4**。</ph></props>

- **IkeConfig.IkeAuthAlg**：第一阶段协商的认证算法。

    <props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm3**。</ph></props>

- **IkeConfig.IkePfs**：第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**group1**、**group2**、**group5**、**group14**。

- **IkeConfig.IkeLifetime**：第一阶段协商出的SA的生存周期。单位：秒。取值范围：**0~86400**。

- **IkeConfig.LocalId**：VPN网关的标识。长度限制为100个字符。默认值为VPN网关的IP地址。 

- **IkeConfig.RemoteId**：用户网关的标识。长度限制为100个字符。默认值为用户网关的IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '{"Psk":"pgw6dy7d1i8i****","IkeVersion":"ikev1","IkeMode":"main","IkeEncAlg":"aes","IkeAuthAlg":"sha1","IkePfs":"group2","IkeLifetime":86400,"LocalId":"116.64.XX.XX","RemoteId":"139.18.XX.XX"}',
          ),
        ),
        8 => 
        array (
          'name' => 'IpsecConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

第二阶段协商的配置信息： 

- **IpsecConfig.IpsecEncAlg**：第二阶段协商的加密算法。

    <props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm4**。</ph></props>

- **IpsecConfig. IpsecAuthAlg**：第二阶段协商的认证算法。

    <props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

    <props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm3**。</ph></props>

- **IpsecConfig. IpsecPfs**：转发所有协议的报文，第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**disabled**、**group1**、**group2**、**group5**、**group14**。   

- **IpsecConfig. IpsecLifetime**：第二阶段协商出的SA的生存周期。单位：秒。取值范围：**0~86400**。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IpsecEncAlg":"aes","IpsecAuthAlg":"sha1","IpsecPfs":"group2","IpsecLifetime":86400}',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

健康检查配置信息：

- **HealthCheckConfig.enable**：是否开启健康检查。取值：**true**或**false**。

- **HealthCheckConfig.dip**：健康检查的目的IP地址。

- **HealthCheckConfig.sip**：健康检查的源IP地址。

- **HealthCheckConfig.interval**：健康检查的重试间隔时间，单位：秒。

- **HealthCheckConfig.retry**：健康检查的重试发包次数。',
            'type' => 'string',
            'required' => false,
            'example' => '{"enable":"true","dip":"192.168.1.1","sip":"10.1.1.1","interval":"3","retry":"3"}',
          ),
        ),
        10 => 
        array (
          'name' => 'AutoConfigRoute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动发布路由。取值：

- **true**：自动发布。
   
- **false**：不自动发布。   ',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'EnableDpd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

是否开启DPD（对等体存活检测）功能。取值：

- **true**：开启DPD功能。IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'EnableNatTraversal',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

是否开启NAT穿越功能。取值：

- **true**：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'BgpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

BGP的配置信息：

- **BgpConfig.EnableBgp**：是否开启BGP功能。取值：**true**或**false**。

- **BgpConfig.LocalAsn**：阿里云侧的自治系统号。自治系统号取值范围：**1**~**4294967295**。  

   支持按照两段位的格式进行输入，即：前16位比特.后16位比特。每个段位使用十进制输入。

    例如输入123.456，则表示自治系统号：123*65536+456=8061384。

- **BgpConfig.TunnelCidr**：IPsec隧道网段。该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。

    > 一个VPN网关实例下每个IPsec连接的IPsec隧道网段需保持唯一。

- **LocalBgpIp**：阿里云侧的BGP地址。该地址为IPsec隧道网段内的一个IP地址。 

> - 当您的VPN网关启用BGP动态路由功能时需要配置该参数。
>- 在添加BGP配置前，建议您先了解BGP动态路由功能的工作机制和使用限制。更多信息，请参见[VPN网关支持BGP动态路由公告
](~~170235~~)。
>- 建议您使用自治系统号的私有号码与阿里云建立BGP连接。自治系统号的私有号码范围请自行查阅文档。',
            'type' => 'string',
            'required' => false,
            'example' => '{"EnableBgp":"true","LocalAsn":"65530","TunnelCidr":"169.254.11.0/30","LocalBgpIp":"169.254.11.1"}',
          ),
        ),
        14 => 
        array (
          'name' => 'RemoteCaCertificate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改单隧道模式的IPsec-VPN连接时支持配置该参数。

如果当前VPN网关实例为国密型VPN网关，您可以修改对端的CA证书。

如果当前VPN网关实例为普通型VPN网关，不支持配置本参数。',
            'type' => 'string',
            'required' => false,
            'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
          ),
        ),
        15 => 
        array (
          'name' => 'TunnelOptionsSpecification',
          'in' => 'formData',
          'allowEmptyValue' => true,
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '修改隧道的配置。

仅修改双隧道模式的IPsec-VPN连接时支持配置**TunnelOptionsSpecification**数组下的参数。您可以同时修改IPsec-VPN连接主隧道和备隧道的配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '修改双隧道模式的IPsec-VPN连接时支持配置**TunnelOptionsSpecification**数组下的参数。您可以同时修改IPsec-VPN连接主隧道和备隧道的配置。

修改隧道配置。

',
              'type' => 'object',
              'properties' => 
              array (
                'TunnelId' => 
                array (
                  'description' => '修改双隧道模式的IPsec-VPN连接时支持配置**TunnelOptionsSpecification**数组下的参数。您可以同时修改IPsec-VPN连接主隧道和备隧道的配置。

隧道ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tun-opsqc4d97wni27****',
                ),
                'Role' => 
                array (
                  'description' => '隧道的角色。

- **master**：表示当前隧道为主隧道。
- **slave**：表示当前隧道为备隧道。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'master',
                ),
                'EnableDpd' => 
                array (
                  'description' => '是否为隧道开启DPD（对等体存活检测）功能。取值：

- **true**：开启DPD功能。IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'EnableNatTraversal' => 
                array (
                  'description' => '是否为隧道开启NAT穿越功能。取值：

- **true**：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'RemoteCaCertificate' => 
                array (
                  'description' => '如果当前VPN网关实例为国密型VPN网关，您可以隧道修改对端的CA证书。

如果当前VPN网关实例为普通型VPN网关，不支持配置本参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
                ),
                'TunnelBgpConfig' => 
                array (
                  'description' => '修改隧道的BGP配置。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'LocalAsn' => 
                    array (
                      'description' => '隧道本端（阿里云侧）的自治系统号。自治系统号取值范围：**1**~**4294967295**。默认值：**45104**。

> - 当您为IPsec连接开启BGP功能后（即指定**EnableTunnelsBgp**参数的值为**true**）支持配置或修改本参数。
>- 在添加BGP配置前，建议您先了解BGP动态路由功能的工作机制和使用限制。更多信息，请参见[VPN网关支持BGP动态路由公告](~~170235~~)。
>- 建议您使用自治系统号的私有号码与阿里云建立BGP连接。自治系统号的私有号码范围请自行查阅文档。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '65530',
                    ),
                    'LocalBgpIp' => 
                    array (
                      'description' => '隧道本端（阿里云侧）的BGP地址。该地址为BGP网段内的一个IP地址。 ',
                      'type' => 'string',
                      'required' => false,
                      'example' => '169.254.10.1',
                    ),
                    'TunnelCidr' => 
                    array (
                      'description' => '隧道的BGP网段。该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。

>在一个VPN网关实例下，每个隧道的BGP网段需保持唯一。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '169.254.10.0/30',
                    ),
                  ),
                  'required' => false,
                ),
                'TunnelIkeConfig' => 
                array (
                  'description' => '第一阶段协商的配置信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IkeAuthAlg' => 
                    array (
                      'description' => '第一阶段协商的认证算法。

<props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm3**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'md5',
                    ),
                    'IkeEncAlg' => 
                    array (
                      'description' => '第一阶段协商的加密算法。

<props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm4**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'aes',
                    ),
                    'IkeLifetime' => 
                    array (
                      'description' => '第一阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '86400',
                    ),
                    'IkeMode' => 
                    array (
                      'description' => 'IKE版本的协商模式。取值：

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。

<props="china"><ph>如果VPN网关实例类型为国密型，则协商模式仅支持**main**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'main',
                    ),
                    'IkePfs' => 
                    array (
                      'description' => '第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**group1**、**group2**、**group5**、**group14**。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'group2',
                    ),
                    'IkeVersion' => 
                    array (
                      'description' => 'IKE协议的版本。取值：**ikev1**或**ikev2**。

相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。

<props="china"><ph>如果VPN网关实例类型为国密型，则IKE版本仅支持**ikev1**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'ikev1',
                    ),
                    'LocalId' => 
                    array (
                      'description' => '隧道本端（阿里云侧）的标识，用于第一阶段的协商。长度限制为100个字符。默认值为隧道的IP地址。

**LocalId**支持FQDN格式，如果您使用FQDN格式，协商模式建议选择为**aggressive**（野蛮模式）。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '47.21.XX.XX',
                    ),
                    'Psk' => 
                    array (
                      'description' => '预共享密钥，用于隧道与隧道对端之间的身份认证。

- 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!\\`@#$%^&*()_-+={}[]|;:\',.<>/?```

- 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~2526951~~)接口查询系统自动生成的预共享密钥。     

> 隧道及隧道对端的预共享密钥需一致，否则系统无法正常建立隧道。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '123456****',
                    ),
                    'RemoteId' => 
                    array (
                      'description' => '隧道对端的标识，用于第一阶段的协商。长度限制为100个字符。默认值为隧道关联的用户网关的IP地址。

**RemoteId**支持FQDN格式，如果您使用FQDN格式，协商模式建议选择为**aggressive**（野蛮模式）。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '47.42.XX.XX',
                    ),
                  ),
                  'required' => false,
                ),
                'TunnelIpsecConfig' => 
                array (
                  'description' => '第二阶段协商的配置信息。 ',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IpsecAuthAlg' => 
                    array (
                      'description' => '第二阶段协商的认证算法。

<props="intl"><ph>取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm3**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'md5',
                    ),
                    'IpsecEncAlg' => 
                    array (
                      'description' => '第二阶段协商的加密算法。

<props="intl"><ph>取值：**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为普通型，则取值为**aes**、**aes192**、**aes256**、**des**或**3des**。</ph></props>

<props="china"><ph>如果VPN网关实例类型为国密型，则仅取值：**sm4**。</ph></props>',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'aes',
                    ),
                    'IpsecLifetime' => 
                    array (
                      'description' => '第二阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '86400',
                    ),
                    'IpsecPfs' => 
                    array (
                      'description' => '第二阶段协商使用的Diffie-Hellman密钥交换算法。

取值：**disabled**、**group1**、**group2**、**group5**、**group14**。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'group2',
                    ),
                  ),
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        16 => 
        array (
          'name' => 'EnableTunnelsBgp',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '修改双隧道模式的IPsec-VPN连接时支持配置该参数。

是否为隧道开启BGP功能。取值：**true**或**false**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'EnableNatTraversal' => 
              array (
                'description' => 'IPsec连接是否已开启NAT穿越功能。取值：

- **false**：未开启。

- **true**：已开启。

仅单隧道模式的IPsec-VPN连接会返回该参数。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'CreateTime' => 
              array (
                'description' => 'IPsec连接的创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建IPsec连接时的总时长。

',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492753817000',
              ),
              'EffectImmediately' => 
              array (
                'description' => 'IPsec连接的配置是否立即生效。

- **true**：是，配置完成后系统立即进行IPsec协议协商。
   
- **false**：否，当有流量进入时系统才进行IPsec协议协商。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例的ID。',
                'type' => 'string',
                'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
              ),
              'LocalSubnet' => 
              array (
                'description' => 'VPC侧的网段。',
                'type' => 'string',
                'example' => '10.1.1.0/24,10.1.2.0/24',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7DB79D0C-5F27-4AB5-995B-79BE55102F90',
              ),
              'VpnConnectionId' => 
              array (
                'description' => 'IPsec连接的ID。',
                'type' => 'string',
                'example' => 'vco-bp1bbi27hojx80nck****',
              ),
              'Description' => 
              array (
                'description' => 'IPsec连接的描述信息。',
                'type' => 'string',
                'example' => 'description',
              ),
              'RemoteSubnet' => 
              array (
                'description' => '本地数据中心侧的网段。',
                'type' => 'string',
                'example' => '10.2.1.0/24,10.2.2.0/24',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => 'IPsec连接关联的用户网关ID。

仅单隧道模式的IPsec-VPN连接会返回该参数。',
                'type' => 'string',
                'example' => 'cgw-p0w2jemrcj5u61un8****',
              ),
              'Name' => 
              array (
                'description' => 'IPsec连接的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'EnableDpd' => 
              array (
                'description' => 'IPsec连接是否已开启DPD（对等体存活检测）功能。

- **false**：未开启。

- **true**：已开启。

仅单隧道模式的IPsec-VPN连接会返回该参数。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'IkeConfig' => 
              array (
                'description' => '第一阶段协商的配置。

仅单隧道模式的IPsec-VPN连接会返回**IkeConfig**数组下的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'RemoteId' => 
                  array (
                    'description' => '本地数据中心侧的标识。支持FQDN和IP格式，默认为当前选取的用户网关的IP地址。',
                    'type' => 'string',
                    'example' => '139.18.XX.XX',
                  ),
                  'IkeLifetime' => 
                  array (
                    'description' => 'IKE阶段生存时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'IkeEncAlg' => 
                  array (
                    'description' => 'IKE阶段加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'LocalId' => 
                  array (
                    'description' => 'VPC侧的标识。支持FQDN和IP格式，默认为当前选取的VPN网关的IP地址。',
                    'type' => 'string',
                    'example' => '116.64.XX.XX',
                  ),
                  'IkeMode' => 
                  array (
                    'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                    'type' => 'string',
                    'example' => 'main',
                  ),
                  'IkeVersion' => 
                  array (
                    'description' => 'IKE协议版本。

- **ikev1**
- **ikev2**

相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。',
                    'type' => 'string',
                    'example' => 'ikev1',
                  ),
                  'IkePfs' => 
                  array (
                    'description' => 'IKE阶段DH分组。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                  'Psk' => 
                  array (
                    'description' => '预共享密钥。',
                    'type' => 'string',
                    'example' => 'pgw6dy7d1i8i****',
                  ),
                  'IkeAuthAlg' => 
                  array (
                    'description' => 'IKE阶段认证算法。',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                ),
              ),
              'IpsecConfig' => 
              array (
                'description' => '第二阶段协商的配置。

仅单隧道模式的IPsec-VPN连接会返回**IpsecConfig**数组下的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'IpsecAuthAlg' => 
                  array (
                    'description' => 'IPsec阶段认证算法。',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                  'IpsecLifetime' => 
                  array (
                    'description' => 'IPsec阶段生存时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'IpsecEncAlg' => 
                  array (
                    'description' => 'IPsec阶段加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'IpsecPfs' => 
                  array (
                    'description' => 'IPsec阶段DH分组。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                ),
              ),
              'VcoHealthCheck' => 
              array (
                'description' => '健康检查配置。

仅单隧道模式的IPsec-VPN连接会返回**VcoHealthCheck**数组下的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'Dip' => 
                  array (
                    'description' => '目标IP。',
                    'type' => 'string',
                    'example' => '192.168.1.1',
                  ),
                  'Interval' => 
                  array (
                    'description' => '健康检查的重试间隔时间，单位：秒。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Retry' => 
                  array (
                    'description' => '健康检查的重试发包次数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Sip' => 
                  array (
                    'description' => '源IP。',
                    'type' => 'string',
                    'example' => '10.1.1.1',
                  ),
                  'Enable' => 
                  array (
                    'description' => 'IPsec连接是否已开启健康检查功能。

- **true**：已开启。

- **false**：未开启。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                ),
              ),
              'VpnBgpConfig' => 
              array (
                'description' => 'BGP配置信息。

仅单隧道模式的IPsec-VPN连接会返回**VpnBgpConfig**数组下的参数。

',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => 'BGP的协商状态。

- **success**：正常。

- **false**：异常。',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'PeerBgpIp' => 
                  array (
                    'description' => '本地IDC侧的BGP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.2',
                  ),
                  'TunnelCidr' => 
                  array (
                    'description' => 'IPsec连接的BGP网段。',
                    'type' => 'string',
                    'example' => '169.254.11.0/30',
                  ),
                  'EnableBgp' => 
                  array (
                    'description' => 'BGP的开启状态。

- **true**：已开启。

- **false**：未开启。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'LocalBgpIp' => 
                  array (
                    'description' => '阿里云侧的BGP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.1',
                  ),
                  'PeerAsn' => 
                  array (
                    'description' => '本地数据中心侧的自治系统号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '65531',
                  ),
                  'LocalAsn' => 
                  array (
                    'description' => '阿里云侧的自治系统号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '65530',
                  ),
                ),
              ),
              'TunnelOptionsSpecification' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TunnelOptions' => 
                  array (
                    'description' => 'IPsec连接的隧道配置信息。

仅双隧道模式的IPsec-VPN连接会返回**TunnelOptionsSpecification**数组下的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '隧道的配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CustomerGatewayId' => 
                        array (
                          'description' => '隧道关联的用户网关ID。',
                          'type' => 'string',
                          'example' => 'cgw-p0wy363lucf1uyae8****',
                        ),
                        'EnableDpd' => 
                        array (
                          'description' => '隧道是否已开启DPD（对等体存活检测）功能。
- **false**：未开启。
- **true**：已开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'EnableNatTraversal' => 
                        array (
                          'description' => '隧道是否已开启NAT穿越功能。

- **false**：未开启。
- **true**：已开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'InternetIp' => 
                        array (
                          'description' => '隧道阿里云侧网关IP地址。',
                          'type' => 'string',
                          'example' => '47.21.XX.XX',
                        ),
                        'RemoteCaCertificate' => 
                        array (
                          'description' => '隧道对端的CA证书。

仅VPN网关实例的类型为国密型时才会返回当前参数。',
                          'type' => 'string',
                          'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
                        ),
                        'Role' => 
                        array (
                          'description' => '隧道的角色。

- **master**：表示当前隧道为主隧道。
- **slave**：表示当前隧道为备隧道。',
                          'type' => 'string',
                          'example' => 'master',
                        ),
                        'State' => 
                        array (
                          'description' => '隧道的状态。

- **active**：状态正常。
- **updating**：更新中。
- **deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'TunnelBgpConfig' => 
                        array (
                          'description' => '隧道的BGP配置信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'LocalAsn' => 
                            array (
                              'description' => '隧道本端（阿里云侧）的自治系统号。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '65530',
                            ),
                            'LocalBgpIp' => 
                            array (
                              'description' => '隧道本端（阿里云侧）的BGP地址。',
                              'type' => 'string',
                              'example' => '169.254.10.1',
                            ),
                            'PeerAsn' => 
                            array (
                              'description' => '隧道对端的自治系统号。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '65531',
                            ),
                            'PeerBgpIp' => 
                            array (
                              'description' => '隧道对端的BGP地址。',
                              'type' => 'string',
                              'example' => '169.254.10.2',
                            ),
                            'TunnelCidr' => 
                            array (
                              'description' => '隧道的BGP网段。',
                              'type' => 'string',
                              'example' => '169.254.10.0/30',
                            ),
                          ),
                        ),
                        'TunnelId' => 
                        array (
                          'description' => '隧道ID。',
                          'type' => 'string',
                          'example' => 'tun-opsqc4d97wni27****',
                        ),
                        'TunnelIkeConfig' => 
                        array (
                          'description' => '第一阶段协商的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IkeAuthAlg' => 
                            array (
                              'description' => 'IKE阶段认证算法。',
                              'type' => 'string',
                              'example' => 'sha1',
                            ),
                            'IkeEncAlg' => 
                            array (
                              'description' => 'IKE阶段加密算法。',
                              'type' => 'string',
                              'example' => 'aes',
                            ),
                            'IkeLifetime' => 
                            array (
                              'description' => 'IKE阶段生存时间。单位：秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '86400',
                            ),
                            'IkeMode' => 
                            array (
                              'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                              'type' => 'string',
                              'example' => 'main',
                            ),
                            'IkePfs' => 
                            array (
                              'description' => 'IKE阶段DH分组。',
                              'type' => 'string',
                              'example' => 'group2',
                            ),
                            'IkeVersion' => 
                            array (
                              'description' => 'IKE协议版本。',
                              'type' => 'string',
                              'example' => 'ikev1',
                            ),
                            'LocalId' => 
                            array (
                              'description' => '隧道本端（阿里云侧）的标识。',
                              'type' => 'string',
                              'example' => '47.21.XX.XX',
                            ),
                            'Psk' => 
                            array (
                              'description' => '预共享密钥。',
                              'type' => 'string',
                              'example' => '123456****',
                            ),
                            'RemoteId' => 
                            array (
                              'description' => '隧道对端的标识。',
                              'type' => 'string',
                              'example' => '47.42.XX.XX',
                            ),
                          ),
                        ),
                        'TunnelIpsecConfig' => 
                        array (
                          'description' => '第二阶段协商的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IpsecAuthAlg' => 
                            array (
                              'description' => 'IPsec阶段认证算法。',
                              'type' => 'string',
                              'example' => 'sha1',
                            ),
                            'IpsecEncAlg' => 
                            array (
                              'description' => 'IPsec阶段加密算法。',
                              'type' => 'string',
                              'example' => 'aes',
                            ),
                            'IpsecLifetime' => 
                            array (
                              'description' => 'IPsec阶段生存时间。单位：秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '86400',
                            ),
                            'IpsecPfs' => 
                            array (
                              'description' => 'IPsec阶段DH分组。',
                              'type' => 'string',
                              'example' => 'group2',
                            ),
                          ),
                        ),
                        'ZoneNo' => 
                        array (
                          'description' => '隧道部署的可用区。',
                          'type' => 'string',
                          'example' => 'ap-southeast-5a',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'EnableTunnelsBgp' => 
              array (
                'description' => '隧道BGP的开启状态。

- **true**：已开启。
- **false**：未开启。

仅双隧道模式的IPsec-VPN连接会返回该参数。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'IPsec连接所属的资源组ID。

IPsec连接与其关联的VPN网关实例的资源组相同。您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecPfs',
            'errorMessage' => 'The specified vpn connection ipsec Ipsec Pfs is not support.',
          ),
          6 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecAuthAlg',
            'errorMessage' => 'The specified vpn connection ipsec Auth Alg is not support.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnRouteEntry.ConflictSSL',
            'errorMessage' => 'The specified route entry has conflict with SSL client.',
          ),
          8 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          9 => 
          array (
            'errorCode' => 'VpnRouteEntry.InvalidWeight',
            'errorMessage' => 'Invalid route entry weight value.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.PBR',
            'errorMessage' => 'The policy-based routes has reached the upper limit.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.SetDPD',
            'errorMessage' => 'Current version of the VPN does not support setting DPD.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationUnsupported.SetNatTraversal',
            'errorMessage' => 'Current version of the VPN does not support setting NAT traversal.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.PolicyBasedRoute',
            'errorMessage' => 'The maximum number of policy-based routes is exceeded. Existing routes: %s. Routes to be created: %s. Maximum routes: %s.',
          ),
          14 => 
          array (
            'errorCode' => 'MissingParameter.TunnelCidr',
            'errorMessage' => 'The parameter TunnelCidr is mandatory when BGP is enabled.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationUnsupported.EnableBgp',
            'errorMessage' => 'Current version of the VPN does not support enable BGP.',
          ),
          16 => 
          array (
            'errorCode' => 'MissingParam.CustomerGatewayAsn',
            'errorMessage' => 'Asn of customer gateway is mandatory when BGP is enabled.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => 'The specified LocalAsn is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.BgpConfig',
            'errorMessage' => 'The specified BgpConfig is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.EnableBgp',
            'errorMessage' => 'VPN connection must enable BGP when VPN gateway has enabled BGP.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.TunnelCidr',
            'errorMessage' => 'The specified TunnelCidr is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidLocalBgpIp.Malformed',
            'errorMessage' => 'The specified LocalBgpIp is malformed.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.LocalBgpIp',
            'errorMessage' => 'The specified LocalBgpIp is invalid.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          24 => 
          array (
            'errorCode' => 'IllegalParam.RemoteSubnet',
            'errorMessage' => 'The specified "RemoteSubnet" (%s) is invalid.',
          ),
          25 => 
          array (
            'errorCode' => 'OperationFailed.CenLevelNotSupport',
            'errorMessage' => 'When the VPC to which the VPN gateway belongs is attached to a FULL-mode CEN, the VPN gateway cannot enable BGP.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidTunnelCidr.Malformed',
            'errorMessage' => 'The specified TunnelCidr is malformed.',
          ),
          27 => 
          array (
            'errorCode' => 'CustomerGateway.ConflictRouteEntry',
            'errorMessage' => 'The specified customer gateway has conflict with route entry.',
          ),
          28 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflictWithIPsecServer',
            'errorMessage' => 'Operation failed because the route to create conflicts with the client IP pool of the IPsec server.',
          ),
          30 => 
          array (
            'errorCode' => 'IllegalParam.TunnelId',
            'errorMessage' => 'The specified TunnelId is invalid.',
          ),
          31 => 
          array (
            'errorCode' => 'IllegalParam.Role',
            'errorMessage' => 'The specified Role is invalid.',
          ),
          32 => 
          array (
            'errorCode' => 'VpnConnectionParamInvalid.SameVpnAndCgwDifferentIkeConfigs',
            'errorMessage' => 'IPSec connections associated with the same user gateway and VPN gateway should have the same pre-shared key and IKE configuration.',
          ),
          33 => 
          array (
            'errorCode' => 'VpnConnectionParamInvalid.SameVpnAndCgwTrafficSelectorOverlap',
            'errorMessage' => 'Traffic selectors of IPSec connections associated with the same user gateway and VPN gateway should not overlap.',
          ),
          34 => 
          array (
            'errorCode' => 'ModifyIkeV1WithMultiRoutes.Invalid',
            'errorMessage' => 'Failed to modify VPN connection parameters. Multi-network is configured while using IkeV1 protocol.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflictWithIPsecServer',
            'errorMessage' => 'Operation failed because the specified route conflicts with IPsec server.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 30,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"EnableNatTraversal\\": true,\\n  \\"CreateTime\\": 1492753817000,\\n  \\"EffectImmediately\\": false,\\n  \\"VpnGatewayId\\": \\"vpn-bp1q8bgx4xnkm2ogj****\\",\\n  \\"LocalSubnet\\": \\"10.1.1.0/24,10.1.2.0/24\\",\\n  \\"RequestId\\": \\"7DB79D0C-5F27-4AB5-995B-79BE55102F90\\",\\n  \\"VpnConnectionId\\": \\"vco-bp1bbi27hojx80nck****\\",\\n  \\"Description\\": \\"description\\",\\n  \\"RemoteSubnet\\": \\"10.2.1.0/24,10.2.2.0/24\\",\\n  \\"CustomerGatewayId\\": \\"cgw-p0w2jemrcj5u61un8****\\",\\n  \\"Name\\": \\"nametest\\",\\n  \\"EnableDpd\\": true,\\n  \\"IkeConfig\\": {\\n    \\"RemoteId\\": \\"139.18.XX.XX\\",\\n    \\"IkeLifetime\\": 86400,\\n    \\"IkeEncAlg\\": \\"aes\\",\\n    \\"LocalId\\": \\"116.64.XX.XX\\",\\n    \\"IkeMode\\": \\"main\\",\\n    \\"IkeVersion\\": \\"ikev1\\",\\n    \\"IkePfs\\": \\"group2\\",\\n    \\"Psk\\": \\"pgw6dy7d1i8i****\\",\\n    \\"IkeAuthAlg\\": \\"sha1\\"\\n  },\\n  \\"IpsecConfig\\": {\\n    \\"IpsecAuthAlg\\": \\"sha1\\",\\n    \\"IpsecLifetime\\": 86400,\\n    \\"IpsecEncAlg\\": \\"aes\\",\\n    \\"IpsecPfs\\": \\"group2\\"\\n  },\\n  \\"VcoHealthCheck\\": {\\n    \\"Dip\\": \\"192.168.1.1\\",\\n    \\"Interval\\": 3,\\n    \\"Retry\\": 3,\\n    \\"Sip\\": \\"10.1.1.1\\",\\n    \\"Enable\\": \\"true\\"\\n  },\\n  \\"VpnBgpConfig\\": {\\n    \\"Status\\": \\"success\\",\\n    \\"PeerBgpIp\\": \\"169.254.11.2\\",\\n    \\"TunnelCidr\\": \\"169.254.11.0/30\\",\\n    \\"EnableBgp\\": \\"true\\",\\n    \\"LocalBgpIp\\": \\"169.254.11.1\\",\\n    \\"PeerAsn\\": 65531,\\n    \\"LocalAsn\\": 65530\\n  },\\n  \\"TunnelOptionsSpecification\\": {\\n    \\"TunnelOptions\\": [\\n      {\\n        \\"CustomerGatewayId\\": \\"cgw-p0wy363lucf1uyae8****\\",\\n        \\"EnableDpd\\": true,\\n        \\"EnableNatTraversal\\": true,\\n        \\"InternetIp\\": \\"47.21.XX.XX\\",\\n        \\"RemoteCaCertificate\\": \\"-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----\\",\\n        \\"Role\\": \\"master\\",\\n        \\"State\\": \\"active\\",\\n        \\"TunnelBgpConfig\\": {\\n          \\"LocalAsn\\": 65530,\\n          \\"LocalBgpIp\\": \\"169.254.10.1\\",\\n          \\"PeerAsn\\": 65531,\\n          \\"PeerBgpIp\\": \\"169.254.10.2\\",\\n          \\"TunnelCidr\\": \\"169.254.10.0/30\\"\\n        },\\n        \\"TunnelId\\": \\"tun-opsqc4d97wni27****\\",\\n        \\"TunnelIkeConfig\\": {\\n          \\"IkeAuthAlg\\": \\"sha1\\",\\n          \\"IkeEncAlg\\": \\"aes\\",\\n          \\"IkeLifetime\\": 86400,\\n          \\"IkeMode\\": \\"main\\",\\n          \\"IkePfs\\": \\"group2\\",\\n          \\"IkeVersion\\": \\"ikev1\\",\\n          \\"LocalId\\": \\"47.21.XX.XX\\",\\n          \\"Psk\\": \\"123456****\\",\\n          \\"RemoteId\\": \\"47.42.XX.XX\\"\\n        },\\n        \\"TunnelIpsecConfig\\": {\\n          \\"IpsecAuthAlg\\": \\"sha1\\",\\n          \\"IpsecEncAlg\\": \\"aes\\",\\n          \\"IpsecLifetime\\": 86400,\\n          \\"IpsecPfs\\": \\"group2\\"\\n        },\\n        \\"ZoneNo\\": \\"ap-southeast-5a\\"\\n      }\\n    ]\\n  },\\n  \\"EnableTunnelsBgp\\": true,\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnConnectionAttributeResponse>\\n    <EnableNatTraversal>true</EnableNatTraversal>\\n    <CreateTime>1492753817000</CreateTime>\\n    <EffectImmediately>false</EffectImmediately>\\n    <VpnGatewayId>vpn-bp1q8bgx4xnkm2ogj****</VpnGatewayId>\\n    <LocalSubnet>10.1.1.0/24,10.1.2.0/24</LocalSubnet>\\n    <RequestId>7DB79D0C-5F27-4AB5-995B-79BE55102F90</RequestId>\\n    <VpnConnectionId>vco-bp1bbi27hojx80nck****</VpnConnectionId>\\n    <Description>description</Description>\\n    <RemoteSubnet>10.2.1.0/24,10.2.2.0/24</RemoteSubnet>\\n    <CustomerGatewayId>cgw-p0w2jemrcj5u61un8****</CustomerGatewayId>\\n    <Name>nametest</Name>\\n    <EnableDpd>true</EnableDpd>\\n    <IkeConfig>\\n        <RemoteId>139.18.XX.XX</RemoteId>\\n        <IkeLifetime>86400</IkeLifetime>\\n        <IkeEncAlg>aes</IkeEncAlg>\\n        <LocalId>116.64.XX.XX</LocalId>\\n        <IkeMode>main</IkeMode>\\n        <IkeVersion>ikev1</IkeVersion>\\n        <IkePfs>group2</IkePfs>\\n        <Psk>pgw6dy7d1i8i****</Psk>\\n        <IkeAuthAlg>sha1</IkeAuthAlg>\\n    </IkeConfig>\\n    <IpsecConfig>\\n        <IpsecAuthAlg>sha1</IpsecAuthAlg>\\n        <IpsecLifetime>86400</IpsecLifetime>\\n        <IpsecEncAlg>aes</IpsecEncAlg>\\n        <IpsecPfs>group2</IpsecPfs>\\n    </IpsecConfig>\\n    <VcoHealthCheck>\\n        <Dip>192.168.1.1</Dip>\\n        <Interval>3</Interval>\\n        <Retry>3</Retry>\\n        <Sip>10.1.1.1</Sip>\\n        <Enable>true</Enable>\\n    </VcoHealthCheck>\\n    <VpnBgpConfig>\\n        <Status>success</Status>\\n        <PeerBgpIp>169.254.11.2</PeerBgpIp>\\n        <TunnelCidr>169.254.11.0/30</TunnelCidr>\\n        <EnableBgp>true</EnableBgp>\\n        <LocalBgpIp>169.254.11.1</LocalBgpIp>\\n        <PeerAsn>65531</PeerAsn>\\n        <LocalAsn>65530</LocalAsn>\\n    </VpnBgpConfig>\\n</ModifyVpnConnectionAttributeResponse>","errorExample":""}]',
      'title' => '修改IPsec连接的配置信息',
      'description' => '- 如果要修改双隧道模式的IPsec-VPN连接，调用`ModifyVpnConnectionAttribute`接口时除支持配置必填参数外，还支持配置以下请求参数：

   **ClientToken**、**Name**、 **LocalSubnet**、**RemoteSubnet**、**EffectImmediately**、**AutoConfigRoute**、**TunnelOptionsSpecification**数组、**EnableTunnelsBgp**。

- 如果要修改单隧道模式的IPsec-VPN连接，调用`ModifyVpnConnectionAttribute`接口时除支持配置必填参数外，还支持配置以下请求参数：

     **ClientToken**、**Name**、**LocalSubnet**、**RemoteSubnet**、**EffectImmediately**、**IkeConfig**、**IpsecConfig**、**HealthCheckConfig**、**AutoConfigRoute**、**EnableDpd**、**EnableNatTraversal**、**BgpConfig**、**RemoteCaCertificate**。

- **ModifyVpnConnectionAttribute**接口属于异步接口，即系统返回一个请求ID，但该IPsec连接的配置信息未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询VPN网关实例状态，来确定IPsec连接的配置信息的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示IPsec连接的配置信息正在修改中。
    - 当VPN网关实例处于**active**状态时，表示IPsec连接的配置信息修改成功。
- **ModifyVpnConnectionAttribute**接口不支持在同一VPN网关下并发修改IPsec连接的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyTunnelAttribute' => 
    array (
      'summary' => '调用ModifyTunnelAttribute接口修改高可用VPN的隧道配置信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        1 => 
        array (
          'name' => 'TunnelOptionsSpecification',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '修改隧道的配置。',
            'type' => 'object',
            'properties' => 
            array (
              'EnableDpd' => 
              array (
                'description' => '是否开启DPD（对等体存活检测）功能。取值：

- **true**：开启DPD功能。隧道发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，隧道将删除ISAKMP SA和相应的IPsec SA，隧道同样也会被删除。

- **false**：不开启DPD功能，隧道发起端不会发送DPD探测报文。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'EnableNatTraversal' => 
              array (
                'description' => '是否开启NAT穿越功能。取值：

- **true**：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'RemoteCaCertificate' => 
              array (
                'description' => '在国密型VPN网关下使用IPsec连接时，对端的CA证书。',
                'type' => 'string',
                'required' => false,
                'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
              ),
              'TunnelBgpConfig' => 
              array (
                'description' => '修改隧道的BGP配置。

如果隧道之前并未开启BGP功能，您需要调用[ModifyVpnConnectionAttribute](~~120381~~)接口为隧道开启BGP功能并添加BGP配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'LocalAsn' => 
                  array (
                    'description' => '隧道本端自治系统号。自治系统号取值范围：**1**~**4294967295**。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '65530',
                  ),
                  'LocalBgpIp' => 
                  array (
                    'description' => '隧道本端的BGP IP地址。该地址需是**TunnelCidr**内的一个IP地址。 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => '169.254.11.1',
                  ),
                  'TunnelCidr' => 
                  array (
                    'description' => '隧道本端BGP IP地址所属网段。

该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '169.254.11.0/30',
                  ),
                ),
                'required' => false,
              ),
              'TunnelIkeConfig' => 
              array (
                'description' => '修改隧道IKE阶段（第一阶段）配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'IkeAuthAlg' => 
                  array (
                    'description' => '第一阶段协商的认证算法。

- 如果IPsec关联的是普通型VPN网关，则取值为：**md5**、**sha1**、**sha256**、**sha384**或**sha512**。
- 如果IPsec关联的是国密型VPN网关，则取值为：**sm3**。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'sha1',
                  ),
                  'IkeEncAlg' => 
                  array (
                    'description' => '第一阶段协商的加密算法。

- 如果IPsec关联的是普通型VPN网关，则取值为：**aes**、**aes192**、**aes256**、**des**或**3des**。  
- 如果IPsec关联的是国密型VPN网关，则取值为：**sm4**。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'aes',
                  ),
                  'IkeLifetime' => 
                  array (
                    'description' => '第一阶段协商出的SA的生存周期。单位：秒。取值范围：**0~86400**。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '86400',
                  ),
                  'IkeMode' => 
                  array (
                    'description' => 'IKE版本的协商模式。取值：

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'main',
                  ),
                  'IkePfs' => 
                  array (
                    'description' => '第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**group1**、**group2**、**group5**、**group14**。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'group2',
                  ),
                  'IkeVersion' => 
                  array (
                    'description' => 'IKE协议的版本。取值：**ikev1**或**ikev2**。 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'ikev2',
                  ),
                  'LocalId' => 
                  array (
                    'description' => '隧道本端的标识。长度限制为100个字符，支持FQDN和IP格式。默认值为隧道的IP地址。 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => '47.XX.XX.87',
                  ),
                  'Psk' => 
                  array (
                    'description' => '预共享密钥，用于隧道及对端之间的身份认证。
    
   - 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!`@#$%^&*()_-+={}[]|;:\',.<>/?```
   - 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~120374~~)接口查询系统自动生成的预共享密钥。
   > 隧道及隧道对端配置的预共享密钥必须一致，否则系统无法成功建立隧道。 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => '123456****',
                  ),
                  'RemoteId' => 
                  array (
                    'description' => '隧道对端的标识。长度限制为100个字符，支持FQDN和IP格式。默认值为隧道关联的用户网关实例的IP地址。 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => '47.XX.XX.207',
                  ),
                ),
                'required' => false,
              ),
              'TunnelIpsecConfig' => 
              array (
                'description' => '修改隧道IPsec阶段（第二阶段）的配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'IpsecAuthAlg' => 
                  array (
                    'description' => '第二阶段协商的认证算法。

- 如果IPsec关联的是普通型VPN网关，则取值为：**md5**、**sha1**、**sha256**、**sha384**或**sha512**。
- 如果IPsec关联的是国密型VPN网关，则取值为：**sm3**。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'sha1',
                  ),
                  'IpsecEncAlg' => 
                  array (
                    'description' => '第二阶段协商的加密算法。

- 如果IPsec关联的是普通型VPN网关，则取值为：**aes**、**aes192**、**aes256**、**des**或**3des**。  
- 如果IPsec关联的是国密型VPN网关，则取值为：**sm4**。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'aes',
                  ),
                  'IpsecLifetime' => 
                  array (
                    'description' => '第二阶段协商出的SA的生存周期。单位：秒。取值范围：**0~86400**。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '86400',
                  ),
                  'IpsecPfs' => 
                  array (
                    'description' => '第二阶段协商使用的Diffie-Hellman密钥交换算法。取值：**disabled**、**group1**、**group2**、**group5**、**group14**。   
',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'group2',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-gw69vm1i71y354****',
          ),
        ),
        4 => 
        array (
          'name' => 'TunnelId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '隧道ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tun-gbyz2e070xzo93****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TunnelId' => 
              array (
                'description' => '隧道ID。',
                'type' => 'string',
                'example' => 'tun-gbyz2e070xzo93****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E6F36FF0-9544-3AEE-8673-A4647D50064C',
              ),
              'TunnelIkeConfig' => 
              array (
                'description' => '隧道IKE阶段（第一阶段）配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'IkeAuthAlg' => 
                  array (
                    'description' => 'IKE认证算法。',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                  'IkeEncAlg' => 
                  array (
                    'description' => 'IKE加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'IkeLifetime' => 
                  array (
                    'description' => 'IKE生存时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'IkeMode' => 
                  array (
                    'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                    'type' => 'string',
                    'example' => 'main',
                  ),
                  'IkePfs' => 
                  array (
                    'description' => 'DH分组。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                  'IkeVersion' => 
                  array (
                    'description' => 'IKE协议版本。

- **ikev1**
- **ikev2**

相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。',
                    'type' => 'string',
                    'example' => 'ikev2',
                  ),
                  'LocalId' => 
                  array (
                    'description' => '隧道本端的标识。支持FQDN和IP格式，默认值为当前隧道的IP地址。',
                    'type' => 'string',
                    'example' => '47.XX.XX.87',
                  ),
                  'Psk' => 
                  array (
                    'description' => '预共享密钥。',
                    'type' => 'string',
                    'example' => '123456****',
                  ),
                  'RemoteId' => 
                  array (
                    'description' => '隧道对端的标识。支持FQDN和IP格式，默认值为隧道关联的用户网关实例的IP地址。',
                    'type' => 'string',
                    'example' => '47.XX.XX.207',
                  ),
                ),
              ),
              'TunnelIpsecConfig' => 
              array (
                'description' => '隧道IPsec阶段（第二阶段）的配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'IpsecAuthAlg' => 
                  array (
                    'description' => 'IPsec认证算法。',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                  'IpsecEncAlg' => 
                  array (
                    'description' => 'IPsec加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'IpsecLifetime' => 
                  array (
                    'description' => 'IPsec生存时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'IpsecPfs' => 
                  array (
                    'description' => 'DH分组。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                ),
              ),
              'TunnelBgpConfig' => 
              array (
                'description' => '隧道的BGP配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'EnableBgp' => 
                  array (
                    'description' => 'BGP的开启状态。

- **true**：已开启。

- **false**：未开启。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'LocalAsn' => 
                  array (
                    'description' => '隧道本端的自治系统号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '65530',
                  ),
                  'LocalBgpIp' => 
                  array (
                    'description' => '隧道本端的BGP IP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.1',
                  ),
                  'PeerAsn' => 
                  array (
                    'description' => '隧道对端的自治系统号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '65531',
                  ),
                  'PeerBgpIp' => 
                  array (
                    'description' => '隧道对端的BGP IP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.2',
                  ),
                  'TunnelCidr' => 
                  array (
                    'description' => '隧道BGP IP地址所属网段。',
                    'type' => 'string',
                    'example' => '169.254.11.0/30',
                  ),
                ),
              ),
              'EnableNatTraversal' => 
              array (
                'description' => '是否已开启NAT穿越功能。取值：

- **false**：未开启。

- **true**：已开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'EnableDpd' => 
              array (
                'description' => '是否已开启DPD（对等体存活检测）功能。

- **false**：未开启。

- **true**：已开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RemoteCaCertificate' => 
              array (
                'description' => '国密型VPN网关创建IPsec连接时，对端的CA证书。',
                'type' => 'string',
                'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => '隧道关联的用户网关实例ID。',
                'type' => 'string',
                'example' => 'cgw-p0wx48ayhrygitm80****',
              ),
              'Role' => 
              array (
                'description' => '隧道的角色。

- **master**：表示主隧道。
- **slave**：表示备隧道。',
                'type' => 'string',
                'example' => 'master',
              ),
              'ZoneNo' => 
              array (
                'description' => '隧道所属的可用区。',
                'type' => 'string',
                'example' => 'cn-hangzhou-h',
              ),
              'InternetIp' => 
              array (
                'description' => '隧道的IP地址。',
                'type' => 'string',
                'example' => '47.XX.XX.87',
              ),
              'State' => 
              array (
                'description' => '隧道的状态。

- **active**：表示隧道状态可用。
- **updating**：表示隧道正在更新中。
- **deleting**：表示隧道正在删除中。',
                'type' => 'string',
                'example' => 'active',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecPfs',
            'errorMessage' => 'The specified vpn connection ipsec Ipsec Pfs is not support.',
          ),
          6 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecAuthAlg',
            'errorMessage' => 'The specified vpn connection ipsec Auth Alg is not support.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnConnectionParamInvalid.SameVpnAndCgwDifferentIkeConfigs',
            'errorMessage' => 'IPSec connections associated with the same user gateway and VPN gateway should have the same pre-shared key and IKE configuration.',
          ),
          8 => 
          array (
            'errorCode' => 'VpnConnectionParamInvalid.SameVpnAndCgwTrafficSelectorOverlap',
            'errorMessage' => 'Traffic selectors of IPSec connections associated with the same user gateway and VPN gateway should not overlap.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => 'The param of LocalAsn is illegal',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.LocalBgpIp',
            'errorMessage' => 'The specified LocalBgpIp is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'VpnGateway.task.conflict',
            'errorMessage' => 'The VPN is in the configuration state, please wait a while before operating.',
          ),
          12 => 
          array (
            'errorCode' => 'ModifyIkeV1WithMultiRoutes.Invalid',
            'errorMessage' => 'Failed to modify VPN connection parameters. Multi-network is configured while using IkeV1 protocol.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TunnelId\\": \\"tun-gbyz2e070xzo93****\\",\\n  \\"RequestId\\": \\"E6F36FF0-9544-3AEE-8673-A4647D50064C\\",\\n  \\"TunnelIkeConfig\\": {\\n    \\"IkeAuthAlg\\": \\"sha1\\",\\n    \\"IkeEncAlg\\": \\"aes\\",\\n    \\"IkeLifetime\\": 86400,\\n    \\"IkeMode\\": \\"main\\",\\n    \\"IkePfs\\": \\"group2\\",\\n    \\"IkeVersion\\": \\"ikev2\\",\\n    \\"LocalId\\": \\"47.XX.XX.87\\",\\n    \\"Psk\\": \\"123456****\\",\\n    \\"RemoteId\\": \\"47.XX.XX.207\\"\\n  },\\n  \\"TunnelIpsecConfig\\": {\\n    \\"IpsecAuthAlg\\": \\"sha1\\",\\n    \\"IpsecEncAlg\\": \\"aes\\",\\n    \\"IpsecLifetime\\": 86400,\\n    \\"IpsecPfs\\": \\"group2\\"\\n  },\\n  \\"TunnelBgpConfig\\": {\\n    \\"EnableBgp\\": true,\\n    \\"LocalAsn\\": 65530,\\n    \\"LocalBgpIp\\": \\"169.254.11.1\\",\\n    \\"PeerAsn\\": 65531,\\n    \\"PeerBgpIp\\": \\"169.254.11.2\\",\\n    \\"TunnelCidr\\": \\"169.254.11.0/30\\"\\n  },\\n  \\"EnableNatTraversal\\": true,\\n  \\"EnableDpd\\": true,\\n  \\"RemoteCaCertificate\\": \\"-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----\\",\\n  \\"CustomerGatewayId\\": \\"cgw-p0wx48ayhrygitm80****\\",\\n  \\"Role\\": \\"master\\",\\n  \\"ZoneNo\\": \\"cn-hangzhou-h\\",\\n  \\"InternetIp\\": \\"47.XX.XX.87\\",\\n  \\"State\\": \\"active\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyTunnelAttributeResponse>\\n    <TunnelId>tun-gbyz2e070xzo93****</TunnelId>\\n    <RequestId>E6F36FF0-9544-3AEE-8673-A4647D50064C</RequestId>\\n    <TunnelIkeConfig>\\n        <IkeAuthAlg>sha1</IkeAuthAlg>\\n        <IkeEncAlg>aes</IkeEncAlg>\\n        <IkeLifetime>86400</IkeLifetime>\\n        <IkeMode>main</IkeMode>\\n        <IkePfs>group2</IkePfs>\\n        <IkeVersion>ikev2</IkeVersion>\\n        <LocalId>47.XX.XX.87</LocalId>\\n        <Psk>123456****</Psk>\\n        <RemoteId>47.XX.XX.207</RemoteId>\\n    </TunnelIkeConfig>\\n    <TunnelIpsecConfig>\\n        <IpsecAuthAlg>sha1</IpsecAuthAlg>\\n        <IpsecEncAlg>aes</IpsecEncAlg>\\n        <IpsecLifetime>86400</IpsecLifetime>\\n        <IpsecPfs>group2</IpsecPfs>\\n    </TunnelIpsecConfig>\\n    <TunnelBgpConfig>\\n        <EnableBgp>true</EnableBgp>\\n        <LocalAsn>65530</LocalAsn>\\n        <LocalBgpIp>169.254.11.1</LocalBgpIp>\\n        <PeerAsn>65531</PeerAsn>\\n        <PeerBgpIp>169.254.11.2</PeerBgpIp>\\n        <TunnelCidr>169.254.11.0/30</TunnelCidr>\\n    </TunnelBgpConfig>\\n    <EnableNatTraversal>true</EnableNatTraversal>\\n    <EnableDpd>true</EnableDpd>\\n    <RemoteCaCertificate>-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----</RemoteCaCertificate>\\n    <CustomerGatewayId>cgw-p0wx48ayhrygitm80****</CustomerGatewayId>\\n    <Role>master</Role>\\n    <ZoneNo>ap-southeast-2b</ZoneNo>\\n    <InternetIp>47.XX.XX.87</InternetIp>\\n    <State>active</State>\\n</ModifyTunnelAttributeResponse>","errorExample":""}]',
      'title' => '修改VPN隧道信息',
    ),
    'DescribeVpnConnection' => 
    array (
      'summary' => '调用DescribeVpnConnection接口查询指定的IPsec连接的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp1bbi27hojx80nck****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => 'IPsec连接的状态。

- **ike_sa_not_established**：第一阶段协商失败。

- **ike_sa_established**：第一阶段协商成功。

-  **ipsec_sa_not_established**：第二阶段协商失败。

- **ipsec_sa_established**：第二阶段协商成功。',
                'type' => 'string',
                'example' => 'ike_sa_not_established',
              ),
              'RemoteCaCertificate' => 
              array (
                'description' => '对端的CA证书。',
                'type' => 'string',
                'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW****',
              ),
              'EnableNatTraversal' => 
              array (
                'description' => 'IPsec连接是否已开启NAT穿越功能。

- **true**：开启NAT穿越功能。

- **false**：不开启NAT穿越功能。

开启NAT穿越功能后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'CreateTime' => 
              array (
                'description' => '创建IPsec连接的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建IPsec连接时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492753817000',
              ),
              'EffectImmediately' => 
              array (
                'description' => 'IPsec连接的配置是否立即生效。

- **true**：是，配置变更完成后触发重连。

- **false**：否，有流量时触发重连。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关的实例ID。',
                'type' => 'string',
                'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
              ),
              'LocalSubnet' => 
              array (
                'description' => 'IPsec连接阿里云侧的网段。

在多个网段的情况下，网段之间使用半角逗号（,）分隔。',
                'type' => 'string',
                'example' => '10.0.0.0/8',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F2310D45-BCF6-4E2E-9082-B4503844BA4C',
              ),
              'VpnConnectionId' => 
              array (
                'description' => 'IPsec连接的ID。',
                'type' => 'string',
                'example' => 'vco-bp1bbi27hojx80nck****',
              ),
              'RemoteSubnet' => 
              array (
                'description' => '本地数据中心侧的网段。

在多个网段的情况下，网段之间使用半角逗号（,）分隔。',
                'type' => 'string',
                'example' => '192.168.0.0/16',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => 'IPsec连接关联的用户网关ID。',
                'type' => 'string',
                'example' => 'cgw-bp1mvj4g9kogwwcxk****',
              ),
              'Name' => 
              array (
                'description' => 'IPsec连接的名称。',
                'type' => 'string',
                'example' => 'ipsec1',
              ),
              'EnableDpd' => 
              array (
                'description' => 'IPsec连接是否已开启DPD（对等体存活检测）功能。
- **false**：未开启。

- **true**：已开启。

开启DPD功能后，IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'IkeConfig' => 
              array (
                'description' => '第一阶段协商的配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'RemoteId' => 
                  array (
                    'description' => 'IPsec连接本地数据中心侧的标识。',
                    'type' => 'string',
                    'example' => '139.34.XX.XX',
                  ),
                  'IkeLifetime' => 
                  array (
                    'description' => 'IKE阶段生存时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'IkeEncAlg' => 
                  array (
                    'description' => 'IKE阶段加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'LocalId' => 
                  array (
                    'description' => 'IPsec连接阿里云侧的标识。',
                    'type' => 'string',
                    'example' => '116.28.XX.XX',
                  ),
                  'IkeMode' => 
                  array (
                    'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                    'type' => 'string',
                    'example' => 'main',
                  ),
                  'IkeVersion' => 
                  array (
                    'description' => 'IKE协议版本。

- **ikev1**
- **ikev2**

相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。',
                    'type' => 'string',
                    'example' => 'ikev1',
                  ),
                  'IkePfs' => 
                  array (
                    'description' => 'IKE阶段DH分组。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                  'Psk' => 
                  array (
                    'description' => '预共享密钥。',
                    'type' => 'string',
                    'example' => 'pgw6dy****',
                  ),
                  'IkeAuthAlg' => 
                  array (
                    'description' => 'IKE阶段认证算法。',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                ),
              ),
              'IpsecConfig' => 
              array (
                'description' => '第二阶段协商的配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'IpsecAuthAlg' => 
                  array (
                    'description' => 'IPsec阶段认证算法。',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                  'IpsecLifetime' => 
                  array (
                    'description' => 'IPsec阶段生存时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'IpsecEncAlg' => 
                  array (
                    'description' => 'IPsec阶段加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'IpsecPfs' => 
                  array (
                    'description' => 'IPsec阶段DH分组。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                ),
              ),
              'VcoHealthCheck' => 
              array (
                'description' => 'IPsec连接的健康检查信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '健康检查状态。

- **failed**：异常。

- **success**：正常。',
                    'type' => 'string',
                    'example' => 'failed',
                  ),
                  'Dip' => 
                  array (
                    'description' => '目标IP地址。',
                    'type' => 'string',
                    'example' => '10.0.0.1',
                  ),
                  'Interval' => 
                  array (
                    'description' => '健康检查的重试间隔时间，单位：秒。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Retry' => 
                  array (
                    'description' => '健康检查的重试发包次数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Sip' => 
                  array (
                    'description' => '源IP地址。',
                    'type' => 'string',
                    'example' => '192.168.1.1',
                  ),
                  'Enable' => 
                  array (
                    'description' => 'IPsec连接是否已开启健康检查。
- **false**：未开启。

- **true**：已开启。

',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'Policy' => 
                  array (
                    'description' => '健康检查失败时是否撤销已发布的路由。

- **revoke_route**：撤销路由。
- **reserve_route**：不撤销路由。',
                    'type' => 'string',
                    'example' => 'revoke_route',
                  ),
                ),
              ),
              'VpnBgpConfig' => 
              array (
                'description' => 'IPsec连接BGP路由协议的配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => 'BGP路由协议的协商状态。

- **success**：正常。

- **failed**：异常。',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'PeerBgpIp' => 
                  array (
                    'description' => '对端BGP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.1',
                  ),
                  'TunnelCidr' => 
                  array (
                    'description' => 'IPsec连接BGP网段。该网段是一个在169.254.0.0/16内的子网掩码长度为30的网段。',
                    'type' => 'string',
                    'example' => '169.254.11.0/30',
                  ),
                  'EnableBgp' => 
                  array (
                    'description' => 'BGP路由协议的开启状态。

- **true**：已开启。

- **false**：未开启。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'LocalBgpIp' => 
                  array (
                    'description' => '阿里云侧BGP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.2',
                  ),
                  'PeerAsn' => 
                  array (
                    'description' => '对端自治系统号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '65530',
                  ),
                  'LocalAsn' => 
                  array (
                    'description' => '阿里云侧自治系统号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '65531',
                  ),
                  'AuthKey' => 
                  array (
                    'description' => 'BGP路由协议的认证密钥。',
                    'type' => 'string',
                    'example' => 'AuthKey****',
                  ),
                ),
              ),
              'AttachType' => 
              array (
                'description' => 'IPsec连接绑定的资源类型。

- **CEN**：表示IPsec连接已绑定云企业网实例下的转发路由器实例。
- **NO_ASSOCIATED**：表示IPsec连接未绑定任何资源。
- **VPNGW**：表示IPsec连接绑定了VPN网关实例。',
                'type' => 'string',
                'example' => 'CEN',
              ),
              'NetworkType' => 
              array (
                'description' => 'IPsec连接的网络类型。

- **public**：公网，表示IPsec连接通过公网建立加密通信通道。
- **private**：私网，表示IPsec连接通过私网建立加密通信通道。',
                'type' => 'string',
                'example' => 'public',
              ),
              'AttachInstanceId' => 
              array (
                'description' => '转发路由器实例所属的云企业网实例ID。',
                'type' => 'string',
                'example' => 'cen-lxxpbpalc776qz****',
              ),
              'Spec' => 
              array (
                'description' => 'IPsec连接的带宽规格。单位：**Mbps**。',
                'type' => 'string',
                'example' => '1000M',
              ),
              'State' => 
              array (
                'description' => 'IPsec连接与转发路由器实例的绑定状态。

- **active**：IPsec连接已与VPN网关实例绑定，状态正常。
- **init**：IPsec连接未绑定任何资源，IPsec连接初始化。
- **attaching**：IPsec连接与转发路由器实例绑定中。
- **attached**：IPsec连接已与转发路由器实例绑定。
- **detaching**：IPsec连接与转发路由器实例解绑中。
- **financialLocked**：欠费锁定。
- **provisioning**：资源准备中。
- **updating**：更新中。
- **upgrading**：升级中。
- **deleted**：已删除。',
                'type' => 'string',
                'example' => 'attached',
              ),
              'ZoneNo' => 
              array (
                'description' => 'IPsec连接被部署的可用区ID。

您可以调用[DescribeZones](~~36064~~)接口查询可用区ID和可用区的对应关系。',
                'type' => 'string',
                'example' => 'cn-hangzhou-h',
              ),
              'InternetIp' => 
              array (
                'description' => 'IPsec连接的网关IP地址。',
                'type' => 'string',
                'example' => '47.XX.XX.162',
              ),
              'TransitRouterId' => 
              array (
                'description' => 'IPsec连接绑定的转发路由器实例ID。',
                'type' => 'string',
                'example' => 'tr-p0we2edef9qr44a85****',
              ),
              'TransitRouterName' => 
              array (
                'description' => '转发路由器实例的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'CrossAccountAuthorized' => 
              array (
                'description' => 'IPsec连接是否绑定了跨账号的转发路由器实例。

- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => 'IPsec连接绑定的标签列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'TagKey',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'TagValue',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TunnelOptionsSpecification' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TunnelOptions' => 
                  array (
                    'description' => 'IPsec连接的隧道配置信息。

仅查询双隧道模式的IPsec连接会返回**TunnelOptionsSpecification**数组下的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '隧道的配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TunnelId' => 
                        array (
                          'description' => '隧道ID。',
                          'type' => 'string',
                          'example' => 'tun-opsqc4d97wni27****',
                        ),
                        'CustomerGatewayId' => 
                        array (
                          'description' => '隧道关联的用户网关ID。',
                          'type' => 'string',
                          'example' => 'cgw-p0wy363lucf1uyae8****',
                        ),
                        'EnableDpd' => 
                        array (
                          'description' => '隧道是否已开启DPD（对等体存活检测）功能。
- **false**：未开启。
- **true**：已开启。',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                        'EnableNatTraversal' => 
                        array (
                          'description' => '隧道是否已开启NAT穿越功能。

- **false**：未开启。
- **true**：已开启。',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                        'InternetIp' => 
                        array (
                          'description' => '隧道的IP地址。',
                          'type' => 'string',
                          'example' => '47.21.XX.XX',
                        ),
                        'RemoteCaCertificate' => 
                        array (
                          'description' => '隧道对端的CA证书。

仅VPN网关实例的类型为国密型时才会返回当前参数。',
                          'type' => 'string',
                          'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
                        ),
                        'Role' => 
                        array (
                          'description' => '隧道的角色。

- **master**：表示当前隧道为主隧道。
- **slave**：表示当前隧道为备隧道。',
                          'type' => 'string',
                          'example' => 'master',
                        ),
                        'State' => 
                        array (
                          'description' => '隧道的状态。

- **active**：状态正常。
- **updating**：更新中。
- **deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'Status' => 
                        array (
                          'description' => 'IPsec连接的状态。

- **ike_sa_not_established**：第一阶段协商失败。

- **ike_sa_established**：第一阶段协商成功。

-  **ipsec_sa_not_established**：第二阶段协商失败。

- **ipsec_sa_established**：第二阶段协商成功。',
                          'type' => 'string',
                          'example' => 'ipsec_sa_established',
                        ),
                        'TunnelBgpConfig' => 
                        array (
                          'description' => '隧道的BGP配置信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BgpStatus' => 
                            array (
                              'description' => 'BGP的协商状态。

- **success**：正常。
- **false**：异常。',
                              'type' => 'string',
                              'example' => 'success',
                            ),
                            'LocalAsn' => 
                            array (
                              'description' => '隧道本端（阿里云侧）的自治系统号。',
                              'type' => 'string',
                              'example' => '65530',
                            ),
                            'LocalBgpIp' => 
                            array (
                              'description' => '隧道本端（阿里云侧）的BGP地址。',
                              'type' => 'string',
                              'example' => '169.254.10.1',
                            ),
                            'PeerAsn' => 
                            array (
                              'description' => '隧道对端的自治系统号。',
                              'type' => 'string',
                              'example' => '65531',
                            ),
                            'PeerBgpIp' => 
                            array (
                              'description' => '隧道对端的BGP地址。',
                              'type' => 'string',
                              'example' => '169.254.10.2',
                            ),
                            'TunnelCidr' => 
                            array (
                              'description' => '隧道的BGP网段。',
                              'type' => 'string',
                              'example' => '169.254.10.0/30',
                            ),
                          ),
                        ),
                        'TunnelIkeConfig' => 
                        array (
                          'description' => '第一阶段协商的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IkeAuthAlg' => 
                            array (
                              'description' => 'IKE阶段认证算法。',
                              'type' => 'string',
                              'example' => 'sha1',
                            ),
                            'IkeEncAlg' => 
                            array (
                              'description' => 'IKE阶段加密算法。',
                              'type' => 'string',
                              'example' => 'aes',
                            ),
                            'IkeLifetime' => 
                            array (
                              'description' => 'IKE阶段生存时间。单位：秒。',
                              'type' => 'string',
                              'example' => '86400',
                            ),
                            'IkeMode' => 
                            array (
                              'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                              'type' => 'string',
                              'example' => 'main',
                            ),
                            'IkePfs' => 
                            array (
                              'description' => 'IKE阶段DH分组。',
                              'type' => 'string',
                              'example' => 'group2',
                            ),
                            'IkeVersion' => 
                            array (
                              'description' => 'IKE协议版本。',
                              'type' => 'string',
                              'example' => 'ikev1',
                            ),
                            'LocalId' => 
                            array (
                              'description' => '隧道本端（阿里云侧）的标识。',
                              'type' => 'string',
                              'example' => '47.21.XX.XX',
                            ),
                            'Psk' => 
                            array (
                              'description' => '预共享密钥。',
                              'type' => 'string',
                              'example' => '123456****',
                            ),
                            'RemoteId' => 
                            array (
                              'description' => '隧道对端的标识。',
                              'type' => 'string',
                              'example' => '47.42.XX.XX',
                            ),
                          ),
                        ),
                        'TunnelIpsecConfig' => 
                        array (
                          'description' => '第二阶段协商的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IpsecAuthAlg' => 
                            array (
                              'description' => 'IPsec阶段认证算法。',
                              'type' => 'string',
                              'example' => 'sha1',
                            ),
                            'IpsecEncAlg' => 
                            array (
                              'description' => 'IPsec阶段加密算法。',
                              'type' => 'string',
                              'example' => 'aes',
                            ),
                            'IpsecLifetime' => 
                            array (
                              'description' => 'IPsec阶段生存时间。单位：秒。',
                              'type' => 'string',
                              'example' => '86400',
                            ),
                            'IpsecPfs' => 
                            array (
                              'description' => 'IPsec阶段DH分组。',
                              'type' => 'string',
                              'example' => 'group2',
                            ),
                          ),
                        ),
                        'ZoneNo' => 
                        array (
                          'description' => '隧道部署的可用区。

您可以调用[DescribeZones](~~36064~~)接口查询可用区ID和可用区的对应关系。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-i',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'EnableTunnelsBgp' => 
              array (
                'description' => '隧道BGP的开启状态。

- **true**：已开启。
- **false**：未开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'IPsec连接所属资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"ike_sa_not_established\\",\\n  \\"RemoteCaCertificate\\": \\"-----BEGIN CERTIFICATE----- MIIB7zCCAZW****\\",\\n  \\"EnableNatTraversal\\": true,\\n  \\"CreateTime\\": 1492753817000,\\n  \\"EffectImmediately\\": true,\\n  \\"VpnGatewayId\\": \\"vpn-bp1q8bgx4xnkm2ogj****\\",\\n  \\"LocalSubnet\\": \\"10.0.0.0/8\\",\\n  \\"RequestId\\": \\"F2310D45-BCF6-4E2E-9082-B4503844BA4C\\",\\n  \\"VpnConnectionId\\": \\"vco-bp1bbi27hojx80nck****\\",\\n  \\"RemoteSubnet\\": \\"192.168.0.0/16\\",\\n  \\"CustomerGatewayId\\": \\"cgw-bp1mvj4g9kogwwcxk****\\",\\n  \\"Name\\": \\"ipsec1\\",\\n  \\"EnableDpd\\": true,\\n  \\"IkeConfig\\": {\\n    \\"RemoteId\\": \\"139.34.XX.XX\\",\\n    \\"IkeLifetime\\": 86400,\\n    \\"IkeEncAlg\\": \\"aes\\",\\n    \\"LocalId\\": \\"116.28.XX.XX\\",\\n    \\"IkeMode\\": \\"main\\",\\n    \\"IkeVersion\\": \\"ikev1\\",\\n    \\"IkePfs\\": \\"group2\\",\\n    \\"Psk\\": \\"pgw6dy****\\",\\n    \\"IkeAuthAlg\\": \\"sha1\\"\\n  },\\n  \\"IpsecConfig\\": {\\n    \\"IpsecAuthAlg\\": \\"sha1\\",\\n    \\"IpsecLifetime\\": 86400,\\n    \\"IpsecEncAlg\\": \\"aes\\",\\n    \\"IpsecPfs\\": \\"group2\\"\\n  },\\n  \\"VcoHealthCheck\\": {\\n    \\"Status\\": \\"failed\\",\\n    \\"Dip\\": \\"10.0.0.1\\",\\n    \\"Interval\\": 3,\\n    \\"Retry\\": 3,\\n    \\"Sip\\": \\"192.168.1.1\\",\\n    \\"Enable\\": \\"true\\",\\n    \\"Policy\\": \\"revoke_route\\"\\n  },\\n  \\"VpnBgpConfig\\": {\\n    \\"Status\\": \\"success\\",\\n    \\"PeerBgpIp\\": \\"169.254.11.1\\",\\n    \\"TunnelCidr\\": \\"169.254.11.0/30\\",\\n    \\"EnableBgp\\": \\"true\\",\\n    \\"LocalBgpIp\\": \\"169.254.11.2\\",\\n    \\"PeerAsn\\": 65530,\\n    \\"LocalAsn\\": 65531,\\n    \\"AuthKey\\": \\"AuthKey****\\"\\n  },\\n  \\"AttachType\\": \\"CEN\\",\\n  \\"NetworkType\\": \\"public\\",\\n  \\"AttachInstanceId\\": \\"cen-lxxpbpalc776qz****\\",\\n  \\"Spec\\": \\"1000M\\",\\n  \\"State\\": \\"attached\\",\\n  \\"ZoneNo\\": \\"cn-hangzhou-h\\",\\n  \\"InternetIp\\": \\"47.XX.XX.162\\",\\n  \\"TransitRouterId\\": \\"tr-p0we2edef9qr44a85****\\",\\n  \\"TransitRouterName\\": \\"nametest\\",\\n  \\"CrossAccountAuthorized\\": false,\\n  \\"Tags\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"Key\\": \\"TagKey\\",\\n        \\"Value\\": \\"TagValue\\"\\n      }\\n    ]\\n  },\\n  \\"TunnelOptionsSpecification\\": {\\n    \\"TunnelOptions\\": [\\n      {\\n        \\"TunnelId\\": \\"tun-opsqc4d97wni27****\\",\\n        \\"CustomerGatewayId\\": \\"cgw-p0wy363lucf1uyae8****\\",\\n        \\"EnableDpd\\": \\"true\\",\\n        \\"EnableNatTraversal\\": \\"true\\",\\n        \\"InternetIp\\": \\"47.21.XX.XX\\",\\n        \\"RemoteCaCertificate\\": \\"-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----\\",\\n        \\"Role\\": \\"master\\",\\n        \\"State\\": \\"active\\",\\n        \\"Status\\": \\"ipsec_sa_established\\",\\n        \\"TunnelBgpConfig\\": {\\n          \\"BgpStatus\\": \\"success\\",\\n          \\"LocalAsn\\": \\"65530\\",\\n          \\"LocalBgpIp\\": \\"169.254.10.1\\",\\n          \\"PeerAsn\\": \\"65531\\",\\n          \\"PeerBgpIp\\": \\"169.254.10.2\\",\\n          \\"TunnelCidr\\": \\"169.254.10.0/30\\"\\n        },\\n        \\"TunnelIkeConfig\\": {\\n          \\"IkeAuthAlg\\": \\"sha1\\",\\n          \\"IkeEncAlg\\": \\"aes\\",\\n          \\"IkeLifetime\\": \\"86400\\",\\n          \\"IkeMode\\": \\"main\\",\\n          \\"IkePfs\\": \\"group2\\",\\n          \\"IkeVersion\\": \\"ikev1\\",\\n          \\"LocalId\\": \\"47.21.XX.XX\\",\\n          \\"Psk\\": \\"123456****\\",\\n          \\"RemoteId\\": \\"47.42.XX.XX\\"\\n        },\\n        \\"TunnelIpsecConfig\\": {\\n          \\"IpsecAuthAlg\\": \\"sha1\\",\\n          \\"IpsecEncAlg\\": \\"aes\\",\\n          \\"IpsecLifetime\\": \\"86400\\",\\n          \\"IpsecPfs\\": \\"group2\\"\\n        },\\n        \\"ZoneNo\\": \\"cn-hangzhou-i\\"\\n      }\\n    ]\\n  },\\n  \\"EnableTunnelsBgp\\": true,\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnConnectionResponse>\\n    <Status>ike_sa_not_established</Status>\\n    <RemoteCaCertificate>-----BEGIN CERTIFICATE----- MIIB7zCCAZW****</RemoteCaCertificate>\\n    <EnableNatTraversal>true</EnableNatTraversal>\\n    <CreateTime>1492753817000</CreateTime>\\n    <EffectImmediately>true</EffectImmediately>\\n    <VpnGatewayId>vpn-bp1q8bgx4xnkm2ogj****</VpnGatewayId>\\n    <State>active</State>\\n    <LocalSubnet>10.0.0.0/8</LocalSubnet>\\n    <RequestId>F2310D45-BCF6-4E2E-9082-B4503844BA4C</RequestId>\\n    <VpnConnectionId>vco-bp1bbi27hojx80nck****</VpnConnectionId>\\n    <RemoteSubnet>192.168.0.0/16</RemoteSubnet>\\n    <CustomerGatewayId>cgw-bp1mvj4g9kogwwcxk****</CustomerGatewayId>\\n    <Name>ipsec1</Name>\\n    <EnableDpd>true</EnableDpd>\\n    <IkeConfig>\\n        <RemoteId>139.34.XX.XX</RemoteId>\\n        <IkeLifetime>86400</IkeLifetime>\\n        <IkeEncAlg>aes</IkeEncAlg>\\n        <LocalId>116.28.XX.XX</LocalId>\\n        <IkeMode>main</IkeMode>\\n        <IkeVersion>ikev1</IkeVersion>\\n        <IkePfs>group2</IkePfs>\\n        <Psk>pgw6dy****</Psk>\\n        <IkeAuthAlg>sha1</IkeAuthAlg>\\n    </IkeConfig>\\n    <IpsecConfig>\\n        <IpsecAuthAlg>sha1</IpsecAuthAlg>\\n        <IpsecLifetime>86400</IpsecLifetime>\\n        <IpsecEncAlg>aes</IpsecEncAlg>\\n        <IpsecPfs>group2</IpsecPfs>\\n    </IpsecConfig>\\n    <VcoHealthCheck>\\n        <Status>failed</Status>\\n        <Dip>10.0.0.1</Dip>\\n        <Interval>3</Interval>\\n        <Retry>3</Retry>\\n        <Sip>192.168.1.1</Sip>\\n        <Enable>true</Enable>\\n    </VcoHealthCheck>\\n    <VpnBgpConfig>\\n        <Status>success</Status>\\n        <PeerBgpIp>169.254.11.1</PeerBgpIp>\\n        <TunnelCidr>169.254.11.0/30</TunnelCidr>\\n        <EnableBgp>true</EnableBgp>\\n        <LocalBgpIp>169.254.11.2</LocalBgpIp>\\n        <PeerAsn>65530</PeerAsn>\\n        <LocalAsn>65531</LocalAsn>\\n        <AuthKey>AuthKey****</AuthKey>\\n    </VpnBgpConfig>\\n</DescribeVpnConnectionResponse>","errorExample":""}]',
      'title' => '查询已创建的IPsec连接的详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVpnConnections' => 
    array (
      'summary' => '调用DescribeVpnConnections接口查询IPsec连接信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关实例ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-bp1q8bgx4xnkx****',
          ),
        ),
        2 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cgw-bp1mvj4g9kogw****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值：**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vco-bp10lz7aejumd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IPsec连接绑定的标签列表。

一次最多支持输入20个标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。一旦输入该值，则不允许为空字符串。

最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '238752DC-0693-49BE-9C85-711D5691D3E5',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'VpnConnections' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VpnConnection' => 
                  array (
                    'description' => 'IPsec连接的配置信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'IPsec连接的配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'IPsec连接的状态。

- **ike_sa_not_established**：第一阶段协商失败。

- **ike_sa_established**：第一阶段协商成功。

- **ipsec_sa_not_established**：第二阶段协商失败。

- **ipsec_sa_established**：第二阶段协商成功。',
                          'type' => 'string',
                          'example' => 'ipsec_sa_established',
                        ),
                        'EnableNatTraversal' => 
                        array (
                          'description' => 'IPsec连接是否已开启NAT穿越功能。

- **true**：开启NAT穿越功能。

   开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'RemoteCaCertificate' => 
                        array (
                          'description' => '对端的CA证书。',
                          'type' => 'string',
                          'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建IPsec连接的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建IPsec连接时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1492753817000',
                        ),
                        'EffectImmediately' => 
                        array (
                          'description' => 'IPsec连接的配置是否立即生效。

- **true**：是，配置变更完成后触发重连。
- **false**：否，有流量时触发重连。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'VpnGatewayId' => 
                        array (
                          'description' => 'VPN网关的实例ID。',
                          'type' => 'string',
                          'example' => 'vpn-bp1q8bgx4xnkm****',
                        ),
                        'LocalSubnet' => 
                        array (
                          'description' => 'IPsec连接阿里云侧的网段。

在多个网段的情况下，网段之间使用半角逗号（,）分隔。',
                          'type' => 'string',
                          'example' => '192.168.0.0/16,172.17.0.0/16',
                        ),
                        'VpnConnectionId' => 
                        array (
                          'description' => 'IPsec连接的ID。',
                          'type' => 'string',
                          'example' => 'vco-bp10lz7aejumd****',
                        ),
                        'RemoteSubnet' => 
                        array (
                          'description' => '本地数据中心侧的网段。

在多个网段的情况下，网段之间使用半角逗号（,）分隔。',
                          'type' => 'string',
                          'example' => '10.0.0.0/8,172.16.0.0/16',
                        ),
                        'CustomerGatewayId' => 
                        array (
                          'description' => 'IPsec连接关联的用户网关的实例ID。',
                          'type' => 'string',
                          'example' => 'cgw-bp1mvj4g9kogw****',
                        ),
                        'Name' => 
                        array (
                          'description' => 'IPsec连接的名称。',
                          'type' => 'string',
                          'example' => 'nametest',
                        ),
                        'EnableDpd' => 
                        array (
                          'description' => 'IPsec连接是否已开启DPD（对等体存活检测）功能。

- **true**：开启DPD功能。

    IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'IkeConfig' => 
                        array (
                          'description' => '第一阶段协商的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RemoteId' => 
                            array (
                              'description' => 'IPsec连接阿里云侧的标识。',
                              'type' => 'string',
                              'example' => '139.17.XX.XX',
                            ),
                            'IkeLifetime' => 
                            array (
                              'description' => 'IKE阶段生存时间。单位：秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '86400',
                            ),
                            'IkeEncAlg' => 
                            array (
                              'description' => 'IKE阶段加密算法。',
                              'type' => 'string',
                              'example' => 'aes',
                            ),
                            'LocalId' => 
                            array (
                              'description' => 'IPsec连接对端本地数据中心侧的标识。',
                              'type' => 'string',
                              'example' => '116.64.XX.XX',
                            ),
                            'IkeMode' => 
                            array (
                              'description' => 'IKE阶段协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。

',
                              'type' => 'string',
                              'example' => 'main',
                            ),
                            'IkeVersion' => 
                            array (
                              'description' => 'IKE协议版本。

- **ikev1**
- **ikev2**

相对于IKEv1版本，IKEv2版本简化了SA的协商过程并且对于多网段的场景提供了更好的支持。',
                              'type' => 'string',
                              'example' => 'ikev1',
                            ),
                            'IkePfs' => 
                            array (
                              'description' => 'IKE阶段DH分组。',
                              'type' => 'string',
                              'example' => 'group2',
                            ),
                            'Psk' => 
                            array (
                              'description' => '预共享密钥。',
                              'type' => 'string',
                              'example' => 'pgw6dy7****',
                            ),
                            'IkeAuthAlg' => 
                            array (
                              'description' => 'IKE阶段认证算法。',
                              'type' => 'string',
                              'example' => 'sha1',
                            ),
                          ),
                        ),
                        'IpsecConfig' => 
                        array (
                          'description' => '第二阶段协商的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IpsecAuthAlg' => 
                            array (
                              'description' => 'IPsec阶段认证算法。',
                              'type' => 'string',
                              'example' => 'sha1',
                            ),
                            'IpsecLifetime' => 
                            array (
                              'description' => 'IPsec阶段生存时间。单位：秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '86400',
                            ),
                            'IpsecEncAlg' => 
                            array (
                              'description' => 'IPsec阶段加密算法。',
                              'type' => 'string',
                              'example' => 'aes',
                            ),
                            'IpsecPfs' => 
                            array (
                              'description' => 'IPsec阶段DH分组。',
                              'type' => 'string',
                              'example' => 'group2',
                            ),
                          ),
                        ),
                        'VcoHealthCheck' => 
                        array (
                          'description' => 'IPsec连接的健康检查配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '健康检查状态。

- **success**：正常。
- **failed**：异常。',
                              'type' => 'string',
                              'example' => 'success',
                            ),
                            'Dip' => 
                            array (
                              'description' => '目的IP地址。',
                              'type' => 'string',
                              'example' => '192.168.0.1',
                            ),
                            'Interval' => 
                            array (
                              'description' => '健康检查的时间间隔。单位：秒。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'Retry' => 
                            array (
                              'description' => '健康检查的重试发包次数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                            'Sip' => 
                            array (
                              'description' => '源IP地址。',
                              'type' => 'string',
                              'example' => '192.168.0.50',
                            ),
                            'Enable' => 
                            array (
                              'description' => '健康检查的开启状态。

- **true**：已开启。

- **false**：未开启。',
                              'type' => 'string',
                              'example' => 'true',
                            ),
                            'Policy' => 
                            array (
                              'description' => '健康检查失败时是否撤销已发布的路由。

- **revoke_route**：撤销路由。
- **reserve_route**：不撤销路由。',
                              'type' => 'string',
                              'example' => 'revoke_route',
                            ),
                          ),
                        ),
                        'VpnBgpConfig' => 
                        array (
                          'description' => 'IPsec连接BGP路由协议的配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => 'BGP路由协议的协商状态。

- **success**：正常。

- **false**：异常。',
                              'type' => 'string',
                              'example' => 'success',
                            ),
                            'PeerBgpIp' => 
                            array (
                              'description' => '对端BGP地址。',
                              'type' => 'string',
                              'example' => '169.254.10.1',
                            ),
                            'TunnelCidr' => 
                            array (
                              'description' => 'IPsec连接BGP网段。该网段是一个在169.254.0.0/16内的子网掩码长度为30的网段。',
                              'type' => 'string',
                              'example' => '169.254.10.0/30',
                            ),
                            'LocalBgpIp' => 
                            array (
                              'description' => '阿里云侧BGP地址。',
                              'type' => 'string',
                              'example' => '169.254.10.2',
                            ),
                            'PeerAsn' => 
                            array (
                              'description' => '对端自治系统号。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '65530',
                            ),
                            'LocalAsn' => 
                            array (
                              'description' => '阿里云侧自治系统号。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '65531',
                            ),
                            'AuthKey' => 
                            array (
                              'description' => 'BGP路由协议的认证密钥。',
                              'type' => 'string',
                              'example' => 'AuthKey****',
                            ),
                          ),
                        ),
                        'AttachType' => 
                        array (
                          'description' => 'IPsec连接绑定的资源类型。

- **CEN**：表示IPsec连接已绑定云企业网实例下的转发路由器实例。
- **NO_ASSOCIATED**：表示IPsec连接未绑定任何资源。
- **VPNGW**：表示IPsec连接绑定了VPN网关实例。',
                          'type' => 'string',
                          'example' => 'CEN',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => 'IPsec连接的网络类型。

- **public**：公网，表示IPsec连接通过公网建立加密通信通道。
- **private**：私网，表示IPsec连接通过私网建立加密通信通道。',
                          'type' => 'string',
                          'example' => 'public',
                        ),
                        'AttachInstanceId' => 
                        array (
                          'description' => '转发路由器实例所属的云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-lxxpbpalc776qz****',
                        ),
                        'Spec' => 
                        array (
                          'description' => 'IPsec连接的带宽规格。单位：**Mbps**。',
                          'type' => 'string',
                          'example' => '1000M',
                        ),
                        'State' => 
                        array (
                          'description' => 'IPsec连接与转发路由器实例的绑定状态。

- **active**：IPsec连接已与VPN网关实例绑定，状态正常。
- **init**：IPsec连接未绑定任何资源，IPsec连接初始化。
- **attaching**：IPsec连接与转发路由器实例绑定中。
- **attached**：IPsec连接已与转发路由器实例绑定。
- **detaching**：IPsec连接与转发路由器实例解绑中。
- **financialLocked**：欠费锁定。
- **provisioning**：资源准备中。
- **updating**：更新中。
- **upgrading**：升级中。
- **deleted**：已删除。',
                          'type' => 'string',
                          'example' => 'attached',
                        ),
                        'TransitRouterId' => 
                        array (
                          'description' => 'IPsec连接绑定的转发路由器实例ID。',
                          'type' => 'string',
                          'example' => 'tr-p0we2edef9qr44a85****',
                        ),
                        'TransitRouterName' => 
                        array (
                          'description' => '转发路由器实例的名称。',
                          'type' => 'string',
                          'example' => 'nametest',
                        ),
                        'CrossAccountAuthorized' => 
                        array (
                          'description' => 'IPsec连接是否绑定了跨账号的转发路由器实例。

- **true**：是。
- **false**：否。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InternetIp' => 
                        array (
                          'description' => 'IPsec连接的网关IP地址。

> 仅IPsec连接绑定转发路由器实例时会返回当前参数。',
                          'type' => 'string',
                          'example' => '10.XX.XX.10',
                        ),
                        'Tag' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => 'IPsec连接绑定的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'TagKey',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'TagValue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'TunnelOptionsSpecification' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TunnelOptions' => 
                            array (
                              'description' => 'IPsec连接的隧道配置信息。

仅查询双隧道模式的IPsec连接会返回**TunnelOptionsSpecification**数组下的参数。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '隧道的配置信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TunnelId' => 
                                  array (
                                    'description' => '隧道ID。',
                                    'type' => 'string',
                                    'example' => 'tun-opsqc4d97wni27****',
                                  ),
                                  'CustomerGatewayId' => 
                                  array (
                                    'description' => '隧道关联的用户网关ID。',
                                    'type' => 'string',
                                    'example' => 'cgw-p0wy363lucf1uyae8****',
                                  ),
                                  'EnableDpd' => 
                                  array (
                                    'description' => '隧道是否已开启DPD（对等体存活检测）功能。
- **false**：未开启。
- **true**：已开启。',
                                    'type' => 'string',
                                    'example' => 'true',
                                  ),
                                  'EnableNatTraversal' => 
                                  array (
                                    'description' => '隧道是否已开启NAT穿越功能。

- **false**：未开启。
- **true**：已开启。',
                                    'type' => 'string',
                                    'example' => 'true',
                                  ),
                                  'InternetIp' => 
                                  array (
                                    'description' => '隧道的IP地址。',
                                    'type' => 'string',
                                    'example' => '47.21.XX.XX',
                                  ),
                                  'RemoteCaCertificate' => 
                                  array (
                                    'description' => '隧道对端的CA证书。

仅VPN网关实例的类型为国密型时才会返回当前参数。',
                                    'type' => 'string',
                                    'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
                                  ),
                                  'Role' => 
                                  array (
                                    'description' => '隧道的角色。

- **master**：表示当前隧道为主隧道。
- **slave**：表示当前隧道为备隧道。',
                                    'type' => 'string',
                                    'example' => 'master',
                                  ),
                                  'State' => 
                                  array (
                                    'description' => '隧道的状态。

- **active**：状态正常。
- **updating**：更新中。
- **deleting**：删除中。',
                                    'type' => 'string',
                                    'example' => 'active',
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => 'IPsec连接的状态。

- **ike_sa_not_established**：第一阶段协商失败。

- **ike_sa_established**：第一阶段协商成功。

- **ipsec_sa_not_established**：第二阶段协商失败。

- **ipsec_sa_established**：第二阶段协商成功。',
                                    'type' => 'string',
                                    'example' => 'ipsec_sa_established',
                                  ),
                                  'TunnelBgpConfig' => 
                                  array (
                                    'description' => '隧道的BGP配置信息。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'BgpStatus' => 
                                      array (
                                        'description' => 'BGP的协商状态。

- **success**：正常。
- **false**：异常。',
                                        'type' => 'string',
                                        'example' => 'success',
                                      ),
                                      'LocalAsn' => 
                                      array (
                                        'description' => '隧道本端（阿里云侧）的自治系统号。',
                                        'type' => 'string',
                                        'example' => '65530',
                                      ),
                                      'LocalBgpIp' => 
                                      array (
                                        'description' => '隧道本端（阿里云侧）的BGP地址。',
                                        'type' => 'string',
                                        'example' => '169.254.10.1',
                                      ),
                                      'PeerAsn' => 
                                      array (
                                        'description' => '隧道对端的自治系统号。',
                                        'type' => 'string',
                                        'example' => '65531',
                                      ),
                                      'PeerBgpIp' => 
                                      array (
                                        'description' => '隧道对端的BGP地址。',
                                        'type' => 'string',
                                        'example' => '169.254.10.2',
                                      ),
                                      'TunnelCidr' => 
                                      array (
                                        'description' => '隧道的BGP网段。',
                                        'type' => 'string',
                                        'example' => '169.254.10.0/30',
                                      ),
                                    ),
                                  ),
                                  'TunnelIkeConfig' => 
                                  array (
                                    'description' => '第一阶段协商的配置。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'IkeAuthAlg' => 
                                      array (
                                        'description' => 'IKE阶段认证算法。',
                                        'type' => 'string',
                                        'example' => 'sha1',
                                      ),
                                      'IkeEncAlg' => 
                                      array (
                                        'description' => 'IKE阶段加密算法。',
                                        'type' => 'string',
                                        'example' => 'aes',
                                      ),
                                      'IkeLifetime' => 
                                      array (
                                        'description' => 'IKE阶段生存时间。单位：秒。',
                                        'type' => 'string',
                                        'example' => '86400',
                                      ),
                                      'IkeMode' => 
                                      array (
                                        'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                                        'type' => 'string',
                                        'example' => 'main',
                                      ),
                                      'IkePfs' => 
                                      array (
                                        'description' => 'IKE阶段DH分组。',
                                        'type' => 'string',
                                        'example' => 'group2',
                                      ),
                                      'IkeVersion' => 
                                      array (
                                        'description' => 'IKE协议版本。',
                                        'type' => 'string',
                                        'example' => 'ikev1',
                                      ),
                                      'LocalId' => 
                                      array (
                                        'description' => '隧道本端（阿里云侧）的标识。',
                                        'type' => 'string',
                                        'example' => '47.21.XX.XX',
                                      ),
                                      'Psk' => 
                                      array (
                                        'description' => '预共享密钥。',
                                        'type' => 'string',
                                        'example' => '123456****',
                                      ),
                                      'RemoteId' => 
                                      array (
                                        'description' => '隧道对端的标识。',
                                        'type' => 'string',
                                        'example' => '47.42.XX.XX',
                                      ),
                                    ),
                                  ),
                                  'TunnelIpsecConfig' => 
                                  array (
                                    'description' => '第二阶段协商的配置。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'IpsecAuthAlg' => 
                                      array (
                                        'description' => 'IPsec阶段认证算法。',
                                        'type' => 'string',
                                        'example' => 'sha1',
                                      ),
                                      'IpsecEncAlg' => 
                                      array (
                                        'description' => 'IPsec阶段加密算法。',
                                        'type' => 'string',
                                        'example' => 'aes',
                                      ),
                                      'IpsecLifetime' => 
                                      array (
                                        'description' => 'IPsec阶段生存时间。单位：秒。',
                                        'type' => 'string',
                                        'example' => '86400',
                                      ),
                                      'IpsecPfs' => 
                                      array (
                                        'description' => 'IPsec阶段DH分组。',
                                        'type' => 'string',
                                        'example' => 'group2',
                                      ),
                                    ),
                                  ),
                                  'ZoneNo' => 
                                  array (
                                    'description' => '隧道部署的可用区。',
                                    'type' => 'string',
                                    'example' => 'ap-southeast-5a',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EnableTunnelsBgp' => 
                        array (
                          'description' => '隧道BGP的开启状态。

- **true**：已开启。
- **false**：未开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'IPsec连接所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                          'type' => 'string',
                          'example' => 'rg-acfmzs372yg****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"238752DC-0693-49BE-9C85-711D5691D3E5\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"VpnConnections\\": {\\n    \\"VpnConnection\\": [\\n      {\\n        \\"Status\\": \\"ipsec_sa_established\\",\\n        \\"EnableNatTraversal\\": true,\\n        \\"RemoteCaCertificate\\": \\"-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----\\",\\n        \\"CreateTime\\": 1492753817000,\\n        \\"EffectImmediately\\": true,\\n        \\"VpnGatewayId\\": \\"vpn-bp1q8bgx4xnkm****\\",\\n        \\"LocalSubnet\\": \\"192.168.0.0/16,172.17.0.0/16\\",\\n        \\"VpnConnectionId\\": \\"vco-bp10lz7aejumd****\\",\\n        \\"RemoteSubnet\\": \\"10.0.0.0/8,172.16.0.0/16\\",\\n        \\"CustomerGatewayId\\": \\"cgw-bp1mvj4g9kogw****\\",\\n        \\"Name\\": \\"nametest\\",\\n        \\"EnableDpd\\": true,\\n        \\"IkeConfig\\": {\\n          \\"RemoteId\\": \\"139.17.XX.XX\\",\\n          \\"IkeLifetime\\": 86400,\\n          \\"IkeEncAlg\\": \\"aes\\",\\n          \\"LocalId\\": \\"116.64.XX.XX\\",\\n          \\"IkeMode\\": \\"main\\",\\n          \\"IkeVersion\\": \\"ikev1\\",\\n          \\"IkePfs\\": \\"group2\\",\\n          \\"Psk\\": \\"pgw6dy7****\\",\\n          \\"IkeAuthAlg\\": \\"sha1\\"\\n        },\\n        \\"IpsecConfig\\": {\\n          \\"IpsecAuthAlg\\": \\"sha1\\",\\n          \\"IpsecLifetime\\": 86400,\\n          \\"IpsecEncAlg\\": \\"aes\\",\\n          \\"IpsecPfs\\": \\"group2\\"\\n        },\\n        \\"VcoHealthCheck\\": {\\n          \\"Status\\": \\"success\\",\\n          \\"Dip\\": \\"192.168.0.1\\",\\n          \\"Interval\\": 2,\\n          \\"Retry\\": 3,\\n          \\"Sip\\": \\"192.168.0.50\\",\\n          \\"Enable\\": \\"true\\",\\n          \\"Policy\\": \\"revoke_route\\"\\n        },\\n        \\"VpnBgpConfig\\": {\\n          \\"Status\\": \\"success\\",\\n          \\"PeerBgpIp\\": \\"169.254.10.1\\",\\n          \\"TunnelCidr\\": \\"169.254.10.0/30\\",\\n          \\"LocalBgpIp\\": \\"169.254.10.2\\",\\n          \\"PeerAsn\\": 65530,\\n          \\"LocalAsn\\": 65531,\\n          \\"AuthKey\\": \\"AuthKey****\\"\\n        },\\n        \\"AttachType\\": \\"CEN\\",\\n        \\"NetworkType\\": \\"public\\",\\n        \\"AttachInstanceId\\": \\"cen-lxxpbpalc776qz****\\",\\n        \\"Spec\\": \\"1000M\\",\\n        \\"State\\": \\"attached\\",\\n        \\"TransitRouterId\\": \\"tr-p0we2edef9qr44a85****\\",\\n        \\"TransitRouterName\\": \\"nametest\\",\\n        \\"CrossAccountAuthorized\\": false,\\n        \\"InternetIp\\": \\"10.XX.XX.10\\",\\n        \\"Tag\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"TagKey\\",\\n              \\"Value\\": \\"TagValue\\"\\n            }\\n          ]\\n        },\\n        \\"TunnelOptionsSpecification\\": {\\n          \\"TunnelOptions\\": [\\n            {\\n              \\"TunnelId\\": \\"tun-opsqc4d97wni27****\\",\\n              \\"CustomerGatewayId\\": \\"cgw-p0wy363lucf1uyae8****\\",\\n              \\"EnableDpd\\": \\"true\\",\\n              \\"EnableNatTraversal\\": \\"true\\",\\n              \\"InternetIp\\": \\"47.21.XX.XX\\",\\n              \\"RemoteCaCertificate\\": \\"-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----\\",\\n              \\"Role\\": \\"master\\",\\n              \\"State\\": \\"active\\",\\n              \\"Status\\": \\"ipsec_sa_established\\",\\n              \\"TunnelBgpConfig\\": {\\n                \\"BgpStatus\\": \\"success\\",\\n                \\"LocalAsn\\": \\"65530\\",\\n                \\"LocalBgpIp\\": \\"169.254.10.1\\",\\n                \\"PeerAsn\\": \\"65531\\",\\n                \\"PeerBgpIp\\": \\"169.254.10.2\\",\\n                \\"TunnelCidr\\": \\"169.254.10.0/30\\"\\n              },\\n              \\"TunnelIkeConfig\\": {\\n                \\"IkeAuthAlg\\": \\"sha1\\",\\n                \\"IkeEncAlg\\": \\"aes\\",\\n                \\"IkeLifetime\\": \\"86400\\",\\n                \\"IkeMode\\": \\"main\\",\\n                \\"IkePfs\\": \\"group2\\",\\n                \\"IkeVersion\\": \\"ikev1\\",\\n                \\"LocalId\\": \\"47.21.XX.XX\\",\\n                \\"Psk\\": \\"123456****\\",\\n                \\"RemoteId\\": \\"47.42.XX.XX\\"\\n              },\\n              \\"TunnelIpsecConfig\\": {\\n                \\"IpsecAuthAlg\\": \\"sha1\\",\\n                \\"IpsecEncAlg\\": \\"aes\\",\\n                \\"IpsecLifetime\\": \\"86400\\",\\n                \\"IpsecPfs\\": \\"group2\\"\\n              },\\n              \\"ZoneNo\\": \\"ap-southeast-5a\\"\\n            }\\n          ]\\n        },\\n        \\"EnableTunnelsBgp\\": true,\\n        \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnConnectionsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>238752DC-0693-49BE-9C85-711D5691D3E5</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <VpnConnections>\\n        <Status>ipsec_sa_established</Status>\\n        <EnableNatTraversal>true</EnableNatTraversal>\\n        <RemoteCaCertificate>-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE----- </RemoteCaCertificate>\\n        <CreateTime>1492753817000</CreateTime>\\n        <EffectImmediately>true</EffectImmediately>\\n        <VpnGatewayId>vpn-bp1q8bgx4xnkm****</VpnGatewayId>\\n        <State>active</State>\\n        <LocalSubnet>192.168.0.0/16,172.17.0.0/16</LocalSubnet>\\n        <VpnConnectionId>vco-bp10lz7aejumd****</VpnConnectionId>\\n        <RemoteSubnet>10.0.0.0/8,172.16.0.0/16</RemoteSubnet>\\n        <CustomerGatewayId>cgw-bp1mvj4g9kogw****</CustomerGatewayId>\\n        <Name>nametest</Name>\\n        <EnableDpd>true</EnableDpd>\\n        <IkeConfig>\\n            <RemoteId>139.17.XX.XX</RemoteId>\\n            <IkeLifetime>86400</IkeLifetime>\\n            <IkeEncAlg>aes</IkeEncAlg>\\n            <LocalId>116.64.XX.XX</LocalId>\\n            <IkeMode>main</IkeMode>\\n            <IkeVersion>ikev1</IkeVersion>\\n            <IkePfs>group2</IkePfs>\\n            <Psk>pgw6dy7****</Psk>\\n            <IkeAuthAlg>sha1</IkeAuthAlg>\\n        </IkeConfig>\\n        <IpsecConfig>\\n            <IpsecAuthAlg>sha1</IpsecAuthAlg>\\n            <IpsecLifetime>86400</IpsecLifetime>\\n            <IpsecEncAlg>aes</IpsecEncAlg>\\n            <IpsecPfs>group2</IpsecPfs>\\n        </IpsecConfig>\\n        <VcoHealthCheck>\\n            <Status>success</Status>\\n            <Dip>192.168.0.1</Dip>\\n            <Interval>2</Interval>\\n            <Retry>3</Retry>\\n            <Sip>192.168.0.50</Sip>\\n            <Enable>true</Enable>\\n        </VcoHealthCheck>\\n        <VpnBgpConfig>\\n            <Status>success</Status>\\n            <PeerBgpIp>169.254.10.1</PeerBgpIp>\\n            <TunnelCidr>169.254.10.0/30</TunnelCidr>\\n            <LocalBgpIp>169.254.10.2</LocalBgpIp>\\n            <PeerAsn>65530</PeerAsn>\\n            <LocalAsn>65531</LocalAsn>\\n            <AuthKey>AuthKey****</AuthKey>\\n        </VpnBgpConfig>\\n        <Tag>\\n            <Key>TagKey</Key>\\n            <Value>TagValue</Value>\\n        </Tag>\\n    </VpnConnections>\\n</DescribeVpnConnectionsResponse>","errorExample":""}]',
      'title' => '查询已创建的IPsec连接',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DownloadVpnConnectionConfig' => 
    array (
      'summary' => '调用DownloadVpnConnectionConfig接口获取IPsec连接的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPsec连接的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp1bbi27hojx80nck****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C68048B-0F70-40DA-B8AE-1B79B5CF62E3',
              ),
              'VpnConnectionConfig' => 
              array (
                'description' => 'IPsec连接对端网关设备的配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Remote' => 
                  array (
                    'description' => 'VPN网关的标识。',
                    'type' => 'string',
                    'example' => '116.62.XX.XX',
                  ),
                  'Local' => 
                  array (
                    'description' => '用户网关的标识。 ',
                    'type' => 'string',
                    'example' => '139.196.XX.XX',
                  ),
                  'RemoteSubnet' => 
                  array (
                    'description' => 'VPC侧的网段。  ',
                    'type' => 'string',
                    'example' => '192.168.0.0/16',
                  ),
                  'LocalSubnet' => 
                  array (
                    'description' => '本地IDC侧的网段。 ',
                    'type' => 'string',
                    'example' => '10.0.0.0/8',
                  ),
                  'IkeConfig' => 
                  array (
                    'description' => '第一阶段协商的配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RemoteId' => 
                      array (
                        'description' => 'VPN网关的标识。支持FQDN和IP格式，默认为VPN网关的IP地址。',
                        'type' => 'string',
                        'example' => '116.62.XX.XX',
                      ),
                      'IkeLifetime' => 
                      array (
                        'description' => 'IKE阶段生存时间。单位：秒。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '86400',
                      ),
                      'IkeEncAlg' => 
                      array (
                        'description' => 'IKE阶段加密算法。',
                        'type' => 'string',
                        'example' => 'aes',
                      ),
                      'LocalId' => 
                      array (
                        'description' => '用户网关的标识。支持FQDN和IP格式，默认为用户网关的IP地址。',
                        'type' => 'string',
                        'example' => '139.196.XX.XX',
                      ),
                      'IkeMode' => 
                      array (
                        'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                        'type' => 'string',
                        'example' => 'main',
                      ),
                      'IkeVersion' => 
                      array (
                        'description' => 'IKE协议的版本。',
                        'type' => 'string',
                        'example' => 'ikev1',
                      ),
                      'IkePfs' => 
                      array (
                        'description' => 'IKE阶段DH分组。',
                        'type' => 'string',
                        'example' => 'group2',
                      ),
                      'Psk' => 
                      array (
                        'description' => '预共享密钥。',
                        'type' => 'string',
                        'example' => 'pgw6dy7d1i8i****',
                      ),
                      'IkeAuthAlg' => 
                      array (
                        'description' => 'IKE阶段认证算法。',
                        'type' => 'string',
                        'example' => 'sha1',
                      ),
                    ),
                  ),
                  'IpsecConfig' => 
                  array (
                    'description' => '第二阶段协商的配置信息。 ',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'IpsecAuthAlg' => 
                      array (
                        'description' => 'IPsec阶段认证算法。',
                        'type' => 'string',
                        'example' => 'sha1',
                      ),
                      'IpsecEncAlg' => 
                      array (
                        'description' => 'IPsec阶段加密算法。',
                        'type' => 'string',
                        'example' => 'aes',
                      ),
                      'IpsecLifetime' => 
                      array (
                        'description' => 'IPsec阶段生存时间。单位：秒。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '86400',
                      ),
                      'IpsecPfs' => 
                      array (
                        'description' => 'IPsec阶段DH分组。',
                        'type' => 'string',
                        'example' => 'group2',
                      ),
                    ),
                  ),
                  'TunnelsConfig' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TunnelConfig' => 
                      array (
                        'description' => 'IPsec连接对端网关设备的隧道配置信息。

仅双隧道模式的IPsec连接会返回**TunnelsConfig**数组下的参数。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '隧道的配置信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TunnelId' => 
                            array (
                              'description' => '隧道ID。',
                              'type' => 'string',
                              'example' => 'tun-opsqc4d97wni27****',
                            ),
                            'Local' => 
                            array (
                              'description' => '本地IDC侧隧道的标识。',
                              'type' => 'string',
                              'example' => '47.21.XX.XX',
                            ),
                            'Remote' => 
                            array (
                              'description' => '阿里云侧隧道的标识。',
                              'type' => 'string',
                              'example' => '47.24.XX.XX',
                            ),
                            'IkeConfig' => 
                            array (
                              'description' => '第一阶段协商的配置信息。 ',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Psk' => 
                                array (
                                  'description' => '预共享密钥。',
                                  'type' => 'string',
                                  'example' => 'pgw6dy7d1i8i****',
                                ),
                                'IkeVersion' => 
                                array (
                                  'description' => 'IKE协议的版本。',
                                  'type' => 'string',
                                  'example' => 'ikev1',
                                ),
                                'IkeMode' => 
                                array (
                                  'description' => 'IKE协商模式。

- **main**：主模式，协商过程安全性高。
- **aggressive**：野蛮模式，协商快速且协商成功率高。',
                                  'type' => 'string',
                                  'example' => 'main',
                                ),
                                'IkeEncAlg' => 
                                array (
                                  'description' => 'IKE阶段加密算法。',
                                  'type' => 'string',
                                  'example' => 'aes',
                                ),
                                'IkeAuthAlg' => 
                                array (
                                  'description' => 'IKE阶段认证算法。',
                                  'type' => 'string',
                                  'example' => 'sha1',
                                ),
                                'IkePfs' => 
                                array (
                                  'description' => 'IKE阶段DH分组。',
                                  'type' => 'string',
                                  'example' => 'group2',
                                ),
                                'IkeLifetime' => 
                                array (
                                  'description' => 'IKE阶段生存时间。单位：秒。',
                                  'type' => 'integer',
                                  'format' => 'int64',
                                  'example' => '86400',
                                ),
                                'LocalId' => 
                                array (
                                  'description' => '本地IDC侧隧道的标识。',
                                  'type' => 'string',
                                  'example' => '47.21.XX.XX',
                                ),
                                'RemoteId' => 
                                array (
                                  'description' => '阿里云侧隧道的标识。',
                                  'type' => 'string',
                                  'example' => '47.24.XX.XX',
                                ),
                              ),
                            ),
                            'IpsecConfig' => 
                            array (
                              'description' => '第二阶段协商的配置信息。 ',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'IpsecAuthAlg' => 
                                array (
                                  'description' => 'IPsec阶段认证算法。',
                                  'type' => 'string',
                                  'example' => 'sha1',
                                ),
                                'IpsecEncAlg' => 
                                array (
                                  'description' => 'IPsec阶段加密算法。',
                                  'type' => 'string',
                                  'example' => 'aes',
                                ),
                                'IpsecPfs' => 
                                array (
                                  'description' => 'IPsec阶段DH分组。',
                                  'type' => 'string',
                                  'example' => 'group2',
                                ),
                                'IpsecLifetime' => 
                                array (
                                  'description' => 'IPsec阶段生存时间。单位：秒。',
                                  'type' => 'integer',
                                  'format' => 'int64',
                                  'example' => '86400',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C68048B-0F70-40DA-B8AE-1B79B5CF62E3\\",\\n  \\"VpnConnectionConfig\\": {\\n    \\"Remote\\": \\"116.62.XX.XX\\",\\n    \\"Local\\": \\"139.196.XX.XX\\",\\n    \\"RemoteSubnet\\": \\"192.168.0.0/16\\",\\n    \\"LocalSubnet\\": \\"10.0.0.0/8\\",\\n    \\"IkeConfig\\": {\\n      \\"RemoteId\\": \\"116.62.XX.XX\\",\\n      \\"IkeLifetime\\": 86400,\\n      \\"IkeEncAlg\\": \\"aes\\",\\n      \\"LocalId\\": \\"139.196.XX.XX\\",\\n      \\"IkeMode\\": \\"main\\",\\n      \\"IkeVersion\\": \\"ikev1\\",\\n      \\"IkePfs\\": \\"group2\\",\\n      \\"Psk\\": \\"pgw6dy7d1i8i****\\",\\n      \\"IkeAuthAlg\\": \\"sha1\\"\\n    },\\n    \\"IpsecConfig\\": {\\n      \\"IpsecAuthAlg\\": \\"sha1\\",\\n      \\"IpsecEncAlg\\": \\"aes\\",\\n      \\"IpsecLifetime\\": 86400,\\n      \\"IpsecPfs\\": \\"group2\\"\\n    },\\n    \\"TunnelsConfig\\": {\\n      \\"TunnelConfig\\": [\\n        {\\n          \\"TunnelId\\": \\"tun-opsqc4d97wni27****\\",\\n          \\"Local\\": \\"47.21.XX.XX\\",\\n          \\"Remote\\": \\"47.24.XX.XX\\",\\n          \\"IkeConfig\\": {\\n            \\"Psk\\": \\"pgw6dy7d1i8i****\\",\\n            \\"IkeVersion\\": \\"ikev1\\",\\n            \\"IkeMode\\": \\"main\\",\\n            \\"IkeEncAlg\\": \\"aes\\",\\n            \\"IkeAuthAlg\\": \\"sha1\\",\\n            \\"IkePfs\\": \\"group2\\",\\n            \\"IkeLifetime\\": 86400,\\n            \\"LocalId\\": \\"47.21.XX.XX\\",\\n            \\"RemoteId\\": \\"47.24.XX.XX\\"\\n          },\\n          \\"IpsecConfig\\": {\\n            \\"IpsecAuthAlg\\": \\"sha1\\",\\n            \\"IpsecEncAlg\\": \\"aes\\",\\n            \\"IpsecPfs\\": \\"group2\\",\\n            \\"IpsecLifetime\\": 86400\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DownloadVpnConnectionConfigResponse>\\n    <RequestId>0C68048B-0F70-40DA-B8AE-1B79B5CF62E3</RequestId>\\n    <VpnConnectionConfig>\\n        <Remote>116.62.XX.XX</Remote>\\n        <Local>139.196.XX.XX</Local>\\n        <RemoteSubnet>192.168.0.0/16</RemoteSubnet>\\n        <LocalSubnet>10.0.0.0/8</LocalSubnet>\\n        <IkeConfig>\\n            <RemoteId>139.196.XX.XX</RemoteId>\\n            <IkeLifetime>86400</IkeLifetime>\\n            <IkeEncAlg>aes</IkeEncAlg>\\n            <LocalId>116.62.XX.XX</LocalId>\\n            <IkeMode>main</IkeMode>\\n            <IkeVersion>ikev1</IkeVersion>\\n            <IkePfs>group2</IkePfs>\\n            <Psk>pgw6dy7d1i8i****</Psk>\\n            <IkeAuthAlg>sha1</IkeAuthAlg>\\n        </IkeConfig>\\n        <IpsecConfig>\\n            <IpsecAuthAlg>sha1</IpsecAuthAlg>\\n            <IpsecLifetime>86400</IpsecLifetime>\\n            <IpsecEncAlg>aes</IpsecEncAlg>\\n            <IpsecPfs>group2</IpsecPfs>\\n        </IpsecConfig>\\n    </VpnConnectionConfig>\\n</DownloadVpnConnectionConfigResponse>","errorExample":""}]',
      'title' => '获取IPsec连接的配置信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVpnConnectionLogs' => 
    array (
      'summary' => '调用DescribeVpnConnections接口查询IPsec连接的日志信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-m5evqnds4y459flt3****',
          ),
        ),
        2 => 
        array (
          'name' => 'From',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志起始时间，仅支持传入UNIX秒级时间戳，例如1671003744，1671003744表示的时间为2022年12月14日15:42:24。

> 如果指定**From**，则必须指定**To**或**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1671003744',
          ),
        ),
        3 => 
        array (
          'name' => 'To',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志结束时间，仅支持传入UNIX秒级时间戳，例如1671004344，1671004344表示的时间为2022年12月14日15:52:24。

> 如果指定**To**，则必须指定**From**或**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1671004344',
          ),
        ),
        4 => 
        array (
          'name' => 'MinutePeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志周期。取值范围：**1**~**10**。单位：分钟。

> 如果不指定**From**和**To**，则必须指定**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'TunnelId',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => 'IPsec连接的隧道ID。

仅双隧道模式的IPsec连接支持配置该项。',
            'type' => 'string',
            'required' => false,
            'example' => 'tun-opsqc4d97wni27****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CF161502-4959-5C3B-B499-09B87BA931D9',
              ),
              'Count' => 
              array (
                'description' => '当前页下日志的条目数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'IsCompleted' => 
              array (
                'description' => '查询的日志是否精确。取值：

- **true**：精确。
- **false**：不精确。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Logs' => 
                  array (
                    'description' => '日志信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '字符串数组。

数组中的每一项都为一条日志。',
                      'type' => 'string',
                      'example' => '"Logs": [ "2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: isakmp_inf.c:1514:isakmp****", "2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2832:oak****", "2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2833:oak****" ]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QueryVpnConnectionLog.NotFound',
            'errorMessage' => 'the connection log of the vpn connection is not found.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"CF161502-4959-5C3B-B499-09B87BA931D9\\",\\n  \\"Count\\": 10,\\n  \\"IsCompleted\\": true,\\n  \\"Data\\": {\\n    \\"Logs\\": [\\n      \\"\\\\\\"Logs\\\\\\": [ \\\\\\"2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: isakmp_inf.c:1514:isakmp****\\\\\\", \\\\\\"2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2832:oak****\\\\\\", \\\\\\"2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2833:oak****\\\\\\" ]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnConnectionLogsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>CF161502-4959-5C3B-B499-09B87BA931D9</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <IsCompleted>true</IsCompleted>\\n    <Data>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: isakmp_inf.c:1514:isakmp_info_send_r_u(): DPD monitoring....</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2832:oakley_newiv2(): compute IV for phase2</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2833:oakley_newiv2(): phase1 last IV:</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: algorithm.c:381:alg_oakley_hashdef(): hash(sha1)</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: algorithm.c:524:alg_oakley_encdef(): encryption(aes)</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:2867:oakley_newiv2(): phase2 IV computed:</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:657:oakley_compute_hash1(): HASH with:</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: algorithm.c:464:alg_oakley_hmacdef(): hmac(hmac_sha1)</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:667:oakley_compute_hash1(): HASH computed:</Logs>\\n        <Logs>2022-12-14 15:52:28 vco-m5evqnds4y459flt3**** [DEBUG]: oakley.c:3035:oakley_do_encrypt(): begin encryption.</Logs>\\n    </Data>\\n    <Count>10</Count>\\n</DescribeVpnConnectionLogsResponse>","errorExample":""}]',
      'title' => '查询IPsec连接的日志',
    ),
    'DiagnoseVpnConnections' => 
    array (
      'summary' => '调用DiagnoseVpnConnections接口诊断IPsec连接。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => 'IPsec连接所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-bp10hz6b0mbp39flt****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnConnectionIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IPsec连接ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IPsec连接ID。

> 如果IPsec连接为单隧道模式，该参数必填。',
              'type' => 'string',
              'required' => false,
              'example' => 'vco-bp1spxu8hlcvpd7ry****',
            ),
            'required' => false,
            'maxItems' => 51,
          ),
        ),
        3 => 
        array (
          'name' => 'TunnelIds',
          'in' => 'query',
          'allowEmptyValue' => true,
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '隧道ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '隧道ID。

> 如果IPsec连接为双隧道模式，该参数必填。',
              'type' => 'string',
              'required' => false,
              'example' => 'tun-64n1sr9dig64k6****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B8094E1E-935B-1397-96A8-4F87A5D1BF29',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VpnConnections' => 
              array (
                'description' => 'IPsec-VPN连接的诊断信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IPsec-VPN连接的诊断信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MismatchRemoteParam' => 
                    array (
                      'description' => '在IPsec连接和对端网关设备配置的参数值不匹配的情况下，本参数表示对端网关设备配置的参数值。',
                      'type' => 'string',
                      'example' => 'SHA',
                    ),
                    'MismatchLocalParam' => 
                    array (
                      'description' => '在IPsec连接和对端网关设备配置的参数值不匹配的情况下，本参数表示IPsec连接配置的参数值。',
                      'type' => 'string',
                      'example' => 'SHA256',
                    ),
                    'VpnConnectionId' => 
                    array (
                      'description' => 'IPsec连接ID。',
                      'type' => 'string',
                      'example' => 'vco-bp1spxu8hlcvpd7ry****',
                    ),
                    'SourceLog' => 
                    array (
                      'description' => '当前错误相关的日志信息。',
                      'type' => 'string',
                      'example' => '2023-01-13 11:39:21 vco-bp1spxu8hlcvpd7ry**** [PROTO_ERR]: ikev1.c:1433:isakmp_ph1resend(): phase1 negotiation failed due to time up. [{remote id:4}{ph1: 172.16.0.88[500] <=> 192.168.0.206[500], 172.16.0.88 <=> 192.168.0.206}]',
                    ),
                    'FailedReasonCode' => 
                    array (
                      'description' => '错误码。',
                      'type' => 'string',
                      'example' => 'Phase1NegotiationTimeout',
                    ),
                    'FailedTime' => 
                    array (
                      'description' => 'IPsec-VPN连接发生当前错误的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至IPsec-VPN连接发生当前错误时的总时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1673581161000',
                    ),
                    'FailedReason' => 
                    array (
                      'description' => '错误原因。',
                      'type' => 'string',
                      'example' => 'Phase1 negotiation timeout',
                    ),
                    'Severity' => 
                    array (
                      'description' => '当前错误等级。

- **Critical**：严重，请尽快排查处理。
- **Warn**：警告，建议尽快排查处理。
- **Normal**：正常。',
                      'type' => 'string',
                      'example' => 'Warn',
                    ),
                    'TunnelId' => 
                    array (
                      'description' => '隧道ID。',
                      'type' => 'string',
                      'example' => 'tun-64n1sr9dig64k6****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The parameter is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B8094E1E-935B-1397-96A8-4F87A5D1BF29\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"VpnConnections\\": [\\n    {\\n      \\"MismatchRemoteParam\\": \\"SHA\\",\\n      \\"MismatchLocalParam\\": \\"SHA256\\",\\n      \\"VpnConnectionId\\": \\"vco-bp1spxu8hlcvpd7ry****\\",\\n      \\"SourceLog\\": \\"2023-01-13 11:39:21 vco-bp1spxu8hlcvpd7ry**** [PROTO_ERR]: ikev1.c:1433:isakmp_ph1resend(): phase1 negotiation failed due to time up. [{remote id:4}{ph1: 172.16.0.88[500] <=> 192.168.0.206[500], 172.16.0.88 <=> 192.168.0.206}]\\",\\n      \\"FailedReasonCode\\": \\"Phase1NegotiationTimeout\\",\\n      \\"FailedTime\\": 1673581161000,\\n      \\"FailedReason\\": \\"Phase1 negotiation timeout\\",\\n      \\"Severity\\": \\"Warn\\",\\n      \\"TunnelId\\": \\"tun-64n1sr9dig64k6****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DiagnoseVpnConnectionsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>B8094E1E-935B-1397-96A8-4F87A5D1BF29</RequestId>\\n    <PageSize>50</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <VpnConnections>\\n        <MismatchRemoteParam/>\\n        <FailedReasonCode>Phase1NegotiationTimeout</FailedReasonCode>\\n        <FailedReason>Phase1 negotiation timeout</FailedReason>\\n        <Severity>Warn</Severity>\\n        <VpnConnectionId>vco-bp1spxu8hlcvpd7ry****</VpnConnectionId>\\n        <FailedTime>1673581161000</FailedTime>\\n        <MismatchLocalParam/>\\n        <SourceLog>2023-01-13 11:39:21 vco-bp1spxu8hlcvpd7ry**** [PROTO_ERR]: ikev1.c:1433:isakmp_ph1resend(): phase1 negotiation failed due to time up. [{remote id:4}{ph1: 172.16.0.88[500] &lt;=&gt; 192.168.0.206[500], 172.16.0.88 &lt;=&gt; 192.168.0.206}]</SourceLog>\\n    </VpnConnections>\\n</DiagnoseVpnConnectionsResponse>","errorExample":""}]',
      'title' => '诊断IPsec连接',
      'description' => '- 如果IPsec连接为单隧道模式，调用**DiagnoseVpnConnections**接口时，请求参数`VpnConnectionIds`必填。
- 如果IPsec连接为双隧道模式，调用**DiagnoseVpnConnections**接口时，请求参数`TunnelIds`必填。
- 调用**DiagnoseVpnConnections**接口后，如果当前IPsec-VPN连接存在问题，接口会返回对应的错误码（即返回参数**FailedReasonCode**）和日志信息（即返回参数**SourceLog**）。您可以根据错误码和日志信息自主排查问题。排查方法，请参见[IPsec-VPN连接常见错误及排查方法汇总](~~477862~~)。',
    ),
    'CreateVpnRouteEntry' => 
    array (
      'summary' => '调用CreateVpnRouteEntry接口为VPN网关实例创建目的路由，创建目的路由后，VPN网关实例将基于流量的目的IP地址匹配目的路由，然后根据流量匹配到的目的路由转发流量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3828dae****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        5 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的权重值。取值：

- **100**：表示目的路由的优先级较高。
- **0**：表示目的路由的优先级较低。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'PublishVpc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否发布目的路由到VPC的路由表中。取值：

- **true**：发布目的路由到VPC的路由表。
- **false**：不发布目的路由到VPC的路由表。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的描述信息。

描述信息长度为**1**～**100**个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'mytest',
          ),
        ),
        8 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（IPsec隧道协议）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextHop' => 
              array (
                'description' => '目的路由的下一跳。',
                'type' => 'string',
                'example' => 'vco-bp15oes1py4i66rmd****',
              ),
              'Weight' => 
              array (
                'description' => '目的路由的权重值。取值：

- **100**：表示目的路由的优先级较高。
- **0**：表示目的路由的优先级较低。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RouteDest' => 
              array (
                'description' => '目的路由的目标网段。',
                'type' => 'string',
                'example' => '10.0.0.0/24',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
              'Description' => 
              array (
                'description' => '目的路由的描述信息。',
                'type' => 'string',
                'example' => 'mytest',
              ),
              'State' => 
              array (
                'description' => '目的路由的发布状态。

- **published**：已发布目的路由到VPC的路由表。

- **normal**：未发布目的路由到VPC的路由表。',
                'type' => 'string',
                'example' => 'published',
              ),
              'CreateTime' => 
              array (
                'description' => '创建目的路由的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建目的路由时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492747187000',
              ),
              'OverlayMode' => 
              array (
                'description' => '隧道协议。仅取值：**Ipsec**（IPsec隧道协议）。',
                'type' => 'string',
                'example' => 'Ipsec',
              ),
              'VpnInstanceId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-bp1a3kqjiiq9legfx****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.ConflictSSL',
            'errorMessage' => 'The specified route entry has conflict with SSL client.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnRouteEntry.InvalidWeight',
            'errorMessage' => 'Invalid route entry weight value.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidNextHop.NotFound',
            'errorMessage' => 'The specified NextHop does not exist.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.RouteDest',
            'errorMessage' => 'The specified RouteDest is invalid',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflict',
            'errorMessage' => 'Operation failed because there is already a route in VPC route table to another VPN on the same network block.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.InvalidCidrBlock',
            'errorMessage' => 'Operation failed because the specified network block is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'The number of route entries to the VPN gateway in the VPC routing table has reached the quota limit.',
          ),
          13 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          14 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          16 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextHop\\": \\"vco-bp15oes1py4i66rmd****\\",\\n  \\"Weight\\": 0,\\n  \\"RouteDest\\": \\"10.0.0.0/24\\",\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\",\\n  \\"Description\\": \\"mytest\\",\\n  \\"State\\": \\"published\\",\\n  \\"CreateTime\\": 1492747187000,\\n  \\"OverlayMode\\": \\"Ipsec\\",\\n  \\"VpnInstanceId\\": \\"vpn-bp1a3kqjiiq9legfx****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVpnRouteEntryResponse>\\n    <NextHop>vco-bp15oes1py4i66rmd****</NextHop>\\n    <Weight>0</Weight>\\n    <RouteDest>10.0.0.0/24</RouteDest>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n    <Description>mytest</Description>\\n    <State>published</State>\\n    <CreateTime>1492747187000</CreateTime>\\n    <OverlayMode>Ipsec</OverlayMode>\\n    <VpnInstanceId>vpn-bp1a3kqjiiq9legfx****</VpnInstanceId>\\n</CreateVpnRouteEntryResponse>","errorExample":""}]',
      'title' => '创建目的路由',
      'description' => '### 前提条件

VPN网关实例下已创建了IPsec连接。具体操作，请参见[CreateVpnConnection](~~2526947~~)。

### 使用限制

- 不支持添加目标网段为0.0.0.0/0的目的路由。
- 请勿添加目标网段为100.64.0.0/10、100.64.0.0/10下的子网段或者包含100.64.0.0/10网段的目的路由，该类路由条目会导致控制台无法显示IPsec连接的状态或者导致IPsec连接协商失败。
- **CreateVpnRouteEntry**接口属于异步接口，即系统先返回目的路由配置信息，但该目的路由尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询目的路由的创建状态：
    - 当VPN网关实例处于**updating**状态时，表示目的路由正在创建中。
    - 当VPN网关实例处于**active**状态时，表示目的路由创建成功。
- **CreateVpnRouteEntry**接口不支持在同一VPN网关下并发创建目的路由。

### 目的路由匹配原则

创建目的路由前，建议您先了解目的路由的匹配原则。更多信息，请参见[配置目的路由](~~112476~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishVpnRouteEntry' => 
    array (
      'summary' => '调用PublishVpnRouteEntry接口将目的路由或策略路由发布到VPC的系统路由表中或将已发布的目的路由或策略路由从VPC系统路由表中撤销。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b382****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关路由条目的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关路由条目类型。取值：

- **pbr**：策略路由。

- **dbr**：目的路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pbr',
          ),
        ),
        6 => 
        array (
          'name' => 'PublishVpc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发布或撤销路由。取值：

- **true**：发布。

  该参数取值为**true**，表示将目的路由或策略路由发布到VPC的系统路由表中。

- **false**：撤销。

  该参数取值为**false**，表示将已发布的目的路由或策略路由从VPC系统路由表中撤销。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidVpnRouteEntry.NotFound',
            'errorMessage' => 'The specified route entry does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.InvalidStatus',
            'errorMessage' => 'Route entry is not allowed to operate in current status.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflict',
            'errorMessage' => 'Operation failed because there is already a route in VPC route table to another VPN on the same network block.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.InvalidCidrBlock',
            'errorMessage' => 'Operation failed because the specified network block is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'The number of route entries to the VPN gateway in the VPC routing table has reached the quota limit.',
          ),
          10 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.CidrBlock',
            'errorMessage' => 'The specified CidrBlock is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded',
            'errorMessage' => 'Route entry quota exceeded in this route table.',
          ),
          13 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Miss mandatory parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidCIDRBlock.Duplicate',
            'errorMessage' => 'Specified CIDR block is already exists.',
          ),
          16 => 
          array (
            'errorCode' => 'IncorrectVpcStatus',
            'errorMessage' => 'Current VPC status does not support this operation.',
          ),
          17 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'Current instance status does not support this operation.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          19 => 
          array (
            'errorCode' => 'IncorrectVSwitchStatus',
            'errorMessage' => 'The current virtual switch status does not support this operation.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidCidrBlock',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidNextHopType',
            'errorMessage' => 'Specified parameter "NextHopType" is not valid',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidNextHop.NotFound',
            'errorMessage' => 'Specified next hop does not exist.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidVRouter.NotFound',
            'errorMessage' => 'vRouter not exists.',
          ),
          24 => 
          array (
            'errorCode' => 'InvalidVPC.NotFound',
            'errorMessage' => 'vpc not exists.',
          ),
          25 => 
          array (
            'errorCode' => 'InvalidNexthopTypeAndList.BothNull',
            'errorMessage' => 'both nexthopType and nextHopList are null.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidNexthopTypeAndList.BothNotNull',
            'errorMessage' => 'both nexthopType and nextHopList are not null.',
          ),
          27 => 
          array (
            'errorCode' => 'InvalidRouterInterface',
            'errorMessage' => 'invalid router interface.',
          ),
          28 => 
          array (
            'errorCode' => 'InvalidOppositeRouterType',
            'errorMessage' => 'nexthop list cannot only contain router interface whose opposite router interface is on vbr.',
          ),
          29 => 
          array (
            'errorCode' => 'InvalidNexthopListSize',
            'errorMessage' => 'nexthop size is illegal. Must be between 2 and 4.',
          ),
          30 => 
          array (
            'errorCode' => 'InvalidEntryRuleQuota.NotFound',
            'errorMessage' => 'Route entry quota rule not exists.',
          ),
          31 => 
          array (
            'errorCode' => 'Forbidden.CheckEntryRuleQuota',
            'errorMessage' => 'Route entry quota rule check error.',
          ),
          32 => 
          array (
            'errorCode' => 'InvalidVBRStatus',
            'errorMessage' => 'invalid virtual border router status.',
          ),
          33 => 
          array (
            'errorCode' => 'InvalidPhysicalConnectionBusinessStatus',
            'errorMessage' => 'invalid physical connection business status.',
          ),
          34 => 
          array (
            'errorCode' => 'IncorrectHaVipStatus',
            'errorMessage' => 'This operation is denied because satus of the specified HaVip is neither Available nor InUse.',
          ),
          35 => 
          array (
            'errorCode' => 'CountLimitExceed.HaVipRouteEntry',
            'errorMessage' => 'There can be 5 route entry to HaVip at most in one route table.',
          ),
          36 => 
          array (
            'errorCode' => 'InvalidRouteEntry.Duplicate',
            'errorMessage' => 'The route entry already exist.',
          ),
          37 => 
          array (
            'errorCode' => 'INVALID_WEIGHT_PARAM',
            'errorMessage' => 'Specified value of weight invalid',
          ),
          38 => 
          array (
            'errorCode' => 'FORBIDDEN_USE_VPC_AS_INTERNET_GATEWAY',
            'errorMessage' => 'The Specified CIDR must be in vpc CIDR.',
          ),
          39 => 
          array (
            'errorCode' => 'INVALID_VPC_ID',
            'errorMessage' => 'The Specified VpcId not match.',
          ),
          40 => 
          array (
            'errorCode' => 'InvalidRouteEntrySize',
            'errorMessage' => 'The Specified routerEntry size not legal.',
          ),
          41 => 
          array (
            'errorCode' => 'RouteConflict.AlreadyExist',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
          42 => 
          array (
            'errorCode' => 'InvalidRouteEntryName.Malformed',
            'errorMessage' => 'Specified RouteEntry name is not valid.',
          ),
          43 => 
          array (
            'errorCode' => 'Duplicated.VpcNextHop',
            'errorMessage' => 'Route entry nexthop duplicate.',
          ),
          44 => 
          array (
            'errorCode' => 'InvalidNexthop.DirectEni',
            'errorMessage' => 'The direct Eni cannot be nexthop.',
          ),
          45 => 
          array (
            'errorCode' => 'InvalidAttachment.NotFound',
            'errorMessage' => 'The attachment is not found.',
          ),
          46 => 
          array (
            'errorCode' => 'OperationFailed.ActiveNetworkInterfaceNotFound',
            'errorMessage' => 'No active network interface is found on the attachment.',
          ),
          47 => 
          array (
            'errorCode' => 'InvalidNetworkInterface.NotFound',
            'errorMessage' => 'The network interface is not found on the attachment.',
          ),
          48 => 
          array (
            'errorCode' => 'OperationFailed.QueryAttachmentInfo',
            'errorMessage' => 'Failed to query attachment information.',
          ),
          49 => 
          array (
            'errorCode' => 'IllegalParam.AttachmentId',
            'errorMessage' => 'The attachment is invalid.',
          ),
          50 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportIPV6',
            'errorMessage' => 'The specified next hop does not support IPv6.',
          ),
          51 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv6Address',
            'errorMessage' => 'The IPv6 address of the specified next hop is being assigned or deleted.',
          ),
          52 => 
          array (
            'errorCode' => 'OperationUnsupported.Ipv6EntryOnPrimaryNetworkInterface',
            'errorMessage' => 'You cannot create IPv6 route entries on a primary network interface.',
          ),
          53 => 
          array (
            'errorCode' => 'OperationUnsupported.SpecifyIpOnIpv6Entry',
            'errorMessage' => 'You cannot specify the private IP address when you create IPv6 route entries.',
          ),
          54 => 
          array (
            'errorCode' => 'OperationUnsupported.MutipleIpv6Address',
            'errorMessage' => 'You cannot specify a next hop that has bound multiple IPv6 addresses.',
          ),
          55 => 
          array (
            'errorCode' => 'OperationDenied.Ipv6EntryOnCustomTable',
            'errorMessage' => 'You cannot create any IPv6 route entry on a custom route table.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<PublishVpnRouteEntryResponse>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\t</RequestId>\\n</PublishVpnRouteEntryResponse>","errorExample":""}]',
      'title' => '发布或者撤销VPN路由',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVpnRouteEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou	',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3828dae492b	',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的目标网段。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24	',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        5 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的权重值，取值：

- **0**：低优先级。

- **100**：高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议，取值：**Ipsec**（IPsec隧道协议）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.Configuring',
            'errorMessage' => 'The specified route entry is configuring.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRouteEntry.NotFound',
            'errorMessage' => 'The specified route entry does not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
          8 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVpnRouteEntryResponse>\\r\\n      <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\r\\n</DeleteVpnRouteEntryResponse>","errorExample":""}]',
      'title' => '删除VPN目的路由',
      'summary' => '调用DeleteVpnRouteEntry接口删除VPN目的路由。',
      'description' => '- **DeleteVpnRouteEntry**接口属于异步接口，即系统先返回一个请求ID，但该VPN目的路由尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询VPN网关实例状态，来确定VPN目的路由的删除状态：
    - 当VPN网关实例处于**updating**状态时，表示VPN目的路由正在删除中。
    - 当VPN网关实例处于**active**状态时，表示VPN目的路由删除成功。
- **DeleteVpnRouteEntry**接口不支持在同一VPN网关下并发删除VPN目的路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVpnRouteEntryWeight' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所属地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3828dae492b',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****	',
          ),
        ),
        5 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由在修改之前设置的权重值，取值：

- **0**：低优先级。

- **100**：高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'NewWeight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由新的权重值，取值：

- **0**：低优先级。

- **100**：高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        7 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议，取值：**Ipsec**（IPsec隧道协议）。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnRouteEntryWeightResponse>\\r\\n      <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\r\\n</ModifyVpnRouteEntryWeightResponse>","errorExample":""}]',
      'title' => '修改目的路由的权重值',
      'summary' => '调用ModifyVpnRouteEntryWeight接口修改目的路由的权重值。',
      'description' => '- 在VPN网关实例下存在主备目的路由场景下，如果您需要修改主目的路由的权重值，需先将备目的路由删除，待主目的路由修改完成后，再重新配置备目的路由。如果您需要修改备目的路由的权重值，也需先删除主目的路由，待备目的路由修改完成后再重新配置主目的路由。删除目的路由，请参见[DeleteVpnRouteEntry](~~2526961~~)。
- **ModifyVpnRouteEntryWeight**接口属于异步接口，即系统先返回一个请求ID，但该VPN目的路由的权重值尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)查询VPN目的路由的权重值的修改状态：
    - 当VPN目的路由处于**updating**状态时，表示VPN目的路由的权重值正在修改中。
    - 当VPN目的路由处于**active**状态时，表示VPN目的路由的权重值修改成功。
- **ModifyVpnRouteEntryWeight**接口不支持在同一VPN网关下并发修改目的路由的权重值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVpnRouteEntries' => 
    array (
      'summary' => '调用DescribeVpnRouteEntries接口查询VPN网关实例的目的路由条目信息和BGP路由条目信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1cmw7jh1nfe43m9****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteEntryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的类型。取值：

- **custom**（默认值）：表示查询VPN网关实例的目的路由。
- **bgp**：表示查询VPN网关实例的BGP路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BF3995A6-FA4F-4C74-B90F-89ECF4BFF4D5',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VpnRouteEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VpnRouteEntry' => 
                  array (
                    'description' => '路由条目信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由条目详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RouteEntryType' => 
                        array (
                          'description' => '路由条目的类型。

- **custom**：表示VPN网关实例的目的路由。
- **bgp**：表示VPN网关实例的BGP路由。',
                          'type' => 'string',
                          'example' => 'custom',
                        ),
                        'NextHop' => 
                        array (
                          'description' => '路由条目的下一跳。',
                          'type' => 'string',
                          'example' => 'vco-bp1tui07ob10fmuro****',
                        ),
                        'Weight' => 
                        array (
                          'description' => '目的路由的权重值。

- 对于支持IPsec-VPN连接双隧道模式的VPN网关实例，目的路由的权重值默认为**100**。
- 对于支持IPsec-VPN连接单隧道模式的VPN网关实例，目的路由权重值代表目的路由的优先级：
    - **100**：表示高优先级。存在目标网段相同的多条目的路由时，该目的路由关联的IPsec连接为主链路。
    - **0**：表示低优先级。存在目标网段相同的多条目的路由时，该目的路由关联的IPsec连接为备链路。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'RouteDest' => 
                        array (
                          'description' => '路由条目的目标网段。',
                          'type' => 'string',
                          'example' => '10.0.0.0/24',
                        ),
                        'AsPath' => 
                        array (
                          'description' => '路由条目经过的AS路径。',
                          'type' => 'string',
                          'example' => '65501,65001,60011',
                        ),
                        'State' => 
                        array (
                          'description' => '路由条目的状态。取值：

- **published**：已发布。
- **normal**：未发布。',
                          'type' => 'string',
                          'example' => 'normal',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建路由条目的时间戳。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建路由条目时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1563874074000',
                        ),
                        'Community' => 
                        array (
                          'description' => '路由条目的Community属性值。',
                          'type' => 'string',
                          'example' => '65001:1000,65501:2000',
                        ),
                        'Source' => 
                        array (
                          'description' => '路由条目的来源。

- **CLOUD**：表示当前路由是通过VPN网关关联的阿里云产品传播过来的。
- **VPN_BGP**：表示当前路由是通过VPN网关BGP路由协议学习到的。',
                          'type' => 'string',
                          'example' => 'CLOUD',
                        ),
                        'VpnInstanceId' => 
                        array (
                          'description' => 'VPN网关实例ID。',
                          'type' => 'string',
                          'example' => 'vpn-bp1cmw7jh1nfe43m9****',
                        ),
                        'NextHopTunnelId' => 
                        array (
                          'description' => '路由条目下一跳关联的隧道ID。

> 仅支持双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                          'type' => 'string',
                          'example' => 'tun-36cfgpwjn58axj****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.RouteEntryType',
            'errorMessage' => 'The specified "RouteEntryType" is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpnInstanceId.NotFound',
            'errorMessage' => 'The specified VPN was not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"BF3995A6-FA4F-4C74-B90F-89ECF4BFF4D5\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VpnRouteEntries\\": {\\n    \\"VpnRouteEntry\\": [\\n      {\\n        \\"RouteEntryType\\": \\"custom\\",\\n        \\"NextHop\\": \\"vco-bp1tui07ob10fmuro****\\",\\n        \\"Weight\\": 100,\\n        \\"RouteDest\\": \\"10.0.0.0/24\\",\\n        \\"AsPath\\": \\"65501,65001,60011\\",\\n        \\"State\\": \\"normal\\",\\n        \\"CreateTime\\": 1563874074000,\\n        \\"Community\\": \\"65001:1000,65501:2000\\",\\n        \\"Source\\": \\"CLOUD\\",\\n        \\"VpnInstanceId\\": \\"vpn-bp1cmw7jh1nfe43m9****\\",\\n        \\"NextHopTunnelId\\": \\"tun-36cfgpwjn58axj****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnRouteEntriesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>BF3995A6-FA4F-4C74-B90F-89ECF4BFF4D5</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VpnRouteEntries>\\n        <RouteEntryType>custom</RouteEntryType>\\n        <NextHop>vco-bp1tui07ob10fmuro****</NextHop>\\n        <Weight>100</Weight>\\n        <RouteDest>10.0.0.0/24</RouteDest>\\n        <State>normal</State>\\n        <CreateTime>1563874074000</CreateTime>\\n        <VpnInstanceId>vpn-bp1cmw7jh1nfe43m9****</VpnInstanceId>\\n        <NextHopTunnelId>tun-36cfgpwjn58axj****</NextHopTunnelId>\\n    </VpnRouteEntries>\\n</DescribeVpnRouteEntriesResponse>","errorExample":""}]',
      'title' => '查询目的路由和BGP路由',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVpnPbrRouteEntry' => 
    array (
      'summary' => '调用CreateVpnPbrRouteEntry接口创建VPN策略路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'high',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的源网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的权重值。

在您使用同一个VPN网关实例搭建主备IPsec-VPN连接的场景中，您可以通过配置策略路由的权重值来指定主链路和备链路，权重值为100的策略路由默认为主链路，权重值为0的策略路由默认为备链路。

您可以通过为IPsec连接配置健康检查来自动探测链路的连通性，在主链路不通的情况下，系统自动将流量切换至备链路进行传输，实现上云链路的高可用。具体操作，请参见[CreateVpnConnection](~~120391~~)。

- **100**：表示当前策略路由关联的IPsec连接为主链路。
- **0**：表示当前策略路由关联的IPsec连接为备链路。

> - 在您指定主备链路时，主策略路由和备策略路由的源网段和目标网段需相同。
> - 对于支持双隧道模式IPsec-VPN连接的VPN网关实例，无需配置该参数。一个双隧道模式IPsec-VPN连接包含两条隧道，两条隧道自动形成主备链路，无需再通过配置该参数指定主备链路。如果您配置了该参数，则该参数配置后不生效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'PublishVpc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否发布策略路由到VPC的路由表中。取值：

- **true**：发布策略路由到VPC的路由表。

- **false**：不发布策略路由到VPC的路由表。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的描述信息。

描述信息长度为1～100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        9 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（IPsec隧道协议）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
        10 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的策略优先级。取值范围：**1**~**100**。默认值：**10**。

策略优先级数字越小，策略路由的优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextHop' => 
              array (
                'description' => '策略路由的下一跳。',
                'type' => 'string',
                'example' => 'vco-bp15oes1py4i66rmd****',
              ),
              'Weight' => 
              array (
                'description' => '策略路由的权重值。

- **100**：表示当前策略路由关联的IPsec连接为主链路。
- **0**：表示当前策略路由关联的IPsec连接为备链路。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RouteDest' => 
              array (
                'description' => '策略路由的目标网段。',
                'type' => 'string',
                'example' => '10.0.0.0/24',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
              'Description' => 
              array (
                'description' => '策略路由的描述信息。',
                'type' => 'string',
                'example' => 'desctest',
              ),
              'State' => 
              array (
                'description' => '策略路由的发布状态。

- **published**：已发布策略路由到VPC的路由表。

- **normal**：未发布策略路由到VPC的路由表。',
                'type' => 'string',
                'example' => 'normal',
              ),
              'CreateTime' => 
              array (
                'description' => '创建策略路由的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建策略路由时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492747187000',
              ),
              'OverlayMode' => 
              array (
                'description' => '隧道协议。仅取值：**Ipsec**（IPsec隧道协议）。',
                'type' => 'string',
                'example' => 'Ipsec',
              ),
              'RouteSource' => 
              array (
                'description' => '策略路由的源网段。',
                'type' => 'string',
                'example' => '192.168.1.0/24',
              ),
              'VpnInstanceId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-bp1cmw7jh1nfe43m9****',
              ),
              'Priority' => 
              array (
                'description' => '策略路由的策略优先级。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.ConflictSSL',
            'errorMessage' => 'The specified route entry has conflict with SSL client.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.InvalidWeight',
            'errorMessage' => 'Invalid route entry weight value.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidNextHop.NotFound',
            'errorMessage' => 'The specified NextHop does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.RouteDest',
            'errorMessage' => 'The specified RouteDest is invalid',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflict',
            'errorMessage' => 'Operation failed because there is already a route in VPC route table to another VPN on the same network block.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.InvalidCidrBlock',
            'errorMessage' => 'Operation failed because the specified network block is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'The number of route entries to the VPN gateway in the VPC routing table has reached the quota limit.',
          ),
          12 => 
          array (
            'errorCode' => 'VpnPbrRouteEntryPriority.NotSupport',
            'errorMessage' => 'Current version of the VPN does not support setting custom pbr route entry priority.',
          ),
          13 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          14 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
          15 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          16 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          17 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestWeightConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR, destination CIDR and weight.',
          ),
          18 => 
          array (
            'errorCode' => 'VpnRouteEntry.SamePriorityPbrRoutePrefixOverlap',
            'errorMessage' => 'The source CIDR and destination CIDR of Policy-based routes with the same priority cannot overlap.',
          ),
          19 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR and destination CIDR.',
          ),
          20 => 
          array (
            'errorCode' => 'CreatePbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of policy routes exceeds the quota limit.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 1000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextHop\\": \\"vco-bp15oes1py4i66rmd****\\",\\n  \\"Weight\\": 0,\\n  \\"RouteDest\\": \\"10.0.0.0/24\\",\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\",\\n  \\"Description\\": \\"desctest\\",\\n  \\"State\\": \\"normal\\",\\n  \\"CreateTime\\": 1492747187000,\\n  \\"OverlayMode\\": \\"Ipsec\\",\\n  \\"RouteSource\\": \\"192.168.1.0/24\\",\\n  \\"VpnInstanceId\\": \\"vpn-bp1cmw7jh1nfe43m9****\\",\\n  \\"Priority\\": 10\\n}","errorExample":""},{"type":"xml","example":"<CreateVpnPbrRouteEntryResponse>\\n    <NextHop>vco-bp15oes1py4i66rmd****</NextHop>\\n    <Weight>0</Weight>\\n    <RouteDest>10.0.0.0/24</RouteDest>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n    <Description>desctest</Description>\\n    <State>normal</State>\\n    <CreateTime>1492747187000</CreateTime>\\n    <OverlayMode>Ipsec</OverlayMode>\\n    <RouteSource>192.168.1.0/24</RouteSource>\\n    <VpnInstanceId>vpn-bp1cmw7jh1nfe43m9****</VpnInstanceId>\\n    <Priority>10</Priority>\\n</CreateVpnPbrRouteEntryResponse>","errorExample":""}]',
      'title' => '创建VPN策略路由',
      'description' => '- 创建策略路由前，建议您先了解策略路由的使用限制、匹配规则等信息。更多信息，请参见[使用策略路由](~~110777~~)。
- 创建策略路由前，请确保您已经创建了IPsec连接。具体操作，请参见[CreateVpnConnection](~~120391~~)。
- **CreateVpnPbrRouteEntry**接口属于异步接口，即系统先返回策略路由的信息，但该策略路由尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询VPN网关实例状态，来确定策略路由的创建状态：
    - 当VPN网关实例处于**updating**状态时，表示策略路由正在创建中。
    - 当VPN网关实例处于**active**状态时，表示策略路由创建成功。
- **CreateVpnPbrRouteEntry**接口不支持在同一个VPN网关实例下并发创建策略路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVpnPbrRouteEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的源网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的权重值。

您可以调用[DescribeVpnPbrRouteEntries](~~2526959~~)接口查询策略路由的权重值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（IPsec隧道协议）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
        8 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的策略优先级。

- 如果您的策略路由之前不存在策略优先级，本参数可不填。
- 如果您的策略路由之前存在策略优先级，本参数可填，也可不填。

    如果您填写了本参数，请填写策略路由之前已配置的策略优先级，如果您填写为其他值，则当前接口会调用失败。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.Configuring',
            'errorMessage' => 'The specified route entry is configuring.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRouteEntry.NotFound',
            'errorMessage' => 'The specified route entry does not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          8 => 
          array (
            'errorCode' => 'VpnTask.CONFLICT',
            'errorMessage' => 'Vpn task has conflict.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVpnPbrRouteEntryResponse>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n</DeleteVpnPbrRouteEntryResponse>","errorExample":""}]',
      'title' => '删除策略路由',
      'summary' => '调用DeleteVpnPbrRouteEntry接口删除策略路由。',
      'description' => '- **DeleteVpnPbrRouteEntry**接口属于异步接口，即系统先返回一个请求ID，但该策略路由尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询VPN网关实例状态，来确定策略路由的删除状态：
    - 当VPN网关实例处于**updating**状态时，表示策略路由正在删除中。
    - 当VPN网关实例处于**active**状态时，表示策略路由删除成功。
- **DeleteVpnPbrRouteEntry**接口不支持在同一VPN网关实例下并发删除策略路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVpnPbrRouteEntryWeight' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3828dae492b',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的源网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-bp15oes1py4i66rmd****	',
          ),
        ),
        6 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由原始的权重值。取值：

- **100**：表示当前策略路由关联的IPsec连接为主链路。
- **0**：表示当前策略路由关联的IPsec连接为备链路。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'NewWeight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由新的权重值。取值：

- **100**：表示当前策略路由关联的IPsec连接为主链路。
- **0**：表示当前策略路由关联的IPsec连接为备链路。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        8 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（IPsec隧道协议）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
        9 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的策略优先级。

- 如果您的策略路由之前不存在策略优先级，本参数可不填。
- 如果您的策略路由之前存在策略优先级，本参数可填，也可不填。
        
        如果您填写了本参数，请填写策略路由之前已配置的策略优先级，如果您填写为其他值，则当前接口会调用失败。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestWeightConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR, destination CIDR and weight.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.SamePriorityPbrRoutePrefixOverlap',
            'errorMessage' => 'The source CIDR and destination CIDR of Policy-based routes with the same priority cannot overlap.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR and destination CIDR.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnPbrRouteEntryWeightResponse>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\t</RequestId>\\n</ModifyVpnPbrRouteEntryWeightResponse>","errorExample":""}]',
      'title' => '修改VPN策略路由的权重值',
      'summary' => '调用ModifyVpnPbrRouteEntryWeight接口修改VPN策略路由的权重值。',
      'description' => '- **ModifyVpnPbrRouteEntryWeight**接口属于异步接口，即系统先返回一个请求ID，但该策略路由尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询VPN网关实例状态，来确定策略路由的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示策略路由正在修改中。
    - 当VPN网关实例处于**active**状态时，表示策略路由修改成功。
- **ModifyVpnPbrRouteEntryWeight**接口不支持在同一VPN网关实例下并发修改策略路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVpnPbrRouteEntryPriority' => 
    array (
      'summary' => '调用ModifyVpnPbrRouteEntryPriority接口修改策略路由的策略优先级。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-henyuan',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的源网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由原始的策略优先级。取值范围：**1**~**100**。

策略优先级数字越小，策略路由的优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        7 => 
        array (
          'name' => 'NewPriority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由新的策略优先级。取值范围：**1**~**100**。

策略优先级数字越小，策略路由的优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的权重值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnPbrRouteEntryPriority.NotSupport',
            'errorMessage' => 'Current version of the VPN does not support setting pbr route entry priority.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.SamePriorityPbrRoutePrefixOverlap',
            'errorMessage' => 'The source CIDR and destination CIDR of Policy-based routes with the same priority cannot overlap.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR and destination CIDR.',
          ),
          8 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestWeightConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR, destination CIDR and weight.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnPbrRouteEntryPriorityResponse>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n</ModifyVpnPbrRouteEntryPriorityResponse>","errorExample":""}]',
      'title' => '修改策略路由的策略优先级',
      'description' => '- **ModifyVpnPbrRouteEntryPriority**接口属于异步接口，即系统先返回一个请求ID，但该策略路由尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询VPN网关实例状态，来确定策略路由的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示策略路由正在修改中。
    - 当VPN网关实例处于**active**状态时，表示策略路由修改成功。
- **ModifyVpnPbrRouteEntryPriority**接口不支持在同一VPN网关实例下并发修改策略路由。',
    ),
    'ModifyVpnPbrRouteEntryAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-heyuan',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b3****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的源网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由的下一跳。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-bp15oes1py4i66rmd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由原始的策略优先级。取值范围：**1**~**100**。

策略优先级数字越小，策略路由的优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '5',
          ),
        ),
        7 => 
        array (
          'name' => 'NewPriority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由新的策略优先级。取值范围：**1**~**100**。

策略优先级数字越小，策略路由的优先级越高。

如果您不输入当前参数，表示不修改策略路由的策略优先级。

> **NewPriority**和**NewWeight**参数需至少输入一个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由原始的权重值。取值：

- **100**：表示当前策略路由关联的IPsec连接为主链路。
- **0**：表示当前策略路由关联的IPsec连接为备链路。


',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
        9 => 
        array (
          'name' => 'NewWeight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略路由新的权重值。取值：

- **100**：表示当前策略路由关联的IPsec连接为主链路。
- **0**：表示当前策略路由关联的IPsec连接为备链路。

如果您不输入当前参数，表示不修改策略路由的权重值。

> **NewPriority**和**NewWeight**参数需至少输入一个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnPbrRouteEntryPriority.NotSupport',
            'errorMessage' => 'Current version of the VPN does not support setting pbr route entry priority.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestWeightConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR, destination CIDR and weight.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnRouteEntry.SamePriorityPbrRoutePrefixOverlap',
            'errorMessage' => 'The source CIDR and destination CIDR of Policy-based routes with the same priority cannot overlap.',
          ),
          8 => 
          array (
            'errorCode' => 'VpnRouteEntry.SrcDestConflict',
            'errorMessage' => 'The VPN gateway does not support Policy-based routing with the same source CIDR and destination CIDR.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnPbrRouteEntryAttributeResponse>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n</ModifyVpnPbrRouteEntryAttributeResponse>","errorExample":""}]',
      'title' => '修改策略路由的权重值和策略优先级',
      'summary' => '调用ModifyVpnPbrRouteEntryAttribute接口修改策略路由的权重值和策略优先级。',
      'description' => '- **ModifyVpnPbrRouteEntryAttribute**接口适用于为支持策略优先级的策略路由一并修改权重值和策略优先级。

    - 如果您仅需要为策略路由修改权重值，您可以调用[ModifyVpnPbrRouteEntryWeight](~~127249~~)接口。
    - 如果您仅需要为策略路由修改策略优先级，您可以调用[ModifyVpnPbrRouteEntryPriority](~~466870~~)接口。
    - 如果您的策略路由不支持策略优先级，则您仅可以调用[ModifyVpnPbrRouteEntryWeight](~~127249~~)接口修改策略路由的权重值。

- **ModifyVpnPbrRouteEntryAttribute**接口属于异步接口，即系统先返回一个请求ID，但该策略路由尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~73720~~)接口查询VPN网关实例状态，来确定策略路由的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示策略路由正在修改中。
    - 当VPN网关实例处于**active**状态时，表示策略路由修改成功。
- **ModifyVpnPbrRouteEntryAttribute**接口不支持在同一VPN网关实例下并发修改策略路由。',
    ),
    'DescribeVpnPbrRouteEntries' => 
    array (
      'summary' => '调用DescribeVpnPbrRouteEntries接口查询VPN网关实例下配置的策略路由的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1a3kqjiiq9legfx****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VpnPbrRouteEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VpnPbrRouteEntry' => 
                  array (
                    'description' => '策略路由信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '策略路由的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NextHop' => 
                        array (
                          'description' => '策略路由的下一跳。',
                          'type' => 'string',
                          'example' => 'vco-bp15oes1py4i66rmd****',
                        ),
                        'Weight' => 
                        array (
                          'description' => '策略路由的权重值。

对于支持IPsec-VPN连接单隧道模式的VPN网关实例，策略路由权重值代表策略路由的优先级：

   - **100**：表示高优先级。存在源网段、目标网段均相同的多条策略路由时，该策略路由关联的IPsec连接为主链路。
   - **0**：表示低优先级。存在源网段、目标网段均相同的多条策略路由时，该策略路由关联的IPsec连接为备链路。

> 对于支持IPsec-VPN连接双隧道模式的VPN网关实例，当前参数不生效。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'RouteDest' => 
                        array (
                          'description' => '策略路由的目标网段。',
                          'type' => 'string',
                          'example' => '10.0.0.0/24',
                        ),
                        'State' => 
                        array (
                          'description' => '策略路由的发布状态。

- **published**：已发布策略路由到VPC的路由表。

- **normal**：未发布策略路由到VPC的路由表。',
                          'type' => 'string',
                          'example' => 'published',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建策略路由的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建策略路由时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1492747187000',
                        ),
                        'VpnInstanceId' => 
                        array (
                          'description' => 'VPN网关实例ID。',
                          'type' => 'string',
                          'example' => 'vpn-bp1a3kqjiiq9legfx****',
                        ),
                        'RouteSource' => 
                        array (
                          'description' => '策略路由的源网段。',
                          'type' => 'string',
                          'example' => '192.168.0.0/24',
                        ),
                        'Priority' => 
                        array (
                          'description' => '策略路由的策略优先级。

策略优先级数字越小，策略路由的优先级越高。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'NextHopTunnelId' => 
                        array (
                          'description' => '策略路由下一跳关联的隧道ID。

仅支持双隧道模式IPsec-VPN连接的VPN网关实例会返回当前参数。',
                          'type' => 'string',
                          'example' => 'tun-opsqc4d97wni2****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnInstanceId.NotFound',
            'errorMessage' => 'The specified VPN was not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VpnPbrRouteEntries\\": {\\n    \\"VpnPbrRouteEntry\\": [\\n      {\\n        \\"NextHop\\": \\"vco-bp15oes1py4i66rmd****\\",\\n        \\"Weight\\": 100,\\n        \\"RouteDest\\": \\"10.0.0.0/24\\",\\n        \\"State\\": \\"published\\",\\n        \\"CreateTime\\": 1492747187000,\\n        \\"VpnInstanceId\\": \\"vpn-bp1a3kqjiiq9legfx****\\",\\n        \\"RouteSource\\": \\"192.168.0.0/24\\",\\n        \\"Priority\\": 10,\\n        \\"NextHopTunnelId\\": \\"tun-opsqc4d97wni2****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnPbrRouteEntriesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VpnPbrRouteEntries>\\n        <NextHop>vco-bp15oes1py4i66rmd****</NextHop>\\n        <Weight>100</Weight>\\n        <RouteDest>10.0.0.0/24</RouteDest>\\n        <State>published</State>\\n        <CreateTime>1492747187000</CreateTime>\\n        <VpnInstanceId>vpn-bp1a3kqjiiq9legfx****</VpnInstanceId>\\n        <RouteSource>192.168.0.0/24</RouteSource>\\n        <Priority>10</Priority>\\n        <NextHopTunnelId>tun-opsqc4d97wni2****</NextHopTunnelId>\\n    </VpnPbrRouteEntries>\\n</DescribeVpnPbrRouteEntriesResponse>","errorExample":""}]',
      'title' => '查询策略路由',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVpnAttachment' => 
    array (
      'summary' => '调用CreateVpnAttachment接口创建IPsec连接，用于绑定转发路由器实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'high',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的名称。

名称长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        2 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户网关ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cgw-p0w2jemrcj5u61un8****',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'public/private',
            'description' => 'IPsec连接的网络类型。取值：
- **public**（默认值）：公网，表示IPsec连接通过公网建立加密通信通道。
- **private**：私网，表示IPsec连接通过私网建立加密通信通道。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由模式为感兴趣流模式时，设置本端ip和对端ip',
            'description' => '需要和本地数据中心互通的VPC侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.1.0/24,192.168.2.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => true,
            'example' => '10.1.1.0/24,10.1.2.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'RemoteSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和VPC互通的本地数据中心侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.3.0/24,192.168.4.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => true,
            'example' => '10.1.3.0/24,10.1.4.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'EffectImmediately',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '立即生效',
            'description' => '选择IPsec连接的配置是否立即生效。 取值：

- **true**：是，配置完成后系统立即进行IPsec协议协商。
- **false**（默认值）：否，当有流量进入时系统才进行IPsec协议协商。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'IkeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第一阶段协商的配置信息：
           
- **IkeConfig.Psk**：预共享密钥，用于VPN网关与本地数据中心之间的身份认证。

    - 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!`@#$%^&*()_-+={}[]|;:\',.<>/?```
    - 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~2526951~~)接口查询系统自动生成的预共享密钥。

    > IPsec连接侧的预共享密钥需和本地数据中心侧的认证密钥一致，否则本地数据中心和VPN网关之间无法建立连接。

- **IkeConfig.IkeVersion**：IKE协议的版本。取值：**ikev1**或**ikev2**。默认值：**ikev1**。   

- **IkeConfig.IkeMode**：协商模式。取值：**main**或**aggressive**。默认值：**main**。   

- **IkeConfig.IkeEncAlg**：第一阶段协商的加密算法。取值：**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。   

- **IkeConfig.IkeAuthAlg**：第一阶段协商的认证算法。取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。   

- **IkeConfig.IkePfs**：第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**group1**、**group2**、**group5**或**group14**。默认值：**group2**。   

- **IkeConfig.IkeLifetime**：第一阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。默认值：**86400**。   

- **IkeConfig.LocalId**：IPsec连接阿里云侧的标识，长度限制为100个字符。默认值为空。

- **IkeConfig.RemoteId**：IPsec连接本地数据中心侧的标识，长度限制为100个字符，默认值为用户网关的IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '{"Psk":"1234****","IkeVersion":"ikev1","IkeMode":"main","IkeEncAlg":"aes","IkeAuthAlg":"sha1","IkePfs":"group2","IkeLifetime":86400,"LocalId":"47.XX.XX.1","RemoteId":"47.XX.XX.2"}',
          ),
        ),
        8 => 
        array (
          'name' => 'IpsecConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第二阶段协商的配置信息： 

- **IpsecConfig.IpsecEncAlg**：第二阶段协商的加密算法。取值：**aes**、**aes192**、**aes256**、**des**或**3des**。默认值：**aes**。   

- **IpsecConfig. IpsecAuthAlg**：第二阶段协商的认证算法。取值：**md5**、**sha1**、**sha256**、**sha384**、**sha512**。默认值：**md5**。   

- **IpsecConfig. IpsecPfs**：第二阶段协商使用的Diffie-Hellman密钥交换算法。取值：**disabled**、**group1**、**group2**、**group5**或**group14**。默认值：**group2**。   

- **IpsecConfig. IpsecLifetime**：第二阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。默认值：**86400**。   ',
            'type' => 'string',
            'required' => false,
            'example' => '{"IpsecEncAlg":"aes","IpsecAuthAlg":"sha1","IpsecPfs":"group2","IpsecLifetime":86400}',
          ),
        ),
        9 => 
        array (
          'name' => 'BgpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP的配置信息：

- **BgpConfig.EnableBgp**：是否开启BGP功能。取值：**true**或**false**（默认值）。

- **BgpConfig.LocalAsn**：阿里云侧的自治系统号。自治系统号取值范围：**1**~**4294967295**。默认值：**45104**。

    支持按照两段位的格式进行输入，即：前16位比特.后16位比特。每个段位使用十进制输入。

    例如输入123.456，则表示自治系统号：123*65536+456=8061384。

- **BgpConfig.TunnelCidr**：IPsec隧道网段。该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。

- **LocalBgpIp**：阿里云侧的BGP地址。该地址为IPsec隧道网段内的一个IP地址。 

> - 在添加BGP配置前，建议您先了解BGP动态路由功能的工作机制和使用限制。更多信息，请参见[BGP动态路由公告
](~~170235~~)。
> - 建议您使用自治系统号的私有号码与阿里云建立BGP连接。自治系统号的私有号码范围请自行查阅文档。',
            'type' => 'string',
            'required' => false,
            'example' => '{"EnableBgp":"true","LocalAsn":"45104","TunnelCidr":"169.254.11.0/30","LocalBgpIp":"169.254.11.1"}',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置信息：

- **HealthCheckConfig.enable**：是否开启健康检查，取值：**true**或**false**（默认值）。

- **HealthCheckConfig.dip**：健康检查的目的IP地址。输入VPC侧通过IPsec连接可以访问的本地数据中心的IP地址。

- **HealthCheckConfig.sip**：健康检查的源IP地址。输入本地数据中心通过IPsec连接可以访问的VPC侧的IP地址。

- **HealthCheckConfig.interval**：健康检查的重试间隔时间，单位：秒。默认值：**3**。

- **HealthCheckConfig.retry**：健康检查的重试发包次数。默认值：**3**。

- **HealthCheckConfig.Policy**：健康检查失败时是否撤销已发布的路由。取值：

     - **revoke_route**（默认值）：撤销已发布的路由。
     - **reserve_route**：不撤销已发布的路由。',
            'type' => 'string',
            'required' => false,
            'example' => '{"enable":"true","dip":"192.168.1.1","sip":"10.1.1.1","interval":"3","retry":"3","Policy": "revoke_route"}',
          ),
        ),
        11 => 
        array (
          'name' => 'AutoConfigRoute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动配置路由。取值：

- **true**（默认值）：自动配置路由。

- **false**：不自动配置路由。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'EnableDpd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启DPD（对等体存活检测）功能。取值：

- **true**（默认值）：开启DPD功能。IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'EnableNatTraversal',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启NAT穿越功能。取值：

- **true**（默认值）：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'RemoteCaCert',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '国密型VPN网关创建IPsec连接时，对端的CA证书。',
            'type' => 'string',
            'required' => false,
            'example' => '-----BEGIN CERTIFICATE----- MIIB7zCCAZW**** -----END CERTIFICATE-----',
          ),
        ),
        15 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        16 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IPsec连接待添加的标签列表。

一次最多支持为IPsec连接添加20个标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。一旦输入该值，则不允许为空字符串。

最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        17 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的资源组ID。

- 您可以调用[ListResourceGroups](~~158855~~)接口查询资源组ID。
- 如果您未指定资源组ID，IPsec连接创建后将归属于默认资源组。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '88187252-0E26-3C4D-9D1D-32A04454EBBA',
              ),
              'VpnConnectionId' => 
              array (
                'description' => 'IPsec连接ID。',
                'type' => 'string',
                'example' => 'vco-p0wb09rama8qwwgfn****',
              ),
              'Name' => 
              array (
                'description' => 'IPsec连接的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'CreateTime' => 
              array (
                'description' => '创建IPsec连接的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建IPsec连接时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1658201810000',
              ),
              'Code' => 
              array (
                'description' => '当前任务返回的状态码。**200**表示任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '当前任务是否成功执行。

- **true**：已成功执行。
- **false**：未能成功执行。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '当前任务返回的信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          2 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecPfs',
            'errorMessage' => 'The specified vpn connection ipsec Ipsec Pfs is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecAuthAlg',
            'errorMessage' => 'The specified vpn connection ipsec Auth Alg is not support.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.InvalidWeight',
            'errorMessage' => 'Invalid route entry weight value.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.VpnConnectionName',
            'errorMessage' => 'The specified vpn connection name is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'QuotaExceeded.PolicyBasedRoute',
            'errorMessage' => 'The maximum number of policy-based routes is exceeded. Existing routes: %s. Routes to be created: %s. Maximum routes: %s.',
          ),
          8 => 
          array (
            'errorCode' => 'MissingParameter.TunnelCidr',
            'errorMessage' => 'The parameter TunnelCidr is mandatory when BGP is enabled.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParam.CustomerGatewayAsn',
            'errorMessage' => 'Asn of customer gateway is mandatory when BGP is enabled.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => 'The specified LocalAsn is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.BgpConfig',
            'errorMessage' => 'The specified BgpConfig is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.TunnelCidr',
            'errorMessage' => 'The specified TunnelCidr is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidLocalBgpIp.Malformed',
            'errorMessage' => 'The specified LocalBgpIp is malformed.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.RemoteSubnet',
            'errorMessage' => 'The specified "RemoteSubnet" (%s) is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.LocalBgpIp',
            'errorMessage' => 'The specified LocalBgpIp is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationFailed.MissCertificate',
            'errorMessage' => 'The VPN connecton has not associated any certificates.',
          ),
          18 => 
          array (
            'errorCode' => 'MissingParam.RemoteId',
            'errorMessage' => 'The remote ID is mandatory when creating national standard VPN connection.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.EnableBgp',
            'errorMessage' => 'VPN connection must enable BGP when VPN gateway has enabled BGP.',
          ),
          20 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          21 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          24 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
          25 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidTunnelCidr.Malformed',
            'errorMessage' => 'The specified TunnelCidr is malformed.',
          ),
          27 => 
          array (
            'errorCode' => 'OperationFailed.NoAvailableAmount',
            'errorMessage' => 'The available amount of your account is less than 0, please recharge before attempting to purchase.',
          ),
          28 => 
          array (
            'errorCode' => 'OperationUnsupported.EnableBgp',
            'errorMessage' => 'Current region does not support enable BGP.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidCustomerGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified customer gateway instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnConnection',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"88187252-0E26-3C4D-9D1D-32A04454EBBA\\",\\n  \\"VpnConnectionId\\": \\"vco-p0wb09rama8qwwgfn****\\",\\n  \\"Name\\": \\"nametest\\",\\n  \\"CreateTime\\": 1658201810000,\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVpnAttachmentResponse>\\n    <RequestId>88187252-0E26-3C4D-9D1D-32A04454EBBA</RequestId>\\n    <VpnConnectionId>vco-p0wb09rama8qwwgfn****</VpnConnectionId>\\n    <Name>nametest</Name>\\n    <CreateTime>1658201810000</CreateTime>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <Message>successful</Message>\\n</CreateVpnAttachmentResponse>","errorExample":""}]',
      'title' => '创建IPsec连接',
      'description' => '调用`CreateVpnAttachment`接口创建的IPsec连接默认未绑定任何资源，后续您可以通过调用[CreateTransitRouterVpnAttachment](~~443993~~)接口将IPsec连接绑定转发路由器实例。

### 前提条件

创建IPsec连接前，请确保您已经在IPsec连接所在的地域创建了用户网关。具体操作，请参见[CreateCustomerGateway](~~120368~~)。
        
如果您需要为IPsec连接添加BGP配置，请确保用户网关已添加了自治系统号。',
    ),
    'CreateVcoRouteEntry' => 
    array (
      'summary' => '调用CreateVcoRouteEntry接口为IPsec连接添加目的路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'high',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由条目的权重值。取值：

- **0**：表示低优先级。
- **100**：表示高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由条目的下一跳。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的路由条目的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        6 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（默认值），表示IPsec隧道协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
        7 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse4OpenApi<VcoRouteEntry>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'VpnConnectionId' => 
              array (
                'description' => 'IPsec连接的ID。',
                'type' => 'string',
                'example' => 'vco-p0w2jpkhi2eeop6q6****',
              ),
              'RouteDest' => 
              array (
                'description' => '目的路由条目的目标网段。',
                'type' => 'string',
                'example' => '192.168.10.0/24',
              ),
              'NextHop' => 
              array (
                'description' => '目的路由条目的下一跳。',
                'type' => 'string',
                'example' => 'vco-p0w2jpkhi2eeop6q6****',
              ),
              'Weight' => 
              array (
                'description' => '目的路由条目的权重值。

- **0**：表示低优先级。
- **100**：表示高优先级。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'OverlayMode' => 
              array (
                'description' => '隧道协议。

仅取值：**Ipsec**，表示IPsec隧道协议。',
                'type' => 'string',
                'example' => 'Ipsec',
              ),
              'State' => 
              array (
                'description' => '目的路由条目的发布状态。

仅取值：**published**，表示当前路由条目已发布至转发路由器实例中。',
                'type' => 'string',
                'example' => 'published',
              ),
              'CreateTime' => 
              array (
                'description' => '创建目的路由条目的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建目的路由条目时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1658387202664',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CFC4D13B-E680-3985-95B1-87AA155481DF',
              ),
              'Description' => 
              array (
                'description' => '目的路由条目的描述信息。',
                'type' => 'string',
                'example' => 'desctest',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnConnection.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnConnection.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.ConflictSSL',
            'errorMessage' => 'The specified route entry has conflict with SSL client.',
          ),
          6 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidNextHop.NotFound',
            'errorMessage' => 'The specified NextHop does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.RouteDest',
            'errorMessage' => 'The specified RouteDest is invalid',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.InvalidCidrBlock',
            'errorMessage' => 'Operation failed because the specified network block is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'The number of route entries to the VPN gateway in the VPC routing table has reached the quota limit.',
          ),
          11 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          12 => 
          array (
            'errorCode' => 'Resource.PbrRouteQuotaFull',
            'errorMessage' => 'The quota of Policy-based route is full.',
          ),
          13 => 
          array (
            'errorCode' => 'CreatePbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of policy routes exceeds the quota limit.',
          ),
          14 => 
          array (
            'errorCode' => 'CreateDbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of created destination routes exceeds the quota limit.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnConnection',
        'callbackInterval' => 1000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpnConnectionId\\": \\"vco-p0w2jpkhi2eeop6q6****\\",\\n  \\"RouteDest\\": \\"192.168.10.0/24\\",\\n  \\"NextHop\\": \\"vco-p0w2jpkhi2eeop6q6****\\",\\n  \\"Weight\\": 100,\\n  \\"OverlayMode\\": \\"Ipsec\\",\\n  \\"State\\": \\"published\\",\\n  \\"CreateTime\\": 1658387202664,\\n  \\"RequestId\\": \\"CFC4D13B-E680-3985-95B1-87AA155481DF\\",\\n  \\"Description\\": \\"desctest\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVcoRouteEntryResponse>\\n    <VpnConnectionId>vco-p0w2jpkhi2eeop6q6****</VpnConnectionId>\\n    <RouteDest>192.168.10.0/24</RouteDest>\\n    <NextHop>vco-p0w2jpkhi2eeop6q6****</NextHop>\\n    <Weight>100</Weight>\\n    <OverlayMode>Ipsec</OverlayMode>\\n    <State>published</State>\\n    <CreateTime>1658387202664</CreateTime>\\n    <RequestId>CFC4D13B-E680-3985-95B1-87AA155481DF</RequestId>\\n    <Description>desctest</Description>\\n</CreateVcoRouteEntryResponse>","errorExample":""}]',
      'title' => '为IPsec连接添加目的路由条目',
      'description' => '- IPsec连接需已绑定转发路由器实例。具体操作，请参见[CreateTransitRouterVpnAttachment](~~468249~~)。
- 不支持添加目标网段为0.0.0.0/0的目的路由。
- 请勿添加目标网段为100.64.0.0/10、100.64.0.0/10下的子网段或者包含100.64.0.0/10网段的目的路由，该类路由条目会导致控制台无法显示IPsec连接的状态或者导致IPsec连接协商失败。
- **CreateVcoRouteEntry**接口属于异步接口，即系统先返回一个实例ID，但该目的路由条目尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeVpnConnection](~~53046~~)查询目的路由条目的创建状态：
    - 当IPsec连接处于**updating**状态时，表示目的路由条目正在创建中。
    - 当IPsec连接处于**attached**状态时，表示目的路由条目创建成功。
- **CreateVcoRouteEntry**接口不支持在同一IPsec连接下并发创建目的路由条目。',
    ),
    'DeleteVpnAttachment' => 
    array (
      'summary' => '调用DeleteVpnAttachment接口删除IPsec连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w7gtr14m09r9lkr****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'BaseResponse4OpenApi',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '29440C49-398F-3D06-BA8B-E3CD13F3246D',
              ),
              'Code' => 
              array (
                'description' => '当前任务返回的状态码。**200**表示任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '当前任务是否成功执行。

- **true**：已成功执行。
- **false**：未能成功执行。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '当前任务返回的信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnConnection.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error, exception or failure.',
          ),
          2 => 
          array (
            'errorCode' => 'Vco.StatusNotSupport',
            'errorMessage' => 'The current VCO status does not support operations such as modification and deletion.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.	',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden	',
            'errorMessage' => 'User not authorized to operate on the specified resource.	',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound	',
            'errorMessage' => 'The specified vpn connection instance id does not exist.	',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29440C49-398F-3D06-BA8B-E3CD13F3246D\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVpnAttachmentResponse>\\n    <RequestId>29440C49-398F-3D06-BA8B-E3CD13F3246D</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <Message>successful</Message>\\n</DeleteVpnAttachmentResponse>","errorExample":""}]',
      'title' => '删除IPsec连接',
      'description' => '- 如果IPsec连接已绑定了转发路由器实例，在删除IPsec连接前，请先解除IPsec连接和转发路由器实例的绑定关系。具体操作，请参见[DeleteTransitRouterVpnAttachment](~~468251~~)。
- 如果IPsec连接未绑定任何资源，您可以调用`DeleteVpnAttachment`接口直接删除IPsec连接。',
    ),
    'DeleteVcoRouteEntry' => 
    array (
      'summary' => '调用DeleteVcoRouteEntry接口删除IPsec连接下的目的路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w5112fgnl2ihlmf****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的目的路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的目的路由条目的权重值。取值：

- **0**：表示低优先级。
- **100**：表示高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的目的路由条目的下一跳。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w5112fgnl2ihlmf****',
          ),
        ),
        5 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（默认值），表示IPsec隧道协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse4OpenApi',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9208DDD8-0930-3CE6-AF7F-732B4E67B3DD',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnConnection.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnConnection.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidRouteEntry.NotFound',
            'errorMessage' => 'The specified route entry does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9208DDD8-0930-3CE6-AF7F-732B4E67B3DD\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVcoRouteEntryResponse>\\n    <RequestId>9208DDD8-0930-3CE6-AF7F-732B4E67B3DD</RequestId>\\n</DeleteVcoRouteEntryResponse>","errorExample":""}]',
      'title' => '删除IPsec连接下的目的路由条目',
      'description' => '- **DeleteVcoRouteEntry**接口属于异步接口，即系统先返回一个请求ID，但该目的路由条目尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnConnection](~~53046~~)查询目的路由条目的删除状态：
    - 当IPsec连接处于**updating**状态时，表示目的路由条目正在删除中。
    - 当IPsec连接处于**attached**状态时，表示目的路由条目删除成功。
- **DeleteVcoRouteEntry**接口不支持在同一IPsec连接下并发删除目的路由条目。',
    ),
    'ModifyVpnAttachmentAttribute' => 
    array (
      'summary' => '调用ModifyVpnAttachmentAttribute接口修改IPsec连接的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w5112fgnl2ihlmf****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的名称。

名称长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        3 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和本地数据中心互通的VPC侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.1.0/24,192.168.2.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => false,
            'example' => '10.1.1.0/24,10.1.2.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RemoteSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要和VPC互通的本地数据中心侧的网段，用于第二阶段协商。

多个网段之间用半角逗号（,）分隔，例如：192.168.3.0/24,192.168.4.0/24。

关于IPsec连接路由模式的说明：

- 如果**LocalSubnet**和**RemoteSubnet**均输入为0.0.0.0/0，则表示您使用目的路由模式。
- 如果**LocalSubnet**和**RemoteSubnet**均输入具体的网段，则表示您使用感兴趣流模式。',
            'type' => 'string',
            'required' => false,
            'example' => '10.1.3.0/24,10.1.4.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'EffectImmediately',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '选择IPsec连接的配置是否立即生效。 取值：

- **true**：配置完成后系统立即进行IPsec协议协商。
- **false**：当有流量进入时系统才进行IPsec协议协商。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'IkeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第一阶段协商的配置信息：
           
- **IkeConfig.Psk**：预共享密钥，用于VPN网关与本地数据中心之间的身份认证。
    - 密钥长度为1~100个字符，支持数字、大小写英文字母以及以下字符。```~!`@#$%^&*()_-+={}[]|;:\',.<>/?```
    - 若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[DescribeVpnConnection](~~120374~~)接口查询系统自动生成的预共享密钥。 
    > IPsec连接侧的预共享密钥需和本地数据中心侧的认证密钥一致，否则本地数据中心和VPN网关之间无法建立连接。

- **IkeConfig.IkeVersion**：IKE协议的版本。取值：**ikev1**或**ikev2**。

- **IkeConfig.IkeMode**：协商模式。取值：**main**或**aggressive**。

- **IkeConfig.IkeEncAlg**：第一阶段协商的加密算法。取值：**aes**、**aes192**、**aes256**、**des**或**3des**。

- **IkeConfig.IkeAuthAlg**：第一阶段协商的认证算法。取值：**md5**、**sha1**、**sha256**、**sha384**或**sha512**。

- **IkeConfig.IkePfs**：第一阶段协商使用的Diffie-Hellman密钥交换算法。取值：**group1**、**group2**、**group5**或**group14**。

- **IkeConfig.IkeLifetime**：第一阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。

- **IkeConfig.LocalId**：IPsec连接阿里云侧的标识，长度限制为100个字符。

- **IkeConfig.RemoteId**：IPsec连接本地数据中心侧的标识，长度限制为100个字符。   ',
            'type' => 'string',
            'required' => false,
            'example' => '{"Psk":"1234****","IkeVersion":"ikev1","IkeMode":"main","IkeEncAlg":"aes","IkeAuthAlg":"sha1","IkePfs":"group2","IkeLifetime":86400,"LocalId":"47.XX.XX.1","RemoteId":"47.XX.XX.2"}',
          ),
        ),
        7 => 
        array (
          'name' => 'IpsecConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第二阶段协商的配置信息： 

- **IpsecConfig.IpsecEncAlg**：第二阶段协商的加密算法。取值：**aes**、**aes192**、**aes256**、**des**或**3des**。

- **IpsecConfig. IpsecAuthAlg**：第二阶段协商的认证算法。取值：**md5**、**sha1**、**sha256**、**sha384**或**sha512**。

- **IpsecConfig. IpsecPfs**：第二阶段协商使用的Diffie-Hellman密钥交换算法。取值：**disabled**、**group1**、**group2**、**group5**或**group14**。
- **IpsecConfig. IpsecLifetime**：第二阶段协商出的SA的生存周期。单位：秒。取值范围：**0**~**86400**。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IpsecEncAlg":"aes","IpsecAuthAlg":"sha1","IpsecPfs":"group2","IpsecLifetime":86400}',
          ),
        ),
        8 => 
        array (
          'name' => 'BgpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP的配置信息：

- **BgpConfig.EnableBgp**：是否开启BGP功能。取值：
    - **true**：开启BGP功能。
    - **false**：关闭BGP功能。

- **BgpConfig.LocalAsn**：阿里云侧的自治系统号。自治系统号取值范围：**1**~**4294967295**。

    支持按照两段位的格式进行输入，即：前16位比特.后16位比特。每个段位使用十进制输入。

    例如输入123.456，则表示自治系统号：123*65536+456=8061384。

- **BgpConfig.TunnelCidr**：IPsec隧道网段。该网段需是一个在169.254.0.0/16内的掩码长度为30的网段。

- **LocalBgpIp**：阿里云侧的BGP地址。该地址为IPsec隧道网段内的一个IP地址。 

>- 在添加BGP配置前，建议您先了解BGP动态路由功能的工作机制和使用限制。更多信息，请参见[BGP动态路由公告
](~~170235~~)。
>- 建议您使用自治系统号的私有号码与阿里云建立BGP连接。自治系统号的私有号码范围请自行查阅文档。',
            'type' => 'string',
            'required' => false,
            'example' => '{"EnableBgp":"true","LocalAsn":"45104","TunnelCidr":"169.254.11.0/30","LocalBgpIp":"169.254.11.1"}',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置信息：

- **HealthCheckConfig.enable**：是否开启健康检查，取值：
    - **true**：开启健康检查功能。
    - **false**：关闭健康检查功能。

- **HealthCheckConfig.dip**：健康检查的目的IP地址。输入VPC侧通过IPsec连接可以访问的本地数据中心的IP地址。

- **HealthCheckConfig.sip**：健康检查的源IP地址。输入本地数据中心通过IPsec连接可以访问的VPC侧的IP地址。

- **HealthCheckConfig.interval**：健康检查的重试间隔时间，单位：秒。

- **HealthCheckConfig.retry**：健康检查的重试发包次数。

- **HealthCheckConfig.Policy**：健康检查失败时是否撤销已发布的路由。取值：

    - **revoke_route**：撤销已发布的路由。
    - **reserve_route**：不撤销已发布的路由。',
            'type' => 'string',
            'required' => false,
            'example' => '{"enable":"true","dip":"192.168.1.1","sip":"10.1.1.1","interval":"3","retry":"3","Policy": "revoke_route"}',
          ),
        ),
        10 => 
        array (
          'name' => 'AutoConfigRoute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动配置路由。取值：

- **true**：自动配置路由。

- **false**：不自动配置路由。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'EnableDpd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启DPD（对等体存活检测）功能。取值：

- **true**：开启DPD功能。IPsec发起端会发送DPD报文用来检测对端的设备是否存活，如果在设定时间内未收到正确回应则认为对端已经断线，IPsec将删除ISAKMP SA和相应的IPsec SA，安全隧道同样也会被删除。

- **false**：不开启DPD功能，IPsec发起端不会发送DPD探测报文。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'EnableNatTraversal',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启NAT穿越功能。取值：

- **true**：开启NAT穿越功能。开启后，IKE协商过程会删除对UDP端口号的验证过程，同时实现对VPN隧道中NAT网关设备的发现功能。

- **false**：不开启NAT穿越功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'RemoteCaCert',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '国密型VPN网关创建IPsec连接时，对端的CA证书。',
            'type' => 'string',
            'required' => false,
            'example' => 'c20ycDI1NnYxIENBIChURVNUIFN****',
          ),
        ),
        14 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        15 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接的网络类型。取值：
- **public**：公网，表示IPsec连接通过公网建立加密通信通道。
- **private**：私网，表示IPsec连接通过私网建立加密通信通道。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        16 => 
        array (
          'name' => 'CustomerGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接关联的用户网关实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'cgw-p0w2jemrcj5u61un8****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse4OpenApi<VpnConnection>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'VpnConnectionId' => 
              array (
                'description' => 'IPsec连接ID。',
                'type' => 'string',
                'example' => 'vco-p0w5112fgnl2ihlmf****',
              ),
              'CustomerGatewayId' => 
              array (
                'description' => 'IPsec连接绑定的用户网关ID。',
                'type' => 'string',
                'example' => 'cgw-p0w2jemrcj5u61un8****',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'IPsec连接绑定的VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-p0wa1c1018pmeb6cu****',
              ),
              'Name' => 
              array (
                'description' => 'IPsec连接的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'Description' => 
              array (
                'description' => 'IPsec连接的描述信息。',
                'type' => 'string',
                'example' => 'desctest',
              ),
              'LocalSubnet' => 
              array (
                'description' => '需要和本地数据中心互通的VPC侧的网段。',
                'type' => 'string',
                'example' => '10.1.1.0/24,10.1.2.0/24',
              ),
              'RemoteSubnet' => 
              array (
                'description' => '需要和VPC互通的本地数据中心侧的网段。',
                'type' => 'string',
                'example' => '10.1.3.0/24,10.1.4.0/24',
              ),
              'IkeConfig' => 
              array (
                'description' => '第一阶段协商的配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Psk' => 
                  array (
                    'description' => '预共享密钥，用于VPN网关与本地数据中心之间的身份认证。

> IPsec连接侧的预共享密钥需和本地数据中心侧的认证密钥一致，否则本地数据中心和VPN网关之间无法建立连接。

',
                    'type' => 'string',
                    'example' => '1234***',
                  ),
                  'IkeVersion' => 
                  array (
                    'description' => 'IKE协议的版本。

',
                    'type' => 'string',
                    'example' => 'ikev1',
                  ),
                  'IkeMode' => 
                  array (
                    'description' => '协商模式。',
                    'type' => 'string',
                    'example' => 'main',
                  ),
                  'IkeEncAlg' => 
                  array (
                    'description' => '第一阶段协商的加密算法。

',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'IkeAuthAlg' => 
                  array (
                    'description' => '第一阶段协商的认证算法。
',
                    'type' => 'string',
                    'example' => 'sha1',
                  ),
                  'IkePfs' => 
                  array (
                    'description' => '第一阶段协商使用的Diffie-Hellman密钥交换算法。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                  'IkeLifetime' => 
                  array (
                    'description' => '第一阶段协商出的SA的生存周期。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                  'LocalId' => 
                  array (
                    'description' => 'IPsec连接阿里云侧的标识。
',
                    'type' => 'string',
                    'example' => '47.XX.XX.1',
                  ),
                  'RemoteId' => 
                  array (
                    'description' => 'IPsec连接本地数据中心侧的标识。',
                    'type' => 'string',
                    'example' => '47.XX.XX.2',
                  ),
                ),
              ),
              'IpsecConfig' => 
              array (
                'description' => '第二阶段协商的配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'IpsecEncAlg' => 
                  array (
                    'description' => '第二阶段协商的加密算法。',
                    'type' => 'string',
                    'example' => 'aes',
                  ),
                  'IpsecAuthAlg' => 
                  array (
                    'description' => '第二阶段协商的认证算法。',
                    'type' => 'string',
                    'example' => 'md5',
                  ),
                  'IpsecPfs' => 
                  array (
                    'description' => '第二阶段协商使用的Diffie-Hellman密钥交换算法。',
                    'type' => 'string',
                    'example' => 'group2',
                  ),
                  'IpsecLifetime' => 
                  array (
                    'description' => '第二阶段协商出的SA的生存周期。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '86400',
                  ),
                ),
              ),
              'CreateTime' => 
              array (
                'description' => '创建IPsec连接的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建IPsec连接时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1658201810000',
              ),
              'EffectImmediately' => 
              array (
                'description' => 'IPsec连接的配置是否立即生效。 

- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Status' => 
              array (
                'description' => 'IPsec连接的状态。

- **ike_sa_not_established**：第一阶段协商失败。

- **ike_sa_established**：第一阶段协商成功。

- **ipsec_sa_not_established**：第二阶段协商失败。

- **ipsec_sa_established**：第二阶段协商成功。',
                'type' => 'string',
                'example' => 'ike_sa_not_established',
              ),
              'VcoHealthCheck' => 
              array (
                'description' => 'IPsec连接的健康检查配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Enable' => 
                  array (
                    'description' => 'IPsec连接是否已开启健康检查功能。

- **true**：已开启。
- **false**：未开启。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'Sip' => 
                  array (
                    'description' => '健康检查的源IP地址。',
                    'type' => 'string',
                    'example' => '10.1.1.1',
                  ),
                  'Dip' => 
                  array (
                    'description' => '健康检查的目的IP地址。',
                    'type' => 'string',
                    'example' => '192.168.1.1',
                  ),
                  'Interval' => 
                  array (
                    'description' => '健康检查的重试间隔时间。单位：秒。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Retry' => 
                  array (
                    'description' => '健康检查的重试发包次数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Policy' => 
                  array (
                    'description' => '健康检查失败时是否撤销已发布的路由。

- **revoke_route**：撤销已发布的路由。
- **reserve_route**：不撤销已发布的路由。',
                    'type' => 'string',
                    'example' => 'revoke_route',
                  ),
                ),
              ),
              'EnableDpd' => 
              array (
                'description' => 'IPsec连接是否已开启DPD功能。

- **true**：已开启。
- **false**：未开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'EnableNatTraversal' => 
              array (
                'description' => 'IPsec连接是否已开启NAT穿越功能。

- **true**：已开启。
- **false**：未开启。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'VpnBgpConfig' => 
              array (
                'description' => 'IPsec连接的BGP配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'EnableBgp' => 
                  array (
                    'description' => 'IPsec连接是否已开启BGP功能。

- **true**：已开启。
- **false**：未开启。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'TunnelCidr' => 
                  array (
                    'description' => 'IPsec隧道网段。',
                    'type' => 'string',
                    'example' => '169.254.11.0/30',
                  ),
                  'LocalBgpIp' => 
                  array (
                    'description' => '阿里云侧的BGP IP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.1',
                  ),
                  'PeerBgpIp' => 
                  array (
                    'description' => '本地数据中心侧的BGP IP地址。',
                    'type' => 'string',
                    'example' => '169.254.11.2',
                  ),
                  'LocalAsn' => 
                  array (
                    'description' => '阿里云侧的自治系统号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '45104',
                  ),
                  'PeerAsn' => 
                  array (
                    'description' => '本地数据中心侧的自治系统号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '65535',
                  ),
                  'Status' => 
                  array (
                    'description' => 'BGP的协商状态。

- **success**：正常。
- **false**：异常。',
                    'type' => 'string',
                    'example' => 'false',
                  ),
                ),
              ),
              'AttachType' => 
              array (
                'description' => 'IPsec连接绑定的资源类型。

- **CEN**：表示IPsec连接绑定了转发路由器实例。
- **VPNGW**：表示IPsec连接绑定了VPN网关实例。
- **NO_ASSOCIATED**：表示IPsec连接未绑定任何资源。',
                'type' => 'string',
                'example' => 'CEN',
              ),
              'NetworkType' => 
              array (
                'description' => 'IPsec连接的网络类型。
- **public**：公网。
- **private**：私网。',
                'type' => 'string',
                'example' => 'public',
              ),
              'AttachInstanceId' => 
              array (
                'description' => 'IPsec连接绑定的转发路由器实例所属的云企业网实例ID。',
                'type' => 'string',
                'example' => 'cen-c2r3m3zxkumoqz****',
              ),
              'Spec' => 
              array (
                'description' => 'IPsec连接的带宽规格。

返回值中**M**表示单位**Mbps**。',
                'type' => 'string',
                'example' => '1000M',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'IPsec连接所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '35822A84-867F-3936-A2E6-A4C4E3ED11C0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnConnection.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnConnection.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecPfs',
            'errorMessage' => 'The specified vpn connection ipsec Ipsec Pfs is not support.',
          ),
          6 => 
          array (
            'errorCode' => 'NotSupportVpnConnectionParameter.IpsecAuthAlg',
            'errorMessage' => 'The specified vpn connection ipsec Auth Alg is not support.',
          ),
          7 => 
          array (
            'errorCode' => 'VpnRouteEntry.BackupRoute',
            'errorMessage' => 'Validate backup route entry failed.',
          ),
          8 => 
          array (
            'errorCode' => 'VpnRouteEntry.InvalidWeight',
            'errorMessage' => 'Invalid route entry weight value.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParameter.TunnelCidr',
            'errorMessage' => 'The parameter TunnelCidr is mandatory when BGP is enabled.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationUnsupported.EnableBgp',
            'errorMessage' => 'Current region does not support enable BGP.',
          ),
          11 => 
          array (
            'errorCode' => 'MissingParam.CustomerGatewayAsn',
            'errorMessage' => 'Asn of customer gateway is mandatory when BGP is enabled.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.LocalAsn',
            'errorMessage' => 'The specified LocalAsn is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.BgpConfig',
            'errorMessage' => 'The specified BgpConfig is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.TunnelCidr',
            'errorMessage' => 'The specified TunnelCidr is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidLocalBgpIp.Malformed',
            'errorMessage' => 'The specified LocalBgpIp is malformed.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.LocalBgpIp',
            'errorMessage' => 'The specified LocalBgpIp is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.RemoteSubnet',
            'errorMessage' => 'The specified "RemoteSubnet" (%s) is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'CustomerGateway.ConflictRouteEntry',
            'errorMessage' => 'The specified customer gateway has conflict with route entry.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.NetworkType',
            'errorMessage' => 'The specified NetworkType (%s) is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidTunnelCidr.Malformed',
            'errorMessage' => 'The specified TunnelCidr is malformed.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          23 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The resources you are operating have reached the upper limit of the quota. Please increase the quota or use other solutions to avoid it according to the VPN operation document.',
          ),
          24 => 
          array (
            'errorCode' => 'CreateDbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of created destination routes exceeds the quota limit.',
          ),
          25 => 
          array (
            'errorCode' => 'CreatePbrRoutesQuotaFull.QuotaFull',
            'errorMessage' => 'The number of policy routes exceeds the quota limit.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpnConnectionId\\": \\"vco-p0w5112fgnl2ihlmf****\\",\\n  \\"CustomerGatewayId\\": \\"cgw-p0w2jemrcj5u61un8****\\",\\n  \\"VpnGatewayId\\": \\"vpn-p0wa1c1018pmeb6cu****\\",\\n  \\"Name\\": \\"nametest\\",\\n  \\"Description\\": \\"desctest\\",\\n  \\"LocalSubnet\\": \\"10.1.1.0/24,10.1.2.0/24\\",\\n  \\"RemoteSubnet\\": \\"10.1.3.0/24,10.1.4.0/24\\",\\n  \\"IkeConfig\\": {\\n    \\"Psk\\": \\"1234***\\",\\n    \\"IkeVersion\\": \\"ikev1\\",\\n    \\"IkeMode\\": \\"main\\",\\n    \\"IkeEncAlg\\": \\"aes\\",\\n    \\"IkeAuthAlg\\": \\"sha1\\",\\n    \\"IkePfs\\": \\"group2\\",\\n    \\"IkeLifetime\\": 86400,\\n    \\"LocalId\\": \\"47.XX.XX.1\\",\\n    \\"RemoteId\\": \\"47.XX.XX.2\\"\\n  },\\n  \\"IpsecConfig\\": {\\n    \\"IpsecEncAlg\\": \\"aes\\",\\n    \\"IpsecAuthAlg\\": \\"md5\\",\\n    \\"IpsecPfs\\": \\"group2\\",\\n    \\"IpsecLifetime\\": 86400\\n  },\\n  \\"CreateTime\\": 1658201810000,\\n  \\"EffectImmediately\\": false,\\n  \\"Status\\": \\"ike_sa_not_established\\",\\n  \\"VcoHealthCheck\\": {\\n    \\"Enable\\": \\"true\\",\\n    \\"Sip\\": \\"10.1.1.1\\",\\n    \\"Dip\\": \\"192.168.1.1\\",\\n    \\"Interval\\": 3,\\n    \\"Retry\\": 3,\\n    \\"Policy\\": \\"revoke_route\\"\\n  },\\n  \\"EnableDpd\\": true,\\n  \\"EnableNatTraversal\\": true,\\n  \\"VpnBgpConfig\\": {\\n    \\"EnableBgp\\": \\"true\\",\\n    \\"TunnelCidr\\": \\"169.254.11.0/30\\",\\n    \\"LocalBgpIp\\": \\"169.254.11.1\\",\\n    \\"PeerBgpIp\\": \\"169.254.11.2\\",\\n    \\"LocalAsn\\": 45104,\\n    \\"PeerAsn\\": 65535,\\n    \\"Status\\": \\"false\\"\\n  },\\n  \\"AttachType\\": \\"CEN\\",\\n  \\"NetworkType\\": \\"public\\",\\n  \\"AttachInstanceId\\": \\"cen-c2r3m3zxkumoqz****\\",\\n  \\"Spec\\": \\"1000M\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\",\\n  \\"RequestId\\": \\"35822A84-867F-3936-A2E6-A4C4E3ED11C0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVpnAttachmentAttributeResponse>\\n    <VpnConnectionId>vco-p0w5112fgnl2ihlmf****</VpnConnectionId>\\n    <CustomerGatewayId>cgw-p0w2jemrcj5u61un8****</CustomerGatewayId>\\n    <Name>nametest</Name>\\n    <Description>desctest</Description>\\n    <LocalSubnet>10.1.1.0/24,10.1.2.0/24</LocalSubnet>\\n    <RemoteSubnet>10.1.3.0/24,10.1.4.0/24</RemoteSubnet>\\n    <IkeConfig>\\n        <Psk>1234***</Psk>\\n        <IkeVersion>ikev1</IkeVersion>\\n        <IkeMode>main</IkeMode>\\n        <IkeEncAlg>aes</IkeEncAlg>\\n        <IkeAuthAlg>sha1</IkeAuthAlg>\\n        <IkePfs>group2</IkePfs>\\n        <IkeLifetime>86400</IkeLifetime>\\n        <LocalId>47.XX.XX.1</LocalId>\\n        <RemoteId>47.XX.XX.2</RemoteId>\\n    </IkeConfig>\\n    <IpsecConfig>\\n        <IpsecEncAlg>aes</IpsecEncAlg>\\n        <IpsecAuthAlg>md5</IpsecAuthAlg>\\n        <IpsecPfs>group2</IpsecPfs>\\n        <IpsecLifetime>86400</IpsecLifetime>\\n    </IpsecConfig>\\n    <CreateTime>1658201810000</CreateTime>\\n    <EffectImmediately>false</EffectImmediately>\\n    <Status>ike_sa_not_established</Status>\\n    <VcoHealthCheck>\\n        <Enable>true</Enable>\\n        <Sip>10.1.1.1</Sip>\\n        <Dip>192.168.1.1</Dip>\\n        <Interval>3</Interval>\\n        <Retry>3</Retry>\\n        <Policy>revoke_route</Policy>\\n    </VcoHealthCheck>\\n    <EnableDpd>true</EnableDpd>\\n    <EnableNatTraversal>true</EnableNatTraversal>\\n    <VpnBgpConfig>\\n        <EnableBgp>true</EnableBgp>\\n        <TunnelCidr>169.254.11.0/30</TunnelCidr>\\n        <LocalBgpIp>169.254.11.1</LocalBgpIp>\\n        <PeerBgpIp>169.254.11.2</PeerBgpIp>\\n        <LocalAsn>45104</LocalAsn>\\n        <PeerAsn>65535</PeerAsn>\\n        <Status>false</Status>\\n    </VpnBgpConfig>\\n    <AttachType>CEN</AttachType>\\n    <NetworkType>public</NetworkType>\\n    <AttachInstanceId>cen-c2r3m3zxkumoqz****</AttachInstanceId>\\n    <Spec>1000M</Spec>\\n    <RequestId>35822A84-867F-3936-A2E6-A4C4E3ED11C0</RequestId>\\n</ModifyVpnAttachmentAttributeResponse>","errorExample":""}]',
      'title' => '修改IPsec连接的配置',
      'description' => '- **ModifyVpnAttachmentAttribute**接口属于异步接口，即系统返回一个请求ID，但该IPsec连接的配置尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnConnection](~~53046~~)查询IPsec连接的配置的修改状态：
    - 当IPsec连接处于**updating**状态时，表示IPsec连接的配置正在修改中。
    - 当IPsec连接处于**attached**状态时，表示IPsec连接的配置修改成功。
- **ModifyVpnAttachmentAttribute**接口不支持并发修改IPsec连接的配置。
- 调用**ModifyVpnAttachmentAttribute**接口时：
    - 如果IPsec连接已绑定了转发路由器实例，不支持修改IPsec连接的网关类型。
    - 如果IPsec连接未绑定任何资源，不支持修改IPsec连接的网关类型以及IPsec连接关联的用户网关实例。',
    ),
    'ModifyVcoRouteEntryWeight' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteDest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改的目的路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改的目的路由条目的权重值。取值：

- **0**：表示低优先级。
- **100**：表示高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'NewWeight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改的目的路由条目新的权重值。取值：

- **0**：表示低优先级。
- **100**：表示高优先级。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改的目的路由条目的下一跳。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        6 => 
        array (
          'name' => 'OverlayMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '隧道协议。仅取值：**Ipsec**（默认值），表示IPsec隧道协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipsec',
          ),
        ),
        7 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResponse4OpenApi',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9496F8A-82F4-3130-A51A-2266ACC799B4',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnConnection.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnConnection.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnRouteEntry.AlreadyExists',
            'errorMessage' => 'The specified route entry is already exist.',
          ),
          4 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          5 => 
          array (
            'errorCode' => 'TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9496F8A-82F4-3130-A51A-2266ACC799B4\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVcoRouteEntryWeightResponse>\\n    <RequestId>9496F8A-82F4-3130-A51A-2266ACC799B4</RequestId>\\n</ModifyVcoRouteEntryWeightResponse>","errorExample":""}]',
      'title' => '修改IPsec连接下目的路由条目的权重值',
      'summary' => '调用ModifyVcoRouteEntryWeight接口修改IPsec连接下目的路由条目的权重值。',
      'description' => '- **ModifyVcoRouteEntryWeight**接口属于异步接口，即系统先返回一个请求ID，但该目的路由条目的权重值尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnConnection](~~53046~~)查询目的路由条目的权重值的修改状态：
    - 当IPsec连接处于**updating**状态时，表示目的路由条目的权重值正在修改中。
    - 当IPsec连接处于**attached**状态时，表示目的路由条目的权重值修改成功。
- **ModifyVcoRouteEntryWeight**接口不支持在同一IPsec连接下并发修改目的路由条目的权重值。',
    ),
    'DescribeVpnAttachments' => 
    array (
      'summary' => '调用DescribeVpnAttachments接口查询已绑定转发路由器实例的IPsec连接的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。默认值：**10**。取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。

> 如果您不输入IPsec连接ID，系统默认查询当前地域下所有已绑定转发路由器实例的IPsec连接的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        4 => 
        array (
          'name' => 'AttachType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接绑定的资源类型。默认值：**CEN**。

仅取值：**CEN**，表示查询已绑定转发路由器实例的IPsec连接的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'CEN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9F0725BB-186A-3564-91C3-AAE48042F853',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VpnAttachments' => 
              array (
                'description' => '已绑定转发路由器实例的IPsec连接的信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '已绑定转发路由器实例的IPsec连接的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => 'IPsec连接ID。',
                      'type' => 'string',
                      'example' => 'vco-p0w2jpkhi2eeop6q6****',
                    ),
                    'Name' => 
                    array (
                      'description' => 'IPsec连接的名称。',
                      'type' => 'string',
                      'example' => 'nametest1',
                    ),
                    'Description' => 
                    array (
                      'description' => 'IPsec连接的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'AttachType' => 
                    array (
                      'description' => 'IPsec连接绑定的资源类型。仅取值：**CEN**，表示当前IPsec连接绑定了转发路由器实例。',
                      'type' => 'string',
                      'example' => 'CEN',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => 'IPsec连接绑定的转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-p0wkh4yryb1dnanqw****',
                    ),
                    'TransitRouterName' => 
                    array (
                      'description' => '转发路由器实例的名称。',
                      'type' => 'string',
                      'example' => 'nametest2',
                    ),
                    'CrossAccountAuthorized' => 
                    array (
                      'description' => 'IPsec连接是否绑定了跨账号的转发路由器实例。

- **true**：是。
- **false**：否。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.TagKey',
            'errorMessage' => 'The specified parameter TagKey is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Duplicated.TagKey',
            'errorMessage' => 'The specified parameter TagKey is duplicated.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9F0725BB-186A-3564-91C3-AAE48042F853\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VpnAttachments\\": [\\n    {\\n      \\"InstanceId\\": \\"vco-p0w2jpkhi2eeop6q6****\\",\\n      \\"Name\\": \\"nametest1\\",\\n      \\"Description\\": \\"desctest\\",\\n      \\"AttachType\\": \\"CEN\\",\\n      \\"TransitRouterId\\": \\"tr-p0wkh4yryb1dnanqw****\\",\\n      \\"TransitRouterName\\": \\"nametest2\\",\\n      \\"CrossAccountAuthorized\\": false\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnAttachmentsResponse>\\n    <RequestId>9F0725BB-186A-3564-91C3-AAE48042F853</RequestId>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VpnAttachments>\\n        <InstanceId>vco-p0w2jpkhi2eeop6q6****</InstanceId>\\n        <Name>nametest1</Name>\\n        <AttachType>CEN</AttachType>\\n        <TransitRouterId>tr-p0wkh4yryb1dnanqw****</TransitRouterId>\\n        <TransitRouterName>nametest2</TransitRouterName>\\n        <CrossAccountAuthorized>false</CrossAccountAuthorized>\\n    </VpnAttachments>\\n</DescribeVpnAttachmentsResponse>","errorExample":""}]',
      'title' => '查询已绑定转发路由器实例的IPsec连接的配置信息',
    ),
    'DescribeVcoRouteEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteEntryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目类型。取值：

- **custom**（默认值）：目的路由条目。
- **bgp**：BGP路由条目。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。默认值：**10**。取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'PlainResponse4OpenApi<DescribeVcoRouteEntriesResponse>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'VcoRouteEntries' => 
              array (
                'description' => '路由条目信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '路由条目信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpnConnectionId' => 
                    array (
                      'description' => 'IPsec连接ID。',
                      'type' => 'string',
                      'example' => 'vco-p0w2jpkhi2eeop6q6****',
                    ),
                    'RouteDest' => 
                    array (
                      'description' => '路由条目的目标网段。',
                      'type' => 'string',
                      'example' => '192.168.10.0/24',
                    ),
                    'NextHop' => 
                    array (
                      'description' => '路由条目的下一跳。',
                      'type' => 'string',
                      'example' => 'vco-p0w2jpkhi2eeop6q6****',
                    ),
                    'Weight' => 
                    array (
                      'description' => '目的路由条目的权重值。

- **0**：表示低优先级。
- **100**：表示高优先级。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                    'State' => 
                    array (
                      'description' => '路由条目的状态。

- **published**：表示当前目的路由条目已发布至转发路由器实例中。
- **Active**：表示当前BGP路由条目可用。',
                      'type' => 'string',
                      'example' => 'published',
                    ),
                    'RouteEntryType' => 
                    array (
                      'description' => '路由条目类型。

- **custom**：表示当前路由条目为目的路由条目。
- **bgp**：表示当前路由条目为BGP路由条目。',
                      'type' => 'string',
                      'example' => 'custom',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建目的路由条目的时间戳。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建目的路由条目时的总时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1658217008000',
                    ),
                    'AsPath' => 
                    array (
                      'description' => 'BGP路由条目经过的自治系统号列表。',
                      'type' => 'string',
                      'example' => '[12000]',
                    ),
                    'Community' => 
                    array (
                      'description' => 'BGP路由条目携带的Community值。',
                      'type' => 'string',
                      'example' => '65535:65510',
                    ),
                    'Source' => 
                    array (
                      'description' => 'BGP路由条目的来源。

- **CLOUD**：表示当前BGP路由条目是IPsec连接通过转发路由器学习到的。
- **VPN_BGP**：表示当前BGP路由条目是IPsec连接从本地数据中心学习到的。',
                      'type' => 'string',
                      'example' => 'CLOUD',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E18980E8-C8C2-31BD-8156-AE2BBDEC87E1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.RouteEntryType',
            'errorMessage' => 'The specified RouteEntryType is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Vco.StatusNotSupport',
            'errorMessage' => 'The current VPN connection state does not support this operation.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnConnectionInstanceId.NotFound',
            'errorMessage' => 'The specified vpn connection instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"VcoRouteEntries\\": [\\n    {\\n      \\"VpnConnectionId\\": \\"vco-p0w2jpkhi2eeop6q6****\\",\\n      \\"RouteDest\\": \\"192.168.10.0/24\\",\\n      \\"NextHop\\": \\"vco-p0w2jpkhi2eeop6q6****\\",\\n      \\"Weight\\": 100,\\n      \\"State\\": \\"published\\",\\n      \\"RouteEntryType\\": \\"custom\\",\\n      \\"CreateTime\\": 1658217008000,\\n      \\"AsPath\\": \\"[12000]\\",\\n      \\"Community\\": \\"65535:65510\\",\\n      \\"Source\\": \\"CLOUD\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"E18980E8-C8C2-31BD-8156-AE2BBDEC87E1\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeVcoRouteEntriesResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>E18980E8-C8C2-31BD-8156-AE2BBDEC87E1</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <VcoRouteEntries>\\n        <RouteDest>192.168.10.0/24</RouteDest>\\n        <NextHop>vco-p0w2jpkhi2eeop6q6****</NextHop>\\n        <State>published</State>\\n        <RouteEntryType>custom</RouteEntryType>\\n        <CreateTime>1658217008000</CreateTime>\\n        <VpnConnectionId>vco-p0w2jpkhi2eeop6q6****</VpnConnectionId>\\n        <Weight>100</Weight>\\n    </VcoRouteEntries>\\n</DescribeVcoRouteEntriesResponse>","errorExample":""}]',
      'title' => '查询IPsec连接下路由条目的信息',
      'summary' => '调用DescribeVcoRouteEntries接口查询IPsec连接下路由条目的信息。',
    ),
    'CheckVpnBgpEnabled' => 
    array (
      'summary' => '调用CheckVpnBgpEnabled接口查询IPsec连接所属的地域是否支持BGP功能。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DF448D2E-215D-334F-B10D-7C3B087EF996',
              ),
              'BgpEnabled' => 
              array (
                'description' => '当前地域是否支持BGP功能。

- **true**：支持。
- **false**：不支持。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DF448D2E-215D-334F-B10D-7C3B087EF996\\",\\n  \\"BgpEnabled\\": true\\n}","errorExample":""},{"type":"xml","example":"<CheckVpnBgpEnabledResponse>\\n    <RequestId>DF448D2E-215D-334F-B10D-7C3B087EF996</RequestId>\\n    <BgpEnabled>true</BgpEnabled>\\n</CheckVpnBgpEnabledResponse>","errorExample":""}]',
      'title' => '查询IPsec连接所属的地域是否支持BGP功能',
    ),
    'DescribeVpnCrossAccountAuthorizations' => 
    array (
      'summary' => '调用DescribeVpnCrossAccountAuthorizations接口查询IPsec连接的跨账号授权信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnConnectionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vco-p0w2jpkhi2eeop6q6****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。默认值：**10**。取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DB04E39A-6F0C-36AC-BCA0-B6D371B90062',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'CrossAccountAuthorizations' => 
              array (
                'description' => 'IPsec连接跨账号授权信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IPsec连接跨账号授权信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpnConnectionId' => 
                    array (
                      'description' => 'IPsec连接ID。',
                      'type' => 'string',
                      'example' => 'vco-p0w2jpkhi2eeop6q6****',
                    ),
                    'BindUid' => 
                    array (
                      'description' => 'IPsec连接授权的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'BindProduct' => 
                    array (
                      'description' => 'IPsec连接授权的资源类型。

仅取值：**CEN**，表示IPsec连接向跨账号的云企业网实例授权，IPsec连接可被绑定至跨账号云企业网实例下的转发路由器实例。',
                      'type' => 'string',
                      'example' => 'CEN',
                    ),
                    'BindInstance' => 
                    array (
                      'description' => 'IPsec连接授权的云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-vv8h0t3klfpaae****',
                    ),
                    'AliUid' => 
                    array (
                      'description' => 'IPsec连接所属的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1250123456123456',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => 'IPsec连接创建跨账号授权的时间戳。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建跨账号授权时的总时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1658201810000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DB04E39A-6F0C-36AC-BCA0-B6D371B90062\\",\\n  \\"TotalCount\\": 1,\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"CrossAccountAuthorizations\\": [\\n    {\\n      \\"VpnConnectionId\\": \\"vco-p0w2jpkhi2eeop6q6****\\",\\n      \\"BindUid\\": 1210123456123456,\\n      \\"BindProduct\\": \\"CEN\\",\\n      \\"BindInstance\\": \\"cen-vv8h0t3klfpaae****\\",\\n      \\"AliUid\\": 1250123456123456,\\n      \\"CreationTime\\": 1658201810000\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnCrossAccountAuthorizationsResponse>\\n    <RequestId>DB04E39A-6F0C-36AC-BCA0-B6D371B90062</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <CrossAccountAuthorizations>\\n        <VpnConnectionId>vco-p0w2jpkhi2eeop6q6****</VpnConnectionId>\\n        <BindUid>1210123456123456</BindUid>\\n        <BindProduct>CEN</BindProduct>\\n        <BindInstance>cen-vv8h0t3klfpaae****</BindInstance>\\n        <AliUid>1250123456123456</AliUid>\\n        <CreationTime>1658201810000</CreationTime>\\n    </CrossAccountAuthorizations>\\n</DescribeVpnCrossAccountAuthorizationsResponse>","errorExample":""}]',
      'title' => '查询IPsec连接的跨账号授权信息',
    ),
    'CreateSslVpnClientCert' => 
    array (
      'summary' => '调用CreateSslVpnClientCert接口创建SSL-VPN客户端证书。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' SSL-VPN服务端的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vss-m5et0q3iy1qex328w****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端证书的名称。

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'SslVpnClientCert1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
              'Name' => 
              array (
                'description' => 'SSL-VPN客户端证书的名称。',
                'type' => 'string',
                'example' => 'SslVpnClientCert',
              ),
              'SslVpnClientCertId' => 
              array (
                'description' => 'SSL-VPN客户端证书的ID。',
                'type' => 'string',
                'example' => 'vsc-m5euof6s5jy8vs5kd****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          4 => 
          array (
            'errorCode' => 'SslVpnClientCreateTimes.ReachLimits',
            'errorMessage' => 'The number of client cert creation operations reaches the upper limit.',
          ),
          5 => 
          array (
            'errorCode' => 'CreateSslCertsQuotaFull.QuotaFull',
            'errorMessage' => 'Create the number of SSL certificates that exceed the quota limit.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSslVpnServerId.NotFound',
            'errorMessage' => 'The specified SSL VPN server id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 1000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\",\\n  \\"Name\\": \\"SslVpnClientCert\\",\\n  \\"SslVpnClientCertId\\": \\"vsc-m5euof6s5jy8vs5kd****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSslVpnClientCertResponse>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n    <Name>SslVpnClientCert</Name>\\n    <SslVpnClientCertId>vsc-m5euof6s5jy8vs5kd****</SslVpnClientCertId>\\n</CreateSslVpnClientCertResponse>","errorExample":""}]',
      'title' => '创建SSL-VPN客户端证书',
      'description' => '创建SSL-VPN客户端证书前，请确保VPN网关实例下已经创建了SSL-VPN服务端。具体操作，请参见[CreateSslVpnServer](~~2794075~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSslVpnClientCert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN客户端证书所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnClientCertId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' SSL-VPN客户端证书的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsc-bp1n8wcf134yl0osr****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSslVpnClientCertId.NotFound',
            'errorMessage' => 'The specified SSL VPN client cert id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}","errorExample":"{\\n  \\"RequestId\\":\\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteSslVpnClientCertResponse>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteSslVpnClientCertResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteSslVpnClientCertResponse>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteSslVpnClientCertResponse>"}]',
      'title' => '删除SSL-VPN客户端证书',
      'summary' => '调用DeleteSslVpnClientCert接口删除SSL-VPN客户端证书。',
      'description' => '- 删除SSL-VPN客户端证书会导致SSL服务端下所有客户端的SSL-VPN连接断开，如果客户端需要继续使用SSL-VPN连接，客户端需重新发起SSL-VPN连接。

  例如SSL服务端下创建了SSL-VPN客户端证书1和SSL-VPN客户端证书2，在删除SSL-VPN客户端证书1后，SSL-VPN客户端证书1和SSL-VPN客户端证书2下关联的所有客户端都会断开SSL-VPN连接。

  - 如果SSL-VPN客户端证书1关联的客户端需要继续使用SSL-VPN连接，客户端需要安装其他证书然后重新发起SSL-VPN连接。

  - 如果SSL-VPN客户端证书2关联的客户端需要继续使用SSL-VPN连接，客户端重新发起SSL-VPN连接即可。
- **DeleteSslVpnClientCert**接口属于异步接口，即系统返回一个请求ID，但该SSL-VPN客户端证书尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)查询SSL-VPN服务端关联的VPN网关实例的状态，来确认SSL-VPN客户端证书的删除状态：
    - 当VPN网关实例处于**updating**状态时，表示SSL-VPN客户端证书正在删除中。
    - 当VPN网关实例处于**active**状态时，表示SSL-VPN客户端证书删除成功。
- **DeleteSslVpnClientCert**接口不支持在同一VPN网关实例下并发删除SSL-VPN客户端证书。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySslVpnClientCert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN客户端证书所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnClientCertId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' SSL-VPN客户端证书的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsc-bp1n8wcf134yl0osrc****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN客户端证书的新名称。该参数不能为空。

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'cert2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
              'Name' => 
              array (
                'description' => 'SSL-VPN客户端证书的名称。',
                'type' => 'string',
                'example' => 'cert2',
              ),
              'SslVpnClientCertId' => 
              array (
                'description' => 'SSL-VPN客户端证书的ID。',
                'type' => 'string',
                'example' => 'vsc-bp1n8wcf134yl0osr****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSslVpnClientCertId.NotFound',
            'errorMessage' => 'The specified SSL VPN client cert id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\",\\n  \\"Name\\": \\"cert2\\",\\n  \\"SslVpnClientCertId\\": \\"vsc-bp1n8wcf134yl0osr****\\"\\n}","errorExample":"{\\n  \\"SslVpnClientCertId\\": \\"vsc-bp1n8wcf134yl0osrcg98\\",\\n  \\"Name\\": \\"test\\",\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifySslVpnClientCertResponse>\\n    <SslVpnClientCertId>vsc-bp1n8wcf134yl0osr****</SslVpnClientCertId>\\n    <Name>cert2</Name>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</ModifySslVpnClientCertResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifySslVpnClientCertResponse>\\n    <SslVpnClientCertId>vsc-bp1n8wcf134yl0osrcg98</SslVpnClientCertId>\\n    <Name>test</Name>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</ModifySslVpnClientCertResponse>"}]',
      'title' => '修改SSL-VPN客户端证书的名称',
      'summary' => '调用ModifySslVpnClientCert接口修改SSL-VPN客户端证书的名称。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSslVpnClientCerts' => 
    array (
      'summary' => '调用DescribeSslVpnClientCerts接口查询已创建的SSL客户端证书。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的SSL客户端证书所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SslVpnServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL服务端ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vss-bp18q7hzj6largv4v****',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnClientCertId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL客户端证书ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsc-bp1n8wcf134yl0osr****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL客户端证书的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'cert1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值：**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值：**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL客户端证书所属的资源组ID。

SSL客户端证书与其关联的SSL服务端的资源组相同。您可以调用[DescribeSslVpnServers](~~2794078~~)接口查询SSL服务端所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'SslVpnClientCertKeys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SslVpnClientCertKey' => 
                  array (
                    'description' => 'SSL客户端证书的信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'SSL客户端证书的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '客户端证书的状态。

- **expiring-soon**：证书将在1周后过期。
   
- **normal**：正常。   

- **expired**：已过期。   
         ',
                          'type' => 'string',
                          'example' => 'normal',
                        ),
                        'EndTime' => 
                        array (
                          'description' => 'SSL客户端证书的到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至SSL客户端证书到期时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1494966335000',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => 'SSL客户端证书的创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建SSL客户端证书时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1492747187000',
                        ),
                        'SslVpnClientCertId' => 
                        array (
                          'description' => 'SSL客户端证书的ID。',
                          'type' => 'string',
                          'example' => 'vsc-bp1n8wcf134yl0osr****',
                        ),
                        'SslVpnServerId' => 
                        array (
                          'description' => 'SSL服务端ID。',
                          'type' => 'string',
                          'example' => 'vss-bp18q7hzj6largv4v****',
                        ),
                        'Name' => 
                        array (
                          'description' => 'SSL客户端证书的名称。',
                          'type' => 'string',
                          'example' => 'cert1',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'SSL客户端证书的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'SSL客户端证书所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                          'type' => 'string',
                          'example' => 'rg-acfmzs372yg****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"SslVpnClientCertKeys\\": {\\n    \\"SslVpnClientCertKey\\": [\\n      {\\n        \\"Status\\": \\"normal\\",\\n        \\"EndTime\\": 1494966335000,\\n        \\"CreateTime\\": 1492747187000,\\n        \\"SslVpnClientCertId\\": \\"vsc-bp1n8wcf134yl0osr****\\",\\n        \\"SslVpnServerId\\": \\"vss-bp18q7hzj6largv4v****\\",\\n        \\"Name\\": \\"cert1\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSslVpnClientCertsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <SslVpnClientCertKeys>\\n        <Status>normal</Status>\\n        <EndTime>1494966335000</EndTime>\\n        <CreateTime>1492747187000</CreateTime>\\n        <SslVpnClientCertId>vsc-bp1n8wcf134yl0osr****</SslVpnClientCertId>\\n        <SslVpnServerId>vss-bp18q7hzj6largv4v****</SslVpnServerId>\\n        <Name>cert1</Name>\\n        <RegionId>cn-hangzhou</RegionId>\\n    </SslVpnClientCertKeys>\\n</DescribeSslVpnClientCertsResponse>","errorExample":""}]',
      'title' => '查询已创建的SSL-VPN客户端证书',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSslVpnClientCert' => 
    array (
      'summary' => '调用DescribeSslVpnClientCert接口查询指定的SSL客户端证书信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的SSL客户端证书所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SslVpnClientCertId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的SSL客户端证书的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsc-bp17r58rjf5r1gjyr****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => 'SSL客户端证书的状态。

- **expiring-soon**：证书将在1周后过期。

- **normal**：正常。 

- **expired**：已过期。',
                'type' => 'string',
                'example' => 'normal',
              ),
              'CreateTime' => 
              array (
                'description' => 'SSL客户端证书的创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建SSL客户端证书时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1552550980000',
              ),
              'ClientKey' => 
              array (
                'description' => '客户端密钥。',
                'type' => 'string',
                'example' => '-----BEGIN RSA PRIVATE KEY-----
MIIEpAI****ZzNFhuM/za==
-----END RSA PRIVATE KEY-----',
              ),
              'RegionId' => 
              array (
                'description' => 'SSL客户端证书所在的地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'ClientConfig' => 
              array (
                'description' => '客户端配置。',
                'type' => 'string',
                'example' => 'client
dev tun
proto tcp
remote 120.XX.XX.33 1194
resolv-retry infinite
nobind
persist-key
persist-tun
ca ca.crt
cert vsc-bp15t7****.crt
key vsc-bp15t7****.key
cipher AES-128-CBC
;comp-lzo
verb 4',
              ),
              'EndTime' => 
              array (
                'description' => 'SSL客户端证书的到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至SSL客户端证书到期时的总时长。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1647158980000',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
              'ClientCert' => 
              array (
                'description' => '客户端证书。',
                'type' => 'string',
                'example' => '-----BEGIN CERTIFICATE-----
MIIDR****A==
-----END CERTIFICATE-----',
              ),
              'CaCert' => 
              array (
                'description' => 'CA证书。',
                'type' => 'string',
                'example' => '-----BEGIN CERTIFICATE-----
MIID****r4w=
-----END CERTIFICATE-----',
              ),
              'SslVpnClientCertId' => 
              array (
                'description' => 'SSL客户端证书的ID。',
                'type' => 'string',
                'example' => 'vsc-bp13k5mp4tg8v3z9b****',
              ),
              'SslVpnServerId' => 
              array (
                'description' => 'SSL服务端ID。',
                'type' => 'string',
                'example' => 'vss-bp155e9yclsg1xgq4****',
              ),
              'Name' => 
              array (
                'description' => 'SSL客户端证书的名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'SSL客户端证书所属的资源组ID。

SSL客户端证书与其关联的SSL服务端的资源组相同。您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The InstanceId is not found.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"normal\\",\\n  \\"CreateTime\\": 1552550980000,\\n  \\"ClientKey\\": \\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEpAI****ZzNFhuM/za==\\\\n-----END RSA PRIVATE KEY-----\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"ClientConfig\\": \\"client\\\\ndev tun\\\\nproto tcp\\\\nremote 120.XX.XX.33 1194\\\\nresolv-retry infinite\\\\nnobind\\\\npersist-key\\\\npersist-tun\\\\nca ca.crt\\\\ncert vsc-bp15t7****.crt\\\\nkey vsc-bp15t7****.key\\\\ncipher AES-128-CBC\\\\n;comp-lzo\\\\nverb 4\\",\\n  \\"EndTime\\": 1647158980000,\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\",\\n  \\"ClientCert\\": \\"-----BEGIN CERTIFICATE-----\\\\nMIIDR****A==\\\\n-----END CERTIFICATE-----\\",\\n  \\"CaCert\\": \\"-----BEGIN CERTIFICATE-----\\\\nMIID****r4w=\\\\n-----END CERTIFICATE-----\\",\\n  \\"SslVpnClientCertId\\": \\"vsc-bp13k5mp4tg8v3z9b****\\",\\n  \\"SslVpnServerId\\": \\"vss-bp155e9yclsg1xgq4****\\",\\n  \\"Name\\": \\"nametest\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSslVpnClientCertResponse>\\n    <Status>normal</Status>\\n    <CreateTime>1552550980000</CreateTime>\\n    <ClientKey>客户端密钥</ClientKey>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <ClientConfig>客户端配置</ClientConfig>\\n    <EndTime>1647158980000</EndTime>\\n    <RequestId>5BE01CD7-5A50-472D-AC14-CA181C5C03BE</RequestId>\\n    <ClientCert>客户端证书</ClientCert>\\n    <CaCert>CA证书</CaCert>\\n    <SslVpnClientCertId>vsc-bp13k5mp4tg8v3z9b****</SslVpnClientCertId>\\n    <SslVpnServerId>vss-bp155e9yclsg1xgq4****</SslVpnServerId>\\n    <Name>nametest</Name>\\n</DescribeSslVpnClientCertResponse>","errorExample":""}]',
      'title' => '查询指定的SSL客户端证书信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSslVpnClients' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'eu-central-1',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpn-gw8gfb947ctddabja****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页可显示的最大条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '885E117D-06A9-38A3-8DD2-40BDAC429FFC',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-gw8gfb947ctddabja****',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页可显示的最大条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RegionId' => 
              array (
                'description' => 'VPN网关实例所属的地域ID。',
                'type' => 'string',
                'example' => 'eu-central-1',
              ),
              'ClientInfoList' => 
              array (
                'description' => '客户端信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '客户端信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => 'SSL-VPN连接的状态。

取值：**online**，表示客户端和阿里云已成功建立SSL-VPN连接。',
                      'type' => 'string',
                      'example' => 'online',
                    ),
                    'PrivateIp' => 
                    array (
                      'description' => '客户端与阿里云建立SSL-VPN连接时，VPN网关为客户端分配的私网IP地址。',
                      'type' => 'string',
                      'example' => '10.10.10.10',
                    ),
                    'SendBytes' => 
                    array (
                      'description' => '指VPN网关通过SSL-VPN连接向客户端发送的流量。单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '57144',
                    ),
                    'ConnectedTime' => 
                    array (
                      'description' => '客户端与阿里云建立SSL-VPN连接时的时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至建立SSL-VPN连接时的总时长。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1670985008000',
                    ),
                    'CommonName' => 
                    array (
                      'description' => '客户端与阿里云建立SSL-VPN连接时，使用的SSL客户端证书。

> 如果客户端使用双因子认证功能与阿里云建立SSL-VPN连接，则当前参数的返回值为客户端的用户名。',
                      'type' => 'string',
                      'example' => 'CN=vsc-gw8gkh6gtilf1whgc****',
                    ),
                    'Ip' => 
                    array (
                      'description' => '客户端与阿里云建立SSL-VPN连接时，客户端实际使用的公网IP地址。',
                      'type' => 'string',
                      'example' => '8.XX.XX.15',
                    ),
                    'ReceiveBytes' => 
                    array (
                      'description' => '指VPN网关通过SSL-VPN连接从客户端接收的流量。单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '60782',
                    ),
                    'Port' => 
                    array (
                      'description' => '客户端与阿里云建立SSL-VPN连接时，客户端实际使用的端口号。',
                      'type' => 'string',
                      'example' => '4****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified instance id does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"885E117D-06A9-38A3-8DD2-40BDAC429FFC\\",\\n  \\"VpnGatewayId\\": \\"vpn-gw8gfb947ctddabja****\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"RegionId\\": \\"eu-central-1\\",\\n  \\"ClientInfoList\\": [\\n    {\\n      \\"Status\\": \\"online\\",\\n      \\"PrivateIp\\": \\"10.10.10.10\\",\\n      \\"SendBytes\\": 57144,\\n      \\"ConnectedTime\\": 1670985008000,\\n      \\"CommonName\\": \\"CN=vsc-gw8gkh6gtilf1whgc****\\",\\n      \\"Ip\\": \\"8.XX.XX.15\\",\\n      \\"ReceiveBytes\\": 60782,\\n      \\"Port\\": \\"4****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSslVpnClientsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>885E117D-06A9-38A3-8DD2-40BDAC429FFC</RequestId>\\n    <PageSize>10</PageSize>\\n    <VpnGatewayId>vpn-gw8gfb947ctddabja****</VpnGatewayId>\\n    <PageNumber>1</PageNumber>\\n    <RegionId>eu-central-1</RegionId>\\n    <ClientInfoList>\\n        <Status>online</Status>\\n        <SendBytes>57144</SendBytes>\\n        <PrivateIp>10.10.10.10</PrivateIp>\\n        <Ip>8.XX.XX.15</Ip>\\n        <Port>4****</Port>\\n        <ConnectedTime>1670985008000</ConnectedTime>\\n        <CommonName>CN=vsc-gw8gkh6gtilf1whgc****</CommonName>\\n        <ReceiveBytes>60782</ReceiveBytes>\\n    </ClientInfoList>\\n</DescribeSslVpnClientsResponse>","errorExample":""}]',
      'title' => '查询SSL-VPN连接的客户端的信息',
      'summary' => '调用DescribeSslVpnClients接口查询指定VPN网关实例下已与阿里云建立SSL-VPN连接的客户端的信息。',
      'description' => '如果您的VPN网关实例是在2022年12月10日之前创建的，则您需要将VPN网关实例升级至最新版才能查看SSL客户端的连接信息。具体操作，请参见[升级VPN网关](~~2671058~~)。

2022年12月10日之后创建的VPN网关实例默认支持查看SSL客户端的连接信息。',
    ),
    'CreateSslVpnServer' => 
    array (
      'summary' => '调用CreateSslVpnServer接口创建SSL-VPN服务端。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' VPN网关的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp1hgim8by0kc9nga****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端的名称。  

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'sslvpnname',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientIpPool',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端网段。

是给客户端虚拟网卡分配访问地址的地址段，不是指客户端已有的内网网段。

当客户端通过SSL-VPN连接访问本端时，VPN网关会从指定的客户端网段中分配一个IP地址给客户端使用，客户端将会使用分配的IP地址访问云上资源。

在您指定客户端网段时需保证客户端网段所包含的IP地址个数是当前VPN网关SSL连接数的4倍及以上。
<details>
<summary>单击查看原因。</summary>
例如您指定的客户端网段为192.168.0.0/24，系统在为客户端分配IP地址时，会先从192.168.0.0/24网段中划分出一个子网掩码为30的子网段，例如192.168.0.4/30，然后从192.168.0.4/30中分配一个IP地址供客户端使用，剩余三个IP地址会被系统占用以保证网络通信，此时一个客户端会耗费4个IP地址。因此，为保证您的客户端均能分配到IP地址，请确保您指定的客户端网段所包含的IP地址个数是VPN网关SSL连接数的4倍及以上。
</details>

<details>
<summary>单击查看不支持配置的网段。</summary>

- 100.64.0.0~100.127.255.255
- 127.0.0.0~127.255.255.255
- 169.254.0.0~169.254.255.255
- 224.0.0.0~239.255.255.255
- 255.0.0.0~255.255.255.255

</details>

<details>
<summary>单击查看每个SSL连接数建议的客户端网段。</summary>

- 若SSL连接数为5，则客户端网段的子网掩码位数建议小于或等于27。例如：10.0.0.0/27、10.0.0.0/26。
- 若SSL连接数为10，则客户端网段的子网掩码位数建议小于或等于26。例如：10.0.0.0/26、10.0.0.0/25。
- 若SSL连接数为20，则客户端网段的子网掩码位数建议小于或等于25。例如：10.0.0.0/25、10.0.0.0/24。
- 若SSL连接数为50，则客户端网段的子网掩码位数建议小于或等于24。例如：10.0.0.0/24、10.0.0.0/23。
- 若SSL连接数为100，则客户端网段的子网掩码位数建议小于或等于23。例如：10.0.0.0/23、10.0.0.0/22。
- 若SSL连接数为200，则客户端网段的子网掩码位数建议小于或等于22。例如：10.0.0.0/22、10.0.0.0/21。
- 若SSL连接数为500，则客户端网段的子网掩码位数建议小于或等于21。例如：10.0.0.0/21、10.0.0.0/20。
- 若SSL连接数为1000，则客户端网段的子网掩码位数建议小于或等于20。例如：10.0.0.0/20、10.0.0.0/19。

</details>

> - 客户端网段的子网掩码位数在16至29位之间。
> - 请确保客户端网段和本端网段不冲突。
> - 在指定客户端网段时，建议您使用10.0.0.0/8、172.16.0.0/12和192.168.0.0/16网段及其子网网段。如果您的客户端网段需要指定为公网网段，您需要将公网网段设置为VPC的用户网段，以确保VPC可以访问到该公网网段。关于用户网段的更多信息，请参见[专有网络FAQ](~~185311~~)。
> - 创建SSL服务端后，系统后台会自动将客户端网段的路由添加在VPC实例的路由表中（控制台默认不显示），请勿再手动将客户端网段的路由添加到VPC实例的路由表，否则会导致SSL-VPN连接流量传输异常。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本端网段。

是客户端通过SSL-VPN连接要访问的地址段。

本端网段可以是VPC的网段、交换机的网段、通过专线和VPC互连的IDC的网段、云服务如对象存储服务OSS（Object Storage Service）等的网段。

本端网段的子网掩码位数在8至32位之间。以下网段不支持指定为本端网段：

- 100.64.0.0~100.127.255.255
- 127.0.0.0~127.255.255.255
- 169.254.0.0~169.254.255.255
- 224.0.0.0~239.255.255.255
- 255.0.0.0~255.255.255.255',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/8',
          ),
        ),
        6 => 
        array (
          'name' => 'Proto',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所使用的协议，取值：

- **TCP**（默认值）：TCP协议。

- **UDP**：UDP协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'UDP',
          ),
        ),
        7 => 
        array (
          'name' => 'Cipher',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN连接使用的加密算法。

- 如果客户端使用Tunnelblick软件或2.4.0及以上版本的OpenVPN软件，则SSL服务端和客户端之间动态协商加密算法，会优先使用双方均支持的最高安全级别的加密算法。您为SSL服务端指定的加密算法不生效。

- 如果客户端使用2.4.0之前版本的OpenVPN软件，则SSL服务端和客户端将使用您为SSL服务端指定的加密算法。SSL服务端支持指定以下加密算法：

  - **AES-128-CBC**（默认值）：AES-128-CBC算法。

  - **AES-192-CBC**：AES-192-CBC算法。

  - **AES-256-CBC**：AES-256-CBC算法。

  - **none**：不使用加密算法。',
            'type' => 'string',
            'required' => false,
            'example' => 'AES-128-CBC',
          ),
        ),
        8 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所使用的端口。端口取值范围：**1**~**65535**。默认值：**1194**。

不支持使用以下端口：**22**、**2222**、**22222**、**9000**、**9001**、**9002**、**7505**、**80**、**443**、**53**、**68**、**123**、**4510**、**4560**、**500**、**4500**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1194',
          ),
        ),
        9 => 
        array (
          'name' => 'Compress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定是否对通信进行压缩， 取值：

- **true**：对通信进行压缩。

- **false**（默认值）：对通信不进行压缩。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'EnableMultiFactorAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启双因子认证。如果您选择开启双因子认证功能，您还需要配置`IDaaSInstanceId`、`IDaaSRegionId`和`IDaaSApplicationId`。取值：

- **true**：开启。

- **false**（默认值）：不开启。

>- 如果您是首次使用双因子认证功能，请先完成[授权](https://ram.console.aliyun.com/role/authorization?request=%7B%22Services%22%3A%5B%7B%22Service%22%3A%22VPN%22%2C%22Roles%22%3A%5B%7B%22RoleName%22%3A%22AliyunVpnAccessingIdaasRole%22%2C%22TemplateId%22%3A%22IdaasRole%22%7D%5D%7D%5D%2C%22ReturnUrl%22%3A%22https%3A%2F%2Fvpc.console.aliyun.com%2Fsslvpn%2Fcn-shanghai%2Fvpn-servers%22%7D)后再创建SSL服务端。
>- IDaaS EIAM 1.0实例不再支持新购。如果您的阿里云账号下存在IDaaS EIAM 1.0实例，开启双因子认证功能后，依旧支持绑定IDaaS EIAM 1.0实例。如果您的阿里云账号下不存在IDaaS EIAM 1.0实例，开启双因子认证功能后，仅支持绑定IDaaS EIAM 2.0实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'IDaaSInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS EIAM实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'idaas-cn-hangzhou-p****',
          ),
        ),
        12 => 
        array (
          'name' => 'IDaaSRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS EIAM实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        13 => 
        array (
          'name' => 'IDaaSApplicationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS应用ID。

- 如果您绑定的是IDaaS EIAM 2.0实例，需输入IDaaS应用ID。
- 如果您绑定的是IDaaS EIAM 1.0实例，无需输入IDaaS应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'app_my6g4qmvnwxzj2f****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SslVpnServerId' => 
              array (
                'description' => 'SSL-VPN服务端的ID。',
                'type' => 'string',
                'example' => 'vss-bp18q7hzj6largv4v****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E98A9651-7098-40C7-8F85-C818D1EBBA85',
              ),
              'Name' => 
              array (
                'description' => 'SSL-VPN服务端的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          4 => 
          array (
            'errorCode' => 'SslVpnServer.AlreadyExist',
            'errorMessage' => 'The SSL VPN server of specified vpn gateway already exists.',
          ),
          5 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          6 => 
          array (
            'errorCode' => 'IpConflict',
            'errorMessage' => 'Client IP pool conflict with local IP range.',
          ),
          7 => 
          array (
            'errorCode' => 'SslVpnServer.AddRouteError',
            'errorMessage' => 'Add route error whose destination is client IP pool, please check vpc route entry and relevant quota.',
          ),
          8 => 
          array (
            'errorCode' => 'ClientIpPool.NetmaskInvalid',
            'errorMessage' => 'The netmask length of client IP pool must be greater than or equal to 16 and less than or equal to 29.',
          ),
          9 => 
          array (
            'errorCode' => 'ClientIpPool.SubnetInvalid',
            'errorMessage' => 'The specified client IP pool cannot be used.',
          ),
          10 => 
          array (
            'errorCode' => 'MissingParameter.IDaaSInstanceId',
            'errorMessage' => 'The input parameter IDaaSInstanceId is mandatory when enable multi-factor authentication.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.NoRamPermission',
            'errorMessage' => 'Vpn Service has no permission to operate your IDaaS instances.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationUnsupported.NotSupportMultiFactorAuth',
            'errorMessage' => 'Current version of the VPN does not support multi-factor authentication.',
          ),
          13 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'The number of route entries to the VPN gateway in the VPC routing table has reached the quota limit.',
          ),
          14 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
          15 => 
          array (
            'errorCode' => 'SslVpnServerPort.Illegal',
            'errorMessage' => 'The server port is not in the range of [1-65535].',
          ),
          16 => 
          array (
            'errorCode' => 'EnableHaCheck.SslVpnServerClientCidrContainsVpcRouteDest',
            'errorMessage' => 'Ssl vpn client cidr contains vpc route prefix. The vpc route prefix is %s.',
          ),
          17 => 
          array (
            'errorCode' => 'VpnGateway.SslVpnDisabled',
            'errorMessage' => 'The VPN gateway has not enabled SSL VPN.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.IDaaSApplicationId',
            'errorMessage' => 'The specified IDaaS application Id is not illegal, the application instance needs to be created based on the dedicated SSL VPN template.',
          ),
          20 => 
          array (
            'errorCode' => 'SslVpnIDaaS2.NotSupport',
            'errorMessage' => 'Current version of the VPN does not support IDaaS2.0.',
          ),
          21 => 
          array (
            'errorCode' => 'MissingParam.IDaaSApplicationId',
            'errorMessage' => 'The input parameter IDaaSApplicationId is mandatory when enable multi-factor authentication.',
          ),
          22 => 
          array (
            'errorCode' => 'MissingParam.IDaaSRegionId',
            'errorMessage' => 'The input parameter IDaaSRegionId is mandatory when enable multi-factor authentication.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIDaaSInstanceId.NotFound',
            'errorMessage' => 'The specified IDaaS instance ID does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidIDaaSApplicationId.NotFound',
            'errorMessage' => 'The specified IDaaS application Id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SslVpnServerId\\": \\"vss-bp18q7hzj6largv4v****\\",\\n  \\"RequestId\\": \\"E98A9651-7098-40C7-8F85-C818D1EBBA85\\",\\n  \\"Name\\": \\"test\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"E98A9651-7098-40C7-8F85-C818D1EBBA85\\",\\n  \\"SslVpnServerId\\": \\"vss-bp18q7hzj6largv4vk2fe\\",\\n  \\"Name\\": \\"test\\"\\n}"},{"type":"xml","example":"<CreateSslVpnServerResponse>\\n    <RequestId>E98A9651-7098-40C7-8F85-C818D1EBBA85</RequestId>\\n    <SslVpnServerId>vss-bp18q7hzj6largv4v****</SslVpnServerId>\\n    <Name>test</Name>\\n</CreateSslVpnServerResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<CreateSslVpnServerResponse>\\n    <RequestId>E98A9651-7098-40C7-8F85-C818D1EBBA85</RequestId>\\n    <SslVpnServerId>vss-bp18q7hzj6largv4vk2fe</SslVpnServerId>\\n    <Name>test</Name>\\n</CreateSslVpnServerResponse>"}]',
      'title' => '创建SSL-VPN服务端',
      'description' => '- **CreateSslVpnServer**接口属于异步接口，即系统先返回一个实例ID，但该SSL-VPN服务端尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)查询VPN网关实例的状态，来确定SSL-VPN服务端的创建状态：
    - 当VPN网关实例处于**updating**状态时，表示SSL-VPN服务端正在创建中。
    - 当VPN网关实例处于**active**状态时，表示SSL-VPN服务端创建成功。
- **CreateSslVpnServer**接口不支持在同一VPN网关下并发创建SSL-VPN服务端。

### 前提条件

- 您已经创建了VPN网关且VPN网关已开启SSL-VPN功能。具体操作，请参见[CreateVpnGateway](~~2794049~~)。
- 如果您需要为SSL服务端开启双因子认证功能，请先确保VPN网关实例支持该功能，您可能需要升级VPN网关实例。更多信息，请参见[SSL-VPN双因子认证支持IDaaS EIAM 2.0](~~2785320~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSslVpnServer' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' SSL-VPN服务端的ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vss-bp18q7hzj6largv4v****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '606998F0-B94D-48FE-8316-ACA81BB230DA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSslVpnServerId.NotFound',
            'errorMessage' => 'The specified SSL VPN server id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}","errorExample":"{\\n  \\"RequestId\\":\\"606998F0-B94D-48FE-8316-ACA81BB230DA\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteSslVpnServerResponse>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteSslVpnServerResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DeleteSslVpnServer>\\n    <RequestId>606998F0-B94D-48FE-8316-ACA81BB230DA</RequestId>\\n</DeleteSslVpnServer>"}]',
      'title' => '删除SSL-VPN服务端',
      'summary' => '调用DeleteSslVpnServer接口删除SSL-VPN服务端，删除SSL-VPN服务端后系统会自动删除SSL-VPN服务端关联的所有SSL客户端证书，安装了这些SSL客户端证书的客户端将会自动断开SSL-VPN连接。',
      'description' => '- **DeleteSslVpnServer**接口属于异步接口，即系统先返回一个请求ID，但该SSL-VPN服务端实例尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)查询VPN网关实例的状态，来确定SSL-VPN服务端实例的删除状态：
    - 当VPN网关实例处于**updating**状态时，表示SSL-VPN服务端实例正在删除中。
    - 当VPN网关实例处于**active**状态时，表示SSL-VPN服务端实例删除成功。
- **DeleteSslVpnServer**接口不支持在同一VPN网关下并发删除SSL-VPN服务端实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySslVpnServer' => 
    array (
      'summary' => '调用ModifySslVpnServer接口修改SSL-VPN服务端的配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vss-bp18q7hzj6largv4v****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端的名称。  

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientIpPool',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端IP地址池。',
            'type' => 'string',
            'required' => false,
            'example' => '10.30.30.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地客户端的网段。',
            'type' => 'string',
            'required' => false,
            'example' => '10.20.20.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'Proto',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所使用的协议，取值：

- **TCP**（默认值）：TCP协议。

- **UDP**：UDP协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'UDP',
          ),
        ),
        7 => 
        array (
          'name' => 'Cipher',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN使用的加密算法，取值： 

- **AES-128-CBC**（默认值）：AES-128-CBC算法。

- **AES-192-CBC**：AES-192-CBC算法。

- **AES-256-CBC**：AES-256-CBC算法。

- **none**：不使用加密算法。',
            'type' => 'string',
            'required' => false,
            'example' => 'AES-128-CBC',
          ),
        ),
        8 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所使用的端口。端口取值范围：**1**~**65535**。默认值：**1194**。

不支持使用以下端口：**22**、**2222**、**22222**、**9000**、**9001**、**9002**、**7505**、**80**、**443**、**53**、**68**、**123**、**4510**、**4560**、**500**、**4500**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1194',
          ),
        ),
        9 => 
        array (
          'name' => 'Compress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定是否对通信进行压缩， 取值：

- **true**（默认值）：对通信进行压缩。

- **false**：对通信不进行压缩。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'EnableMultiFactorAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启双因子认证。如果您选择开启双因子认证功能，您还需要输入IDaaS EIAM实例ID和IDaaS应用ID。取值：

- **true**：开启。

- **false**：不开启。

>- 如果您是首次使用双因子认证功能，请先完成[授权](https://ram.console.aliyun.com/role/authorization?request=%7B%22Services%22%3A%5B%7B%22Service%22%3A%22VPN%22%2C%22Roles%22%3A%5B%7B%22RoleName%22%3A%22AliyunVpnAccessingIdaasRole%22%2C%22TemplateId%22%3A%22IdaasRole%22%7D%5D%7D%5D%2C%22ReturnUrl%22%3A%22https%3A%2F%2Fvpc.console.aliyun.com%2Fsslvpn%2Fcn-shanghai%2Fvpn-servers%22%7D)后再创建SSL服务端。
>- IDaaS EIAM 1.0实例不再支持新购。如果您的阿里云账号下存在IDaaS EIAM 1.0实例，开启双因子认证功能后，依旧支持绑定IDaaS EIAM 1.0实例。如果您的阿里云账号下不存在IDaaS EIAM 1.0实例，开启双因子认证功能后，仅支持绑定IDaaS EIAM 2.0实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'IDaaSInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS EIAM实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'idaas-cn-hangzhou-****',
          ),
        ),
        12 => 
        array (
          'name' => 'IDaaSRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS EIAM实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        13 => 
        array (
          'name' => 'IDaaSApplicationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS应用ID。

- 如果您绑定的是IDaaS EIAM 2.0实例，需输入IDaaS应用ID。
- 如果您绑定的是IDaaS EIAM 1.0实例，无需输入IDaaS应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'app_my6g4qmvnwxzj2f****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'InternetIp' => 
              array (
                'description' => '公网IP。',
                'type' => 'string',
                'example' => '47.98.XX.XX',
              ),
              'IDaaSInstanceId' => 
              array (
                'description' => 'IDaaS EIAM实例ID。',
                'type' => 'string',
                'example' => 'idaas-cn-hangzhou-****',
              ),
              'CreateTime' => 
              array (
                'description' => 'SSL-VPN服务端的创建时间。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1492753580000',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
              ),
              'Compress' => 
              array (
                'description' => '是否压缩通信。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Port' => 
              array (
                'description' => 'SSL-VPN服务端的端口。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1194',
              ),
              'LocalSubnet' => 
              array (
                'description' => '本地客户端地址段。',
                'type' => 'string',
                'example' => '10.20.20.0/24',
              ),
              'RegionId' => 
              array (
                'description' => 'SSL-VPN服务端的地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'Cipher' => 
              array (
                'description' => '使用的加密算法。',
                'type' => 'string',
                'example' => 'AES-128-CBC',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DF11D6F6-E35A-41C3-9B20-6FC8A901FE65',
              ),
              'Connections' => 
              array (
                'description' => '当前连接数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'SslVpnServerId' => 
              array (
                'description' => 'SSL-VPN服务端的ID。',
                'type' => 'string',
                'example' => 'vss-bp18q7hzj6largv4v****',
              ),
              'MaxConnections' => 
              array (
                'description' => '最大连接数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Name' => 
              array (
                'description' => 'SSL-VPN服务端的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'EnableMultiFactorAuth' => 
              array (
                'description' => '是否开启了双因子认证。

- **true**：已开启。

- **false**（默认值）：未开启。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'ClientIpPool' => 
              array (
                'description' => '客户端IP地址池。',
                'type' => 'string',
                'example' => '10.30.30.0/24',
              ),
              'Proto' => 
              array (
                'description' => 'SSL-VPN服务端使用的协议。',
                'type' => 'string',
                'example' => 'UDP',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'SSL-VPN服务端所属的资源组ID。

SSL-VPN服务端与其关联的VPN网关实例的资源组相同。您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                'type' => 'string',
                'example' => 'rg-acfmzs372yg****',
              ),
              'IDaaSApplicationId' => 
              array (
                'description' => 'IDaaS应用ID。',
                'type' => 'string',
                'example' => 'app_my6g4qmvnwxzj2f****',
              ),
              'IDaaSInstanceVersion' => 
              array (
                'description' => 'IDaaS EIAM实例的版本。

- 仅当SSL服务端绑定的是IDaaS EIAM 2.0实例，系统才会返回该参数。仅取值：**EIAM 2.0**。
- 如果SSL服务端绑定的是IDaaS EIAM 1.0实例，系统不会返回该参数。',
                'type' => 'string',
                'example' => 'EIAM 2.0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The name is not valid',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          3 => 
          array (
            'errorCode' => 'IpConflict',
            'errorMessage' => 'Client IP pool conflict with local IP range.',
          ),
          4 => 
          array (
            'errorCode' => 'SslVpnServer.AddRouteError',
            'errorMessage' => 'Add route error whose destination is client IP pool, please check vpc route entry and relevant quota.',
          ),
          5 => 
          array (
            'errorCode' => 'ClientIpPool.NetmaskInvalid',
            'errorMessage' => 'The netmask length of client IP pool must be greater than or equal to 16 and less than or equal to 29.',
          ),
          6 => 
          array (
            'errorCode' => 'ClientIpPool.SubnetInvalid',
            'errorMessage' => 'The specified client IP pool cannot be used.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParameter.IDaaSInstanceId',
            'errorMessage' => 'The input parameter IDaaSInstanceId is mandatory when enable multi-factor authentication.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.GetIDaaSInfo',
            'errorMessage' => 'Failed to get secret key from your IDaaS instance.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.NoRamPermission',
            'errorMessage' => 'Vpn Service has no permission to operate your IDaaS instances.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationUnsupported.NotSupportMultiFactorAuth',
            'errorMessage' => 'Current version of the VPN does not support multi-factor authentication.',
          ),
          11 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
          12 => 
          array (
            'errorCode' => 'SslVpnServerPort.Illegal',
            'errorMessage' => 'The server port is not in the range of [1-65535].',
          ),
          13 => 
          array (
            'errorCode' => 'EnableHaCheck.SslVpnServerClientCidrContainsVpcRouteDest',
            'errorMessage' => 'Ssl vpn client cidr contains vpc route prefix. The vpc route prefix is %s.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'InstanceId is not found.',
          ),
          15 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified route entry has conflict.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.IDaaSApplicationId',
            'errorMessage' => 'The specified IDaaS application Id is not illegal, the application instance needs to be created based on the dedicated SSL VPN template.',
          ),
          17 => 
          array (
            'errorCode' => 'MissingParam.IDaaSApplicationId',
            'errorMessage' => 'The input parameter IDaaSApplicationId is mandatory when enable multi-factor authentication.',
          ),
          18 => 
          array (
            'errorCode' => 'SslVpnIDaaS2.NotSupport',
            'errorMessage' => 'Current version of the VPN does not support IDaaS2.0.',
          ),
          19 => 
          array (
            'errorCode' => 'MissingParam.IDaaSRegionId',
            'errorMessage' => 'The input parameter IDaaSRegionId is mandatory when enable multi-factor authentication.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIDaaSInstanceId.NotFound',
            'errorMessage' => 'The specified IDaaS instance ID does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIDaaSApplicationId.NotFound',
            'errorMessage' => 'The specified IDaaS application Id does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"InternetIp\\": \\"47.98.XX.XX\\",\\n  \\"IDaaSInstanceId\\": \\"idaas-cn-hangzhou-****\\",\\n  \\"CreateTime\\": 1492753580000,\\n  \\"VpnGatewayId\\": \\"vpn-bp1q8bgx4xnkm2ogj****\\",\\n  \\"Compress\\": false,\\n  \\"Port\\": 1194,\\n  \\"LocalSubnet\\": \\"10.20.20.0/24\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"Cipher\\": \\"AES-128-CBC\\",\\n  \\"RequestId\\": \\"DF11D6F6-E35A-41C3-9B20-6FC8A901FE65\\",\\n  \\"Connections\\": 0,\\n  \\"SslVpnServerId\\": \\"vss-bp18q7hzj6largv4v****\\",\\n  \\"MaxConnections\\": 5,\\n  \\"Name\\": \\"test\\",\\n  \\"EnableMultiFactorAuth\\": false,\\n  \\"ClientIpPool\\": \\"10.30.30.0/24\\",\\n  \\"Proto\\": \\"UDP\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\",\\n  \\"IDaaSApplicationId\\": \\"app_my6g4qmvnwxzj2f****\\",\\n  \\"IDaaSInstanceVersion\\": \\"EIAM 2.0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySslVpnServerResponse>\\n    <InternetIp>47.98.XX.XX</InternetIp>\\n    <IDaaSInstanceId>idaas-cn-hangzhou-****</IDaaSInstanceId>\\n    <CreateTime>1492753580000</CreateTime>\\n    <VpnGatewayId>vpn-bp1q8bgx4xnkm2ogj****</VpnGatewayId>\\n    <Compress>false</Compress>\\n    <Port>1194</Port>\\n    <LocalSubnet>10.20.20.0/24</LocalSubnet>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <Cipher>AES-128-CBC</Cipher>\\n    <RequestId>DF11D6F6-E35A-41C3-9B20-6FC8A901FE65</RequestId>\\n    <Connections>0</Connections>\\n    <SslVpnServerId>vss-bp18q7hzj6largv4v****</SslVpnServerId>\\n    <MaxConnections>5</MaxConnections>\\n    <Name>test</Name>\\n    <EnableMultiFactorAuth>false</EnableMultiFactorAuth>\\n    <ClientIpPool>10.30.30.0/24</ClientIpPool>\\n    <Proto>UDP</Proto>\\n</ModifySslVpnServerResponse>","errorExample":""}]',
      'title' => '修改SSL-VPN服务端的配置信息',
      'description' => '- 如果您需要为SSL服务端开启双因子认证功能，请先确保VPN网关实例支持该功能，您可能需要升级VPN网关实例。更多信息，请参见[SSL-VPN双因子认证支持IDaaS EIAM 2.0](~~2785320~~)。
- 当只修改SSL-VPN服务端**Name**信息时该接口为同步接口，如果还修改了除**Name**之外的配置，该接口为异步接口。
- **ModifySslVpnServer**接口为异步接口时，即系统先返回一个请求ID，但该SSL-VPN服务端的配置信息尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)接口查询SSL-VPN服务端关联的VPN网关实例的状态，来确认SSL-VPN服务端配置信息的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示SSL-VPN服务端的配置信息正在修改中。
    - 当VPN网关实例处于**active**状态时，表示SSL-VPN服务端的配置信息修改成功。

- **ModifySslVpnServer**接口不支持在同一VPN网关下并发修改SSL-VPN服务端的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSslVpnServers' => 
    array (
      'summary' => '调用DescribeSslVpnServers接口查询已创建的SSL-VPN服务端。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所在的地域ID。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SslVpnServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vss-bp15j3du13gq1dgey****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-bp1on0xae9d771ggi****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端的名称。

长度为1～100个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值：**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL-VPN服务端所属的资源组ID。

SSL-VPN服务端与其关联的VPN网关实例的资源组相同。您可以调用[DescribeVpnGateway](~~2794055~~)接口查询VPN网关实例所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D350187B-EA41-4577-950B-95434C8302E1',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'SslVpnServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SslVpnServer' => 
                  array (
                    'description' => 'SSL-VPN服务端的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InternetIp' => 
                        array (
                          'description' => 'VPN网关的公网IP地址。',
                          'type' => 'string',
                          'example' => '47.5.XX.XX',
                        ),
                        'IDaaSInstanceId' => 
                        array (
                          'description' => 'IDaaS EIAM实例ID。',
                          'type' => 'string',
                          'example' => 'idaas-cn-hangzhou-****',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建SSL-VPN服务端的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1613800884000',
                        ),
                        'VpnGatewayId' => 
                        array (
                          'description' => 'VPN网关ID。',
                          'type' => 'string',
                          'example' => 'vpn-bp1on0xae9d771ggi****',
                        ),
                        'IDaaSRegionId' => 
                        array (
                          'description' => 'IDaaS EIAM实例所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Compress' => 
                        array (
                          'description' => '是否对通信进行压缩。

- **true**：是。

- **false**（默认值）：否。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Port' => 
                        array (
                          'description' => 'SSL-VPN服务端所使用的端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1194',
                        ),
                        'LocalSubnet' => 
                        array (
                          'description' => '本端网段。',
                          'type' => 'string',
                          'example' => '192.168.0.0/24',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'SSL-VPN服务端的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Cipher' => 
                        array (
                          'description' => '使用的加密算法。',
                          'type' => 'string',
                          'example' => 'AES-128-CBC',
                        ),
                        'Connections' => 
                        array (
                          'description' => '当前连接数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'SslVpnServerId' => 
                        array (
                          'description' => 'SSL-VPN服务端的ID。',
                          'type' => 'string',
                          'example' => 'vss-bp15j3du13gq1dgey****',
                        ),
                        'MaxConnections' => 
                        array (
                          'description' => '最大连接数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'Name' => 
                        array (
                          'description' => 'SSL-VPN服务端名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'EnableMultiFactorAuth' => 
                        array (
                          'description' => '是否开启了双因子认证。

- **true**：已开启。

- **false**（默认值）：未开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ClientIpPool' => 
                        array (
                          'description' => '客户端网段。',
                          'type' => 'string',
                          'example' => '10.10.1.0/24',
                        ),
                        'Proto' => 
                        array (
                          'description' => 'SSL-VPN服务端所使用的协议。',
                          'type' => 'string',
                          'example' => 'UDP',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'SSL-VPN服务端所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                          'type' => 'string',
                          'example' => 'rg-acfmzs372yg****',
                        ),
                        'IDaaSApplicationId' => 
                        array (
                          'description' => 'IDaaS应用ID。',
                          'type' => 'string',
                          'example' => 'app_my6g4qmvnwxzj2f****',
                        ),
                        'IDaaSInstanceVersion' => 
                        array (
                          'description' => 'IDaaS EIAM实例的版本。

- 仅当SSL服务端绑定的是IDaaS EIAM 2.0实例，系统才会返回该参数。仅取值：**EIAM 2.0**。
- 如果SSL服务端绑定的是IDaaS EIAM 1.0实例，系统不会返回该参数。',
                          'type' => 'string',
                          'example' => 'EIAM 2.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not found during access authentication.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"D350187B-EA41-4577-950B-95434C8302E1\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"SslVpnServers\\": {\\n    \\"SslVpnServer\\": [\\n      {\\n        \\"InternetIp\\": \\"47.5.XX.XX\\",\\n        \\"IDaaSInstanceId\\": \\"idaas-cn-hangzhou-****\\",\\n        \\"CreateTime\\": 1613800884000,\\n        \\"VpnGatewayId\\": \\"vpn-bp1on0xae9d771ggi****\\",\\n        \\"IDaaSRegionId\\": \\"cn-hangzhou\\",\\n        \\"Compress\\": false,\\n        \\"Port\\": 1194,\\n        \\"LocalSubnet\\": \\"192.168.0.0/24\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"Cipher\\": \\"AES-128-CBC\\",\\n        \\"Connections\\": 0,\\n        \\"SslVpnServerId\\": \\"vss-bp15j3du13gq1dgey****\\",\\n        \\"MaxConnections\\": 5,\\n        \\"Name\\": \\"test\\",\\n        \\"EnableMultiFactorAuth\\": true,\\n        \\"ClientIpPool\\": \\"10.10.1.0/24\\",\\n        \\"Proto\\": \\"UDP\\",\\n        \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\",\\n        \\"IDaaSApplicationId\\": \\"app_my6g4qmvnwxzj2f****\\",\\n        \\"IDaaSInstanceVersion\\": \\"EIAM 2.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSslVpnServersResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>D350187B-EA41-4577-950B-95434C8302E1</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <SslVpnServers>\\n        <InternetIp>47.5.XX.XX</InternetIp>\\n        <IDaaSInstanceId>idaas-cn-hangzhou-****</IDaaSInstanceId>\\n        <CreateTime>1613800884000</CreateTime>\\n        <VpnGatewayId>vpn-bp1on0xae9d771ggi****</VpnGatewayId>\\n        <IDaaSRegionId>cn-hangzhou</IDaaSRegionId>\\n        <Compress>false</Compress>\\n        <Port>1194</Port>\\n        <LocalSubnet>192.168.0.0/24</LocalSubnet>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <Cipher>AES-128-CBC</Cipher>\\n        <Connections>0</Connections>\\n        <SslVpnServerId>vss-bp15j3du13gq1dgey****</SslVpnServerId>\\n        <MaxConnections>5</MaxConnections>\\n        <Name>test</Name>\\n        <EnableMultiFactorAuth>true</EnableMultiFactorAuth>\\n        <ClientIpPool>10.10.1.0/24</ClientIpPool>\\n        <Proto>UDP</Proto>\\n    </SslVpnServers>\\n</DescribeSslVpnServersResponse>","errorExample":""}]',
      'title' => '查询已创建的SSL-VPN服务端',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeVpnSslServerLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL服务端所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnSslServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL服务端的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vss-bp155e9yclsg1xgq4****',
          ),
        ),
        2 => 
        array (
          'name' => 'SslVpnClientCertId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSL客户端证书ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsc-m5euof6s5jy8vs5kd****',
          ),
        ),
        3 => 
        array (
          'name' => 'From',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志起始时间，仅支持传入UNIX秒级时间戳，例如1600738962，1600738962表示的时间为2020年09月22日09:42:42。

> 如果指定**From**，则必须指定**To**或**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1600738962',
          ),
        ),
        4 => 
        array (
          'name' => 'To',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志结束时间，仅支持传入UNIX秒级时间戳，例如1600738962，1600738962表示的时间为2020年09月22日09:42:42。

> 如果指定**To**，则必须指定**From**或**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1600738962',
          ),
        ),
        5 => 
        array (
          'name' => 'MinutePeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志周期。单位：分钟。

> 如果不指定**From**和**To**，则必须指定**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数，最大值：**50**，默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DEDAC5B1-9292-5BF7-BDDF-61BA58CFB2FB',
              ),
              'Count' => 
              array (
                'description' => '日志条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'IsCompleted' => 
              array (
                'description' => '查询的日志是否精确。取值：

- **true**：精确。

- **false**：不精确。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Logs' => 
                  array (
                    'description' => '数组，数组中的每一项都为一条日志。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '字符串数组。

数组中的每一项都为一条日志。',
                      'type' => 'string',
                      'example' => '"Logs": [ "Mon Feb 28 14:05:51 2022 us=421630 MULTI: multi_create_instance called", "Mon Feb 28 14:05:51 2022 us=421744 112.XX.XX.128:42522 Re-using SSL/TLS context", "Mon Feb 28 14:05:51 2022 us=421834 112.XX.XX.128:42522 Control Channel MTU par****", "Mon Feb 28 14:05:51 2022 us=421850 112.XX.XX.128:42522 Data Channel MTU par****", "Mon Feb 28 14:05:51 2022 us=421901 112.XX.XX.128:42522 Local Option****", "Mon Feb 28 14:05:51 2022 us=421917 112.XX.XX.128:42522 Expected Remote Option****", "Mon Feb 28 14:05:51 2022 us=421951 112.XX.XX.128:42522 TLS: Initial packet from****", "Mon Feb 28 14:05:51 2022 us=581413 112.XX.XX.128:42522 VERIFY OK****", "Mon Feb 28 14:05:51 2022 us=581662 112.XX.XX.128:42522 VERIFY OK****", "Mon Feb 28 14:05:51 2022 us=621071 112.XX.XX.128:42522 peer info****" ]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSslVpnClientCertId.NotFound',
            'errorMessage' => 'The specified SSL VPN client id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ParamExclusive.SslVpnServerIdAndSslVpnClientCertId',
            'errorMessage' => 'The specified SSL VPN client does not belong to the specified SSL VPN server.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSslVpnServerId.NotFound',
            'errorMessage' => 'The specified SSL VPN server id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"DEDAC5B1-9292-5BF7-BDDF-61BA58CFB2FB\\",\\n  \\"Count\\": 10,\\n  \\"IsCompleted\\": true,\\n  \\"Data\\": {\\n    \\"Logs\\": [\\n      \\"\\\\\\"Logs\\\\\\": [ \\\\\\"Mon Feb 28 14:05:51 2022 us=421630 MULTI: multi_create_instance called\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=421744 112.XX.XX.128:42522 Re-using SSL/TLS context\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=421834 112.XX.XX.128:42522 Control Channel MTU par****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=421850 112.XX.XX.128:42522 Data Channel MTU par****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=421901 112.XX.XX.128:42522 Local Option****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=421917 112.XX.XX.128:42522 Expected Remote Option****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=421951 112.XX.XX.128:42522 TLS: Initial packet from****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=581413 112.XX.XX.128:42522 VERIFY OK****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=581662 112.XX.XX.128:42522 VERIFY OK****\\\\\\", \\\\\\"Mon Feb 28 14:05:51 2022 us=621071 112.XX.XX.128:42522 peer info****\\\\\\" ]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVpnSslServerLogsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>DEDAC5B1-9292-5BF7-BDDF-61BA58CFB2FB</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <IsCompleted>true</IsCompleted>\\n    <Data>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421630 MULTI: multi_create_instance called</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421744 112.XX.XX.128:42522 Re-using SSL/TLS context</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421834 112.XX.XX.128:42522 Control Channel MTU par****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421850 112.XX.XX.128:42522 Data Channel MTU par****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421901 112.XX.XX.128:42522 Local Option****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421917 112.XX.XX.128:42522 Expected Remote Option****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=421951 112.XX.XX.128:42522 TLS: Initial packet from****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=581413 112.XX.XX.128:42522 VERIFY OK****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=581662 112.XX.XX.128:42522 VERIFY OK****</Logs>\\n        <Logs>Mon Feb 28 14:05:51 2022 us=621071 112.XX.XX.128:42522 peer info****</Logs>\\n    </Data>\\n    <Count>10</Count>\\n</DescribeVpnSslServerLogsResponse>","errorExample":""}]',
      'title' => '查看SSL服务端的日志',
      'summary' => '调用DescribeVpnSslServerLogs接口查看SSL服务端的日志。',
    ),
    'CreateIpsecServer' => 
    array (
      'summary' => '调用CreateIpsecServer接口创建IPsec服务端。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpn-bp17lofy9fd0dnvzv****',
          ),
        ),
        2 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本端网段，指需要和客户端网段互连的VPC侧的网段。

多个网段之间用半角逗号（,）分隔，例如：192.168.1.0/24,192.168.2.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.0.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientIpPool',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端网段，指给客户端虚拟网卡分配访问地址的地址段。

> 客户端网段不能和VPC侧网段冲突。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'IpSecServerName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端名称。

名称长度为1～100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
            'maxLength' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'EffectImmediately',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置是否立即生效。取值：

- **true**：配置完成后立即进行协商。

- **false**（默认值）：当有流量进入时进行协商。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'IkeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第一阶段协商参数配置。取值：

- **IkeVersion**：IKE协议的版本。取值：**ikev1**或**ikev2**，默认值：**ikev2**。

- **IkeMode**：IKE版本的协商模式。默认值：**main**。

- **IkeEncAlg**：第一阶段协商的加密算法。默认值：**aes**。

- **IkeAuthAlg**：第一阶段协商的认证算法。默认值：**sha1**。

- **IkePfs**：第一阶段协商使用的Diffie-Hellman密钥交换算法。默认值：**group2**。

- **IkeLifetime**：第一阶段协商出的SA的生存周期。单位：秒，取值范围：**0**~**86400**，默认值：**86400**。

- **LocalId**：IPsec服务端标识。支持FQDN和IP地址格式，默认值为VPN网关公网IP地址。

- **RemoteId**：对端标识。支持FQDN和IP地址格式，默认值为空。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IkeVersion":"ikev2","IkeMode":"main","IkeEncAlg":"aes","IkeAuthAlg":"sha1","IkePfs":"group2","IkeLifetime":86400}',
          ),
        ),
        7 => 
        array (
          'name' => 'IpsecConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第二阶段协商参数配置。取值：

- **IpsecEncAlg**：第二阶段协商的加密算法。默认值：**aes**。

- **IpsecAuthAlg**：第二阶段协商的认证算法。默认值：**sha1**。

- **IpsecPfs**：转发所有协议的报文。第二阶段协商使用的Diffie-Hellman密钥交换算法。默认值：**group2**。

- **IpsecLifetime**：第二阶段协商出的SA的生存周期。单位：秒，取值范围：**0**~**86400**，默认值：**86400**。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IpsecEncAlg":"aes","IpsecAuthAlg":"sha1","IpsecPfs":"group2","IpsecLifetime":86400}',
          ),
        ),
        8 => 
        array (
          'name' => 'PskEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启预共享密钥认证方式。取值：**true**，表示开启预共享密钥认证方式。

> 本参数必填。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'Psk',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预共享密钥。

用于IPsec服务端与客户端之间的身份认证。密钥长度为1~100个字符。

若您未指定预共享密钥，系统会随机生成一个16位的字符串作为预共享密钥。您可以调用[ListIpsecServers](~~2794120~~)接口查询系统生成的密钥信息。

> IPsec服务端的预共享密钥需和客户端的认证密钥一致，否则IPsec服务端和客户端之间无法建立连接。',
            'type' => 'string',
            'required' => false,
            'example' => 'Cfd123****',
          ),
        ),
        10 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'd7d24a21-f4ba-4454-9173-b38****',
          ),
        ),
        11 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：只预检此次请求，不会创建IPsec服务端。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误信息。如果检查通过，则返回`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接创建IPsec服务端。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'CreationTime' => 
              array (
                'description' => 'IPsec服务端创建时间。

T表示分隔符，Z表示的是UTC，即世界标准时间。',
                'type' => 'string',
                'example' => '2021-02-22T03:24:28Z',
              ),
              'IpsecServerId' => 
              array (
                'description' => 'IPsec服务端ID。',
                'type' => 'string',
                'example' => 'iss-bp1jougp8cfsbo8y9****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '690A967E-D4CD-4B69-8C78-94FE828BA10B',
              ),
              'IpsecServerName' => 
              array (
                'description' => 'IPsec服务端名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'VpnGatewayId' => 
              array (
                'description' => 'VPN网关实例ID。',
                'type' => 'string',
                'example' => 'vpn-bp17lofy9fd0dnvzv****',
              ),
              'RegionId' => 
              array (
                'description' => 'VPN网关所属地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.IPsecServer',
            'errorMessage' => 'The current version of the VPN gateway does not support IPsec server.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.SslVpnDisabled',
            'errorMessage' => 'The VPN gateway has not enabled SSL VPN.',
          ),
          2 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.IPsecServerExist',
            'errorMessage' => 'An IPsec server already exists in the VPN gateway.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.IpsecPfs',
            'errorMessage' => 'The specified IPsec Pfs is unsupported.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.AuthMethod',
            'errorMessage' => 'One authentication method (Psk or IDaaS) should be specified at least.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.ClientIpPool',
            'errorMessage' => 'The specified ClientIpPool (%s) is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParam.IDaaSInstanceId',
            'errorMessage' => 'The input parameter IDaaSInstanceId is mandatory when enable multi-factor authentication.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.NoRamPermission',
            'errorMessage' => 'Vpn Service has no permission to operate your IDaaS instances.',
          ),
          11 => 
          array (
            'errorCode' => 'ClientIpPool.NetmaskInvalid',
            'errorMessage' => 'The netmask length of client IP pool must be greater than or equal to 16 and less than or equal to 29.',
          ),
          12 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified client IP pool conflicts with VPN connection or SSL server.',
          ),
          13 => 
          array (
            'errorCode' => 'ClientIpPool.SubnetInvalid',
            'errorMessage' => 'The specified client IP pool cannot be used.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidClientIpPool.Conflict',
            'errorMessage' => 'The specified client IP pool conflicts with other resources in the same VPC.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationFailed.AddVpcRoute',
            'errorMessage' => 'It is failed to add VPC route after this operation.',
          ),
          16 => 
          array (
            'errorCode' => 'QuotaExceeded.VpnRouteEntry',
            'errorMessage' => 'The number of route entries to the VPN gateway in the VPC routing table has reached the quota limit.',
          ),
          17 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
          18 => 
          array (
            'errorCode' => 'EnableHaCheck.IpsecServerCidrContainsVpcRouteDest',
            'errorMessage' => 'Ipsec server client cidr contains vpc route prefix. The vpc route prefix is %s.',
          ),
          19 => 
          array (
            'errorCode' => 'VpnGateway.IPsecServerAndVpnConnectionConflict',
            'errorMessage' => 'The IPSec connection and IPSec server cannot be configured on the same VPN gateway at the same time.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpnGatewayInstanceId.NotFound',
            'errorMessage' => 'The specified vpn gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIDaaSInstanceId.NotFound',
            'errorMessage' => 'The specified IDaaS instance ID does not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'The operation against this instance is too frequent, please try again later.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CreationTime\\": \\"2021-02-22T03:24:28Z\\",\\n  \\"IpsecServerId\\": \\"iss-bp1jougp8cfsbo8y9****\\",\\n  \\"RequestId\\": \\"690A967E-D4CD-4B69-8C78-94FE828BA10B\\",\\n  \\"IpsecServerName\\": \\"test\\",\\n  \\"VpnGatewayId\\": \\"vpn-bp17lofy9fd0dnvzv****\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIpsecServerResponse>\\n    <CreationTime>2021-02-22T03:24:28Z</CreationTime>\\n    <IpsecServerId>iss-bp1jougp8cfsbo8y9****</IpsecServerId>\\n    <RequestId>690A967E-D4CD-4B69-8C78-94FE828BA10B</RequestId>\\n    <IpsecServerName>test</IpsecServerName>\\n    <VpnGatewayId>vpn-bp17lofy9fd0dnvzv****</VpnGatewayId>\\n    <RegionId>cn-hangzhou</RegionId>\\n</CreateIpsecServerResponse>","errorExample":""}]',
      'title' => '创建IPsec服务端',
      'description' => '- 创建IPsec服务端前，您需要先创建VPN网关并确保已开启VPN网关的SSL-VPN功能。具体操作，请参见[CreateVpnGateway](~~2794049~~)。
- 创建IPsec服务端前，需确保VPN网关实例下不存在IPsec连接。具体操作，请参见[DeleteVpnConnection](~~2526948~~)。
- **CreateIpsecServer**接口属于异步接口，即系统先返回一个实例ID，但该IPsec服务端尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)查询VPN网关实例的状态，来确定IPsec服务端的创建状态：
    - 当VPN网关实例处于**updating**状态时，表示IPsec服务端正在创建中。
    - 当VPN网关实例处于**active**状态时，表示IPsec服务端创建成功。
- **CreateIpsecServer**接口不支持在同一VPN网关下并发创建IPsec服务端。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIpsecServer' => 
    array (
      'summary' => '调用DeleteIpsecServer接口删除IPsec服务端。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IpsecServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'iss-bp1jougp8cfsbo8y9****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-00****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：只预检此次请求，不会删除IPsec服务端。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误信息。如果检查通过，则返回`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接删除IPsec服务端。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpsecServerId.NotFound',
            'errorMessage' => 'The specified IPsec server ID (%s) does not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'The operation against this instance is too frequent, please try again later.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIpsecServerResponse>\\r\\n<RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\r\\n</DeleteIpsecServerResponse>","errorExample":""}]',
      'title' => '删除IPsec服务端',
      'description' => '- **DeleteIpsecServer**接口属于异步接口，即系统先返回一个请求ID，但该IPsec服务端尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)查询VPN网关实例状态，来确定IPsec服务端的删除状态：
    - 当VPN网关实例处于**updating**状态时，表示IPsec服务端正在删除中。
    - 当VPN网关实例处于**active**状态时，表示IPsec服务端删除成功。
- **DeleteIpsecServer**接口不支持在同一VPN网关下并发删除IPsec服务端。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateIpsecServer' => 
    array (
      'summary' => '调用UpdateIpsecServer接口更新IPsec服务端配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'IpsecServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'iss-bp1bo3xuvcxo7ixll****',
          ),
        ),
        2 => 
        array (
          'name' => 'LocalSubnet',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本端网段，指需要和客户端网段互连的VPC侧的网段。

多个网段之间用半角逗号（,）分隔，例如：192.168.1.0/24,192.168.2.0/24。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.0/24,172.17.0.0/16',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientIpPool',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端网段，指给客户端虚拟网卡分配访问地址的网段。

> 客户端网段不能和VPC侧网段冲突。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'IpsecServerName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端名称。

长度为1～100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
            'maxLength' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'EffectImmediately',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除当前已协商成功的IPsec隧道并重新发起协商。取值：

- **true**：配置完成后立即进行协商。

- **false**：当有流量进入时进行协商。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'IkeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第一阶段协商参数配置。取值：

- **IkeVersion**：IKE协议的版本。取值：**ikev1**或**ikev2**。

- **IkeMode**：IKE版本的协商模式。默认值：**main**。

- **IkeEncAlg**：第一阶段协商的加密算法。默认值：**aes**。

- **IkeAuthAlg**：第一阶段协商的认证算法。默认值：**sha1**。

- **IkePfs**：第一阶段协商使用的Diffie-Hellman密钥交换算法。默认值：**group2**。

- **IkeLifetime**：第一阶段协商出的SA的生存周期。单位：秒，取值范围：**0**~**86400**，默认值：**86400**。

- **LocalId**：IPsec服务端标识。支持FQDN和IP地址格式。

- **RemoteId**：对端标识。支持FQDN和IP地址格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IkeVersion":"ikev2","IkeMode":"main","IkeEncAlg":"aes","IkeAuthAlg":"sha1","IkePfs":"group2","IkeLifetime":86400}',
          ),
        ),
        7 => 
        array (
          'name' => 'IpsecConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第二阶段协商参数配置。取值：

- **IpsecEncAlg**：第二阶段协商的加密算法。默认值：**aes**。

- **IpsecAuthAlg**：第二阶段协商的认证算法。默认值：**sha1**。

- **IpsecPfs**：转发所有协议的报文。第二阶段协商使用的Diffie-Hellman密钥交换算法。默认值：**group2**。

- **IpsecLifetime**：第二阶段协商出的SA的生存周期。单位：秒，取值范围：**0**~**86400**，默认值：**86400**。',
            'type' => 'string',
            'required' => false,
            'example' => '{"IpsecEncAlg":"aes","IpsecAuthAlg":"sha1","IpsecPfs":"group2","IpsecLifetime":86400}',
          ),
        ),
        8 => 
        array (
          'name' => 'PskEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启预共享密钥认证方式。取值：**true**，表示开启预共享密钥认证方式。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'Psk',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预共享密钥。

用于IPsec服务端与客户端之间的身份认证。密钥长度为1~100个字符。

您可以调用[ListIpsecServers](~~2794120~~)接口查询系统生成的密钥信息。

> IPsec服务端的预共享密钥需和客户端的认证密钥一致，否则IPsec服务端和客户端之间无法建立连接。',
            'type' => 'string',
            'required' => false,
            'example' => 'Cfd123****',
          ),
        ),
        10 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        11 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- **true**：只预检此次请求，不会更改IPsec服务端配置。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误信息。如果检查通过，则返回`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接更改IPsec服务端配置。
',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B61C08E5-403A-46A2-96C1-F7B1216DB10C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VpnGateway.Configuring',
            'errorMessage' => 'The specified service is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'VpnGateway.FinancialLocked',
            'errorMessage' => 'The specified service is financial locked.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.IpsecPfs',
            'errorMessage' => 'The specified IPsec Pfs is unsupported.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.AuthMethod',
            'errorMessage' => 'One authentication method (Psk or IDaaS) should be specified at least.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.LocalSubnet',
            'errorMessage' => 'The specified "LocalSubnet" (%s) is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.ClientIpPool',
            'errorMessage' => 'The specified "ClientIpPool" (%s) is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'MissingParam.IDaaSInstanceId',
            'errorMessage' => 'The input parameter IDaaSInstanceId is mandatory when enable multi-factor authentication.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.NoRamPermission',
            'errorMessage' => 'Vpn Service has no permission to operate your IDaaS instances.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.AddVpcRoute',
            'errorMessage' => 'It\'s failed to add VPC route after this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'ClientIpPool.NetmaskInvalid',
            'errorMessage' => 'The netmask length of client IP pool must be greater than or equal to 16 and less than or equal to 29.',
          ),
          10 => 
          array (
            'errorCode' => 'VpnRouteEntry.Conflict',
            'errorMessage' => 'The specified client IP pool conflicts with VPN connection or SSL server.',
          ),
          11 => 
          array (
            'errorCode' => 'ClientIpPool.SubnetInvalid',
            'errorMessage' => 'The specified client IP pool cannot be used.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidClientIpPool.Conflict',
            'errorMessage' => 'The specified client IP pool conflicts with other resources in the same VPC.',
          ),
          13 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpsecServerId.NotFound',
            'errorMessage' => 'The specified IPsec server ID (%s) does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIDaaSInstanceId.NotFound',
            'errorMessage' => 'The specified IDaaS instance ID does not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationConflict',
            'errorMessage' => 'The operation against this instance is too frequent, please try again later.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeVpnGateway',
        'callbackInterval' => 2000,
        'maxCallbackTimes' => 60,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B61C08E5-403A-46A2-96C1-F7B1216DB10C\\"\\n}","errorExample":""},{"type":"xml","example":"</UpdateIpsecServerResponse>\\r\\n<RequestId>B61C08E5-403A-46A2-96C1-F7B1216DB10C</RequestId>\\r\\n</UpdateIpsecServerResponse>","errorExample":""}]',
      'title' => '更新IPsec服务端',
      'description' => '- 如果您只修改IPsec服务端的**IpsecServerName**信息时该接口为同步接口，如果您修改了除**IpsecServerName**之外的配置，该接口为异步接口。
- 当**UpdateIpsecServer**接口为异步接口时，系统会先返回一个请求ID，但该IPsec服务端的配置尚未修改成功，系统后台的修改任务仍在进行。您可以调用[DescribeVpnGateway](~~2794055~~)查询VPN网关实例的状态，来确定IPsec服务端配置的修改状态：
    - 当VPN网关实例处于**updating**状态时，表示IPsec服务端的配置正在修改中。
    - 当VPN网关实例处于**active**状态时，表示IPsec服务端的配置修改成功。
- **UpdateIpsecServer**接口不支持在同一VPN网关下并发修改IPsec服务端的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListIpsecServers' => 
    array (
      'summary' => '调用ListIpsecServers接口查看已创建的IPsec服务端。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IpsecServerName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端名称。

名称长度为1～100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'VpnGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2be03f84eb48b699f0a****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，取值范围：**1**~**20**，默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'IpsecServerId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IPsec服务端ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IPsec服务端ID。N的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'iss-bp1bo3xuvcxo7ixll****',
            ),
            'required' => false,
            'example' => 'iss-bp1bo3xuvcxo7ixll****',
            'maxLength' => 128,
            'minLength' => 0,
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端所属的资源组ID。

IPsec服务端与其关联的VPN网关实例的资源组相同。您可以调用[DescribeVpnGateway](~~2794055~~)接口查询VPN网关实例所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmzs372yg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。

- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'caeba0bbb2be03f84eb48b699f0a****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'MaxResults' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'IpsecServers' => 
              array (
                'description' => 'IPsec服务端信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => 'IPsec服务端创建时间。

T表示分隔符，Z表示的是UTC，即世界标准时间。',
                      'type' => 'string',
                      'example' => '2018-12-03T10:11:55Z',
                    ),
                    'OnlineClientCount' => 
                    array (
                      'description' => '已经连接IPsec服务端的客户端数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InternetIp' => 
                    array (
                      'description' => 'VPN网关公网IP地址。',
                      'type' => 'string',
                      'example' => '47.22.XX.XX',
                    ),
                    'IpsecServerName' => 
                    array (
                      'description' => 'IPsec服务端名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'IDaaSInstanceId' => 
                    array (
                      'description' => 'IDaaS实例ID。',
                      'type' => 'string',
                      'example' => 'idaas-cn-hangzhou-****',
                    ),
                    'EffectImmediately' => 
                    array (
                      'description' => '是否删除当前已协商成功的IPsec隧道并重新发起协商。

- **true**：配置完成后立即进行协商。

- **false**：当有流量进入时进行协商。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'VpnGatewayId' => 
                    array (
                      'description' => 'VPN网关的ID。',
                      'type' => 'string',
                      'example' => 'vpn-bp1q8bgx4xnkm2ogj****',
                    ),
                    'LocalSubnet' => 
                    array (
                      'description' => '本端网段，指需要和客户端网段互连的VPC侧的网段。',
                      'type' => 'string',
                      'example' => '192.168.0.0/16,172.17.0.0/16',
                    ),
                    'Psk' => 
                    array (
                      'description' => '预共享密钥。',
                      'type' => 'string',
                      'example' => 'pgw6dy7d****',
                    ),
                    'RegionId' => 
                    array (
                      'description' => 'IPsec服务端所属地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'PskEnabled' => 
                    array (
                      'description' => '是否开启预共享密钥认证方式。仅取值为**true**，表示开启预共享密钥认证方式。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'IpsecServerId' => 
                    array (
                      'description' => 'IPsec服务端ID。',
                      'type' => 'string',
                      'example' => 'iss-bp1bo3xuvcxo7ixll****',
                    ),
                    'MultiFactorAuthEnabled' => 
                    array (
                      'description' => '是否已开启双因子认证功能。

- **true**：已开启。

- **false**：未开启。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'MaxConnections' => 
                    array (
                      'description' => 'VPN网关的SSL连接数规格。
> SSL-VPN与IPsec服务端共享SSL连接数。例如，SSL连接数为5，您已经有3个SSL客户端连接了SSL-VPN，则您还能使用2个客户端连接IPsec服务端。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '5',
                    ),
                    'ClientIpPool' => 
                    array (
                      'description' => '客户端网段，指给客户端虚拟网卡分配访问地址的地址段。',
                      'type' => 'string',
                      'example' => '10.0.0.0/24',
                    ),
                    'IkeConfig' => 
                    array (
                      'description' => '第一阶段协商的配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RemoteId' => 
                        array (
                          'description' => '对端标识符。支持FQDN和IP地址格式，默认为空。',
                          'type' => 'string',
                          'example' => '139.67.XX.XX',
                        ),
                        'IkeLifetime' => 
                        array (
                          'description' => 'IKE生存时间。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '86400',
                        ),
                        'IkeEncAlg' => 
                        array (
                          'description' => 'IKE加密算法。',
                          'type' => 'string',
                          'example' => 'aes',
                        ),
                        'LocalId' => 
                        array (
                          'description' => 'IPsec服务端标识符。支持FQDN和IP地址格式，默认为当前选取的VPN网关公网IP地址。',
                          'type' => 'string',
                          'example' => '116.64.XX.XX',
                        ),
                        'IkeMode' => 
                        array (
                          'description' => 'IKE版本协商模式。取值：

**main**：主模式，协商过程安全性高。

',
                          'type' => 'string',
                          'example' => 'main',
                        ),
                        'IkeVersion' => 
                        array (
                          'description' => 'IKE版本。',
                          'type' => 'string',
                          'example' => 'ikev2',
                        ),
                        'IkePfs' => 
                        array (
                          'description' => 'Diffie-Hellman密钥交换算法。',
                          'type' => 'string',
                          'example' => 'group2',
                        ),
                        'IkeAuthAlg' => 
                        array (
                          'description' => 'IKE认证算法。',
                          'type' => 'string',
                          'example' => 'sha1',
                        ),
                      ),
                    ),
                    'IpsecConfig' => 
                    array (
                      'description' => '第二阶段协商的配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IpsecAuthAlg' => 
                        array (
                          'description' => 'IPsec认证算法。',
                          'type' => 'string',
                          'example' => 'sha1',
                        ),
                        'IpsecLifetime' => 
                        array (
                          'description' => 'IPsec生存时间。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '86400',
                        ),
                        'IpsecEncAlg' => 
                        array (
                          'description' => 'IPsec加密算法。',
                          'type' => 'string',
                          'example' => 'aes',
                        ),
                        'IpsecPfs' => 
                        array (
                          'description' => 'Diffie-Hellman密钥交换算法。',
                          'type' => 'string',
                          'example' => 'group2',
                        ),
                      ),
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => 'IPsec服务端所属的资源组ID。

您可以调用[ListResourceGroups](~~158855~~)接口查询资源组信息。',
                      'type' => 'string',
                      'example' => 'rg-acfmzs372yg****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"caeba0bbb2be03f84eb48b699f0a****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\",\\n  \\"TotalCount\\": 10,\\n  \\"MaxResults\\": 1,\\n  \\"IpsecServers\\": [\\n    {\\n      \\"CreationTime\\": \\"2018-12-03T10:11:55Z\\",\\n      \\"OnlineClientCount\\": 1,\\n      \\"InternetIp\\": \\"47.22.XX.XX\\",\\n      \\"IpsecServerName\\": \\"test\\",\\n      \\"IDaaSInstanceId\\": \\"idaas-cn-hangzhou-****\\",\\n      \\"EffectImmediately\\": false,\\n      \\"VpnGatewayId\\": \\"vpn-bp1q8bgx4xnkm2ogj****\\",\\n      \\"LocalSubnet\\": \\"192.168.0.0/16,172.17.0.0/16\\",\\n      \\"Psk\\": \\"pgw6dy7d****\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"PskEnabled\\": true,\\n      \\"IpsecServerId\\": \\"iss-bp1bo3xuvcxo7ixll****\\",\\n      \\"MultiFactorAuthEnabled\\": true,\\n      \\"MaxConnections\\": 5,\\n      \\"ClientIpPool\\": \\"10.0.0.0/24\\",\\n      \\"IkeConfig\\": {\\n        \\"RemoteId\\": \\"139.67.XX.XX\\",\\n        \\"IkeLifetime\\": 86400,\\n        \\"IkeEncAlg\\": \\"aes\\",\\n        \\"LocalId\\": \\"116.64.XX.XX\\",\\n        \\"IkeMode\\": \\"main\\",\\n        \\"IkeVersion\\": \\"ikev2\\",\\n        \\"IkePfs\\": \\"group2\\",\\n        \\"IkeAuthAlg\\": \\"sha1\\"\\n      },\\n      \\"IpsecConfig\\": {\\n        \\"IpsecAuthAlg\\": \\"sha1\\",\\n        \\"IpsecLifetime\\": 86400,\\n        \\"IpsecEncAlg\\": \\"aes\\",\\n        \\"IpsecPfs\\": \\"group2\\"\\n      },\\n      \\"ResourceGroupId\\": \\"rg-acfmzs372yg****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListIpsecServersResponse>\\n    <NextToken>caeba0bbb2be03f84eb48b699f0a****</NextToken>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457</RequestId>\\n    <TotalCount>10</TotalCount>\\n    <MaxResults>1</MaxResults>\\n    <IpsecServers>\\n        <CreationTime>2018-12-03T10:11:55Z</CreationTime>\\n        <OnlineClientCount>1</OnlineClientCount>\\n        <InternetIp>47.22.XX.XX</InternetIp>\\n        <IpsecServerName>test</IpsecServerName>\\n        <IDaaSInstanceId>idaas-cn-hangzhou-****</IDaaSInstanceId>\\n        <EffectImmediately>false</EffectImmediately>\\n        <VpnGatewayId>vpn-bp1q8bgx4xnkm2ogj****</VpnGatewayId>\\n        <LocalSubnet>192.168.0.0/16,172.17.0.0/16</LocalSubnet>\\n        <Psk>pgw6dy7d****</Psk>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <PskEnabled>true</PskEnabled>\\n        <IpsecServerId>iss-bp1bo3xuvcxo7ixll****</IpsecServerId>\\n        <MultiFactorAuthEnabled>true</MultiFactorAuthEnabled>\\n        <MaxConnections>5</MaxConnections>\\n        <ClientIpPool>10.0.0.0/24</ClientIpPool>\\n        <IkeConfig>\\n            <RemoteId>139.67.XX.XX</RemoteId>\\n            <IkeLifetime>86400</IkeLifetime>\\n            <IkeEncAlg>aes</IkeEncAlg>\\n            <LocalId>116.64.XX.XX</LocalId>\\n            <IkeMode>main</IkeMode>\\n            <IkeVersion>ikev2</IkeVersion>\\n            <IkePfs>group2</IkePfs>\\n            <IkeAuthAlg>sha1</IkeAuthAlg>\\n        </IkeConfig>\\n        <IpsecConfig>\\n            <IpsecAuthAlg>sha1</IpsecAuthAlg>\\n            <IpsecLifetime>86400</IpsecLifetime>\\n            <IpsecEncAlg>aes</IpsecEncAlg>\\n            <IpsecPfs>group2</IpsecPfs>\\n        </IpsecConfig>\\n    </IpsecServers>\\n</ListIpsecServersResponse>","errorExample":""}]',
      'title' => '获取IPsec服务端列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListIpsecServerLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IpsecServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec服务端ID。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'iss-2zei2n5q5zhirfh73****',
          ),
        ),
        2 => 
        array (
          'name' => 'From',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志起始时间，仅支持传入UNIX秒级时间戳，例如1671003744，1671003744表示的时间为2022年12月14日15:42:24。

> 如果指定**From**，则必须指定**To**或**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1671003744',
          ),
        ),
        3 => 
        array (
          'name' => 'To',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志结束时间，仅支持传入UNIX秒级时间戳，例如1671004344，1671004344表示的时间为2022年12月14日15:52:24。

> 如果指定**To**，则必须指定**From**或**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1671004344',
          ),
        ),
        4 => 
        array (
          'name' => 'MinutePeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志周期。取值范围：**1**~**10**。单位：分钟。

> 如果不指定**From**和**To**，则必须指定**MinutePeriod**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DEDAC5B1-9292-5BF7-BDDF-61BA58CFB2FB',
              ),
              'Count' => 
              array (
                'description' => '当前页下日志的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'IsCompleted' => 
              array (
                'description' => '查询的日志是否精确。取值：

- **true**：精确。
- **false**：不精确。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '日志信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '字符串数组。

数组中的每一项都为一条日志。',
                  'type' => 'string',
                  'example' => '"2022-12-15 17:00:43 [INFO]: : iss-2zei2n5q5zhirfh73**** del ipsec policy successfully", "2022-12-15 17:00:43 [INFO]: : iss-2zei2n5q5zhirfh73**** add ipsec policy successfully"',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpsecServerId.NotFound',
            'errorMessage' => 'The specified IPsec server ID (%s) does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"DEDAC5B1-9292-5BF7-BDDF-61BA58CFB2FB\\",\\n  \\"Count\\": 10,\\n  \\"IsCompleted\\": true,\\n  \\"Data\\": [\\n    \\"\\\\\\"2022-12-15 17:00:43 [INFO]: : iss-2zei2n5q5zhirfh73**** del ipsec policy successfully\\\\\\", \\\\\\"2022-12-15 17:00:43 [INFO]: : iss-2zei2n5q5zhirfh73**** add ipsec policy successfully\\\\\\"\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListIpsecServerLogsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>B6DB370B-2CDB-5396-BD7C-EDCBA2756553</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <IsCompleted>true</IsCompleted>\\n    <Data>2022-12-15 17:00:43 [INFO]: : iss-2zei2n5q5zhirfh73**** del ipsec policy successfully</Data>\\n    <Data>2022-12-15 17:00:43 [INFO]: : iss-2zei2n5q5zhirfh73**** add ipsec policy successfully</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [INFO]: : nat keepalive msg send</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [DEBUG]: sockmisc.c:327:sendfromto(): sockname 192.168.1.70[500]</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [DEBUG]: sockmisc.c:329:sendfromto(): send packet from 192.168.1.70[500]</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [DEBUG]: sockmisc.c:331:sendfromto(): send packet to 223.XX.XX.215[17489]</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [DEBUG]: sockmisc.c:514:sendfromto(): 1 times of 1 bytes message will be sent to 223.XX.XX.215[17489]</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [INFO]: : nat keepalive msg send</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [DEBUG]: sockmisc.c:327:sendfromto(): sockname 192.168.1.70[4500]</Data>\\n    <Data>2022-12-15 17:04:20 iss-2zei2n5q5zhirfh73**** [DEBUG]: sockmisc.c:329:sendfromto(): send packet from 192.168.1.70[4500]</Data>\\n    <Count>10</Count>\\n</ListIpsecServerLogsResponse>","errorExample":""}]',
      'title' => '查看IPsec服务端日志',
      'summary' => '调用ListIpsecServerLogs接口查看IPsec服务端日志。',
    ),
    'AllocateIpv6Address' => 
    array (
      'summary' => '调用AllocateIpv6Address接口，分配一个IPv6地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址所在的交换机的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vsw-asdfjlnaue4g****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要申请的IPv6地址。指定的IPv6地址必须是在所属交换机的地址段内的空闲地址。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2408:XXXX:153:3921:851c:c435:7b12:1c5f',
          ),
        ),
        3 => 
        array (
          'name' => 'Ipv6AddressName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6-name',
          ),
        ),
        4 => 
        array (
          'name' => 'Ipv6AddressDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的实例描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6-description',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。关于资源组的更多信息，请参见[什么是资源组](~~121367~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，请勿输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        7 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04****',
          ),
        ),
        8 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值：

- true：发送检查请求，不会查询资源状况。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码DryRunOperation。

- false（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6AddressId' => 
              array (
                'description' => 'IPv6地址的实例ID。',
                'type' => 'string',
                'example' => 'ipv6-2zen5j4axcp5l5qyy****',
              ),
              'Ipv6Address' => 
              array (
                'description' => 'IPv6地址。',
                'type' => 'string',
                'example' => '2408:XXXX:153:3921:851c:c435:7b12:1c5f',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazdjdhd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.IPv6AddressAlreadyAllocated',
            'errorMessage' => 'The operation is failed because of the ipv6 address specified was allocated.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.AddressNotInVSwitchCidr',
            'errorMessage' => 'The operation is failed because of %s.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.IpAddress',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.IPv6Disabled',
            'errorMessage' => 'Operation failed because IPv6 is not enabled for the vSwitch.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.VSwitch',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeIpv6Addresses',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Ipv6AddressId\\": \\"ipv6-2zen5j4axcp5l5qyy****\\",\\n  \\"Ipv6Address\\": \\"2408:XXXX:153:3921:851c:c435:7b12:1c5f\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazdjdhd****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","type":"json"}]',
      'title' => '创建IPv6地址',
    ),
    'ReleaseIpv6Address' => 
    array (
      'summary' => '调用ReleaseIpv6Address接口，释放一个未关联实例的IPv6地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6-2zen5j4axcp5l5qyy****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe63****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建IP地址池。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C44F62BE-9CE7-4277-B117-69243F3988BF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.Ipv6InternetBandwidth',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.AssociationExist',
            'errorMessage' => 'Operation failed because the existence of an association.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv6InstanceId',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C44F62BE-9CE7-4277-B117-69243F3988BF\\"\\n}","type":"json"}]',
      'title' => '释放IPv6地址',
    ),
    'CreateIpv6Gateway' => 
    array (
      'summary' => 'IPv6网关是控制专有网络VPC（Virtual Private Cloud）的IPv6网络流量的网关。您可以通过调用CreateIpv6Gateway接口创建IPv6网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要开通IPv6网关的VPC ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-123sedrfswd23****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-），但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6GW',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的描述信息。

长度为2~256个字符，不能以`http://`或`https://`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6gatewayforVPC1',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6GatewayId' => 
              array (
                'description' => 'IPv6网关的ID。',
                'type' => 'string',
                'example' => 'ipv6gw-hp3y0l3ln89j8cdvf****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'IPv6网关所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph6aiy****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.Spec',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.ChargeType',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.OnlyOneIpv6GatewayInVpc',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.VpcIpv6Disabled',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.UnpaidBillsExist',
            'errorMessage' => 'The account has unpaid bills. Please pay your overdue bill first.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.InformationIncomplete',
            'errorMessage' => 'Your information is incomplete.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.NoPaymentMethod',
            'errorMessage' => 'No payment method is specified for your account.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.ResourceGroupId',
            'errorMessage' => 'Invalid ResourceGroupld value.',
          ),
          11 => 
          array (
            'errorCode' => 'MissingParam.vpcId',
            'errorMessage' => 'The parameter vpcId is mandatory.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified VPC does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv6GatewayId\\": \\"ipv6gw-hp3y0l3ln89j8cdvf****\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIpv6GatewayResponse>\\n    <Ipv6GatewayId>ipv6gw-hp3y0l3ln89j8cdvf****</Ipv6GatewayId>\\n    <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC</RequestId>\\n</CreateIpv6GatewayResponse>","errorExample":""}]',
      'title' => '创建IPv6网关',
      'description' => '- 创建IPv6网关之前，请确保目标VPC和交换机已开通IPv6网段能力，您可以调用[DescribeVpcAttribute](~~448582~~)，查询VPC的配置信息。

- 一个VPC内仅允许创建一个IPv6网关。

- **CreateIpv6Gateway**接口属于异步接口，即系统返回一个实例ID，但该IPv6网关尚未创建成功，系统后台的启动任务仍在进行。您可以调用[DescribeIpv6GatewayAttribute](~~102226~~)查询IPv6网关的创建状态：
    - 当IPv6网关处于**Creating**状态时，表示IPv6网关正在创建中。
    - 当IPv6网关处于**Created**状态时，表示IPv6网关创建完成。
- **CreateIpv6Gateway**接口不支持在同一个VPC下并发创建IPv6网关。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIpv6EgressOnlyRule' => 
    array (
      'summary' => '您可以通过创建仅主动出规则，使开通了IPv6网段的VPC中的ECS可以主动访问客户端的IPv6终端，但不允许客户端的IPv6终端通过互联网访问VPC网络中的ECS实例，调用CreateIpv6EgressOnlyRule为IPv6地址添加仅主动出规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6gw-hp3c2paq0ywauasza****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要设置仅主动出规则的IPv6地址ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6-hp3nxjkfxn5pnhgl5****',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要设置仅主动出规则的实例类型。

仅取值：**Ipv6Address**（默认值），表示为IPv6地址类型。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipv6Address',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '仅主动出规则的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-），开头不能为`http://`或`https://`。
',
            'type' => 'string',
            'required' => false,
            'example' => 'rulename',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '仅主动出规则的描述。

长度为2~256个字符，开头不能为`http://`或`https://`。',
            'type' => 'string',
            'required' => false,
            'example' => 'ruledescription',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6EgressRuleId' => 
              array (
                'description' => '仅主动出规则的ID。',
                'type' => 'string',
                'example' => 'ipv6py-hp3w98rmlbqp01245****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpv6Gateway.NotFound',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.InstanceType',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.FinancialLocked',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.EgressRuleVSwitch',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidIpv6Instance.NotFound',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.NoInternetBandwidth',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6EgressRuleExisted',
            'errorMessage' => 'An egress-only rule already exists for the IPv6 address.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.InternetBandwidthUnstable',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv6InternetBandwidth',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.EgressRuleInDefaultSpec',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded.Ipv6EgressRules',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'Mismatch.Ipv6AddressAndIpv6Gateway',
            'errorMessage' => 'The %s and %s are mismatched.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv6EgressRuleId\\": \\"ipv6py-hp3w98rmlbqp01245****\\",\\n  \\"RequestId\\": \\"9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIpv6EgressOnlyRuleResponse>\\r\\n\\t<RequestId>9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75</RequestId>\\r\\n\\t<Ipv6EgressRuleId>ipv6py-hp3w98rmlbqp01245****</Ipv6EgressRuleId>\\r\\n</CreateIpv6EgressOnlyRuleResponse>","errorExample":""}]',
      'title' => '为IPv6地址添加仅主动出规则',
      'description' => '- **CreateIpv6EgressOnlyRule**接口属于异步接口，即系统返回一个实例ID，但该IPv6地址的仅主动出规则尚未创建成功，系统后台的创建任务仍在进行。您可以调用[DescribeIpv6EgressOnlyRules](~~102208~~)查询IPv6地址的仅主动出规则的创建状态：
    - 当IPv6地址的仅主动出规则处于**Creating**状态时，表示IPv6地址仅主动出规则正在创建中。
    - 当IPv6地址的仅主动出规则处于**Created**状态时，表示IPv6地址仅主动出规则创建完成。
- **CreateIpv6EgressOnlyRule**接口不支持为同一个IPv6地址并发添加仅主动出规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIpv6Gateway' => 
    array (
      'summary' => '调用DeleteIpv6Gateway接口删除IPv6网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的IPv6网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6gw-hp3y0l3ln89j8****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9A8AABE-A84B-4AF2-A68A-8E2EA190E7AE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteTable',
            'errorMessage' => 'The specified resource gatewayRouteTable is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.GatewayRouteTableRelation',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv6Gateway',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.EgressRules',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.Ipv6InternetBandwidth',
            'errorMessage' => 'The specified resource of %s depends on %s, so the operation cannot be completed.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.RouteEntryUnstable',
            'errorMessage' => 'The operation is failed because of route entry related to it is unstable, please try later.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeIpv6Gateways',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E9A8AABE-A84B-4AF2-A68A-8E2EA190E7AE\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIpv6GatewayResponse>\\n    <RequestId>E9A8AABE-A84B-4AF2-A68A-8E2EA190E7AE</RequestId>\\n</DeleteIpv6GatewayResponse>","errorExample":""}]',
      'title' => '删除IPv6网关',
      'description' => '删除IPv6网关前，请先删除仅主动出规则。更多信息，请参见[DeleteIpv6EgressOnlyRule](~~102201~~)。

- **DeleteIpv6Gateway**接口属于异步接口，即系统返回一个请求ID，但该IPv6网关尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeIpv6GatewayAttribute](~~102226~~)查询IPv6网关的删除状态：
    - 当IPv6网关处于**Deleting**状态时，表示IPv6网关正在删除中。
    - 当查询不到指定的IPv6网关时，表示IPv6网关删除成功。
- **DeleteIpv6Gateway**接口不支持并发删除同一个IPv6网关。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIpv6EgressOnlyRule' => 
    array (
      'summary' => '调用DeleteIpv6EgressOnlyRule接口删除仅主动出规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6EgressOnlyRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的仅主动出规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6py-hp3w98rmlbqp0xxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123456',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.EgressOnlyRule',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv6EgressOnlyRule',
            'errorMessage' => 'The specified resource of IPv6 Gateway Rule is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeIpv6EgressOnlyRules',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIpv6EgressOnlyRuleResponse>\\n    <RequestId>9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75</RequestId>\\n</DeleteIpv6EgressOnlyRuleResponse>","errorExample":""}]',
      'title' => '删除仅主动出规则',
      'description' => '- **DeleteIpv6EgressOnlyRule**接口属于异步接口，即系统返回一个请求ID，但该仅主动出规则尚未删除成功，系统后台的删除任务仍在进行。您可以调用[DescribeIpv6EgressOnlyRules](~~102208~~)接口查询仅主动出规则的删除状态：
    - 当仅主动出规则处于**Deleting**状态时，表示仅主动出规则正在删除中。
    - 当查询不到指定的仅主动出规则时，表示仅主动出规则删除成功。
- **DeleteIpv6EgressOnlyRule**接口不支持并发删除同一个仅主动出规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIpv6InternetBandwidth' => 
    array (
      'summary' => '调用DeleteIpv6InternetBandwidth接口删除公网带宽。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的ID。

> 您必须输入参数**Ipv6AddressId**和参数**Ipv6InternetBandwidthId**中的任意一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6-2zen5j4axcp5l5qyy****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6InternetBandwidthId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的公网带宽实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6bw-uf6hcyzu65v98v3du****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E07E0FE6-5C21-405F-AF82-7613AA81EF92',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'BothEmptyParam.Ipv6AddressIdAndIpv6InternetBandwidthId',
            'errorMessage' => 'Either %s or %s should be specified.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ServiceManaged',
            'errorMessage' => 'Operation is forbidden because this instance belongs to Service manager.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E07E0FE6-5C21-405F-AF82-7613AA81EF92\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIpv6InternetBandwidthResponse>\\n    <RequestId>E07E0FE6-5C21-405F-AF82-7613AA81EF92</RequestId>\\n</DeleteIpv6InternetBandwidthResponse>","errorExample":""}]',
      'title' => '删除公网带宽',
      'description' => '**DeleteIpv6InternetBandwidth**接口不支持并发删除同一个公网带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIpv6InternetBandwidth' => 
    array (
      'summary' => '调用ModifyIpv6InternetBandwidth接口修改IPv6地址的公网带宽。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的ID。

> 您必须输入参数**Ipv6AddressId**和参数**Ipv6InternetBandwidthId**中的任意一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6-2zen5j4axcp5l5qyy****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6InternetBandwidthId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的公网带宽实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6bw-uf6hcyzu65v98v3du****',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的公网带宽。单位：Mbps。

<props="china">

- 计费方式为按使用流量计费时，公网带宽取值范围：**1**~**1000**。
- 计费方式为按带宽计费时，公网带宽取值范围：**1**~**2000**。
- 计费方式为按传统95计费时，公网带宽取值范围：**1**~**2000**。

</props>

<props="intl">

- 计费方式为按使用流量计费时，公网带宽取值范围：**1**~**1000**。
- 计费方式为按带宽计费时，公网带宽取值范围：**1**~**2000**。
</props>',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '200',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D560AF68-4CE8-4A5C-B3FE-469F558094D0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.Ipv6InstanceId',
            'errorMessage' => 'The param of Ipv6InstanceId is missing.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIpv6Instance.NotFound',
            'errorMessage' => 'The specified Ipv6AddressId or Ipv6InternetBandwidthId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of bandwidth is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.FinancialLocked',
            'errorMessage' => 'The operation is forbidden because of financialLocked.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.InternetBandwidthNonExist',
            'errorMessage' => 'The operation is forbidden because of InternetBandwidthNonExist.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.InternetBandwidthUnstable',
            'errorMessage' => 'The operation is forbidden because of InternetBandwidthUnstable.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.BandwidthExceedLimit',
            'errorMessage' => 'The operation is forbidden because of BandwidthExceedLimit.',
          ),
          7 => 
          array (
            'errorCode' => 'ParamExclusive.Ipv6AddressIdAndIpv6InternetBandwidthId',
            'errorMessage' => 'Ipv6AddressId and Ipv6InternetBandwidthId is mutually exclusive.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIpv6Instance.NotFound',
            'errorMessage' => 'The specified Ipv6AddressId or Ipv6InternetBandwidthId is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.QuerySpInfo',
            'errorMessage' => 'query resource by sp error',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.QueryAccountInfo',
            'errorMessage' => 'Query account info failed when create order.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.SyncTradeResource',
            'errorMessage' => 'Resource transaction information synchronization failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D560AF68-4CE8-4A5C-B3FE-469F558094D0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIpv6InternetBandwidthResponse>\\n    <RequestId>D560AF68-4CE8-4A5C-B3FE-469F558094D0</RequestId>\\n</ModifyIpv6InternetBandwidthResponse>","errorExample":""}]',
      'title' => '修改IPv6地址的公网带宽',
      'description' => '**ModifyIpv6InternetBandwidth**接口不支持并发修改同一个IPv6公网带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIpv6GatewayAttribute' => 
    array (
      'summary' => '调用ModifyIpv6GatewayAttribute接口修改IPv6网关的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的IPv6网关的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6gw-hp39kh1ya51yzp2lu****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的名称。

长度为2~256个字符，必须以英文大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6name',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6description',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpv6GatewayId.NotFound',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIpv6GatewayAttributeResponse>\\n    <RequestId>9DFEDBEE-E5AB-49E8-A2DC-CC114C67AF75</RequestId>\\n</ModifyIpv6GatewayAttributeResponse>","errorExample":""}]',
      'title' => '修改IPv6网关的信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIpv6AddressAttribute' => 
    array (
      'summary' => '调用ModifyIpv6AddressAttribute接口修改IPv6地址的名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址所在的地域。您可以通过调用[DescribeRegions](~~36063~~)获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址所在的地域。您可以通过调用[DescribeRegions](~~36063~~)获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6-hp32vv2klzw4yerdf****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的名称。

长度为2~128个字符，必须以英文大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的描述信息。

长度为2~256个字符，必须以英文大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D560AF68-4CE8-4A5C-B3FE-469F558094D0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpv6AddressId.NotFound',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => 'The param of Name [%s] is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => 'The param of Description [%s] is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D560AF68-4CE8-4A5C-B3FE-469F558094D0\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIpv6AddressAttributeResponse>\\n    <RequestId>D560AF68-4CE8-4A5C-B3FE-469F558094D0</RequestId>\\n</ModifyIpv6AddressAttributeResponse>","errorExample":""}]',
      'title' => '修改IPv6地址的名称和描述',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIpv6Gateways' => 
    array (
      'summary' => '调用DescribeIpv6Gateways接口查询某个地域下已创建的IPv6网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6gw-hp3rwmtmfhgis****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关关联的VPC ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-123sedrfswd23****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的名称。

长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6GW',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页包含的条目数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E3A06196-3E7C-490D-8F39-CB4B5A0CE8AD',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的条目数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Ipv6Gateways' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6Gateway' => 
                  array (
                    'description' => 'IPv6网关的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'IPv6网关的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => 'IPv6网关的创建时间。',
                          'type' => 'string',
                          'example' => '2020-12-20T14:51:23Z',
                        ),
                        'Status' => 
                        array (
                          'description' => 'IPv6网关的运行状态。取值：

- **Pending**：配置中。

- **Available**：可用。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'VpcId' => 
                        array (
                          'description' => 'IPv6网关关联的VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-123sedrfswd23****',
                        ),
                        'Description' => 
                        array (
                          'description' => 'IPv6网关的描述信息。',
                          'type' => 'string',
                          'example' => 'descriptionforIPv6GW',
                        ),
                        'Ipv6GatewayId' => 
                        array (
                          'description' => 'IPv6网关的ID。',
                          'type' => 'string',
                          'example' => 'ipv6gw-hp3rwmtmfhgisipv6gw-hp3rwmtmfhgis****',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => 'IPv6网关的过期时间。',
                          'type' => 'string',
                          'example' => '2021-12-20T14:51:23Z',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => 'IPv6网关的状态，取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。

- **SecurityLocked**：安全锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Name' => 
                        array (
                          'description' => 'IPv6网关的名称。',
                          'type' => 'string',
                          'example' => 'ipv6GW',
                        ),
                        'InstanceChargeType' => 
                        array (
                          'description' => 'IPv6网关的计费方式。
	
仅取值：**PostPaid**，表示后付费。',
                          'type' => 'string',
                          'example' => 'PostPaid',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'IPv6网关的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-huhehaote',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-bp67acfmxazb4ph****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签列表信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"E3A06196-3E7C-490D-8F39-CB4B5A0CE8AD\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"Ipv6Gateways\\": {\\n    \\"Ipv6Gateway\\": [\\n      {\\n        \\"CreationTime\\": \\"2020-12-20T14:51:23Z\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"VpcId\\": \\"vpc-123sedrfswd23****\\",\\n        \\"Description\\": \\"descriptionforIPv6GW\\",\\n        \\"Ipv6GatewayId\\": \\"ipv6gw-hp3rwmtmfhgisipv6gw-hp3rwmtmfhgis****\\",\\n        \\"ExpiredTime\\": \\"2021-12-20T14:51:23Z\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"Name\\": \\"ipv6GW\\",\\n        \\"InstanceChargeType\\": \\"PostPaid\\",\\n        \\"RegionId\\": \\"cn-huhehaote\\",\\n        \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIpv6GatewaysResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>E3A06196-3E7C-490D-8F39-CB4B5A0CE8AD</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <Ipv6Gateways>\\n        <CreationTime>2020-12-20T14:51:23Z</CreationTime>\\n        <Status>Available</Status>\\n        <VpcId>vpc-123sedrfswd23****</VpcId>\\n        <Description>descriptionforIPv6GW</Description>\\n        <Ipv6GatewayId>ipv6gw-hp3rwmtmfhgisipv6gw-hp3rwmtmfhgis****</Ipv6GatewayId>\\n        <ExpiredTime>2021-12-20T14:51:23Z</ExpiredTime>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <Name>ipv6GW</Name>\\n        <InstanceChargeType>PostPaid</InstanceChargeType>\\n        <RegionId>cn-huhehaote</RegionId>\\n        <ResourceGroupId>rg-bp67acfmxazb4ph****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </Ipv6Gateways>\\n</DescribeIpv6GatewaysResponse>","errorExample":""}]',
      'title' => '查询已创建的IPv6网关',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIpv6EgressOnlyRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6gw-bp1rhhs9zjlxukc5e****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6EgressOnlyRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查看的仅主动出规则ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6py-bp1rr7fq1md8pbb3k****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'rulename',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要设置仅主动出规则的实例类型，取值：

 **Ipv6Address**：IPv6地址。

',
            'type' => 'string',
            'required' => false,
            'example' => 'Ipv6Address',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置了仅主动出规则的IPv6地址的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6-bp12uzwhac8tv3xx6****',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E16671B7-DEA6-48E0-8E9C-41913DAD44DD',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Ipv6EgressOnlyRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6EgressOnlyRule' => 
                  array (
                    'description' => '仅主动出规则的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '仅主动出规则的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '仅主动出规则的状态。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'Description' => 
                        array (
                          'description' => '仅主动出规则的描述信息。',
                          'type' => 'string',
                          'example' => 'ruledescription',
                        ),
                        'Ipv6EgressOnlyRuleId' => 
                        array (
                          'description' => '仅主动出规则的ID。',
                          'type' => 'string',
                          'example' => 'ipv6py-bp1rr7fq1md8pbb3k****',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '配置了仅主动出规则的IPv6地址的ID。',
                          'type' => 'string',
                          'example' => 'ipv6gw-bp1rhhs9zjlxukc5e****',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '配置了仅主动出规则的实例类型。',
                          'type' => 'string',
                          'example' => 'Ipv6Address',
                        ),
                        'Name' => 
                        array (
                          'description' => '仅主动出规则的名称。',
                          'type' => 'string',
                          'example' => 'rulename',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"E16671B7-DEA6-48E0-8E9C-41913DAD44DD\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"Ipv6EgressOnlyRules\\": {\\n    \\"Ipv6EgressOnlyRule\\": [\\n      {\\n        \\"Status\\": \\"Available\\",\\n        \\"Description\\": \\"ruledescription\\",\\n        \\"Ipv6EgressOnlyRuleId\\": \\"ipv6py-bp1rr7fq1md8pbb3k****\\",\\n        \\"InstanceId\\": \\"ipv6gw-bp1rhhs9zjlxukc5e****\\",\\n        \\"InstanceType\\": \\"Ipv6Address\\",\\n        \\"Name\\": \\"rulename\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIpv6EgressOnlyRulesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>E16671B7-DEA6-48E0-8E9C-41913DAD44DD</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <Ipv6EgressOnlyRules>\\n        <Status>Available</Status>\\n        <Description>ruledescription</Description>\\n        <Ipv6EgressOnlyRuleId>ipv6gwpy-123456xxxxxxxx</Ipv6EgressOnlyRuleId>\\n        <InstanceId>i-123456xxxxxxxx</InstanceId>\\n        <InstanceType>Ipv6Address</InstanceType>\\n        <Name>rulename</Name>\\n    </Ipv6EgressOnlyRules>\\n</DescribeIpv6EgressOnlyRulesResponse>","errorExample":""}]',
      'title' => '查询创建的仅主动出规则',
      'summary' => '调用DescribeIpv6EgressOnlyRules接口查询创建的仅主动出规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIpv6Addresses' => 
    array (
      'summary' => '调用DescribeIpv6Addresses接口查询IPv6地址列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址ID。每次调用最多可以输入20个IPv6地址ID，以半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6-2zen5j4axcp5l5qyy****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址。',
            'type' => 'string',
            'required' => false,
            'example' => '2408:XXXX:153:3921:851c:c435:7b12:1c5f',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址的名称。

名称长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'AssociatedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址关联的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2ze72wuqj4y3jl4f****',
          ),
        ),
        5 => 
        array (
          'name' => 'AssociatedInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址所关联的实例类型，取值：

 - **EcsInstance**：VPC类型的ECS。
- **NetworkInterface**：辅助弹性网卡ENI。',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
        6 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址的通信能力类型，取值：

- **Private**：私网通信类型。

- **Public**：公网通信类型。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Private',
          ),
        ),
        7 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址所在的VPC ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp15zckdt37pq72zv****',
          ),
        ),
        8 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址所在的交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-25navfgbue4g****',
          ),
        ),
        9 => 
        array (
          'name' => 'Ipv6InternetBandwidthId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开通公网带宽后，要查询的IPv6地址对应的公网带宽实例ID。
',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6bw-uf6hcyzu65v98v3du****',
          ),
        ),
        10 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含未生效的订购数据，取值：

- **false**（默认值）：不包含未生效的订购数据。

- **true**：包含未生效的订购数据。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-bp67acfmxazb4ph****',
          ),
        ),
        12 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。列表元素最大数量：20。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签集合。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。


一个标签值最多支持128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'yunke',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        13 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        14 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值：**50**；默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        15 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6地址所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        16 => 
        array (
          'name' => 'ServiceManaged',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为托管实例。取值：
- **true**：是托管实例。
- **false**：不是托管实例。

不填默认查询所有实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AA4486A8-B6AE-469E-AB09-820EF8ECFA2B',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Ipv6Addresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6Address' => 
                  array (
                    'description' => 'IPv6地址的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Ipv6地址的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'IPv6地址所在的VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp15zckdt37pq72zv****',
                        ),
                        'Status' => 
                        array (
                          'description' => 'IPv6地址的状态，取值：

- **Pending**：配置中。

- **Available**：可用。
',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'Ipv6AddressId' => 
                        array (
                          'description' => 'IPv6地址的实例ID。',
                          'type' => 'string',
                          'example' => 'ipv6-2zen5j4axcp5l5qyy****',
                        ),
                        'AllocationTime' => 
                        array (
                          'description' => 'IPv6地址的创建时间。',
                          'type' => 'string',
                          'example' => '2020-12-20T14:56:09Z',
                        ),
                        'Ipv6AddressName' => 
                        array (
                          'description' => 'IPv6地址的实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Ipv6AddressDescription' => 
                        array (
                          'description' => 'IPv6地址的实例描述。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AssociatedInstanceType' => 
                        array (
                          'description' => 'IPv6地址关联的实例类型。',
                          'type' => 'string',
                          'example' => 'EcsInstance',
                        ),
                        'AssociatedInstanceId' => 
                        array (
                          'description' => 'IPv6地址关联的实例ID。',
                          'type' => 'string',
                          'example' => 'i-2ze72wuqj4y3jl4f****',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => 'IPv6地址的通信能力类型，取值：

- **Private**：私网通信类型。

- **Public**：公网通信类型 。
',
                          'type' => 'string',
                          'example' => 'Private',
                        ),
                        'Ipv6Address' => 
                        array (
                          'description' => 'IPv6地址。',
                          'type' => 'string',
                          'example' => '2408:XXXX:153:3921:851c:c435:7b12:1c5f',
                        ),
                        'Ipv6Isp' => 
                        array (
                          'description' => 'IPv6地址的服务运营商，取值：
- **BGP**（默认值）：阿里云BGP IPv6。
- **ChinaMobile**：中国移动（单线）。
- **ChinaUnicom**：中国联通（单线）。
- **ChinaTelecom**：中国电信（单线）。',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => 'IPv6地址所在的交换机的ID。',
                          'type' => 'string',
                          'example' => 'vsw-25navfgbue4g****',
                        ),
                        'Ipv6GatewayId' => 
                        array (
                          'description' => 'IPv6地址的所属IPv6网关实例ID。',
                          'type' => 'string',
                          'example' => 'ipv6gw-2zewg0l66s73b4k2q****',
                        ),
                        'RealBandwidth' => 
                        array (
                          'description' => 'IPv6地址的实际带宽峰值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'Ipv6InternetBandwidth' => 
                        array (
                          'description' => 'IPv6地址的公网带宽信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'InternetChargeType' => 
                            array (
                              'description' => 'IPv6地址的公网带宽的计费方式，取值：

<props="china">

- **PayByTraffic**：按使用流量计费。
- **PayByBandwidth**：按固定带宽计费。
- **PayByOld95**：表示按传统95计费。IPv6公网带宽默认不支持按传统95计费，如需使用，请联系客户经理申请。

</props>

<props="intl">

- **PayByTraffic**：按使用流量计费。
- **PayByBandwidth**：按固定带宽计费。

</props>',
                              'type' => 'string',
                              'example' => 'PayByTraffic',
                            ),
                            'BusinessStatus' => 
                            array (
                              'description' => 'IPv6地址的公网带宽的商业状态，取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。

- **SecurityLocked**：安全锁定。',
                              'type' => 'string',
                              'example' => 'Normal',
                            ),
                            'Bandwidth' => 
                            array (
                              'description' => 'IPv6地址的独享公网带宽，单位：Mbps。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'Ipv6InternetBandwidthId' => 
                            array (
                              'description' => 'IPv6地址的公网带宽实例ID。',
                              'type' => 'string',
                              'example' => 'ipv6bw-hp3b35oq1fj50kbv****',
                            ),
                            'InstanceChargeType' => 
                            array (
                              'description' => 'IPv6地址的公网带宽的付费方式，取值：

**PostPaid**：后付费。
',
                              'type' => 'string',
                              'example' => 'PostPaid',
                            ),
                            'HasReservationData' => 
                            array (
                              'description' => '是否有续费数据。

- **false**：无续费数据。

- **true**：有续费数据。只有在入参**IncludeReservationData**为**true**，且有未生效订购数据时才会为**true**。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'ReservationInternetChargeType' => 
                            array (
                              'description' => '续费付费类型。


<props="china">

- **PayByTraffic**：按使用流量计费。
- **PayByBandwidth**：按固定带宽计费。
- **PayByOld95**：按传统95计费。IPv6公网带宽默认不支持按传统95计费，如需使用，请联系客户经理申请。

</props>

<props="intl">

- **PayByTraffic**：按使用流量计费。
- **PayByBandwidth**：按固定带宽计费。

</props>',
                              'type' => 'string',
                              'example' => 'PayByTraffic',
                            ),
                            'ReservationOrderType' => 
                            array (
                              'description' => '续费订单类型。取值：**RENEW**，表示续费订单。',
                              'type' => 'string',
                              'example' => 'RENEW',
                            ),
                            'ReservationActiveTime' => 
                            array (
                              'description' => '续费生效时间，格式为`YYYY-MM-DDThh:mm:ssZ`。',
                              'type' => 'string',
                              'example' => '2021-05-23T16:00:00Z',
                            ),
                            'ReservationBandwidth' => 
                            array (
                              'description' => '续费带宽。单位：Mbps。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '12',
                            ),
                          ),
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'IPv6网关所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-bp67acfmxazb4ph****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签的标签值。

标签值最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一个标签键对应一个标签值。一次最多支持输入20个标签值。

',
                                    'type' => 'string',
                                    'example' => 'yunke',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ServiceManaged' => 
                        array (
                          'description' => '是否为托管实例。取值：

- **1**：是托管实例。

- **0**：不是托管实例。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6Address',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.NetworkType',
            'errorMessage' => 'The param of %s is illegal.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"AA4486A8-B6AE-469E-AB09-820EF8ECFA2B\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"Ipv6Addresses\\": {\\n    \\"Ipv6Address\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-bp15zckdt37pq72zv****\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"Ipv6AddressId\\": \\"ipv6-2zen5j4axcp5l5qyy****\\",\\n        \\"AllocationTime\\": \\"2020-12-20T14:56:09Z\\",\\n        \\"Ipv6AddressName\\": \\"test\\",\\n        \\"Ipv6AddressDescription\\": \\"test\\",\\n        \\"AssociatedInstanceType\\": \\"EcsInstance\\",\\n        \\"AssociatedInstanceId\\": \\"i-2ze72wuqj4y3jl4f****\\",\\n        \\"NetworkType\\": \\"Private\\",\\n        \\"Ipv6Address\\": \\"2408:XXXX:153:3921:851c:c435:7b12:1c5f\\",\\n        \\"Ipv6Isp\\": \\"BGP\\",\\n        \\"VSwitchId\\": \\"vsw-25navfgbue4g****\\",\\n        \\"Ipv6GatewayId\\": \\"ipv6gw-2zewg0l66s73b4k2q****\\",\\n        \\"RealBandwidth\\": 5,\\n        \\"Ipv6InternetBandwidth\\": {\\n          \\"InternetChargeType\\": \\"PayByTraffic\\",\\n          \\"BusinessStatus\\": \\"Normal\\",\\n          \\"Bandwidth\\": 5,\\n          \\"Ipv6InternetBandwidthId\\": \\"ipv6bw-hp3b35oq1fj50kbv****\\",\\n          \\"InstanceChargeType\\": \\"PostPaid\\",\\n          \\"HasReservationData\\": false,\\n          \\"ReservationInternetChargeType\\": \\"PayByTraffic\\",\\n          \\"ReservationOrderType\\": \\"RENEW\\",\\n          \\"ReservationActiveTime\\": \\"2021-05-23T16:00:00Z\\",\\n          \\"ReservationBandwidth\\": 12\\n        },\\n        \\"ResourceGroupId\\": \\"rg-bp67acfmxazb4ph****\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"yunke\\"\\n            }\\n          ]\\n        },\\n        \\"ServiceManaged\\": 1\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIpv6AddressesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>AA4486A8-B6AE-469E-AB09-820EF8ECFA2B</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <Ipv6Addresses>\\n        <VpcId>vpc-bp15zckdt37pq72zv****</VpcId>\\n        <Status>Available</Status>\\n        <Ipv6AddressId>ipv6-2zen5j4axcp5l5qyy****</Ipv6AddressId>\\n        <AllocationTime>2020-12-20T14:56:09Z</AllocationTime>\\n        <Ipv6AddressName>test</Ipv6AddressName>\\n        <AssociatedInstanceType>EcsInstance</AssociatedInstanceType>\\n        <AssociatedInstanceId>i-2ze72wuqj4y3jl4f****</AssociatedInstanceId>\\n        <NetworkType>Private</NetworkType>\\n        <Ipv6Address>2408:XXXX:153:3921:851c:c435:7b12:1c5f</Ipv6Address>\\n        <Ipv6Isp>BGP</Ipv6Isp>\\n        <VSwitchId>vsw-25navfgbue4g****</VSwitchId>\\n        <Ipv6GatewayId>ipv6gw-2zewg0l66s73b4k2q****</Ipv6GatewayId>\\n        <RealBandwidth>5</RealBandwidth>\\n        <Ipv6InternetBandwidth>\\n            <InternetChargeType>PayByTraffic</InternetChargeType>\\n            <BusinessStatus>Normal</BusinessStatus>\\n            <Bandwidth>5</Bandwidth>\\n            <Ipv6InternetBandwidthId>ipv6bw-hp3b35oq1fj50kbv****</Ipv6InternetBandwidthId>\\n            <InstanceChargeType>PostPaid</InstanceChargeType>\\n            <HasReservationData>false</HasReservationData>\\n            <ReservationInternetChargeType>PayByTraffic</ReservationInternetChargeType>\\n            <ReservationOrderType>RENEW</ReservationOrderType>\\n            <ReservationActiveTime>2021-05-23T16:00:00Z</ReservationActiveTime>\\n            <ReservationBandwidth>12</ReservationBandwidth>\\n        </Ipv6InternetBandwidth>\\n    </Ipv6Addresses>\\n</DescribeIpv6AddressesResponse>","errorExample":""}]',
      'title' => '查询IPv6地址列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIpv6GatewayAttribute' => 
    array (
      'summary' => '调用DescribeIpv6GatewayAttribute接口查询指定IPv6网关所在地域，所属VPC，运行状态，计费方式等详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6网关ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6gw-hp3y0l3ln89j8cdvf****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'VpcId' => 
              array (
                'description' => 'IPv6网关所在的VPC ID。',
                'type' => 'string',
                'example' => 'vpc-123sedrfswd23****',
              ),
              'Status' => 
              array (
                'description' => 'IPv6网关的状态。取值：

- **Pending**：配置中。

- **Available**：可用。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'CreationTime' => 
              array (
                'description' => 'IPv6网关的创建时间。',
                'type' => 'string',
                'example' => '2018-12-05T09:21:35Z',
              ),
              'RegionId' => 
              array (
                'description' => 'IPv6网关所在的地域ID。',
                'type' => 'string',
                'example' => 'cn-huhehaote',
              ),
              'InstanceChargeType' => 
              array (
                'description' => 'IPv6网关的计费方式。',
                'type' => 'string',
                'example' => 'PostPaid',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0ED8D006-F706-4D23-88ED-E11ED28DCAC',
              ),
              'Ipv6GatewayId' => 
              array (
                'description' => 'IPv6网关的实例ID。',
                'type' => 'string',
                'example' => 'ipv6gw-hp3y0l3ln89j8cdvf****',
              ),
              'Description' => 
              array (
                'description' => 'IPv6网关的描述信息。',
                'type' => 'string',
                'example' => 'test',
              ),
              'ExpiredTime' => 
              array (
                'description' => 'IPv6网关的过期时间。',
                'type' => 'string',
                'example' => '2019-1-05T09:21:35Z',
              ),
              'BusinessStatus' => 
              array (
                'description' => 'IPv6网关的状态，取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。

- **SecurityLocked**：安全锁定。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'Name' => 
              array (
                'description' => 'IPv6网关的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph6aiy****',
              ),
              'GatewayRouteTableId' => 
              array (
                'description' => 'IPv6网关绑定的网关路由表ID。


> 仅绑定了网关路由表的IPv6网关显示此参数。',
                'type' => 'string',
                'example' => 'vtb-5ts0ohchwkp3dydt2****',
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tag' => 
                  array (
                    'description' => '标签列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签键。最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

一个标签键最多支持128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

一个标签值最多支持128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VpcId\\": \\"vpc-123sedrfswd23****\\",\\n  \\"Status\\": \\"Available\\",\\n  \\"CreationTime\\": \\"2018-12-05T09:21:35Z\\",\\n  \\"RegionId\\": \\"cn-huhehaote\\",\\n  \\"InstanceChargeType\\": \\"PostPaid\\",\\n  \\"RequestId\\": \\"0ED8D006-F706-4D23-88ED-E11ED28DCAC\\",\\n  \\"Ipv6GatewayId\\": \\"ipv6gw-hp3y0l3ln89j8cdvf****\\",\\n  \\"Description\\": \\"test\\",\\n  \\"ExpiredTime\\": \\"2019-1-05T09:21:35Z\\",\\n  \\"BusinessStatus\\": \\"Normal\\",\\n  \\"Name\\": \\"test\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n  \\"GatewayRouteTableId\\": \\"vtb-5ts0ohchwkp3dydt2****\\",\\n  \\"Tags\\": {\\n    \\"Tag\\": [\\n      {\\n        \\"Key\\": \\"FinanceDept\\",\\n        \\"Value\\": \\"FinanceJoshua\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIpv6GatewayAttributeResponse>\\n    <VpcId>vpc-123sedrfswd23****</VpcId>\\n    <Status>Available</Status>\\n    <CreationTime>2018-12-05T09:21:35Z</CreationTime>\\n    <RegionId>cn-huhehaote</RegionId>\\n    <InstanceChargeType>PostPaid</InstanceChargeType>\\n    <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC</RequestId>\\n    <Ipv6GatewayId>ipv6gw-hp3y0l3ln89j8cdvf****</Ipv6GatewayId>\\n    <Description>test</Description>\\n    <ExpiredTime>2019-1-05T09:21:35Z</ExpiredTime>\\n    <BusinessStatus>Normal</BusinessStatus>\\n    <Name>test</Name>\\n    <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</DescribeIpv6GatewayAttributeResponse>","errorExample":""}]',
      'title' => '查询指定IPv6网关的详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AllocateIpv6InternetBandwidth' => 
    array (
      'summary' => '默认创建的IPv6网关只具备私网通信的能力，您可以调用AllocateIpv6InternetBandwidth接口为IPv6地址购买公网带宽，使VPC网络中的ECS实例可以通过该IPv6地址访问互联网，同时也允许IPv6终端通过互联网访问VPC网络中的ECS实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6gw-uf6hcyzu65v98v3du****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6-2zen5j4axcp5l5qyy****',
          ),
        ),
        3 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6公网带宽的计费方式。取值：

<props="china">

- **PayByTraffic**：按使用流量计费。
- **PayByBandwidth**（默认值）：按带宽计费。
- **PayByOld95**：表示按传统95计费。IPv6公网带宽默认不支持按传统95计费，如需使用，请联系客户经理申请。

</props>
<props="intl">

- **PayByTraffic**：按使用流量计费。
- **PayByBandwidth**（默认值）：按带宽计费。

</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByBandwidth',
          ),
        ),
        4 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6地址的公网带宽。单位：Mbps。

<props="china">

- 当**InternetChargeType**为**PayByTraffic**时，公网带宽取值范围：**1**~**1000**。
- 当**InternetChargeType**为**PayByBandwidth**时，公网带宽取值范围：**1**~**2000**。
-  当**InternetChargeType**为**PayByOld95**时，公网带宽取值范围：**1**~**2000**。

</props>
<props="intl">
 
- 当**InternetChargeType**为**PayByTraffic**时，公网带宽取值范围：**1**~**1000**。
- 当**InternetChargeType**为**PayByBandwidth**时，公网带宽取值范围：**1**~**2000**。

</props>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '200',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6网关的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-huhehaote',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6AddressId' => 
              array (
                'description' => 'IPv6地址的ID。',
                'type' => 'string',
                'example' => 'ipv6-2zen5j4axcp5l5qyy****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6972A26E-99B1-4367-9890-FBDEBB0F5E7D',
              ),
              'InternetBandwidthId' => 
              array (
                'description' => '开通公网带宽后，要查询的IPv6网关对应的公网带宽实例ID。',
                'type' => 'string',
                'example' => 'ipv6bw-uf6hcyzu65v98v3du****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.Ipv6InstanceId',
            'errorMessage' => 'The param of Ipv6InstanceId is missing.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpv6Instance.NotFound',
            'errorMessage' => 'The specified Ipv6AddressId or Ipv6InternetBandwidthId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.ChargeType',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.InternetChargeType',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.PrePaid',
            'errorMessage' => '%s is unsupported.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6GatewayDisMatchIpv6Address',
            'errorMessage' => 'The operation is failed because of %s.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.InternetBandwidthAlreadyExisted',
            'errorMessage' => 'The operation is failed because of %s.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.Ipv6GatewayNotExist',
            'errorMessage' => 'The operation is failed because of %s.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.Ipv6Instance',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6Address',
            'errorMessage' => 'The param of %s is illegal.',
          ),
          11 => 
          array (
            'errorCode' => 'UnsupportedFeature.InternetChargeTypeOnFreeIpv6Address',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
          12 => 
          array (
            'errorCode' => 'UnsupportedFeature.InternetChargeTypeOnStaticIsp',
            'errorMessage' => 'The feature of %s is not supported.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.ULA',
            'errorMessage' => '%s is unsupported.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.OpenCdtServiceFirst',
            'errorMessage' => 'The operation is failed because of %s.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.Ipv6Address',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.QueryAccountInfo',
            'errorMessage' => 'Query account info failed when create order.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.SaleValidate',
            'errorMessage' => 'Validate sale condition with subArticle failed.',
          ),
          2 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::DescribeIpv6Addresses',
        'callbackInterval' => 3,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv6AddressId\\": \\"ipv6-2zen5j4axcp5l5qyy****\\",\\n  \\"RequestId\\": \\"6972A26E-99B1-4367-9890-FBDEBB0F5E7D\\",\\n  \\"InternetBandwidthId\\": \\"ipv6bw-uf6hcyzu65v98v3du****\\"\\n}","errorExample":""},{"type":"xml","example":"<AllocateIpv6InternetBandwidthResponse>\\n    <Ipv6AddressId>ipv6-2zen5j4axcp5l5qyy****</Ipv6AddressId>\\n    <RequestId>6972A26E-99B1-4367-9890-FBDEBB0F5E7D</RequestId>\\n    <InternetBandwidthId>ipv6bw-uf6hcyzu65v98v3du****</InternetBandwidthId>\\n</AllocateIpv6InternetBandwidthResponse>","errorExample":""}]',
      'title' => '为IPv6地址购买公网带宽',
      'description' => '- 调用该接口之前，请确保您已在具有IPv6网段的VPC中创建了支持IPv6地址的ECS，具体操作，请参见[搭建IPv6专有网络](~~100540~~)。
- **AllocateIpv6InternetBandwidth**接口不支持并发购买同一个IPv6公网带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIPv6TranslatorAclList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用 DescribeRegions接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'example' => 'sha123456',
          ),
        ),
        2 => 
        array (
          'name' => 'AclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 访问控制策略组名称。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AclId' => 
              array (
                'description' => '访问控制策略组ID。',
                'type' => 'string',
                'example' => 'ipv6transacl-bp1de2xxxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8B2F5262-6B57-43F2-xxxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is not support.',
          ),
          1 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full.',
          ),
          2 => 
          array (
            'errorCode' => 'Nat64Acl.AclNameExist',
            'errorMessage' => 'This ipv6 translator acl name is existed',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal Error',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AclId\\": \\"ipv6transacl-bp1de2xxxx\\",\\n  \\"RequestId\\": \\"8B2F5262-6B57-43F2-xxxxx\\"\\n}","errorExample":"\\n"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<CreateIPv6TranslatorAclListResponse>\\n  <RequestId>0ED8D006-F706-4D23-88ED-E11ED28DCAC0</RequestId>\\n  <AclId>vsw-25naue4gz</AclId>\\n</CreateIPv6TranslatorAclListResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<CreateVpcResponse>\\n</CreateVpcResponse>"}]',
      'title' => '创建访问控制策略组',
      'summary' => '创建访问控制策略组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIPv6TranslatorEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用**DescribeRegions**接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务的实例ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6trans-bp1858ys57xxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'EntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换映射条目的名称。长度为 2~100个字符，必须以字母或中文开头，可包含数字，半角句点（.），下划线（_）和短划线（-）。但不能以`http://`或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'name1',
          ),
        ),
        3 => 
        array (
          'name' => 'EntryDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换映射条目的描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        4 => 
        array (
          'name' => 'AllocateIpv6Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例分配的IPv6地址的使用端口。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '80',
          ),
        ),
        5 => 
        array (
          'name' => 'BackendIpv4Addr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 需要提供IPv6服务的公网IPv4地址（IPv4-only的服务器的IPv4地址）。 ',
            'type' => 'string',
            'required' => true,
            'example' => '46.22.xx.xx',
          ),
        ),
        6 => 
        array (
          'name' => 'BackendIpv4Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要提供IPv6服务的公网IPv4地址的端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '80',
          ),
        ),
        7 => 
        array (
          'name' => 'TransProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。取值：

- **tcp**：转发TCP协议的报文。  
- **udp**：转发UDP协议的报文。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'tcp',
          ),
        ),
        8 => 
        array (
          'name' => 'EntryBandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换映射条目的带宽峰值。取值： 
        
- -1（默认值）：不限制IPv6转换映射条目的带宽峰值。  
- 1-200Mbps：该映射条目的带宽值。            

> 所有IPv6转换映射条目的带宽峰值之和不能超过实例的带宽峰值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'default' => '-1',
          ),
        ),
        9 => 
        array (
          'name' => 'AclStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启访问控制。取值：
- **on**：是。
- **off**：否。',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
            'default' => 'off',
          ),
        ),
        10 => 
        array (
          'name' => 'AclType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启访问控制：

- **white**：允许访问策略组中的IPv6地址访问后端服务。

- **black**：禁止访问策略组中的IPv6地址访问后端服务。',
            'type' => 'string',
            'required' => false,
            'example' => 'white',
          ),
        ),
        11 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的访问控制策略组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6transacl-bp1g8bhrdexnrxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6TranslatorEntryId' => 
              array (
                'description' => 'IPv6转换服务的实例ID。',
                'type' => 'string',
                'example' => 'ipv6transentry-xxxxxxxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DCE5D25-FFC9-492A-8371-12A4E0EE2E05',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpAddress.AlreadyExist',
            'errorMessage' => 'The specified  ip address is already exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIpAddress.WrongFormat',
            'errorMessage' => 'The specified ip address is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpAddress.PrivateAddress',
            'errorMessage' => 'The specified private ip address is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidPort',
            'errorMessage' => 'The specified port is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorId.NotFound',
            'errorMessage' => 'The specified ipv6 translator instance id does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified value of name not supported.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The specified value of description not supported.',
          ),
          7 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidProtocol',
            'errorMessage' => 'The specified transProtocol is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
          9 => 
          array (
            'errorCode' => 'IPv6Translator.Configuring',
            'errorMessage' => 'The specified ipv6 translator is configuring.',
          ),
          10 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidBandwidth',
            'errorMessage' => 'The specified entry bandwidth is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.IPv6Conflict',
            'errorMessage' => 'The specified ipv6 port conflict.',
          ),
          12 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.IPv4Conflict',
            'errorMessage' => 'The specified ipv4 port and address conflict.',
          ),
          13 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.AclIdNull',
            'errorMessage' => 'The acl id must not be null.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl id does not exist.',
          ),
          15 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidAclStatus',
            'errorMessage' => 'The specified acl status is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidAclType',
            'errorMessage' => 'The specified acl type is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv6TranslatorEntryId\\": \\"ipv6transentry-xxxxxxxx\\",\\n  \\"RequestId\\": \\"DCE5D25-FFC9-492A-8371-12A4E0EE2E05\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIPv6TranslatorEntryResponse>\\n    <Ipv6TranslatorEntryId>ipv6transentry-xxxxxxxx</Ipv6TranslatorEntryId>\\n    <RequestId>DCE5D25-FFC9-492A-8371-12A4E0EE2E05</RequestId>\\n</CreateIPv6TranslatorEntryResponse>","errorExample":""}]',
      'title' => '为转换服务实例添加IPv6转换映射条目',
      'summary' => '为指定的IPv6转换服务实例添加IPv6转换映射条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddIPv6TranslatorAclListEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组的地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IP条目的访问控制策略组ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6transacl-bp1dcdvfe2****',
          ),
        ),
        2 => 
        array (
          'name' => 'AclEntryIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组条目中要添加的单个IPv6地址或IPv6地址段，例如12XX:0:0:XXXX::0102或12XX:0:0:XXXX::/60。',
            'type' => 'string',
            'required' => true,
            'example' => '12XX:0:0:XXXX::0102',
          ),
        ),
        3 => 
        array (
          'name' => 'AclEntryComment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组条目的备注信息。

长度为2~100个字符，以英文大小字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'clientIP1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'AclEntryId' => 
              array (
                'description' => '访问控制策略组条目ID。',
                'type' => 'string',
                'example' => 'ipv6transaclentry-bp105jrs****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8B2F5262-6B57-43F2-defr345',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIpAddress.WrongFormat',
            'errorMessage' => 'The specified entry ip address is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl instance id does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidEntryComment',
            'errorMessage' => 'The specified value of comment not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'noSubstitutionReason' => '无替代API，历史原因导致该API被标记为弃用。',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AclEntryId\\": \\"ipv6transaclentry-bp105jrs****\\",\\n  \\"RequestId\\": \\"8B2F5262-6B57-43F2-defr345\\"\\n}","errorExample":""},{"type":"xml","example":"<AddIPv6TranslatorAclListEntryResponse>\\n    <AclEntryId>ipv6transaclentry-bp105jrs****</AclEntryId>\\n    <RequestId>8B2F5262-6B57-43F2-defr345</RequestId>\\n</AddIPv6TranslatorAclListEntryResponse>","errorExample":""}]',
      'title' => '在访问控制策略组中添加IP条目',
      'summary' => '在访问控制策略组中添加IP条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIPv6Translator' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cm-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端token用于保证请求的幂等性。要保证Client Token在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'sha111',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的名称，默认为实例ID。长度为2~100个字符，必须以字母或中文开头，可包含数字、点号（.）、下划线（_）和短横线（-）。但不能以`http://`或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6_1',
          ),
        ),
        3 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的规格。取值：**small**。',
            'type' => 'string',
            'required' => false,
            'example' => 'small',
            'default' => 'small',
          ),
        ),
        4 => 
        array (
          'name' => 'PayType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的付费类型。取值： 

- **PREPAY**：包年包月。

-  **POSTPAY**：按量计费 。',
            'type' => 'string',
            'required' => false,
            'example' => 'PREPAY',
            'default' => 'PREPAY',
          ),
        ),
        5 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 包年包月的计费周期，取值： 

- **Month**（默认值）：按月购买。

- **Year**：按年购买。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
            'default' => '',
          ),
        ),
        6 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买时长，取值：

- 如果计费时长为**Month**，则取值为**1**~**9**。  
- 如果计费时长为**Year**，则取值为**3**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '',
          ),
        ),
        7 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付包年包月账单。取值：**true|false**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的计费带宽（Mbps）。取值：**1**~**200**。若不设置转换映射条目的带宽，实例中的IPv6转换服务映射条目共享该带宽。 

> 若不指定带宽，默认为10Mbps。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Ipv6TranslatorId' => 
              array (
                'description' => 'IPv6转换服务实例ID。',
                'type' => 'string',
                'example' => 'ipv6trans-bp1i8ahxut1xxxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1AE05898-06E5-4782-xxxxx',
              ),
              'Spec' => 
              array (
                'description' => 'IPv6转换服务实例规格。',
                'type' => 'string',
                'example' => 'small',
              ),
              'Name' => 
              array (
                'description' => 'IPv6转换服务实例名称。',
                'type' => 'string',
                'example' => 'test_nat64gw',
              ),
              'OrderId' => 
              array (
                'description' => '创建IPv6转换服务实例的订单ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '202303300940739',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is not support.',
          ),
          1 => 
          array (
            'errorCode' => 'Spec.NotSupport',
            'errorMessage' => 'The specified spec does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'Duration.NotSupport',
            'errorMessage' => 'The specified duration is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'PricingCycle.NotSupport',
            'errorMessage' => 'The specified pricing cycle is not support.',
          ),
          4 => 
          array (
            'errorCode' => 'PayType.NotSupport',
            'errorMessage' => 'The specified pay type is not support.',
          ),
          5 => 
          array (
            'errorCode' => 'InventoryNotEnough',
            'errorMessage' => 'The inventory is not enough.',
          ),
          6 => 
          array (
            'errorCode' => 'Resource.QuotaFull',
            'errorMessage' => 'The quota of resource is full.',
          ),
          7 => 
          array (
            'errorCode' => 'Bandwidth.NotSupport',
            'errorMessage' => 'The specified bandwidth is not support.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal Error',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv6TranslatorId\\": \\"ipv6trans-bp1i8ahxut1xxxx\\",\\n  \\"RequestId\\": \\"1AE05898-06E5-4782-xxxxx\\",\\n  \\"Spec\\": \\"small\\",\\n  \\"Name\\": \\"test_nat64gw\\",\\n  \\"OrderId\\": 202303300940739\\n}","errorExample":"{\\n    \\"Ipv6TranslatorId\\": \\"ipv6trans-bp1i8ahxut1iedrqqgbco\\", \\n    \\"Name\\": \\"test_nat64gw_autopay_0725\\", \\n    \\"OrderId\\": 202303300940739, \\n    \\"RequestId\\": \\"1AE05898-06E5-4782-B4D0-6714DD94C4E6\\", \\n    \\"Spec\\": \\"small\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<CreateIPv6TranslatorResponse>\\n\\t<Ipv6TranslatorId>ipv6trans-bp1i8ahxut1iexxxx</Ipv6TranslatorId>\\n\\t<Name>test_nat64gw</Name>\\n\\t<OrderId>202303300940739</OrderId>\\n\\t<RequestId>1AE05898-06E5-4782-B4D0-xxxxx</RequestId>\\n\\t<Spec>small</Spec>\\n</CreateIPv6TranslatorResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<CreateIPv6TranslatorResponse>\\n\\t<Ipv6TranslatorId>ipv6trans-bp1i8ahxut1iedrqqgbco</Ipv6TranslatorId>\\n\\t<Name>test_nat64gw_autopay_0725</Name>\\n\\t<OrderId>202303300940739</OrderId>\\n\\t<RequestId>1AE05898-06E5-4782-B4D0-6714DD94C4E6</RequestId>\\n\\t<Spec>small</Spec>\\n</CreateIPv6TranslatorResponse>"}]',
      'title' => '创建IPv6转换服务实例',
      'summary' => '创建IPv6转换服务实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIPv6TranslatorAclList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要删除的访问控制策略组ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transacl-bp1de2****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorACLId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorACL.Used',
            'errorMessage' => 'The specified ipv6 translator acl is be used.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIPv6TranslatorAclListResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteIPv6TranslatorAclListResponse>","errorExample":""}]',
      'title' => '删除访问控制策略组',
      'summary' => '删除访问控制策略组。只有当访问控制策略组没有绑定任何IPv6转换映射时，才可以删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIPv6TranslatorEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用**DescribeRegions**接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6TranslatorEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要删除的IPv6转换服务映射条目ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6transentry-bp1g8bhrde****',
          ),
        ),
        3 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务的实例ID。 

> 如果您不指定**Ipv6TranslatorEntryId**参数，则删除指定实例下所有的映射条目。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6trans-bp1858ys****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8B2F5262-6B57-43F2-xxxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorId.NotFound',
            'errorMessage' => 'The specified ipv6 translator gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorEntryId.NotFound',
            'errorMessage' => 'The specified ipv6 translator entry id does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IPv6Translator.Configuring',
            'errorMessage' => 'The specified ipv6 translator is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'IPv6Translator.FinancialLocked',
            'errorMessage' => 'The specified ipv6 translator is financial locked.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorId.CoexistWithEntryId',
            'errorMessage' => 'The entry id and instance id can not be specified together',
          ),
          5 => 
          array (
            'errorCode' => 'MissingEntryOrInstanceId',
            'errorMessage' => 'The entry or instance id is not supplied',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8B2F5262-6B57-43F2-xxxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIPv6TranslatorEntryResponse>\\n    <RequestId>8B2F5262-6B57-43F2-xxxxx</RequestId>\\n</DeleteIPv6TranslatorEntryResponse>","errorExample":""}]',
      'title' => '删除IPv6转换映射条目',
      'summary' => '删除IPv6转换映射条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIPv6Translator' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'ClientToken',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6trans-bp1i8ahxut1ie****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IPv6Translator.Configuring',
            'errorMessage' => 'The specified ipv6 translator is configuring.',
          ),
          1 => 
          array (
            'errorCode' => 'Nat64Gateway.Configuring',
            'errorMessage' => 'The specified IPv6 translator is configuring.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          2 => 
          array (
            'errorCode' => 'ForbiddenRelease',
            'errorMessage' => 'Forbidden to release a prepaid instance within validity period',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorId.NotFound',
            'errorMessage' => 'The specified ipv6 translator instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIPv6TranslatorResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteIPv6TranslatorResponse>","errorExample":""}]',
      'title' => '删除IPv6转换服务实例',
      'summary' => '删除IPv6转换服务实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIPv6TranslatorAclListEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP条目所在的访问控制策略组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transacl-bp1b4z3tleyhq1s50****',
          ),
        ),
        2 => 
        array (
          'name' => 'AclEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP条目所在的访问控制策略组条目的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transaclentry-bp1jzyn7ra8pyxehd****',
          ),
        ),
        3 => 
        array (
          'name' => 'AclEntryComment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组条目的备注信息。

长度为2~100个字符，以大小字母或中文开头，可包含数字、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'client IP',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclEntryId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl entry id does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidEntryComment',
            'errorMessage' => 'The specified value of comment not supported.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIPv6TranslatorAclListEntryResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ModifyIPv6TranslatorAclListEntryResponse>","errorExample":""}]',
      'title' => '修改访问控制策略组中的IP条目',
      'summary' => '修改访问控制策略组中的IP条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIPv6TranslatorAclAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用 DescribeRegions接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 要修改的访问控制策略组ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transacl-bp1de2****',
          ),
        ),
        3 => 
        array (
          'name' => 'AclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 访问控制策略组名称。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is not valid',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorACLId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIPv6TranslatorAclAttributeResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ModifyIPv6TranslatorAclAttributeResponse>","errorExample":""}]',
      'title' => '修改访问控制策略组的名称',
      'summary' => '修改访问控制策略组的名称。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIPv6TranslatorBandwidth' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用**DescribeRegions**接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务的实例ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6trans-bp1858ys****',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的带宽峰值，取值：**1**~**200**。单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付预付费实例的账单，取值： 

- **true**：是。

- **false**（默认值）：否。  
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '202304500950739',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EF8198EE-8FC9-49C2-A22E-xxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorId.NotFound',
            'errorMessage' => 'The specified ipv6 translator instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidth.NotSupport',
            'errorMessage' => 'The specified bandwidth is not support.',
          ),
          2 => 
          array (
            'errorCode' => 'IPv6Translator.Configuring',
            'errorMessage' => 'The specified ipv6 translator is configuring.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidBandwidth.DowngradeForbidden',
            'errorMessage' => 'The bandwidth downgrade is forbidden.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidBandwidth.NotEnough',
            'errorMessage' => 'The specified bandwidth is not enough.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBandwidth.NotChange',
            'errorMessage' => 'The specified bandwidth does not change.',
          ),
          6 => 
          array (
            'errorCode' => 'IPv6Translator.FinancialLocked',
            'errorMessage' => 'The specified  ipv6 translator  is financial locked.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal Error',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"OrderId\\": \\"202304500950739\\",\\n  \\"RequestId\\": \\"EF8198EE-8FC9-49C2-A22E-xxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIPv6TranslatorBandwidthResponse>\\n    <OrderId>202304500950739</OrderId>\\n    <RequestId>EF8198EE-8FC9-49C2-A22E-xxxx</RequestId>\\n</ModifyIPv6TranslatorBandwidthResponse>","errorExample":""}]',
      'title' => '修改IPv6转换服务实例的带宽',
      'summary' => '修改IPv6转换服务实例的带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIPv6TranslatorAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用**DescribeRegions**接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'sha1111',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6trans-bp1858ys****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的名称，默认为实例ID。长度为 2~100个字符，必须以字母或中文开头，可包含数字，英文句点（.），下划线（_）和短划线（-）。但不能以http:// 或https://开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'instancename',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务的描述信息。默认值为空。长度为2~100个字符，必须以字母或中文开头，可包含数字，英文句点（.），下划线（_）和短划线（-）。但不能以http:// 或https://开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'instancedescription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8B2F5262-6B57-43F2-xxxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The  specified name is not valid',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The specified description is not valid',
          ),
          2 => 
          array (
            'errorCode' => ' IPv6Translator.Configuring',
            'errorMessage' => 'The specified ipv6 translator is configuring.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorId.NotFound',
            'errorMessage' => 'The specified ipv6 translator instance id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8B2F5262-6B57-43F2-xxxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIPv6TranslatorAttributeResponse>\\n    <RequestId>8B2F5262-6B57-43F2-xxxxx</RequestId>\\n</ModifyIPv6TranslatorAttributeResponse>","errorExample":""}]',
      'title' => '修改IPv6转换服务实例属性',
      'summary' => '修改IPv6转换服务实例的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyIPv6TranslatorEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用 DescribeRegions接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6TranslatorEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务映射条目ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ipv6trans-bp1858ys****',
          ),
        ),
        2 => 
        array (
          'name' => 'EntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换映射条目的名称。长度为2~100个字符，必须以字母或中文开头，可包含数字，英文句号（.），下划线（_）和短划线（-）。但不能以http:// 或https://开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'entry1',
          ),
        ),
        3 => 
        array (
          'name' => 'EntryDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换映射条目的描述信息。长度为2~100个字符，必须以字母或中文开头，可包含数字，英文句号（.），下划线（_）和短划线（-）。但不能以http:// 或https://开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'entrydescription',
          ),
        ),
        4 => 
        array (
          'name' => 'AllocateIpv6Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例分配的IPv6地址的使用端口。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        5 => 
        array (
          'name' => 'BackendIpv4Addr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 需要提供IPv6服务的公网IPv4地址（IPv4-only的服务器的IPv4地址）。 ',
            'type' => 'string',
            'required' => false,
            'example' => '47.11.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'BackendIpv4Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要提供IPv6服务的公网IPv4地址的端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        7 => 
        array (
          'name' => 'TransProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。取值：

- **tcp**：转发TCP协议的报文。  
- **udp**：转发UDP协议的报文。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
          ),
        ),
        8 => 
        array (
          'name' => 'EntryBandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换映射条目的带宽峰值。单位：Mbps。取值： 

- **-1**（默认值）：不限制IPv6转换映射条目的带宽峰值。  

- **1**~**200**：改映射条目的带宽值。

> 所有IPv6转换映射条目的带宽峰值之和不能超过实例的带宽峰值。   ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'AclStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启访问控制。取值：
- **on**：开启。
- **off**：不开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'off',
          ),
        ),
        10 => 
        array (
          'name' => 'AclType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略类型：

- **white**：允许访问策略组中的IPv6地址访问后端服务。

- **black**：禁止访问策略组中的IPv6地址访问后端服务。',
            'type' => 'string',
            'required' => false,
            'example' => 'white',
          ),
        ),
        11 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的访问控制策略组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6transacl-bp1de27sou71g0lf****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified value of name not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The specified value of description not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpAddress.AlreadyExist',
            'errorMessage' => 'The specified  ip address is already exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidIpAddress.WrongFormat',
            'errorMessage' => 'The specified ip address is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidIpAddress.PrivateAddress',
            'errorMessage' => 'The specified private ip address is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidPort',
            'errorMessage' => 'The specified port is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidProtocol',
            'errorMessage' => 'The specified transProtocol is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IPv6Translator.Configuring',
            'errorMessage' => 'The specified ipv6 translator is configuring.',
          ),
          8 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.IPv6Conflict',
            'errorMessage' => 'The specified ipv6 port conflict.',
          ),
          9 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.IPv4Conflict',
            'errorMessage' => 'The specified ipv4 port and address conflict.',
          ),
          10 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.AclIdNull',
            'errorMessage' => 'The acl id must not be null.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl id does not exist.',
          ),
          13 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidAclType',
            'errorMessage' => 'The specified acl type is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidAclStatus',
            'errorMessage' => 'The specified acl status is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidBandwidth',
            'errorMessage' => 'The specified bandwidth is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorEntryId.NotFound',
            'errorMessage' => 'The specified ipv6 translator entry id does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyIPv6TranslatorEntryResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ModifyIPv6TranslatorEntryResponse>","errorExample":""}]',
      'title' => '修改IPv6转换映射条目',
      'summary' => '修改IPv6转换映射条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIPv6TranslatorAclLists' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 访问控制策略组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6transacl-bp1de2****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'AclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 访问控制策略组的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '查询的条目总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'Ipv6TranslatorAcls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IPv6TranslatorAcl' => 
                  array (
                    'description' => '查询到的访问控制策略组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制策略组结构体。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AclName' => 
                        array (
                          'description' => '访问控制策略组的名称。',
                          'type' => 'string',
                          'example' => 'acl1',
                        ),
                        'AclId' => 
                        array (
                          'description' => '访问控制策略组的ID。',
                          'type' => 'string',
                          'example' => 'ipv6transacl-bp1de2****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified value of name is not supported.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 20,\\n  \\"Ipv6TranslatorAcls\\": {\\n    \\"IPv6TranslatorAcl\\": [\\n      {\\n        \\"AclName\\": \\"acl1\\",\\n        \\"AclId\\": \\"ipv6transacl-bp1de2****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIPv6TranslatorAclListsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>20</TotalCount>\\n    <Ipv6TranslatorAcls>\\n        <AclName>acl1</AclName>\\n        <AclId>ipv6transacl-bp1de2****</AclId>\\n    </Ipv6TranslatorAcls>\\n</DescribeIPv6TranslatorAclListsResponse>","errorExample":""}]',
      'title' => '查询已创建的访问控制策略组',
      'summary' => '查询已创建的访问控制策略组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIPv6TranslatorAclListAttributes' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transacl-bp1de2****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'AclId' => 
              array (
                'description' => '访问控制策略组ID。 ',
                'type' => 'string',
                'example' => 'ipv6transacl-bp1de2****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '页码条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的条目总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'AclName' => 
              array (
                'description' => '访问控制策略组名称。',
                'type' => 'string',
                'example' => 'acl1',
              ),
              'AclEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AclEntry' => 
                  array (
                    'description' => ' 访问控制策略组列表。 ',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制策略组结构体。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AclEntryComment' => 
                        array (
                          'description' => ' 访问控制策略组条目的备注信息。 ',
                          'type' => 'string',
                          'example' => 'client IP',
                        ),
                        'AclEntryId' => 
                        array (
                          'description' => ' 访问控制策略组条目的ID。',
                          'type' => 'string',
                          'example' => 'ipv6transaclentry-bp105jrs****',
                        ),
                        'AclEntryIp' => 
                        array (
                          'description' => '访问控制策略组条目的IP地址。',
                          'type' => 'string',
                          'example' => '12ab:0:0:XXXX::0102/128',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl instance id does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AclId\\": \\"ipv6transacl-bp1de2****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 20,\\n  \\"AclName\\": \\"acl1\\",\\n  \\"AclEntries\\": {\\n    \\"AclEntry\\": [\\n      {\\n        \\"AclEntryComment\\": \\"client IP\\",\\n        \\"AclEntryId\\": \\"ipv6transaclentry-bp105jrs****\\",\\n        \\"AclEntryIp\\": \\"12ab:0:0:XXXX::0102/128\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIPv6TranslatorAclListAttributesResponse>\\n    <AclId>ipv6transacl-bp1de2****</AclId>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>20</TotalCount>\\n    <AclName>acl1</AclName>\\n    <AclEntries>\\n        <AclEntryComment>client IP</AclEntryComment>\\n        <AclEntryId>ipv6transaclentry-bp105jrs****</AclEntryId>\\n        <AclEntryIp>12ab:0:0:XXXX::0102/128</AclEntryIp>\\n    </AclEntries>\\n</DescribeIPv6TranslatorAclListAttributesResponse>","errorExample":""}]',
      'title' => '查询访问控制策略组详细信息',
      'summary' => '查询访问控制策略组的详细信息，包括访问控制策略组中的IP和关联的IPv6转换映射条目的具体信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIPv6Translators' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6trans-bp1858ys****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的名称。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6_1',
          ),
        ),
        3 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的规格，取值：**small**（小型）。',
            'type' => 'string',
            'required' => false,
            'example' => 'small',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的状态，取值：

- **init**：初始化。

- **provisioning**：准备中。

- **active**：可用。

- **updating**：更新中。

- **upgrading**：升级中。

- **deleting**：删除中。

- **deleted**：已删除。',
            'type' => 'string',
            'required' => false,
            'example' => 'active',
          ),
        ),
        5 => 
        array (
          'name' => 'AllocateIpv6Addr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 为IPv6转换服务实例分配的IPv6地址。 ',
            'type' => 'string',
            'required' => false,
            'example' => '2400:3200:1600::XXXX',
          ),
        ),
        6 => 
        array (
          'name' => 'AllocateIpv4Addr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 为IPv6转换服务实例分配的IPv4地址。',
            'type' => 'string',
            'required' => false,
            'example' => '47.99.XX.XX',
          ),
        ),
        7 => 
        array (
          'name' => 'PayType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的付费类型。取值：

- **Prepay**：包年包月。

- **Postpay**：按量计费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Prepay',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        10 => 
        array (
          'name' => 'BusinessStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的业务状态，取值：

- **Normal**：正常。

- **FinancialLocked**：被锁定。

',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Ipv6Translators' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6Translator' => 
                  array (
                    'description' => '查询到的IPv6转换服务实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'IPv6转换服务实例结构体。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => ' IPv6转换服务实例的状态。 ',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'Spec' => 
                        array (
                          'description' => ' IPv6转换服务实例的规格。 ',
                          'type' => 'string',
                          'example' => 'small',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => 'IPv6转换服务实例的创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1537151540000',
                        ),
                        'PayType' => 
                        array (
                          'description' => 'IPv6转换服务实例的付费类型。

- **Prepay**：包年包月。

- **Postpay**：按量计费。',
                          'type' => 'string',
                          'example' => 'Prepay',
                        ),
                        'Ipv6TranslatorId' => 
                        array (
                          'description' => ' IPv6转换服务实例的ID。 ',
                          'type' => 'string',
                          'example' => 'ipv6trans-bp1858ys*****',
                        ),
                        'AllocateIpv4Addr' => 
                        array (
                          'description' => '分配的IPv6转换服务实例的IPv4地址。',
                          'type' => 'string',
                          'example' => '47.99.XX.XX',
                        ),
                        'AvailableBandwidth' => 
                        array (
                          'description' => 'IPv6转换服务实例可用的带宽。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'IPv6转换服务实例的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'EndTime' => 
                        array (
                          'description' => 'IPv6转换服务实例的到期时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1539792000000',
                        ),
                        'Description' => 
                        array (
                          'description' => 'IPv6转换服务实例的描述。',
                          'type' => 'string',
                          'example' => 'descriptionforinstance',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => 'IPv6转换服务实例的带宽。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => 'IPv6转换服务实例的业务状态。

- **Normal**：正常。

- **FinancialLocked**：被锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'AllocateIpv6Addr' => 
                        array (
                          'description' => '分配的IPv6转换服务实例的IPv6地址。',
                          'type' => 'string',
                          'example' => '2400:3200:1600::XXXX',
                        ),
                        'Name' => 
                        array (
                          'description' => ' IPv6转换服务实例的名称。 ',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Ipv6TranslatorEntryIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ipv6TranslatorEntryId' => 
                            array (
                              'description' => 'IPv6转换服务实例的转换映射条目ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'IPv6转换服务实例的转换映射条目ID。',
                                'type' => 'string',
                                'example' => '["ipv6transentry-bp1kp5ixtm3001vmn****", "ipv6transentry-bp16dg87v006zwrd6****"]',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PayType.NotSupport',
            'errorMessage' => 'The specified pay type is not support.',
          ),
          1 => 
          array (
            'errorCode' => 'BusinessStatus.NotSupport',
            'errorMessage' => 'The specified business status is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpAddress.WrongFormat',
            'errorMessage' => 'The specified ip address is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Status.NotSupport',
            'errorMessage' => 'The specified value of status is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified value of name is not supported.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"Ipv6Translators\\": {\\n    \\"Ipv6Translator\\": [\\n      {\\n        \\"Status\\": \\"active\\",\\n        \\"Spec\\": \\"small\\",\\n        \\"CreateTime\\": 1537151540000,\\n        \\"PayType\\": \\"Prepay\\",\\n        \\"Ipv6TranslatorId\\": \\"ipv6trans-bp1858ys*****\\",\\n        \\"AllocateIpv4Addr\\": \\"47.99.XX.XX\\",\\n        \\"AvailableBandwidth\\": \\"1\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"EndTime\\": 1539792000000,\\n        \\"Description\\": \\"descriptionforinstance\\",\\n        \\"Bandwidth\\": 1,\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"AllocateIpv6Addr\\": \\"2400:3200:1600::XXXX\\",\\n        \\"Name\\": \\"test\\",\\n        \\"Ipv6TranslatorEntryIds\\": {\\n          \\"Ipv6TranslatorEntryId\\": [\\n            \\"[\\\\\\"ipv6transentry-bp1kp5ixtm3001vmn****\\\\\\", \\\\\\"ipv6transentry-bp16dg87v006zwrd6****\\\\\\"]\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIPv6TranslatorsResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <Ipv6Translators>\\n        <Status>active</Status>\\n        <Spec>small</Spec>\\n        <CreateTime>1537151540000</CreateTime>\\n        <PayType>Prepay</PayType>\\n        <Ipv6TranslatorId>ipv6trans-bp1858ys*****</Ipv6TranslatorId>\\n        <AllocateIpv4Addr>47.99.XX.XX</AllocateIpv4Addr>\\n        <AvailableBandwidth>1</AvailableBandwidth>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <EndTime>1539792000000</EndTime>\\n        <Description>descriptionforinstance</Description>\\n        <Bandwidth>1</Bandwidth>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <AllocateIpv6Addr>2400:3200:1600::XXXX</AllocateIpv6Addr>\\n        <Name>test</Name>\\n        <Ipv6TranslatorEntryIds>[\\"ipv6transentry-bp1kp5ixtm3001vmn****\\", \\"ipv6transentry-bp16dg87v006zwrd6****\\"]</Ipv6TranslatorEntryIds>\\n    </Ipv6Translators>\\n</DescribeIPv6TranslatorsResponse>","errorExample":""}]',
      'title' => '查询已创建的IPv6转换服务实例列表',
      'summary' => '查询已创建的IPv6转换服务实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeIPv6TranslatorEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例的地域。 您可以通过调用**DescribeRegions**接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Ipv6TranslatorId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例的ID。 ',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ipv6trans-bp1858ysxx****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ipv6TranslatorEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的IPv6转换映射条目ID。 

> 如果**Ipv6TranslatorId**参数和**Ipv6TranslatorEntryId**参数的值都为空，则返回所有IPv6转换映射条目信息。如果仅是**Ipv6TranslatorEntryId**参数的值为空，则返回当前IPv6转换服务实例下的所有IPv6转换映射条目信息。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6transentry-bp1g8bhrde****',
          ),
        ),
        3 => 
        array (
          'name' => 'EntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' Pv6转换映射条目的名称。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'entryname',
          ),
        ),
        4 => 
        array (
          'name' => 'AllocateIpv6Addr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPv6转换服务实例分配的IPv6地址。',
            'type' => 'string',
            'required' => false,
            'example' => '2400:3200:1600::XX',
          ),
        ),
        5 => 
        array (
          'name' => 'AllocateIpv6Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' IPv6转换服务实例分配的IPv6地址使用的端口。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'BackendIpv4Addr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 需要提供IPv6服务的公网IPv4地址 ',
            'type' => 'string',
            'required' => false,
            'example' => '47.99.XX.XX',
          ),
        ),
        7 => 
        array (
          'name' => 'BackendIpv4Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 需要提供IPv6服务的公网IPv4地址使用的端口。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        8 => 
        array (
          'name' => 'TransProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 转发数据的协议类型。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
          ),
        ),
        9 => 
        array (
          'name' => 'AclStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启访问控制。取值：
- **on**：开启。
- **off**：不开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'off',
          ),
        ),
        10 => 
        array (
          'name' => 'AclType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略类型。取值：

- **white**：允许访问策略组中的IPv6地址访问后端服务。

- **black**：禁止访问策略组中的IPv6地址访问后端服务。',
            'type' => 'string',
            'required' => false,
            'example' => 'white',
          ),
        ),
        11 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv6transacl-bp1de2****',
          ),
        ),
        12 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 列表的页码，默认值为1。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        13 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 分页查询时每页的行数，最大值为**50**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        14 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含多少条目。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Ipv6TranslatorEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6TranslatorEntry' => 
                  array (
                    'description' => '查询到的IPv6转换映射条目。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'IPv6转换映射结构体。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AclType' => 
                        array (
                          'description' => '访问控制策略类型。

- **white**：允许访问策略组中的IPv6地址访问后端服务。

- **black**：禁止访问策略组中的IPv6地址访问后端服务。',
                          'type' => 'string',
                          'example' => 'white',
                        ),
                        'EntryStatus' => 
                        array (
                          'description' => 'IPv6转换映射条目的状态。',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'TransProtocol' => 
                        array (
                          'description' => '协议类型。',
                          'type' => 'string',
                          'example' => 'tcp',
                        ),
                        'Ipv6TranslatorId' => 
                        array (
                          'description' => ' IPv6转换映射条目所属的IPv6转换服务实例ID。 ',
                          'type' => 'string',
                          'example' => 'ipv6trans-bp1858ys****',
                        ),
                        'EntryDescription' => 
                        array (
                          'description' => 'IPv6转换映射条目的描述。',
                          'type' => 'string',
                          'example' => 'description',
                        ),
                        'Ipv6TranslatorEntryId' => 
                        array (
                          'description' => ' IPv6转换映射条目ID。 ',
                          'type' => 'string',
                          'example' => 'ipv6transentry-bp1g8bhrde****',
                        ),
                        'AllocateIpv6Port' => 
                        array (
                          'description' => ' IPv6转换服务实例分配的IPv6地址的使用端口。 ',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'BackendIpv4Addr' => 
                        array (
                          'description' => '后端IPv4服务器的公网IP地址。',
                          'type' => 'string',
                          'example' => '47.99.XX.XX',
                        ),
                        'BackendIpv4Port' => 
                        array (
                          'description' => '需要提供IPv6访问的IPv4服务器所使用的公网IPv4端口。',
                          'type' => 'string',
                          'example' => '80',
                        ),
                        'RegionId' => 
                        array (
                          'description' => ' IPv6转换服务实例的地域。 ',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'EntryBandwidth' => 
                        array (
                          'description' => 'IPv6转换映射条目的带宽。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'AclId' => 
                        array (
                          'description' => '关联的访问控制策略组ID。',
                          'type' => 'string',
                          'example' => 'ipv6transacl-bp1de2****',
                        ),
                        'EntryName' => 
                        array (
                          'description' => 'IPv6转换映射条目的名称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'AclStatus' => 
                        array (
                          'description' => '是否开启了访问控制。',
                          'type' => 'string',
                          'example' => 'on',
                        ),
                        'AllocateIpv6Addr' => 
                        array (
                          'description' => '分配的IPv6转换服务实例的IPv6地址。',
                          'type' => 'string',
                          'example' => '2400:3200:1600::XX',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified value of name not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidPort',
            'errorMessage' => 'The specified port is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidProtocol',
            'errorMessage' => 'The specified transProtocol is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidIpAddress.WrongFormat',
            'errorMessage' => 'The specified ip address is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidAclStatus',
            'errorMessage' => 'The specified acl status is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IPv6TranslatorEntry.InvalidAclType',
            'errorMessage' => 'The specified acl type is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"Ipv6TranslatorEntries\\": {\\n    \\"Ipv6TranslatorEntry\\": [\\n      {\\n        \\"AclType\\": \\"white\\",\\n        \\"EntryStatus\\": \\"active\\",\\n        \\"TransProtocol\\": \\"tcp\\",\\n        \\"Ipv6TranslatorId\\": \\"ipv6trans-bp1858ys****\\",\\n        \\"EntryDescription\\": \\"description\\",\\n        \\"Ipv6TranslatorEntryId\\": \\"ipv6transentry-bp1g8bhrde****\\",\\n        \\"AllocateIpv6Port\\": 80,\\n        \\"BackendIpv4Addr\\": \\"47.99.XX.XX\\",\\n        \\"BackendIpv4Port\\": \\"80\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"EntryBandwidth\\": \\"1\\",\\n        \\"AclId\\": \\"ipv6transacl-bp1de2****\\",\\n        \\"EntryName\\": \\"name\\",\\n        \\"AclStatus\\": \\"on\\",\\n        \\"AllocateIpv6Addr\\": \\"2400:3200:1600::XX\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeIPv6TranslatorEntriesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <Ipv6TranslatorEntries>\\n        <AclType>white</AclType>\\n        <EntryStatus>active</EntryStatus>\\n        <TransProtocol>tcp</TransProtocol>\\n        <Ipv6TranslatorId>ipv6trans-bp1858ys****</Ipv6TranslatorId>\\n        <EntryDescription>description</EntryDescription>\\n        <Ipv6TranslatorEntryId>ipv6transentry-bp1g8bhrde****</Ipv6TranslatorEntryId>\\n        <AllocateIpv6Port>80</AllocateIpv6Port>\\n        <BackendIpv4Addr>47.99.XX.XX</BackendIpv4Addr>\\n        <BackendIpv4Port>80</BackendIpv4Port>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <EntryBandwidth>1</EntryBandwidth>\\n        <AclId>ipv6transacl-bp1de2****</AclId>\\n        <EntryName>name</EntryName>\\n        <AclStatus>on</AclStatus>\\n        <AllocateIpv6Addr>2400:3200:1600::XX</AllocateIpv6Addr>\\n    </Ipv6TranslatorEntries>\\n</DescribeIPv6TranslatorEntriesResponse>","errorExample":""}]',
      'title' => '查询IPv6转换映射条目',
      'summary' => '查询IPv6转换映射条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveIPv6TranslatorAclListEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略组的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制策略条目所属的访问控制策略组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transacl-bp1de2****',
          ),
        ),
        3 => 
        array (
          'name' => 'AclEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的访问控制策略条目ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ipv6transaclentry-bp105jrs****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据结构体。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidIPv6TranslatorAclEntryId.NotFound',
            'errorMessage' => 'The specified ipv6 translator acl entry id does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IPv6TranslatorAcl.DeleteLastEntry',
            'errorMessage' => 'The last acl entry can not be deleted when ipv6 translator acl is be used.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'User not authorized to operate on the specified resource as your account is created by another user.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveIPv6TranslatorAclListEntryResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</RemoveIPv6TranslatorAclListEntryResponse>","errorExample":""}]',
      'title' => '删除访问控制策略组中的IP条目',
      'summary' => '删除访问控制策略组中的IP条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRegions' => 
    array (
      'summary' => '调用DescribeRegions接口查询可用的地域。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品类型，默认值为**VPC**。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值： 
          
- **zh-CN**（默认值）：中文。

- **en-US**：英文。
  ',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F',
              ),
              'Regions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Region' => 
                  array (
                    'description' => '可用地域的集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '可用地域的集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RegionEndpoint' => 
                        array (
                          'description' => '地域服务的Endpoint。',
                          'type' => 'string',
                          'example' => 'vpc.aliyuncs.com',
                        ),
                        'LocalName' => 
                        array (
                          'description' => '地域名称。',
                          'type' => 'string',
                          'example' => '华北 1',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F\\",\\n  \\"Regions\\": {\\n    \\"Region\\": [\\n      {\\n        \\"RegionEndpoint\\": \\"vpc.aliyuncs.com\\",\\n        \\"LocalName\\": \\"华北 1\\",\\n        \\"RegionId\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRegionsResponse>\\n    <RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n    <Regions>\\n        <RegionEndpoint>vpc.aliyuncs.com</RegionEndpoint>\\n        <LocalName>华北 1</LocalName>\\n        <RegionId>cn-qingdao</RegionId>\\n    </Regions>\\n</DescribeRegionsResponse>","errorExample":""}]',
      'title' => '查询可以使用的阿里云地域',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeZones' => 
    array (
      'summary' => '调用DescribeZones接口查询指定地域中可用区的列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用区所在的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ZoneType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询可用区的类型，默认取值为**AvailabilityZone**即普通云上可用区。',
            'type' => 'string',
            'required' => false,
            'example' => 'AvailabilityZone',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值可用区名称**LocalName**的显示语言。取值：

- **zh-cn**：中文。

- **en-us**：英文。

- **ja**：日文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-cn',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6FEA0CF3-D3B9-43E5-A304-D217037876A8',
              ),
              'Zones' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Zone' => 
                  array (
                    'description' => '可用区的集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ZoneId' => 
                        array (
                          'description' => '可用区ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-b',
                        ),
                        'LocalName' => 
                        array (
                          'description' => '可用区名称。',
                          'type' => 'string',
                          'example' => '华东 1 可用区 B',
                        ),
                        'ZoneType' => 
                        array (
                          'description' => '查询到的可用区的类型，默认取值为**AvailabilityZone**即普通云上可用区。',
                          'type' => 'string',
                          'example' => 'AvailabilityZone',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6FEA0CF3-D3B9-43E5-A304-D217037876A8\\",\\n  \\"Zones\\": {\\n    \\"Zone\\": [\\n      {\\n        \\"ZoneId\\": \\"cn-hangzhou-b\\",\\n        \\"LocalName\\": \\"华东 1 可用区 B\\",\\n        \\"ZoneType\\": \\"AvailabilityZone\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeZonesResponse>\\n    <RequestId>6FEA0CF3-D3B9-43E5-A304-D217037876A8</RequestId>\\n    <Zones>\\n        <ZoneId>cn-hangzhou-b</ZoneId>\\n        <LocalName>华东 1 可用区 B</LocalName>\\n        <ZoneType>AvailabilityZone</ZoneType>\\n    </Zones>\\n</DescribeZonesResponse>","errorExample":""}]',
      'title' => '查询指定地域中可用区的列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResources' => 
    array (
      'summary' => '为指定的资源统一创建并绑定标签。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，取值：
- **VPC**：表示资源类型为专有网络实例。
- **VSWITCH**：表示资源类型为交换机实例。
- **ROUTETABLE**：表示资源类型为路由表实例。
- **EIP**：表示资源类型为弹性公网IP实例。
- **VPNGATEWAY**：表示资源类型为VPN网关实例。
- **NATGATEWAY**：表示资源类型为NAT网关实例。
- **COMMONBANDWIDTHPACKAGE**：表示资源类型为共享带宽实例。
- **PREFIXLIST**：表示资源类型为前缀列表实例。
- **PUBLICIPADDRESSPOOL**：表示资源类型为IP地址池实例。
- **IPV4GATEWAY**：表示资源类型为IPv4网关实例。
- **IPV6GATEWAY**：表示资源类型为IPv6网关实例。
- **NETWORKACL**：表示资源类型为网络ACL实例。
- **TRAFFICMIRRORFILTER**：表示资源类型为流量镜像筛选条件实例。
- **TRAFFICMIRRORSESSION**：表示资源类型为流量镜像会话实例。
- **FLOWLOG**：表示资源类型为流日志实例。
- **HAVIP**：表示资源类型为高可用虚拟IP实例。
- **DHCPOPTIONSSET**：表示资源类型为DHCP选项集实例。
- **GATEWAYENDPOINT**：表示资源类型为网关终端节点实例。
- **IPV6ADDRESS**：表示资源类型为IPv6地址实例。


> 输入的资源类型取值不区分大小写。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID，最多支持输入50个资源ID。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入50个资源ID。

> 调用该API时，**ResourceId.N**参数必须输入。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-bp16qjewdsunr41m1****',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp16qjewdsunr41m1****',
            'maxItems' => 51,
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建并绑定标签的资源所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。至少输入1个标签键，最多支持输入20个标签键。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

> 调用该API时，必须输入**Tag.N.Key**参数，且不能是空字符串。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。至少输入1个标签值，最多支持输入20个标签值。

一个标签值最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

> 调用该API时，必须输入**Tag.N.Value**参数，且可以是空字符串。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'TagResources',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => 'C46FF5A8-C5F0-4024-8262-B16B639225A0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidTagScope.NotFound',
            'errorMessage' => 'The tag scope is not found',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          10 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          11 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParameter.TagValue',
            'errorMessage' => 'The input parameter TagValue that is mandatory for processing this request is not supplied.',
          ),
          13 => 
          array (
            'errorCode' => 'MissingParameter.TagKey',
            'errorMessage' => 'The input parameter TagKey that is mandatory for processing this request is not supplied.',
          ),
          14 => 
          array (
            'errorCode' => 'MissingParam.Tags',
            'errorMessage' => 'You must specify the Tags parameter.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C46FF5A8-C5F0-4024-8262-B16B639225A0\\"\\n}","errorExample":""},{"type":"xml","example":"<TagResourcesResponse>\\n    <RequestId>C46FF5A8-C5F0-4024-8262-B16B639225A0</RequestId>\\n</TagResourcesResponse>","errorExample":""}]',
      'title' => '为指定的资源统一创建并绑定标签',
      'description' => '标签是您为实例分配的标记，每个标签都由一对键值对（Key-Value）组成。标签的使用说明如下： 

- 一个实例上的每条标签的标签键（Key）必须唯一。

- 不支持未绑定实例的空标签存在，标签必须绑定在实例上。

- 不同地域下的标签信息不互通。 

    例如在华东1（杭州）地域创建的标签在华东2（上海）地域不可见。

- 同账号同地域下，专有网络、路由表、交换机和弹性公网IP的标签信息互通。 

    例如在同账号同地域下，专有网络绑定了某个标签，那么您可以在交换机、路由表或弹性公网IP的编辑标签页面，直接选择将该标签绑定到实例上，而无需手动输入标签的键值信息。您可以修改标签的键和值，也可以随时删除实例的标签。如果删除实例，绑定实例的所有标签也会被删除。

- 单个实例最多可绑定20条标签。绑定标签前，阿里云会校验资源已有标签数量。超过限制值后返回报错信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResourcesForExpressConnect' => 
    array (
      'summary' => '调用TagResourcesForExpressConnect接口为指定的高速通道专线实例统一创建并绑定标签。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PHYSICALCONNECTION',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建并绑定标签的资源所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。最多支持输入20个资源ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入20个资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-bp16qjewdsunr41m1****',
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如果传入该值，则不能输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          5 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidTagScope.NotFound',
            'errorMessage' => 'The tag scope is not found',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          8 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'MissingParameter.TagValue',
            'errorMessage' => 'The input parameter TagValue that is mandatory for processing this request is not supplied.',
          ),
          11 => 
          array (
            'errorCode' => 'MissingParameter.TagKey',
            'errorMessage' => 'The input parameter TagKey that is mandatory for processing this request is not supplied.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<TagResourcesForExpressConnectResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</TagResourcesForExpressConnectResponse>","errorExample":""}]',
      'title' => '为指定的高速通道专线实例统一创建并绑定标签',
      'description' => '标签是您为实例分配的标记，每个标签都由一对键值对（Key-Value）组成。标签的使用说明如下： 

- 一个实例上的每条标签的标签键（Key）必须唯一。

- 不支持未绑定实例的空标签存在，标签必须绑定在实例上。

- 不同地域下的标签信息不互通。 

    例如在华东1（杭州）地域创建的标签在华东2（上海）地域不可见。

- 单个实例最多可绑定20条标签。绑定标签前，阿里云会校验资源已有标签数量。超过限制值后返回报错信息。',
    ),
    'UnTagResources' => 
    array (
      'summary' => '为指定的资源列表统一解绑标签。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **VPC**：表示资源类型为专有网络实例。
- **VSWITCH**：表示资源类型为交换机实例。
- **ROUTETABLE**：表示资源类型为路由表实例。
- **EIP**：表示资源类型为弹性公网IP实例。
- **VPNGATEWAY**：表示资源类型为VPN网关实例。
- **NATGATEWAY**：表示资源类型为NAT网关实例。
- **COMMONBANDWIDTHPACKAGE**：表示资源类型为共享带宽实例。
- **PREFIXLIST**：表示资源类型为前缀列表实例。
- **PUBLICIPADDRESSPOOL**：表示资源类型为IP地址池实例。
- **IPV4GATEWAY**：表示资源类型为IPv4网关实例。
- **IPV6GATEWAY**：表示资源类型为IPv6网关实例。
- **NETWORKACL**：表示资源类型为网络ACL实例。
- **TRAFFICMIRRORFILTER**：表示资源类型为流量镜像筛选条件实例。
- **TRAFFICMIRRORSESSION**：表示资源类型为流量镜像会话实例。
- **FLOWLOG**：表示资源类型为流日志实例。
- **HAVIP**：表示资源类型为高可用虚拟IP实例。
- **DHCPOPTIONSSET**：表示资源类型为DHCP选项集实例。
- **GATEWAYENDPOINT**：表示资源类型为网关终端节点实例。
- **IPV6ADDRESS**：表示资源类型为IPv6地址实例。

> 输入的资源类型取值不区分大小写。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否解绑资源的所有标签。取值：
- **true**：解除资源的所有标签。
- **false**（默认值）：不解除资源的所有标签。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。最多支持解绑50个资源ID。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持解绑50个资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-bp16qjewdsunr41m1****',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp16qjewdsunr41m1****',
            'maxItems' => 51,
          ),
        ),
        3 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要解绑的标签键。最多支持输入20个标签键。


一个标签键最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要解绑的标签键。最多支持输入20个标签键。


一个标签键最多支持128个字符，可以为空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。
',
              'type' => 'string',
              'required' => false,
              'example' => 'FinanceDept',
            ),
            'required' => false,
            'example' => 'FinanceDept',
            'maxItems' => 21,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou	',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。
',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => 'C46FF5A8-C5F0-4024-8262-B16B639225A0	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C46FF5A8-C5F0-4024-8262-B16B639225A0\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<UnTagResourcesResponse>\\n    <RequestId>C46FF5A8-C5F0-4024-8262-B16B639225A0\\t</RequestId>\\n</UnTagResourcesResponse>","errorExample":""}]',
      'title' => '为资源列表统一解绑标签',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UntagResourcesForExpressConnect' => 
    array (
      'summary' => '调用UntagResourcesForExpressConnect接口为高速通道指定的资源列表统一解绑标签。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PHYSICALCONNECTION',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否解绑资源的所有标签。取值：

- **true**：解除资源的所有标签。
- **false**（默认值）：不解除资源的所有标签。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入20个资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-bp16qjewdsunr41m1****',
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
        4 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。


最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
              'type' => 'string',
              'required' => false,
              'example' => 'FinanceDept',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE65F6B7-7566-4802-9007-96F2494AC512',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          5 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          8 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DE65F6B7-7566-4802-9007-96F2494AC512\\"\\n}","errorExample":""},{"type":"xml","example":"<UntagResourcesForExpressConnectResponse>\\n    <RequestId>DE65F6B7-7566-4802-9007-96F2494AC512</RequestId>\\n</UntagResourcesForExpressConnectResponse>","errorExample":""}]',
      'title' => '为高速通道指定的资源列表统一解绑标签',
    ),
    'ListTagResources' => 
    array (
      'summary' => '查询云资源已经绑定的标签列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **VPC**：表示资源类型为专有网络实例。
- **VSWITCH**：表示资源类型为交换机实例。
- **ROUTETABLE**：表示资源类型为路由表实例。
- **EIP**：表示资源类型为弹性公网IP实例。
- **VPNGATEWAY**：表示资源类型为VPN网关实例。
- **NATGATEWAY**：表示资源类型为NAT网关实例。
- **COMMONBANDWIDTHPACKAGE**：表示资源类型为共享带宽实例。
- **PREFIXLIST**：表示资源类型为前缀列表实例。
- **PUBLICIPADDRESSPOOL**：表示资源类型为IP地址池实例。
- **IPV4GATEWAY**：表示资源类型为IPv4网关实例。
- **IPV6GATEWAY**：表示资源类型为IPv6网关实例。
- **NETWORKACL**：表示资源类型为网络ACL实例。
- **TRAFFICMIRRORFILTER**：表示资源类型为流量镜像筛选条件实例。
- **TRAFFICMIRRORSESSION**：表示资源类型为流量镜像会话实例。
- **FLOWLOG**：表示资源类型为流日志实例。
- **HAVIP**：表示资源类型为高可用虚拟IP实例。
- **DHCPOPTIONSSET**：表示资源类型为DHCP选项集实例。
- **GATEWAYENDPOINT**：表示资源类型为网关终端节点实例。
- **IPV6ADDRESS**：表示资源类型为IPv6地址实例。

> 输入的资源类型取值不区分大小写。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，取值范围：**1**~**50**，默认值：**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'example' => '50',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。最多支持50个资源ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入50个资源ID。

> 参数**ResourceId.N**或**Tag.N**（**Tag.N.Key**与**Tag.N.Value**）至少输入一个。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-bp16qjewdsunr41m1****',
            ),
            'required' => false,
            'example' => 'vpc-bp16qjewdsunr41m1****',
            'maxItems' => 51,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签键。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持20个标签键。

一个标签键最多支持128个字符，不能是空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

> 参数**ResourceId.N**或**Tag.N**（**Tag.N.Key**与**Tag.N.Value**）至少输入一个。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持20个标签值。

最多支持128个字符，可以是空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

> 参数**ResourceId.N**或**Tag.N**（**Tag.N.Key**与**Tag.N.Value**）至少输入一个。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'ListTagResources',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE65F6B7-7566-4802-9007-96F2494AC512',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '绑定标签的资源信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '绑定标签的资源信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。取值：
- **VPC**：表示资源类型为专有网络实例。
- **VSWITCH**：表示资源类型为交换机实例。
- **ROUTETABLE**：表示资源类型为路由表实例。
- **EIP**：表示资源类型为弹性公网IP实例。
- **VPNGATEWAY**：表示资源类型为VPN网关实例。
- **NATGATEWAY**：表示资源类型为NAT网关实例。
- **COMMONBANDWIDTHPACKAGE**：表示资源类型为共享带宽实例。
- **PREFIXLIST**：表示资源类型为前缀列表实例。
- **PUBLICIPADDRESSPOOL**：表示资源类型为IP地址池实例。
- **IPV4GATEWAY**：表示资源类型为IPv4网关实例。
- **IPV6GATEWAY**：表示资源类型为IPv6网关实例。
- **NETWORKACL**：表示资源类型为网络ACL实例。
- **TRAFFICMIRRORFILTER**：表示资源类型为流量镜像筛选条件实例。
- **TRAFFICMIRRORSESSION**：表示资源类型为流量镜像会话实例。
- **FLOWLOG**：表示资源类型为流日志实例。
- **HAVIP**：表示资源类型为高可用虚拟IP实例。
- **DHCPOPTIONSSET**：表示资源类型为DHCP选项集实例。
- **GATEWAYENDPOINT**：表示资源类型为网关终端节点实例。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp16qjewdsunr41m1****',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
          11 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'The specified Tags and ResourcesIds are not allow to both empty.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.ResourceType',
            'errorMessage' => 'The param of ResourceType is missing.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'The specified Tags and ResourcesIds are not allow to both empty.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"DE65F6B7-7566-4802-9007-96F2494AC512\\",\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"ResourceType\\": \\"VPC\\",\\n        \\"TagValue\\": \\"FinanceJoshua\\",\\n        \\"ResourceId\\": \\"vpc-bp16qjewdsunr41m1****\\",\\n        \\"TagKey\\": \\"FinanceDept\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTagResourcesResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>DE65F6B7-7566-4802-9007-96F2494AC512</RequestId>\\n    <TagResources>\\n        <ResourceType>VPC</ResourceType>\\n        <TagValue>FinanceJoshua</TagValue>\\n        <ResourceId>vpc-bp16qjewdsunr41m1****</ResourceId>\\n        <TagKey>FinanceDept</TagKey>\\n    </TagResources>\\n</ListTagResourcesResponse>","errorExample":""}]',
      'title' => '查询云资源已经绑定的标签列表',
      'description' => '- 请求中至少指定参数**ResourceId.N**或**Tag.N**（**Tag.N.Key**与**Tag.N.Value**），以确定检索对象。

- **Tag.N**是资源的标签，由一个键值对组成。仅指定**Tag.N.Key**时，则返回该标签键关联的所有标签值。仅指定**Tag.N.Value**会报错。

- 如果您同时指定**Tag.N**和**ResourceId.N**筛选标签，则**ResourceId.N**必须满足所有输入的标签键值对。

- 如果您同时指定多个标签键值对，返回结果为同时包含被指定的多个键值对的资源。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTags' => 
    array (
      'summary' => '调用DescribeTags接口查询满足筛选条件的标签列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **VPC**：表示资源类型为专有网络实例。
- **VSWITCH**：表示资源类型为交换机实例。
- **ROUTETABLE**：表示资源类型为路由表实例。
- **EIP**：表示资源类型为弹性公网IP实例。
- **VPNGATEWAY**：表示资源类型为VPN网关实例。
- **NATGATEWAY**：表示资源类型为NAT网关实例。
- **COMMONBANDWIDTHPACKAGE**：表示资源类型为共享带宽实例。
- **PREFIXLIST**：表示资源类型为前缀列表实例。
- **PUBLICIPADDRESSPOOL**：表示资源类型为IP地址池实例。
- **IPV4GATEWAY**：表示资源类型为IPv4网关实例。
- **IPV6GATEWAY**：表示资源类型为IPv6网关实例。
- **NETWORKACL**：表示资源类型为网络ACL实例。
- **TRAFFICMIRRORFILTER**：表示资源类型为流量镜像筛选条件实例。
- **TRAFFICMIRRORSESSION**：表示资源类型为流量镜像会话实例。
- **FLOWLOG**：表示资源类型为流日志实例。
- **HAVIP**：表示资源类型为高可用虚拟IP实例。
- **DHCPOPTIONSSET**：表示资源类型为DHCP选项集实例。
- **GATEWAYENDPOINT**：表示资源类型为网关终端节点实例。

> 输入的资源类型取值不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResult',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，取值范围：1~50，默认值：50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'example' => '50',
            'default' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。最多支持输入50个资源ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入50个资源ID。

> 当输入此参数时，必须输入**ResourceType**参数。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-bp16qjewdsunr41m1****',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签集合。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签集合。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。

一个标签键最多支持128个字符，不能是空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。


一个标签值最多支持128个字符，可以是空字符串，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => 'object',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C46FF5A8-C5F0-4024-8262-B16B639225A0',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '所有满足筛选条件的标签列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'The specified Tags and ResourcesIds are not allow to both empty.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter.TagKey',
            'errorMessage' => 'The input parameter TagKey that is mandatory for processing this request is not supplied.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter.TagValue',
            'errorMessage' => 'The input parameter TagValue that is mandatory for processing this request is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          9 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          11 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          12 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          13 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"C46FF5A8-C5F0-4024-8262-B16B639225A0\\",\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"TagValue\\": \\"FinanceJoshua\\",\\n        \\"TagKey\\": \\"FinanceDept\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTagsResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>C46FF5A8-C5F0-4024-8262-B16B639225A0</RequestId>\\n    <TagResources>\\n        <TagValue>FinanceJoshua</TagValue>\\n        <TagKey>FinanceDept</TagKey>\\n    </TagResources>\\n</DescribeTagsResponse>","errorExample":""}]',
      'title' => '查询满足筛选条件的标签列表',
      'description' => '- 请求中至少指定参数**ResourceId.N**或**Tag.N**（**Tag.N.Key**与**Tag.N.Value**），以确定检索对象。

- **Tag.N**是资源的标签，由一个键值对组成。仅指定**Tag.N.Key**时，则返回该标签键关联的所有标签值。仅指定**Tag.N.Value**会报错。

- 如果您同时指定**Tag.N**和**ResourceId.N**筛选标签，则**ResourceId.N**须满足任意输入的标签键值对。

- 如果您同时指定多个标签键值对，返回结果为所有满足任意标签值对的标签。',
    ),
    'DescribeTagKeys' => 
    array (
      'summary' => '调用DescribeTagKeys接口返回标签键。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：

- **VPC**：专有网络实例。
- **VSWITCH**：交换机实例。
- **ROUTETABLE**：路由表实例。
- **EIP**：弹性公网IP实例。
- **VpnGateWay**：VPN网关实例。
- **NATGATEWAY**：NAT网关实例。
- **COMMONBANDWIDTHPACKAGE**：共享带宽实例。
',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签键。',
            'type' => 'string',
            'required' => false,
            'example' => 'keyword',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResult',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小，取值范围：1~50，默认值：50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'example' => '50',
            'default' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。最多支持输入50个资源ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入50个资源ID。

> 当输入该参数时，必须输入**ResourceType**参数。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-bp16qjewdsunr41m1****',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => ' object',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE65F6B7-7566-4802-9007-96F2494AC512',
              ),
              'TagKeys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagKey' => 
                  array (
                    'description' => '标签键集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签键集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '标签键的类型。取值：

- **Custom**：用户自定义类型。
- **System**：系统类型。
',
                          'type' => 'string',
                          'example' => 'Custom',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'The specified Tags and ResourcesIds are not allow to both empty.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter.TagKey',
            'errorMessage' => 'The input parameter TagKey that is mandatory for processing this request is not supplied.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter.TagValue',
            'errorMessage' => 'The input parameter TagValue that is mandatory for processing this request is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          9 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          10 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          11 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          12 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          13 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"DE65F6B7-7566-4802-9007-96F2494AC512\\",\\n  \\"TagKeys\\": {\\n    \\"TagKey\\": [\\n      {\\n        \\"Type\\": \\"Custom\\",\\n        \\"TagKey\\": \\"FinanceDept\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTagKeysResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>DE65F6B7-7566-4802-9007-96F2494AC512</RequestId>\\n    <TagKeys>\\n        <Type>Custom</Type>\\n        <TagKey>FinanceDept</TagKey>\\n    </TagKeys>\\n</DescribeTagKeysResponse>","errorExample":""}]',
      'title' => '查询标签键',
    ),
    'ListTagResourcesForExpressConnect' => 
    array (
      'summary' => '调用ListTagResourcesForExpressConnect接口查询高速通道已经绑定的标签列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PHYSICALCONNECTION',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入20个资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-bp16qjewdsunr41m1****',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如果传入该值，则不能输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '标签资源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签资源列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
                          'type' => 'string',
                          'example' => 'PHYSICALCONNECTION',
                        ),
                        'TagValue' => 
                        array (
                          'description' => '资源的标签值。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'pc-bp16qjewdsunr41m1****',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '资源的标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          5 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          8 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'The specified Tags and ResourcesIds are not allow to both empty.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"ResourceType\\": \\"PHYSICALCONNECTION\\",\\n        \\"TagValue\\": \\"FinanceJoshua\\",\\n        \\"ResourceId\\": \\"pc-bp16qjewdsunr41m1****\\",\\n        \\"TagKey\\": \\"FinanceDept\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTagResourcesForExpressConnectResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <TagResources>\\n        <ResourceType>PHYSICALCONNECTION</ResourceType>\\n        <TagValue>FinanceJoshua</TagValue>\\n        <ResourceId>pc-bp16qjewdsunr41m1****</ResourceId>\\n        <TagKey>FinanceDept</TagKey>\\n    </TagResources>\\n</ListTagResourcesForExpressConnectResponse>","errorExample":""}]',
      'title' => '查询高速通道已经绑定的标签列表',
      'description' => '- 如您需要确认检索对象，请求参数中需指定参数**ResourceId.N**或**Tag.N**（**Tag.N.Key**与**Tag.N.Value**）。

- **Tag.N**是资源的标签，由一个键值对组成。仅指定**Tag.N.Key**时，则返回该标签键关联的所有标签值。仅指定**Tag.N.Value**会报错。

- 如果您同时指定**Tag.N**和**ResourceId.N**筛选标签，则**ResourceId.N**必须满足所有输入的标签键值对。

- 如果您同时指定多个标签键值对，返回结果为同时包含被指定的多个键值对的资源。',
    ),
    'DescribeTagKeysForExpressConnect' => 
    array (
      'summary' => '调用DescribeTagKeysForExpressConnect接口返回高速通道的标签列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
            'type' => 'string',
            'required' => false,
            'example' => 'PHYSICALCONNECTION',
          ),
        ),
        1 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签名称的关键字。支持模糊匹配，即输入关键字即可查询包含该关键字的所有标签。',
            'type' => 'string',
            'required' => false,
            'example' => 'keyword',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResult',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'example' => '20',
            'default' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。最多支持输入20个资源ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。最多支持输入20个资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'pc-bp16qjewdsunr41m1****',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
              'TagKeys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagKey' => 
                  array (
                    'description' => '标签键的集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签键的集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
                          'type' => 'string',
                          'example' => 'PHYSICALCONNECTION',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'The specified Tags and ResourcesIds are not allow to both empty.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter.TagKey',
            'errorMessage' => 'The input parameter TagKey that is mandatory for processing this request is not supplied.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter.TagValue',
            'errorMessage' => 'The input parameter TagValue that is mandatory for processing this request is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
          10 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\",\\n  \\"TagKeys\\": {\\n    \\"TagKey\\": [\\n      {\\n        \\"Type\\": \\"PHYSICALCONNECTION\\",\\n        \\"TagKey\\": \\"FinanceDept\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTagKeysForExpressConnectResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n    <TagKeys>\\n        <Type>PHYSICALCONNECTION</Type>\\n        <TagKey>FinanceDept</TagKey>\\n    </TagKeys>\\n</DescribeTagKeysForExpressConnectResponse>","errorExample":""}]',
      'title' => '查询高速通道的标签列表',
    ),
    'CreateRouterInterface' => 
    array (
      'summary' => '调用CreateRouterInterface接口创建路由器接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Role',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的角色，取值： 
  
- **InitiatingSide**：连接发起端。   

- **AcceptingSide**：连接接收端。   
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'InitiatingSide',
          ),
        ),
        2 => 
        array (
          'name' => 'OppositeRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连接接收端所在的地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的规格。可用的规格和对应的带宽取值如下： 
          
- **Mini.2**：2 Mbps   

- **Mini.5**：5 Mbps   

- **Small.1**：10 Mbps   

- **Small.2**：20 Mbps   
 
- **Small.5**：50 Mbps   

- **Middle.1**：100 Mbps   

- **Middle.2**：200 Mbps   

- **Middle.5**：500 Mbps   

- **Large.1**：1000 Mbps   

- **Large.2**：2000 Mbps   

- **Large.5**：5000 Mbps   

- **Xlarge.1**：10000 Mbps  

> 当**Role**为**AcceptingSide**（连接接收端）时，**Spec**取值为**Negative**即创建接收端路由器接口时不涉及规格。 
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Mini.2',
          ),
        ),
        4 => 
        array (
          'name' => 'RouterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口关联的路由器类型，取值： 

- **VRouter**：VPC路由器。

- **VBR**：边界路由器。
   
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VRouter',
          ),
        ),
        5 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 路由器接口关联的路由器ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-m5ebm6g9ptc9mly1c****',
          ),
        ),
        6 => 
        array (
          'name' => 'OppositeInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 对端路由器接口ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ri-2zeo3xzyf38r4urzd****',
          ),
        ),
        7 => 
        array (
          'name' => 'OppositeRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 对端路由器的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1lhl0taikrteen8****',
          ),
        ),
        8 => 
        array (
          'name' => 'OppositeRouterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端路由器接口关联的路由器类型，取值： 

- **VRouter**：VPC路由器。

- **VBR**：边界路由器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'VRouter',
            'default' => 'VRouter',
          ),
        ),
        9 => 
        array (
          'name' => 'OppositeInterfaceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端路由器接口的所有者的阿里云账号ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => '253460731706911258',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckSourceIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查源IP地址，必须是本端VPC内的一个未被使用的IP。 

> 物理专线接入场景下可指定该参数。
 
',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.6',
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckTargetIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查目的IP地址。 

> 当指定了**HealthCheckSourceIp**后，该参数必填。
',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.8',
          ),
        ),
        12 => 
        array (
          'name' => 'AccessPointId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR所属的接入点ID。 

您可以通过调用[DescribeAccessPoints](~~36062~~)接口获取物理专线接入点ID。  
          
> 物理专线接入场景下需指定该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'ap-cn-hangzhou-yh-ts-A',
          ),
        ),
        13 => 
        array (
          'name' => 'OppositeAccessPointId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端所属的接入点ID。

> 对端路由器接口位于VBR上时需指定该参数，创建路由器接口后无法修改。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ap-cn-shanghai-nt-aligroup-C',
          ),
        ),
        14 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的描述信息。  

长度为2~256个字符，必须以字母或中文开头，但不能以`http:// `或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'abcabc',
          ),
        ),
        15 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的名称。  

长度为2~128个字符，必须以字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        16 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买时长，取值： 

- 当选择按月付费时，取值范围为**1~9**。

- 当选择按年付费时，取值范围为**1~3**。

> **InstanceChargeType**参数的值为**PrePaid**时，该参数必填。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        17 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的付费方式，取值： 

- **PrePaid**：预付费。

- **PostPaid**：后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'PrePaid',
          ),
        ),
        18 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动付费，取值： 
          
- **false**（默认值）：不开启自动付费，生成订单后需要到订单中心完成支付。   

- **true**：开启自动付费，自动支付订单。   

> **InstanceChargeType**参数的值为**PrePaid**时，该参数必填。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        19 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预付费的计费周期，取值： 
          
- **Month**（默认值）：按月付费。

- **Year**：按年付费。   
          

> **InstanceChargeType**参数的值为**PrePaid**时，该参数必填。
 
',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        20 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。 

由客户端生成该参数值，要保证在不同请求间唯一。 

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        21 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。 

由客户端生成该参数值，要保证在不同请求间唯一。 

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        22 => 
        array (
          'name' => 'FastLinkMode',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否为使用快速连接模式创建的VBR上联路由器接口，快速连接模式可实现VBR和VPC两端路由器接口创建完毕后自动完成连接。取值：

- **true**：是。
- **false**（默认值）：否。


> -  该参数只在**RouterType**取值为**VBR**，**OppositeRouterType**参数取值为**VRouter**时生效。
- 当**FastLinkMode**参数取值为**true**时，**Role**参数必须取值为**InitiatingSide**，**AccessPointId**、**OppositeRouterType**、**OppsiteRouterId**和**OppositeInterfaceOwnerId**参数为必选。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        23 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开通自动续费。取值：

- **false**（默认值）：不开通。
- **true**：开通。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        24 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        25 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。至少输入1个标签键，最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如果传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '079874CD-AEC1-43E6-AC03-ADD96B6E4907',
              ),
              'OrderId' => 
              array (
                'description' => '订单号，选择预付费时返回该参数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20210101123456',
              ),
              'RouterInterfaceId' => 
              array (
                'description' => '路由器接口的ID。',
                'type' => 'string',
                'example' => 'ri-2ze7fbuohm****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidPrice.NotFound',
            'errorMessage' => 'Pricing plan result not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidAliuid',
            'errorMessage' => 'Invalid Aliuid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRole.ValueNotSupported',
            'errorMessage' => 'The specified Role is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidSpec.ValudNotSupported',
            'errorMessage' => 'The specified Spec is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidRouterType.ValueNotSupported',
            'errorMessage' => 'The specified RouterType is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The specified "Name" is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.BillsOutstanding',
            'errorMessage' => 'You cannot create more RouterInterface because you have bills outstanding.',
          ),
          7 => 
          array (
            'errorCode' => 'LimitationExceed.InterfaceNumberOnRouter',
            'errorMessage' => 'Total number of RouterInterfaces on a Router exceeded.',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.NotInRouterInterfaceCreateWhitelist',
            'errorMessage' => 'Not in router interface create whitelist.',
          ),
          9 => 
          array (
            'errorCode' => 'RI_CREATE_ONE_LIMIT_BY_SYNC',
            'errorMessage' => 'Create ri only one limit by sync.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidAccessPoint.ValueNotAllowed',
            'errorMessage' => 'The non-vbr router interface cannot have access point configured.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParam.NotFound',
            'errorMessage' => 'Parameter must not be null,uid, bid,regionNo, remoteRegionNo, routerId or accessPointId',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidAccessPoint.NotMatch',
            'errorMessage' => 'The accessPoint id is not matched',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidAccessPoint.NotExist',
            'errorMessage' => 'The accessPoint not exit',
          ),
          14 => 
          array (
            'errorCode' => 'INVAID_VBR_STATUS',
            'errorMessage' => 'VBR status must be active',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectStatus.CenStatus',
            'errorMessage' => 'Cen status must not be middle status.',
          ),
          16 => 
          array (
            'errorCode' => 'Forbidden.AcceptRoleNotSupportPrePay',
            'errorMessage' => 'Acception side ri not support chargetype for prepaid.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceSpec.Malformed',
            'errorMessage' => 'Specified RouterInterface spec is not valid.',
          ),
          18 => 
          array (
            'errorCode' => 'VpcSubnet.NotFound',
            'errorMessage' => 'Vpc subnet not exist.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.HealthcheckIp',
            'errorMessage' => 'Healthcheck ip cannot equal with instance ip.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.HcForInvalidRiType',
            'errorMessage' => 'Healthchecksourceip and healthchecktargetip is only valid for vr ri that is connected to vbr.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationFailed.SyncOrderToSub',
            'errorMessage' => 'SyncOrderToSub error.',
          ),
          22 => 
          array (
            'errorCode' => 'IllegalParam.CrossBorderBandwidth',
            'errorMessage' => 'CrossBorder bandwidth error.',
          ),
          23 => 
          array (
            'errorCode' => 'IllegalParam.VRouterType',
            'errorMessage' => 'The VRouterType is not supported.',
          ),
          24 => 
          array (
            'errorCode' => 'IllegalParam.Spec',
            'errorMessage' => 'The spec is illegal.',
          ),
          25 => 
          array (
            'errorCode' => 'Forbidden.CrossBorder',
            'errorMessage' => 'User not authorized to create cross border routerInterface.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidRouterId.NotFound',
            'errorMessage' => 'Param is not valid,this user does not have this router or aliuid bid regionNo and routerId must have something wrong.',
          ),
          27 => 
          array (
            'errorCode' => 'InvalidCommodity.NotFound',
            'errorMessage' => 'Commodity is not exist.',
          ),
          28 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceChargeType.Malformed',
            'errorMessage' => 'Specified RouterInterface ChargeType is not valid.',
          ),
          29 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified regionId is illegal.',
          ),
          30 => 
          array (
            'errorCode' => 'PAY.MAYI_WITHHOLDING_AGREEMENT_ILLEGAL',
            'errorMessage' => 'User withhoding argeement is illegal.',
          ),
          31 => 
          array (
            'errorCode' => 'QuotaExceeded',
            'errorMessage' => 'RiPerUser quota exceeded',
          ),
          32 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          33 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The regionId provided does not exist in ec region list.',
          ),
          34 => 
          array (
            'errorCode' => 'ResourceNotInResourceGroup',
            'errorMessage' => 'The specified resource is not in the specified ResourceGroup.',
          ),
          35 => 
          array (
            'errorCode' => 'HaveConnectionBetweenRouters',
            'errorMessage' => 'Have connection between routers',
          ),
          36 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The specified "Description" is not valid.',
          ),
          37 => 
          array (
            'errorCode' => 'InvalidBandwidth.NotEnough',
            'errorMessage' => 'Bandwidth not enough.',
          ),
          38 => 
          array (
            'errorCode' => 'ForbiddenAction',
            'errorMessage' => 'The user does not support this action.',
          ),
          39 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportIPv6',
            'errorMessage' => 'Router interface not support IPv6.',
          ),
          40 => 
          array (
            'errorCode' => 'InvalidParam.AvailableZoneId',
            'errorMessage' => 'The specified AvailableZoneId did not retrieve the corresponding cluster IP address.',
          ),
          41 => 
          array (
            'errorCode' => 'OperationFailed.NoAvailableAmount',
            'errorMessage' => 'The available amount of your account is less than 0, please recharge before attempting to purchase.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The regionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouterId.NotFound',
            'errorMessage' => 'The specified RouterId does not exist in our recored.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRouterId.AttacedToCEN',
            'errorMessage' => 'Can not create ri when attaced to CEN.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::CreateRouterInterface',
        'callbackInterval' => 1000,
        'maxCallbackTimes' => 9999,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"079874CD-AEC1-43E6-AC03-ADD96B6E4907\\",\\n  \\"OrderId\\": 20210101123456,\\n  \\"RouterInterfaceId\\": \\"ri-2ze7fbuohm****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateRouterInterfaceResponse>\\n    <RequestId>079874CD-AEC1-43E6-AC03-ADD96B6E4907</RequestId>\\n    <OrderId>20210101123456</OrderId>\\n    <RouterInterfaceId>ri-2ze7fbuohm****</RouterInterfaceId>\\n</CreateRouterInterfaceResponse>","errorExample":""}]',
      'title' => '创建路由器接口',
      'description' => '调用本接口创建路由器接口时，请注意： 

- 任意两个路由器之间，最多只能存在一对互连的路由器接口。  

- 一个路由器上可以最多创建5个路由器接口。  

- 如果账户下存在欠费状态的路由器接口，则无法再创建路由器接口。  

- 同一路由表下的路由条目的目标网段（DestinationCidrBlock）不允许相同。   

- 边界路由器VBR（Virtual Border Router）只能是连接发起端，并且是已激活状态。  
      
- 通过本接口可以创建预付费和后付费的路由器接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteRouterInterface' => 
    array (
      'summary' => '调用DeleteRouterInterface接口删除路由器接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'high',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 路由器接口的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ri-2zeo3xzyf38r4urz****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstance.StatusError',
            'errorMessage' => 'The router instance status error.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.OperationLocked',
            'errorMessage' => 'Operation failed because OperationLocked.',
          ),
          2 => 
          array (
            'errorCode' => 'RouterInterfaceReferredByRouteEntry',
            'errorMessage' => 'Router interface referred by route entry.',
          ),
          3 => 
          array (
            'errorCode' => 'ReferredByRouteEntry.RouterInterface',
            'errorMessage' => 'Router interface referred by route entry.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteRouterInterfaceResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</DeleteRouterInterfaceResponse>","errorExample":""}]',
      'title' => '删除路由器接口',
      'description' => '调用本接口删除路由器接口时，请注意： 

- 只能删除处于**Idle**和**Inactive**状态的路由器接口。 
- 删除路由器接口之前，需要删除所有指向它的自定义路由条目。 ',
    ),
    'ModifyRouterInterfaceAttribute' => 
    array (
      'summary' => '调用ModifyRouterInterfaceAttribute接口修改路由器接口的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 路由器接口ID。 
',
            'type' => 'string',
            'required' => true,
            'example' => 'ri-2zeo3xzyf38r4urz****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的名称。

长度为2～128个字符，必须以字母或中文开头，可包含数字、下划线（_）和短划线（-）。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'TEST',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的描述信息。 

长度为2～256个字符，必须以字母或中文开头，但不能以`http:// `或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '路由器接口',
          ),
        ),
        4 => 
        array (
          'name' => 'OppositeInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端路由器接口ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ri-2zeo3xzyf38r4urz****',
          ),
        ),
        5 => 
        array (
          'name' => 'OppositeRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端路由器ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'vrt-bp1jcg5cmxjbl9xgc****',
          ),
        ),
        6 => 
        array (
          'name' => 'OppositeRouterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要连接的对端路由器接口所属的路由器类型。取值：

- **VRouter**：路由器。

- **VBR**（默认值）：边界路由器。',
            'type' => 'string',
            'required' => false,
            'example' => 'VBR',
          ),
        ),
        7 => 
        array (
          'name' => 'OppositeInterfaceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端路由器接口的账号ID。 ',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '28768383240243****',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckSourceIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查源IP地址，必须是本端VPC内的一个未被使用的IP地址。

> 物理专线接入场景下可指定该参数。

',
            'type' => 'string',
            'required' => false,
            'example' => '116.62.XX.XX',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckTargetIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查目的IP地址。 

> 指定**HealthCheckSourceIp**后，该参数为必选。',
            'type' => 'string',
            'required' => false,
            'example' => '116.62.XX.XX',
          ),
        ),
        10 => 
        array (
          'name' => 'HcThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查阈值。单位：个。推荐值为**8**。表示指定健康检查时发送探测报文的个数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '8',
          ),
        ),
        11 => 
        array (
          'name' => 'HcRate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查速率。单位：毫秒。推荐值为**2000**。表示指定健康检查时发送连续探测报文的时间间隔。

本示例**HcThreshold**设置为**8**、**HcRate**设置为**2000**，即在健康检查时每2000毫秒从**HealthCheckSourceIp**（健康检查源IP地址）向**HealthCheckTargetIp**（健康检查目的IP地址）发送一次探测报文，如果连续8次探测报文都无响应，则健康检查失败。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2000',
          ),
        ),
        12 => 
        array (
          'name' => 'DeleteHealthCheckIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除该路由器接口上配置的健康检查IP。取值：

- **true**：删除健康检查IP。
 
- **false**（默认值）：不删除健康检查IP。 ',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'This RouterInterface is financiel locked because of bills outstanding.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName.Malformed',
            'errorMessage' => 'The attribute name is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOppositeRouterType.ValueNotSupported',
            'errorMessage' => 'The specified OppositeRouterType is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDescription.Malformed',
            'errorMessage' => 'The Description is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'The Router instance owner error',
          ),
          5 => 
          array (
            'errorCode' => 'LinkRole.NotSupport',
            'errorMessage' => 'This linkrole is not supported',
          ),
          6 => 
          array (
            'errorCode' => 'Forbbiden.ModifyIdAndType',
            'errorMessage' => 'Opposite is VBR, cannot modify the ID and type',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParam.ModifyRouterInterface',
            'errorMessage' => 'Modify routerinterface param invalid',
          ),
          8 => 
          array (
            'errorCode' => 'INSTANCE_IN_PROCESSIONG',
            'errorMessage' => 'Instance is in processing,please wait and try again',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.HcThreshold',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.HcRate',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidHealthCheckIP.Malformd',
            'errorMessage' => 'Healthcheck sourceip or targetip is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.HcSourceIp',
            'errorMessage' => 'The specified healthCheck Ip is not valid.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.OperationLocked',
            'errorMessage' => 'Operation failed because OperationLocked.',
          ),
          14 => 
          array (
            'errorCode' => 'IncorrectStatus.RouterInterface',
            'errorMessage' => 'This openeration would not be allowed because status of this RouterInterface is not correct.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceId.NotFound',
            'errorMessage' => 'The specified RouterInterfaceId does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyRouterInterfaceAttributeResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</ModifyRouterInterfaceAttributeResponse>","errorExample":""}]',
      'title' => '修改路由器接口的配置',
    ),
    'ModifyRouterInterfaceSpec' => 
    array (
      'summary' => '调用ModifyRouterInterfaceSpec接口修改路由器接口的规格。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 路由器接口所在的地域。

 您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 路由器接口的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ri-2zeo3xzyf38r4urzd****',
          ),
        ),
        2 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的规格。可用的规格和对应的带宽如下：

* **Mini.2**：2Mbps

* **Mini.5**：5Mbps

* **Small.1**：10Mbps

* **Small.2**：20Mbps

* **Small.5**：50Mbps

* **Middle.1**：100Mbps

* **Middle.2**：200Mbps

* **Middle.5**：500Mbps

* **Large.1**：1000 Mbps

* **Large.2**：2000Mbps

* **Large.5**：5000 Mbps

* **Xlarge.1**：10000Mbps

>当**Role**为**AcceptingSide**（连接接收端）时，**Spec**取值为**Negative**。',
            'type' => 'string',
            'required' => true,
            'example' => 'Small.1',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '路由器接口规格。',
            'type' => 'object',
            'properties' => 
            array (
              'Spec' => 
              array (
                'description' => '路由器接口的规格。取值：

* **Mini.2**：2Mbps

* **Mini.5**：5Mbps

* **Small.1**：10Mbps

* **Small.2**：20Mbps

* **Small.5**：50Mbps

* **Middle.1**：100Mbps

* **Middle.2**：200Mbps

* **Middle.5**：500Mbps

* **Large.1**：1000 Mbps

* **Large.2**：2000Mbps

* **Large.5**：5000 Mbps

* **Xlarge.1**：10000Mbps',
                'type' => 'string',
                'example' => 'Small.1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'RouterInterface can not be operated by this action when it?s FinancialLocked.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParam.NotFound',
            'errorMessage' => 'Parameter must not be null,uid, bid,regionNo, remoteRegionNo or routerId',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOppositeRegionId.NotFound',
            'errorMessage' => 'The OppositeRegionId provided does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceOwner.Error',
            'errorMessage' => 'The router instance owner error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceSpec.Malformed',
            'errorMessage' => 'Specified RouterInterface spec is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.chargeType',
            'errorMessage' => 'RouterInterface chargeType different.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceQueryError',
            'errorMessage' => 'The specified resource is queried error.',
          ),
          7 => 
          array (
            'errorCode' => ' InvalidSpec.ValueNotSupported',
            'errorMessage' => 'The specified Spec is not supported.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidSpec.ValueNotSupported',
            'errorMessage' => 'The specified Spec is not supported.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidInstance.StatusError',
            'errorMessage' => 'The router instance status error.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidOpposite.NotFound',
            'errorMessage' => 'The opposite does not exist.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceId.NotFound',
            'errorMessage' => 'The specified RouterInterfaceId does not exist in our record.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Spec\\": \\"Small.1\\",\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyRouterInterfaceSpecResponse>\\n    <Spec>Small.1</Spec>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</ModifyRouterInterfaceSpecResponse>","errorExample":""}]',
      'title' => '修改路由器接口的规格',
      'description' => '调用本接口后，路由器接口进入激活中（**Activating**）状态，激活成功后进入已激活（**Active**）状态。 
      
> 无法修改处于欠费状态的路由器接口的规格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRouterInterfaces' => 
    array (
      'summary' => '调用DescribeRouterInterfaces接口查询指定地域内的路由器接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => ' cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含续费数据。取值：

- **true**：是。

- **false**（默认值）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**。默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件，最多可提供5个过滤条件。支持以下过滤条件：

- **RouterInterfaceId**：路由器接口ID。

- **RouterId**：路由器ID。

- **RouterType**：路由器类型，取值为**VRouter**或**VBR**。

- **RouterInterfaceOwnerId**：路由器接口的所属账号ID。

- **OppositeInterfaceId**：对端路由器接口ID。

- **OppositeRouterType**：对端路由器接口类型，取值为**VRouter**或**VBR**。

-  **OppositeRouterId**：对端路由器接口ID。

- **OppositeInterfaceOwnerId**：对端路由器接口所属账号ID。

-  **Status**：路由器接口状态。

- **Name**：路由器接口名称。

> 每个过滤条件的多个值之间为或关系，即只要与其中一个值吻合则视为符合该过滤条件。各个过滤条件之间为与关系，即符合所有指定的过滤条件，才会进入最终的查询结果。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Filter.1.Status',
                ),
                'Value' => 
                array (
                  'description' => '根据Key指定过滤值。一个Key支持指定多个过滤值，每个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '根据Key指定过滤值。一个Key支持指定多个过滤值，每个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'test',
                  ),
                  'required' => false,
                  'example' => 'Filter.1.Active 1',
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph6aiy****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。至少输入1个标签键，最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C7F6FCBD-F9CC-4501-8EF3-CDC9577CAE45',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**。默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RouterInterfaceSet' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouterInterfaceType' => 
                  array (
                    'description' => '路由器接口的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由器接口的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ReservationActiveTime' => 
                        array (
                          'description' => '续费生效时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                          'type' => 'string',
                          'example' => '2021-03-11T16:00:00Z',
                        ),
                        'HealthCheckTargetIp' => 
                        array (
                          'description' => '健康检查目标IP。',
                          'type' => 'string',
                          'example' => '116.62.XX.XX',
                        ),
                        'Status' => 
                        array (
                          'description' => '路由器接口的状态。',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '路由表的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'ReservationOrderType' => 
                        array (
                          'description' => '续费订单类型。',
                          'type' => 'string',
                          'example' => 'RENEWCHANGE',
                        ),
                        'OppositeInterfaceId' => 
                        array (
                          'description' => '对端路由器接口ID。',
                          'type' => 'string',
                          'example' => 'ri-bp1itx13bwe6f2wfh****',
                        ),
                        'Spec' => 
                        array (
                          'description' => '路由器接口的规格。',
                          'type' => 'string',
                          'example' => 'Large',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '付费方式。',
                          'type' => 'string',
                          'example' => 'PayByTraffic',
                        ),
                        'RouterInterfaceId' => 
                        array (
                          'description' => '路由器接口ID。',
                          'type' => 'string',
                          'example' => 'ri-2zenfgfpyu3v93koa****',
                        ),
                        'HcThreshold' => 
                        array (
                          'description' => '健康检查阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'OppositeRouterType' => 
                        array (
                          'description' => '连接对端的路由器接口所属的路由器类型。',
                          'type' => 'string',
                          'example' => 'VRouter',
                        ),
                        'VpcInstanceId' => 
                        array (
                          'description' => '对等连接中本端VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-2ze3tq4uxhysg717x****',
                        ),
                        'OppositeInterfaceOwnerId' => 
                        array (
                          'description' => '对端路由器接口所属的账号ID。',
                          'type' => 'string',
                          'example' => '271598332402530847',
                        ),
                        'OppositeVpcInstanceId' => 
                        array (
                          'description' => '对端VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1qpo0kug3a20qqe****',
                        ),
                        'ReservationInternetChargeType' => 
                        array (
                          'description' => '续费付费类型。',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'CrossBorder' => 
                        array (
                          'description' => '是否是跨境连接。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => '路由器接口的带宽。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'Description' => 
                        array (
                          'description' => '路由表接口描述。',
                          'type' => 'string',
                          'example' => '路由表接口描述',
                        ),
                        'HcRate' => 
                        array (
                          'description' => '健康检查速率。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ReservationBandwidth' => 
                        array (
                          'description' => '续费带宽。单位：Mbps。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'Name' => 
                        array (
                          'description' => '自定义名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'OppositeRouterId' => 
                        array (
                          'description' => '连接对端的路由器接口所属的路由器ID。',
                          'type' => 'string',
                          'example' => 'vrt-bp1d3bxtdv68tfd7g****',
                        ),
                        'OppositeInterfaceSpec' => 
                        array (
                          'description' => '连接对端路由器接口的规格。',
                          'type' => 'string',
                          'example' => 'Large',
                        ),
                        'RouterId' => 
                        array (
                          'description' => '路由条目所在路由器的ID。',
                          'type' => 'string',
                          'example' => 'vrt-bp1d3bxtdv68tfd7g****',
                        ),
                        'OppositeInterfaceBusinessStatus' => 
                        array (
                          'description' => '连接对端的路由器接口的业务状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'ConnectedTime' => 
                        array (
                          'description' => '连接建立的时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'HealthCheckSourceIp' => 
                        array (
                          'description' => '健康检查源IP。',
                          'type' => 'string',
                          'example' => '116.62.XX.XX',
                        ),
                        'OppositeInterfaceStatus' => 
                        array (
                          'description' => '连接对端的路由器接口的状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '获取数据的结束时间点。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                          'type' => 'string',
                          'example' => '2021-06-08T12:20:55',
                        ),
                        'OppositeRegionId' => 
                        array (
                          'description' => '连接对端所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'OppositeAccessPointId' => 
                        array (
                          'description' => '对端接入点ID。',
                          'type' => 'string',
                          'example' => 'ap-cn-shanghaiSZ-****',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => '路由器接口的业务状态。取值：

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。

- **SecurityLocked**：安全风控锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'OppositeBandwidth' => 
                        array (
                          'description' => '对端带宽。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '12',
                        ),
                        'RouterType' => 
                        array (
                          'description' => '路由表所在路由器的类型。取值：

- **VRouter**：VPC路由器。

- **VBR**：边界路由器。
   ',
                          'type' => 'string',
                          'example' => 'VRouter',
                        ),
                        'Role' => 
                        array (
                          'description' => '对等连接中的角色。',
                          'type' => 'string',
                          'example' => 'InitiatingSide',
                        ),
                        'HasReservationData' => 
                        array (
                          'description' => '是否有续费数据。',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'AccessPointId' => 
                        array (
                          'description' => '接入点ID。',
                          'type' => 'string',
                          'example' => 'ap-cn-shanghaiSZ-****',
                        ),
                        'Ipv6Status' => 
                        array (
                          'description' => '是否开启IPv6安全防护。取值：
 
- **on**：开启。
- **off**：关闭。
- **unsupport**：不支持。',
                          'type' => 'string',
                          'example' => 'on',
                        ),
                        'FastLinkMode' => 
                        array (
                          'description' => '是否为使用快速连接模式创建的VBR上联路由器接口，快速连接模式可实现VBR和VPC两端路由器接口创建完毕后自动完成连接。取值：

- **true**：是。

- **false**（默认值）：否。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
                          'type' => 'string',
                          'example' => 'rg-acfmxazb4ph6aiy****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tags' => 
                            array (
                              'description' => '资源的标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '资源的标签键。',
                                    'type' => 'string',
                                    'example' => 'FinanceDept',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '资源的标签值。',
                                    'type' => 'string',
                                    'example' => 'FinanceJoshua',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.NotNull',
            'errorMessage' => 'The parameter must not be null.',
          ),
          1 => 
          array (
            'errorCode' => 'EndPoint.Empty',
            'errorMessage' => 'the rc endpoint is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidConnectionType.MalFormed',
            'errorMessage' => 'Connection type must be vpc2vpc or vbr2vpc.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidProductForm.MalFormed',
            'errorMessage' => 'Product form must be routerinterface or expressconnect.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidRole.Malformed',
            'errorMessage' => 'role must be InitiatingSide or AcceptingSide.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.AliUid',
            'errorMessage' => 'Specified value of aliuid invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'Parameter.Illegal',
            'errorMessage' => 'The parameter is illegal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidFilterKey.ValueNotSupported',
            'errorMessage' => 'Specified filter key is not supported: Filter.X.key',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C7F6FCBD-F9CC-4501-8EF3-CDC9577CAE45\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"RouterInterfaceSet\\": {\\n    \\"RouterInterfaceType\\": [\\n      {\\n        \\"ReservationActiveTime\\": \\"2021-03-11T16:00:00Z\\",\\n        \\"HealthCheckTargetIp\\": \\"116.62.XX.XX\\",\\n        \\"Status\\": \\"active\\",\\n        \\"CreationTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"ReservationOrderType\\": \\"RENEWCHANGE\\",\\n        \\"OppositeInterfaceId\\": \\"ri-bp1itx13bwe6f2wfh****\\",\\n        \\"Spec\\": \\"Large\\",\\n        \\"ChargeType\\": \\"PayByTraffic\\",\\n        \\"RouterInterfaceId\\": \\"ri-2zenfgfpyu3v93koa****\\",\\n        \\"HcThreshold\\": 2,\\n        \\"OppositeRouterType\\": \\"VRouter\\",\\n        \\"VpcInstanceId\\": \\"vpc-2ze3tq4uxhysg717x****\\",\\n        \\"OppositeInterfaceOwnerId\\": \\"271598332402530847\\",\\n        \\"OppositeVpcInstanceId\\": \\"vpc-bp1qpo0kug3a20qqe****\\",\\n        \\"ReservationInternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"CrossBorder\\": false,\\n        \\"Bandwidth\\": 10,\\n        \\"Description\\": \\"路由表接口描述\\",\\n        \\"HcRate\\": 1,\\n        \\"ReservationBandwidth\\": \\"10\\",\\n        \\"Name\\": \\"test\\",\\n        \\"OppositeRouterId\\": \\"vrt-bp1d3bxtdv68tfd7g****\\",\\n        \\"OppositeInterfaceSpec\\": \\"Large\\",\\n        \\"RouterId\\": \\"vrt-bp1d3bxtdv68tfd7g****\\",\\n        \\"OppositeInterfaceBusinessStatus\\": \\"Normal\\",\\n        \\"ConnectedTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"HealthCheckSourceIp\\": \\"116.62.XX.XX\\",\\n        \\"OppositeInterfaceStatus\\": \\"Normal\\",\\n        \\"EndTime\\": \\"2021-06-08T12:20:55\\",\\n        \\"OppositeRegionId\\": \\"cn-shanghai\\",\\n        \\"OppositeAccessPointId\\": \\"ap-cn-shanghaiSZ-****\\",\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"OppositeBandwidth\\": 12,\\n        \\"RouterType\\": \\"VRouter\\",\\n        \\"Role\\": \\"InitiatingSide\\",\\n        \\"HasReservationData\\": \\"false\\",\\n        \\"AccessPointId\\": \\"ap-cn-shanghaiSZ-****\\",\\n        \\"Ipv6Status\\": \\"on\\",\\n        \\"FastLinkMode\\": false,\\n        \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n        \\"Tags\\": {\\n          \\"Tags\\": [\\n            {\\n              \\"Key\\": \\"FinanceDept\\",\\n              \\"Value\\": \\"FinanceJoshua\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouterInterfacesResponse>\\n    <RequestId>C7F6FCBD-F9CC-4501-8EF3-CDC9577CAE45</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <RouterInterfaceSet>\\n        <ReservationActiveTime>2021-03-11T16:00:00Z</ReservationActiveTime>\\n        <HealthCheckTargetIp>116.62.XX.XX</HealthCheckTargetIp>\\n        <Status>active</Status>\\n        <CreationTime>2021-06-08T12:20:55</CreationTime>\\n        <ReservationOrderType>RENEWCHANGE</ReservationOrderType>\\n        <OppositeInterfaceId>ri-bp1itx13bwe6f2wfh****</OppositeInterfaceId>\\n        <Spec>Large</Spec>\\n        <ChargeType>PayByTraffic</ChargeType>\\n        <RouterInterfaceId>ri-2zenfgfpyu3v93koa****</RouterInterfaceId>\\n        <HcThreshold>2</HcThreshold>\\n        <OppositeRouterType>VRouter</OppositeRouterType>\\n        <VpcInstanceId>vpc-2ze3tq4uxhysg717x****</VpcInstanceId>\\n        <OppositeInterfaceOwnerId>271598332402530847</OppositeInterfaceOwnerId>\\n        <OppositeVpcInstanceId>vpc-bp1qpo0kug3a20qqe****</OppositeVpcInstanceId>\\n        <ReservationInternetChargeType>PayByBandwidth</ReservationInternetChargeType>\\n        <CrossBorder>false</CrossBorder>\\n        <Bandwidth>10</Bandwidth>\\n        <Description>路由表接口描述</Description>\\n        <HcRate>1</HcRate>\\n        <ReservationBandwidth>10</ReservationBandwidth>\\n        <Name>test</Name>\\n        <OppositeRouterId>vrt-bp1d3bxtdv68tfd7g****</OppositeRouterId>\\n        <OppositeInterfaceSpec>Large</OppositeInterfaceSpec>\\n        <RouterId>vrt-bp1d3bxtdv68tfd7g****</RouterId>\\n        <OppositeInterfaceBusinessStatus>Normal</OppositeInterfaceBusinessStatus>\\n        <ConnectedTime>2021-06-08T12:20:55</ConnectedTime>\\n        <HealthCheckSourceIp>116.62.XX.XX</HealthCheckSourceIp>\\n        <OppositeInterfaceStatus>Normal</OppositeInterfaceStatus>\\n        <EndTime>2021-06-08T12:20:55</EndTime>\\n        <OppositeRegionId>cn-shanghai</OppositeRegionId>\\n        <OppositeAccessPointId>ap-cn-shanghaiSZ-****</OppositeAccessPointId>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <OppositeBandwidth>12</OppositeBandwidth>\\n        <RouterType>VRouter</RouterType>\\n        <Role>InitiatingSide</Role>\\n        <HasReservationData>false</HasReservationData>\\n        <AccessPointId>ap-cn-shanghaiSZ-****</AccessPointId>\\n        <Ipv6Status>on</Ipv6Status>\\n        <FastLinkMode>false</FastLinkMode>\\n        <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </RouterInterfaceSet>\\n</DescribeRouterInterfacesResponse>","errorExample":""}]',
      'title' => '查询指定地域内的路由器接口',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEcGrantRelation' => 
    array (
      'summary' => '调用DescribeEcGrantRelation接口查询跨账号创建VBR上连场景下VPC实例对VBR实例的授权关系。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询授权关系的实例类型。取值：

- **VBR**：边界路由器VBR（Virtual border router）实例，表示查询VBR实例拥有哪些VPC实例的授权。
- **VPC**：专有网络VPC（Virtual Private Cloud）实例，表示查询VPC实例对哪些VBR实例进行了授权。',
            'type' => 'string',
            'required' => true,
            'example' => 'VBR',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询授权关系的实例ID。

- 当**InstanceType**取值为**VBR**时，此处配置为VBR实例ID。

- 当**InstanceType**取值为**VPC**时，此处配置为VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vbr-bp12mw1f8k3jgygk9****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'VbrRegionNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询授权关系的VBR实例所在地域ID。

- 当**InstanceType**为**VBR**时，该参数需要配置。

- 当**InstanceType**为**VPC**时，该参数不需要配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E6E90F6B-2B41-5AAF-ABEB-236ADBAAD91D',
              ),
              'EcGrantRelations' => 
              array (
                'description' => '查询授权关系的结果列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询授权关系的结果列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VbrOwnerUid' => 
                    array (
                      'description' => 'VBR实例所属的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'VbrInstanceId' => 
                    array (
                      'description' => '查询的授权关系的VBR实例ID。',
                      'type' => 'string',
                      'example' => 'vbr-m5ex0xf63xk8s5bob****',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '查询的授权关系的VPC实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1brjuegjc88v3u9****',
                    ),
                    'AliUid' => 
                    array (
                      'description' => '查询的授权关系的VPC所属阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1250123456123456',
                    ),
                    'RegionNo' => 
                    array (
                      'description' => '查询的授权关系VPC所在地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'Status' => 
                    array (
                      'description' => '查询授权关系的结果。取值：

- **Created**：VPC实例与VBR实例已有授权关系。
-  **Deleted**：VPC实例与VBR实例没有授权关系。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'InstanceName' => 
                    array (
                      'description' => '查询的授权关系的VPC名称。',
                      'type' => 'string',
                      'example' => 'VPCname',
                    ),
                    'InstanceRouterId' => 
                    array (
                      'description' => '查询的授权关系的VPC路由器ID。',
                      'type' => 'string',
                      'example' => 'vrt-bp1i0yzgjd8ra05ec****',
                    ),
                    'VbrRegionNo' => 
                    array (
                      'description' => '查询的授权关系的VBR实例所在地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => 'VPC实例对VBR实例的授权时间。',
                      'type' => 'string',
                      'example' => '2022-09-02T11:46Z',
                    ),
                    'GrantType' => 
                    array (
                      'description' => '接受授权的VBR实例的范围。取值：

- **All**：将VPC实例授权给指定地域和阿里云账号（主账号）下的所有VBR实例。
- **Specify**：将VPC实例授权给指定VBR实例。',
                      'type' => 'string',
                      'example' => 'All',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Count' => 
              array (
                'description' => '查询的结果数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Page' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.NotNull',
            'errorMessage' => 'The parameter must not be null.',
          ),
          1 => 
          array (
            'errorCode' => 'Parameter.Illegal',
            'errorMessage' => 'The parameter is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'Instance.StatusError',
            'errorMessage' => 'The status of instance error.	',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'VRouterId.NotFound',
            'errorMessage' => 'The VRouter not found.',
          ),
          1 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E6E90F6B-2B41-5AAF-ABEB-236ADBAAD91D\\",\\n  \\"EcGrantRelations\\": [\\n    {\\n      \\"VbrOwnerUid\\": 1210123456123456,\\n      \\"VbrInstanceId\\": \\"vbr-m5ex0xf63xk8s5bob****\\",\\n      \\"InstanceId\\": \\"vpc-bp1brjuegjc88v3u9****\\",\\n      \\"AliUid\\": 1250123456123456,\\n      \\"RegionNo\\": \\"cn-hangzhou\\",\\n      \\"Status\\": \\"Created\\",\\n      \\"InstanceName\\": \\"VPCname\\",\\n      \\"InstanceRouterId\\": \\"vrt-bp1i0yzgjd8ra05ec****\\",\\n      \\"VbrRegionNo\\": \\"cn-hangzhou\\",\\n      \\"GmtCreate\\": \\"2022-09-02T11:46Z\\",\\n      \\"GrantType\\": \\"All\\"\\n    }\\n  ],\\n  \\"TotalCount\\": 10,\\n  \\"Count\\": 1,\\n  \\"Page\\": 1,\\n  \\"PageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<DescribeEcGrantRelationResponse>\\n    <RequestId>E6E90F6B-2B41-5AAF-ABEB-236ADBAAD91D</RequestId>\\n    <EcGrantRelations>\\n        <VbrOwnerUid>1210123456123456</VbrOwnerUid>\\n        <VbrInstanceId>vbr-m5ex0xf63xk8s5bob****</VbrInstanceId>\\n        <InstanceId>vpc-bp1brjuegjc88v3u9****</InstanceId>\\n        <AliUid>1250123456123456</AliUid>\\n        <RegionNo>cn-hangzhou</RegionNo>\\n        <Status>Created</Status>\\n        <InstanceName>VPCname</InstanceName>\\n        <InstanceRouterId>vrt-bp1i0yzgjd8ra05ec****</InstanceRouterId>\\n        <VbrRegionNo>cn-hangzhou</VbrRegionNo>\\n        <GmtCreate>2022-09-02T11:46Z</GmtCreate>\\n        <GrantType>All</GrantType>\\n    </EcGrantRelations>\\n    <TotalCount>10</TotalCount>\\n    <Count>1</Count>\\n    <Page>1</Page>\\n    <PageSize>10</PageSize>\\n</DescribeEcGrantRelationResponse>","errorExample":""}]',
      'title' => '查询跨账号创建VBR上连场景下VPC实例对VBR实例的授权关系',
    ),
    'DescribeRouterInterfaceAttribute' => 
    array (
      'summary' => '调用DescribeRouterInterfaceAttribute查看路由器接口配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-qingdao',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由器接口ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ri-m5egfc10sednwk2yt****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'ReservationActiveTime' => 
              array (
                'description' => '续费生效时间。',
                'type' => 'string',
                'example' => '2022-06-11T16:00:00Z',
              ),
              'HealthCheckTargetIp' => 
              array (
                'description' => '健康检查目标IP。',
                'type' => 'string',
                'example' => '2.2.XX.XX',
              ),
              'Status' => 
              array (
                'description' => '路由器接口的状态。取值：

- **Idle**：未连接
- **AcceptingConnecting**：接受连接中
- **Connecting**： 连接中
- **Activating**：激活中
- **Active**：已激活
- **Modifying**： 修改中
- **Deactivating**：冻结中
- **Inactive**：已冻结
- **Deleting**：删除中',
                'type' => 'string',
                'example' => 'Active',
              ),
              'CreationTime' => 
              array (
                'description' => '路由器接口创建的时间。',
                'type' => 'string',
                'example' => '2022-04-14T08:57:24Z',
              ),
              'ReservationOrderType' => 
              array (
                'description' => '续费订单类型。取值：**RENEW**，表示续费订单。',
                'type' => 'string',
                'example' => 'RENEW',
              ),
              'OppositeInterfaceId' => 
              array (
                'description' => '对端路由器接口ID。',
                'type' => 'string',
                'example' => 'ri-bp1xkrzttximaoxbl****',
              ),
              'Spec' => 
              array (
                'description' => '路由器接口的规格。取值：

- **Mini.2**：2 Mbps
- **Mini.5**：5 Mbps
- **Small.1**：10 Mbps
- **Small.2**：20 Mbps
- **Small.5**：50 Mbps
- **Middle.1**：100 Mbps
- **Middle.2**：200 Mbps
- **Middle.5**：500 Mbps
- **Large.1**：1000 Mbps
- **Large.2**：2000 Mbps
- **Large.5**：5000 Mbps
- **Xlarge.1**：10000 Mbps',
                'type' => 'string',
                'example' => 'Mini.2',
              ),
              'ChargeType' => 
              array (
                'description' => '付费方式。取值：

- **AfterPay**：后付费
- **PrePaid**：预付费',
                'type' => 'string',
                'example' => 'AfterPay',
              ),
              'RouterInterfaceId' => 
              array (
                'description' => '路由器接口的ID。',
                'type' => 'string',
                'example' => 'ri-m5egfc10sednwk2yt****',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'HcThreshold' => 
              array (
                'description' => '健康检查阈值。表示指定健康检查时发送探测报文的个数。单位：个。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8',
              ),
              'OppositeRouterType' => 
              array (
                'description' => '连接对端的路由器接口所属的路由器类型。取值：

- **VRouter**：VPC路由器
- **VBR**：边界路由器',
                'type' => 'string',
                'example' => 'VRouter',
              ),
              'GmtModified' => 
              array (
                'description' => '路由器接口修改的时间点。',
                'type' => 'string',
                'example' => '2022-04-28T10:02:12Z',
              ),
              'VpcInstanceId' => 
              array (
                'description' => '路由器接口所属的专有网络ID。',
                'type' => 'string',
                'example' => 'vpc-bp1b49rqrybk45nio****',
              ),
              'OppositeInterfaceOwnerId' => 
              array (
                'description' => '对端路由器接口的账号ID。',
                'type' => 'string',
                'example' => '1321932713****',
              ),
              'OppositeVpcInstanceId' => 
              array (
                'description' => '对端的VPC ID。',
                'type' => 'string',
                'example' => 'vpc-bp1b49rqrybk45nio****',
              ),
              'ReservationInternetChargeType' => 
              array (
                'description' => '续费付费类型。取值：**PayByBandwidth**，表示按使用带宽付费。',
                'type' => 'string',
                'example' => 'PayByBandwidth',
              ),
              'CrossBorder' => 
              array (
                'description' => '是否是跨境连接。取值：

- **false**：不是

- **true**：是',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '01818199-04F6-47F4-9ADF-7CC824CF57A4',
              ),
              'Bandwidth' => 
              array (
                'description' => '路由器接口带宽。单位：Mbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Description' => 
              array (
                'description' => '路由器接口描述。',
                'type' => 'string',
                'example' => '对端接口',
              ),
              'HcRate' => 
              array (
                'description' => '健康检查速率。单位：秒。表示指定健康检查时发送连续探测报文的时间间隔。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'ReservationBandwidth' => 
              array (
                'description' => '续费带宽。单位：Mbps。',
                'type' => 'string',
                'example' => '100',
              ),
              'Code' => 
              array (
                'description' => 'HTTP返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Name' => 
              array (
                'description' => '路由器接口名称。',
                'type' => 'string',
                'example' => '路由器接口1',
              ),
              'OppositeRouterId' => 
              array (
                'description' => '连接对端的路由器接口所属的路由器ID。',
                'type' => 'string',
                'example' => 'vrt-bp11xvy6lb9photuu****',
              ),
              'OppositeInterfaceSpec' => 
              array (
                'description' => '连接对端路由器接口的规格。取值：

- **Mini.2**：2 Mbps
- **Mini.5**：5 Mbps
- **Small.1**：10 Mbps
- **Small.2**：20 Mbps
- **Small.5**：50 Mbps
- **Middle.1**：100 Mbps
- **Middle.2**：200 Mbps
- **Middle.5**：500 Mbps
- **Large.1**：1000 Mbps
- **Large.2**：2000 Mbps
- **Large.5**：5000 Mbps
- **Xlarge.1**：10000 Mbps
- **Negative**：不涉及规格',
                'type' => 'string',
                'example' => 'Negative',
              ),
              'RouterId' => 
              array (
                'description' => '路由器接口所属的路由器ID。',
                'type' => 'string',
                'example' => 'vbr-m5ex0xf63xk8s5bob****',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OppositeInterfaceBusinessStatus' => 
              array (
                'description' => '连接对端的路由器接口的业务状态。取值：
- **Normal**：正常
- **FinancialLocked**：欠费锁定
- **SecurityLocked**：安全风控锁定',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'ConnectedTime' => 
              array (
                'description' => '连接建立的时间。',
                'type' => 'string',
                'example' => '2022-04-14T08:58:04Z',
              ),
              'HealthCheckSourceIp' => 
              array (
                'description' => '健康检查源IP。',
                'type' => 'string',
                'example' => '1.1.XX.XX',
              ),
              'OppositeInterfaceStatus' => 
              array (
                'description' => '连接对端的路由器接口的状态。取值：

- **Idle**：未连接
- **AcceptingConnecting**：接受连接中
- **Connecting**： 连接中
- **Activating**：激活中
- **Active**：已激活
- **Modifying**： 修改中
- **Deactivating**：冻结中
- **Inactive**：已冻结
- **Deleting**：删除中
- **Deleted**：已删除
',
                'type' => 'string',
                'example' => 'Active',
              ),
              'EndTime' => 
              array (
                'description' => '获取数据的结束时间点。',
                'type' => 'string',
                'example' => '2999-09-08T16:00:00Z',
              ),
              'OppositeRegionId' => 
              array (
                'description' => '连接对端路由器接口的地域ID。',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
              'OppositeAccessPointId' => 
              array (
                'description' => '对端接入点ID。',
                'type' => 'string',
                'example' => 'ap-cn-qingdao-ls-B',
              ),
              'BusinessStatus' => 
              array (
                'description' => '路由器接口状态。取值：

- **Normal**：正常

- **FinancialLocked**：欠费锁定

- **SecurityLocked**：安全风控锁定',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'HealthCheckStatus' => 
              array (
                'description' => '健康检查状态。取值：

- **Abnormal**：状态异常
- **Normal**：正常
- **NoRedundantRoute**：未配置冗余路由
- **NoHealthCheckConfig**：未配置健康检查',
                'type' => 'string',
                'example' => 'normal',
              ),
              'OppositeBandwidth' => 
              array (
                'description' => '对端带宽。单位：Mbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RouterType' => 
              array (
                'description' => '路由表所在路由器的类型。取值：

- **VRouter**：VPC路由器

- **VBR**：边界路由器',
                'type' => 'string',
                'example' => 'VRouter',
              ),
              'Role' => 
              array (
                'description' => '对等连接中的角色。',
                'type' => 'string',
                'example' => 'InitiatingSide',
              ),
              'HasReservationData' => 
              array (
                'description' => '是否有续费数据。取值：

- **false**：没有

- **true**：有',
                'type' => 'string',
                'example' => 'false',
              ),
              'AccessPointId' => 
              array (
                'description' => '接入点ID。',
                'type' => 'string',
                'example' => 'ap-cn-qingdao-ls-A',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。

关于资源组的更多信息，请参见[什么是资源组](~~94475~~)。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph6aiy****',
              ),
              'Tags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tags' => 
                  array (
                    'description' => '资源的标签。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '资源的标签键。至少输入1个标签键，最多支持输入20个标签键。一旦传入该值，则不允许为空字符串。

一个标签键最多支持64个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                          'type' => 'string',
                          'example' => 'FinanceDept',
                        ),
                        'Value' => 
                        array (
                          'description' => '资源的标签值。最多支持输入20个标签值。一旦传入该值，可以为空字符串。

最多支持128个字符，可包含数字、半角句号（.）、下划线（_）和短划线（-），不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                          'type' => 'string',
                          'example' => 'FinanceJoshua',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'FastLinkMode' => 
              array (
                'description' => '是否为使用快速连接模式创建的VBR上联路由器接口，快速连接模式可实现VBR和VPC两端路由器接口创建完毕后自动完成连接。取值：

- **true**：是。
- **false**（默认值）：否。


> -  该参数只在**RouterType**取值为**VBR**，**OppositeRouterType**参数取值为**VRouter**时生效。
- 当**FastLinkMode**参数取值为**true**时，**Role**参数必须取值为**InitiatingSide**，**AccessPointId**、**OppositeRouterType**、**OpppsiteRouterId**和**OppositeInterfaceOwnerId**参数为必选。
',
                'type' => 'string',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.NotNull',
            'errorMessage' => 'The parameter must not be null.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ReservationActiveTime\\": \\"2022-06-11T16:00:00Z\\",\\n  \\"HealthCheckTargetIp\\": \\"2.2.XX.XX\\",\\n  \\"Status\\": \\"Active\\",\\n  \\"CreationTime\\": \\"2022-04-14T08:57:24Z\\",\\n  \\"ReservationOrderType\\": \\"RENEW\\",\\n  \\"OppositeInterfaceId\\": \\"ri-bp1xkrzttximaoxbl****\\",\\n  \\"Spec\\": \\"Mini.2\\",\\n  \\"ChargeType\\": \\"AfterPay\\",\\n  \\"RouterInterfaceId\\": \\"ri-m5egfc10sednwk2yt****\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"HcThreshold\\": 8,\\n  \\"OppositeRouterType\\": \\"VRouter\\",\\n  \\"GmtModified\\": \\"2022-04-28T10:02:12Z\\",\\n  \\"VpcInstanceId\\": \\"vpc-bp1b49rqrybk45nio****\\",\\n  \\"OppositeInterfaceOwnerId\\": \\"1321932713****\\",\\n  \\"OppositeVpcInstanceId\\": \\"vpc-bp1b49rqrybk45nio****\\",\\n  \\"ReservationInternetChargeType\\": \\"PayByBandwidth\\",\\n  \\"CrossBorder\\": false,\\n  \\"RequestId\\": \\"01818199-04F6-47F4-9ADF-7CC824CF57A4\\",\\n  \\"Bandwidth\\": 2,\\n  \\"Description\\": \\"对端接口\\",\\n  \\"HcRate\\": 2,\\n  \\"ReservationBandwidth\\": \\"100\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Name\\": \\"路由器接口1\\",\\n  \\"OppositeRouterId\\": \\"vrt-bp11xvy6lb9photuu****\\",\\n  \\"OppositeInterfaceSpec\\": \\"Negative\\",\\n  \\"RouterId\\": \\"vbr-m5ex0xf63xk8s5bob****\\",\\n  \\"Success\\": true,\\n  \\"OppositeInterfaceBusinessStatus\\": \\"Normal\\",\\n  \\"ConnectedTime\\": \\"2022-04-14T08:58:04Z\\",\\n  \\"HealthCheckSourceIp\\": \\"1.1.XX.XX\\",\\n  \\"OppositeInterfaceStatus\\": \\"Active\\",\\n  \\"EndTime\\": \\"2999-09-08T16:00:00Z\\",\\n  \\"OppositeRegionId\\": \\"cn-hangzhou\\",\\n  \\"OppositeAccessPointId\\": \\"ap-cn-qingdao-ls-B\\",\\n  \\"BusinessStatus\\": \\"Normal\\",\\n  \\"HealthCheckStatus\\": \\"normal\\",\\n  \\"OppositeBandwidth\\": 0,\\n  \\"RouterType\\": \\"VRouter\\",\\n  \\"Role\\": \\"InitiatingSide\\",\\n  \\"HasReservationData\\": \\"false\\",\\n  \\"AccessPointId\\": \\"ap-cn-qingdao-ls-A\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph6aiy****\\",\\n  \\"Tags\\": {\\n    \\"Tags\\": [\\n      {\\n        \\"Key\\": \\"FinanceDept\\",\\n        \\"Value\\": \\"FinanceJoshua\\"\\n      }\\n    ]\\n  },\\n  \\"FastLinkMode\\": \\"false\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouterInterfaceAttributeResponse>\\n    <ReservationActiveTime>2022-06-11T16:00:00Z</ReservationActiveTime>\\n    <HealthCheckTargetIp>2.2.XX.XX</HealthCheckTargetIp>\\n    <Status>Active</Status>\\n    <CreationTime>2022-04-14T08:57:24Z</CreationTime>\\n    <ReservationOrderType>RENEW</ReservationOrderType>\\n    <OppositeInterfaceId>ri-bp1xkrzttximaoxbl****</OppositeInterfaceId>\\n    <Spec>Mini.2</Spec>\\n    <ChargeType>AfterPay</ChargeType>\\n    <RouterInterfaceId>ri-m5egfc10sednwk2yt****</RouterInterfaceId>\\n    <Message>successful</Message>\\n    <HcThreshold>8</HcThreshold>\\n    <OppositeRouterType>VRouter</OppositeRouterType>\\n    <GmtModified>2022-04-28T10:02:12Z</GmtModified>\\n    <VpcInstanceId>vpc-bp1b49rqrybk45nio****</VpcInstanceId>\\n    <OppositeInterfaceOwnerId>1321932713****</OppositeInterfaceOwnerId>\\n    <OppositeVpcInstanceId>vpc-bp1b49rqrybk45nio****</OppositeVpcInstanceId>\\n    <ReservationInternetChargeType>PayByBandwidth</ReservationInternetChargeType>\\n    <CrossBorder>false</CrossBorder>\\n    <RequestId>01818199-04F6-47F4-9ADF-7CC824CF57A4</RequestId>\\n    <Bandwidth>2</Bandwidth>\\n    <Description>对端接口</Description>\\n    <HcRate>2</HcRate>\\n    <ReservationBandwidth>100</ReservationBandwidth>\\n    <Code>200</Code>\\n    <Name>路由器接口1</Name>\\n    <OppositeRouterId>vrt-bp11xvy6lb9photuu****</OppositeRouterId>\\n    <OppositeInterfaceSpec>Negative</OppositeInterfaceSpec>\\n    <RouterId>vbr-m5ex0xf63xk8s5bob****</RouterId>\\n    <Success>true</Success>\\n    <OppositeInterfaceBusinessStatus>Normal</OppositeInterfaceBusinessStatus>\\n    <ConnectedTime>2022-04-14T08:58:04Z</ConnectedTime>\\n    <HealthCheckSourceIp>1.1.XX.XX</HealthCheckSourceIp>\\n    <OppositeInterfaceStatus>Active</OppositeInterfaceStatus>\\n    <EndTime>2999-09-08T16:00:00Z</EndTime>\\n    <OppositeRegionId>cn-hangzhou</OppositeRegionId>\\n    <OppositeAccessPointId>ap-cn-qingdao-ls-B</OppositeAccessPointId>\\n    <BusinessStatus>Normal</BusinessStatus>\\n    <HealthCheckStatus>normal</HealthCheckStatus>\\n    <OppositeBandwidth>0</OppositeBandwidth>\\n    <RouterType>VRouter</RouterType>\\n    <Role>InitiatingSide</Role>\\n    <HasReservationData>false</HasReservationData>\\n    <AccessPointId>ap-cn-qingdao-ls-A</AccessPointId>\\n    <ResourceGroupId>rg-acfmxazb4ph6aiy****</ResourceGroupId>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</DescribeRouterInterfaceAttributeResponse>","errorExample":""}]',
      'title' => '查看路由器接口配置',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeactivateRouterInterface' => 
    array (
      'summary' => '使用DeactivateRouterInterface冻结路由器接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ri-2zeo3xzyf38r4urz****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BE7EB53A-99AB-4DA8-AEDE-75FA90D046A6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectRIStatus',
            'errorMessage' => 'RouterInterface can be operated by this action only when it\'s status is Active.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'This RouterInterface is financiel locked because of bills outstanding.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbbiden.InvaildOwner',
            'errorMessage' => 'The RouterInterface owener error',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.OperationLocked',
            'errorMessage' => 'Operation failed because OperationLocked.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceId.NotFound',
            'errorMessage' => 'The specified RouterInterfaceId does not exist in our record.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BE7EB53A-99AB-4DA8-AEDE-75FA90D046A6\\"\\n}","errorExample":""},{"type":"xml","example":"<DeactivateRouterInterfaceResponse>\\n    <RequestId>BE7EB53A-99AB-4DA8-AEDE-75FA90D046A6</RequestId>\\n</DeactivateRouterInterfaceResponse>","errorExample":""}]',
      'title' => '冻结路由器接口',
    ),
    'GrantInstanceToVbr' => 
    array (
      'summary' => '调用GrantInstanceToVbr接口将跨账号创建VBR上连场景的VPC实例授权给VBR实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要授权的VPC实例所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrOwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接受授权的VBR实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1210123456123456',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceIds',
          'in' => 'query',
          'style' => 'simple',
          'schema' => 
          array (
            'description' => '接受授权的VBR实例的列表信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '接受授权的VBR实例。多个VBR实例间使用半角逗号（,）分隔。

- 当**GrantType**取值为**All**时，该参数可以为空，表示将VPC实例授权给指定地域和阿里云账号（主账号）下所有的VBR实例。
- 当**GrantType**取值为**Specify**时，该参数需要配置，表示将VPC实例授权给指定VBR实例。',
              'type' => 'string',
              'required' => false,
              'example' => 'vbr-m5ex0xf63xk8s5bob****,vbr-bp1h6efd7a5g66xxd****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要授权的VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp1lqhq93q8evjpky****',
          ),
        ),
        4 => 
        array (
          'name' => 'GrantType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接受授权的VBR实例的范围。取值：

- **All**：将VPC实例授权给指定地域和阿里云账号（主账号）下所有的VBR实例，此时**VbrInstanceIds**参数可以为空。
- **Specify**：将VPC实例授权给指定VBR实例，此时**VbrInstanceIds**参数需要配置。',
            'type' => 'string',
            'required' => true,
            'example' => 'All',
          ),
        ),
        5 => 
        array (
          'name' => 'VbrRegionNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接受授权的VBR实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '响应数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99F13AE-D733-5856-AB97-80CC88B1D5A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.NotNull',
            'errorMessage' => 'The parameter must not be null.',
          ),
          1 => 
          array (
            'errorCode' => 'Parameter.Illegal',
            'errorMessage' => 'The parameter is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'Instance.StatusError',
            'errorMessage' => 'The status of instance error.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99F13AE-D733-5856-AB97-80CC88B1D5A8\\"\\n}","errorExample":""},{"type":"xml","example":"<GrantInstanceToVbrResponse>\\n    <RequestId>F99F13AE-D733-5856-AB97-80CC88B1D5A8</RequestId>\\n</GrantInstanceToVbrResponse>","errorExample":""}]',
      'title' => '将跨账号创建VBR上连场景的VPC实例授权给VBR实例',
      'description' => '创建跨账号VBR上连时，您需要将VPC实例授权给VBR实例。',
    ),
    'ActivateRouterInterface' => 
    array (
      'summary' => '调用ActivateRouterInterface接口激活处于Inactive状态的路由器接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ri-2zeo3xzyf38r4urz****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '079874CD-AEC1-43E6-AC03-ADD96B6E4907',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectRIStatus',
            'errorMessage' => 'RouterInterface can be operated by this action only when it\'s status is Inactive.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'This RouterInterface is financiel locked because of bills outstanding.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.PconnTrafficNotEnable',
            'errorMessage' => 'The operation is failed because of PconnTrafficNotEnable.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'The router does not belong to your account.',
          ),
          4 => 
          array (
            'errorCode' => 'NotSupportLinkrole',
            'errorMessage' => 'This RouterInterface is not a vlan interface for connection.',
          ),
          5 => 
          array (
            'errorCode' => 'OppositeRouterInterfaceIsDeleted',
            'errorMessage' => 'The opposite router interface is already deleted.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceId.NotFound',
            'errorMessage' => 'The specified RouterInterfaceId does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"079874CD-AEC1-43E6-AC03-ADD96B6E4907\\"\\n}","errorExample":""},{"type":"xml","example":"<ActivateRouterInterfaceResponse>\\n    <RequestId>079874CD-AEC1-43E6-AC03-ADD96B6E4907</RequestId>\\n</ActivateRouterInterfaceResponse>","errorExample":""}]',
      'title' => '激活路由器接口',
      'description' => '调用ActivateRouterInterface接口后，路由器接口进入**Activating**状态，激活成功后进入**Active**状态。 

> 无法激活处于欠费状态的路由器接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeInstanceFromVbr' => 
    array (
      'summary' => '调用RevokeInstanceFromVbr接口取消跨账号创建VBR上连场景下VPC实例对VBR实例的授权。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要取消授权的VPC实例所在地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrOwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消接受授权的VBR实例所属阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => true,
            'example' => '1210123456123456',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceIds',
          'in' => 'query',
          'style' => 'simple',
          'schema' => 
          array (
            'description' => '取消接受VPC实例授权的VBR实例ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '取消接受VPC实例授权的VBR实例ID。多个VBR实例间使用半角逗号（,）隔开。

- 当**GrantType**取值为**ALL**时，该参数可以为空，表示取消指定地域内的所有VBR实例的VPC实例授权关系。

- 当**GrantType**取值为**Specify**时，该参数需要配置，表示取消指定VBR实例的VPC实例授权关系。',
              'type' => 'string',
              'required' => false,
              'example' => 'vbr-m5ex0xf63xk8s5bob****,vbr-bp1h6efd7a5g66xxd****',
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要取消授权的VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp1brjuegjc88v3u9****',
          ),
        ),
        4 => 
        array (
          'name' => 'GrantType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消接受VPC实例授权的VBR实例范围。取值：

- **ALL**：表示取消指定地域内的所有VBR实例的VPC实例授权关系，此时**VbrInstanceIds**参数可以为空。

- **Specify**：表示取消指定VBR实例的VPC实例授权关系，此时**VbrInstanceIds**参数需要配置。',
            'type' => 'string',
            'required' => true,
            'example' => 'ALL',
          ),
        ),
        5 => 
        array (
          'name' => 'VbrRegionNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要取消接受VPC实例授权的VBR实例所在地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '响应数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '45B7AA4A-4658-5FFC-90DD-9B8729F301BB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.StatusError',
            'errorMessage' => 'The status of instance error.	',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParam.NotNull',
            'errorMessage' => 'The parameter must not be null.',
          ),
          2 => 
          array (
            'errorCode' => 'Parameter.Illegal',
            'errorMessage' => 'The parameter is illegal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'EcGrantRelation.NotExist',
            'errorMessage' => 'The ec grant relation not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"45B7AA4A-4658-5FFC-90DD-9B8729F301BB\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeInstanceFromVbrResponse>\\n    <RequestId>45B7AA4A-4658-5FFC-90DD-9B8729F301BB</RequestId>\\n</RevokeInstanceFromVbrResponse>","errorExample":""}]',
      'title' => '取消跨账号创建VBR上连场景下VPC实例对VBR实例的授权',
    ),
    'ConnectRouterInterface' => 
    array (
      'summary' => '调用ConnectRouterInterface接口由发起端路由器接口向接收端发起连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由器接口所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'RouterInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 发起端路由器接口的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ri-2zeo3xzyf38r4urzd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectRole.NotInitiatingSide',
            'errorMessage' => 'The specified RouterInterface is not InitiatingSide.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectRIStatus',
            'errorMessage' => 'RouterInterface can be operated by this action only when it\'s status is Idle.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectOppositeInterfaceInfo.NotSet',
            'errorMessage' => 'OppositeInterfaceId/OppositeRouterId/OppositeRouterType/OppositeInterfaceOwnerId must be all set.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectOppositeInterfaceInfo',
            'errorMessage' => 'Cannot connect on the same router',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.OnlyOneConnection',
            'errorMessage' => 'The Specified routers have a connection already',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.BillsOutstanding',
            'errorMessage' => 'You cannot use this action because you have bills outstanding.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidAccount.NotFound',
            'errorMessage' => 'The specified account is not exists.',
          ),
          7 => 
          array (
            'errorCode' => 'ErrCode.Invalid',
            'errorMessage' => 'got error',
          ),
          8 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideRole',
            'errorMessage' => '%s',
          ),
          9 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideInstanceId',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideRegionNo',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideRouterId',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideRouterType',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideAliUid',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideOppositeInterfaceOwnerId',
            'errorMessage' => '%s',
          ),
          15 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideOppositeRegionNo',
            'errorMessage' => '%s',
          ),
          16 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideOppositeInterfaceId',
            'errorMessage' => '%s',
          ),
          17 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideOppositeRouterId',
            'errorMessage' => '%s',
          ),
          18 => 
          array (
            'errorCode' => 'AttrMismatching.AcceptingSideOppositeRouterType',
            'errorMessage' => '%s',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.InstanceOwner',
            'errorMessage' => 'The router instance owener error.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The RegionId provided does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouterInterfaceId.NotFound',
            'errorMessage' => 'The specified RouterInterfaceId does not exist in our record.',
          ),
          2 => 
          array (
            'errorCode' => 'CROSS_BID.FORBIDDEN',
            'errorMessage' => 'Connect RouterInterface across bid is illegal',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6\\"\\n}","errorExample":""},{"type":"xml","example":"<ConnectRouterInterfaceResponse>\\n    <RequestId>DE77A7F3-3B74-41C0-A5BC-CAFD188C28B6</RequestId>\\n</ConnectRouterInterfaceResponse>","errorExample":""}]',
      'title' => '由发起端路由器接口向接收端发起连接',
      'description' => '调用本接口后路由器接口进入**Connecting**状态，连接完成后进入**Active**状态。

调用该接口创建VPC时，请注意： 
- 只能由状态为**Idle**的发起端路由器接口向接收端发起连接。 
- 任意两个路由器之间，最多只能存在一对相互连接的路由器接口。 
- 如果账号下存在处于欠费状态的路由器接口，无法进行发起连接。',
    ),
    'CreateExpressCloudConnection' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务的实例名称。

长度为 2-128个字符，必须以字母或中文开头，可包含数字，点号（.），下划线（_）和短横线（-），但不能以`http:// `或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务的描述信息。

长度为 2-256个字符，必须以字母或中文开头，但不能以`http://` 或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '高速上云服务',
          ),
        ),
        3 => 
        array (
          'name' => 'PeerCity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线下IDC机房所在的城市。',
            'type' => 'string',
            'required' => false,
            'example' => '杭州',
            'default' => 'blank',
          ),
        ),
        4 => 
        array (
          'name' => 'PeerLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本地数据中心的地理位置。

>需要精确到门牌号码-楼层-房间号-机柜号',
            'type' => 'string',
            'required' => true,
            'example' => '**市**区/县**路**号**物业或楼宇名称**座**楼层**房间号**机柜号**机柜名称**设备**端口',
          ),
        ),
        5 => 
        array (
          'name' => 'IdcSP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDC的网络服务商。',
            'type' => 'string',
            'required' => true,
            'example' => 'CU',
          ),
        ),
        6 => 
        array (
          'name' => 'PortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理专线接入端口类型，取值：

* 100Base-T：百兆电口

* 1000Base-T（默认值）：千兆电口

* 1000Base-LX：千兆单模光口（10千米）

* 10GBase-T：万兆电口

* 10GBase-LR：万兆单模光口（10千米）',
            'type' => 'string',
            'required' => false,
            'example' => '100Base-T',
          ),
        ),
        7 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '申请高速上云服务的带宽，对应底层物理线路的带宽。

单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        8 => 
        array (
          'name' => 'ContactTel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '申请高速上云服务的联系人电话。',
            'type' => 'string',
            'required' => false,
            'example' => '132*********',
          ),
        ),
        9 => 
        array (
          'name' => 'ContactMail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '申请高速上云连接的联系人邮件。',
            'type' => 'string',
            'required' => false,
            'example' => 'XX@example.com',
          ),
        ),
        10 => 
        array (
          'name' => 'IDCardNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '申请高速上云服务的联系人证件证号。',
            'type' => 'string',
            'required' => false,
            'example' => '32*****************',
            'default' => 'blank',
          ),
        ),
        11 => 
        array (
          'name' => 'RedundantEccId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '冗余高速上云服务专线实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecc-d****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'EccId' => 
              array (
                'description' => '高速上云服务实例ID。',
                'type' => 'string',
                'example' => 'ecc-jg************',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C004F022-1CC2-4958-9937-675513A2CD7E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.AliUid',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.Bid',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.RegionNo',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.Bandwith',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.ContactTel',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.ContactMail',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.IDCardNo',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.PortType',
            'errorMessage' => '%s',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.PeerCity',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.PeerLocation',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.ServiceProvider',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.RedundantEccId',
            'errorMessage' => '%s',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.IdcSP',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"EccId\\": \\"ecc-jg************\\",\\n  \\"RequestId\\": \\"C004F022-1CC2-4958-9937-675513A2CD7E\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateExpressCloudConnectionResponse>\\n  <EccId>ecc-bp1t9osmuln1*******</EccId>\\n  <RequestId>C004F022-1CC2-4958-9937-675513A2CD7E</RequestId>\\n</CreateExpressCloudConnectionResponse>","errorExample":""}]',
      'title' => '创建高速上云服务实例',
      'summary' => '调用CreateExpressCloudConnection创建高速上云服务实例。',
    ),
    'ModifyExpressCloudConnectionAttribute' => 
    array (
      'summary' => '调用ModifyExpressCloudConnectionAttribute修改高速上云服务连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务说明。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECC',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        3 => 
        array (
          'name' => 'EccId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云连接实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecc-bp1t9osmuln*******',
          ),
        ),
        4 => 
        array (
          'name' => 'BgpAs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指智能接入网关设备上需要配置的本地BGP的AS号。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-ejfge***',
          ),
        ),
        5 => 
        array (
          'name' => 'PeIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指智能接入网关设备和云上对接时的本地IP。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.**.**',
          ),
        ),
        6 => 
        array (
          'name' => 'CeIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指智能接入网关设备和云上对接时的云端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.**.**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E6385514-B0CC-48E3-B9F9-F7BFF64460A2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidEccId.NotFound',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.AliUid',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.RegionNo',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.EccId',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidEccApplication.NotFound',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.Description',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.Name',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidServiceProvider.Malformed',
            'errorMessage' => '%s',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.PortType',
            'errorMessage' => '%s',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.Distance',
            'errorMessage' => '%s',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.CircuitCode',
            'errorMessage' => '%s',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.Type',
            'errorMessage' => '%s',
          ),
          12 => 
          array (
            'errorCode' => 'OperationUnsupported.Type',
            'errorMessage' => '%s',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidAccessPoint.NotFound',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E6385514-B0CC-48E3-B9F9-F7BFF64460A2\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<ModifyExpressCloudConnectionAttributeResponse>\\r\\n   <RequestId>E6385514-B0CC-48E3-B9F9-F7BFF64460A2</RequestId>\\r\\n</ModifyExpressCloudConnectionAttributeResponse>","errorExample":""}]',
      'title' => '修改高速上云服务连接',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyExpressCloudConnectionBandwidth' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务带宽。',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'EccId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高速上云服务实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecc-xxxxxxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E6385514-B0CC-48E3-B9F9-F7BFF64460A2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.EccId',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.AliUid',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.RegionNo',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.Bandwidth',
            'errorMessage' => '%s',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidEccApplication.NotFound',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidEccId.NotFound',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.EccApplication',
            'errorMessage' => '%s',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.type',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E6385514-B0CC-48E3-B9F9-F7BFF64460A2\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <ModifyExpressCloudConnectionBandwidthResponse>\\r\\n\\t<RequestId>E6385514-B0CC-48E3-B9F9-F7BFF64460A2</RequestId>\\r\\n    </ModifyExpressCloudConnectionBandwidthResponse>","errorExample":""}]',
      'title' => '修改高速上云服务带宽',
      'summary' => '调用ModifyExpressCloudConnectionBandwidth修改高速上云服务带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateGlobalAccelerationInstance' => 
    array (
      'summary' => '创建全球加速实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被加速的服务的所属区域，取值：

- **china-mainland**：中国内地。

- **north-america**：北美。
   
- **asia-pacific**：亚太。
   
- **europe**：欧洲  。',
            'type' => 'string',
            'required' => true,
            'example' => 'china-mainland',
            'docRequired' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的带宽峰值，单位为Mbps，取值：**10**。',
            'type' => 'string',
            'required' => true,
            'example' => '10',
            'docRequired' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'BandwidthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例带宽类型，取值：

- **Sharing**：带宽共享型。

- **Exclusive**：带宽独享型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Exclusive',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的名称。  

长度为2~128个字符，必须以字母或中文开头，可包含数字、点号（.）、下划线（_）和短横线（-），但不能以`http://`或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'GA-1',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的描述信息。 

长度为2~256个字符，必须以字母或中文开头，但不能以`http://`或`https://`开头。  
',
            'type' => 'string',
            'required' => false,
            'example' => 'My GA',
          ),
        ),
        6 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端token，用于保证请求的幂等性。 

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。 ',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-0016e04115b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'GlobalAccelerationInstanceId' => 
              array (
                'description' => '全球加速实例的ID。',
                'type' => 'string',
                'example' => 'ga-bp1fi6sq7npnicmjj****',
              ),
              'IpAddress' => 
              array (
                'description' => '全球加速实例的公网IP地址。

如果**BandwidthType**取值为**Sharing**，则不返回该参数。',
                'type' => 'string',
                'example' => '12.xx.xx.78',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBandwidth.ValueNotSupported',
            'errorMessage' => 'The specified Bandwidth is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidServiceLocation.ValueNotSupported',
            'errorMessage' => 'The specified ServiceLocation is not supported.',
          ),
          2 => 
          array (
            'errorCode' => 'QuotaExceeded.GlobalAccelerationInstance',
            'errorMessage' => 'GlobalAccelerationInstance quota exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceDescription.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.UnpaidBillsExist',
            'errorMessage' => 'The account has unpaid bills. Please pay your overdue bill first.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'noSubstitutionReason' => '无替代API，历史原因导致该API被标记为弃用。',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"GlobalAccelerationInstanceId\\": \\"ga-bp1fi6sq7npnicmjj****\\",\\n  \\"IpAddress\\": \\"12.xx.xx.78\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<CreateGlobalAccelerationInstanceResponse>\\n\\t<GlobalAccelerationInstanceId>ga-t4nluhu6</GlobalAccelerationInstanceId>\\n\\t<IpAddress>12.34.56.78</IpAddress>\\n\\t<RequestId>21AAFD16-F784-4BFB-XXXX-XXXXXXXX</RequestId>\\n</CreateGlobalAccelerationInstanceResponse>"},{"type":"xml","example":"<CreateGlobalAccelerationInstanceResponse>\\n\\t<GlobalAccelerationInstanceId>ga-t4nluhu****</GlobalAccelerationInstanceId>\\n\\t<IpAddress>12.34.56.78</IpAddress>\\n\\t<RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</CreateGlobalAccelerationInstanceResponse>","errorExample":"{\\n    \\"GlobalAccelerationInstanceId\\": \\"ga-t4nluhu6\\",\\n    \\"IpAddress\\": \\"12.34.56.78\\",\\n    \\"RequestId\\": \\"21AAFD16-F784-4BFB-XXXX-XXXXXXXX\\"\\n }"}]',
      'title' => '创建全球加速实例',
      'description' => '## API描述

本接口只支持创建后付费的全球加速实例。
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddGlobalAccelerationInstanceIp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享带宽型实例所在的地域。 

您可以通过调用**DescribeRegions**接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 共享型实例ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ga-Ldefrgbttnyyf****',
          ),
        ),
        2 => 
        array (
          'name' => 'IpInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的ID。 您可以通过调用[DescribeEipAddresses](~~36018~~)接口查询EIP实例的ID。 

> 确保EIP的计费类型为后付费，且EIP的地域和共享型实例相同。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-rw434rwfdeaf****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '01FDDD49-C4B7-4D2A-A8E5-A93915C450A6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IpInstanceId.AlreadyInBandwidthPackage',
            'errorMessage' => 'The specified Eip InstanceId already in bandwidthPackage.',
          ),
          1 => 
          array (
            'errorCode' => 'IpInstanceId.BizStatusInvalid',
            'errorMessage' => 'The specified Eip BizStatus is Disable, Cannot add to bandwidthPackage.',
          ),
          2 => 
          array (
            'errorCode' => 'IpInstanceId.ChargeType.NotSupport',
            'errorMessage' => 'The specified Eip instance is PrePaid type, Cannot add to BandwidthPackage.',
          ),
          3 => 
          array (
            'errorCode' => 'BandwidthPackageId.InvalidBizStatus',
            'errorMessage' => 'The specified BandwidthPackageId has been FinancialLocked, Cannot add Ip.',
          ),
          4 => 
          array (
            'errorCode' => 'IpInstanceId.QuotaExceeded',
            'errorMessage' => 'The specified BandwidthPackageId has too many ip in it. exceed the quota , Cannot add more.',
          ),
          5 => 
          array (
            'errorCode' => 'EipOperation.TooFrequently',
            'errorMessage' => 'The specified Eip add into bandwidthPackage too frequently. please add later.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidIpInstanceId.NotFound',
            'errorMessage' => 'The specified Eip InstanceId does not exist in our records.',
          ),
          3 => 
          array (
            'errorCode' => 'IpInstanceId.InvalidIpInternetChargeType',
            'errorMessage' => 'The hybrid type eip not support add into bandwidthPackage of PayBytraffic type.',
          ),
          4 => 
          array (
            'errorCode' => 'IpInstanceId.StatusNotAvailable',
            'errorMessage' => 'The specified Eip Status is not Available, Cannot add to GlobalAcceleration.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"01FDDD49-C4B7-4D2A-A8E5-A93915C450A6\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<AddGlobalAccelerationInstanceIpResponse>\\n    <RequestId>01FDDD49-C4B7-4D2A-A8E5-A93915C450A6</RequestId>\\n</AddGlobalAccelerationInstanceIpResponse>"},{"type":"xml","example":"<AddGlobalAccelerationInstanceIpResponse>\\n    <RequestId>01FDDD49-C4B7-4D2A-A8E5-A93915C450A6</RequestId>\\n</AddGlobalAccelerationInstanceIpResponse>","errorExample":"{\\n    \\"RequestId\\": \\"01FDDD49-C4B7-4D2A-A8E5-A93915C450A6\\"\\n}"}]',
      'title' => '添加EIP到指定的带宽共享实例中',
      'summary' => '调用AddGlobalAccelerationInstanceIp接口添加EIP到指定的带宽共享实例中。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteGlobalAccelerationInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ga-asdfsl22s****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E6E63B2A-9820-44A8-A359-9BB2DAEE6424',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectGlobalAccelerationInstanceIdStatus',
            'errorMessage' => 'Current GlobalAccelerationInstance status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceId.NotFound',
            'errorMessage' => 'The specified GlobalAccelerationInstanceId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.GlobalAccelerationInstanceChargeTypeIsPrepaid',
            'errorMessage' => 'It\'s forbidden to release a prepaid GlobalAccelerationInstance',
          ),
          3 => 
          array (
            'errorCode' => 'DependencyViolation.Ips',
            'errorMessage' => 'The specified BandwidthPackageId has dependent resource ips.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'This openeration would be allowed only when status of this RouterInterface is Idle/Inactive.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E6E63B2A-9820-44A8-A359-9BB2DAEE6424\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<DeleteGlobalAccelerationInstanceResponse>\\n    <RequestId>BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX</RequestId>\\n</DeleteGlobalAccelerationInstanceResponse>"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<DeleteGlobalAccelerationInstanceResponse>\\n    <RequestId>E6E63B2A-9820-44A8-A359-9BB2DAEE6424</RequestId>\\n</DeleteGlobalAccelerationInstanceResponse>","errorExample":"{\\n    \\"RequestId\\": \\"E6E63B2A-9820-44A8-A359-9BB2DAEE6424\\"\\n}"}]',
      'title' => '删除全球加速实例',
      'summary' => '删除全球加速实例。',
      'description' => '在调用该接口前，请注意： 

- 仅支持删除后付费实例。

- 如果要删除独享型实例，在删除实例前，请先将实例中的后端服务器解绑。

- 如果要删除共享型实例，在删除实例前，请先将实例中的EIP移除。 
      
     
   ',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociateGlobalAccelerationInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ga-1sxeedefrr33****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的实例类型，取值：

- **RemoteEcsInstance**：ECS实例。

- **RemoteSlbInstance**：负载均衡实例。

- **RemoteEniInstance**：弹性网卡实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'RemoteEcsInstance',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectGlobalAccelerationInstanceIdStatus',
            'errorMessage' => 'Current GlobalAccelerationInstance status does not support this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.FinancialLocked',
            'errorMessage' => 'The ip business status is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbbiden.InvaildOwner',
            'errorMessage' => 'The GlobalAccelerationInstance owener error',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceId.NotFound',
            'errorMessage' => 'The specified GlobalAccelerationInstanceId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<UnassociateGlobalAccelerationInstanceResponse>\\n    <RequestId>BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX</RequestId>\\n</UnassociateGlobalAccelerationInstanceResponse>"},{"type":"xml","example":"<UnassociateGlobalAccelerationInstanceResponse>\\n    <RequestId>BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX</RequestId>\\n</UnassociateGlobalAccelerationInstanceResponse>","errorExample":"{\\n    \\"RequestId\\": \\"BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX\\"\\n}"}]',
      'title' => '解绑与全球加速实例关联的后端服务实例',
      'summary' => '调用UnassociateGlobalAccelerationInstance接口解绑与全球加速实例关联的后端服务实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyGlobalAccelerationInstanceAttributes' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ga-14fdsf3****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的名称。  

长度为 2-128个字符，必须以字母或中文开头，可包含数字，点号（.），下划线（_）和短横线（-）。但不能以`http://` 或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'GA-1',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的描述信息。  

长度为 2-256个字符，必须以字母或中文开头，但不能以`http://` 或`https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'My GA',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBandwidth.ValueNotSupported',
            'errorMessage' => 'The specified Bandwidth is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceId.NotFound',
            'errorMessage' => 'The specified GlobalAccelerationInstanceId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.ChargeTypeIsPrepaid',
            'errorMessage' => 'It?s forbidden to change prepaid EIP?s bandwidth by API.  It can be changed on Aliyun web console.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceDescription.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The parameter is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstance.NotFound',
            'errorMessage' => 'The specified global acceleration instance is not found.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifyGlobalAccelerationInstanceAttributesResponse>\\n    <RequestId>185E81B1-3916-4667-B48F-C52409B33F2B</RequestId>\\n</ModifyGlobalAccelerationInstanceAttributesResponse>"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifyGlobalAccelerationInstanceAttributesResponse>\\n    <RequestId>BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX</RequestId>\\n</ModifyGlobalAccelerationInstanceAttributesResponse>","errorExample":"{\\n    \\"RequestId\\": \\"BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX\\"\\n}"}]',
      'title' => '修改全球加速实例属性',
      'summary' => '修改全球加速实例的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyGlobalAccelerationInstanceSpec' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ga-32s33s****',
          ),
        ),
        2 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的带宽峰值，单位为Mbps，取值：**10**。',
            'type' => 'string',
            'required' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBandwidth.ValueNotSupported',
            'errorMessage' => 'The specified Bandwidth is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceId.NotFound',
            'errorMessage' => 'The specified GlobalAccelerationInstanceId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.ChargeTypeIsPrepaid',
            'errorMessage' => 'It?s forbidden to change prepaid GlobalAcceleration?s bandwidth by API.  It can be changed on Aliyun web console.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceName.Malformed',
            'errorMessage' => 'The specified Name is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidGlobalAccelerationInstanceDescription.Malformed',
            'errorMessage' => 'The specified Description is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The parameter is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'Specified GA allocation ID is not found.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifyGlobalAccelerationInstanceSpecResponse>\\n    <RequestId>BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX</RequestId>\\n</ModifyGlobalAccelerationInstanceSpecResponse>"},{"type":"xml","example":"<ModifyGlobalAccelerationInstanceSpecResponse>\\n    <RequestId>BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX</RequestId>\\n</ModifyGlobalAccelerationInstanceSpecResponse>","errorExample":"{\\n    \\"RequestId\\": \\"BD5BCEE8-F62C-40C2-9AC3-89XXXXXXXXX\\"\\n}"}]',
      'title' => '修改全球加速实例的带宽',
      'summary' => '调用ModifyGlobalAccelerationInstanceSpec接口修改全球加速实例的带宽。',
      'description' => '## API描述

该接口不支持修改预付费全球加速实例的带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGlobalAccelerationInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含未生效的订购数据，取值：

- **false**（默认）：不包含未生效的订购数据。

- **true**：包含未生效的订购数据。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'ga-234sljmxaz****',
          ),
        ),
        3 => 
        array (
          'name' => 'IpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的公网IP。',
            'type' => 'string',
            'required' => false,
            'example' => '12.xx.xx.78',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 全球加速实例的名称。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'GA-1',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例状态，取值： 

- **Available**：可用。

- **Inuse**：已分配。
   
- **Associating**：绑定中。
   
- **Unassociating**：解绑中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        6 => 
        array (
          'name' => 'BandwidthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例的带宽类型，取值： 
           
- **Sharing**：查询带宽共享型实例。
  
- **Exclusive**（默认值）：查询带宽独享型实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'Exclusive',
          ),
        ),
        7 => 
        array (
          'name' => 'ServiceLocation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务区域，取值： 

- **china-mainland**：中国内地。

- **north-america**：北美。
   
- **asia-pacific**：亚太。
   
- **europe**：欧洲。   ',
            'type' => 'string',
            'required' => false,
            'example' => 'china-mainland',
          ),
        ),
        8 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-sxjblddejj9x****',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
            'default' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**100**，默认值为**10**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6B4EE38D-C75B-4E1F-844E-863A94430676',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GlobalAccelerationInstances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GlobalAccelerationInstance' => 
                  array (
                    'description' => '全球加速实例列表的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '全球加速实例的创建时间，UTC时间。',
                          'type' => 'string',
                          'example' => '2018-07-05T03:39:31Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '全球加速实例的状态。

- **Available**：可用。

- **Inuse**：已分配。
   
- **Associating**：绑定中。
   
- **Unassociating**：解绑中。',
                          'type' => 'string',
                          'example' => 'InUse',
                        ),
                        'BandwidthType' => 
                        array (
                          'description' => '全球加速实例的带宽类型。

- **Sharing**：带宽共享型实例。
  
- **Exclusive**（默认值）：带宽独享型实例。',
                          'type' => 'string',
                          'example' => 'Exclusive',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '全球加速实例的付费类型。

',
                          'type' => 'string',
                          'example' => 'PrePaid',
                        ),
                        'GlobalAccelerationInstanceId' => 
                        array (
                          'description' => '全球加速实例的ID。',
                          'type' => 'string',
                          'example' => 'ga-bp1x99kj7kl1ziw5x****',
                        ),
                        'ServiceLocation' => 
                        array (
                          'description' => '全球加速实例的服务区域。',
                          'type' => 'string',
                          'example' => 'china-mainland',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '全球加速实例所在的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'AccelerationLocation' => 
                        array (
                          'description' => '全球加速实例的加速区域。',
                          'type' => 'string',
                          'example' => 'china-mainland',
                        ),
                        'IpAddress' => 
                        array (
                          'description' => '独享型全球加速实例的公网IP。',
                          'type' => 'string',
                          'example' => '47.xx.xx.99',
                        ),
                        'Description' => 
                        array (
                          'description' => '全球加速实例的描述。',
                          'type' => 'string',
                          'example' => 'apiDescription',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => '全球加速实例的带宽峰值。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => '实例过期时间。',
                          'type' => 'string',
                          'example' => '2018-08-05T16:00Z',
                        ),
                        'InternetChargeType' => 
                        array (
                          'description' => '全球加速实例的计费方式。',
                          'type' => 'string',
                          'example' => 'PayByBandwidth',
                        ),
                        'Name' => 
                        array (
                          'description' => '全球加速实例的名称。',
                          'type' => 'string',
                          'example' => 'instanceName',
                        ),
                        'OperationLocks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                          ),
                        ),
                        'BackendServers' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BackendServer' => 
                            array (
                              'description' => '全球加速实例的后端服务器的详细信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'ServerIpAddress' => 
                                  array (
                                    'description' => '后端服务器IP地址。',
                                    'type' => 'string',
                                    'example' => '172.xx.xx.109',
                                  ),
                                  'ServerId' => 
                                  array (
                                    'description' => '后端服务器ID。',
                                    'type' => 'string',
                                    'example' => 'i-2zeg83zvn5d4ed4y****',
                                  ),
                                  'ServerType' => 
                                  array (
                                    'description' => '后端服务器类型。

- **EcsInstance**：ECS实例。

- **SlbInstance**：SLB实例。',
                                    'type' => 'string',
                                    'example' => 'EcsInstance',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '后端服务器所在的地域。',
                                    'type' => 'string',
                                    'example' => 'cn-beijing',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'PublicIpAddresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PublicIpAddress' => 
                            array (
                              'description' => '公网IP。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'IpAddress' => 
                                  array (
                                    'description' => '全球加速实例的公网IP。',
                                    'type' => 'string',
                                    'example' => '12.xx.xx.78',
                                  ),
                                  'AllocationId' => 
                                  array (
                                    'description' => '全球加速实例的公网IP的ID。',
                                    'type' => 'string',
                                    'example' => 'eip-bp19yqraac4w3y0jd****',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"6B4EE38D-C75B-4E1F-844E-863A94430676\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"GlobalAccelerationInstances\\": {\\n    \\"GlobalAccelerationInstance\\": [\\n      {\\n        \\"CreationTime\\": \\"2018-07-05T03:39:31Z\\",\\n        \\"Status\\": \\"InUse\\",\\n        \\"BandwidthType\\": \\"Exclusive\\",\\n        \\"ChargeType\\": \\"PrePaid\\",\\n        \\"GlobalAccelerationInstanceId\\": \\"ga-bp1x99kj7kl1ziw5x****\\",\\n        \\"ServiceLocation\\": \\"china-mainland\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"AccelerationLocation\\": \\"china-mainland\\",\\n        \\"IpAddress\\": \\"47.xx.xx.99\\",\\n        \\"Bandwidth\\": \\"10\\",\\n        \\"Description\\": \\"apiDescription\\",\\n        \\"ExpiredTime\\": \\"2018-08-05T16:00Z\\",\\n        \\"InternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"Name\\": \\"instanceName\\",\\n        \\"BackendServers\\": {\\n          \\"BackendServer\\": [\\n            {\\n              \\"ServerIpAddress\\": \\"172.xx.xx.109\\",\\n              \\"ServerId\\": \\"i-2zeg83zvn5d4ed4y****\\",\\n              \\"ServerType\\": \\"EcsInstance\\",\\n              \\"RegionId\\": \\"cn-beijing\\"\\n            }\\n          ]\\n        },\\n        \\"PublicIpAddresses\\": {\\n          \\"PublicIpAddress\\": [\\n            {\\n              \\"IpAddress\\": \\"12.xx.xx.78\\",\\n              \\"AllocationId\\": \\"eip-bp19yqraac4w3y0jd****\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<DescribeGlobalAccelerationInstancesResponse>\\n\\t<GlobalAccelerationInstances>\\n\\t\\t<GlobalAccelerationInstance>\\n\\t\\t\\t<AccelerationLocation>china-mainland</AccelerationLocation>\\n\\t\\t\\t<BackendServers>\\n\\t\\t\\t\\t<BackendServer>\\n\\t\\t\\t\\t\\t<RegionId>cn-beijing</RegionId>\\n\\t\\t\\t\\t\\t<ServerId>lb-2222222333333333</ServerId>\\n\\t\\t\\t\\t\\t<ServerIpAddress>192.168.0.180</ServerIpAddress>\\n\\t\\t\\t\\t\\t<ServerType>SlbInstance</ServerType>\\n\\t\\t\\t\\t</BackendServer>\\n\\t\\t\\t</BackendServers>\\n\\t\\t\\t<Bandwidth>10</Bandwidth>\\n\\t\\t\\t<ChargeType>PrePaid</ChargeType>\\n\\t\\t\\t<CreationTime>2017-07-26T03:34:30Z</CreationTime>\\n\\t\\t\\t<Description></Description>\\n\\t\\t\\t<ExpiredTime>2017-08-26T16:00Z</ExpiredTime>\\n\\t\\t\\t<GlobalAccelerationInstanceId>ga-aabbccddaabb</GlobalAccelerationInstanceId>\\n\\t\\t\\t<InternetChargeType>PayByBandwidth</InternetChargeType>\\n\\t\\t\\t<IpAddress>12.34.56.78</IpAddress>\\n\\t\\t\\t<Name></Name>\\n\\t\\t\\t<OperationLocks></OperationLocks>\\n\\t\\t\\t<RegionId>cn-shanghai</RegionId>\\n\\t\\t\\t<ServiceLocation>asia-pacific</ServiceLocation>\\n\\t\\t\\t<Status>InUse</Status>\\n\\t\\t</GlobalAccelerationInstance>\\n\\t</GlobalAccelerationInstances>\\n\\t<PageNumber>1</PageNumber>\\n\\t<PageSize>10</PageSize>\\n\\t<RequestId>0487FCA3-E152-4726-8A17-25F69E03ADB0</RequestId>\\n\\t<TotalCount>1</TotalCount>\\n</DescribeGlobalAccelerationInstancesResponse>"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DescribeGlobalAccelerationInstancesResponse>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <TotalCount>1</TotalCount>\\r\\n    <PageSize>10</PageSize>\\r\\n    <RequestId>6B4EE38D-C75B-4E1F-844E-863A94430676</RequestId>\\r\\n    <GlobalAccelerationInstances>\\r\\n        <GlobalAccelerationInstance>\\r\\n            <ChargeType>PrePaid</ChargeType>\\r\\n            <GlobalAccelerationInstanceId>ga-bp1x99kj7kl1ziw5x****</GlobalAccelerationInstanceId>\\r\\n            <HasReservationData>false</HasReservationData>\\r\\n            <Description></Description>\\r\\n            <BackendServers>\\r\\n                <BackendServer>\\r\\n                    <ServerId>i-2zeg83zvn5d4ed4y****</ServerId>\\r\\n                    <RegionId>cn-beijing</RegionId>\\r\\n                    <ServerType>EcsInstance</ServerType>\\r\\n                    <ServerIpAddress>172.17.109.xxx</ServerIpAddress>\\r\\n                </BackendServer>\\r\\n            </BackendServers>\\r\\n            <IpAddress>47.98.99.xxx</IpAddress>\\r\\n            <InternetChargeType>PayByBandwidth</InternetChargeType>\\r\\n            <Name></Name>\\r\\n            <BandwidthType>Exclusive</BandwidthType>\\r\\n            <CreationTime>2018-07-05T03:39:31Z</CreationTime>\\r\\n            <Status>InUse</Status>\\r\\n            <ServiceLocation>china-mainland</ServiceLocation>\\r\\n            <RegionId>cn-hangzhou</RegionId>\\r\\n            <AccelerationLocation>china-mainland</AccelerationLocation>\\r\\n            <OperationLocks></OperationLocks>\\r\\n            <ExpiredTime>2018-08-05T16:00Z</ExpiredTime>\\r\\n            <PublicIpAddresses></PublicIpAddresses>\\r\\n            <Bandwidth>10</Bandwidth>\\r\\n        </GlobalAccelerationInstance>\\r\\n\\t</GlobalAccelerationInstances>\\r\\n</DescribeGlobalAccelerationInstancesResponse>","errorExample":"{\\n  \\"GlobalAccelerationInstances\\": {\\n    \\"GlobalAccelerationInstance\\": [\\n      {\\n        \\"AccelerationLocation\\": \\"china-mainland\\",\\n        \\"BackendServers\\": {\\n          \\"BackendServer\\": [\\n            {\\n              \\"RegionId\\": \\"cn-beijing\\",\\n              \\"ServerId\\": \\"lb-2222222333333333\\",\\n              \\"ServerIpAddress\\": \\"192.168.0.180\\",\\n              \\"ServerType\\": \\"SlbInstance\\"\\n            }\\n          ]\\n        },\\n        \\"Bandwidth\\": \\"10\\",\\n        \\"ChargeType\\": \\"PrePaid\\",\\n        \\"CreationTime\\": \\"2017-07-26T03:34:30Z\\",\\n        \\"Description\\": \\"\\",\\n        \\"ExpiredTime\\": \\"2017-08-26T16:00Z\\",\\n        \\"GlobalAccelerationInstanceId\\": \\"ga-aabbccddaabb\\",\\n        \\"InternetChargeType\\": \\"PayByBandwidth\\",\\n        \\"IpAddress\\": \\"12.34.56.78\\",\\n        \\"Name\\": \\"\\",\\n        \\"OperationLocks\\": {\\n          \\"LockReason\\": []\\n        },\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"ServiceLocation\\": \\"asia-pacific\\",\\n        \\"Status\\": \\"InUse\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"0487FCA3-E152-4726-8A17-25F69E03ADB0\\",\\n  \\"TotalCount\\": 1\\n}"}]',
      'title' => '查询已创建的全球加速实例列表',
      'summary' => '查询已创建的全球加速实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeServerRelatedGlobalAccelerationInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全球加速实例所在的地域。 

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 后端服务实例的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'i-12s3sdf****',
          ),
        ),
        2 => 
        array (
          'name' => 'ServerType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务实例的类型，取值： 

- **EcsInstance**（默认值）：ECS实例

- **SlbInstance**：负载均衡实例  
          ',
            'type' => 'string',
            'required' => false,
            'example' => 'EcsInstance',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A8252014-D8DE-4D85-AF35-AFEXXXXXXX',
              ),
              'GlobalAccelerationInstances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GlobalAccelerationInstance' => 
                  array (
                    'description' => '全球加速实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServerIpAddress' => 
                        array (
                          'description' => '后端服务IP地址。',
                          'type' => 'string',
                          'example' => '172.24.52.234',
                        ),
                        'GlobalAccelerationInstanceId' => 
                        array (
                          'description' => '全球加速实例 ID。',
                          'type' => 'string',
                          'example' => 'ga-t4nku6vv9****',
                        ),
                        'IpAddress' => 
                        array (
                          'description' => '全球加速实例公网 IP。',
                          'type' => 'string',
                          'example' => '12.34.56.78',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '全球加速实例所属地域ID。
',
                          'type' => 'string',
                          'example' => 'ap-southeast-1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBackendServerId.NotInVPC',
            'errorMessage' => 'The specified BackendServerId is not in VPC.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBackendServerType.NotFound',
            'errorMessage' => 'The specified BackendServerType is not supported.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified region is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBackendServerId.NotFound',
            'errorMessage' => 'The specified BackendServerId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A8252014-D8DE-4D85-AF35-AFEXXXXXXX\\",\\n  \\"GlobalAccelerationInstances\\": {\\n    \\"GlobalAccelerationInstance\\": [\\n      {\\n        \\"ServerIpAddress\\": \\"172.24.52.234\\",\\n        \\"GlobalAccelerationInstanceId\\": \\"ga-t4nku6vv9****\\",\\n        \\"IpAddress\\": \\"12.34.56.78\\",\\n        \\"RegionId\\": \\"ap-southeast-1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<DescribeServerRelatedGlobalAccelerationInstancesResponse>\\n\\t<GlobalAccelerationInstances>\\n\\t\\t<GlobalAccelerationInstance>\\n\\t\\t\\t<GlobalAccelerationInstanceId>ga-t4nku6vv9xxxxxxxxx</GlobalAccelerationInstanceId>\\n\\t\\t\\t<IpAddress>12.34.56.78</IpAddress>\\n\\t\\t\\t<RegionId>ap-southeast-1</RegionId>\\n\\t\\t\\t<ServerIpAddress>172.24.52.234</ServerIpAddress>\\n\\t\\t</GlobalAccelerationInstance>\\n\\t</GlobalAccelerationInstances>\\n\\t<RequestId>A8252014-D8DE-4D85-AF35-AFEXXXXXXX</RequestId>\\n</DescribeServerRelatedGlobalAccelerationInstancesResponse>"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<DescribeServerRelatedGlobalAccelerationInstancesResponse>\\n\\t<GlobalAccelerationInstances>\\n\\t\\t<GlobalAccelerationInstance>\\n\\t\\t\\t<GlobalAccelerationInstanceId>ga-t4nku6vv9****</GlobalAccelerationInstanceId>\\n\\t\\t\\t<IpAddress>12.34.56.78</IpAddress>\\n\\t\\t\\t<RegionId>ap-southeast-1</RegionId>\\n\\t\\t\\t<ServerIpAddress>172.24.52.234</ServerIpAddress>\\n\\t\\t</GlobalAccelerationInstance>\\n\\t</GlobalAccelerationInstances>\\n\\t<RequestId>A8252014-D8DE-4D85-AF35-AFEXXXXXXX</RequestId>\\n</DescribeServerRelatedGlobalAccelerationInstancesResponse>","errorExample":"{\\n  \\"GlobalAccelerationInstances\\": {\\n    \\"GlobalAccelerationInstance\\": [\\n      {\\n        \\"GlobalAccelerationInstanceId\\": \\"ga-t4nku6vv9xxxxxxxxx\\",\\n        \\"IpAddress\\": \\"12.34.56.78\\",\\n        \\"RegionId\\": \\"ap-southeast-1\\",\\n        \\"ServerIpAddress\\": \\"172.24.52.234\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"A8252014-D8DE-4D85-AF35-AFEXXXXXXX\\"\\n}"}]',
      'title' => '查询指定后端服务器绑定的全球加速实例',
      'summary' => '查询指定后端服务器绑定的全球加速实例。',
      'description' => '> 该接口仅支持查询带宽独享型实例。 ',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveGlobalAccelerationInstanceIp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽共享型实例所在的地域。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'GlobalAccelerationInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 带宽共享型实例ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'ga-m5ex47zwya1sejyni****',
          ),
        ),
        2 => 
        array (
          'name' => 'IpInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的ID。 

您可以通过调用[DescribeEipAddresses](~~36018~~)接口查询EIP实例的ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-bp13e9i2qst4g6jzi****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BE01CD7-5A50-472D-AC14-CA181C5C03BE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IpInstanceId.NotBandwidthPackage',
            'errorMessage' => 'The specified IpInstanceId does not in bandwidthPackage.',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.ip',
            'errorMessage' => 'The specified BandwidthPackageId has eip in it.',
          ),
          2 => 
          array (
            'errorCode' => 'EIP_BIND_NATGATEWAY',
            'errorMessage' => 'The eip have bind natgateway.',
          ),
          3 => 
          array (
            'errorCode' => 'IpInstanceId.StatusNotAvailable',
            'errorMessage' => 'The specified Eip Status is not Available, Cannot remove from GlobalAcceleration.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationUnsupported.IpNotInCbwp',
            'errorMessage' => 'The specified eip is not in commonbandwidthPackage.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The specified RegionId does not exist in our records.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackageId does not exist in our records.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BE01CD7-5A50-472D-AC14-CA181C5C03BE\\"\\n}","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<RemoveGlobalAccelerationInstanceIpResponse>\\n    <RequestId>01FDDD49-C4B7-4D2A-A8E5-A93915C450A6</RequestId>\\n</RemoveGlobalAccelerationInstanceIpResponse>"},{"type":"xml","example":"<RemoveGlobalAccelerationInstanceIpResponse>\\r\\n    <RequestId>01FDDD49-C4B7-4D2A-A8E5-A93915C450A6</RequestId>\\r\\n</RemoveGlobalAccelerationInstanceIpResponse>","errorExample":"{\\n    \\"RequestId\\": \\"01FDDD49-C4B7-4D2A-A8E5-A93915C450A6\\"\\n}"}]',
      'title' => '从带宽共享实例中移除EIP',
      'summary' => '调用RemoveGlobalAccelerationInstanceIp接口从带宽共享实例中移除EIP。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVpcGatewayEndpoint' => 
    array (
      'summary' => '调用CreateVpcGatewayEndpoint接口创建网关终端节点。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '专有网络实例ID',
            'description' => '要创建网关终端节点的VPC ID。

该VPC必须与网关终端节点在同一个地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp1gsk7h12ew7oegk****',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关节点服务的名称',
            'description' => '终端节点服务名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'com.aliyun.cn-hangzhou.oss',
          ),
        ),
        2 => 
        array (
          'name' => 'PolicyDocument',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '访问云服务的权限控制策略',
            'description' => '云服务的访问策略。

关于访问策略的语法和结构，请参见[权限策略语法和结构](~~93739~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{   "Version" : "1",   "Statement" : [ {     "Effect" : "Allow",     "Resource" : [ "*" ],     "Action" : [ "*" ],     "Principal" : [ "*" ]   } ] }',
          ),
        ),
        3 => 
        array (
          'name' => 'EndpointName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关节点名称',
            'description' => '网关终端节点的名称。

名称的长度在1~128个字符之间。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'EndpointDescription',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关节点描述',
            'description' => '网关终端节点的描述信息。

描述信息的长度在1~255个字符之间。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等参数',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        6 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否只预检此次请求',
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会创建网关终端节点。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并创建网关终端节点。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关终端节点所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要创建的网关终端节点的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62CFC815-E08A-5CF4-92D1-54273EC9E406',
              ),
              'EndpointId' => 
              array (
                'description' => '网关终端节点实例ID。',
                'type' => 'string',
                'example' => 'vpce-bp1w1dmdqjpwul0v3****',
              ),
              'ServiceName' => 
              array (
                'description' => '终端节点服务名称。',
                'type' => 'string',
                'example' => 'com.aliyun.cn-hangzhou.oss',
              ),
              'EndpointName' => 
              array (
                'description' => '网关终端节点的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'CreationTime' => 
              array (
                'description' => '网关终端节点的创建时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                'type' => 'string',
                'example' => '2021-08-27T01:58:37Z',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '网关终端节点所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxazb4ph****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentOperation',
            'errorMessage' => 'The operation is failed because of concurrent operation.',
          ),
          1 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.PolicyDocument',
            'errorMessage' => 'The param of PolicyDocument is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.GatewayEndpointName',
            'errorMessage' => 'The param of GatewayEndpointName is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.GatewayEndpointDescription',
            'errorMessage' => 'The param of GatewayEndpointDescription is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyExist.GatewayEndpoint',
            'errorMessage' => 'The specified resource gateway endpoint is already exist.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.ServiceName',
            'errorMessage' => 'The specified resource service name is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'ResourceNotFound.VpcId',
            'errorMessage' => 'The specified resource vpc is not found.',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.OperateShareResource',
            'errorMessage' => 'The operation is failed because of shared vpc.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The status of vpc [%s] is incorrect.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.CenStatus',
            'errorMessage' => 'The status of vpc cenStatus [%s] is incorrect.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.VpcIpv6Disabled',
            'errorMessage' => 'The operation is failed because of VpcIpv6Disabled.',
          ),
          12 => 
          array (
            'errorCode' => 'UnsupportedFeature.GatewayEndpoint',
            'errorMessage' => 'The feature of gatewayEndpoint is not supported for %s.',
          ),
          13 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'System is busy, please try again later.',
          ),
          14 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationDenied.PolicyDocument',
            'errorMessage' => 'The gatewayEndpoint does not support policy.',
          ),
          16 => 
          array (
            'errorCode' => 'MissingParam.PolicyDocument',
            'errorMessage' => 'The param of PolicyDocument is missing.',
          ),
          17 => 
          array (
            'errorCode' => 'OperationDenied.NotAuthorized',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidPolicy.WrongFormat',
            'errorMessage' => 'Invalid input policy format.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListVpcGatewayEndpoints',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"62CFC815-E08A-5CF4-92D1-54273EC9E406\\",\\n  \\"EndpointId\\": \\"vpce-bp1w1dmdqjpwul0v3****\\",\\n  \\"ServiceName\\": \\"com.aliyun.cn-hangzhou.oss\\",\\n  \\"EndpointName\\": \\"test\\",\\n  \\"CreationTime\\": \\"2021-08-27T01:58:37Z\\",\\n  \\"ResourceGroupId\\": \\"rg-acfmxazb4ph****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVpcGatewayEndpointResponse>\\n    <RequestId>62CFC815-E08A-5CF4-92D1-54273EC9E406</RequestId>\\n    <EndpointId>vpce-bp1w1dmdqjpwul0v3****</EndpointId>\\n    <ServiceName>com.aliyun.cn-hangzhou.oss</ServiceName>\\n    <EndpointName>test</EndpointName>\\n    <CreationTime>2021-08-27T01:58:37Z</CreationTime>\\n    <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n</CreateVpcGatewayEndpointResponse>","errorExample":""}]',
      'title' => '创建网关终端节点',
      'description' => '- **CreateVpcGatewayEndpoint**接口属于异步接口，即系统返回一个**EndpointId**，但该网关终端节点尚未创建成功，系统后台的创建任务仍在进行。您可以调用[GetDhcpOptionsSet](~~189208~~)查询网关终端节点的创建状态：
    - 当网关终端节点处于**Creating**状态时，表示网关终端节点正在创建中。
    - 当网关终端节点处于**Created**状态时，表示网关终端节点创建成功。
- **CreateVpcGatewayEndpoint**接口不支持针对同一个终端节点服务并发创建网关终端节点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVpcGatewayEndpoint' => 
    array (
      'summary' => '调用DeleteVpcGatewayEndpoint接口删除网关终端节点。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndpointId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例ID',
            'description' => '网关终端节点实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpce-bp1w1dmdqjpwul0v3****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等参数',
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符，且不能超过64个字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否只预检此次请求',
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会删除网关终端节点。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并删除网关终端节点。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '网关终端节点所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A1122D0F-7B3B-5445-BB19-17F27F97FE1C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentOperation',
            'errorMessage' => 'The operation is failed because of concurrent operation.',
          ),
          1 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayEndpoint',
            'errorMessage' => 'The specified resource gateway endpoint is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.GatewayEndpoint',
            'errorMessage' => 'The status of GatewayEndpoint [%s] is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.Association',
            'errorMessage' => 'The specified resource of [%s] depends on [%s], so the operation cannot be completed.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The regionId provided does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListVpcGatewayEndpoints',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A1122D0F-7B3B-5445-BB19-17F27F97FE1C\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVpcGatewayEndpointResponse>\\r\\n<RequestId>A1122D0F-7B3B-5445-BB19-17F27F97FE1C</RequestId>\\r\\n</DeleteVpcGatewayEndpointResponse>","errorExample":""}]',
      'title' => '删除网关终端节点',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateVpcGatewayEndpointAttribute' => 
    array (
      'summary' => '调用UpdateVpcGatewayEndpointAttribute接口修改网关终端节点的配置信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndpointId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例ID',
            'description' => '需要修改信息的网关终端节点的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpce-bp1w1dmdqjpwul0v3****',
          ),
        ),
        1 => 
        array (
          'name' => 'EndpointName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关节点名称',
            'description' => '网关终端节点需要被修改的名称。

名称的长度在1~128个字符之间。',
            'type' => 'string',
            'required' => false,
            'example' => 'update',
          ),
        ),
        2 => 
        array (
          'name' => 'EndpointDescription',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关节点描述',
            'description' => '网关终端节点需要被修改的描述信息。

描述信息的长度在1~255个字符之间。',
            'type' => 'string',
            'required' => false,
            'example' => 'updateendpoint',
          ),
        ),
        3 => 
        array (
          'name' => 'PolicyDocument',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '访问云服务的权限控制策略',
            'description' => '云服务的访问策略。

关于访问策略的语法和结构，请参见[权限策略语法和结构](~~93739~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{   "Version" : "1",   "Statement" : [ {     "Effect" : "Allow",     "Resource" : [ "*" ],     "Action" : [ "*" ],     "Principal" : [ "*" ]   } ] }',
          ),
        ),
        4 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等参数',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '0c593ea1-3bea-11e9-b96b-88e9fe637760',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否只预检此次请求',
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会修改网关终端节点的信息。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并修改网关终端节点的信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '需要修改信息的网关终端节点所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9654534-5A38-5545-813F-0403D49042FB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentOperation',
            'errorMessage' => 'The operation is failed because of concurrent operation.',
          ),
          1 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayEndpoint',
            'errorMessage' => 'The specified resource gateway endpoint is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.PolicyDocument',
            'errorMessage' => 'The param of PolicyDocument is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.GatewayEndpointName',
            'errorMessage' => 'The param of GatewayEndpointName is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.GatewayEndpointDescription',
            'errorMessage' => 'The param of GatewayEndpointDescription is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'System is busy, please try again later.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The regionId provided does not exist in our records.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationDenied.PolicyDocument',
            'errorMessage' => 'The gatewayEndpoint does not support policy.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.GatewayEndpoint',
            'errorMessage' => 'The status of GatewayEndpoint [%s] is incorrect.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidPolicy.WrongFormat',
            'errorMessage' => 'Invalid input policy format.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E9654534-5A38-5545-813F-0403D49042FB\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateVpcGatewayEndpointAttributeResponse>\\n    <RequestId>E9654534-5A38-5545-813F-0403D49042FB</RequestId>\\n</UpdateVpcGatewayEndpointAttributeResponse>","errorExample":""}]',
      'title' => '修改网关终端节点的配置信息',
      'description' => '- **UpdateVpcGatewayEndpointAttribute**接口属于异步接口，即系统会先返回一个**RequestId**，但该网关终端节点的配置信息并未修改完成，系统后台的修改任务仍在进行。您可以调用[GetVpcGatewayEndpointAttribute](~~311017~~)查询网关终端节点的状态。

    - 当网关终端节点处于**Updating**状态时，表示正在修改中。

    - 当网关终端节点处于**Created**状态时，表示修改完成。

- **UpdateVpcGatewayEndpointAttribute**接口不支持并发修改同一个网关终端节点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListVpcEndpointServicesByEndUser' => 
    array (
      'summary' => '调用ListVpcEndpointServicesByEndUser查询可使用的终端节点服务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的终端节点服务的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.aliyun.cn-hangzhou.oss',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要查询的网关终端节点所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0AB1129F-32C1-5E4D-9E22-E4A859CA46EB',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'Services' => 
              array (
                'description' => '查询到可使用的终端节点服务列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询到可使用的终端节点服务列表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ServiceId' => 
                    array (
                      'description' => '终端节点服务的实例ID。',
                      'type' => 'string',
                      'example' => 'vpces-m5enwdmilo210aibo9****',
                    ),
                    'ServiceName' => 
                    array (
                      'description' => '终端节点服务的名称。',
                      'type' => 'string',
                      'example' => 'com.aliyun.cn-hangzhou.oss',
                    ),
                    'DefaultPolicyDocument' => 
                    array (
                      'description' => '默认访问策略。',
                      'type' => 'string',
                      'example' => '{   \\"Version\\" : \\"1\\",   \\"Statement\\" : [ {     \\"Effect\\" : \\"Allow\\",     \\"Action\\" : \\"*\\",     \\"Principal\\" : \\"*\\",     \\"Resource\\" : \\"*\\"   } ] }',
                    ),
                    'SupportPolicy' => 
                    array (
                      'description' => '终端节点服务是否支持设置访问策略。取值：

- **false**：不支持设置访问策略。
- **true**：支持设置访问策略。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'ServiceDomain' => 
                    array (
                      'description' => '终端节点服务所属云产品在查询地域的域名。',
                      'type' => 'string',
                      'example' => 'oss-admin.aliyuncs.com',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.EndpointServiceId',
            'errorMessage' => 'The specified resource gateway endpoint service is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0AB1129F-32C1-5E4D-9E22-E4A859CA46EB\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"MaxResults\\": 20,\\n  \\"Services\\": [\\n    {\\n      \\"ServiceId\\": \\"vpces-m5enwdmilo210aibo9****\\",\\n      \\"ServiceName\\": \\"com.aliyun.cn-hangzhou.oss\\",\\n      \\"DefaultPolicyDocument\\": \\"{   \\\\\\\\\\\\\\"Version\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",   \\\\\\\\\\\\\\"Statement\\\\\\\\\\\\\\" : [ {     \\\\\\\\\\\\\\"Effect\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\"Allow\\\\\\\\\\\\\\",     \\\\\\\\\\\\\\"Action\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",     \\\\\\\\\\\\\\"Principal\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",     \\\\\\\\\\\\\\"Resource\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\"*\\\\\\\\\\\\\\"   } ] }\\",\\n      \\"SupportPolicy\\": true,\\n      \\"ServiceDomain\\": \\"oss-admin.aliyuncs.com\\"\\n    }\\n  ],\\n  \\"TotalCount\\": \\"2\\"\\n}","errorExample":""},{"type":"xml","example":"<ListVpcEndpointServicesByEndUserResponse>\\n    <RequestId>0AB1129F-32C1-5E4D-9E22-E4A859CA46EB</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <MaxResults>20</MaxResults>\\n    <Services>\\n        <ServiceId>vpces-m5enwdmilo210aibo9****</ServiceId>\\n        <ServiceName>com.aliyun.cn-hangzhou.oss</ServiceName>\\n        <DefaultPolicyDocument>{   \\\\\\"Version\\\\\\" : \\\\\\"1\\\\\\",   \\\\\\"Statement\\\\\\" : [ {     \\\\\\"Effect\\\\\\" : \\\\\\"Allow\\\\\\",     \\\\\\"Action\\\\\\" : \\\\\\"*\\\\\\",     \\\\\\"Principal\\\\\\" : \\\\\\"*\\\\\\",     \\\\\\"Resource\\\\\\" : \\\\\\"*\\\\\\"   } ] }</DefaultPolicyDocument>\\n        <SupportPolicy>true</SupportPolicy>\\n        <ServiceDomain>oss-admin.aliyuncs.com</ServiceDomain>\\n    </Services>\\n</ListVpcEndpointServicesByEndUserResponse>","errorExample":""}]',
      'title' => '查询可使用的终端节点服务',
    ),
    'GetVpcGatewayEndpointAttribute' => 
    array (
      'summary' => '调用GetVpcGatewayEndpointAttribute接口查询网关终端节点的属性。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndpointId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例ID',
            'description' => '网关终端节点实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpce-bp1w1dmdqjpwul0v3****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '网关终端节点所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A1122D0F-7B3B-5445-BB19-17F27F97FE1C',
              ),
              'EndpointId' => 
              array (
                'description' => '网关终端节点实例ID。',
                'type' => 'string',
                'example' => 'vpce-bp1w1dmdqjpwul0v3****',
              ),
              'EndpointName' => 
              array (
                'description' => '网关终端节点的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'EndpointDescription' => 
              array (
                'description' => '网关终端节点的描述信息。',
                'type' => 'string',
                'example' => 'test',
              ),
              'ServiceName' => 
              array (
                'description' => '终端节点服务名称。',
                'type' => 'string',
                'example' => 'com.aliyun.cn-hangzhou.oss',
              ),
              'VpcId' => 
              array (
                'description' => '网关终端节点所在的VPC ID。',
                'type' => 'string',
                'example' => 'vpc-bp1nh86rugg01zol0****',
              ),
              'PolicyDocument' => 
              array (
                'description' => '云服务的访问策略。',
                'type' => 'string',
                'example' => '{"Version" : "1",   "Statement" : [ {     "Effect" : "Allow",     "Resource" : [ "*" ],     "Action" : [ "*" ],     "Principal" : [ "*" ]   } ] }',
              ),
              'CreationTime' => 
              array (
                'description' => '网关终端节点的创建时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                'type' => 'string',
                'example' => '2021-08-27T01:58:37Z',
              ),
              'EndpointStatus' => 
              array (
                'description' => '网关终端节点的状态。取值：

- **Creating**：创建中。

- **Created**：已创建，正常状态。

- **Modifying**：修改中。

- **Associating**：绑定中。

- **Dissociating**：解绑中。

- **Deleting**：删除中。',
                'type' => 'string',
                'example' => 'Created',
              ),
              'RouteTables' => 
              array (
                'description' => '网关终端节点关联的路由表ID。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '网关终端节点关联的路由表ID。',
                  'type' => 'string',
                  'example' => '["vtb-bp1s6g17997knk6a3****", "vtb-bp12qsdjwm37kv679****"]',
                ),
              ),
              'ResourceGroupId' => 
              array (
                'description' => '网关终端节点所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfmxvfvazb4p****',
              ),
              'Tags' => 
              array (
                'description' => '标签列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '标签列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '标签键。',
                      'type' => 'string',
                      'example' => 'FinanceDept',
                    ),
                    'Value' => 
                    array (
                      'description' => '标签值。',
                      'type' => 'string',
                      'example' => 'FinanceJoshua',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayEndpoint',
            'errorMessage' => 'The specified resource gateway endpoint is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A1122D0F-7B3B-5445-BB19-17F27F97FE1C\\",\\n  \\"EndpointId\\": \\"vpce-bp1w1dmdqjpwul0v3****\\",\\n  \\"EndpointName\\": \\"test\\",\\n  \\"EndpointDescription\\": \\"test\\",\\n  \\"ServiceName\\": \\"com.aliyun.cn-hangzhou.oss\\",\\n  \\"VpcId\\": \\"vpc-bp1nh86rugg01zol0****\\",\\n  \\"PolicyDocument\\": \\"{\\\\\\"Version\\\\\\" : \\\\\\"1\\\\\\",   \\\\\\"Statement\\\\\\" : [ {     \\\\\\"Effect\\\\\\" : \\\\\\"Allow\\\\\\",     \\\\\\"Resource\\\\\\" : [ \\\\\\"*\\\\\\" ],     \\\\\\"Action\\\\\\" : [ \\\\\\"*\\\\\\" ],     \\\\\\"Principal\\\\\\" : [ \\\\\\"*\\\\\\" ]   } ] }\\",\\n  \\"CreationTime\\": \\"2021-08-27T01:58:37Z\\",\\n  \\"EndpointStatus\\": \\"Created\\",\\n  \\"RouteTables\\": [\\n    \\"[\\\\\\"vtb-bp1s6g17997knk6a3****\\\\\\", \\\\\\"vtb-bp12qsdjwm37kv679****\\\\\\"]\\"\\n  ],\\n  \\"ResourceGroupId\\": \\"rg-acfmxvfvazb4p****\\",\\n  \\"Tags\\": [\\n    {\\n      \\"Key\\": \\"FinanceDept\\",\\n      \\"Value\\": \\"FinanceJoshua\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetVpcGatewayEndpointAttributeResponse>\\n    <RequestId>A1122D0F-7B3B-5445-BB19-17F27F97FE1C</RequestId>\\n    <EndpointId>vpce-bp1w1dmdqjpwul0v3****</EndpointId>\\n    <EndpointName>test</EndpointName>\\n    <EndpointDescription>test</EndpointDescription>\\n    <ServiceName>com.aliyun.cn-hangzhou.oss</ServiceName>\\n    <VpcId>vpc-bp1nh86rugg01zol0****</VpcId>\\n    <PolicyDocument>{\\"Version\\" : \\"1\\",   \\"Statement\\" : [ {     \\"Effect\\" : \\"Allow\\",     \\"Resource\\" : [ \\"*\\" ],     \\"Action\\" : [ \\"*\\" ],     \\"Principal\\" : [ \\"*\\" ]   } ] }</PolicyDocument>\\n    <CreationTime>2021-08-27T01:58:37Z</CreationTime>\\n    <EndpointStatus>Created</EndpointStatus>\\n    <RouteTables>[\\"vtb-bp1s6g17997knk6a3****\\", \\"vtb-bp12qsdjwm37kv679****\\"]</RouteTables>\\n    <ResourceGroupId>rg-acfmxvfvazb4p****</ResourceGroupId>\\n    <Tags>\\n        <Key>FinanceDept</Key>\\n        <Value>FinanceJoshua</Value>\\n    </Tags>\\n</GetVpcGatewayEndpointAttributeResponse>","errorExample":""}]',
      'title' => '查询网关终端节点的属性',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListVpcGatewayEndpoints' => 
    array (
      'summary' => '调用ListVpcGatewayEndpoints接口查询已创建的网关终端节点的列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndpointId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例ID',
            'description' => '网关终端节点实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpce-bp1i1212ss2whuwyw****',
          ),
        ),
        1 => 
        array (
          'name' => 'EndpointName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例名称',
            'description' => '网关终端节点的名称。

名称的长度在1~128个字符之间。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '后端的服务名称',
            'description' => '终端节点服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.aliyun.cn-hangzhou.oss',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要查询的网关终端节点所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关终端节点所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxvfvazb4p****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。最多支持输入20个标签键。如需传入该值，则不能输入空字符串。

一个标签键最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceDept',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。最多支持输入20个标签值。如需传入该值，可以输入空字符串。

最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'FinanceJoshua',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0AB1129F-32C1-5E4D-9E22-E4A859CA46EB',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'Endpoints' => 
              array (
                'description' => '网关终端节点的列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '网关终端节点的列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EndpointId' => 
                    array (
                      'description' => '网关终端节点实例ID。',
                      'type' => 'string',
                      'example' => 'vpce-bp1i1212ss2whuwyw****',
                    ),
                    'EndpointName' => 
                    array (
                      'description' => '网关终端节点的名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'EndpointDescription' => 
                    array (
                      'description' => '网关终端节点的描述信息。',
                      'type' => 'string',
                      'example' => 'test_description',
                    ),
                    'ServiceName' => 
                    array (
                      'description' => '终端节点服务名称。',
                      'type' => 'string',
                      'example' => 'com.aliyun.cn-hangzhou.oss',
                    ),
                    'VpcId' => 
                    array (
                      'description' => '网关终端节点所在的VPC ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1gsk7h12ew7oegk****',
                    ),
                    'PolicyDocument' => 
                    array (
                      'description' => '云服务的访问策略。

关于访问策略的语法和结构，请参见[权限策略语法和结构](~~93739~~)。',
                      'type' => 'string',
                      'example' => '{\\n  \\"Version\\": \\"1\\",\\n  \\"Statement\\": [\\n    {\\n      \\"Effect\\": \\"Allow\\",\\n      \\"Action\\": \\"*\\",\\n      \\"Principal\\": \\"*\\",\\n      \\"Resource\\": \\"*\\"\\n    }\\n  ]\\n}',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '网关终端节点的创建时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2021-09-08T08:43:04Z',
                    ),
                    'EndpointStatus' => 
                    array (
                      'description' => '网关终端节点的状态。取值：

- **Creating**：创建中。
- **Created**：已创建，正常状态。
- **Modifying**：修改中。
- **Associating**：绑定中。
- **Dissociating**：解绑中。
- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Created',
                    ),
                    'AssociatedRouteTables' => 
                    array (
                      'description' => '网关终端节点关联的路由表ID。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '网关终端节点关联的路由表ID。',
                        'type' => 'string',
                        'example' => 'vtb-bp1sme72jnuodvyx7****',
                      ),
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '网关终端节点所属的资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-acfmxvfvazb4p****',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'FinanceDept',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'FinanceJoshua',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'MaxResults' => 
              array (
                'title' => '本次请求最大数量',
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The param of MaxResults is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'Specified value of VpcId is not found in our record.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0AB1129F-32C1-5E4D-9E22-E4A859CA46EB\\",\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TotalCount\\": 10,\\n  \\"Endpoints\\": [\\n    {\\n      \\"EndpointId\\": \\"vpce-bp1i1212ss2whuwyw****\\",\\n      \\"EndpointName\\": \\"test\\",\\n      \\"EndpointDescription\\": \\"test_description\\",\\n      \\"ServiceName\\": \\"com.aliyun.cn-hangzhou.oss\\",\\n      \\"VpcId\\": \\"vpc-bp1gsk7h12ew7oegk****\\",\\n      \\"PolicyDocument\\": \\"{\\\\\\\\n  \\\\\\\\\\\\\\"Version\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\"Statement\\\\\\\\\\\\\\": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\"Effect\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"Allow\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"Principal\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"Resource\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"*\\\\\\\\\\\\\\"\\\\\\\\n    }\\\\\\\\n  ]\\\\\\\\n}\\",\\n      \\"CreationTime\\": \\"2021-09-08T08:43:04Z\\",\\n      \\"EndpointStatus\\": \\"Created\\",\\n      \\"AssociatedRouteTables\\": [\\n        \\"vtb-bp1sme72jnuodvyx7****\\"\\n      ],\\n      \\"ResourceGroupId\\": \\"rg-acfmxvfvazb4p****\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"FinanceDept\\",\\n          \\"Value\\": \\"FinanceJoshua\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"MaxResults\\": 20\\n}","errorExample":""},{"type":"xml","example":"<ListVpcGatewayEndpointsResponse>\\n    <RequestId>0AB1129F-32C1-5E4D-9E22-E4A859CA46EB</RequestId>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TotalCount>10</TotalCount>\\n    <Endpoints>\\n        <EndpointId>vpce-bp1i1212ss2whuwyw****</EndpointId>\\n        <EndpointName>test</EndpointName>\\n        <EndpointDescription>test_description</EndpointDescription>\\n        <ServiceName>com.aliyun.cn-hangzhou.oss</ServiceName>\\n        <VpcId>vpc-bp1gsk7h12ew7oegk****</VpcId>\\n        <PolicyDocument>{\\\\n  \\\\\\"Version\\\\\\": \\\\\\"1\\\\\\",\\\\n  \\\\\\"Statement\\\\\\": [\\\\n    {\\\\n      \\\\\\"Effect\\\\\\": \\\\\\"Allow\\\\\\",\\\\n      \\\\\\"Action\\\\\\": \\\\\\"*\\\\\\",\\\\n      \\\\\\"Principal\\\\\\": \\\\\\"*\\\\\\",\\\\n      \\\\\\"Resource\\\\\\": \\\\\\"*\\\\\\"\\\\n    }\\\\n  ]\\\\n}</PolicyDocument>\\n        <CreationTime>2021-09-08T08:43:04Z</CreationTime>\\n        <EndpointStatus>Created</EndpointStatus>\\n        <AssociatedRouteTables>vtb-bp1sme72jnuodvyx7****</AssociatedRouteTables>\\n        <ResourceGroupId>rg-acfmxvfvazb4p****</ResourceGroupId>\\n        <Tags>\\n            <Key>FinanceDept</Key>\\n            <Value>FinanceJoshua</Value>\\n        </Tags>\\n    </Endpoints>\\n    <MaxResults>20</MaxResults>\\n</ListVpcGatewayEndpointsResponse>","errorExample":""}]',
      'title' => '查询VPC网关端点列表',
    ),
    'AssociateRouteTablesWithVpcGatewayEndpoint' => 
    array (
      'summary' => '调用AssociateRouteTablesWithVpcGatewayEndpoint接口关联路由表与网关终端节点。 ',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndpointId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例ID',
            'description' => '要关联路由表的网关终端节点实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpce-m5e371h5clm3uadih****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '路由表列表',
            'description' => '要关联的路由表ID。**N**的取值范围为**1**~**20**，即一次最多绑定20张路由表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要关联的路由表ID。**N**的取值范围为**1**~**20**，即一次最多绑定20张路由表。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-m5elgtm3aj586iitr****',
            ),
            'required' => true,
            'example' => 'vtb-m5elgtm3aj586iitr****',
            'maxItems' => 20,
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等参数',
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。**ClientToken**只支持ASCII字符，且不能超过64个字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF3898',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否只预检此次请求',
            'description' => '是否只预检此次请求，取值：

- **true**：发送检查请求，不会关联路由表。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。如果检查不通过，则返回对应错误。如果检查通过，会返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后返回2xx HTTP状态码并关联路由表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '要关联路由表的网关终端节点的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '59BDDA2D-FB52-59F9-9DC5-5EA7D6808B8E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentOperation',
            'errorMessage' => 'The operation is failed because of concurrent operation.',
          ),
          1 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayEndpoint',
            'errorMessage' => 'The specified resource gateway endpoint is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.GatewayEndpoint',
            'errorMessage' => 'The status of GatewayEndpoint [%s] is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.ServiceName',
            'errorMessage' => 'The specified resource service name is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified resource prefixList is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteTable',
            'errorMessage' => 'The specified resource routetable is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'Mismatch.VpcAndRouteTable',
            'errorMessage' => 'The vpc and routetable are mismatched.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTable',
            'errorMessage' => 'The status of route table [%s] is incorrect.',
          ),
          9 => 
          array (
            'errorCode' => 'ResourceAlreadyExist.Association',
            'errorMessage' => 'The specified resource of [%s] is already exist.',
          ),
          10 => 
          array (
            'errorCode' => 'VPC_ROUTE_ENTRY_CIDR_BLOCK_DUPLICATE',
            'errorMessage' => 'Specified CIDR block is already exists.',
          ),
          11 => 
          array (
            'errorCode' => 'VPC_SWITCH_STATUS_ERROR',
            'errorMessage' => 'vSwitch status error, %s',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaExceeded.VpcRouteEntryNum',
            'errorMessage' => 'The quota of vpc route entry num is exceeded, usage %s/%s.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.DestinationCidrBlockOverlapWithVSwitch',
            'errorMessage' => 'The operation is failed because of destination CIDR block is in the CIDR of the VSwitch.',
          ),
          14 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'System is busy, please try again later.',
          ),
          15 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The regionId provided does not exist in our records.',
          ),
          17 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The status of vpc [%s] is incorrect.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectStatus.CenStatus',
            'errorMessage' => 'The status of vpc cenStatus [%s] is incorrect.',
          ),
          19 => 
          array (
            'errorCode' => 'UnsupportedFeature.RouterTableType',
            'errorMessage' => 'The type of router table is not supported.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListVpcGatewayEndpoints',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"59BDDA2D-FB52-59F9-9DC5-5EA7D6808B8E\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateRouteTablesWithVpcGatewayEndpointResponse>\\n    <RequestId>59BDDA2D-FB52-59F9-9DC5-5EA7D6808B8E</RequestId>\\n</AssociateRouteTablesWithVpcGatewayEndpointResponse>","errorExample":""}]',
      'title' => '关联路由表与网关终端节点',
      'description' => '在调用本接口关联路由表与网关终端节点时，请了解以下内容：

- 要关联路由表的网关终端节点实例不能处于**Creating**（创建中）、**Modifying**（修改中）、**Associating**（绑定中）、**Dissociating**（解绑中）、**Deleting**（删除中）等中间状态。
- 要关联的路由表不能处于**Creating**（创建中）、**Modifying**（修改中）、**Associating**（绑定中）、**Dissociating**（解绑中）、**Deleting**（删除中）等中间状态。
- 要关联的路由表和网关终端节点必须属于同一个VPC。
- 要关联的路由表不能是被共享的。
- 不支持关联VBR路由表。
- 一次最多关联20张路由表。
- **AssociateRouteTablesWithVpcGatewayEndpoint**接口属于异步接口，即系统返回一个实例ID，但该路由表与网关终端节点尚未绑定成功，系统后台的绑定任务仍在进行。您可以调用[GetVpcGatewayEndpointAttribute](~~311017~~)查询路由表与网关终端节点的绑定状态：
    - 当路由表与网关终端节点处于**Associating**状态时，表示路由表与网关终端节点正在绑定中。
    - 当路由表与网关终端节点处于**Created**状态时，表示路由表与网关终端节点绑定成功。
- **AssociateRouteTablesWithVpcGatewayEndpoint**接口不支持并发关联同一个路由表与网关终端节点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DissociateRouteTablesFromVpcGatewayEndpoint' => 
    array (
      'summary' => '调用DissociateRouteTablesFromVpcGatewayEndpoint接口将网关终端节点与路由表解绑。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EndpointId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'VPC网关实例ID',
            'description' => '网关终端节点实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpce-bp11cwae3p6z7ftbm****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '路由表列表',
            'description' => '路由表列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'VPC路由表的ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-m5elgtm3aj586iitr****',
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等参数',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => 'TF-DissociateRouteTablesFromVpcGatewayEndpoint-1634369235-8f****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否只预检此次请求',
            'description' => '是否检测此次请求。取值：

- **true**：发送检查请求。
- **false**（默认值）：发送正常请求。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '终端节点所属的地域ID。您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '30F711D5-E7E2-5D42-A247-0FA7288BEAAA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentOperation',
            'errorMessage' => 'The operation is failed because of concurrent operation.',
          ),
          1 => 
          array (
            'errorCode' => 'IdempotentParameterMismatch',
            'errorMessage' => 'The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.GatewayEndpoint',
            'errorMessage' => 'The specified resource gateway endpoint is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.GatewayEndpoint',
            'errorMessage' => 'The status of GatewayEndpoint [%s] is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteTable',
            'errorMessage' => 'The specified resource routetable is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTable',
            'errorMessage' => 'The status of route table [%s] is incorrect.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.Association',
            'errorMessage' => 'The specified resource gateway endpoint is not associated.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteEntry',
            'errorMessage' => 'Some route entry status blocked this operation.',
          ),
          8 => 
          array (
            'errorCode' => 'Forbbiden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidRegionId.NotFound',
            'errorMessage' => 'The regionId provided does not exist in our records.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.CenStatus',
            'errorMessage' => 'The CenStatus of Vpc is incorrect.',
          ),
          11 => 
          array (
            'errorCode' => 'ResourceNotFound.RouteEntry',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Vpc::2016-04-28::ListVpcGatewayEndpoints',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 10,
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"30F711D5-E7E2-5D42-A247-0FA7288BEAAA\\"\\n}","type":"json"}]',
      'title' => '将网关终端节点与路由表解绑',
    ),
    'MoveResourceGroup' => 
    array (
      'summary' => '调用MoveResourceGroup接口修改云资源所属的资源组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改资源组的云资源的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-hp31psbg8ec3023s6****',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改资源组的云资源类型，取值：

- **Vpc**：专有网络
- **Eip**：弹性公网IP
- **BandwidthPackage**：共享带宽
- **PrefixList**：前缀列表
- **PublicIpAddressPool**：地址池
- **FlowLog**：流日志
- **HaVip**：高可用虚拟IP
- **TrafficMirrorFilter**：流量镜像筛选条件
- **TrafficMirrorSession**：流量镜像会话
- **IPv4Gateway**：IPv4网关
- **IPv6Gateway**：IPv6网关
- **DhcpOptionsSet**：DHCP选项集
- **GatewayEndpoint**：网关终端节点',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc',
          ),
        ),
        2 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要移入云资源实例的资源组ID。

> 资源组是在阿里云账号下进行资源分组管理的一种机制，资源组能够帮助您解决单个云账号内的资源分组和授权管理等复杂性问题。更多信息，请参见[什么是资源管理](~~94475~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'rg-acfm3peow3k****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云资源所属的地域ID。


您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidResourceGroupId',
            'errorMessage' => 'The specified ResourceGroupId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidResourceId.NotFound',
            'errorMessage' => 'The specified ResourceId does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.ResourceType',
            'errorMessage' => 'Invalid Resource Type value.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.InstanceStatusNotAllowed',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The status of %s [%s] is incorrect.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBandwidthPackageId.NotFound',
            'errorMessage' => 'The specified bandwidthPackage resourceId does not exist in our records.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F\\"\\n}","errorExample":""},{"type":"xml","example":"<MoveResourceGroupResponse>\\n    <RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n</MoveResourceGroupResponse>","errorExample":""}]',
      'title' => '修改云资源所属的资源组',
    ),
    'ChangeResourceGroup' => 
    array (
      'summary' => '调用ChangeResourceGroup接口修改物理专线资源所属的资源组。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '',
            'description' => '要替换的新的资源组ID。

> 资源组是在阿里云账号下进行资源分组管理的一种机制，资源组能够帮助您解决单个云账号内的资源分组和授权管理等复杂性问题。更多信息，请参见[什么是资源管理](~~94475~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'rg-bp1drpcfz9srr393h****',
            'enum' => 
            array (
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：
- **PHYSICALCONNECTION**：表示高速通道专线实例。
- **VIRTUALBORDERROUTER**：表示边界路由器。
- **ROUTERINTERFACE**：表示VBR上连。',
            'type' => 'string',
            'required' => true,
            'example' => 'PHYSICALCONNECTION',
            'enum' => 
            array (
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '',
            'description' => '待修改资源组的物理专线资源ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'pc-bp16qjewdsunr41m1****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的资源组所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求ID。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B45',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceType.Unknown',
            'errorMessage' => 'Unknown ResourceType.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified instance id does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidResourceId.NotFound',
            'errorMessage' => 'This resourceId already has flowlog instance existed.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B45\\"\\n}","errorExample":""},{"type":"xml","example":"<ChangeResourceGroupResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B45</RequestId>\\n</ChangeResourceGroupResponse>","errorExample":""}]',
      'title' => '修改物理专线资源所属的资源组',
      'description' => '**ChangeResourceGroup**接口不支持在同一个物理专线实例内并发修改物理专线资源所属的资源组。',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-nanjing',
      'endpoint' => 'vpc.cn-nanjing.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'vpc.cn-qingdao.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'vpc.cn-beijing.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'vpc.cn-zhangjiakou.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-zhengzhou-jva',
      'endpoint' => 'vpc.cn-zhengzhou-jva.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'vpc.cn-huhehaote.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'vpc.cn-wulanchabu.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'vpc.cn-hangzhou.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'vpc.cn-shanghai.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-fuzhou',
      'endpoint' => 'vpc.cn-fuzhou.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'vpc.cn-shenzhen.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'cn-heyuan',
      'endpoint' => 'vpc.cn-heyuan.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'cn-guangzhou',
      'endpoint' => 'vpc.cn-guangzhou.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'vpc.cn-chengdu.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'vpc.cn-hongkong.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'vpc.ap-northeast-1.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'ap-northeast-2',
      'endpoint' => 'vpc.ap-northeast-2.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'vpc.ap-southeast-1.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'vpc.ap-southeast-2.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'vpc.ap-southeast-3.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'vpc.ap-southeast-5.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'ap-southeast-6',
      'endpoint' => 'vpc.ap-southeast-6.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'vpc.us-east-1.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'vpc.us-west-1.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'vpc.eu-west-1.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'vpc.eu-central-1.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'vpc.ap-south-1.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'vpc.me-east-1.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'ap-southeast-7',
      'endpoint' => 'vpc.ap-southeast-7.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'vpc.cn-beijing-finance-1.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'me-central-1',
      'endpoint' => 'vpc.me-central-1.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-wuhan-lr',
      'endpoint' => 'vpc.cn-wuhan-lr.aliyuncs.com',
    ),
  ),
);