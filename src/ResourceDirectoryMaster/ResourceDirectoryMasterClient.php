<?php

declare(strict_types=1);

namespace Dew\Acs\ResourceDirectoryMaster;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result enableResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise enableResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result sendVerificationCodeForEnableRD(array $arguments = [])
 * @method \Http\Promise\Promise sendVerificationCodeForEnableRDAsync($arguments = [])
 * @method \Dew\Acs\Result getResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise getResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result destroyResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise destroyResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result createFolder(array $arguments = [])
 * @method \Http\Promise\Promise createFolderAsync($arguments = [])
 * @method \Dew\Acs\Result getFolder(array $arguments = [])
 * @method \Http\Promise\Promise getFolderAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFolder(array $arguments = [])
 * @method \Http\Promise\Promise deleteFolderAsync($arguments = [])
 * @method \Dew\Acs\Result listFoldersForParent(array $arguments = [])
 * @method \Http\Promise\Promise listFoldersForParentAsync($arguments = [])
 * @method \Dew\Acs\Result updateFolder(array $arguments = [])
 * @method \Http\Promise\Promise updateFolderAsync($arguments = [])
 * @method \Dew\Acs\Result listAncestors(array $arguments = [])
 * @method \Http\Promise\Promise listAncestorsAsync($arguments = [])
 * @method \Dew\Acs\Result createResourceAccount(array $arguments = [])
 * @method \Http\Promise\Promise createResourceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result getAccount(array $arguments = [])
 * @method \Http\Promise\Promise getAccountAsync($arguments = [])
 * @method \Dew\Acs\Result moveAccount(array $arguments = [])
 * @method \Http\Promise\Promise moveAccountAsync($arguments = [])
 * @method \Dew\Acs\Result updateAccount(array $arguments = [])
 * @method \Http\Promise\Promise updateAccountAsync($arguments = [])
 * @method \Dew\Acs\Result listAccounts(array $arguments = [])
 * @method \Http\Promise\Promise listAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result removeCloudAccount(array $arguments = [])
 * @method \Http\Promise\Promise removeCloudAccountAsync($arguments = [])
 * @method \Dew\Acs\Result listAccountsForParent(array $arguments = [])
 * @method \Http\Promise\Promise listAccountsForParentAsync($arguments = [])
 * @method \Dew\Acs\Result getPayerForAccount(array $arguments = [])
 * @method \Http\Promise\Promise getPayerForAccountAsync($arguments = [])
 * @method \Dew\Acs\Result updatePayerForAccount(array $arguments = [])
 * @method \Http\Promise\Promise updatePayerForAccountAsync($arguments = [])
 * @method \Dew\Acs\Result inviteAccountToResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise inviteAccountToResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result acceptHandshake(array $arguments = [])
 * @method \Http\Promise\Promise acceptHandshakeAsync($arguments = [])
 * @method \Dew\Acs\Result getHandshake(array $arguments = [])
 * @method \Http\Promise\Promise getHandshakeAsync($arguments = [])
 * @method \Dew\Acs\Result declineHandshake(array $arguments = [])
 * @method \Http\Promise\Promise declineHandshakeAsync($arguments = [])
 * @method \Dew\Acs\Result cancelHandshake(array $arguments = [])
 * @method \Http\Promise\Promise cancelHandshakeAsync($arguments = [])
 * @method \Dew\Acs\Result listHandshakesForAccount(array $arguments = [])
 * @method \Http\Promise\Promise listHandshakesForAccountAsync($arguments = [])
 * @method \Dew\Acs\Result listHandshakesForResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise listHandshakesForResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result sendVerificationCodeForBindSecureMobilePhone(array $arguments = [])
 * @method \Http\Promise\Promise sendVerificationCodeForBindSecureMobilePhoneAsync($arguments = [])
 * @method \Dew\Acs\Result bindSecureMobilePhone(array $arguments = [])
 * @method \Http\Promise\Promise bindSecureMobilePhoneAsync($arguments = [])
 * @method \Dew\Acs\Result setMemberDeletionPermission(array $arguments = [])
 * @method \Http\Promise\Promise setMemberDeletionPermissionAsync($arguments = [])
 * @method \Dew\Acs\Result setMemberDisplayNameSyncStatus(array $arguments = [])
 * @method \Http\Promise\Promise setMemberDisplayNameSyncStatusAsync($arguments = [])
 * @method \Dew\Acs\Result checkAccountDelete(array $arguments = [])
 * @method \Http\Promise\Promise checkAccountDeleteAsync($arguments = [])
 * @method \Dew\Acs\Result getAccountDeletionCheckResult(array $arguments = [])
 * @method \Http\Promise\Promise getAccountDeletionCheckResultAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAccount(array $arguments = [])
 * @method \Http\Promise\Promise deleteAccountAsync($arguments = [])
 * @method \Dew\Acs\Result getAccountDeletionStatus(array $arguments = [])
 * @method \Http\Promise\Promise getAccountDeletionStatusAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagKeys(array $arguments = [])
 * @method \Http\Promise\Promise listTagKeysAsync($arguments = [])
 * @method \Dew\Acs\Result listTagValues(array $arguments = [])
 * @method \Http\Promise\Promise listTagValuesAsync($arguments = [])
 * @method \Dew\Acs\Result changeAccountEmail(array $arguments = [])
 * @method \Http\Promise\Promise changeAccountEmailAsync($arguments = [])
 * @method \Dew\Acs\Result retryChangeAccountEmail(array $arguments = [])
 * @method \Http\Promise\Promise retryChangeAccountEmailAsync($arguments = [])
 * @method \Dew\Acs\Result cancelChangeAccountEmail(array $arguments = [])
 * @method \Http\Promise\Promise cancelChangeAccountEmailAsync($arguments = [])
 * @method \Dew\Acs\Result addMessageContact(array $arguments = [])
 * @method \Http\Promise\Promise addMessageContactAsync($arguments = [])
 * @method \Dew\Acs\Result sendEmailVerificationForMessageContact(array $arguments = [])
 * @method \Http\Promise\Promise sendEmailVerificationForMessageContactAsync($arguments = [])
 * @method \Dew\Acs\Result sendPhoneVerificationForMessageContact(array $arguments = [])
 * @method \Http\Promise\Promise sendPhoneVerificationForMessageContactAsync($arguments = [])
 * @method \Dew\Acs\Result listMessageContactVerifications(array $arguments = [])
 * @method \Http\Promise\Promise listMessageContactVerificationsAsync($arguments = [])
 * @method \Dew\Acs\Result associateMembers(array $arguments = [])
 * @method \Http\Promise\Promise associateMembersAsync($arguments = [])
 * @method \Dew\Acs\Result disassociateMembers(array $arguments = [])
 * @method \Http\Promise\Promise disassociateMembersAsync($arguments = [])
 * @method \Dew\Acs\Result getMessageContact(array $arguments = [])
 * @method \Http\Promise\Promise getMessageContactAsync($arguments = [])
 * @method \Dew\Acs\Result listMessageContacts(array $arguments = [])
 * @method \Http\Promise\Promise listMessageContactsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMessageContact(array $arguments = [])
 * @method \Http\Promise\Promise deleteMessageContactAsync($arguments = [])
 * @method \Dew\Acs\Result getMessageContactDeletionStatus(array $arguments = [])
 * @method \Http\Promise\Promise getMessageContactDeletionStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateMessageContact(array $arguments = [])
 * @method \Http\Promise\Promise updateMessageContactAsync($arguments = [])
 * @method \Dew\Acs\Result cancelMessageContactUpdate(array $arguments = [])
 * @method \Http\Promise\Promise cancelMessageContactUpdateAsync($arguments = [])
 * @method \Dew\Acs\Result precheckForConsolidatedBillingAccount(array $arguments = [])
 * @method \Http\Promise\Promise precheckForConsolidatedBillingAccountAsync($arguments = [])
 * @method \Dew\Acs\Result enableControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise enableControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result disableControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise disableControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result getControlPolicyEnablementStatus(array $arguments = [])
 * @method \Http\Promise\Promise getControlPolicyEnablementStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result getControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise getControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result listControlPolicies(array $arguments = [])
 * @method \Http\Promise\Promise listControlPoliciesAsync($arguments = [])
 * @method \Dew\Acs\Result updateControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise updateControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result attachControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise attachControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result detachControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise detachControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result listControlPolicyAttachmentsForTarget(array $arguments = [])
 * @method \Http\Promise\Promise listControlPolicyAttachmentsForTargetAsync($arguments = [])
 * @method \Dew\Acs\Result listTargetAttachmentsForControlPolicy(array $arguments = [])
 * @method \Http\Promise\Promise listTargetAttachmentsForControlPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result listTrustedServiceStatus(array $arguments = [])
 * @method \Http\Promise\Promise listTrustedServiceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result registerDelegatedAdministrator(array $arguments = [])
 * @method \Http\Promise\Promise registerDelegatedAdministratorAsync($arguments = [])
 * @method \Dew\Acs\Result deregisterDelegatedAdministrator(array $arguments = [])
 * @method \Http\Promise\Promise deregisterDelegatedAdministratorAsync($arguments = [])
 * @method \Dew\Acs\Result listDelegatedAdministrators(array $arguments = [])
 * @method \Http\Promise\Promise listDelegatedAdministratorsAsync($arguments = [])
 * @method \Dew\Acs\Result listDelegatedServicesForAccount(array $arguments = [])
 * @method \Http\Promise\Promise listDelegatedServicesForAccountAsync($arguments = [])
 */
final class ResourceDirectoryMasterClient extends AcsClient
{
    //
}
