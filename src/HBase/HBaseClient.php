<?php

declare(strict_types=1);

namespace Dew\Acs\HBase;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result createMultiZoneCluster(array $arguments = [])
 * @method \Http\Promise\Promise createMultiZoneClusterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMultiZoneCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteMultiZoneClusterAsync($arguments = [])
 * @method \Dew\Acs\Result resizeMultiZoneClusterDiskSize(array $arguments = [])
 * @method \Http\Promise\Promise resizeMultiZoneClusterDiskSizeAsync($arguments = [])
 * @method \Dew\Acs\Result resizeMultiZoneClusterNodeCount(array $arguments = [])
 * @method \Http\Promise\Promise resizeMultiZoneClusterNodeCountAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeMultiZoneCluster(array $arguments = [])
 * @method \Http\Promise\Promise upgradeMultiZoneClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeMultiZoneAvailableRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeMultiZoneAvailableRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeMultiZoneCluster(array $arguments = [])
 * @method \Http\Promise\Promise describeMultiZoneClusterAsync($arguments = [])
 * @method \Dew\Acs\Result evaluateMultiZoneResource(array $arguments = [])
 * @method \Http\Promise\Promise evaluateMultiZoneResourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDeletedInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDeletedInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise describeIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result createCluster(array $arguments = [])
 * @method \Http\Promise\Promise createClusterAsync($arguments = [])
 * @method \Dew\Acs\Result addUserHdfsInfo(array $arguments = [])
 * @method \Http\Promise\Promise addUserHdfsInfoAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHBaseHaDB(array $arguments = [])
 * @method \Http\Promise\Promise deleteHBaseHaDBAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUserHdfsInfo(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserHdfsInfoAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceMaintainTime(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceMaintainTimeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceType(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceTypeAsync($arguments = [])
 * @method \Dew\Acs\Result enableHBaseueModule(array $arguments = [])
 * @method \Http\Promise\Promise enableHBaseueModuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceName(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceNameAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiskWarningLine(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiskWarningLineAsync($arguments = [])
 * @method \Dew\Acs\Result modifyUIAccountPassword(array $arguments = [])
 * @method \Http\Promise\Promise modifyUIAccountPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceType(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterConnection(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result describeAvailableResource(array $arguments = [])
 * @method \Http\Promise\Promise describeAvailableResourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeSubDomain(array $arguments = [])
 * @method \Http\Promise\Promise describeSubDomainAsync($arguments = [])
 * @method \Dew\Acs\Result queryXpackRelateDB(array $arguments = [])
 * @method \Http\Promise\Promise queryXpackRelateDBAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiskWarningLine(array $arguments = [])
 * @method \Http\Promise\Promise describeDiskWarningLineAsync($arguments = [])
 * @method \Dew\Acs\Result resizeNodeCount(array $arguments = [])
 * @method \Http\Promise\Promise resizeNodeCountAsync($arguments = [])
 * @method \Dew\Acs\Result resizeColdStorageSize(array $arguments = [])
 * @method \Http\Promise\Promise resizeColdStorageSizeAsync($arguments = [])
 * @method \Dew\Acs\Result restartInstance(array $arguments = [])
 * @method \Http\Promise\Promise restartInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result moveResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result purgeInstance(array $arguments = [])
 * @method \Http\Promise\Promise purgeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result renewInstance(array $arguments = [])
 * @method \Http\Promise\Promise renewInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result resizeDiskSize(array $arguments = [])
 * @method \Http\Promise\Promise resizeDiskSizeAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeMinorVersion(array $arguments = [])
 * @method \Http\Promise\Promise upgradeMinorVersionAsync($arguments = [])
 * @method \Dew\Acs\Result xpackRelateDB(array $arguments = [])
 * @method \Http\Promise\Promise xpackRelateDBAsync($arguments = [])
 * @method \Dew\Acs\Result convertInstance(array $arguments = [])
 * @method \Http\Promise\Promise convertInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise modifyIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result createBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise createBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result enableHBaseueBackup(array $arguments = [])
 * @method \Http\Promise\Promise enableHBaseueBackupAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBackupPlanConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyBackupPlanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPlanConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPlanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackups(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupTables(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupTablesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecoverableTimeRange(array $arguments = [])
 * @method \Http\Promise\Promise describeRecoverableTimeRangeAsync($arguments = [])
 * @method \Dew\Acs\Result closeBackup(array $arguments = [])
 * @method \Http\Promise\Promise closeBackupAsync($arguments = [])
 * @method \Dew\Acs\Result openBackup(array $arguments = [])
 * @method \Http\Promise\Promise openBackupAsync($arguments = [])
 * @method \Dew\Acs\Result createRestorePlan(array $arguments = [])
 * @method \Http\Promise\Promise createRestorePlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreFullDetails(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreFullDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreIncrDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreIncrDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreSchemaDetails(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreSchemaDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreTables(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreTablesAsync($arguments = [])
 * @method \Dew\Acs\Result allocatePublicNetworkAddress(array $arguments = [])
 * @method \Http\Promise\Promise allocatePublicNetworkAddressAsync($arguments = [])
 * @method \Dew\Acs\Result releasePublicNetworkAddress(array $arguments = [])
 * @method \Http\Promise\Promise releasePublicNetworkAddressAsync($arguments = [])
 * @method \Dew\Acs\Result describeEndpoints(array $arguments = [])
 * @method \Http\Promise\Promise describeEndpointsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccounts(array $arguments = [])
 * @method \Http\Promise\Promise describeAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result createAccount(array $arguments = [])
 * @method \Http\Promise\Promise createAccountAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountPassword(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAccount(array $arguments = [])
 * @method \Http\Promise\Promise deleteAccountAsync($arguments = [])
 * @method \Dew\Acs\Result grant(array $arguments = [])
 * @method \Http\Promise\Promise grantAsync($arguments = [])
 * @method \Dew\Acs\Result revoke(array $arguments = [])
 * @method \Http\Promise\Promise revokeAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result unTagResources(array $arguments = [])
 * @method \Http\Promise\Promise unTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTags(array $arguments = [])
 * @method \Http\Promise\Promise listTagsAsync($arguments = [])
 * @method \Dew\Acs\Result createServerlessCluster(array $arguments = [])
 * @method \Http\Promise\Promise createServerlessClusterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteServerlessCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteServerlessClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeServerlessCluster(array $arguments = [])
 * @method \Http\Promise\Promise describeServerlessClusterAsync($arguments = [])
 * @method \Dew\Acs\Result createHbaseHaSlb(array $arguments = [])
 * @method \Http\Promise\Promise createHbaseHaSlbAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHbaseHaSlb(array $arguments = [])
 * @method \Http\Promise\Promise deleteHbaseHaSlbAsync($arguments = [])
 * @method \Dew\Acs\Result switchHbaseHaSlb(array $arguments = [])
 * @method \Http\Promise\Promise switchHbaseHaSlbAsync($arguments = [])
 * @method \Dew\Acs\Result createGlobalResource(array $arguments = [])
 * @method \Http\Promise\Promise createGlobalResourceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGlobalResource(array $arguments = [])
 * @method \Http\Promise\Promise deleteGlobalResourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBInstanceUsage(array $arguments = [])
 * @method \Http\Promise\Promise describeDBInstanceUsageAsync($arguments = [])
 * @method \Dew\Acs\Result describeMultiZoneAvailableResource(array $arguments = [])
 * @method \Http\Promise\Promise describeMultiZoneAvailableResourceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClusterDeletionProtection(array $arguments = [])
 * @method \Http\Promise\Promise modifyClusterDeletionProtectionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMultiZoneClusterNodeType(array $arguments = [])
 * @method \Http\Promise\Promise modifyMultiZoneClusterNodeTypeAsync($arguments = [])
 * @method \Dew\Acs\Result queryHBaseHaDB(array $arguments = [])
 * @method \Http\Promise\Promise queryHBaseHaDBAsync($arguments = [])
 * @method \Dew\Acs\Result checkComponentsVersion(array $arguments = [])
 * @method \Http\Promise\Promise checkComponentsVersionAsync($arguments = [])
 * @method \Dew\Acs\Result createHBaseSlbServer(array $arguments = [])
 * @method \Http\Promise\Promise createHBaseSlbServerAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHBaseSlbServer(array $arguments = [])
 * @method \Http\Promise\Promise deleteHBaseSlbServerAsync($arguments = [])
 * @method \Dew\Acs\Result describeColdStorage(array $arguments = [])
 * @method \Http\Promise\Promise describeColdStorageAsync($arguments = [])
 * @method \Dew\Acs\Result getMultimodeCmsUrl(array $arguments = [])
 * @method \Http\Promise\Promise getMultimodeCmsUrlAsync($arguments = [])
 * @method \Dew\Acs\Result listHBaseInstances(array $arguments = [])
 * @method \Http\Promise\Promise listHBaseInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceServiceConfigHistories(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceServiceConfigHistoriesAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceServiceConfigurations(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceServiceConfigurationsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceServiceConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceServiceConfigAsync($arguments = [])
 * @method \Dew\Acs\Result relateDbForHBaseHa(array $arguments = [])
 * @method \Http\Promise\Promise relateDbForHBaseHaAsync($arguments = [])
 * @method \Dew\Acs\Result cancelActiveOperationTasks(array $arguments = [])
 * @method \Http\Promise\Promise cancelActiveOperationTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeActiveOperationTaskType(array $arguments = [])
 * @method \Http\Promise\Promise describeActiveOperationTaskTypeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyActiveOperationTasks(array $arguments = [])
 * @method \Http\Promise\Promise modifyActiveOperationTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeActiveOperationTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeActiveOperationTasksAsync($arguments = [])
 * @method \Dew\Acs\Result switchService(array $arguments = [])
 * @method \Http\Promise\Promise switchServiceAsync($arguments = [])
 */
final class HBaseClient extends AcsClient
{
    //
}
